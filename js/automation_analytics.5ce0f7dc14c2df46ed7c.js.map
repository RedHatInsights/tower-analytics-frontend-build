{"version":3,"sources":["webpack:///./src/Api.js","webpack:///./src/Utilities/useQueryParams.js","webpack:///./src/Components/EmptyState.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Utilities/useApi.js","webpack:///./src/Charts/BaseChart.js","webpack:///./src/Components/NoData.js","webpack:///./src/Components/ApiErrorState.js","webpack:///./src/Components/Toolbar/CategoryDropdown.js","webpack:///./src/Components/Toolbar/CustomDateSelector.js","webpack:///./src/Components/Toolbar/constants.js","webpack:///./src/Components/Toolbar/ToolbarFilterItem.js","webpack:///./src/Components/Toolbar/helpers.js","webpack:///./src/Components/Toolbar/Toolbar.js","webpack:///./src/Components/Toolbar/index.js","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/Utilities/useRedirect.js","webpack:///./src/Charts/ROITopTemplates.js","webpack:///./src/Containers/AutomationCalculator/helpers.js","webpack:///./src/Containers/AutomationCalculator/TotalSavings.js","webpack:///./src/Containers/AutomationCalculator/CalculationCost.js","webpack:///./src/Containers/AutomationCalculator/AutomationFormula.js","webpack:///./src/Containers/AutomationCalculator/TopTemplates.js","webpack:///./src/Containers/AutomationCalculator/AutomationCalculator.js","webpack:///./src/Utilities/Tooltip.js","webpack:///./src/Charts/BarChart.js","webpack:///./src/Charts/LineChart.js","webpack:///./src/Components/ModulesList.js","webpack:///./src/Components/ModalContents.js","webpack:///./src/Components/TemplatesList.js","webpack:///./src/Containers/Clusters/Clusters.js","webpack:///./src/Utilities/Legend.js","webpack:///./src/Charts/GroupedBarChart.js","webpack:///./src/Charts/PieChart.js","webpack:///./src/Containers/OrganizationStatistics/OrganizationStatistics.js","webpack:///./src/Utilities/colors.js","webpack:///./src/Components/NoResults.js","webpack:///./src/Components/JobStatus.js","webpack:///./src/Components/JobExplorerList.js","webpack:///./src/Containers/JobExplorer/JobExplorer.js","webpack:///./src/Components/NotificationsList.js","webpack:///./src/Containers/Notifications/Notifications.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Components/LoadingState.js"],"names":["clustersEndpoint","concat","notificationsEndPoint","preflightEndpoint","jobExplorerEndpoint","getAbsoluteUrl","arr","window","location","href","split","pop","join","handleResponse","response","json","then","ok","status","Promise","reject","message","preflightRequest","fetch","readClusters","readOrgOptions","_ref3","_ref3$params","params","url","URL","method","body","JSON","stringify","readJobsByDateAndOrg","_ref4","_ref4$params","rParams","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","attributes","group_by_time","group_by","sort_by","search","Object","query_string__WEBPACK_IMPORTED_MODULE_1__","limit","readJobRunsByOrg","_ref5","_ref5$params","include_others","readJobEventsByOrg","_ref6","_ref6$params","granularity","readNotifications","_ref9","_ref9$params","formattedUrl","keys","forEach","key","searchParams","append","readJobExplorerOptions","_ref10","_ref10$params","readClustersOptions","_ref11","_ref11$params","readJobExplorer","_ref12","_ref12$params","paginationParams","offset","qs","readEventExplorer","_ref13","_ref13$params","readROI","_ref15","_ref15$params","readROIOptions","_ref16","_ref16$params","useQueryParams","initial","_useReducer","react__WEBPACK_IMPORTED_MODULE_4__","state","_ref","type","value","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_3___default","startDate","endDate","parseInt","id","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2___default","newState","start_date","end_date","severity","newValues","entries","_ref2","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default","_Utilities_helpers__WEBPACK_IMPORTED_MODULE_6__","Error","_useReducer2","queryParams","dispatch","actionMapper","quick_date_range","job_type","org_id","cluster_id","template_id","only_root_workflows_and_standalone_jobs","setLimit","setOffset","setSeverity","setFromToolbar","varName","arguments","length","undefined","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default","setEndDate","moment__WEBPACK_IMPORTED_MODULE_5___default","format","setId","setStartDate","days","subtract","setStartDateAsString","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_patternfly_react_core_dist_js_components_Button_Button_js__WEBPACK_IMPORTED_MODULE_2__","_patternfly_react_core_dist_js_components_Title_Title_js__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_core_dist_js_components_EmptyState_EmptyState_js__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateIcon_js__WEBPACK_IMPORTED_MODULE_5__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateBody_js__WEBPACK_IMPORTED_MODULE_6__","_patternfly_react_icons_dist_js_icons_wrench_icon__WEBPACK_IMPORTED_MODULE_7__","_patternfly_react_icons_dist_js_icons_wrench_icon__WEBPACK_IMPORTED_MODULE_7___default","DefaultEmptyState","error","preflightError","a","createElement","variant","full","icon","Fragment","headingLevel","size","target","rel","onClick","reload","propTypes","object","__webpack_exports__","d","jobExplorer","roi","organizationStatistics","clusters","defaultParams","dataFetchReducer","action","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1___default","isLoading","isSuccess","data","payload","initialData","postprocess","_useState","react__WEBPACK_IMPORTED_MODULE_2__","_useState2","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default","request","setRequest","didCancel","insights","chrome","auth","getUser","catch","e","initializeChart","Chart","BaseChart","props","margin","react__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","getWidth","d3__WEBPACK_IMPORTED_MODULE_3__","style","left","right","getHeight","top","bottom","prop_types__WEBPACK_IMPORTED_MODULE_2___default","string","element","_patternfly_react_core_dist_js_components_Title_Title_js__WEBPACK_IMPORTED_MODULE_1__","_patternfly_react_core_dist_js_components_EmptyState_EmptyState_js__WEBPACK_IMPORTED_MODULE_2__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateIcon_js__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_4___default","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateBody_js__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateIcon_js__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_core_dist_js_components_Title_Title_js__WEBPACK_IMPORTED_MODULE_5__","_patternfly_react_icons_dist_js_icons_exclamation_circle_icon__WEBPACK_IMPORTED_MODULE_6__","_patternfly_react_icons_dist_js_icons_exclamation_circle_icon__WEBPACK_IMPORTED_MODULE_6___default","_patternfly_react_tokens__WEBPACK_IMPORTED_MODULE_7__","ApiErrorState","small","color","CategoryDropdown_CategoryDropdown","selected","_ref$setSelected","setSelected","_ref$categories","categories","react","slicedToArray_default","isExpanded","setIsExpanded","react_default","ToolbarItem","Select","isOpen","aria-label","onToggle","onSelect","_event","selection","selections","placeholderText","map","name","SelectOption","prop_types_default","array","func","Toolbar_CategoryDropdown","CustomDateSelector_CustomDateSelector","_ref$onInputChange","onInputChange","_ref$startDate","_ref$endDate","InputGroup","TextInput","onChange","Toolbar_CustomDateSelector","optionsForCategories","isSingle","placeholder","ToolbarFilterItem_ToolbarFilterItem","categoryKey","_ref$filter","filter","_ref$values","values","_ref$isVisible","isVisible","_ref$hasChips","hasChips","setFilter","expanded","setExpanded","options","ToolbarFilter","data-cy","showToolbarItem","chips","item","comparator","val","i","handleSingleChips","reduce","acc","Number","isInteger","cmpItem","push","handleCheckboxChips","categoryName","deleteChip","valueToDelete","keyToDelete","find","filteredArr","event","checked","toConsumableArray_default","description","isRequired","any","bool","Toolbar_ToolbarFilterItem","Toolbar_FilterableToolbar","filters","setFilters","_ref$pagination","pagination","_ref$hasSettings","hasSettings","settingsExpanded","setSettingsExpanded","restCategories","objectWithoutProperties_default","filterCategories","includes","obj","_useState3","_useState4","currentCategory","setCurrentCategory","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarContent","Button","filter_icon_default","ToolbarGroup","el","sort_amount_down_icon_default","isActive","cog_icon_default","visibility","default","lg","Card","isFlat","backgroundColor","CardHeader","CardActions","times_icon_default","CardTitle","CardBody","Switch","label","labelOff","isChecked","Tooltip","position","content","question_circle_icon_default","Toolbar_Toolbar","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","code","resolve","module","exports","Utilities_useRedirect","history","path","query","query_string","arrayFormat","pathname","paths","ROITopTemplates_Tooltip","_this","this","classCallCheck_default","defineProperty_default","savings","manualCost","automationCost","scrollLeftOffset","d3","node","scrollLeft","x","pageX","svg","getBoundingClientRect","y","pageY","formatDollars","delta","automatedCost","toolTipWidth","toolTipBase","width","chartWidth","flipped","text","nameWidth","getComputedTextLength","savingsWidth","manualCostWidth","automationCostWidth","widestTextElem","adjustedWidth","maxTextPerc","boxWidth","overage","boundingBox","attr","toolTipPoint","interrupt","transition","delay","draw","amount","parseFloat","toFixed","toString","replace","slice","textWidthThreshold","ROITopTemplates_TopTemplatesSavings","TopTemplatesSavings","_this2","possibleConstructorReturn_default","getPrototypeOf_default","call","init","bind","assertThisInitialized_default","resize","timeout","_this3","clearTimeout","setState","setTimeout","remove","ticks","height","rangeRound","padding","range","formatYAxisValue","xAxis","tickValues","yAxis","tickFormat","tickSize","taskNames","tooltip","domain","selectAll","bandwidth","enter","on","darker","handleMouseOver","handleMouseOut","addEventListener","removeEventListener","ROITopTemplates","BorderedCardTitle","styled_components_browser_esm","_templateObject","TotalSavings_TotalSavings","_ref$totalSavings","totalSavings","borderTop","paddingBottom","Title","total","floatToStringWithCommas","number","AutomationCalculator_TotalSavings","InputAndText","div","CalculationCost_templateObject","validFloat","floatValue","CalculationCost_CalculationCost","_ref$costManual","costManual","_ref$setCostManual","setCostManual","_ref$costAutomation","costAutomation","_ref$setCostAutomatio","setCostAutomation","InputGroupText","dollar_sign_icon_default","paddingTop","AutomationCalculator_CalculationCost","AutomationCalculator_AutomationFormula","TemplateDetail","TopTemplates_templateObject","TemplateDetailSubTitle","em","_templateObject2","TooltipWrapper","_templateObject3","IconGroup","_templateObject4","TopTemplates_InputAndText","_templateObject5","TopTemplates_QuestionIconTooltip","Popover","bodyContent","successful_elapsed_total","total_org_count","total_cluster_count","info_circle_icon_default","TopTemplates_TopTemplates","_ref2$data","_ref2$setDataRunTime","setDataRunTime","_ref2$redirectToJobEx","redirectToJobExplorer","overflow","flex","className","Tooltip_Tooltip","component","helpers","avgRunTime","minutes","successful_hosts_total","deselectedIds","setDeselectedIds","AutomationCalculator_TopTemplates","Wrapper","AutomationCalculator_templateObject","WrapperLeft","AutomationCalculator_templateObject2","WrapperRight","AutomationCalculator_templateObject3","AutomationCalculator_updateDeltaCost","objectSpread_default","AutomationCalculator_AutomationCalculator","toJobExplorer","_useApi","useApi","_useApi2","preflight","setPreflight","_useApi3","_useApi4","setOptions","_useApi5","_ref$items","items","AutomationCalculator_mapApi","_useApi6","api","fetchApi","setDataInApi","_useQueryParams","constants","seconds","updatedData","Api","templateId","PageHeader","title","Main","EmptyState","LoadingState","NoData","textAlign","paddingLeft","sum","curr","computeTotalSavings","display","flexDirection","setUnfilteredData","Utilities_Tooltip","opts","success","fail","formatTooltipDate","RAN","FAIL","TOTAL","date","DATE","jobs","jobsWidth","failed","successful","successTextWidth","failTextWidth","circleSuccess","circleFail","failedIcon","successIcon","successText","failText","clickMore","colors","BarChart_BarChart","BarChart","formattedData","formattedDate","_this$props","orgId","initialQueryParams","parseTime","formatted","created_date","successful_count","failed_count","Date","barTooltip","layers","order","stack","maxTicks","Math","round","layer","_d","duration","ease","prevProps","Charts_BarChart","react_router","LineChart_LineChart","LineChart","updateCluster","clusterId","attrTween","tweenDash","l","getTotalLength","t","unformattedData","successLine","curve","failLine","defined","isNaN","vertical","handleMouseMove","intersectX","cx","baseVal","Charts_LineChart","ModulesList_DataListCell","DataListCell","ModulesList_DataListItem","DataListItem","DataCellEnd","ModulesList_ModulesList","modules","DataList","maxHeight","background","aria-labelledby","border","index","host_task_count","Components_ModulesList","ModalContents_success","circle_icon_default","marginRight","ModalContents_fail","ModalContents_DataListCell","ModalContents_templateObject","ModalContents_DataListItem","ModalContents_templateObject2","ModalContents_DataCellEnd","ModalContents_templateObject3","PFDataListItemNoBorder","DataListItemCompact","DataListCellCompact","_templateObject6","DataListFocus","_templateObject7","DataCellEndCompact","_templateObject8","ModalContents_ModalContents","selectedId","handleModal","qp","jobType","handleCloseBtn","_useApi2$0$data$items","relatedJobs","setRelatedJobs","_useApi4$0$data$items2","stats","setStats","relatedTemplateJobsParams","agreggateTemplateParams","Modal","onClose","actions","total_count","elapsed","toISOString","substr","formatTotalTime","totalCount","ceil","formatAvgRun","successCount","formatSuccessRate","most_failed_tasks","percentage","total_failed_count","task_name","formatTopFailedTask","most_failed_steps","template_name","formatTopFailedStep","Label","job","cluster_name","started","Components_ModalContents","TemplatesList_DataListCell","TemplatesList_templateObject","TemplatesList_DataListItem","TemplatesList_templateObject2","TemplatesList_DataCellEnd","TemplatesList_templateObject3","TemplatesList_TemplatesList","templates","setSelectedId","isModalOpen","setIsModalOpen","Components_TemplatesList","initialTopTemplateParams","initialTopWorkflowParams","initialModuleParams","setPreFlightError","_useApi2$","_useApi2$$data$items","chartData","setData","_useApi4$0$data$items","setTemplates","_useApi6$0$data$items","workflows","setWorkflows","_useApi7","_useApi8","_useApi8$0$data$items","setModules","_useApi9","groupBy","_useApi10","_useApi10$0$data","initialOptionsParams","optionsQueryParams","topTemplatesParams","topWorkflowParams","topModuleParams","_initializeWithPreflight","asyncToGenerator_default","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","apply","initializeWithPreflight","marginTop","Container","LegendDetail","Color","attrs","span","SubTitle","Legend_Switch","Legend_Legend","Legend","handleChange","_isChecked","count","some","Utilities_Legend","GroupedBarChart_Wrapper","GroupedBarChart_templateObject","formatDate","pieces","GroupedBarChart_Tooltip","orgName","GroupedBarChart_GroupedBarChart","GroupedBarChart","handleToggle","orgsList","indexOf","s","_this4","org","colorFunc","timeFrame","selectedOrgs","x0","x1","dates","selectedOrgNames","exit","bars","merge","subEnter","_this$state","isAccessible","Charts_GroupedBarChart","PieChart_Wrapper","PieChart_templateObject","PieChart_Tooltip","perc","percSuccess","drawn","percent","success_rate","maxLength","percentageTotal","percentageSuccess","boundingBOx","showSuccess","boundingHeight","boundingWidth","PieChart_PieChart","PieChart","sort","b","radius","min","donutTooltip","pie","arc","outerRadius","innerRadius","classed","Charts_PieChart","OrganizationStatistics_CardTitle","OrganizationStatistics_templateObject","CardContainer","OrganizationStatistics_templateObject2","TopCard","OrganizationStatistics_templateObject3","OrganizationStatistics_optionsMapper","meta","rest","inventory_id","orgsChartMapper","_ref$dates","pieChartMapper","attrName","_ref4$items","OrganizationStatistics_OrganizationStatistics","orgs","setOrgs","setJobs","tasks","setTasks","appNavClick","secondaryNav","marginLeft","Components_NoResults","EmptyState_EmptyState","EmptyStateIcon","search_icon_default","EmptyStateBody","JobStatus_JobStatus","getColor","check_circle_icon_default","exclamation_circle_icon_default","sync_alt_icon_default","exclamation_triangle_icon_default","clock_icon_default","getIcon","str","charAt","toUpperCase","capitalized","oneOf","Components_JobStatus","headerLabels","ExternalLinkIcon","external_link_alt_icon_default","JobExplorerList_DataListCell","DataListCellHeader","JobExplorerList_DataListItemCells","DataListItemCells","JobExplorerList_DataListToggle","DataListToggle","JobExplorerList_buildListRow","ariaLabel","ariaLabelledBy","windowWidth","DataListItemRow","aria-controls","idx","newExpanded","toggle","dataListCells","tower_link","fontWeight","org_name","DataListContent","isHidden","created","finished","JobExplorerList_AllJobsTemplate","innerWidth","setWindowWidth","onResize","JobExplorerList_JobExplorerList","_useState5","_useState6","isCompact","labels","JobExplorerList_buildHeader","Components_JobExplorerList","perPageOptions","JobExplorer_optionsMapper","JobExplorer_JobExplorer","_useApi2$$data","_useApi2$$data$meta","currPage","setCurrPage","initialSearchParams","parseBooleans","combined","updateURL","returnOffsetVal","page","handleSetPage","nextOffset","handlePerPageSelect","perPage","Pagination","itemCount","widgetId","onPerPageSelect","onSetPage","pageNumber","ExternalLinkAltIcon","NotificationsList_NotificationDrawerListItem","NotificationDrawerListItem","NotificationsList_NotificationDrawerList","NotificationDrawerList","NotificationsList_stringifyDate","day","moment_default","now","utc","isAfter","diff","isSame","valueOf","NotificationsList_AllNotificationTemplate","notifications","notification_id","tower_url","NotificationDrawerListItemHeader","NotificationDrawerListItemBody","timestamp","NotificationsList_ErrorNotificationTemplate","notification","NotificationsList_NoticeNotificationTemplate","NotificationsList_WarningNotificationTemplate","_ref7","_ref8","NotificationsList_NotificationsList","filterBy","Components_NotificationsList","Notifications_CardTitle","Notifications_templateObject","DropdownGroup","Notifications_templateObject2","notificationOptions","disabled","formatClusterName","uuid","install_uuid","notificationsData","setNotificationsData","clusterOptions","setClusterOptions","_useState7","_useState8","selectedCluster","setSelectedCluster","_useState9","_useState10","firstRender","setFirstRender","_useState11","_useState12","setIsLoading","_useState13","_useState14","setMeta","_useState15","_useState16","_ref3$notifications","update","ignore","fetchEndpoints","all","p","_callee2","_context2","_ref5$0$templates","clustersData","_ref5$","_ref5$$notifications","FormSelect","FormSelectOption","isDisabled","NotificationDrawer","trimStr","formatDateTime","formatSeconds","getTotal","capitalize","calculateDelta","convertSecondsToMins","convertMinsToSeconds","convertSecondsToHours","formatJobType","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","isNumeric","dateTime","startOf","datum","mins","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateBody_js__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_5__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_5___default"],"mappings":"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,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC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","file":"js/automation_analytics.5ce0f7dc14c2df46ed7c.js","sourcesContent":["import { stringify } from 'query-string';\n\nconst apiVersion = 'v0';\nconst barChartEndpoint = `/api/tower-analytics/${apiVersion}/chart30/`;\nconst clustersEndpoint = `/api/tower-analytics/${apiVersion}/clusters/`;\nconst modulesEndpoint = `/api/tower-analytics/${apiVersion}/modules/`;\nconst notificationsEndPoint = `/api/tower-analytics/${apiVersion}/notifications/`;\nconst preflightEndpoint = `/api/tower-analytics/${apiVersion}/authorized/`;\nconst templateJobsEndpoint = `/api/tower-analytics/${apiVersion}/template_jobs/`;\nconst templatesEndPoint = `/api/tower-analytics/${apiVersion}/templates/`;\nconst jobExplorerEndpoint = '/api/tower-analytics/v1/job_explorer/';\nconst jobExplorerOptionsEndpoint = '/api/tower-analytics/v1/job_explorer_options/';\nconst ROIEndpoint = '/api/tower-analytics/v1/roi_templates/';\nconst ROITemplatesOptionsEndpoint = '/api/tower-analytics/v1/roi_templates_options/';\nconst orgOptionsEndpoint = `/api/tower-analytics/v1/dashboard_organization_statistics_options/`;\nconst clustersOptionsEndpoint =\n'/api/tower-analytics/v1/dashboard_clusters_options/';\nconst eventExplorerEndpoint = '/api/tower-analytics/v1/event_explorer/';\n\nfunction getAbsoluteUrl() {\n    const url = window.location.href;\n    let arr = url.split('/');\n    arr.pop();\n    return arr.join('/');\n}\n\nfunction handleResponse(response) {\n    return response.json().then(json => {\n        if (response.ok) {\n            return json;\n        }\n\n        if (response.status === 404 || response.status === 401) {\n            return Promise.reject({\n                status: response.status,\n                message: json\n            });\n        } else {\n            return Promise.reject(json);\n        }\n    });\n}\n\nexport const readTemplateJobs = (id, { params = {}}) => {\n    if (!id) {\n        return;\n    }\n\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(templateJobsEndpoint + id + '/', formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const preflightRequest = () => {\n    return fetch(preflightEndpoint).then(handleResponse);\n};\n\nexport const readClusters = () => {\n    return fetch(clustersEndpoint).then(handleResponse);\n};\n\nexport const readChart30 = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(barChartEndpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\n/* Section: Orgs page */\nexport const readOrgOptions = ({ params = {}}) => {\n    let url = new URL(orgOptionsEndpoint, getAbsoluteUrl());\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readJobsByDateAndOrg = ({ params = {}}) => {\n    const rParams = {\n        ...params,\n        attributes: [ 'total_count' ],\n        group_by_time: true,\n        group_by: 'org',\n        sort_by: `total_count:${params.sort_by}`\n    };\n\n    let url = new URL(jobExplorerEndpoint, getAbsoluteUrl());\n    url.search = stringify({\n        limit: rParams.limit,\n        sort_by: rParams.sort_by\n    });\n\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(rParams)\n    }).then(handleResponse);\n};\n\nexport const readJobRunsByOrg = ({ params = {}}) => {\n    const rParams = {\n        ...params,\n        group_by: 'org',\n        include_others: true,\n        attributes: [ 'host_count' ],\n        sort_by: `total_count:${params.sort_by}`\n    };\n\n    let url = new URL(jobExplorerEndpoint, getAbsoluteUrl());\n    url.search = stringify({\n        limit: rParams.limit,\n        sort_by: rParams.sort_by\n    });\n\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(rParams)\n    }).then(handleResponse);\n};\n\nexport const readJobEventsByOrg = ({ params = {}}) => {\n    const rParams = {\n        ...params,\n        group_by: 'org',\n        include_others: true,\n        granularity: 'daily',\n        attributes: [ 'host_task_count' ],\n        sort_by: `host_task_count:${params.sort_by}`\n    };\n\n    let url = new URL(jobExplorerEndpoint, getAbsoluteUrl());\n    url.search = stringify({\n        limit: rParams.limit,\n        sort_by: rParams.sort_by\n    });\n\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(rParams)\n    }).then(handleResponse);\n};\n/* End of section: Orgs page */\n\nexport const readModules = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(modulesEndpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readTemplates = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(templatesEndPoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readNotifications = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(notificationsEndPoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readJobExplorerOptions = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(jobExplorerOptionsEndpoint, formattedUrl);\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readClustersOptions = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(clustersOptionsEndpoint, formattedUrl);\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readJobExplorer = ({ params = {}}) => {\n    const { limit, offset, sort_by } = params;\n    const paginationParams = {\n        limit,\n        offset,\n        sort_by\n    };\n    const qs = stringify(paginationParams);\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(jobExplorerEndpoint, formattedUrl);\n    url.search = qs;\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readEventExplorer = ({ params = {}}) => {\n    const { limit, offset, sort_by } = params;\n    const paginationParams = {\n        limit,\n        offset,\n        sort_by\n    };\n    const qs = stringify(paginationParams);\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(eventExplorerEndpoint, formattedUrl);\n    url.search = qs;\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readClustersBarChart = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(jobExplorerEndpoint, formattedUrl);\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readROI = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(ROIEndpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readROIOptions = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(ROITemplatesOptionsEndpoint, formattedUrl);\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n","import { useReducer } from 'react';\nimport moment from 'moment';\n\nimport { formatDate } from '../Utilities/helpers';\n\nexport const useQueryParams = initial => {\n    const paramsReducer = (state, { type, value }) => {\n        switch (type) {\n            /* v0 api reducers */\n            case 'SET_STARTDATE':\n                return { ...state, startDate: value };\n            case 'SET_ENDDATE':\n                return { ...state, endDate: value };\n            case 'SET_ID':\n                if (!parseInt(value)) {\n                    const { id: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, id: parseInt(value) };\n            case 'SET_LIMIT':\n                if (!parseInt(value.limit)) {\n                    const { limit: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, limit: parseInt(value.limit) };\n            /* v1 api reducers */\n            case 'SET_OFFSET':\n            case 'SET_ATTRIBUTES':\n            case 'SET_JOB_TYPE':\n            case 'SET_STATUS':\n            case 'SET_ORG':\n            case 'SET_CLUSTER':\n            case 'SET_TEMPLATE':\n            case 'SET_SORTBY':\n            case 'SET_ROOT_WORKFLOWS_AND_JOBS':\n                return { ...state, ...value };\n            case 'SET_QUICK_DATE_RANGE': {\n                let newState = { ...state };\n                if (value !== 'custom') {\n                    newState = { ...newState, start_date: null, end_date: null };\n                }\n\n                newState = { ...newState, ...value };\n                return newState;\n            }\n\n            case 'SET_SEVERITY':\n                if (value.severity === '') {\n                    const { severity: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, ...value };\n            case 'SET_START_DATE':\n            case 'SET_END_DATE': {\n                let newValues = {};\n                Object.entries(value).forEach(([ key, value ]) => {\n                    newValues[key] = formatDate(value);\n                });\n                return { ...state, ...newValues };\n            }\n\n            case 'RESET_FILTER':\n                return {\n                    ...state,\n                    ...initial\n                };\n            default:\n                throw new Error();\n        }\n    };\n\n    const [ queryParams, dispatch ] = useReducer(paramsReducer, { ...initial });\n\n    const actionMapper = {\n        status: 'SET_STATUS',\n        quick_date_range: 'SET_QUICK_DATE_RANGE',\n        job_type: 'SET_JOB_TYPE',\n        org_id: 'SET_ORG',\n        cluster_id: 'SET_CLUSTER',\n        template_id: 'SET_TEMPLATE',\n        sort_by: 'SET_SORTBY',\n        start_date: 'SET_START_DATE',\n        end_date: 'SET_END_DATE',\n        only_root_workflows_and_standalone_jobs: 'SET_ROOT_WORKFLOWS_AND_JOBS'\n    };\n\n    return {\n        queryParams,\n        dispatch,\n        setLimit: limit => dispatch({ type: 'SET_LIMIT', value: { limit }}),\n        setOffset: offset => dispatch({ type: 'SET_OFFSET', value: { offset }}),\n        setSeverity: severity => dispatch({ type: 'SET_SEVERITY', value: { severity }}),\n        setFromToolbar: (varName, value = null) => {\n            if (!varName) {\n                dispatch({ type: 'RESET_FILTER' });\n            } else {\n                dispatch({ type: actionMapper[varName], value: { [varName]: value }});\n            }\n        },\n        /* v0 api usage after this line */\n        setEndDate: () => {\n            const endDate = moment().format('YYYY-MM-DD');\n            dispatch({ type: 'SET_ENDDATE', value: endDate });\n        },\n        setId: value => dispatch({ type: 'SET_ID', value }),\n        setStartDate: days => {\n            let startDate;\n            if (days === 7) {\n                startDate = moment()\n                .subtract(1, 'week')\n                .format('YYYY-MM-DD');\n            }\n\n            if (days === 14) {\n                startDate = moment()\n                .subtract(2, 'weeks')\n                .format('YYYY-MM-DD');\n            }\n\n            if (days === 31) {\n                startDate = moment()\n                .subtract(1, 'month')\n                .format('YYYY-MM-DD');\n            } else {\n                startDate = moment()\n                .subtract(days, 'days')\n                .format('YYYY-MM-DD');\n            }\n\n            dispatch({ type: 'SET_STARTDATE', value: startDate });\n        },\n        setStartDateAsString: value => dispatch({ type: 'SET_STARTDATE', value })\n    };\n};\n","/*eslint max-len: [\"error\", { \"ignoreStrings\": true }]*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Button,\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { WrenchIcon } from '@patternfly/react-icons';\n\nconst DefaultEmptyState = ({ preflightError: error }) => (\n    <EmptyState variant={ EmptyStateVariant.full }>\n        <EmptyStateIcon icon={ WrenchIcon } />\n        { error.status === 404 && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    No data found\n                </Title>\n                <EmptyStateBody>\n                    Please visit <a href='https://docs.ansible.com/ansible-tower/latest/html/administration/usability_data_collection.html#automation-analytics' target='_blank' rel='noopener noreferrer'>here</a> to learn how to enable Automation Analytics.\n                </EmptyStateBody>\n            </>\n        ) }\n        { error.status === 401 && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    Not authorized\n                </Title>\n                <EmptyStateBody>\n                    You do not have the correct permissions to view this page.\n                </EmptyStateBody>\n            </>\n        ) }\n        { !error.status && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    Something went wrong, please try reloading the page\n                </Title>\n                <Button variant=\"primary\" onClick={ () => window.location.reload() }>Reload</Button>\n            </>\n        ) }\n\n    </EmptyState>\n);\n\nDefaultEmptyState.propTypes = {\n    preflightError: PropTypes.object\n};\n\nexport default DefaultEmptyState;\n","export const jobExplorer = {\n    attributes: [\n        'id',\n        'status',\n        'job_type',\n        'started',\n        'finished',\n        'elapsed',\n        'created',\n        'cluster_name',\n        'org_name',\n        'most_failed_tasks'\n    ],\n    defaultParams: {\n        status: [ 'successful', 'failed' ],\n        quick_date_range: 'last_30_days',\n        job_type: [ 'workflowjob', 'job' ],\n        org_id: [],\n        cluster_id: [],\n        template_id: [],\n        sort_by: 'created:desc',\n        start_date: null,\n        end_date: null,\n        only_root_workflows_and_standalone_jobs: false,\n        limit: 5\n    }\n};\n\nexport const roi = {\n    defaultParams: {\n        status: [ 'successful' ],\n        org_id: [],\n        cluster_id: [],\n        template_id: [],\n        quick_date_range: 'roi_last_year',\n        job_type: [ 'job' ],\n        sort_by: 'template_productivity_score:desc',\n        start_date: null,\n        end_date: null,\n        limit: 25,\n        only_root_workflows_and_standalone_jobs: true,\n        attributes: [\n            'successful_hosts_total',\n            'successful_elapsed_total',\n            'total_org_count',\n            'total_cluster_count'\n        ],\n        group_by: 'template',\n        group_by_time: false,\n        granularity: 'monthly'\n    }\n};\n\nexport const organizationStatistics = {\n    defaultParams: {\n        status: [],\n        org_id: [],\n        quick_date_range: 'last_30_days',\n        sort_by: 'desc',\n        limit: 5,\n        job_type: [ 'workflowjob', 'job' ],\n        cluster_id: [],\n        template_id: [],\n        start_date: null,\n        end_date: null\n    }\n};\n\nexport const clusters = {\n    defaultParams: {\n        status: [ 'successful', 'failed' ],\n        quick_date_range: 'last_30_days',\n        job_type: [ 'workflowjob', 'job' ],\n        group_by_time: true,\n        org_id: [],\n        cluster_id: [],\n        template_id: [],\n        only_root_workflows_and_standalone_jobs: false\n    }\n};\n","import { useState, useEffect, useReducer } from 'react';\n\nconst dataFetchReducer = (state, action) => {\n    switch (action.type) {\n        case 'FETCH_INIT':\n            return {\n                ...state,\n                isLoading: true,\n                isSuccess: false,\n                error: null\n            };\n        case 'FETCH_SUCCESS':\n            return {\n                ...state,\n                isLoading: false,\n                isSuccess: true,\n                error: null,\n                data: action.payload\n            };\n        case 'FETCH_FAILURE':\n            return {\n                ...state,\n                isLoading: false,\n                isSuccess: false,\n                error: action.payload\n            };\n        case 'UPDATE_DATA':\n            return {\n                ...state,\n                data: action.payload\n            };\n        default:\n            throw new Error();\n    }\n};\n\nconst useApi = (initialData, postprocess = d => d) => {\n    const [ request, setRequest ] = useState(null);\n\n    const [ state, dispatch ] = useReducer(dataFetchReducer, {\n        isLoading: false,\n        isSuccess: false,\n        error: null,\n        data: initialData\n    });\n\n    useEffect(() => {\n        // Prevent fetching nothing\n        if (!request) {\n            return;\n        }\n\n        // Initialize\n        let didCancel = false;\n        dispatch({ type: 'FETCH_INIT' });\n\n        // Fetching\n        window.insights.chrome.auth.getUser().then(() => request.then(data => {\n            if (!didCancel) {\n                dispatch({\n                    type: 'FETCH_SUCCESS',\n                    payload: postprocess(data)\n                });\n            }\n        }).catch(e => {\n            if (!didCancel) {\n                dispatch({ type: 'FETCH_FAILURE', payload: e });\n            }\n        }));\n\n        return () => { didCancel = true; };\n    }, [ request ]);\n\n    const setData = data => {\n        dispatch({ type: 'UPDATE_DATA', payload: data });\n    };\n\n    return [ state, setRequest, setData ];\n};\n\nexport default useApi;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nconst initializeChart = Chart => {\n    const BaseChart = (props) => {\n        const { id, margin } = props;\n\n        const getWidth = () => {\n            let width;\n            width =\n            parseInt(d3.select('#' + id).style('width')) -\n                margin.left - margin.right || 700;\n            return width;\n        };\n\n        const getHeight = () => {\n            let height;\n            height =\n            parseInt(d3.select('#' + id).style('height')) -\n                margin.top - margin.bottom || 450;\n            return height;\n        };\n\n        return (\n            <Chart\n                { ...props }\n                getWidth={ getWidth }\n                getHeight={ getHeight }\n            />\n        );\n    };\n\n    BaseChart.propTypes = {\n        id: PropTypes.string,\n        margin: PropTypes.object\n    };\n\n    return BaseChart;\n};\n\ninitializeChart.propTypes = {\n    Chart: PropTypes.element\n};\n\nexport default initializeChart;\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst NoData = () => (\n    <EmptyState variant={ EmptyStateVariant.full }>\n        <EmptyStateIcon icon={ CubesIcon } />\n        <Title headingLevel=\"h5\" size=\"lg\">\n            No Data\n        </Title>\n    </EmptyState>\n);\n\nexport default NoData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateIcon,\n    EmptyStateVariant,\n    Title\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { global_danger_color_200 as globalDangerColor200 } from '@patternfly/react-tokens';\n\nconst ApiErrorState = ({ message }) => (\n    <EmptyState variant={ EmptyStateVariant.small }>\n        <EmptyStateIcon icon={ ExclamationCircleIcon } color={ globalDangerColor200.value } />\n        <Title headingLevel=\"h2\" size=\"lg\">Error</Title>\n        <EmptyStateBody>\n            { message }\n        </EmptyStateBody>\n    </EmptyState>\n);\n\nApiErrorState.propTypes = {\n    message: PropTypes.string\n};\n\nexport default ApiErrorState;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ToolbarItem,\n    Select,\n    SelectOption\n} from '@patternfly/react-core';\n\nconst CategoryDropdown = ({\n    selected,\n    setSelected = () => {},\n    categories = []\n}) => {\n    const [ isExpanded, setIsExpanded ] = useState(false);\n\n    return (\n        <ToolbarItem>\n            <Select\n                isOpen={ isExpanded }\n                variant={ 'single' }\n                aria-label={ 'Categories' }\n                onToggle={ () => setIsExpanded(!isExpanded) }\n                onSelect={ (_event, selection) => {\n                    setSelected(selection);\n                    setIsExpanded(false);\n                } }\n                selections={ selected }\n                placeholderText={ 'Filter by' }\n            >\n                {\n                    categories.map(({ key, name }) => (\n                        <SelectOption key={ key } value={ key }>\n                            { name }\n                        </SelectOption>\n                    ))\n                }\n            </Select>\n        </ToolbarItem>\n    );\n};\n\nCategoryDropdown.propTypes = {\n    categories: PropTypes.array,\n    selected: PropTypes.string,\n    setSelected: PropTypes.func\n};\n\nexport default CategoryDropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    InputGroup,\n    TextInput\n} from '@patternfly/react-core';\n\nconst CustomDateSelector = ({\n    onInputChange = () => {},\n    startDate = '',\n    endDate = ''\n}) => {\n    return (\n        <>\n          <InputGroup>\n              <TextInput\n                  name=\"startDate\"\n                  id=\"startDate\"\n                  type=\"date\"\n                  aria-label=\"Start Date\"\n                  value={ startDate }\n                  onChange={ e => onInputChange('start_date', e) }\n              />\n          </InputGroup>\n          <InputGroup>\n              <TextInput\n                  name=\"endDate\"\n                  id=\"endDate\"\n                  type=\"date\"\n                  aria-label=\"End Date\"\n                  value={ endDate }\n                  onChange={ e => onInputChange('end_date', e) }\n              />\n          </InputGroup>\n        </>\n    );\n};\n\nCustomDateSelector.propTypes = {\n    startDate: PropTypes.string,\n    endDate: PropTypes.string,\n    onInputChange: PropTypes.func\n};\n\nexport default CustomDateSelector;\n","export const optionsForCategories = {\n    status: {\n        isSingle: false,\n        name: 'Status',\n        placeholder: 'Filter by job status'\n    },\n    quick_date_range: {\n        isSingle: true,\n        name: 'Date',\n        placeholder: 'Filter by date'\n    },\n    job_type: {\n        isSingle: false,\n        name: 'Job',\n        placeholder: 'Filter by job type'\n    },\n    org_id: {\n        isSingle: false,\n        name: 'Organization',\n        placeholder: 'Filter by organization'\n    },\n    cluster_id: {\n        isSingle: false,\n        name: 'Cluster',\n        placeholder: 'Filter by cluster'\n    },\n    template_id: {\n        isSingle: false,\n        name: 'Template',\n        placeholder: 'Filter by template'\n    },\n    sort_by: {\n        isSingle: true,\n        name: 'Sort by',\n        placeholder: 'Sort by attribute'\n    }\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ToolbarFilter,\n    Select,\n    SelectOption\n} from '@patternfly/react-core';\nimport {\n    handleCheckboxChips,\n    handleSingleChips\n} from './helpers';\nimport { optionsForCategories } from './constants';\n\nconst ToolbarFilterItem = ({\n    categoryKey,\n    filter = null,\n    values = [],\n    isVisible = true,\n    hasChips = true,\n    setFilter\n}) => {\n    const [ expanded, setExpanded ] = useState(false);\n    const options = optionsForCategories[categoryKey];\n\n    const onDelete = (name, valueToDelete) => {\n        const single = optionsForCategories[categoryKey].isSingle;\n\n        if (single) {\n            setFilter(null);\n        } else {\n            const keyToDelete = values.find(({ value }) => value === valueToDelete).key;\n            const filteredArr = filter.filter(value => value !== keyToDelete);\n            setFilter(filteredArr);\n        }\n    };\n\n    const handleChips = () => {\n        if (options.isSingle) {\n            return handleSingleChips(filter, values);\n        } else {\n            return handleCheckboxChips(filter, values);\n        }\n    };\n\n    const onSelect = (event, selection) => {\n        if (options.isSingle) {\n            setFilter(selection);\n            setExpanded(false);\n        } else {\n            setFilter(event.target.checked\n                ? [ ...filter, selection ]\n                : filter.filter(value => value !== selection)\n            );\n        }\n    };\n\n    return (\n        <ToolbarFilter\n            data-cy = { categoryKey }\n            key = { categoryKey }\n            showToolbarItem={ isVisible }\n            chips={ hasChips ? handleChips() : [] }\n            categoryName={ options.name }\n            deleteChip={ hasChips ? onDelete : null }\n        >\n            <Select\n                variant={ options.isSingle ? 'single' : 'checkbox' }\n                aria-label={ categoryKey }\n                onToggle={ () => setExpanded(!expanded) }\n                onSelect={ onSelect }\n                selections={ filter }\n                isOpen={ expanded }\n                placeholderText={ options.placeholder }\n            >\n                {\n                    values && values.map(({ key, value, description }) => (\n                        <SelectOption key={ key } value={ key } description={ description }>\n                            { value }\n                        </SelectOption>\n                    ))\n                }\n            </Select>\n        </ToolbarFilter>\n    );\n};\n\nToolbarFilterItem.propTypes = {\n    categoryKey: PropTypes.string.isRequired,\n    filter: PropTypes.any,\n    values: PropTypes.array,\n    isVisible: PropTypes.bool,\n    hasChips: PropTypes.bool,\n    setFilter: PropTypes.func.isRequired\n};\n\nexport default ToolbarFilterItem;\n","/**\n * Get comparator values if their key is in the item list\n */\nexport const handleCheckboxChips = (item, comparator) => {\n    if (item && comparator) {\n        return item.reduce((acc, i) => {\n            Number.isInteger(parseInt(i)) ? (i = parseInt(i)) : i;\n\n            comparator.forEach(cmpItem => {\n                if (cmpItem.key === i) {\n                    acc.push(cmpItem.value);\n                }\n            });\n\n            return acc;\n        }, []);\n    }\n\n    return [];\n};\n\n/**\n * Convert a list of objects to a list of the last value if defined\n */\nexport const handleSingleChips = (item, comparator) => {\n    if (item && typeof item === 'string' && comparator) {\n        let val;\n        comparator.forEach(i => {\n            if (i.key === item) {\n                val = i.value;\n            }\n        });\n\n        if (val !== undefined) {\n            return [ val ];\n        }\n    }\n\n    return [];\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Toolbar,\n    ToolbarContent,\n    ToolbarGroup,\n    Button,\n    ToolbarItem,\n    Tooltip,\n    Switch\n} from '@patternfly/react-core';\nimport { Card, CardTitle, CardBody, CardActions, CardHeader } from '@patternfly/react-core';\nimport {\n    FilterIcon,\n    SortAmountDownIcon,\n    CogIcon,\n    QuestionCircleIcon,\n    TimesIcon\n} from '@patternfly/react-icons';\n\nimport CategoryDropdown from './CategoryDropdown';\nimport CustomDateSelector from './CustomDateSelector';\nimport { optionsForCategories } from './constants';\nimport ToolbarFilterItem from './ToolbarFilterItem';\n\nconst FilterableToolbar = ({\n    categories,\n    filters,\n    setFilters,\n    pagination = null,\n    hasSettings = false\n}) => {\n    const [ settingsExpanded, setSettingsExpanded ] = useState(false);\n    const { quick_date_range, sort_by, ...restCategories } = categories;\n\n    // Filter out elements which are not in the option object.\n    const filterCategories = Object.keys(restCategories)\n    .filter(key => Object.keys(optionsForCategories).includes(key))\n    .reduce((obj, key) => {\n        obj[key] = restCategories[key];\n        return obj;\n    }, {});\n\n    const [ currentCategory, setCurrentCategory ] = useState(\n        Object.keys(filterCategories)[0]\n    );\n\n    const onInputChange = (type, value) => {\n        setFilters(type, value);\n    };\n\n    const FilterCategoriesGroup = () => (\n        <ToolbarGroup variant=\"filter-group\">\n            <CategoryDropdown\n                selected={ currentCategory }\n                setSelected={ setCurrentCategory }\n                categories={\n                    Object.keys(filterCategories).map(el => ({\n                        key: el,\n                        name: optionsForCategories[el].name\n                    }))\n                }\n            />\n            { Object.keys(filterCategories).map(key =>\n                <ToolbarFilterItem\n                    key={ key }\n                    categoryKey={ key }\n                    filter={ filters[key] }\n                    values={ categories[key] }\n                    isVisible={ currentCategory === key }\n                    setFilter={ value => setFilters(key, value) }\n                />\n            ) }\n        </ToolbarGroup>\n    );\n\n    const QuickDateGroup = () => (\n        <ToolbarGroup variant=\"filter-group\">\n            <ToolbarFilterItem\n                categoryKey='quick_date_range'\n                filter={ filters.quick_date_range }\n                values={ quick_date_range }\n                setFilter={ value => setFilters('quick_date_range', value) }\n                hasChips={ false }\n            />\n            { filters.quick_date_range === 'custom' && (\n                <CustomDateSelector\n                    startDate={ filters.start_date ? filters.start_date : '' }\n                    endDate={ filters.end_date ? filters.end_date : '' }\n                    onInputChange={ onInputChange }\n                />\n            ) }\n        </ToolbarGroup>\n    );\n\n    const SortByGroup = () => (\n        <ToolbarGroup variant=\"filter-group\">\n            <ToolbarFilterItem\n                categoryKey='sort_by'\n                filter={ filters.sort_by }\n                values={ sort_by }\n                setFilter={ value => setFilters('sort_by', value) }\n                hasChips={ false }\n            />\n            <Button variant=\"control\">\n                <SortAmountDownIcon />\n            </Button>\n        </ToolbarGroup>\n    );\n\n    /* TODO: For future work: make settings more modular for different pages */\n    const Settings = () => (\n        <Card isFlat style={ { backgroundColor: '#EEEEEE' } }>\n            <CardHeader>\n                <CardActions>\n                    <Button\n                        variant='plain'\n                        onClick={ () => setSettingsExpanded(!settingsExpanded) }\n                    >\n                        <TimesIcon />\n                    </Button>\n                </CardActions>\n                <CardTitle>Settings</CardTitle>\n            </CardHeader>\n            <CardBody>\n                <Switch\n                    id=\"showRootWorkflowJobs\"\n                    label=\"Ignore nested workflows and jobs\"\n                    labelOff=\"Ignore nested workflows and jobs\"\n                    isChecked={ filters.only_root_workflows_and_standalone_jobs }\n                    onChange={ val => {\n                        setFilters('only_root_workflows_and_standalone_jobs', val);\n                    } }\n                />\n                <Tooltip\n                    position={ 'top' }\n                    content={\n                        <div>\n                            { ' ' }\n                              If enabled, nested workflows and jobs will not be included in\n                              the overall totals. Enable this option to filter out duplicate\n                              entries.\n                        </div>\n                    }\n                >\n                    <QuestionCircleIcon />\n                </Tooltip>\n            </CardBody>\n        </Card>\n    );\n\n    return (\n        <>\n            <Toolbar\n                id=\"filterable-toolbar-with-chip-groups\"\n                clearAllFilters={ () => { setFilters(null, null); } }\n                collapseListedFiltersBreakpoint=\"xl\"\n            >\n                <ToolbarContent>\n                    <Button variant=\"control\">\n                        <FilterIcon />\n                    </Button>\n                    { Object.keys(filterCategories).length > 0 && <FilterCategoriesGroup /> }\n                    { quick_date_range && <QuickDateGroup /> }\n                    { sort_by && <SortByGroup /> }\n                    {\n                        hasSettings &&\n                        <ToolbarItem>\n                            <Button\n                                variant=\"plain\"\n                                onClick={ () => setSettingsExpanded(!settingsExpanded) }\n                                aria-label=\"settings\"\n                                isActive={ settingsExpanded }\n                            >\n                                <CogIcon />\n                            </Button>\n                        </ToolbarItem>\n                    }\n                    {\n                        pagination &&\n                        <ToolbarItem variant=\"pagination\" visibility={ { default: 'hidden', lg: 'visible' } }>\n                            { pagination }\n                        </ToolbarItem>\n                    }\n                </ToolbarContent>\n                { settingsExpanded && <Settings /> }\n            </Toolbar>\n        </>\n    );\n};\n\nFilterableToolbar.propTypes = {\n    categories: PropTypes.object.isRequired,\n    filters: PropTypes.object.isRequired,\n    setFilters: PropTypes.func.isRequired,\n    pagination: PropTypes.object,\n    hasSettings: PropTypes.bool\n};\n\nexport default FilterableToolbar;\n","import Toolbar from './Toolbar';\n\nexport default Toolbar;\n","var map = {\n\t\"./af\": 186,\n\t\"./af.js\": 186,\n\t\"./ar\": 187,\n\t\"./ar-dz\": 188,\n\t\"./ar-dz.js\": 188,\n\t\"./ar-kw\": 189,\n\t\"./ar-kw.js\": 189,\n\t\"./ar-ly\": 190,\n\t\"./ar-ly.js\": 190,\n\t\"./ar-ma\": 191,\n\t\"./ar-ma.js\": 191,\n\t\"./ar-sa\": 192,\n\t\"./ar-sa.js\": 192,\n\t\"./ar-tn\": 193,\n\t\"./ar-tn.js\": 193,\n\t\"./ar.js\": 187,\n\t\"./az\": 194,\n\t\"./az.js\": 194,\n\t\"./be\": 195,\n\t\"./be.js\": 195,\n\t\"./bg\": 196,\n\t\"./bg.js\": 196,\n\t\"./bm\": 197,\n\t\"./bm.js\": 197,\n\t\"./bn\": 198,\n\t\"./bn.js\": 198,\n\t\"./bo\": 199,\n\t\"./bo.js\": 199,\n\t\"./br\": 200,\n\t\"./br.js\": 200,\n\t\"./bs\": 201,\n\t\"./bs.js\": 201,\n\t\"./ca\": 202,\n\t\"./ca.js\": 202,\n\t\"./cs\": 203,\n\t\"./cs.js\": 203,\n\t\"./cv\": 204,\n\t\"./cv.js\": 204,\n\t\"./cy\": 205,\n\t\"./cy.js\": 205,\n\t\"./da\": 206,\n\t\"./da.js\": 206,\n\t\"./de\": 207,\n\t\"./de-at\": 208,\n\t\"./de-at.js\": 208,\n\t\"./de-ch\": 209,\n\t\"./de-ch.js\": 209,\n\t\"./de.js\": 207,\n\t\"./dv\": 210,\n\t\"./dv.js\": 210,\n\t\"./el\": 211,\n\t\"./el.js\": 211,\n\t\"./en-SG\": 212,\n\t\"./en-SG.js\": 212,\n\t\"./en-au\": 213,\n\t\"./en-au.js\": 213,\n\t\"./en-ca\": 214,\n\t\"./en-ca.js\": 214,\n\t\"./en-gb\": 215,\n\t\"./en-gb.js\": 215,\n\t\"./en-ie\": 216,\n\t\"./en-ie.js\": 216,\n\t\"./en-il\": 217,\n\t\"./en-il.js\": 217,\n\t\"./en-nz\": 218,\n\t\"./en-nz.js\": 218,\n\t\"./eo\": 219,\n\t\"./eo.js\": 219,\n\t\"./es\": 220,\n\t\"./es-do\": 221,\n\t\"./es-do.js\": 221,\n\t\"./es-us\": 222,\n\t\"./es-us.js\": 222,\n\t\"./es.js\": 220,\n\t\"./et\": 223,\n\t\"./et.js\": 223,\n\t\"./eu\": 224,\n\t\"./eu.js\": 224,\n\t\"./fa\": 225,\n\t\"./fa.js\": 225,\n\t\"./fi\": 226,\n\t\"./fi.js\": 226,\n\t\"./fo\": 227,\n\t\"./fo.js\": 227,\n\t\"./fr\": 228,\n\t\"./fr-ca\": 229,\n\t\"./fr-ca.js\": 229,\n\t\"./fr-ch\": 230,\n\t\"./fr-ch.js\": 230,\n\t\"./fr.js\": 228,\n\t\"./fy\": 231,\n\t\"./fy.js\": 231,\n\t\"./ga\": 232,\n\t\"./ga.js\": 232,\n\t\"./gd\": 233,\n\t\"./gd.js\": 233,\n\t\"./gl\": 234,\n\t\"./gl.js\": 234,\n\t\"./gom-latn\": 235,\n\t\"./gom-latn.js\": 235,\n\t\"./gu\": 236,\n\t\"./gu.js\": 236,\n\t\"./he\": 237,\n\t\"./he.js\": 237,\n\t\"./hi\": 238,\n\t\"./hi.js\": 238,\n\t\"./hr\": 239,\n\t\"./hr.js\": 239,\n\t\"./hu\": 240,\n\t\"./hu.js\": 240,\n\t\"./hy-am\": 241,\n\t\"./hy-am.js\": 241,\n\t\"./id\": 242,\n\t\"./id.js\": 242,\n\t\"./is\": 243,\n\t\"./is.js\": 243,\n\t\"./it\": 244,\n\t\"./it-ch\": 245,\n\t\"./it-ch.js\": 245,\n\t\"./it.js\": 244,\n\t\"./ja\": 246,\n\t\"./ja.js\": 246,\n\t\"./jv\": 247,\n\t\"./jv.js\": 247,\n\t\"./ka\": 248,\n\t\"./ka.js\": 248,\n\t\"./kk\": 249,\n\t\"./kk.js\": 249,\n\t\"./km\": 250,\n\t\"./km.js\": 250,\n\t\"./kn\": 251,\n\t\"./kn.js\": 251,\n\t\"./ko\": 252,\n\t\"./ko.js\": 252,\n\t\"./ku\": 253,\n\t\"./ku.js\": 253,\n\t\"./ky\": 254,\n\t\"./ky.js\": 254,\n\t\"./lb\": 255,\n\t\"./lb.js\": 255,\n\t\"./lo\": 256,\n\t\"./lo.js\": 256,\n\t\"./lt\": 257,\n\t\"./lt.js\": 257,\n\t\"./lv\": 258,\n\t\"./lv.js\": 258,\n\t\"./me\": 259,\n\t\"./me.js\": 259,\n\t\"./mi\": 260,\n\t\"./mi.js\": 260,\n\t\"./mk\": 261,\n\t\"./mk.js\": 261,\n\t\"./ml\": 262,\n\t\"./ml.js\": 262,\n\t\"./mn\": 263,\n\t\"./mn.js\": 263,\n\t\"./mr\": 264,\n\t\"./mr.js\": 264,\n\t\"./ms\": 265,\n\t\"./ms-my\": 266,\n\t\"./ms-my.js\": 266,\n\t\"./ms.js\": 265,\n\t\"./mt\": 267,\n\t\"./mt.js\": 267,\n\t\"./my\": 268,\n\t\"./my.js\": 268,\n\t\"./nb\": 269,\n\t\"./nb.js\": 269,\n\t\"./ne\": 270,\n\t\"./ne.js\": 270,\n\t\"./nl\": 271,\n\t\"./nl-be\": 272,\n\t\"./nl-be.js\": 272,\n\t\"./nl.js\": 271,\n\t\"./nn\": 273,\n\t\"./nn.js\": 273,\n\t\"./pa-in\": 274,\n\t\"./pa-in.js\": 274,\n\t\"./pl\": 275,\n\t\"./pl.js\": 275,\n\t\"./pt\": 276,\n\t\"./pt-br\": 277,\n\t\"./pt-br.js\": 277,\n\t\"./pt.js\": 276,\n\t\"./ro\": 278,\n\t\"./ro.js\": 278,\n\t\"./ru\": 279,\n\t\"./ru.js\": 279,\n\t\"./sd\": 280,\n\t\"./sd.js\": 280,\n\t\"./se\": 281,\n\t\"./se.js\": 281,\n\t\"./si\": 282,\n\t\"./si.js\": 282,\n\t\"./sk\": 283,\n\t\"./sk.js\": 283,\n\t\"./sl\": 284,\n\t\"./sl.js\": 284,\n\t\"./sq\": 285,\n\t\"./sq.js\": 285,\n\t\"./sr\": 286,\n\t\"./sr-cyrl\": 287,\n\t\"./sr-cyrl.js\": 287,\n\t\"./sr.js\": 286,\n\t\"./ss\": 288,\n\t\"./ss.js\": 288,\n\t\"./sv\": 289,\n\t\"./sv.js\": 289,\n\t\"./sw\": 290,\n\t\"./sw.js\": 290,\n\t\"./ta\": 291,\n\t\"./ta.js\": 291,\n\t\"./te\": 292,\n\t\"./te.js\": 292,\n\t\"./tet\": 293,\n\t\"./tet.js\": 293,\n\t\"./tg\": 294,\n\t\"./tg.js\": 294,\n\t\"./th\": 295,\n\t\"./th.js\": 295,\n\t\"./tl-ph\": 296,\n\t\"./tl-ph.js\": 296,\n\t\"./tlh\": 297,\n\t\"./tlh.js\": 297,\n\t\"./tr\": 298,\n\t\"./tr.js\": 298,\n\t\"./tzl\": 299,\n\t\"./tzl.js\": 299,\n\t\"./tzm\": 300,\n\t\"./tzm-latn\": 301,\n\t\"./tzm-latn.js\": 301,\n\t\"./tzm.js\": 300,\n\t\"./ug-cn\": 302,\n\t\"./ug-cn.js\": 302,\n\t\"./uk\": 303,\n\t\"./uk.js\": 303,\n\t\"./ur\": 304,\n\t\"./ur.js\": 304,\n\t\"./uz\": 305,\n\t\"./uz-latn\": 306,\n\t\"./uz-latn.js\": 306,\n\t\"./uz.js\": 305,\n\t\"./vi\": 307,\n\t\"./vi.js\": 307,\n\t\"./x-pseudo\": 308,\n\t\"./x-pseudo.js\": 308,\n\t\"./yo\": 309,\n\t\"./yo.js\": 309,\n\t\"./zh-cn\": 310,\n\t\"./zh-cn.js\": 310,\n\t\"./zh-hk\": 311,\n\t\"./zh-hk.js\": 311,\n\t\"./zh-tw\": 312,\n\t\"./zh-tw.js\": 312\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 347;","import { Paths } from '../paths';\nimport { stringify } from 'query-string';\n\nconst useRedirect = (history, path) => (query) => {\n    const search = stringify(query, { arrayFormat: 'bracket' });\n    history.push({\n        pathname: Paths[path],\n        search\n    });\n};\n\nexport default useRedirect;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        this.draw();\n    }\n\n    formatDollars(amount) {\n        return parseFloat(amount).toFixed(2).toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    };\n\n    draw() {\n        this.width = 125;\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip-base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 125;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, 0) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', 92)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.name = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', -2)\n        .text('Template name');\n        this.savings = this.toolTipBase\n        .append('text')\n        .attr('x', 20)\n        .attr('y', 52)\n        .attr('font-size', 12)\n        .attr('font-weight', 'bold')\n        .attr('fill', 'white')\n        .text('Total savings $0');\n        this.manualCost = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', 16)\n        .text('Manual cost $0');\n        this.automationCost = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', 34)\n        .text('Automation cost $0');\n    }\n\n    handleMouseOver = d => {\n        let name;\n        let savings;\n        let manualCost;\n        let automationCost;\n        const scrollLeftOffset = d3.select('#d3-roi-chart-root').node().scrollLeft;\n        const x =\n            d3.event.pageX -\n            d3\n            .select(this.svg)\n            .node()\n            .getBoundingClientRect().x +\n            10 + scrollLeftOffset;\n        const y =\n            d3.event.pageY -\n            d3\n            .select(this.svg)\n            .node()\n            .getBoundingClientRect().y -\n            30;\n        if (!d) {\n            return;\n        } else {\n            savings = this.formatDollars(d.delta);\n            name = d.name;\n            manualCost = this.formatDollars(d.manualCost);\n            automationCost = this.formatDollars(d.automatedCost);\n        }\n\n        const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n        const chartWidth = d3\n        .select(this.svg + '> svg')\n        .node()\n        .getBoundingClientRect().width;\n        const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n        const flipped = overflow < (x / chartWidth) * 100;\n        this.name.text('' + name);\n        this.savings.text('Total savings $' + savings);\n        this.manualCost.text('Manual Cost $' + manualCost);\n        this.automationCost.text('Automation Cost $' + automationCost);\n        this.nameWidth = this.name.node().getComputedTextLength();\n        this.savingsWidth = this.savings.node().getComputedTextLength();\n        this.manualCostWidth = this.manualCost.node().getComputedTextLength();\n        this.automationCostWidth = this.automationCost.node().getComputedTextLength();\n        this.widestTextElem = d3.max([ this.nameWidth, this.savingsWidth, this.automationCostWidth, this.manualCostWidth ]);\n\n        const maxTextPerc = this.widestTextElem / this.boxWidth * 100;\n        const threshold = 85;\n        const overage = maxTextPerc / threshold;\n        let adjustedWidth;\n        if (maxTextPerc > threshold) {\n            adjustedWidth = this.boxWidth * overage;\n        } else {\n            adjustedWidth = this.boxWidth;\n        }\n\n        this.boundingBox.attr('width', adjustedWidth);\n        this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n        if (flipped) {\n            this.toolTipPoint.attr('transform', 'translate(-20, 15) rotate(45)');\n            this.boundingBox.attr('x', -adjustedWidth - 20);\n            this.name.attr('x', -(toolTipWidth - 7));\n            this.savings.attr('x', -(toolTipWidth - 7));\n            this.manualCost.attr('x', -(toolTipWidth - 7));\n            this.automationCost.attr('x', -(toolTipWidth - 7));\n        } else {\n            this.toolTipPoint.attr('transform', 'translate(10, 15) rotate(45)');\n            this.boundingBox.attr('x', 10);\n            this.name.attr('x', 20);\n            this.savings.attr('x', 20);\n            this.manualCost.attr('x', 20);\n            this.automationCost.attr('x', 20);\n        }\n\n        this.toolTipBase.style('opacity', 1);\n        this.toolTipBase.interrupt();\n    };\n\n    handleMouseOut = () => {\n        this.toolTipBase\n        .transition()\n        .delay(15)\n        .style('opacity', 0)\n        .style('pointer-events', 'none');\n    };\n}\n\nclass TopTemplatesSavings extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.state = {\n            timeout: null\n        };\n    }\n\n    // Methods\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => {\n                this.init();\n            }, 500)\n        });\n    }\n\n    init() {\n        this.draw();\n    }\n\n    draw() {\n        // Use PF chart color\n        const color = '#0066CC'; //blue\n        // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const { data } = this.props;\n        let width;\n        // adjust chart width to support larger datasets\n        if (data.length >= 15) {\n            const containerWidth = d3.select('.automation-wrapper').node();\n            width = containerWidth.getBoundingClientRect().width - this.props.margin.left - this.props.margin.right;\n        } else {\n            width = this.props.getWidth();\n        }\n\n        const height = this.props.getHeight();\n        const x = d3\n        .scaleBand()\n        .rangeRound([ 0, width ])\n        .padding(0.45);\n        const y = d3.scaleLinear().range([ height, 0 ]);\n        // format our X Axis ticks\n        let ticks;\n        ticks = data.map(d => d.name);\n        const formatYAxisValue = d3.format('.2s');\n        const xAxis = d3.axisBottom(x).tickValues(ticks);\n\n        const yAxis = d3\n        .axisLeft(y)\n        .ticks(8)\n        .tickFormat(d => formatYAxisValue(d).replace('G', 'B'))\n        .tickSize(-width, 0, 0);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n\n        const taskNames = data.map(d => d.name);\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id\n        });\n        x.domain(taskNames);\n        y.domain([\n            0,\n            d3.max(data, d => d.delta * 1.15) || 8\n        ]);\n\n        // add y axis\n        svg\n        .append('g')\n        .attr('class', 'y axis')\n        .call(yAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7')\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 6)\n        .attr('dy', '.71em')\n        .style('text-anchor', 'end')\n        .style('font-weight', 'bold')\n        .text('Value');\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Savings per template ($)');\n\n        // add x axis\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(xAxis)\n        .selectAll('text')\n        .style('text-anchor', 'start')\n        .attr('dx', '0.75em')\n        .attr('dy', -x.bandwidth() / 1.45 - 8)\n        .attr('transform', 'rotate(-90)');\n\n        svg.selectAll('.x-axis line').attr('stroke', 'transparent');\n\n        svg.selectAll('.bar')\n        .data(data)\n        .enter().append('rect')\n        .attr('x', d => x(d.name))\n        .attr('width', x.bandwidth())\n        .attr('y', d => y(d.delta))\n        .style('fill', () => color)\n        .attr('height', d => height - y(d.delta))\n        .on('mouseover', function(d) {\n            d3.select(this).style('fill', d3.rgb(color).darker(1));\n            tooltip.handleMouseOver(d);\n        })\n        .on('mousemove', tooltip.handleMouseOver)\n        .on('mouseout', function() {\n            d3.select(this).style('fill', color);\n            tooltip.handleMouseOut();\n        });\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate() {\n        this.init();\n    }\n\n    render() {\n        return <div id={ this.props.id } />;\n    }\n}\n\nTopTemplatesSavings.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func\n};\n\nexport default initializeChart(TopTemplatesSavings);\n","import styled from 'styled-components';\nimport { CardTitle } from '@patternfly/react-core';\n\nexport const BorderedCardTitle = styled(CardTitle)`\n  border-bottom: 1px solid #d7d7d7;\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Card,\n    CardBody,\n    CardTitle,\n    Title\n} from '@patternfly/react-core';\n\nconst floatToStringWithCommas = (total) =>\n    total\n    .toFixed(2)\n    .toString()\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\nconst TotalSavings = ({ totalSavings = 0 }) => (\n    <Card style={ { borderTop: '3px solid #2B9AF3' } }>\n        <CardTitle style={ { paddingBottom: '0' } }>\n                Total savings\n        </CardTitle>\n        <CardBody>\n            <Title\n                headingLevel=\"h3\"\n                size=\"4xl\"\n                style={ { color: 'var(--pf-global--success-color--200)' } }\n            >\n                { floatToStringWithCommas(totalSavings) }\n            </Title>\n        </CardBody>\n    </Card>\n);\n\nTotalSavings.propTypes = {\n    totalSavings: PropTypes.number\n};\n\nexport default TotalSavings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    Card,\n    CardBody,\n    InputGroup,\n    InputGroupText,\n    TextInput\n} from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst validFloat = value => {\n    const floatValue = parseFloat(value);\n    return floatValue && floatValue >= 0 ? value : '';\n};\n\nconst CalculationCost = ({\n    costManual = '0',\n    setCostManual = () => {},\n    costAutomation = '0',\n    setCostAutomation = () => {}\n}) => (\n    <Card>\n        <CardTitle>\n                Calculate your automation\n        </CardTitle>\n        <CardBody>\n            <InputAndText>\n                <p>Manual cost of automation</p>\n                <em style={ { color: 'var(--pf-global--Color--dark-200)' } }>\n                        (e.g. average salary of mid-level Software Engineer)\n                </em>\n                <InputGroup style={ { width: '50%' } }>\n                    <InputGroupText>\n                        <DollarSignIcon />\n                    </InputGroupText>\n                    <TextInput\n                        id=\"manual-cost\"\n                        type=\"number\"\n                        aria-label=\"manual-cost\"\n                        value={ costManual }\n                        onChange={ (e) => setCostManual(validFloat(e)) }\n                    />\n                    <InputGroupText>/hr</InputGroupText>\n                </InputGroup>\n            </InputAndText>\n            <InputAndText style={ { paddingTop: '10px' } }>\n                <p>Automated process cost</p>\n                <InputGroup style={ { width: '50%' } }>\n                    <InputGroupText>\n                        <DollarSignIcon />\n                    </InputGroupText>\n                    <TextInput\n                        id=\"automation-cost\"\n                        type=\"number\"\n                        aria-label=\"automation-cost\"\n                        value={ costAutomation }\n                        onChange={ (e) => setCostAutomation(validFloat(e)) }\n                    />\n                    <InputGroupText>/hr</InputGroupText>\n                </InputGroup>\n            </InputAndText>\n        </CardBody>\n    </Card>\n);\n\nCalculationCost.propTypes = {\n    costManual: PropTypes.string,\n    setCostManual: PropTypes.func,\n    costAutomation: PropTypes.string,\n    setCostAutomation: PropTypes.func\n};\n\nexport default CalculationCost;\n","import React from 'react';\n\nimport {\n    Card,\n    CardBody\n} from '@patternfly/react-core';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst AutomationFormula = () => (\n    <Card style={ { height: '100%' } }>\n        <CardTitle>Automation formula</CardTitle>\n        <CardBody>\n            <p>\n                <b>Manual cost for template x</b> =\n                <em>\n                    (time for a manual run on one host in hours * (sum of all hosts across all job runs) ) * cost per hour\n                </em>\n            </p>\n            <p>\n                <b>Automation cost for template x</b> =\n                <em>cost of automation per hour * sum of total elapsed hours for a template</em>\n            </p>\n            <p>\n                <b>Savings</b> =\n                <em>Sum of (manual cost - automation cost) across all templates</em>\n            </p>\n        </CardBody>\n    </Card>\n);\n\nexport default AutomationFormula;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    Button,\n    Card,\n    CardBody,\n    InputGroup,\n    InputGroupText,\n    TextInput,\n    Tooltip,\n    Popover\n} from '@patternfly/react-core';\nimport {\n    InfoCircleIcon\n} from '@patternfly/react-icons';\n\nimport {\n    convertSecondsToMins,\n    convertMinsToSeconds\n} from '../../Utilities/helpers';\n\nconst TemplateDetail = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  div,\n  em {\n    padding-right: 5px;\n  }\n\n  @media (max-width: 1490px) {\n    display: block;\n\n    em {\n      padding: 10px 0;\n      display: block;\n    }\n  }\n`;\n\nconst TemplateDetailSubTitle = styled.em`\n  color: var(--pf-global--Color--dark-200);\n`;\n\nconst TooltipWrapper = styled.div`\n  p {\n    text-align: left;\n  }\n`;\n\nconst IconGroup = styled.div`\n  & svg {\n    fill: var(--pf-global--Color--dark-200);\n\n    :hover {\n      cursor: pointer;\n    }\n\n    :first-of-type {\n      margin-right: 10px;\n      margin-left: 10px;\n\n      @media (max-width: 1350px) {\n        margin-left: 0;\n      }\n    }\n  }\n`;\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nexport const QuestionIconTooltip = ({ data }) => (\n    <Popover\n        aria-label=\"template detail popover\"\n        position=\"left\"\n        bodyContent={\n            <TooltipWrapper>\n                <p>\n                    <b>Success elapsed sum</b>:{ ' ' }\n                    { data.successful_elapsed_total.toFixed(2) }\n                </p>\n                <p>\n                    <b>Number of associated organizations</b>:{ ' ' }\n                    { data.total_org_count }\n                </p>\n                <p>\n                    <b>Number of associated clusters</b>:{ ' ' }\n                    { data.total_cluster_count }\n                </p>\n            </TooltipWrapper>\n        }\n    >\n        <InfoCircleIcon />\n    </Popover>\n);\n\nQuestionIconTooltip.propTypes = {\n    data: PropTypes.object\n};\n\nconst TopTemplates = ({\n    data = [],\n    setDataRunTime = () => {},\n    redirectToJobExplorer = () => {}\n}) => (\n    <Card style={ { overflow: 'auto', flex: '1 1 0' } } className=\"top-templates\">\n        <CardBody>\n            <p>Enter the time it takes to run the following templates manually.</p>\n            { data.map((data) => (\n                <div key={ data.id }>\n                    <Tooltip content={ 'List of jobs for this template for past 30 days' } >\n                        <Button\n                            style={ { padding: '15px 0 10px' } }\n                            component=\"a\"\n                            onClick={ () => redirectToJobExplorer(data.id) }\n                            variant=\"link\"\n                        >\n                            { data.name }\n                        </Button>\n                    </Tooltip>\n                    <TemplateDetail>\n                        <InputAndText key={ data.id }>\n                            <InputGroup>\n                                <TextInput\n                                    id={ data.id }\n                                    type=\"number\"\n                                    aria-label=\"time run manually\"\n                                    value={ convertSecondsToMins(data.avgRunTime) }\n                                    onChange={ minutes =>\n                                        setDataRunTime(convertMinsToSeconds(minutes), data.id)\n                                    }\n                                />\n                                <InputGroupText>min</InputGroupText>\n                            </InputGroup>\n                        </InputAndText>\n                        <TemplateDetailSubTitle>\n                                    x { data.successful_hosts_total } host runs\n                        </TemplateDetailSubTitle>\n                        <IconGroup>\n                            <QuestionIconTooltip data={ data }/>\n                        </IconGroup>\n                    </TemplateDetail>\n                    <p style={ { color: '#486B00' } }>\n                        ${ data.delta.toFixed(2) }\n                    </p>\n                </div>\n            )) }\n        </CardBody>\n    </Card>\n);\n\nTopTemplates.propTypes = {\n    data: PropTypes.array,\n    setDataRunTime: PropTypes.func,\n    redirectToJobExplorer: PropTypes.func,\n    deselectedIds: PropTypes.array,\n    setDeselectedIds: PropTypes.func\n};\n\nexport default TopTemplates;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\nimport {\n    Card,\n    CardBody\n} from '@patternfly/react-core';\n\n// Imports from custom components\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\n// Imports from API\nimport {\n    preflightRequest,\n    readROI,\n    readROIOptions\n} from '../../Api';\n\n// Imports from utilities\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { roi as roiConst } from '../../Utilities/constants';\nimport useRedirect from '../../Utilities/useRedirect';\nimport {\n    calculateDelta,\n    convertSecondsToHours\n} from '../../Utilities/helpers';\n\n// Chart\nimport TopTemplatesSavings from '../../Charts/ROITopTemplates';\n\n// Local imports\nimport { BorderedCardTitle } from './helpers';\nimport TotalSavings from './TotalSavings';\nimport CalculationCost from './CalculationCost';\nimport AutomationFormula from './AutomationFormula';\nimport TopTemplates from './TopTemplates';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 5fr 2fr;\n  height: 100%;\n`;\n\nconst WrapperLeft = styled.div`\n  flex: 5;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n`;\n\nconst WrapperRight = styled.div`\n  flex: 2;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst mapApi = ({ items = []}) => items.map(el => ({\n    ...el,\n    delta: 0,\n    avgRunTime: 3600,\n    manualCost: 0,\n    automatedCost: 0\n}));\n\nconst updateDeltaCost = (data, costAutomation, costManual) => data.map(el => {\n    const manualCost = convertSecondsToHours(el.avgRunTime) * el.successful_hosts_total * parseFloat(costManual);\n    const automatedCost = convertSecondsToHours(el.successful_elapsed_total) * parseFloat(costAutomation);\n    const delta = calculateDelta(automatedCost, manualCost);\n\n    return { ...el, delta, manualCost, automatedCost };\n});\n\nconst computeTotalSavings = data => data.reduce((sum, curr) => sum + curr.delta, 0);\n\nconst AutomationCalculator = ({ history }) => {\n    const toJobExplorer = useRedirect(history, 'jobExplorer');\n    const [ costManual, setCostManual ] = useState('50');\n    const [ costAutomation, setCostAutomation ] = useState('20');\n\n    const [ preflight, setPreflight ] = useApi(null);\n    const [ options, setOptions ] = useApi({});\n    const [ api, fetchApi, setDataInApi ] = useApi(\n        [],\n        (data) => updateDeltaCost(mapApi(data), costAutomation, costManual)\n    );\n\n    const {\n        queryParams,\n        setFromToolbar\n    } = useQueryParams(roiConst.defaultParams);\n\n    /**\n     * Modifies one elements avgRunTime in the unfilteredData\n     * and updates all calculated fields.\n     * Used in top templates.\n     */\n    const setDataRunTime = (seconds, id) => {\n        const updatedData = api.data.map(el => {\n            if (el.id === id) {\n                el.avgRunTime = seconds;\n                const updatedDelta = updateDeltaCost([ el ], costAutomation, costManual)[0];\n                return updatedDelta;\n            } else {\n                return el;\n            }\n        });\n\n        setDataInApi(updatedData);\n    };\n\n    useEffect(() => {\n        setPreflight(preflightRequest());\n        setOptions(readROIOptions({ params: queryParams }));\n    }, []);\n\n    /**\n     * Recalculates the delta and costs in the data after the cost is changed.\n     */\n    useEffect(() => {\n        setDataInApi(\n            updateDeltaCost(api.data, costAutomation, costManual)\n        );\n    }, [ costAutomation, costManual ]);\n\n    /**\n     * Get data from API depending on the queryParam.\n     */\n    useEffect(() => {\n        fetchApi(readROI({ params: queryParams }));\n    }, [ queryParams ]);\n\n    /**\n     * Function to redirect to the job explorer page\n     * with the same filters as is used here.\n     */\n    const redirectToJobExplorer = templateId => {\n        const initialQueryParams = {\n            quick_date_range: 'last_30_days',\n            template_id: [ templateId ]\n        };\n        toJobExplorer(initialQueryParams);\n    };\n\n    const renderLeft = () => (\n        <WrapperLeft>\n            <Main style={ { paddingBottom: '0' } }>\n                <Card>\n                    <BorderedCardTitle>Automation savings</BorderedCardTitle>\n                    <CardBody>\n                        { api.isLoading && <LoadingState /> }\n                        { api.error && <ApiErrorState message={ api.error.error } /> }\n                        { api.isSuccess && api.data.length <= 0 && <NoData /> }\n                        { api.isSuccess && api.data.length > 0 && (\n                            <React.Fragment>\n                                <TopTemplatesSavings\n                                    margin={ { top: 20, right: 20, bottom: 20, left: 70 } }\n                                    id=\"d3-roi-chart-root\"\n                                    data={ api.data }\n                                />\n                                <p style={ { textAlign: 'center' } }>Templates</p>\n                            </React.Fragment>\n                        ) }\n                    </CardBody>\n                </Card>\n            </Main>\n            <Main>\n                <AutomationFormula />\n            </Main>\n        </WrapperLeft>\n    );\n\n    const renderRight = () => (\n        <WrapperRight>\n            <Main style={ { paddingBottom: '0', paddingLeft: '0' } }>\n                <TotalSavings totalSavings={ computeTotalSavings(api.data) } />\n            </Main>\n            <Main style={ { display: 'flex', flexDirection: 'column', flex: '1 1 0', paddingLeft: '0' } }>\n                <CalculationCost\n                    costManual={ costManual }\n                    setCostManual={ setCostManual }\n                    costAutomation={ costAutomation }\n                    setCostAutomation={ setCostAutomation }\n                />\n                <TopTemplates\n                    redirectToJobExplorer={ redirectToJobExplorer }\n                    data={ api.data }\n                    setDataRunTime={ setDataRunTime }\n                    setUnfilteredData={ api.data }\n                />\n            </Main>\n        </WrapperRight>\n    );\n\n    return (\n        <React.Fragment>\n            <PageHeader style={ { flex: '0' } }>\n                <PageHeaderTitle title={ 'Automation Calculator' } />\n            </PageHeader>\n            { preflight.error && (\n                <Main>\n                    <EmptyState\n                        preflightError={ preflight.error }\n                    />\n                </Main>\n            ) }\n            { preflight.isSuccess && (\n                <React.Fragment>\n                    <Main style={ { paddingBottom: '0' } }>\n                        <Card>\n                            <CardBody>\n                                <FilterableToolbar\n                                    categories={ options.data }\n                                    filters={ queryParams }\n                                    setFilters={ setFromToolbar }\n                                />\n                            </CardBody>\n                        </Card>\n                    </Main>\n                    <Wrapper className=\"automation-wrapper\">\n                        { renderLeft() }\n                        { renderRight() }\n                    </Wrapper>\n                </React.Fragment>\n            ) }\n        </React.Fragment>\n    );\n};\n\nAutomationCalculator.propTypes = {\n    history: PropTypes.object\n};\n\nexport default AutomationCalculator;\n","import * as d3 from 'd3';\n\nclass Tooltip {\n    constructor(opts) {\n        this.svg = opts.svg;\n        this.colors = opts.colors;\n        this.draw();\n    }\n\n    draw() {\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 145;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -41)\n        .attr('rx', 2)\n        .attr('height', 110)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.circleSuccess = this.toolTipBase\n        .append('circle')\n        .attr('cx', 26)\n        .attr('cy', 0)\n        .attr('r', 8)\n        .attr('stroke', 'white')\n        .attr('fill', 'white');\n        this.circleFail = this.toolTipBase\n        .append('circle')\n        .attr('cx', 26)\n        .attr('cy', 26)\n        .attr('r', 8)\n        .attr('stroke', 'white')\n        .attr('fill', 'white');\n        this.successText = this.toolTipBase\n        .append('text')\n        .attr('x', 43)\n        .attr('y', 4)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Successful');\n        this.failText = this.toolTipBase\n        .append('text')\n        .attr('x', 43)\n        .attr('y', 28)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Failed');\n        this.successIcon = this.toolTipBase\n        .append('text')\n        .attr('class', 'fas fa-sm')\n        .attr('fill', this.colors(1))\n        .attr('x', 19)\n        .attr('y', 5)\n        .text('\\uf058');\n        this.failedIcon = this.toolTipBase\n        .append('text')\n        .attr('class', 'fas fa-sm')\n        .attr('fill', this.colors(0))\n        .attr('x', 20)\n        .attr('y', 31)\n        .text('\\uf06a');\n        this.jobs = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 137)\n        .attr('y', -21)\n        .attr('font-size', 12)\n        .attr('text-anchor', 'end')\n        .text('No jobs');\n        this.successful = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 122)\n        .attr('y', 4)\n        .text('0');\n        this.failed = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 122)\n        .attr('y', 28)\n        .text('0');\n        this.date = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('stroke', 'white')\n        .attr('x', 20)\n        .attr('y', -21)\n        .attr('font-size', 12)\n        .text('Never');\n        this.clickMore = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 20)\n        .attr('y', 55)\n        .attr('font-size', 12)\n        .text('Click for details');\n    }\n\n    handleMouseOver = (d) => {\n        let success = 0;\n        let fail = 0;\n        let total = 0;\n        const x =\n            d3.event.pageX -\n            d3\n            .select(this.svg)\n            .node()\n            .getBoundingClientRect().x +\n            10;\n        const y =\n            d3.event.pageY -\n            d3\n            .select(this.svg)\n            .node()\n            .getBoundingClientRect().y -\n            10;\n        const formatTooltipDate = d3.timeFormat('%m/%d');\n        if (!d) {\n            return;\n        }\n\n        const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n        const chartWidth = d3\n        .select(this.svg + '> svg')\n        .node()\n        .getBoundingClientRect().width;\n        const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n        const flipped = overflow < (x / chartWidth) * 100;\n        if (d) {\n            success = d.RAN || 0;\n            fail = d.FAIL || 0;\n            total = d.TOTAL || 0;\n            this.date.text(formatTooltipDate(d.DATE || null));\n        }\n\n        if (d && d.data) {\n            success = d.data.RAN || 0;\n            fail = d.data.FAIL || 0;\n            total = d.data.TOTAL || 0;\n            this.date.text(formatTooltipDate(d.data.DATE || null));\n        }\n\n        this.jobs.text('' + total + ' jobs');\n        this.jobsWidth = this.jobs.node().getComputedTextLength();\n        this.failed.text('' + fail);\n        this.successful.text('' + success);\n        this.successTextWidth = this.successful.node().getComputedTextLength();\n        this.failTextWidth = this.failed.node().getComputedTextLength();\n\n        const maxTextPerc = this.jobsWidth / this.boxWidth * 100;\n        const threshold = 40;\n        const overage = maxTextPerc / threshold;\n        let adjustedWidth;\n        if (maxTextPerc > threshold) {\n            adjustedWidth = this.boxWidth * overage;\n        } else {\n            adjustedWidth = this.boxWidth;\n        }\n\n        this.boundingBox.attr('width', adjustedWidth);\n        this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n        if (flipped) {\n            this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n            this.boundingBox.attr('x', -adjustedWidth - 20);\n            this.circleSuccess.attr('cx', -adjustedWidth);\n            this.circleFail.attr('cx', -adjustedWidth);\n            this.failedIcon.attr('x', -adjustedWidth - 7);\n            this.successIcon.attr('x', -adjustedWidth - 7);\n            this.successText.attr('x', -adjustedWidth + 17);\n            this.failText.attr('x', -adjustedWidth + 17);\n            this.successful.attr('x', -this.successTextWidth - 20 - 12);\n            this.failed.attr('x', -this.failTextWidth - 20 - 12);\n            this.date.attr('x', -adjustedWidth - 5);\n            this.jobs.attr('x', -this.jobsWidth / 2 - 7);\n            this.clickMore.attr('x', -adjustedWidth);\n        } else {\n            this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n            this.boundingBox.attr('x', 10);\n            this.circleSuccess.attr('cx', 26);\n            this.circleFail.attr('cx', 26);\n            this.failedIcon.attr('x', 19);\n            this.successIcon.attr('x', 19);\n            this.successText.attr('x', 43);\n            this.failText.attr('x', 43);\n            this.successful.attr('x', (adjustedWidth - this.successTextWidth));\n            this.failed.attr('x', (adjustedWidth - this.failTextWidth));\n            this.date.attr('x', 20);\n            this.jobs.attr('x', (adjustedWidth));\n            this.clickMore.attr('x', 20);\n        }\n\n        this.toolTipBase.style('opacity', 1);\n        this.toolTipBase.interrupt();\n    }\n\n    handleMouseOut = () => {\n        this.toolTipBase\n        .transition()\n        .delay(15)\n        .style('opacity', 0)\n        .style('pointer-events', 'none');\n    }\n}\n\nexport default Tooltip;\n","import React, { Component } from 'react';\nimport {\n    withRouter\n} from 'react-router-dom';\n\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { stringify } from 'query-string';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\n\nclass BarChart extends Component {\n    constructor(props) {\n        super(props);\n        this.draw = this.draw.bind(this);\n        this.init = this.init.bind(this);\n        this.resize = this.resize.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.state = {\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    redirectToJobExplorer({ data: { DATE: date }}) {\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const { orgId, templateId } = this.props;\n        const initialQueryParams = {\n            start_date: formattedDate,\n            end_date: formattedDate,\n            quick_date_range: 'custom',\n            status: [ 'failed', 'successful' ],\n            template_id: templateId,\n            org_id: orgId\n        };\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => { this.init(); }, 500)\n        });\n    }\n\n    init() {\n        this.draw();\n    }\n\n    // Methods\n    draw() {\n        // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const parseTime = d3.timeParse('%Y-%m-%d');\n        let { data: unformattedData } = this.props;\n        const data = unformattedData.reduce((formatted, { created_date, successful_count, failed_count }) => {\n            let DATE = parseTime(created_date) || new Date();\n            let RAN = +successful_count || 0;\n            let FAIL = +failed_count || 0;\n            let TOTAL = +successful_count + failed_count || 0;\n            return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n        }, []);\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n        const x = d3\n        .scaleBand()\n        .rangeRound([ 0, width ])\n        .padding(0.35); // percentage\n        const y = d3.scaleLinear().range([ height, 0 ]);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n                this.props.margin.left +\n                ',' +\n                this.props.margin.top +\n                ')'\n        );\n        //[fail, success]\n        let colors = d3.scaleOrdinal([ '#6EC664', '#A30000' ]);\n\n        const barTooltip = new Tooltip({\n            svg: '#' + this.props.id,\n            colors\n        });\n        const status = [ 'FAIL', 'RAN' ];\n\n        // stack our data\n        const stack = d3\n        .stack()\n        .keys(status)\n        .order(d3.stackOrderNone)\n        .offset(d3.stackOffsetNone);\n\n        const layers = stack(data);\n        // Scale the range of the data\n        x.domain(layers[0].map(d => d.data.DATE));\n        y.domain([ 0, d3.max(layers[layers.length - 1], d => d[1] * 1.15) || 8 ]);\n        // Add the Y Axis\n        svg\n        .append('g')\n        .attr('class', 'y-axis')\n        .call(\n            d3\n            .axisLeft(y)\n            .tickSize(-width, 0, 0)\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.y-axis .tick text').attr('x', -5);\n        // text label for the y axis\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Jobs across all clusters');\n        // Add the X Axis\n        let ticks;\n        const maxTicks = Math.round(data.length / (data.length / 2));\n        ticks = data.map(d => d.DATE);\n        if (data.length > 14) {\n            ticks = data.map((d, i) =>\n                i % maxTicks === 0 ? d.DATE : undefined).filter(item => item);\n        }\n\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(\n            d3\n            .axisBottom(x)\n            .tickValues(ticks)\n            .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.x-axis .tick text')\n        .attr('y', 10);\n\n        // text label for the x axis\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' +\n                width / 2 +\n                ' ,' +\n                (height + this.props.margin.top + 20) +\n                ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n\n        const layer = svg\n        .selectAll('layer')\n        .data(layers)\n        .enter()\n        .append('g')\n        .attr('class', 'layer')\n        .style('fill', (_d, i) => colors(i));\n        layer\n        .selectAll('rect')\n        .data(d => d)\n        .enter()\n        .append('rect')\n        .attr('x', d => x(d.data.DATE))\n        .attr('y', d => y(d[0]))\n        .attr('height', 0)\n        .attr('width', x.bandwidth() - 1)\n        .transition()\n        .duration(550)\n        .ease(d3.easeCubic)\n        .attr('y', d => y(d[1]))\n        .attr('height', d => y(d[0]) - y(d[1]));\n        layer\n        .selectAll('rect')\n        .on('mouseover', barTooltip.handleMouseOver)\n        .on('mousemove', barTooltip.handleMouseOver)\n        .on('mouseout', barTooltip.handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.data !== this.props.data) {\n            this.init();\n        }\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        return <div id={ this.props.id } />;\n    }\n}\n\nBarChart.propTypes = {\n    id: PropTypes.string,\n    templateId: PropTypes.array,\n    orgId: PropTypes.array,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    history: PropTypes.object\n};\n\nexport default initializeChart(withRouter(BarChart));\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport initializeChart from './BaseChart';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\nimport { stringify } from 'query-string';\nimport * as d3 from 'd3';\n\nclass LineChart extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.updateCluster = this.updateCluster.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.state = {\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    redirectToJobExplorer({ DATE: date }) {\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const { clusterId, templateId, orgId } = this.props;\n        const initialQueryParams = {\n            start_date: formattedDate,\n            end_date: formattedDate,\n            quick_date_range: 'custom',\n            status: [ 'failed', 'successful' ],\n            cluster_id: clusterId,\n            org_id: orgId,\n            template_id: templateId\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    }\n\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => {\n                this.init();\n            }, 500)\n        });\n    }\n\n    updateCluster() {\n        this.init();\n    }\n    init() {\n        this.draw();\n    }\n    // Methods\n    draw() {\n    // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n\n        function transition(path) {\n            path\n            .transition()\n            .duration(1000)\n            .attrTween('stroke-dasharray', tweenDash);\n        }\n\n        function tweenDash() {\n            const l = this.getTotalLength();\n            const i = d3.interpolateString('0,' + l, l + ',' + l);\n            return function(t) {\n                return i(t);\n            };\n        }\n\n        const x = d3.scaleTime().rangeRound([ 0, width ]);\n        const y = d3.scaleLinear().range([ height, 0 ]);\n\n        //[success, fail, total]\n        let colors = d3.scaleOrdinal([ '#6EC664', '#A30000', '#06C' ]);\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n        .attr('z', 100)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n        // Tooltip\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id,\n            colors\n        });\n        const { data: unformattedData } = this.props;\n        const parseTime = d3.timeParse('%Y-%m-%d');\n\n        const data = unformattedData.reduce(\n            (formatted, { created_date, successful_count, failed_count }) => {\n                let DATE = parseTime(created_date) || new Date();\n                let RAN = +successful_count || 0;\n                let FAIL = +failed_count || 0;\n                let TOTAL = +successful_count + failed_count || 0;\n                return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n            },\n            []\n        );\n        // Scale the range of the data\n        x.domain(\n            d3.extent(data, function(d) {\n                return d.DATE;\n            })\n        );\n        y.domain([\n            0,\n            d3.max(data, function(d) {\n                return d.TOTAL * 1.15 || 8;\n            })\n        ]);\n\n        const successLine = d3\n        .line()\n        .curve(d3.curveMonotoneX)\n        .x(function(d) {\n            return x(d.DATE);\n        })\n        .y(function(d) {\n            return y(d.RAN);\n        });\n\n        const failLine = d3\n        .line()\n        .defined(d => !isNaN(d.FAIL))\n        .curve(d3.curveMonotoneX)\n        .x(function(d) {\n            return x(d.DATE);\n        })\n        .y(function(d) {\n            return y(d.FAIL);\n        });\n        // Add the Y Axis\n        svg\n        .append('g')\n        .attr('class', 'y-axis')\n        .call(\n            d3\n            .axisLeft(y)\n            .ticks(10)\n            .tickSize(-width)\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.y-axis .tick text').attr('x', -5);\n\n        // text label for the y axis\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Job runs');\n        // Add the X Axis\n        let ticks;\n        const maxTicks = Math.round(data.length / (data.length / 2));\n        ticks = data.map(d => d.DATE);\n        if (data.length > 14) {\n            ticks = data\n            .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n            .filter(item => item);\n        }\n\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(\n            d3\n            .axisBottom(x)\n            .tickValues(ticks)\n            .tickSize(-height)\n            .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n        ) // \"Jan-01\"\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n        // text label for the x axis\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n        const vertical = svg\n        .append('path')\n        .attr('class', 'mouse-line')\n        .style('stroke', 'black')\n        .style('stroke-width', '3px')\n        .style('stroke-dasharray', '3, 3')\n        .style('opacity', '0');\n\n        const handleMouseOver = function(d) {\n            tooltip.handleMouseOver(d);\n            // show vertical line\n            vertical.transition().style('opacity', '1');\n        };\n\n        const handleMouseMove = function() {\n            let intersectX = this.cx.baseVal.value;\n            vertical.attr('d', function() {\n                let d = 'M' + intersectX + ',' + height;\n                d += ' ' + intersectX + ',' + 0;\n                return d;\n            });\n        };\n\n        const handleMouseOut = function() {\n            // hide tooltip\n            tooltip.handleMouseOut();\n            // hide vertical line\n            vertical.transition().style('opacity', 0);\n        };\n\n        // Add the successLine path.\n        svg\n        .append('path')\n        .data([ data ])\n        .attr('class', 'line')\n        .style('fill', 'none')\n        .style('stroke', () => colors(1))\n        .attr('stroke-width', 2)\n        .attr('d', successLine)\n        .call(transition);\n\n        // Add the failLine path.\n        svg\n        .append('path')\n        .data([ data ])\n        .attr('class', 'line')\n        .style('fill', 'none')\n        .style('stroke', () => colors(0))\n        .attr('stroke-width', 2)\n        .attr('d', failLine)\n        .call(transition);\n        svg\n        .selectAll('dot')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('r', 3)\n        .style('stroke', () => colors(1))\n        .style('fill', () => colors(1))\n        .attr('cx', function(d) {\n            return x(d.DATE);\n        })\n        .attr('cy', function(d) {\n            return y(d.RAN);\n        })\n\n        .on('mouseover', handleMouseOver)\n        .on('mousemove', handleMouseMove)\n        .on('mouseout', handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n        // create our failLine circles\n        svg\n        .selectAll('dot')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('r', 3)\n        .style('stroke', () => colors(0))\n        .style('fill', () => colors(0))\n        .attr('cx', function(d) {\n            return x(d.DATE);\n        })\n        .attr('cy', function(d) {\n            return y(d.FAIL);\n        })\n        .on('mouseover', handleMouseOver)\n        .on('mousemove', handleMouseMove)\n        .on('mouseout', handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n    }\n\n    componentDidMount() {\n        this.updateCluster();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.data !== this.props.data) {\n            this.updateCluster();\n        }\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        return <div id={ this.props.id } />;\n    }\n}\n\nLineChart.propTypes = {\n    id: PropTypes.string,\n    clusterId: PropTypes.array,\n    templateId: PropTypes.array,\n    orgId: PropTypes.array,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    history: PropTypes.object\n};\n\nexport default initializeChart(withRouter(LineChart));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { trimStr } from '../Utilities/helpers';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell\n} from '@patternfly/react-core';\n\nconst DataListCell = styled(PFDataListCell)`\n    --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst ModulesList = ({ modules, isLoading }) => (\n    <DataList aria-label=\"Top Modules\" style={ {\n        maxHeight: '400px',\n        overflow: 'auto',\n        height: '400px',\n        background: 'white'\n    } }>\n        <DataListItem aria-labelledby=\"top-modules-header\">\n            <DataListCell>\n                <h3>Top modules</h3>\n            </DataListCell>\n            <DataCellEnd>\n                <h3>Usage</h3>\n            </DataCellEnd>\n        </DataListItem>\n        { isLoading && (\n            <PFDataListItem\n                aria-labelledby=\"modules-loading\"\n                key={ isLoading }\n                style={ { border: 'none' } }\n            >\n                <PFDataListCell>\n                    <LoadingState />\n                </PFDataListCell>\n            </PFDataListItem>\n        ) }\n        { !isLoading && modules.length <= 0 && (\n            <PFDataListItem\n                aria-labelledby=\"modules-no-data\"\n                key={ isLoading }\n                style={ { border: 'none' } }\n            >\n                <PFDataListCell>\n                    <NoData />\n                </PFDataListCell>\n            </PFDataListItem>\n        ) }\n        { !isLoading && modules.filter(module => module.name !== null).map(({ name, host_task_count }, index) => (\n            <DataListItem aria-labelledby=\"top-modules-detail\" key={ index }>\n                <DataListCell>\n                    <span>{ trimStr(name) }</span>\n                </DataListCell>\n                <DataCellEnd>\n                    { host_task_count }\n                </DataCellEnd>\n            </DataListItem>\n        )) }\n    </DataList>\n);\n\nModulesList.propTypes = {\n    modules: PropTypes.array,\n    isLoading: PropTypes.bool\n};\n\nexport default ModulesList;\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport { Paths } from '../paths';\nimport { stringify } from 'query-string';\nimport useApi from '../Utilities/useApi';\nimport { formatDateTime, formatSeconds } from '../Utilities/helpers';\nimport {\n    readJobExplorer\n} from '../Api';\n\nimport {\n    Button,\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell,\n    Label,\n    Modal\n} from '@patternfly/react-core';\n\nimport { CircleIcon } from '@patternfly/react-icons';\n\nconst success = (\n    <CircleIcon\n        size=\"sm\"\n        key=\"5\"\n        style={ { color: 'rgb(110, 198, 100)', marginRight: '5px' } }\n    />\n);\nconst fail = (\n    <>\n        <CircleIcon\n            size=\"sm\"\n            key=\"5\"\n            style={ { color: 'rgb(163, 0, 0)', marginRight: '5px' } }\n        />\n        <span id=\"fail-icon\">!</span>\n    </>\n);\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\nconst PFDataListItemNoBorder = styled(PFDataListItem)`\n    border-bottom: none;\n    margin-bottom: -20px;\n`;\nconst DataListItemCompact = styled(DataListItem)`\n  padding: 0;\n  > .pf-c-data-list__cell {\n    font-weight: 600;\n  }\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst DataListCellCompact = styled(DataListCell)`\n    padding: 7px;\n`;\n\nconst DataListFocus = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, auto);\n    grid-gap: 10px;\n    padding: var(--pf-global--spacer--lg);\n    background: #ebebeb;\n    border: 1px solid #ccc;\n    border-top: none;\n    margin-bottom: 20px;\n`;\nconst DataCellEndCompact = styled(DataCellEnd)`\n    padding: 7px !important;\n`;\n\nconst formatTopFailedTask = data => {\n    if (!data) {\n        return;\n    }\n\n    if (data && data[0]) {\n        const percentage = Math.ceil(data[0].failed_count / data[0].total_failed_count * 100);\n        return `${data[0].task_name} ${percentage}%`;\n    }\n\n    return `Unavailable`;\n};\n\nconst formatTopFailedStep = data => {\n    if (!data) {\n        return;\n    }\n\n    if (data && data[0]) {\n        const percentage = Math.ceil(data[0].failed_count / data[0].total_failed_count * 100);\n        return `${data[0].template_name} ${percentage}%`;\n    }\n\n    return `Unavailable`;\n};\n\nconst formatSuccessRate = (successCount, totalCount) => Math.ceil(successCount / totalCount * 100) + '%';\nconst formatAvgRun = (elapsed, totalCount) => new Date(Math.ceil(elapsed / totalCount) * 1000).toISOString().substr(11, 8);\nconst formatTotalTime = elapsed => new Date(elapsed * 1000).toISOString().substr(11, 8);\n\nconst ModalContents = ({ selectedId, isOpen, handleModal, qp, jobType, handleCloseBtn }) => {\n    const [{\n        data: { items: relatedJobs = []}\n    }, setRelatedJobs ] = useApi({ items: []});\n    const [{\n        data: { items: [ stats = 0 ] }\n    }, setStats ] = useApi({ items: []});\n\n    let history = useHistory();\n\n    const redirectToJobExplorer = () => {\n        const { jobExplorer } = Paths;\n        const initialQueryParams = {\n            template_id: [ selectedId ],\n            status: [ 'successful', 'failed', 'new', 'pending', 'waiting', 'error', 'canceled', 'running' ],\n            job_type: [ 'job' ],\n            quick_date_range: 'last_30_days'\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    const relatedTemplateJobsParams = {\n        ...qp,\n        template_id: [ selectedId ],\n        attributes: [\n            'id',\n            'status',\n            'job_type',\n            'started',\n            'finished',\n            'elapsed',\n            'created',\n            'cluster_name',\n            'org_name'\n        ],\n        group_by_time: false,\n        limit: 5,\n        sort_by: 'created:asc',\n        quick_date_range: qp.quick_date_range ? qp.quick_date_range : 'last_30_days',\n        job_type: [ jobType ]\n    };\n\n    const agreggateTemplateParams = {\n        group_by: 'template',\n        template_id: [ selectedId ],\n        attributes: [\n            'elapsed',\n            'job_type',\n            'successful_count',\n            'failed_count',\n            'total_count',\n            jobType === 'job' ? 'most_failed_tasks' : 'most_failed_steps'\n        ],\n        status: qp.status,\n        quick_date_range: qp.quick_date_range ? qp.quick_date_range : 'last_30_days',\n        job_type: [ jobType ]\n    };\n\n    useEffect(() => {\n        if (selectedId) {\n            setStats(readJobExplorer({ params: agreggateTemplateParams }));\n            setRelatedJobs(readJobExplorer({ params: relatedTemplateJobsParams }));\n        }\n    }, [ selectedId ]);\n\n    return (\n        <Modal\n            aria-label=\"modal\"\n            width={ '80%' }\n            title={ stats.name ? stats.name : 'no-template-name' }\n            isOpen={ isOpen }\n            onClose={ () => {\n                handleModal(false);\n                handleCloseBtn(null);\n            } }\n            actions={ [\n                <Button\n                    key=\"cancel\"\n                    variant=\"secondary\"\n                    onClick={ () => {\n                        handleModal(false);\n                        handleCloseBtn(null);\n                    } }\n                >\n                    Close\n                </Button>\n            ] }\n        >\n            <DataList aria-label=\"Selected Template Details\">\n                <PFDataListItemNoBorder\n                    aria-labelledby=\"Selected Template Statistics\"\n                >\n                    <DataListFocus>\n                        <div aria-labelledby=\"job runs\">\n                            <b style={ { marginRight: '10px' } }>Number of runs</b>\n                            { stats.total_count ?\n                                stats.total_count : 'Unavailable' }\n                        </div>\n                        <div aria-labelledby=\"total time\">\n                            <b style={ { marginRight: '10px' } }>Total time</b>\n                            { stats.elapsed ?\n                                formatTotalTime(stats.elapsed) : 'Unavailable' }\n                        </div>\n                        <div aria-labelledby=\"Avg Time\">\n                            <b style={ { marginRight: '10px' } }>Avg time</b>\n                            { stats.elapsed ?\n                                formatAvgRun(stats.elapsed, stats.total_count) : 'Unavailable' }\n                        </div>\n                        <div aria-labelledby=\"success rate\">\n                            <b style={ { marginRight: '10px' } }>Success rate</b>\n                            { !isNaN(stats.successful_count) ?\n                                formatSuccessRate(stats.successful_count, stats.total_count) : 'Unavailable' }\n                        </div>\n                        { stats.most_failed_tasks && (\n                            <div aria-labelledby=\"most failed task\">\n                                <b style={ { marginRight: '10px' } }>Most failed task</b>\n                                { stats.most_failed_tasks ?\n                                    formatTopFailedTask(stats.most_failed_tasks) : 'Unavailable' }\n                            </div>\n\n                        ) }\n                        { stats.most_failed_steps && (\n\n                            <div aria-labelledby=\"most failed step\">\n                                <b style={ { marginRight: '10px' } }>Most failed step</b>\n                                { stats.most_failed_steps ?\n                                    formatTopFailedStep(stats.most_failed_steps) : 'Unavailable' }\n                            </div>\n                        ) }\n                    </DataListFocus>\n                </PFDataListItemNoBorder>\n                <DataListItemCompact>\n                    <DataListCellCompact key=\"last5jobs\">\n                        <Label variant=\"outline\">Last 5 jobs</Label>\n                    </DataListCellCompact>,\n                    <DataCellEndCompact>\n                        <Button component=\"a\" onClick={ redirectToJobExplorer } variant=\"link\">\n                                    View all jobs\n                        </Button>\n                    </DataCellEndCompact>\n                </DataListItemCompact>\n                <DataListItemCompact aria-labelledby=\"datalist header\">\n                    <PFDataListCell key=\"job heading\">Id/Name</PFDataListCell>\n                    <PFDataListCell key=\"cluster heading\">Cluster</PFDataListCell>\n                    <PFDataListCell key=\"start time heading\">Start Time</PFDataListCell>\n                    <PFDataListCell key=\"total time heading\">Total Time</PFDataListCell>\n                </DataListItemCompact>\n                { relatedJobs.length <= 0 && <LoadingState /> }\n                { relatedJobs.length > 0 &&\n                            relatedJobs.map((job, index) => (\n                                <DataListItem\n                                    style={ { padding: '10px 0' } }\n                                    key={ `job-details-${index}` }\n                                    aria-labelledby=\"job details\"\n                                >\n                                    <PFDataListCell key=\"job name\">\n                                        { job.status === 'successful' ? success : fail }{ ' ' }\n                                        { job.id.id } - { job.id.template_name }\n                                    </PFDataListCell>\n                                    <PFDataListCell key=\"job cluster\">\n                                        { job.cluster_name }\n                                    </PFDataListCell>\n                                    <PFDataListCell key=\"start time\">\n                                        { formatDateTime(job.started) }\n                                    </PFDataListCell>\n                                    <PFDataListCell key=\"total time\">\n                                        { formatSeconds(job.elapsed) }\n                                    </PFDataListCell>\n                                </DataListItem>\n                            )) }\n            </DataList>\n        </Modal>\n    );\n};\n\nModalContents.propTypes = {\n    selectedId: PropTypes.number,\n    qp: PropTypes.object,\n    jobType: PropTypes.string,\n    handleCloseBtn: PropTypes.func,\n    isOpen: PropTypes.bool,\n    handleModal: PropTypes.func\n};\n\nexport default ModalContents;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell\n} from '@patternfly/react-core';\n\nimport ModalContents from './ModalContents';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst TemplatesList = ({ templates, isLoading, qp, title, jobType }) => {\n    const [ selectedId, setSelectedId ] = useState(null);\n    const [ isModalOpen, setIsModalOpen ] = useState(false);\n\n    return (\n    <>\n      <DataList aria-label=\"Top Templates\" style={ {\n          maxHeight: '400px',\n          overflow: 'auto',\n          height: '400px',\n          background: 'white'\n      } }>\n          <DataListItem aria-labelledby=\"top-templates-header\">\n              <DataListCell>\n                  <h3>{ title }</h3>\n              </DataListCell>\n              <DataCellEnd>\n                  <h3>Usage</h3>\n              </DataCellEnd>\n          </DataListItem>\n          { isLoading && (\n              <PFDataListItem\n                  aria-labelledby=\"templates-loading\"\n                  key={ isLoading }\n                  style={ { border: 'none' } }\n\n              >\n                  <PFDataListCell>\n                      <LoadingState />\n                  </PFDataListCell>\n              </PFDataListItem>\n          ) }\n          { !isLoading && templates.length <= 0 && (\n              <PFDataListItem\n                  aria-labelledby=\"templates-no-data\"\n                  key={ isLoading }\n                  style={ { border: 'none' } }\n              >\n                  <PFDataListCell>\n                      <NoData />\n                  </PFDataListCell>\n              </PFDataListItem>\n          ) }\n          { !isLoading && templates.map(({ name, total_count, id }, index) => (\n              <DataListItem aria-labelledby=\"top-templates-detail\" key={ index }>\n                  <DataListCell>\n                      <a\n                          onClick={ () => {\n                              setIsModalOpen(true);\n                              setSelectedId(id);\n                          } }\n                      >\n                          { name }\n                      </a>\n                  </DataListCell>\n                  <DataCellEnd>\n                      { total_count }\n                  </DataCellEnd>\n              </DataListItem>\n          )) }\n      </DataList>\n        <ModalContents\n            isOpen={ isModalOpen }\n            handleModal={ setIsModalOpen }\n            selectedId={ selectedId }\n            qp={ qp }\n            jobType={ jobType }\n            handleCloseBtn={ setSelectedId }\n        />\n    </>\n    );\n};\n\nTemplatesList.propTypes = {\n    templates: PropTypes.array,\n    isLoading: PropTypes.bool,\n    queryParams: PropTypes.object,\n    title: PropTypes.string\n};\n\nexport default TemplatesList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport {\n    preflightRequest,\n    readClustersOptions,\n    readJobExplorer,\n    readEventExplorer\n} from '../../Api';\n\nimport { jobExplorer } from '../../Utilities/constants';\nimport useApi from '../../Utilities/useApi';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle\n} from '@patternfly/react-core';\n\nimport BarChart from '../../Charts/BarChart';\nimport LineChart from '../../Charts/LineChart';\nimport ModulesList from '../../Components/ModulesList';\nimport TemplatesList from '../../Components/TemplatesList';\nimport FilterableToolbar from '../../Components/Toolbar';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport { clusters } from '../../Utilities/constants';\n\nconst initialTopTemplateParams = {\n    group_by: 'template',\n    limit: 10,\n    job_type: [ 'job' ],\n    group_by_time: false,\n    status: [ 'successful', 'failed' ]\n};\n\nconst initialTopWorkflowParams = {\n    group_by: 'template',\n    limit: 10,\n    job_type: [ 'workflowjob' ],\n    group_by_time: false,\n    status: [ 'successful', 'failed' ]\n};\n\nconst initialModuleParams = {\n    group_by: 'module',\n    sort_by: 'host_task_count:desc',\n    limit: 10\n};\n\nconst Clusters = () => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n\n    const optionsMapper = options => {\n        const { groupBy, attributes, ...rest } = options;\n        return rest;\n    };\n\n    const {\n        queryParams,\n        setFromToolbar\n    } = useQueryParams({ ...clusters.defaultParams });\n\n    const [{\n        isLoading,\n        isSuccess,\n        error,\n        data: { items: chartData = []}\n    }, setData ] = useApi({ items: []});\n\n    const [{ data: { items: templates = []}}, setTemplates ] = useApi({ items: []});\n    const [{ data: { items: workflows = []}}, setWorkflows ] = useApi({ items: []});\n    const [{ data: { items: modules = []}}, setModules ] = useApi({ items: []});\n    const [{ data: options = []}, setOptions ] = useApi({}, optionsMapper);\n\n    const initialOptionsParams = {\n        attributes: jobExplorer.attributes\n    };\n\n    const { queryParams: optionsQueryParams } = useQueryParams(\n        initialOptionsParams\n    );\n\n    const {\n        cluster_id,\n        org_id,\n        template_id,\n        quick_date_range,\n        start_date,\n        end_date\n    } = queryParams;\n\n    const topTemplatesParams = {\n        cluster_id,\n        org_id,\n        template_id,\n        quick_date_range,\n        start_date,\n        end_date,\n        ...initialTopTemplateParams\n    };\n\n    const topWorkflowParams = {\n        cluster_id,\n        org_id,\n        template_id,\n        quick_date_range,\n        start_date,\n        end_date,\n        ...initialTopWorkflowParams\n    };\n\n    const topModuleParams = {\n        cluster_id,\n        org_id,\n        template_id,\n        quick_date_range,\n        start_date,\n        end_date,\n        ...initialModuleParams\n    };\n\n    useEffect(() => {\n        async function initializeWithPreflight() {\n            await window.insights.chrome.auth.getUser();\n            await preflightRequest().catch(error => {\n                setPreFlightError({ preflightError: error });\n            });\n            setOptions(readClustersOptions({ params: optionsQueryParams }));\n        }\n\n        initializeWithPreflight();\n    }, []);\n\n    // Get and update the data\n    useEffect(() => {\n        const fetchEndpoints = () => {\n            setData(readJobExplorer({ params: queryParams }));\n            setTemplates(readJobExplorer({ params: topTemplatesParams }));\n            setWorkflows(readJobExplorer({ params: topWorkflowParams }));\n            setModules(readEventExplorer({ params: topModuleParams }));\n        };\n\n        fetchEndpoints();\n    }, [ queryParams ]);\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={ 'Clusters' } />\n                <FilterableToolbar\n                    categories={ options }\n                    filters={ queryParams }\n                    setFilters={ setFromToolbar }\n                />\n            </PageHeader>\n            { preflightError && (\n                <Main>\n                    <EmptyState { ...preflightError } />\n                </Main>\n            ) }\n            { error && (\n                <Main>\n                    <ApiErrorState message={ error.error } />\n                </Main>\n            ) }\n            { !preflightError && !error && (\n        <>\n          <Main>\n              <Card>\n                  <PFCardTitle>\n                      <h2>Job status</h2>\n                  </PFCardTitle>\n                  <CardBody>\n                      { isLoading && <LoadingState /> }\n                      { queryParams.cluster_id.length <= 0 &&\n                                    isSuccess && (\n                          <BarChart\n                              margin={ { top: 20, right: 20, bottom: 50, left: 70 } }\n                              id=\"d3-bar-chart-root\"\n                              data={ chartData }\n                              templateId={ queryParams.template_id }\n                              orgId={ queryParams.org_id }\n                          />\n                      ) }\n                      { queryParams.cluster_id.length > 0  &&\n                                    isSuccess && (\n                          <LineChart\n                              margin={ { top: 20, right: 20, bottom: 50, left: 70 } }\n                              id=\"d3-line-chart-root\"\n                              data={ chartData }\n                              clusterId={ queryParams.cluster_id }\n                              templateId={ queryParams.template_id }\n                              orgId={ queryParams.org_id }\n                          />\n                      ) }\n                  </CardBody>\n              </Card>\n              <div\n                  className=\"dataCard\"\n                  style={ { display: 'flex', marginTop: '20px' } }\n              >\n                  <TemplatesList\n                      qp={ queryParams }\n                      templates={ workflows }\n                      isLoading={ isLoading }\n                      title={ 'Top workflows' }\n                      jobType={ 'workflowjob' }\n                  />\n                  <TemplatesList\n                      qp={ queryParams }\n                      templates={ templates }\n                      isLoading={ isLoading }\n                      title={ 'Top templates' }\n                      jobType={ 'job' }\n                  />\n                  <ModulesList\n                      modules={ modules }\n                      isLoading={ isLoading }\n                  />\n              </div>\n          </Main>\n        </>\n            ) }\n        </React.Fragment>\n    );\n};\n\nexport default Clusters;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Switch as PFSwitch } from '@patternfly/react-core';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  overflow: auto;\n  width: 100%;\n  height: ${props => props.height};\n`;\n\nconst LegendDetail = styled.div`\n  display: flex;\n  padding: 7.5px 15px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  overflow: auto;\n`;\n\nconst Color = styled.div.attrs(props => ({\n    color: props.color || 'black'\n}))`\n  min-width: 12px;\n  height: 12px;\n  background: ${props => props.color};\n  margin-right: 20px;\n`;\n\nconst Title = styled.span`\n  font-size: 15px;\n  display: inline-block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n`;\n\nconst SubTitle = styled.span`\n    font-size: 15px;\n    margin-left: 20px;\n`;\n\nconst Switch = styled(PFSwitch)`\n  margin-left: 20px;\n\n  svg {\n    display: none;\n  }\n`;\n\nclass Legend extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(_isChecked, { target: { value }}) {\n        const { onToggle } = this.props;\n        const selectedId = parseFloat(value);\n        onToggle(selectedId);\n    };\n    render() {\n        const { data, selected, height } = this.props;\n        return (\n            <Container height={ height }>\n                { data.map(\n                    ({ name, value, id, count }, index) => (\n                        <LegendDetail key={ index }>\n                            <Wrapper>\n                                <Color color={ value } />\n                                <Title>{ name }</Title>\n                            </Wrapper>\n                            { count && (\n                                <SubTitle>{ count }</SubTitle>\n                            ) }\n                            { selected && (\n                                <Switch\n                                    isChecked={ selected.some(selection => selection === id) }\n                                    onChange={ this.handleChange }\n                                    aria-label={ name }\n                                    value={ id }\n                                    id={ `${name}-${id}` }\n                                />\n                            ) }\n                        </LegendDetail>\n                    )) }\n            </Container>\n        );\n    }\n}\n\nLegend.propTypes = {\n    data: PropTypes.array,\n    selected: PropTypes.array,\n    onToggle: PropTypes.func,\n    height: PropTypes.string\n};\n\nexport default Legend;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport Legend from '../Utilities/Legend';\nimport { Paths } from '../paths';\nimport { stringify } from 'query-string';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nconst formatDate = (date) => {\n    const pieces = date.split('-');\n    return `${pieces[1]}/${pieces[2]}`;\n};\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        this.draw();\n    }\n\n    draw() {\n        this.width = 125;\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 125;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', 68)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.date = this.toolTipBase\n        .append('text')\n        .attr('x', 20)\n        .attr('y', 14)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Date');\n        this.jobs = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 72)\n        .attr('y', 14)\n        .text('0 Jobs');\n        this.orgName = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', -1)\n        .attr('font-size', 12)\n        .text('Org');\n        this.clickMore = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 20)\n        .attr('y', 30)\n        .attr('font-size', 12)\n        .text('Click for details');\n    }\n\n  handleMouseOver = d => {\n      let date;\n      let orgName;\n      let jobs;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      if (!d) {\n          return;\n      } else {\n          const maxLength = 16;\n          date = d.date;\n          orgName = d.name;\n          jobs = d.value;\n          if (d.name.length > maxLength) {\n              orgName = d.name.slice(0, maxLength).concat('...');\n          }\n      }\n\n      const formatTooltipDate = formatDate;\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n\n      this.date.text('' + formatTooltipDate(date));\n      this.orgName.text('' + orgName);\n      this.jobs.text('' + jobs + ' Jobs');\n      this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n      const maxTextPerc = this.jobsWidth / this.boxWidth * 100;\n      const threshold = 45;\n      const overage = maxTextPerc / threshold;\n      let adjustedWidth;\n      if (maxTextPerc > threshold) {\n          adjustedWidth = this.boxWidth * overage;\n      } else {\n          adjustedWidth = this.boxWidth;\n      }\n\n      this.boundingBox.attr('width', adjustedWidth);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n          this.boundingBox.attr('x', -adjustedWidth - 20);\n          this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n          this.orgName.attr('x', -adjustedWidth - 7);\n          this.clickMore.attr('x', -adjustedWidth - 7);\n          this.date.attr('x', -adjustedWidth - 7);\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n          this.boundingBox.attr('x', 10);\n          this.orgName.attr('x', 20);\n          this.clickMore.attr('x', 20);\n          this.jobs.attr('x', adjustedWidth / 2);\n          this.date.attr('x', 20);\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass GroupedBarChart extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.handleToggle = this.handleToggle.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.orgsList = props.data[0].items;\n        this.selection = [];\n        this.state = {\n            colors: [],\n            selected: [],\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    // Methods\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => { this.init(); }, 500)\n        });\n    }\n\n    redirectToJobExplorer({ date, id }) {\n        if (id === -1) {\n            // disable clicking on \"others\" block\n            return;\n        }\n\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const initialQueryParams = {\n            quick_date_range: 'custom',\n            start_date: formattedDate,\n            end_date: formattedDate,\n            status: [ 'successful', 'failed', 'new', 'pending', 'waiting', 'error', 'canceled', 'running' ],\n            org_id: [ id ]\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    handleToggle(selectedId) {\n        if (this.selection.indexOf(selectedId) === -1) {\n            this.selection = [ ...this.selection, selectedId ];\n        } else if (this.selection.includes(selectedId)) {\n            this.selection = [ ...this.selection ].filter(s => s !== selectedId);\n        }\n\n        this.setState({ selected: this.selection });\n        this.draw();\n    }\n\n    init() {\n        // create the first 8 selected data points\n        if (this.selection.length === 0) {\n            this.orgsList.forEach((org, index) => {\n                if (index <= 7) {\n                    this.handleToggle(org.id);\n                }\n            });\n        }\n\n        // create our colors array to send to the Legend component\n        const colors = this.orgsList.map(org => {\n            const name = org.id === -1 ? 'Others' : org.name;\n            return {\n                name,\n                value: this.props.colorFunc(name),\n                id: org.id\n            };\n        });\n        this.setState({ colors });\n        this.draw();\n    }\n\n    draw() {\n        // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        let { data: unformattedData, timeFrame } = this.props;\n        const selected = this.selection;\n        const data = unformattedData.reduce((formatted, { date, items }) => {\n            const selectedOrgs = items.filter(({ id }) => selected.includes(id));\n            return formatted.concat({ date, selectedOrgs });\n        }, []);\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n        // x scale of entire chart\n        const x0 = d3\n        .scaleBand()\n        .range([ 0, width ])\n        .padding(0.35);\n        // x scale of individual grouped bars\n        const x1 = d3.scaleBand();\n        const y = d3.scaleLinear().range([ height, 0 ]);\n        // format our X Axis ticks\n        const maxTicks = Math.round(data.length / (timeFrame / 2));\n        let ticks = data.map(d => d.date);\n        if (timeFrame === 31) {\n            ticks = data.map((d, i) =>\n                i % maxTicks === 0 ? d.date : undefined\n            ).filter(item => item);\n        }\n\n        const xAxis = d3\n        .axisBottom(x0)\n        .tickValues(ticks)\n        .tickFormat(formatDate);\n\n        const yAxis = d3\n        .axisLeft(y)\n        .ticks(8)\n        .tickSize(-width, 0, 0);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n\n        const dates = data.map(d => d.date);\n        const selectedOrgNames = data[0].selectedOrgs.map(d => d.name);\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id\n        });\n        x0.domain(dates);\n        x1.domain(selectedOrgNames).range([ 0, x0.bandwidth() ]); // unsorted\n        y.domain([\n            0,\n            d3.max(data, date => d3.max(date.selectedOrgs, d => d.value * 1.15)) || 8\n        ]);\n\n        // add y axis\n        svg\n        .append('g')\n        .attr('class', 'y axis')\n        .call(yAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7')\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 6)\n        .attr('dy', '.71em')\n        .style('text-anchor', 'end')\n        .style('font-weight', 'bold')\n        .text('Value');\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Jobs across orgs');\n\n        // add x axis\n        svg\n        .append('g')\n        .attr('class', 'x axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(xAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' + width / 2 + ' ,' + (height + this.props.margin.top + 25) + ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n        // add the groups\n        let slice = svg.selectAll('.slice').data(data);\n        slice.exit().remove();\n\n        const enter = slice\n        .enter()\n        .append('g')\n        .attr('class', 'g foo')\n        .attr('transform', d => 'translate(' + x0(d.date) + ',0)');\n        slice = slice.merge(enter);\n        // add the individual bars\n        let bars = slice.selectAll('rect').data(function(d) {\n            return d.selectedOrgs;\n        });\n        bars.exit().remove();\n\n        const color = this.props.colorFunc;\n        const subEnter = bars\n        .enter()\n        .append('rect')\n        .attr('width', x1.bandwidth())\n        .attr('x', function(d) {\n            return x1(d.name);\n        }) // unsorted\n        .style('fill', function(d) {\n            return color(d.name);\n        })\n        .attr('y', function(d) {\n            return y(d.value);\n        })\n        .attr('height', function(d) {\n            return height - y(d.value);\n        })\n        .on('mouseover', function(d) {\n            d3.select(this).style('fill', d3.rgb(color(d.name)).darker(1));\n            tooltip.handleMouseOver();\n        })\n        .on('mousemove', tooltip.handleMouseOver)\n        .on('mouseout', function(d) {\n            d3.select(this).style('fill', color(d.name));\n            tooltip.handleMouseOut();\n        })\n        .on('click', this.redirectToJobExplorer);\n        bars = bars.merge(subEnter);\n    };\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        const { colors, selected } = this.state;\n        return (\n            <Wrapper>\n                <div id={ this.props.id } />\n                { colors.length > 0 && (\n                    <Legend\n                        id=\"d3-grouped-bar-legend\"\n                        data={ colors }\n                        selected={ selected }\n                        onToggle={ this.handleToggle }\n                        height=\"350px\"\n                    />\n                ) }\n            </Wrapper>\n        );\n    }\n}\n\nGroupedBarChart.propTypes = {\n    id: PropTypes.string,\n    isAccessible: PropTypes.bool,\n    data: PropTypes.array,\n    value: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    timeFrame: PropTypes.number,\n    history: PropTypes.object,\n    colorFunc: PropTypes.func\n};\n\nexport default initializeChart(GroupedBarChart);\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport { getTotal } from '../Utilities/helpers';\nimport Legend from '../Utilities/Legend';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        // defer drawing until we know the data shape\n        this.drawn = false;\n        // show the success rate or not\n        this.showSuccess = false;\n    }\n\n    draw(d) {\n        // chart1 has success rate data and chart2 does not ...\n        this.showSuccess = (d && d.data && 'success_rate' in d.data) ? true : false;\n        const boundingHeight = (this.showSuccess) ? 70 : 52;\n        const boundingWidth = (this.showSuccess) ? 120 : 108;\n\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBOx = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', boundingHeight)\n        .attr('width', boundingWidth)\n        .attr('fill', '#393f44');\n        this.orgName = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 0)\n        .text('Organization');\n        this.percentageTotal = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 16)\n        .text('0');\n        this.percentageSuccess = null;\n        if (this.showSuccess) {\n            this.percentageSuccess = this.toolTipBase\n            .append('text')\n            .attr('fill', 'white')\n            .attr('font-size', 12)\n            .attr('font-weight', 800)\n            .attr('x', 20)\n            .attr('y', 30)\n            .text('');\n        }\n    }\n\n  handleMouseOver = d => {\n      // treat draw() as a singleton to avoid a painted window effect\n      if (this.drawn !== true) {\n          this.draw(d);\n          this.drawn = true;\n      }\n\n      let perc;\n      let percSuccess;\n      let orgName;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      if (!d) {\n          return;\n      }\n\n      if (d && d.data) {\n          const maxLength = 16;\n          perc = d.data.percent;\n          percSuccess = d.data.success_rate;\n          orgName = d.data.name;\n          if (d.data.name.length > maxLength) {\n              orgName = d.data.name.slice(0, maxLength - 3).concat('...');\n          }\n      }\n\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n\n      this.percentageTotal.text('' + perc + '%');\n      if (percSuccess && this.percentageSuccess) {\n          this.percentageSuccess.text('(' + percSuccess + '% successful)');\n      }\n\n      this.orgName.text(' ' + orgName);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, -10) rotate(45)');\n          this.boundingBOx.attr('x', -125);\n          this.orgName.attr('x', -112);\n          this.percentageTotal.attr('x', -112);\n          if (this.showSuccess) {\n              this.percentageSuccess.attr('x', -112);\n          }\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, -10) rotate(45)');\n          this.boundingBOx.attr('x', 10);\n          this.orgName.attr('x', 20);\n          this.percentageTotal.attr('x', 20);\n          if (this.showSuccess) {\n              this.percentageSuccess.attr('x', 20);\n          }\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass PieChart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            colors: [],\n            timeout: null\n        };\n        this.draw = this.draw.bind(this);\n        this.init = this.init.bind(this);\n        this.resize = this.resize.bind(this);\n    }\n    // Methods\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => { this.init(); }, 500)\n        });\n    }\n    sortDescending(data) {\n    // descending\n        data.sort((a, b) =>\n            d3.descending(parseFloat(a.count), parseFloat(b.count))\n        );\n    }\n    init() {\n        const { data } = this.props;\n        // create our colors array to send to the Legend component\n        const colors = data.map(org => {\n            const name = org.id === -1 ? 'Others' : org.name;\n            return {\n                name,\n                value: this.props.colorFunc(name),\n                count: Math.round(org.count)\n            };\n        }).sort((a, b) =>\n            (a.count > b.count) ? 1 : (\n                (b.count > a.count) ? -1 : 0\n            )\n        );\n        this.setState({ colors });\n        this.draw();\n    }\n    draw() {\n        const color = this.props.colorFunc;\n\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.bottom)\n        .append('g');\n\n        svg.append('g').attr('class', 'slices');\n        svg.append('g').attr('class', 'labels');\n        svg.append('g').attr('class', 'lines');\n        const radius = Math.min(width, height) / 2;\n        const { data } = this.props;\n        const total = getTotal(data);\n        data.forEach(function(d) {\n            d.count = +d.count;\n            d.percent = +Math.round((d.count / total) * 100);\n        });\n        const donutTooltip = new Tooltip({\n            svg: '#' + this.props.id\n        });\n        const pie = d3\n        .pie()\n        .sort(null)\n        .value(d => d.count);\n        const arc = d3\n        .arc()\n        .outerRadius(radius - 10) // controls top positioning of chart\n        .innerRadius(0);\n\n        svg.attr(\n            'transform',\n            'translate(' +\n        (width + this.props.margin.left + this.props.margin.right) / 2 +\n        ',' +\n        (height + this.props.margin.top + this.props.margin.bottom) / 2 +\n        ')'\n        );\n\n        svg\n        .selectAll('path')\n        .data(pie(data))\n        .enter()\n        .append('path')\n        .attr('d', arc)\n        .attr('fill', d => color(d.data.name));\n\n        svg\n        .selectAll('path')\n        .on('mouseover', function(d) {\n            d3.select(this).style('fill', d3.rgb(color(d.data.name)).darker(1));\n            donutTooltip.handleMouseOver(d);\n        })\n        .on('mouseout', function(d) {\n            d3.select(this).style('fill', color(d.data.name));\n            donutTooltip.handleMouseOut();\n        })\n        .on('mousemove', donutTooltip.handleMouseOver);\n\n        svg.append('g').classed('labels', true);\n        svg.append('g').classed('lines', true);\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.data !== this.props.data) {\n            this.init();\n        }\n    }\n\n    render() {\n        const { colors } = this.state;\n        return (\n            <Wrapper>\n                <div id={ this.props.id } />\n                { colors.length > 0 && (\n                    <Legend\n                        id=\"d3-grouped-bar-legend\"\n                        data={ colors }\n                        selected={ null }\n                        onToggle={ null }\n                        height=\"300px\"\n                    />\n                ) }\n            </Wrapper>\n        );\n    }\n}\n\nPieChart.propTypes = {\n    id: PropTypes.string,\n    isAccessible: PropTypes.bool,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    timeFrame: PropTypes.number,\n    colorFunc: PropTypes.func\n};\n\nexport default initializeChart(PieChart);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\n\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport {\n    preflightRequest,\n    readJobsByDateAndOrg,\n    readJobRunsByOrg,\n    readJobEventsByOrg,\n    readOrgOptions\n} from '../../Api';\n\nimport { Main, PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle\n} from '@patternfly/react-core';\n\nimport GroupedBarChart from '../../Charts/GroupedBarChart';\nimport PieChart from '../../Charts/PieChart';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport { organizationStatistics as constants } from '../../Utilities/constants';\n\n// For chart colors\nimport { pfmulti } from '../../Utilities/colors';\nimport { scaleOrdinal } from 'd3';\n\nconst CardTitle = styled(PFCardTitle)`\n  border-bottom: 2px solid #ebebeb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &&& {\n    min-height: 60px;\n    --pf-c-card--first-child--PaddingTop: 10px;\n    --pf-c-card__header--not-last-child--PaddingBottom: 10px;\n\n    h3 {\n      font-size: 0.875em;\n    }\n  }\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  overflow: hidden;\n\n  .pf-c-card {\n    width: 50%;\n    margin-top: 20px;\n    overflow: auto;\n  }\n\n  .pf-c-card:first-of-type {\n    margin-right: 20px;\n  }\n`;\n\nconst TopCard = styled(Card)`\n  min-height: 500px;\n`;\n\nconst colorFunc = scaleOrdinal(pfmulti);\n\nconst optionsMapper = options => {\n    const { meta, inventory_id, ...rest } = options;\n    return { ...rest, sort_by: meta.sort_by };\n};\n\nconst orgsChartMapper = ({ dates: data = []}) => data.map(({ date, items }) => ({\n    date,\n    items: items.map(({ id, total_count, name }) => ({\n        id,\n        date,\n        value: total_count,\n        name: id === -1 ? 'Others' : (name || 'No organization')\n    }))\n}));\n\nconst pieChartMapper = attrName => ({ items = []}) =>\n    items.map(({ id, [attrName]: count, name }) => ({\n        id,\n        count,\n        name: id === -1 ? 'Others' : (name || 'No organization')\n    }));\n\nconst OrganizationStatistics = ({ history }) => {\n    const [ preflight, setPreflight ] = useApi(null);\n    const [ orgs, setOrgs ] = useApi([], orgsChartMapper);\n    const [ jobs, setJobs ] = useApi([], pieChartMapper('host_count'));\n    const [ tasks, setTasks ] = useApi([], pieChartMapper('host_task_count'));\n    const [ options, setOptions ] = useApi({}, optionsMapper);\n    const { queryParams, setFromToolbar } = useQueryParams(constants.defaultParams);\n\n    useEffect(() => {\n        insights.chrome.appNavClick({ id: 'organization-statistics', secondaryNav: true });\n        setPreflight(preflightRequest());\n        setOptions(readOrgOptions({ params: queryParams }));\n    }, []);\n\n    useEffect(() => {\n        setOrgs(readJobsByDateAndOrg({ params: queryParams }));\n        setJobs(readJobRunsByOrg({ params: queryParams }));\n        setTasks(readJobEventsByOrg({ params: queryParams }));\n    }, [ queryParams ]);\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={ 'Organization Statistics' } />\n            </PageHeader>\n            { preflight.error && (\n                <Main>\n                    <EmptyState\n                        preflightError={ preflight.error }\n                    />\n                </Main>\n            ) }\n            { preflight.isSuccess && (\n                <React.Fragment>\n                    <Main style={ { paddingBottom: '0' } }>\n                        <Card>\n                            <CardBody>\n                                <FilterableToolbar\n                                    categories={ options.data }\n                                    filters={ queryParams }\n                                    setFilters={ setFromToolbar }\n                                />\n                            </CardBody>\n                        </Card>\n                    </Main>\n                    <Main>\n                        <TopCard>\n                            <CardTitle>\n                                <h2>Organization Status</h2>\n                            </CardTitle>\n                            <CardBody>\n                                { orgs.isLoading && <LoadingState /> }\n                                { orgs.error && <ApiErrorState message={ orgs.error.error } /> }\n                                { orgs.isSuccess && orgs.data.length <= 0 && <NoData /> }\n                                { orgs.isSuccess && orgs.data.length > 0 && (\n                                    <GroupedBarChart\n                                        margin={ { top: 20, right: 20, bottom: 50, left: 50 } }\n                                        id=\"d3-grouped-bar-chart-root\"\n                                        data={ orgs.data }\n                                        history={ history }\n                                        timeFrame={ orgs.data .length }\n                                        colorFunc={ colorFunc }\n                                    />\n                                ) }\n                            </CardBody>\n                        </TopCard>\n                        <CardContainer>\n                            <Card>\n                                <CardBody style={ { padding: 0 } }>\n                                    <CardTitle style={ { padding: 0 } }>\n                                        <h2 style={ { marginLeft: '20px' } }>\n                                      Job Runs by Organization\n                                        </h2>\n                                    </CardTitle>\n                                    { jobs.isLoading && <LoadingState /> }\n                                    { jobs.error && <ApiErrorState message={ jobs.error.error } /> }\n                                    { jobs.isSuccess && jobs.data.length <= 0 && <NoData /> }\n                                    { jobs.isSuccess && jobs.data.length > 0 && (\n                                        <PieChart\n                                            margin={ { top: 20, right: 20, bottom: 0, left: 20 } }\n                                            id=\"d3-donut-1-chart-root\"\n                                            data={ jobs.data }\n                                            timeFrame={ jobs.data.length }\n                                            colorFunc={ colorFunc }\n                                        />\n                                    ) }\n                                </CardBody>\n                            </Card>\n                            <Card>\n                                <CardBody style={ { padding: 0 } }>\n                                    <CardTitle style={ { padding: 0 } }>\n                                        <h2 style={ { marginLeft: '20px' } }>\n                                      Usage by Organization (Tasks)\n                                        </h2>\n                                    </CardTitle>\n                                    { tasks.isLoading && <LoadingState /> }\n                                    { tasks.error && <ApiErrorState message={ tasks.error.error } /> }\n                                    { tasks.isSuccess && tasks.data.length <= 0 && <NoData /> }\n                                    { tasks.isSuccess && tasks.data.length > 0 && (\n                                        <PieChart\n                                            margin={ { top: 20, right: 20, bottom: 0, left: 20 } }\n                                            id=\"d3-donut-2-chart-root\"\n                                            data={ tasks.data }\n                                            timeFrame={ tasks.data.length }\n                                            colorFunc={ colorFunc }\n                                        />\n                                    ) }\n                                </CardBody>\n                            </Card>\n                        </CardContainer>\n                    </Main>\n                </React.Fragment>\n            ) }\n        </React.Fragment>\n    );\n};\n\nOrganizationStatistics.propTypes = {\n    history: PropTypes.object\n};\n\nexport default OrganizationStatistics;\n","const pfmulti = [\n    '#06C',\n    '#4CB140',\n    '#009596',\n    '#5752D1',\n    '#F4C145',\n    '#EC7A08',\n    '#8BC1F7',\n    '#23511E',\n    '#A2D9D9',\n    '#2A265F',\n    '#F9E0A2',\n    '#8F4700',\n    '#002F5D'\n];\n\nexport { pfmulti };\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst NoResults = () => {\n    return (\n        <EmptyState variant={ EmptyStateVariant.full }>\n            <EmptyStateIcon icon={ SearchIcon } />\n            <Title size=\"lg\" headingLevel=\"h4\">\n                No results found\n            </Title>\n            <EmptyStateBody>\n                No results match the filter criteria. Remove all filters or clear all filters to show results.\n            </EmptyStateBody>\n        </EmptyState>\n    );\n};\n\nexport default NoResults;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from '@patternfly/react-core';\nimport {\n    CheckCircleIcon,\n    ExclamationCircleIcon,\n    ClockIcon,\n    SyncAltIcon,\n    ExclamationTriangleIcon\n} from '@patternfly/react-icons';\n\nconst JobStatus = ({ status }) => {\n    const capitalized = (str) => str.charAt(0).toUpperCase() + str.slice(1);\n\n    const getColor = () => {\n        switch (status) {\n            case 'successful':\n                return 'green';\n            case 'failed':\n            case 'error':\n                return 'red';\n            case 'running':\n            case 'pending':\n                return 'blue';\n            case 'canceled':\n                return 'orange';\n            // case new, waiting\n            default: return 'grey';\n        }\n    };\n\n    const getIcon = () => {\n        switch (status) {\n            case 'successful':\n                return <CheckCircleIcon />;\n            case 'failed':\n            case 'error':\n                return <ExclamationCircleIcon />;\n            case 'running':\n                return <SyncAltIcon />;\n            case 'canceled':\n                return <ExclamationTriangleIcon />;\n            // case new, waiting, pending\n            default: return <ClockIcon />;\n        }\n    };\n\n    return (\n        <Label variant=\"outline\" color={ getColor() } icon={ getIcon() }>{ capitalized(status) }</Label>\n    );\n};\n\nJobStatus.propTypes = {\n    status: PropTypes.oneOf([\n        'successful',\n        'failed', 'error',\n        'running',\n        'new', 'waiting', 'pending', 'canceled'\n    ])\n};\n\nexport default JobStatus;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    DataListCell as PFDataListCell,\n    DataListContent,\n    DataList,\n    DataListItem,\n    DataListItemRow,\n    DataListItemCells as PFDataListItemCells,\n    DataListToggle as PFDataListToggle,\n    Tooltip\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkIcon } from '@patternfly/react-icons';\n\nimport LoadingState from '../Components/LoadingState';\nimport { formatDateTime, formatJobType } from '../Utilities/helpers';\nimport JobStatus from './JobStatus';\n\nconst headerLabels = [\n    'Id/Name',\n    'Status',\n    'Cluster',\n    'Organization',\n    'Type'\n];\n\nconst ExternalLinkIcon = styled(PFExternalLinkIcon)`\n    margin-left: 7px;\n    color: var(--pf-global--Color--400);\n`;\n\nconst DataListCell = styled(PFDataListCell)`\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    text-align: center;\n`;\n\nconst DataListCellHeader = styled(DataListCell)`\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    font-weight: bold;\n`;\n\nconst DataListItemCells = styled(PFDataListItemCells)`\n    align-items: center;\n`;\n\nconst DataListToggle = styled(PFDataListToggle)`\n    align-items: center;\n`;\n\nconst mobileBreakpoint = 765;\n\nconst buildHeader = labels => (\n    <DataListItem>\n        <DataListItemRow style={ { paddingLeft: '80px' } }>\n            <DataListItemCells\n                dataListCells={ labels.map(label => (\n                    <DataListCellHeader key={ label }>\n                        { label }\n                        { label === 'Id/Name' &&\n                              <ExternalLinkIcon />\n                        }\n                    </DataListCellHeader>\n                ))\n                }\n            />\n        </DataListItemRow>\n    </DataListItem>\n);\n\nconst buildListRow = (items, ariaLabel, ariaLabelledBy, windowWidth) => {\n    const [ isExpanded, setIsExpanded ] = useState([]);\n\n    return (\n        <>\n            { items.map((item, count) => {\n                const toggle = id => {\n                    const expanded = isExpanded;\n                    const idx = expanded.indexOf(id);\n                    const newExpanded =\n            idx >= 0\n                ? [\n                    ...expanded.slice(0, idx),\n                    ...expanded.slice(idx + 1, expanded.length)\n                ]\n                : [ ...expanded, id ];\n                    setIsExpanded(newExpanded);\n                };\n\n                return (\n                    <DataListItem key={ item.id.id } aria-labelledby={ ariaLabelledBy } isExpanded={ isExpanded.includes(`${item.id.id}-toggle`) } >\n                        <DataListItemRow key={ item.id.id }>\n                            <DataListToggle\n                                id={ `${item.id.id}-toggle` }\n                                aria-controls={ `${item.id.id}-expand` }\n                                onClick={ () => toggle(`${item.id.id}-toggle`) }\n                                isExpanded={ isExpanded.includes(`${item.id.id}-toggle`) }\n                            />\n                            <DataListItemCells\n                                dataListCells={ [\n                                    <DataListCell key={ count++ }>\n                                        <a href={ item.id.tower_link } target='_blank' rel='noopener noreferrer'>\n                                            { windowWidth < mobileBreakpoint &&\n                                             <span style={ { color: 'initial', fontWeight: 'bold' } }>\n                                                 Id/Name<ExternalLinkIcon />:\n                                             </span>\n                                            }\n                                            &nbsp;\n                                            { `${item.id.id} - ${item.id.template_name}` }\n                                        </a>\n                                    </DataListCell>,\n                                    <DataListCell key={ count++ }>\n\n                                        { windowWidth <= mobileBreakpoint &&\n                                            <span style={ { color: 'initial', fontWeight: 'bold' } }>Status:</span>\n                                        }\n                                            &nbsp;\n                                        <JobStatus status={ item.status } />\n                                    </DataListCell>,\n                                    <Tooltip key={ count++ } content={ <p>{ item.cluster_name }</p> }>\n                                        <DataListCell>\n                                            { windowWidth <= mobileBreakpoint &&\n                                            <span style={ { color: 'initial', fontWeight: 'bold' } }>Cluster:</span>\n                                            }\n                                            &nbsp;\n                                            { item.cluster_name }\n                                        </DataListCell>\n                                    </Tooltip>,\n                                    <DataListCell key={ count++ }>\n                                        { windowWidth <= mobileBreakpoint &&\n                                         <span style={ { color: 'initial', fontWeight: 'bold' } }>Organization:</span>\n                                        }\n                                        &nbsp;\n                                        { item.org_name }\n                                    </DataListCell>,\n                                    <DataListCell key={ count++ }>\n                                        { windowWidth <= mobileBreakpoint &&\n                                         <span style={ { color: 'initial', fontWeight: 'bold' } }>Type:</span>\n                                        }\n                                         &nbsp;\n                                        { formatJobType(item.job_type) }\n                                    </DataListCell>\n                                ] }\n                            />\n                        </DataListItemRow>\n                        <DataListContent\n                            aria-label={ `${item.id.id}-details` }\n                            id={ '${item.id.id}' }\n                            isHidden={ !isExpanded.includes(`${item.id.id}-toggle`) }\n                        >\n                            <DataListItemCells\n                                dataListCells={ [\n                                    <DataListCell key={ count++ }>\n                                        Created: { formatDateTime(item.created) }\n                                    </DataListCell>,\n                                    <DataListCell key={ count++ }>\n                                        Started: { formatDateTime(item.started) }\n                                    </DataListCell>,\n                                    <DataListCell key={ count++ }>\n                                        Finished: { formatDateTime(item.finished) }\n                                    </DataListCell>\n                                ] }\n                            />\n                        </DataListContent>\n                    </DataListItem>\n                );\n            }) }\n        </>\n    );\n};\n\nconst AllJobsTemplate = ({ jobs }) => {\n    const [ windowWidth, setWindowWidth ] = useState(window.innerWidth);\n\n    const onResize = () => setWindowWidth(window.innerWidth);\n\n    useEffect(() => {\n        window.addEventListener('resize', onResize);\n        return () => window.removeEventListener('resize', onResize);\n    }, []);\n\n    return buildListRow(jobs, 'All jobs view', 'all-jobs', windowWidth);\n};\n\nconst JobExplorerList = ({ jobs }) => {\n    const [ windowWidth, setWindowWidth ] = useState(window.innerWidth);\n\n    const onResize = () => setWindowWidth(window.innerWidth);\n\n    useEffect(() => {\n        window.addEventListener('resize', onResize);\n        return () => window.removeEventListener('resize', onResize);\n    }, []);\n\n    return (\n        <>\n            {jobs.length <= 0 && <LoadingState />}\n            <DataList isCompact>\n                { windowWidth >= mobileBreakpoint && buildHeader(headerLabels) }\n                <AllJobsTemplate jobs={ jobs } windowWidth={ windowWidth }/>\n            </DataList>\n        </>\n    );\n};\n\nJobExplorerList.propTypes = {\n    jobs: PropTypes.array,\n    windowWidth: PropTypes.number\n};\n\nAllJobsTemplate.propTypes = {\n    jobs: PropTypes.array,\n    windowWidth: PropTypes.number\n};\n\nexport default JobExplorerList;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { parse, stringify } from 'query-string';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { Paths } from '../../paths';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoResults from '../../Components/NoResults';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport {\n    preflightRequest,\n    readJobExplorer,\n    readJobExplorerOptions\n} from '../../Api';\nimport { jobExplorer } from '../../Utilities/constants';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    Pagination,\n    PaginationVariant\n} from '@patternfly/react-core';\n\nimport JobExplorerList from '../../Components/JobExplorerList';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\nconst perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '15', value: 15 },\n    { title: '20', value: 20 },\n    { title: '25', value: 25 }\n];\n\nconst initialQueryParams = {\n    ...jobExplorer.defaultParams,\n    attributes: jobExplorer.attributes\n};\n\nconst optionsMapper = options => {\n    const { groupBy, attributes, ...rest } = options;\n    return rest;\n};\n\nconst JobExplorer = ({\n    location: { search },\n    history\n}) => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [{\n        isLoading,\n        isSuccess,\n        error,\n        data: { meta = {}, items: data = []}\n    }, setData ] = useApi({ meta: {}, items: []});\n    const [ currPage, setCurrPage ] = useState(1);\n    const [ options, setOptions ] = useApi({}, optionsMapper);\n\n    let initialSearchParams = parse(search, { arrayFormat: 'bracket', parseBooleans: true });\n    let combined = { ...initialQueryParams, ...initialSearchParams };\n    const {\n        queryParams,\n        setLimit,\n        setOffset,\n        setFromToolbar\n    } = useQueryParams(combined);\n\n    const updateURL = () => {\n        const { jobExplorer } = Paths;\n        const search = stringify(queryParams, { arrayFormat: 'bracket' });\n        history.replace({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    useEffect(() => {\n        insights.chrome.appNavClick({ id: 'job-explorer', secondaryNav: true });\n\n        window.insights.chrome.auth.getUser()\n        .then(() =>\n            preflightRequest()\n            .catch((error) => { setPreFlightError({ preflightError: error }); })\n            // Loading is set false when the data also loaded\n        );\n    }, []);\n\n    useEffect(() => {\n        setData(readJobExplorer({ params: queryParams }),);\n        setOptions(readJobExplorerOptions({ params: queryParams }));\n        updateURL();\n    }, [ queryParams ]);\n\n    const returnOffsetVal = page => (page - 1) * queryParams.limit;\n\n    const handleSetPage = page => {\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    const handlePerPageSelect = (perPage, page) => {\n        setLimit(perPage);\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={ 'Job Explorer' } />\n            </PageHeader>\n\n            { preflightError && (\n                <Main>\n                    <EmptyState { ...preflightError } />\n                </Main>\n            ) }\n\n            { !preflightError && (\n                <Main>\n                    <Card>\n                        <CardBody>\n                            <FilterableToolbar\n                                categories={ options.data }\n                                filters={ queryParams }\n                                setFilters={ setFromToolbar }\n                                pagination={\n                                    <Pagination\n                                        itemCount={ meta && meta.count ? meta.count : 0 }\n                                        widgetId=\"pagination-options-menu-top\"\n                                        perPageOptions={ perPageOptions }\n                                        perPage={ queryParams.limit }\n                                        page={ currPage }\n                                        variant={ PaginationVariant.top }\n                                        onPerPageSelect={ (_event, perPage, page) => {\n                                            handlePerPageSelect(perPage, page);\n                                        } }\n                                        onSetPage={ (_event, pageNumber) => {\n                                            handleSetPage(pageNumber);\n                                        } }\n                                        isCompact\n                                    />\n                                }\n                                hasSettings\n                            />\n                            { error && <ApiErrorState message={ error.error } /> }\n                            { isLoading && <LoadingState /> }\n                            { isSuccess && data.length <= 0 && <NoResults /> }\n                            { isSuccess && data.length > 0 && <JobExplorerList jobs={ data } /> }\n                            <Pagination\n                                itemCount={ meta && meta.count ? meta.count : 0 }\n                                widgetId=\"pagination-options-menu-bottom\"\n                                perPageOptions={ perPageOptions }\n                                perPage={ queryParams.limit }\n                                page={ currPage }\n                                variant={ PaginationVariant.bottom }\n                                onPerPageSelect={ (_event, perPage, page) => {\n                                    handlePerPageSelect(perPage, page);\n                                } }\n                                onSetPage={ (_event, pageNumber) => {\n                                    handleSetPage(pageNumber);\n                                } }\n                                style={ { marginTop: '20px' } }\n                            />\n                        </CardBody>\n                    </Card>\n                </Main>\n            ) }\n        </React.Fragment>\n    );\n};\n\nJobExplorer.propTypes = {\n    location: PropTypes.object,\n    history: PropTypes.object\n};\n\nexport default JobExplorer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nimport {\n    NotificationDrawerList as PFNotificationDrawerList,\n    NotificationDrawerListItem as PFNotificationDrawerListItem,\n    NotificationDrawerListItemBody,\n    NotificationDrawerListItemHeader\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkAltIcon } from '@patternfly/react-icons';\nimport LoadingState from '../Components/LoadingState';\nimport { capitalize } from '../Utilities/helpers';\n\nconst ExternalLinkAltIcon = styled(PFExternalLinkAltIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n  font-size: 14px;\n`;\n\nconst NotificationDrawerListItem = styled(PFNotificationDrawerListItem)`\n  border-top: 1px solid var(--pf-global--BorderColor--light-100\n    );\n  border-bottom::nth-child(odd): 1px solid var(--pf-global--BorderColor--light-100\n    );\n  box-shadow: none;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst NotificationDrawerList = styled(PFNotificationDrawerList)`\n    &:last-child {\n      border-bottom: 1px solid var(--pf-global--BorderColor--light-100\n        );\n    }\n`;\n\nconst stringifyDate = (date) => {\n    const day = moment(date);\n    const oneHour = 60 * 60 * 1000;\n    const now = moment().utc();\n\n    if (now.isAfter(day)) {\n        return `${now.diff(day, 'days')} day(s) ago.`;\n    }\n\n    if (day.isSame(now, 'day')) {\n        if (day.valueOf() > oneHour) {\n            return  `${day.diff(now, 'hours') } hour(s) ago.`;\n        }\n\n        return `${now.diff(day, 'minutes')} minute(s) ago.`;\n    }\n};\n\nconst AllNotificationTemplate = ({ notifications }) =>\n    notifications.map(\n        ({ date, message, label, notification_id: id, tower_url: url }) => {\n            if (label === '' || label === 'notice') {\n                return (\n                    <NotificationDrawerListItem\n                        variant=\"info\"\n                        key={ date + '-' + id }\n                    >\n                        <NotificationDrawerListItemHeader\n                            variant=\"info\"\n                            title={\n                            <>\n                              { url ? (\n                                  <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                                      { capitalize(label) }\n                                      <ExternalLinkAltIcon />\n                                  </a>\n                              ) : capitalize(label) }\n                            </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody>\n                            { message }{ ' ' }\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n\n            if (label === 'error') {\n                return (\n                    <NotificationDrawerListItem\n                        variant=\"danger\"\n                        key={ date + '-' + id }\n                    >\n                        <NotificationDrawerListItemHeader\n                            variant=\"danger\"\n                            title={\n                            <>\n                              { url ? (\n                                  <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                                      { capitalize(label) }\n                                      <ExternalLinkAltIcon />\n                                  </a>\n                              ) : capitalize(label) }\n                            </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody timestamp={ stringifyDate(date) }>\n                            { message }{ ' ' }\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n\n            if (label === 'warning') {\n                return (\n                    <NotificationDrawerListItem\n                        variant=\"warning\"\n                        key={ date + '-' + id }\n                    >\n                        <NotificationDrawerListItemHeader\n                            variant=\"warning\"\n                            title={\n                            <>\n                              { url ? (\n                                  <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                                      { capitalize(label) }\n                                      <ExternalLinkAltIcon />\n                                  </a>\n                              ) : capitalize(label) }\n                            </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody timestamp={ stringifyDate(date) }>\n                            { message }{ ' ' }\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n        }\n    );\n\nconst ErrorNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'error')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem\n            variant=\"danger\"\n            key={ date + '-' + id }\n        >\n            <NotificationDrawerListItemHeader\n                variant=\"danger\"\n                title={\n                <>\n                  { url ? (\n                      <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                          { capitalize(label) }\n                          <ExternalLinkAltIcon />\n                      </a>\n                  ) : capitalize(label) }\n                </>\n                }\n            >\n            </NotificationDrawerListItemHeader>\n            <NotificationDrawerListItemBody timestamp={ stringifyDate(date) }>\n                { message }{ ' ' }\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst NoticeNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'notice')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem\n            variant=\"info\"\n            key={ date + '-' + id }\n        >\n            <NotificationDrawerListItemHeader\n                variant=\"info\"\n                title={\n                <>\n                  { url ? (\n                      <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                          { capitalize(label) }\n                          <ExternalLinkAltIcon />\n                      </a>\n                  ) : capitalize(label) }\n                </>\n                }\n            >\n            </NotificationDrawerListItemHeader>\n            <NotificationDrawerListItemBody  timestamp={ stringifyDate(date) }>\n                { message }{ ' ' }\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst WarningNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'warning')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem\n            variant=\"warning\"\n            key={ date + '-' + id }\n        >\n            <NotificationDrawerListItemHeader\n                variant=\"warning\"\n                title={\n                <>\n                  { url ? (\n                      <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                          { capitalize(label) }\n                          <ExternalLinkAltIcon />\n                      </a>\n                  ) : capitalize(label) }\n                </>\n                }\n            >\n            </NotificationDrawerListItemHeader>\n            <NotificationDrawerListItemBody  timestamp={ stringifyDate(date) }>\n                { message }{ ' ' }\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst NotificationsList = ({ filterBy, notifications }) => (\n  <>\n    <NotificationDrawerList>\n        { notifications.length <= 0 && <LoadingState /> }\n        { filterBy === '' && (\n            <AllNotificationTemplate notifications={ notifications } />\n        ) }\n        { filterBy === 'notice' && (\n            <NoticeNotificationTemplate notifications={ notifications } />\n        ) }\n        { filterBy === 'error' && (\n            <ErrorNotificationTemplate notifications={ notifications } />\n        ) }\n        { filterBy === 'warning' && (\n            <WarningNotificationTemplate notifications={ notifications } />\n        ) }\n    </NotificationDrawerList>\n  </>\n);\n\nAllNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nErrorNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nWarningNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nNotificationsList.propTypes = {\n    notifications: PropTypes.array,\n    filterBy: PropTypes.string\n};\n\nexport default NotificationsList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoData from '../../Components/NoData';\nimport { preflightRequest, readClusters, readNotifications } from '../../Api';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle,\n    FormSelect,\n    FormSelectOption,\n    Pagination,\n    PaginationVariant,\n    NotificationDrawer\n} from '@patternfly/react-core';\n\nimport NotificationsList from '../../Components/NotificationsList';\n\nconst CardTitle = styled(PFCardTitle)`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n`;\n\nconst DropdownGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-end;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n\n  select {\n    margin: 0 10px;\n    width: 150px;\n\n    @media screen and (max-width: 1035px) {\n      margin: 10px 10px 0 0;\n    }\n\n    @media screen and (max-width: 865px) {\n      width: 100%;\n    }\n  }\n`;\n\nconst notificationOptions = [\n    {\n        value: 'please choose',\n        label: 'Select Notification Severity',\n        disabled: true\n    },\n    { value: 'error', label: 'View Critical', disabled: false },\n    { value: 'warning', label: 'View Warning', disabled: false },\n    { value: 'notice', label: 'View Notice', disabled: false },\n    { value: '', label: 'View All', disabled: false }\n];\n\nconst perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 }\n];\n\nfunction formatClusterName(data) {\n    const defaultClusterOptions = [\n        { value: 'please choose', label: 'Select cluster', disabled: true },\n        { value: '', label: 'All Clusters', disabled: false },\n        { value: -1, label: 'Unassociated', disabled: false }\n    ];\n    return data.reduce(\n        (formatted, { label, cluster_id: id, install_uuid: uuid }) => {\n            if (label.length === 0) {\n                formatted.push({ value: id, label: uuid, disabled: false });\n            } else {\n                formatted.push({ value: id, label, disabled: false });\n            }\n\n            return formatted;\n        },\n        defaultClusterOptions\n    );\n}\n\nconst initialQueryParams = {\n    limit: 5,\n    offset: 0\n};\n\nconst Notifications = () => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [ notificationsData, setNotificationsData ] = useState([]);\n    const [ clusterOptions, setClusterOptions ] = useState([]);\n    const [ selectedCluster, setSelectedCluster ] = useState('');\n    const [ firstRender, setFirstRender ] = useState(true);\n    const [ isLoading, setIsLoading ] = useState(true);\n    const [ meta, setMeta ] = useState({});\n    const [ currPage, setCurrPage ] = useState(1);\n    const {\n        queryParams,\n        setId,\n        setLimit,\n        setOffset,\n        setSeverity\n    } = useQueryParams(initialQueryParams);\n\n    useEffect(() => {\n        if (firstRender) {\n            return;\n        }\n\n        const getData = () => {\n            return readNotifications({ params: queryParams });\n        };\n\n        const update = async () => {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            getData().then(\n                ({ notifications: notificationsData = [], meta }) => {\n                    setNotificationsData(notificationsData);\n                    setMeta(meta);\n                    setIsLoading(false);\n                }\n            );\n        };\n\n        update();\n    }, [ queryParams ]);\n\n    useEffect(() => {\n        insights.chrome.appNavClick({ id: 'notifications', secondaryNav: true });\n\n        let ignore = false;\n        const fetchEndpoints = () => {\n            return Promise.all(\n                [ readClusters(), readNotifications({ params: queryParams }) ].map(p =>\n                    p.catch(() => [])\n                )\n            );\n        };\n\n        async function initializeWithPreflight() {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            await preflightRequest().catch(error => {\n                setPreFlightError({ preflightError: error });\n            });\n            fetchEndpoints().then(\n                ([\n                    { templates: clustersData = []},\n                    { notifications: notificationsData = [], meta }\n                ]) => {\n                    if (!ignore) {\n                        const clusterOptions = formatClusterName(clustersData);\n                        setClusterOptions(clusterOptions);\n                        setNotificationsData(notificationsData);\n                        setMeta(meta);\n                        setFirstRender(false);\n                        setIsLoading(false);\n                    }\n                }\n            );\n        }\n\n        initializeWithPreflight();\n        return () => (ignore = true);\n    }, []);\n\n    const returnOffsetVal = page => {\n        let offsetVal = (page - 1) * queryParams.limit;\n        return offsetVal;\n    };\n\n    const handleSetPage = page => {\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    const handlePerPageSelect = (perPage, page) => {\n        setLimit(perPage);\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={ 'Notifications' } />\n            </PageHeader>\n            { preflightError && (\n                <Main>\n                    <EmptyState { ...preflightError } />\n                </Main>\n            ) }\n            { !preflightError && (\n        <>\n          <Main>\n              <Card>\n                  <CardTitle>\n                      <DropdownGroup>\n                          <FormSelect\n                              name=\"selectedCluster\"\n                              value={ selectedCluster }\n                              onChange={ value => {\n                                  setSelectedCluster(value);\n                                  setId(value);\n                                  setOffset(0);\n                                  setCurrPage(1);\n                              } }\n                              aria-label=\"Select Cluster\"\n                          >\n                              { clusterOptions.map(({ value, label, disabled }, index) => (\n                                  <FormSelectOption\n                                      isDisabled={ disabled }\n                                      key={ index }\n                                      value={ value }\n                                      label={ label }\n                                  />\n                              )) }\n                          </FormSelect>\n                          <FormSelect\n                              name=\"selectedNotification\"\n                              value={ queryParams.severity || '' }\n                              onChange={ value => {\n                                  setSeverity(value);\n                                  setOffset(0);\n                                  setCurrPage(1);\n                              } }\n                              aria-label=\"Select Notification Type\"\n                          >\n                              { notificationOptions.map(\n                                  ({ disabled, value, label }, index) => (\n                                      <FormSelectOption\n                                          isDisabled={ disabled }\n                                          key={ index }\n                                          value={ value }\n                                          label={ label }\n                                      />\n                                  )\n                              ) }\n                          </FormSelect>\n                      </DropdownGroup>\n                      <Pagination\n                          itemCount={ meta && meta.count ? meta.count : 0 }\n                          widgetId=\"pagination-options-menu-top\"\n                          perPageOptions={ perPageOptions }\n                          perPage={ queryParams.limit }\n                          page={ currPage }\n                          variant={ PaginationVariant.top }\n                          onPerPageSelect={ (_event, perPage, page) => {\n                              handlePerPageSelect(perPage, page);\n                          } }\n                          onSetPage={ (_event, pageNumber) => {\n                              handleSetPage(pageNumber);\n                          } }\n                          isCompact\n                      />\n                  </CardTitle>\n                  <CardBody>\n                      { isLoading && <LoadingState /> }\n                      { !isLoading && notificationsData.length <= 0 && <NoData /> }\n                      { !isLoading && notificationsData.length > 0 && (\n                          <NotificationDrawer>\n                              <NotificationsList\n                                  filterBy={ queryParams.severity || '' }\n                                  options={ notificationOptions }\n                                  notifications={ notificationsData }\n                              />\n                          </NotificationDrawer>\n                      ) }\n                      <Pagination\n                          itemCount={ meta && meta.count ? meta.count : 0 }\n                          widgetId=\"pagination-options-menu-bottom\"\n                          perPageOptions={ perPageOptions }\n                          perPage={ queryParams.limit }\n                          page={ currPage }\n                          variant={ PaginationVariant.bottom }\n                          onPerPageSelect={ (_event, perPage, page) => {\n                              handlePerPageSelect(perPage, page);\n                          } }\n                          onSetPage={ (_event, pageNumber) => {\n                              handleSetPage(pageNumber);\n                          } }\n                          style={ { marginTop: '20px' } }\n                      />\n                  </CardBody>\n              </Card>\n          </Main>\n        </>\n            ) }\n        </React.Fragment>\n    );\n};\n\nexport default Notifications;\n","import moment from 'moment';\n\n/*\n * isNumeric - return true if input is a real number\n */\nexport function isNumeric(val) {\n    if (val === 0 || val === '0') {\n        return true;\n    }\n\n    if (parseInt(val)) {\n        return true;\n    }\n\n    if (parseFloat(val)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function trimStr(str) {\n    return str.toString().replace(/['\"]+/g, '');\n}\n\nexport function formatDateTime(dateTime) {\n    return moment(new Date(dateTime).toISOString()).format('M/D/YYYY h:mm:ssa');\n}\n\nexport function formatDate(date) {\n    return moment(date).format('YYYY-MM-DD');\n}\n\nexport function formatSeconds(seconds) {\n    return moment().startOf('day')\n    .seconds(seconds)\n    .format('H:mm:ss');\n}\n\nexport function getTotal(data) {\n    if (!data) {\n        return;\n    } else {\n        let total = 0;\n        data.forEach(datum => {\n            total += parseInt(datum.count);\n        });\n        return total;\n    }\n}\n\nexport function formatPercentage(val) {\n    if (isNaN(val)) {\n        return;\n    }\n\n    return `${val}%`;\n}\n\nexport const capitalize = (s) => {\n    if (typeof s !== 'string') {return '';}\n\n    return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport function calculateDelta(a, b) {\n    if (!isNumeric(a) || !isNumeric(b)) {\n        return 0;\n    }\n\n    // never return less than zero ...\n    if ((b - a) < 0) {\n        return 0;\n    }\n\n    return b - a;\n}\n\nexport function convertMinsToMs(mins) {\n    if (!parseInt(mins)) {\n        return 0;\n    }\n\n    return mins * 60000;\n}\n\nexport function convertMsToMins(ms) {\n    if (!parseInt(ms)) {\n        return 0;\n    }\n\n    return ms / 60000;\n}\n\nexport function convertSecondsToMins(seconds) {\n    if (!parseInt(seconds)) {\n        return 0;\n    }\n\n    return seconds / 60;\n}\n\nexport function convertMinsToSeconds(mins) {\n    if (!parseInt(mins) || parseInt(mins) < 0) {\n        return 0;\n    }\n\n    return +parseInt(mins) * 60;\n}\n\nexport function convertSecondsToHours(seconds) {\n    if (!parseInt(seconds)) {\n        return 0;\n    }\n\n    return seconds / 3600;\n}\n\nexport function convertWithCommas(arr, key) {\n    const split = arr.reduce((strs, datum) => { strs.push(datum[key]); return strs; }, []);\n    return split.join(', ');\n}\n\nexport function formatJobType(type) {\n    return (type === 'job' ? 'Playbook run' : 'Workflow job');\n}\n\nexport function formatJobStatus(status) {\n    return (status === 'successful' ? 'Success' : 'Failed');\n}\n\nexport function formatJobDetailsURL(baseURL, jobId) {\n    const subDirectory1 = 'job';\n    const subDirectory2 = 'details';\n    return `${baseURL}/#/${subDirectory1}/${jobId}/${subDirectory2}/`;\n}\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst DefaultLoadingState = () => (\n    <EmptyState variant={ EmptyStateVariant.full }>\n        <EmptyStateIcon icon={ CubesIcon } />\n        <Title headingLevel=\"h5\" size=\"lg\">\n            Loading...\n        </Title>\n        <EmptyStateBody>\n            Please wait.\n        </EmptyStateBody>\n    </EmptyState>\n);\n\nexport default DefaultLoadingState;\n"],"sourceRoot":""}