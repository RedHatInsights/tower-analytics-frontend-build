{"version":3,"sources":["webpack:///./src/Utilities/useQueryParams.js","webpack:///./src/Components/EmptyState.js","webpack:///./src/Charts/BaseChart.js","webpack:///./src/Components/NoData.js","webpack:///./src/Utilities/useApi.js","webpack:///./src/Components/ApiErrorState.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Components/Toolbar/CategoryDropdown.js","webpack:///./src/Components/Toolbar/CustomDateSelector.js","webpack:///./src/Components/Toolbar/constants.js","webpack:///./src/Components/Toolbar/ToolbarFilterItem.js","webpack:///./src/Components/Toolbar/helpers.js","webpack:///./src/Components/Toolbar/Toolbar.js","webpack:///./src/Components/Toolbar/index.js","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/Utilities/useRedirect.js","webpack:///./src/Charts/ROITopTemplates.js","webpack:///./src/Containers/AutomationCalculator/helpers.js","webpack:///./src/Containers/AutomationCalculator/TotalSavings.js","webpack:///./src/Containers/AutomationCalculator/CalculationCost.js","webpack:///./src/Containers/AutomationCalculator/AutomationFormula.js","webpack:///./src/Containers/AutomationCalculator/TopTemplates.js","webpack:///./src/Containers/AutomationCalculator/AutomationCalculator.js","webpack:///./src/Utilities/Tooltip.js","webpack:///./src/Charts/BarChart.js","webpack:///./src/Charts/LineChart.js","webpack:///./src/Components/ModulesList.js","webpack:///./src/Components/TemplatesList.js","webpack:///./src/Containers/Clusters/Clusters.js","webpack:///./src/Utilities/Legend.js","webpack:///./src/Charts/GroupedBarChart.js","webpack:///./src/Charts/PieChart.js","webpack:///./src/Containers/OrganizationStatistics/OrganizationStatistics.js","webpack:///./src/Utilities/colors.js","webpack:///./src/Components/NoResults.js","webpack:///./src/Components/JobStatus.js","webpack:///./src/Components/JobExplorerList.js","webpack:///./src/Containers/JobExplorer/JobExplorer.js","webpack:///./src/Components/NotificationsList.js","webpack:///./src/Containers/Notifications/Notifications.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Components/LoadingState.js","webpack:///./src/Api.js"],"names":["useQueryParams","initial","_useReducer","Object","react__WEBPACK_IMPORTED_MODULE_4__","state","_ref","type","value","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_3___default","startDate","endDate","parseInt","id","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2___default","limit","newState","start_date","end_date","severity","newValues","entries","forEach","_ref2","_ref3","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default","key","_Utilities_helpers__WEBPACK_IMPORTED_MODULE_6__","status","quick_date_range","job_type","org_id","cluster_id","template_id","sort_by","only_root_workflows_and_standalone_jobs","Error","_useReducer2","queryParams","dispatch","actionMapper","setLimit","setOffset","offset","setSeverity","setFromToolbar","varName","arguments","length","undefined","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default","setEndDate","moment__WEBPACK_IMPORTED_MODULE_5___default","format","setId","setStartDate","days","subtract","setStartDateAsString","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_patternfly_react_core_dist_js_components_Button_Button_js__WEBPACK_IMPORTED_MODULE_2__","_patternfly_react_core_dist_js_components_Title_Title_js__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_core_dist_js_components_EmptyState_EmptyState_js__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateIcon_js__WEBPACK_IMPORTED_MODULE_5__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateBody_js__WEBPACK_IMPORTED_MODULE_6__","_patternfly_react_icons_dist_js_icons_wrench_icon__WEBPACK_IMPORTED_MODULE_7__","_patternfly_react_icons_dist_js_icons_wrench_icon__WEBPACK_IMPORTED_MODULE_7___default","DefaultEmptyState","error","preflightError","a","createElement","variant","full","icon","Fragment","headingLevel","size","href","target","rel","onClick","window","location","reload","propTypes","object","__webpack_exports__","initializeChart","Chart","BaseChart","props","margin","react__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","getWidth","d3__WEBPACK_IMPORTED_MODULE_3__","style","left","right","getHeight","top","bottom","prop_types__WEBPACK_IMPORTED_MODULE_2___default","string","element","_patternfly_react_core_dist_js_components_Title_Title_js__WEBPACK_IMPORTED_MODULE_1__","_patternfly_react_core_dist_js_components_EmptyState_EmptyState_js__WEBPACK_IMPORTED_MODULE_2__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateIcon_js__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_4___default","dataFetchReducer","action","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1___default","isLoading","isSuccess","data","payload","initialData","postprocess","d","_useState","react__WEBPACK_IMPORTED_MODULE_2__","_useState2","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default","request","setRequest","didCancel","insights","chrome","auth","getUser","then","catch","e","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateBody_js__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateIcon_js__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_core_dist_js_components_Title_Title_js__WEBPACK_IMPORTED_MODULE_5__","_patternfly_react_icons_dist_js_icons_exclamation_circle_icon__WEBPACK_IMPORTED_MODULE_6__","_patternfly_react_icons_dist_js_icons_exclamation_circle_icon__WEBPACK_IMPORTED_MODULE_6___default","_patternfly_react_tokens__WEBPACK_IMPORTED_MODULE_7__","ApiErrorState","message","small","color","jobExplorer","roi","organizationStatistics","attributes","defaultParams","group_by","group_by_time","granularity","CategoryDropdown_CategoryDropdown","selected","_ref$setSelected","setSelected","_ref$categories","categories","react","slicedToArray_default","isExpanded","setIsExpanded","react_default","ToolbarItem","Select","isOpen","aria-label","onToggle","onSelect","_event","selection","selections","placeholderText","map","name","SelectOption","prop_types_default","array","func","Toolbar_CategoryDropdown","CustomDateSelector_CustomDateSelector","_ref$onInputChange","onInputChange","_ref$startDate","_ref$endDate","InputGroup","TextInput","onChange","Toolbar_CustomDateSelector","optionsForCategories","isSingle","placeholder","ToolbarFilterItem_ToolbarFilterItem","categoryKey","_ref$filter","filter","_ref$values","values","_ref$isVisible","isVisible","_ref$hasChips","hasChips","setFilter","expanded","setExpanded","options","ToolbarFilter","showToolbarItem","chips","item","comparator","val","i","handleSingleChips","reduce","acc","Number","isInteger","cmpItem","push","handleCheckboxChips","categoryName","deleteChip","valueToDelete","keyToDelete","find","filteredArr","event","checked","concat","toConsumableArray_default","description","isRequired","any","bool","Toolbar_ToolbarFilterItem","Toolbar_FilterableToolbar","filters","setFilters","_ref$pagination","pagination","_ref$hasSettings","hasSettings","settingsExpanded","setSettingsExpanded","restCategories","objectWithoutProperties_default","filterCategories","keys","includes","obj","_useState3","_useState4","currentCategory","setCurrentCategory","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarContent","Button","filter_icon_default","ToolbarGroup","el","sort_amount_down_icon_default","isActive","cog_icon_default","visibility","default","lg","Card","isFlat","backgroundColor","CardHeader","CardActions","times_icon_default","CardTitle","CardBody","Switch","label","labelOff","isChecked","Tooltip","position","content","question_circle_icon_default","Toolbar_Toolbar","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","code","resolve","module","exports","Utilities_useRedirect","history","path","query","search","query_string","arrayFormat","pathname","paths","ROITopTemplates_Tooltip","_this","this","classCallCheck_default","defineProperty_default","savings","manualCost","automationCost","scrollLeftOffset","d3","node","scrollLeft","x","pageX","svg","getBoundingClientRect","y","pageY","formatDollars","delta","automatedCost","toolTipWidth","toolTipBase","width","chartWidth","flipped","text","nameWidth","getComputedTextLength","savingsWidth","manualCostWidth","automationCostWidth","widestTextElem","adjustedWidth","maxTextPerc","boxWidth","overage","boundingBox","attr","toolTipPoint","interrupt","transition","delay","draw","amount","parseFloat","toFixed","toString","replace","append","slice","textWidthThreshold","ROITopTemplates_TopTemplatesSavings","TopTemplatesSavings","_this2","possibleConstructorReturn_default","getPrototypeOf_default","call","init","bind","assertThisInitialized_default","resize","timeout","_this3","clearTimeout","setState","setTimeout","remove","ticks","height","rangeRound","padding","range","formatYAxisValue","xAxis","tickValues","yAxis","tickFormat","tickSize","taskNames","tooltip","domain","selectAll","bandwidth","enter","on","darker","handleMouseOver","handleMouseOut","addEventListener","removeEventListener","ROITopTemplates","BorderedCardTitle","styled_components_browser_esm","_templateObject","TotalSavings_TotalSavings","_ref$totalSavings","totalSavings","borderTop","paddingBottom","Title","total","floatToStringWithCommas","number","AutomationCalculator_TotalSavings","InputAndText","div","CalculationCost_templateObject","validFloat","floatValue","CalculationCost_CalculationCost","_ref$costManual","costManual","_ref$setCostManual","setCostManual","_ref$costAutomation","costAutomation","_ref$setCostAutomatio","setCostAutomation","InputGroupText","dollar_sign_icon_default","paddingTop","AutomationCalculator_CalculationCost","AutomationCalculator_AutomationFormula","TemplateDetail","TopTemplates_templateObject","TemplateDetailSubTitle","em","_templateObject2","TooltipWrapper","_templateObject3","IconGroup","_templateObject4","TopTemplates_InputAndText","_templateObject5","TopTemplates_QuestionIconTooltip","Popover","bodyContent","successful_elapsed_total","total_org_count","total_cluster_count","info_circle_icon_default","TopTemplates_TopTemplates","_ref2$data","_ref2$setDataRunTime","setDataRunTime","_ref2$redirectToJobEx","redirectToJobExplorer","overflow","flex","className","Tooltip_Tooltip","component","helpers","avgRunTime","minutes","successful_hosts_total","deselectedIds","setDeselectedIds","AutomationCalculator_TopTemplates","Wrapper","AutomationCalculator_templateObject","WrapperLeft","AutomationCalculator_templateObject2","WrapperRight","AutomationCalculator_templateObject3","AutomationCalculator_updateDeltaCost","objectSpread_default","AutomationCalculator_AutomationCalculator","toJobExplorer","_useApi","useApi","_useApi2","preflight","setPreflight","_useApi3","_useApi4","setOptions","_useApi5","_ref$items","items","AutomationCalculator_mapApi","_useApi6","api","fetchApi","setDataInApi","_useQueryParams","constants","seconds","updatedData","Api","params","templateId","PageHeader","title","Main","EmptyState","LoadingState","NoData","textAlign","paddingLeft","sum","curr","computeTotalSavings","display","flexDirection","setUnfilteredData","Utilities_Tooltip","opts","success","fail","formatTooltipDate","RAN","FAIL","TOTAL","date","DATE","jobs","jobsWidth","failed","successful","successTextWidth","failTextWidth","circleSuccess","circleFail","failedIcon","successIcon","successText","failText","clickMore","colors","BarChart_BarChart","BarChart","formattedData","formattedDate","initialQueryParams","parseTime","_this$props","unformattedData","formatted","created","Date","barTooltip","layers","order","stack","maxTicks","Math","round","layer","_d","duration","ease","prevProps","Charts_BarChart","withRouter","LineChart_LineChart","LineChart","updateCluster","clusterId","attrTween","tweenDash","l","getTotalLength","t","successLine","curve","failLine","defined","isNaN","vertical","handleMouseMove","intersectX","cx","baseVal","Charts_LineChart","ModulesList_DataListCell","DataListCell","ModulesList_DataListItem","DataListItem","DataCellEnd","ModulesList_ModulesList","modules","DataList","maxHeight","background","aria-labelledby","border","index","count","Components_ModulesList","TemplatesList_success","circle_icon_default","marginRight","TemplatesList_fail","TemplatesList_DataListCell","TemplatesList_templateObject","PFDataListItemNoBorder","TemplatesList_templateObject2","TemplatesList_DataListItem","TemplatesList_templateObject3","DataListItemCompact","DataListCellCompact","DataListFocus","_templateObject6","TemplatesList_DataCellEnd","_templateObject7","DataCellEndCompact","_templateObject8","TemplatesList_TemplatesList","templates","isModalOpen","setIsModalOpen","selectedId","setSelectedId","_useState5","_useState6","selectedTemplate","setSelectedTemplate","_useState7","_useState8","relatedJobs","setRelatedJobs","asyncToGenerator_default","regenerator_default","mark","_callee","wrap","_context","prev","next","related_jobs","stop","apply","update","Modal","onClose","actions","total_run_count","total_run","average_run","success_rate","most_failed_tasks","percentage","fail_rate","task_name","TemplatesList_formatTopFailedTask","Label","job","job_id","job_name","cluster_label","install_uuid","start_time","total_time","Components_TemplatesList","Clusters_CardTitle","Clusters_templateObject","timeFrameOptions","disabled","Clusters_initialQueryParams","moment_default","setPreFlightError","barChartData","setBarChartData","lineChartData","setLineChartData","templatesData","setTemplatesData","_useState9","_useState10","modulesData","setModulesData","_useState11","_useState12","clusterOptions","setClusterOptions","_useState13","_useState14","clusterTimeFrame","setClusterTimeFrame","_useState15","_useState16","selectedCluster","setSelectedCluster","_useState17","_useState18","setIsLoading","appNavClick","secondaryNav","_ref3$templates","uuid","formatClusterName","Promise","all","_ref4","_ref5","_ref5$0$data","chartData","_ref5$1$modules","_ref5$2$templates","justifyContent","FormSelect","_ref6","FormSelectOption","isDisabled","option","marginTop","Container","LegendDetail","Color","attrs","span","SubTitle","Legend_Switch","Legend_Legend","Legend","handleChange","_isChecked","some","Utilities_Legend","GroupedBarChart_Wrapper","GroupedBarChart_templateObject","formatDate","pieces","split","GroupedBarChart_Tooltip","orgName","GroupedBarChart_GroupedBarChart","GroupedBarChart","handleToggle","orgsList","indexOf","s","_this4","org","colorFunc","timeFrame","selectedOrgs","x0","x1","dates","selectedOrgNames","exit","bars","merge","subEnter","_this$state","isAccessible","Charts_GroupedBarChart","PieChart_Wrapper","PieChart_templateObject","PieChart_Tooltip","perc","percSuccess","drawn","percent","maxLength","percentageTotal","percentageSuccess","boundingBOx","showSuccess","boundingHeight","boundingWidth","PieChart_PieChart","PieChart","sort","b","radius","min","donutTooltip","pie","arc","outerRadius","innerRadius","classed","Charts_PieChart","OrganizationStatistics_CardTitle","OrganizationStatistics_templateObject","CardContainer","OrganizationStatistics_templateObject2","TopCard","OrganizationStatistics_templateObject3","OrganizationStatistics_optionsMapper","meta","rest","inventory_id","orgsChartMapper","_ref$dates","total_count","pieChartMapper","attrName","_ref4$items","OrganizationStatistics_OrganizationStatistics","orgs","setOrgs","setJobs","_useApi7","_useApi8","tasks","setTasks","_useApi9","_useApi10","marginLeft","Components_NoResults","EmptyState_EmptyState","EmptyStateIcon","search_icon_default","EmptyStateBody","JobStatus_JobStatus","getColor","check_circle_icon_default","exclamation_circle_icon_default","sync_alt_icon_default","exclamation_triangle_icon_default","clock_icon_default","getIcon","str","charAt","toUpperCase","capitalized","oneOf","Components_JobStatus","headerLabels","ExternalLinkIcon","external_link_alt_icon_default","JobExplorerList_DataListCell","DataListCellHeader","JobExplorerList_DataListItemCells","DataListItemCells","JobExplorerList_DataListToggle","DataListToggle","JobExplorerList_buildListRow","ariaLabel","ariaLabelledBy","windowWidth","DataListItemRow","aria-controls","idx","newExpanded","toggle","dataListCells","tower_link","fontWeight","template_name","cluster_name","org_name","DataListContent","isHidden","started","finished","JobExplorerList_AllJobsTemplate","innerWidth","setWindowWidth","onResize","JobExplorerList_JobExplorerList","isCompact","labels","JobExplorerList_buildHeader","Components_JobExplorerList","perPageOptions","JobExplorer_optionsMapper","groupBy","JobExplorer_JobExplorer","_useApi2$","_useApi2$$data","_useApi2$$data$meta","_useApi2$$data$items","setData","currPage","setCurrPage","initialSearchParams","parseBooleans","combined","updateURL","returnOffsetVal","page","handleSetPage","nextOffset","handlePerPageSelect","perPage","Pagination","itemCount","widgetId","onPerPageSelect","onSetPage","pageNumber","ExternalLinkAltIcon","NotificationsList_NotificationDrawerListItem","NotificationDrawerListItem","NotificationsList_NotificationDrawerList","NotificationDrawerList","NotificationsList_stringifyDate","day","now","utc","isAfter","diff","isSame","valueOf","NotificationsList_AllNotificationTemplate","notifications","notification_id","url","tower_url","NotificationDrawerListItemHeader","NotificationDrawerListItemBody","timestamp","NotificationsList_ErrorNotificationTemplate","notification","NotificationsList_NoticeNotificationTemplate","NotificationsList_WarningNotificationTemplate","_ref7","_ref8","NotificationsList_NotificationsList","_ref9","filterBy","Components_NotificationsList","Notifications_CardTitle","Notifications_templateObject","DropdownGroup","Notifications_templateObject2","notificationOptions","notificationsData","setNotificationsData","firstRender","setFirstRender","setMeta","_ref3$notifications","ignore","fetchEndpoints","p","_initializeWithPreflight","_callee2","_context2","_ref5$0$templates","clustersData","_ref5$","_ref5$$notifications","initializeWithPreflight","NotificationDrawer","trimStr","formatDateTime","formatSeconds","getTotal","formatPercentage","capitalize","calculateDelta","convertSecondsToMins","convertMinsToSeconds","convertSecondsToHours","formatJobType","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","isNumeric","dateTime","toISOString","startOf","datum","mins","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateBody_js__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_5__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_5___default","barChartEndpoint","clustersEndpoint","modulesEndpoint","notificationsEndPoint","preflightEndpoint","templateJobsEndpoint","templatesEndPoint","jobExplorerEndpoint","getAbsoluteUrl","arr","pop","join","handleResponse","response","json","ok","reject","readTemplateJobs","_ref$params","formattedUrl","URL","searchParams","fetch","preflightRequest","readClusters","readChart30","_ref2$params","readOrgOptions","_ref3$params","method","body","JSON","stringify","readJobsByDateAndOrg","_ref4$params","rParams","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","query_string__WEBPACK_IMPORTED_MODULE_1__","readJobRunsByOrg","_ref5$params","include_others","readJobEventsByOrg","_ref6$params","readModules","_ref7$params","readTemplates","_ref8$params","readNotifications","_ref9$params","readJobExplorerOptions","_ref10","_ref10$params","readJobExplorer","_ref11","_ref11$params","paginationParams","qs","readROI","_ref12","_ref12$params","readROIOptions","_ref13","_ref13$params"],"mappings":"kOAKaA,EAAiB,SAAAC,GAC1B,IADqCC,EA6EHC,OAAAC,EAAA,WAAAD,CA5EZ,SAACE,EAADC,GAA4B,IAAlBC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,MAClC,OAAQD,GAEJ,IAAK,gBACD,OAAAE,OAAYJ,GAAOK,UAAWF,IAClC,IAAK,cACD,OAAAC,OAAYJ,GAAOM,QAASH,IAChC,IAAK,SACD,OAAKI,SAASJ,GAKdC,OAAYJ,GAAOQ,GAAID,SAASJ,MAJKH,EAAzBQ,GADUC,IACeT,GADf,QAM1B,IAAK,YACD,OAAKO,SAASJ,EAAMO,OAKpBN,OAAYJ,GAAOU,MAAOH,SAASJ,EAAMO,UAJDV,EAA5BU,MADgBD,IACYT,GADZ,WAOhC,IAAK,aACL,IAAK,iBACL,IAAK,eACL,IAAK,aACL,IAAK,UACL,IAAK,cACL,IAAK,eACL,IAAK,aACL,IAAK,8BACD,OAAAI,OAAYJ,EAAUG,GAC1B,IAAK,uBACD,IAAIQ,EAAWP,OAAKJ,GAMpB,MALc,WAAVG,IACAQ,EAAWP,OAAKO,GAAUC,WAAY,KAAMC,SAAU,QAG1DF,EAAWP,OAAKO,EAAaR,GAIjC,IAAK,eACD,MAAuB,KAAnBA,EAAMW,UACiCd,EAA/Bc,SADeL,IACgBT,GADhB,cAK3BI,OAAYJ,EAAUG,GAC1B,IAAK,iBACL,IAAK,eACD,IAAIY,KAIJ,OAHAjB,OAAOkB,QAAQb,GAAOc,QAAQ,SAAAC,GAAoB,IAAAC,EAAAC,IAAAF,EAAA,GAAjBG,EAAiBF,EAAA,GAAZhB,EAAYgB,EAAA,GAC9CJ,EAAUM,GAAOvB,OAAAwB,EAAA,EAAAxB,CAAWK,KAEhCC,OAAYJ,EAAUe,GAG1B,IAAK,eACD,OAAAX,OAAYJ,GACRuB,UACAC,iBAAkB,GAClBC,YACAC,UACAC,cACAC,eACAC,QAAS,GACTjB,WAAY,GACZC,SAAU,GACViB,yCAAyC,IAEjD,QACI,MAAM,IAAIC,QAIsB3B,OAAqBR,IA7E5BoC,EAAAZ,IAAAvB,EAAA,GA6E7BoC,EA7E6BD,EAAA,GA6EhBE,EA7EgBF,EAAA,GA+E/BG,GACFZ,OAAQ,aACRC,iBAAkB,uBAClBC,SAAU,eACVC,OAAQ,UACRC,WAAY,cACZC,YAAa,eACbC,QAAS,aACTjB,WAAY,iBACZC,SAAU,eACViB,wCAAyC,+BAG7C,OACIG,cACAC,WACAE,SAAU,SAAA1B,GAAK,OAAIwB,GAAWhC,KAAM,YAAaC,OAASO,YAC1D2B,UAAW,SAAAC,GAAM,OAAIJ,GAAWhC,KAAM,aAAcC,OAASmC,aAC7DC,YAAa,SAAAzB,GAAQ,OAAIoB,GAAWhC,KAAM,eAAgBC,OAASW,eACnE0B,eAAgB,SAACC,GAA0B,IAAjBtC,EAAiBuC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,KAI1BR,EAHCO,GAGUvC,KAAMiC,EAAaM,GAAUtC,MAAO0C,OAAGJ,EAAUtC,KAFjDD,KAAM,kBAMzB4C,WAAY,WACR,IAAMxC,EAAUyC,MAASC,OAAO,cAChCd,GAAWhC,KAAM,cAAeC,MAAOG,KAE3C2C,MAAO,SAAA9C,GAAK,OAAI+B,GAAWhC,KAAM,SAAUC,WAC3C+C,aAAc,SAAAC,GACV,IAAI9C,EACS,IAAT8C,IACA9C,EAAY0C,MACXK,SAAS,EAAG,QACZJ,OAAO,eAGC,KAATG,IACA9C,EAAY0C,MACXK,SAAS,EAAG,SACZJ,OAAO,eAIR3C,EADS,KAAT8C,EACYJ,MACXK,SAAS,EAAG,SACZJ,OAAO,cAEID,MACXK,SAASD,EAAM,QACfH,OAAO,cAGZd,GAAWhC,KAAM,gBAAiBC,MAAOE,KAE7CgD,qBAAsB,SAAAlD,GAAK,OAAI+B,GAAWhC,KAAM,gBAAiBC,+CC9IzE,IAAAmD,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,GAAAI,EAAAJ,EAAAE,EAAAC,GAAAE,EAAAL,EAAA,KAAAM,EAAAN,EAAA,IAAAO,EAAAP,EAAA,IAAAQ,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAAE,EAAAQ,GAaME,EAAoB,SAAAlE,GAAA,IAAmBmE,EAAnBnE,EAAGoE,eAAH,OACtBb,EAAAc,EAAAC,cAACT,EAAA,YAAWU,QAAUV,EAAA,kBAAkBW,MACpCjB,EAAAc,EAAAC,cAACR,EAAA,gBAAeW,KAAOR,EAAAI,IACJ,MAAjBF,EAAM7C,QACJiC,EAAAc,EAAAC,cAAAf,EAAAc,EAAAK,SAAA,KACInB,EAAAc,EAAAC,cAACV,EAAA,OAAMe,aAAa,KAAKC,KAAK,MAA9B,iBAGArB,EAAAc,EAAAC,cAACP,EAAA,eAAD,qBACiBR,EAAAc,EAAAC,cAAA,KAAGO,KAAK,wHAAwHC,OAAO,SAASC,IAAI,uBAApJ,QADjB,kDAKW,MAAjBZ,EAAM7C,QACJiC,EAAAc,EAAAC,cAAAf,EAAAc,EAAAK,SAAA,KACInB,EAAAc,EAAAC,cAACV,EAAA,OAAMe,aAAa,KAAKC,KAAK,MAA9B,kBAGArB,EAAAc,EAAAC,cAACP,EAAA,eAAD,qEAKLI,EAAM7C,QACLiC,EAAAc,EAAAC,cAAAf,EAAAc,EAAAK,SAAA,KACInB,EAAAc,EAAAC,cAACV,EAAA,OAAMe,aAAa,KAAKC,KAAK,MAA9B,uDAGArB,EAAAc,EAAAC,cAACX,EAAA,QAAOY,QAAQ,UAAUS,QAAU,kBAAMC,OAAOC,SAASC,WAA1D,aAOhBjB,EAAkBkB,WACdhB,eAAgBV,EAAAW,EAAUgB,QAGfC,EAAA,mGChDTC,EAAkB,SAAAC,GACpB,IAAMC,EAAY,SAACC,GAAU,IACjBnF,EAAemF,EAAfnF,GAAIoF,EAAWD,EAAXC,OAkBZ,OACIC,EAAAvB,EAAAC,cAACkB,EAADK,OACSH,GACLI,SAnBS,WAKb,OAFAxF,SAASyF,EAAA,EAAU,IAAMxF,GAAIyF,MAAM,UAC/BL,EAAOM,KAAON,EAAOO,OAAS,KAgB9BC,UAZU,WAKd,OAFA7F,SAASyF,EAAA,EAAU,IAAMxF,GAAIyF,MAAM,WAC/BL,EAAOS,IAAMT,EAAOU,QAAU,SAkB1C,OALAZ,EAAUL,WACN7E,GAAI+F,EAAAjC,EAAUkC,OACdZ,OAAQW,EAAAjC,EAAUgB,QAGfI,GAGXF,EAAgBH,WACZI,MAAOc,EAAAjC,EAAUmC,SAGNlB,EAAA,sCC7Cf,IAAAjC,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAoD,EAAAnD,EAAA,IAAAoD,EAAApD,EAAA,IAAAqD,EAAArD,EAAA,KAAAsD,EAAAtD,EAAA,KAAAuD,EAAAvD,EAAAE,EAAAoD,GAkBetB,EAAA,EATA,kBACX/B,EAAAc,EAAAC,cAACoC,EAAA,YAAWnC,QAAUmC,EAAA,kBAAkBlC,MACpCjB,EAAAc,EAAAC,cAACqC,EAAA,gBAAelC,KAAOoC,EAAAxC,IACvBd,EAAAc,EAAAC,cAACmC,EAAA,OAAM9B,aAAa,KAAKC,KAAK,MAA9B,4FCVFkC,EAAmB,SAAC/G,EAAOgH,GAC7B,OAAQA,EAAO9G,MACX,IAAK,aACD,OAAA+G,OACOjH,GACHkH,WAAW,EACXC,WAAW,EACX/C,MAAO,OAEf,IAAK,gBACD,OAAA6C,OACOjH,GACHkH,WAAW,EACXC,WAAW,EACX/C,MAAO,KACPgD,KAAMJ,EAAOK,UAErB,IAAK,gBACD,OAAAJ,OACOjH,GACHkH,WAAW,EACXC,WAAW,EACX/C,MAAO4C,EAAOK,UAEtB,IAAK,cACD,OAAAJ,OACOjH,GACHoH,KAAMJ,EAAOK,UAErB,QACI,MAAM,IAAItF,QAgDPwD,EAAA,EA5CA,SAAC+B,GAAsC,IAAzBC,EAAyB7E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAX,SAAA8E,GAAC,OAAIA,GAAMC,EAClB3H,OAAA4H,EAAA,SAAA5H,CAAS,MADS6H,EAAAC,IAAAH,EAAA,GAC1CI,EAD0CF,EAAA,GACjCG,EADiCH,EAAA,GAAA9H,EAGtBC,OAAA4H,EAAA,WAAA5H,CAAWiH,GACnCG,WAAW,EACXC,WAAW,EACX/C,MAAO,KACPgD,KAAME,IAPwCtF,EAAA4F,IAAA/H,EAAA,GAG1CG,EAH0CgC,EAAA,GAGnCE,EAHmCF,EAAA,GAUlDlC,OAAA4H,EAAA,UAAA5H,CAAU,WAEN,GAAK+H,EAAL,CAKA,IAAIE,GAAY,EAiBhB,OAhBA7F,GAAWhC,KAAM,eAGjBgF,OAAO8C,SAASC,OAAOC,KAAKC,UAAUC,KAAK,kBAAMP,EAAQO,KAAK,SAAAhB,GACrDW,GACD7F,GACIhC,KAAM,gBACNmH,QAASE,EAAYH,OAG9BiB,MAAM,SAAAC,GACAP,GACD7F,GAAWhC,KAAM,gBAAiBmH,QAASiB,QAI5C,WAAQP,GAAY,MAC1BF,IAML,OAAS7H,EAAO8H,EAJA,SAAAV,GACZlF,GAAWhC,KAAM,cAAemH,QAASD,yCC1EjD,IAAA9D,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,GAAAI,EAAAJ,EAAAE,EAAAC,GAAAiD,EAAApD,EAAA,IAAAgF,EAAAhF,EAAA,KAAAiF,EAAAjF,EAAA,KAAAkF,EAAAlF,EAAA,IAAAmF,EAAAnF,EAAA,KAAAoF,EAAApF,EAAAE,EAAAiF,GAAAE,EAAArF,EAAA,KAYMsF,EAAgB,SAAA5I,GAAA,IAAG6I,EAAH7I,EAAG6I,QAAH,OAClBtF,EAAAc,EAAAC,cAACoC,EAAA,YAAWnC,QAAUmC,EAAA,kBAAkBoC,OACpCvF,EAAAc,EAAAC,cAACiE,EAAA,gBAAe9D,KAAOiE,EAAArE,EAAwB0E,MAAQJ,EAAA,EAAqBzI,QAC5EqD,EAAAc,EAAAC,cAACkE,EAAA,OAAM7D,aAAa,KAAKC,KAAK,MAA9B,SACArB,EAAAc,EAAAC,cAACgE,EAAA,eAAD,KACMO,KAKdD,EAAcxD,WACVyD,QAASnF,EAAAW,EAAUkC,QAGRjB,EAAA,sCC1BfhC,EAAAiE,EAAAjC,EAAA,sBAAA0D,IAAA1F,EAAAiE,EAAAjC,EAAA,sBAAA2D,IAAA3F,EAAAiE,EAAAjC,EAAA,sBAAA4D,IAAO,IAAMF,GACTG,YACI,KACA,SACA,WACA,UACA,WACA,UACA,UACA,eACA,WACA,qBAEJC,eACI9H,QAAU,aAAc,UACxBC,iBAAkB,eAClBC,UAAY,cAAe,OAC3BC,UACAC,cACAC,eACAC,QAAS,eACTjB,WAAY,KACZC,SAAU,KACViB,yCAAyC,EACzCpB,MAAO,IAIFwI,GACTG,eACI9H,QAAU,cACVG,UACAC,cACAC,eACAJ,iBAAkB,gBAClBC,UAAY,OACZI,QAAS,mCACTjB,WAAY,KACZC,SAAU,KACVH,MAAO,GACPoB,yCAAyC,EACzCsH,YACI,yBACA,2BACA,kBACA,uBAEJE,SAAU,WACVC,eAAe,EACfC,YAAa,YAIRL,GACTE,eACI9H,UACAG,UACAF,iBAAkB,eAClBK,QAAS,OACTnB,MAAO,EACPe,UAAY,cAAe,OAC3BE,cACAC,eACAhB,WAAY,KACZC,SAAU,oUCxDZ4I,EAAmB,SAAAxJ,GAInB,IAHFyJ,EAGEzJ,EAHFyJ,SAGEC,EAAA1J,EAFF2J,mBAEE,IAAAD,EAFY,aAEZA,EAAAE,EAAA5J,EADF6J,kBACE,IAAAD,OAAApC,EACoC3H,OAAAiK,EAAA,SAAAjK,EAAS,GAD7C6H,EAAAqC,IAAAvC,EAAA,GACMwC,EADNtC,EAAA,GACkBuC,EADlBvC,EAAA,GAGF,OACIwC,EAAA7F,EAAAC,cAAC6F,EAAA,YAAD,KACID,EAAA7F,EAAAC,cAAC8F,EAAA,QACGC,OAASL,EACTzF,QAAU,SACV+F,aAAa,aACbC,SAAW,kBAAMN,GAAeD,IAChCQ,SAAW,SAACC,EAAQC,GAChBf,EAAYe,GACZT,GAAc,IAElBU,WAAalB,EACbmB,gBAAkB,aAGdf,EAAWgB,IAAI,SAAA5J,GAAA,IAAGG,EAAHH,EAAGG,IAAK0J,EAAR7J,EAAQ6J,KAAR,OACXZ,EAAA7F,EAAAC,cAACyG,EAAA,cAAa3J,IAAMA,EAAMlB,MAAQkB,GAC5B0J,QAS9BtB,EAAiBpE,WACbyE,WAAYmB,EAAA3G,EAAU4G,MACtBxB,SAAUuB,EAAA3G,EAAUkC,OACpBoD,YAAaqB,EAAA3G,EAAU6G,MAGZ,IAAAC,EAAA,oBCxCTC,EAAqB,SAAApL,GAIrB,IAAAqL,EAAArL,EAHFsL,qBAGE,IAAAD,EAHc,aAGdA,EAAAE,EAAAvL,EAFFI,iBAEE,IAAAmL,EAFU,GAEVA,EAAAC,EAAAxL,EADFK,eACE,IAAAmL,EADQ,GACRA,EACF,OACItB,EAAA7F,EAAAC,cAAA4F,EAAA7F,EAAAK,SAAA,KACEwF,EAAA7F,EAAAC,cAACmH,EAAA,WAAD,KACIvB,EAAA7F,EAAAC,cAACoH,EAAA,WACGZ,KAAK,YACLvK,GAAG,YACHN,KAAK,OACLqK,aAAW,aACXpK,MAAQE,EACRuL,SAAW,SAAAtD,GAAC,OAAIiD,EAAc,aAAcjD,OAGpD6B,EAAA7F,EAAAC,cAACmH,EAAA,WAAD,KACIvB,EAAA7F,EAAAC,cAACoH,EAAA,WACGZ,KAAK,UACLvK,GAAG,UACHN,KAAK,OACLqK,aAAW,WACXpK,MAAQG,EACRsL,SAAW,SAAAtD,GAAC,OAAIiD,EAAc,WAAYjD,SAO5D+C,EAAmBhG,WACfhF,UAAW4K,EAAA3G,EAAUkC,OACrBlG,QAAS2K,EAAA3G,EAAUkC,OACnB+E,cAAeN,EAAA3G,EAAU6G,MAGd,IAAAU,EAAA,EC5CFC,GACTvK,QACIwK,UAAU,EACVhB,KAAM,SACNiB,YAAa,wBAEjBxK,kBACIuK,UAAU,EACVhB,KAAM,OACNiB,YAAa,kBAEjBvK,UACIsK,UAAU,EACVhB,KAAM,MACNiB,YAAa,sBAEjBtK,QACIqK,UAAU,EACVhB,KAAM,eACNiB,YAAa,0BAEjBrK,YACIoK,UAAU,EACVhB,KAAM,UACNiB,YAAa,qBAEjBpK,aACImK,UAAU,EACVhB,KAAM,WACNiB,YAAa,sBAEjBnK,SACIkK,UAAU,EACVhB,KAAM,UACNiB,YAAa,iDCrBfC,EAAoB,SAAAhM,GAOpB,IANFiM,EAMEjM,EANFiM,YAMEC,EAAAlM,EALFmM,cAKE,IAAAD,EALO,KAKPA,EAAAE,EAAApM,EAJFqM,cAIE,IAAAD,OAAAE,EAAAtM,EAHFuM,iBAGE,IAAAD,KAAAE,EAAAxM,EAFFyM,gBAEE,IAAAD,KADFE,EACE1M,EADF0M,UACElF,EACgC3H,OAAAiK,EAAA,SAAAjK,EAAS,GADzC6H,EAAAqC,IAAAvC,EAAA,GACMmF,EADNjF,EAAA,GACgBkF,EADhBlF,EAAA,GAEImF,EAAUhB,EAAqBI,GAkCrC,OACI/B,EAAA7F,EAAAC,cAACwI,EAAA,eACG1L,IAAQ6K,EACRc,gBAAkBR,EAClBS,MAAQP,EAvBRI,EAAQf,SCba,SAACmB,EAAMC,GAEhC,IAAIC,EADR,OAAIF,GAAwB,iBAATA,GAAqBC,IAEpCA,EAAWlM,QAAQ,SAAAoM,GACXA,EAAEhM,MAAQ6L,IACVE,EAAMC,EAAElN,cAIJyC,IAARwK,IACSA,MDIFE,CAAkBlB,EAAQE,GCnCV,SAACY,EAAMC,GACtC,OAAID,GAAQC,EACDD,EAAKK,OAAO,SAACC,EAAKH,GASrB,OARAI,OAAOC,UAAUnN,SAAS8M,MAAOA,EAAI9M,SAAS8M,IAE9CF,EAAWlM,QAAQ,SAAA0M,GACXA,EAAQtM,MAAQgM,GAChBG,EAAII,KAAKD,EAAQxN,SAIlBqN,UD0BAK,CAAoBzB,EAAQE,MAqBnCwB,aAAehB,EAAQ/B,KACvBgD,WAAarB,EAtCJ,SAAC3B,EAAMiD,GAGpB,GAFelC,EAAqBI,GAAaH,SAG7CY,EAAU,UACP,CACH,IAAMsB,EAAc3B,EAAO4B,KAAK,SAAAhN,GAAA,OAAAA,EAAGf,QAAsB6N,IAAe3M,IAClE8M,EAAc/B,EAAOA,OAAO,SAAAjM,GAAK,OAAIA,IAAU8N,IACrDtB,EAAUwB,KA8ByB,MAEnChE,EAAA7F,EAAAC,cAAC8F,EAAA,QACG7F,QAAUsI,EAAQf,SAAW,SAAW,WACxCxB,aAAa2B,EACb1B,SAAW,kBAAMqC,GAAaD,IAC9BnC,SAxBK,SAAC2D,EAAOzD,GACjBmC,EAAQf,UACRY,EAAUhC,GACVkC,GAAY,IAEZF,EAAUyB,EAAMrJ,OAAOsJ,WAAbC,OAAAC,IACCnC,IAAQzB,IACbyB,EAAOA,OAAO,SAAAjM,GAAK,OAAIA,IAAUwK,MAkBnCC,WAAawB,EACb9B,OAASsC,EACT/B,gBAAkBiC,EAAQd,aAGtBM,GAAUA,EAAOxB,IAAI,SAAA3J,GAAA,IAAGE,EAAHF,EAAGE,IAAKlB,EAARgB,EAAQhB,MAAOqO,EAAfrN,EAAeqN,YAAf,OACjBrE,EAAA7F,EAAAC,cAACyG,EAAA,cAAa3J,IAAMA,EAAMlB,MAAQkB,EAAMmN,YAAcA,GAChDrO,QAS9B8L,EAAkB5G,WACd6G,YAAajB,EAAA3G,EAAUkC,OAAOiI,WAC9BrC,OAAQnB,EAAA3G,EAAUoK,IAClBpC,OAAQrB,EAAA3G,EAAU4G,MAClBsB,UAAWvB,EAAA3G,EAAUqK,KACrBjC,SAAUzB,EAAA3G,EAAUqK,KACpBhC,UAAW1B,EAAA3G,EAAU6G,KAAKsD,YAGf,IAAAG,EAAA,EErETC,EAAoB,SAAA5O,GAMpB,IALF6J,EAKE7J,EALF6J,WACAgF,EAIE7O,EAJF6O,QACAC,EAGE9O,EAHF8O,WAGEC,EAAA/O,EAFFgP,kBAEE,IAAAD,EAFW,KAEXA,EAAAE,EAAAjP,EADFkP,mBACE,IAAAD,KAAAzH,EACgD3H,OAAAiK,EAAA,SAAAjK,EAAS,GADzD6H,EAAAqC,IAAAvC,EAAA,GACM2H,EADNzH,EAAA,GACwB0H,EADxB1H,EAAA,GAEMnG,EAAiDsI,EAAjDtI,iBAAkBK,EAA+BiI,EAA/BjI,QAAYyN,EAFpCC,IAEuDzF,GAFvD,+BAKI0F,EAAmB1P,OAAO2P,KAAKH,GACpClD,OAAO,SAAA/K,GAAG,OAAIvB,OAAO2P,KAAK3D,GAAsB4D,SAASrO,KACzDkM,OAAO,SAACoC,EAAKtO,GAEV,OADAsO,EAAItO,GAAOiO,EAAejO,GACnBsO,OATTC,EAY8C9P,OAAAiK,EAAA,SAAAjK,CAC5CA,OAAO2P,KAAKD,GAAkB,IAbhCK,EAAA7F,IAAA4F,EAAA,GAYME,EAZND,EAAA,GAYuBE,EAZvBF,EAAA,GAgBItE,EAAgB,SAACrL,EAAMC,GACzB4O,EAAW7O,EAAMC,IAuGrB,OACIgK,EAAA7F,EAAAC,cAAA4F,EAAA7F,EAAAK,SAAA,KACIwF,EAAA7F,EAAAC,cAACyL,EAAA,SACGxP,GAAG,sCACHyP,gBAAkB,WAAQlB,EAAW,KAAM,OAC3CmB,gCAAgC,MAEhC/F,EAAA7F,EAAAC,cAAC4L,EAAA,eAAD,KACIhG,EAAA7F,EAAAC,cAAC6L,EAAA,QAAO5L,QAAQ,WACZ2F,EAAA7F,EAAAC,cAAC8L,EAAA/L,EAAD,OAEFxE,OAAO2P,KAAKD,GAAkB7M,OAAS,GAAKwH,EAAA7F,EAAAC,cA/GhC,kBAC1B4F,EAAA7F,EAAAC,cAAC+L,EAAA,cAAa9L,QAAQ,gBAClB2F,EAAA7F,EAAAC,cAAC6G,GACG1B,SAAWoG,EACXlG,YAAcmG,EACdjG,WACIhK,OAAO2P,KAAKD,GAAkB1E,IAAI,SAAAyF,GAAE,OAChClP,IAAKkP,EACLxF,KAAMe,EAAqByE,GAAIxF,UAIzCjL,OAAO2P,KAAKD,GAAkB1E,IAAI,SAAAzJ,GAAG,OACnC8I,EAAA7F,EAAAC,cAACqK,GACGvN,IAAMA,EACN6K,YAAc7K,EACd+K,OAAS0C,EAAQzN,GACjBiL,OAASxC,EAAWzI,GACpBmL,UAAYsD,IAAoBzO,EAChCsL,UAAY,SAAAxM,GAAK,OAAI4O,EAAW1N,EAAKlB,UA4FS,MAC5CqB,GAAoB2I,EAAA7F,EAAAC,cAvFf,kBACnB4F,EAAA7F,EAAAC,cAAC+L,EAAA,cAAa9L,QAAQ,gBAClB2F,EAAA7F,EAAAC,cAACqK,GACG1C,YAAY,mBACZE,OAAS0C,EAAQtN,iBACjB8K,OAAS9K,EACTmL,UAAY,SAAAxM,GAAK,OAAI4O,EAAW,mBAAoB5O,IACpDuM,UAAW,IAEgB,WAA7BoC,EAAQtN,kBACN2I,EAAA7F,EAAAC,cAACsH,GACGxL,UAAYyO,EAAQlO,WAAakO,EAAQlO,WAAa,GACtDN,QAAUwO,EAAQjO,SAAWiO,EAAQjO,SAAW,GAChD0K,cAAgBA,MA0EM,MACpB1J,GAAWsI,EAAA7F,EAAAC,cArET,kBAChB4F,EAAA7F,EAAAC,cAAC+L,EAAA,cAAa9L,QAAQ,gBAClB2F,EAAA7F,EAAAC,cAACqK,GACG1C,YAAY,UACZE,OAAS0C,EAAQjN,QACjByK,OAASzK,EACT8K,UAAY,SAAAxM,GAAK,OAAI4O,EAAW,UAAW5O,IAC3CuM,UAAW,IAEfvC,EAAA7F,EAAAC,cAAC6L,EAAA,QAAO5L,QAAQ,WACZ2F,EAAA7F,EAAAC,cAACiM,EAAAlM,EAAD,SA2DiB,MAET6K,GACAhF,EAAA7F,EAAAC,cAAC6F,EAAA,YAAD,KACID,EAAA7F,EAAAC,cAAC6L,EAAA,QACG5L,QAAQ,QACRS,QAAU,kBAAMoK,GAAqBD,IACrC7E,aAAW,WACXkG,SAAWrB,GAEXjF,EAAA7F,EAAAC,cAACmM,EAAApM,EAAD,QAKR2K,GACA9E,EAAA7F,EAAAC,cAAC6F,EAAA,aAAY5F,QAAQ,aAAamM,YAAeC,QAAS,SAAUC,GAAI,YAClE5B,IAIZG,GAAoBjF,EAAA7F,EAAAC,cA1EjB,kBACb4F,EAAA7F,EAAAC,cAACuM,EAAA,MAAKC,QAAM,EAAC9K,OAAU+K,gBAAiB,YACpC7G,EAAA7F,EAAAC,cAAC0M,EAAA,WAAD,KACI9G,EAAA7F,EAAAC,cAAC2M,EAAA,YAAD,KACI/G,EAAA7F,EAAAC,cAAC6L,EAAA,QACG5L,QAAQ,QACRS,QAAU,kBAAMoK,GAAqBD,KAErCjF,EAAA7F,EAAAC,cAAC4M,EAAA7M,EAAD,QAGR6F,EAAA7F,EAAAC,cAAC6M,EAAA,UAAD,kBAEJjH,EAAA7F,EAAAC,cAAC8M,EAAA,SAAD,KACIlH,EAAA7F,EAAAC,cAAC+M,EAAA,QACG9Q,GAAG,uBACH+Q,MAAM,mCACNC,SAAS,mCACTC,UAAY3C,EAAQhN,wCACpB8J,SAAW,SAAAwB,GACP2B,EAAW,0CAA2C3B,MAG9DjD,EAAA7F,EAAAC,cAACmN,EAAA,SACGC,SAAW,MACXC,QACIzH,EAAA7F,EAAAC,cAAA,WACM,IADN,0IAQJ4F,EAAA7F,EAAAC,cAACsN,EAAAvN,EAAD,UAwCkB,SAMtCuK,EAAkBxJ,WACdyE,WAAYmB,EAAA3G,EAAUgB,OAAOmJ,WAC7BK,QAAS7D,EAAA3G,EAAUgB,OAAOmJ,WAC1BM,WAAY9D,EAAA3G,EAAU6G,KAAKsD,WAC3BQ,WAAYhE,EAAA3G,EAAUgB,OACtB6J,YAAalE,EAAA3G,EAAUqK,MAGZ,IAAAmD,EAAA,ECrMAvM,EAAA,yBCFf,IAAAuF,GACAiH,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,QAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,WAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,KAIA,SAAAC,EAAAC,GACA,IAAAthB,EAAAuhB,EAAAD,GACA,OAAAve,EAAA/C,GAEA,SAAAuhB,EAAAD,GACA,IAAAthB,EAAAsK,EAAAgX,GACA,KAAAthB,EAAA,IACA,IAAA8H,EAAA,IAAAvG,MAAA,uBAAA+f,EAAA,KAEA,MADAxZ,EAAA0Z,KAAA,mBACA1Z,EAEA,OAAA9H,EAEAqhB,EAAApS,KAAA,WACA,OAAA3P,OAAA2P,KAAA3E,IAEA+W,EAAAI,QAAAF,EACAG,EAAAC,QAAAN,EACAA,EAAArhB,GAAA,0QCzQe4hB,EARK,SAACC,EAASC,GAAV,OAAmB,SAACC,GACpC,IAAMC,EAAS1iB,OAAA2iB,EAAA,UAAA3iB,CAAUyiB,GAASG,YAAa,YAC/CL,EAAQzU,MACJ+U,SAAUC,EAAA,EAAMN,GAChBE,6JCFFK,aACF,SAAAnR,EAAY/L,GAAO,IAAAmd,EAAAC,KAAAC,IAAAD,KAAArR,GAAAuR,IAAAF,KAAA,kBAoED,SAAAvb,GACd,IAAIuD,EACAmY,EACAC,EACAC,EACEC,EAAmBC,EAAA,EAAU,sBAAsBC,OAAOC,WAC1DC,EACFH,EAAA,EAASI,MACTJ,EAAA,EACQR,EAAKa,KACZJ,OACAK,wBAAwBH,EACzB,GAAKJ,EACHQ,EACFP,EAAA,EAASQ,MACTR,EAAA,EACQR,EAAKa,KACZJ,OACAK,wBAAwBC,EACzB,GACJ,GAAKrc,EAAL,CAGI0b,EAAUJ,EAAKiB,cAAcvc,EAAEwc,OAC/BjZ,EAAOvD,EAAEuD,KACToY,EAAaL,EAAKiB,cAAcvc,EAAE2b,YAClCC,EAAiBN,EAAKiB,cAAcvc,EAAEyc,eAG1C,IAAMC,EAAepB,EAAKqB,YAAYZ,OAAOK,wBAAwBQ,MAC/DC,EAAaf,EAAA,EACXR,EAAKa,IAAM,SAClBJ,OACAK,wBAAwBQ,MAEnBE,EADW,IAAOJ,EAAeG,EAAc,IACzBZ,EAAIY,EAAc,IAC9CvB,EAAK/X,KAAKwZ,KAAK,GAAKxZ,GACpB+X,EAAKI,QAAQqB,KAAK,kBAAoBrB,GACtCJ,EAAKK,WAAWoB,KAAK,gBAAkBpB,GACvCL,EAAKM,eAAemB,KAAK,oBAAsBnB,GAC/CN,EAAK0B,UAAY1B,EAAK/X,KAAKwY,OAAOkB,wBAClC3B,EAAK4B,aAAe5B,EAAKI,QAAQK,OAAOkB,wBACxC3B,EAAK6B,gBAAkB7B,EAAKK,WAAWI,OAAOkB,wBAC9C3B,EAAK8B,oBAAsB9B,EAAKM,eAAeG,OAAOkB,wBACtD3B,EAAK+B,eAAiBvB,EAAA,GAASR,EAAK0B,UAAW1B,EAAK4B,aAAc5B,EAAK8B,oBAAqB9B,EAAK6B,kBAEjG,IAGIG,EAHEC,EAAcjC,EAAK+B,eAAiB/B,EAAKkC,SAAW,IAEpDC,EAAUF,EADE,GAIdD,EADAC,EAHc,GAIEjC,EAAKkC,SAAWC,EAEhBnC,EAAKkC,SAGzBlC,EAAKoC,YAAYC,KAAK,QAASL,GAC/BhC,EAAKqB,YAAYgB,KAAK,YAAa,aAAe1B,EAAI,IAAMI,EAAI,KAC5DS,GACAxB,EAAKsC,aAAaD,KAAK,YAAa,iCACpCrC,EAAKoC,YAAYC,KAAK,KAAML,EAAgB,IAC5ChC,EAAK/X,KAAKoa,KAAK,MAAOjB,EAAe,IACrCpB,EAAKI,QAAQiC,KAAK,MAAOjB,EAAe,IACxCpB,EAAKK,WAAWgC,KAAK,MAAOjB,EAAe,IAC3CpB,EAAKM,eAAe+B,KAAK,MAAOjB,EAAe,MAE/CpB,EAAKsC,aAAaD,KAAK,YAAa,gCACpCrC,EAAKoC,YAAYC,KAAK,IAAK,IAC3BrC,EAAK/X,KAAKoa,KAAK,IAAK,IACpBrC,EAAKI,QAAQiC,KAAK,IAAK,IACvBrC,EAAKK,WAAWgC,KAAK,IAAK,IAC1BrC,EAAKM,eAAe+B,KAAK,IAAK,KAGlCrC,EAAKqB,YAAYle,MAAM,UAAW,GAClC6c,EAAKqB,YAAYkB,eA/IFpC,IAAAF,KAAA,iBAkJF,WACbD,EAAKqB,YACJmB,aACAC,MAAM,IACNtf,MAAM,UAAW,GACjBA,MAAM,iBAAkB,UAtJzB8c,KAAKY,IAAMhe,EAAMge,IACjBZ,KAAKyC,yDAGKC,GACV,OAAOC,WAAWD,GAAQE,QAAQ,GAAGC,WACpCC,QAAQ,wBAAyB,oCAIlC9C,KAAKqB,MAAQ,IACbrB,KAAKoB,YAAcb,EAAA,EAAUP,KAAKY,IAAM,SAASmC,OAAO,KACxD/C,KAAKoB,YAAYgB,KAAK,KAAM,0BAA4BpC,KAAKY,IAAIoC,MAAM,IACvEhD,KAAKoB,YAAYgB,KAAK,WAAY,WAClCpC,KAAKoB,YAAYle,MAAM,UAAW,GAClC8c,KAAKoB,YAAYle,MAAM,iBAAkB,QACzC8c,KAAKoB,YAAYgB,KAAK,YAAa,uBACnCpC,KAAKiC,SAAW,IAChBjC,KAAKiD,mBAAqB,GAE1BjD,KAAKqC,aAAerC,KAAKoB,YACxB2B,OAAO,QACPX,KAAK,YAAa,+BAClBA,KAAK,IAAK,GACVA,KAAK,IAAK,GACVA,KAAK,SAAU,IACfA,KAAK,QAAS,IACdA,KAAK,OAAQ,WACdpC,KAAKmC,YAAcnC,KAAKoB,YACvB2B,OAAO,QACPX,KAAK,IAAK,IACVA,KAAK,KAAM,IACXA,KAAK,KAAM,GACXA,KAAK,SAAU,IACfA,KAAK,QAASpC,KAAKiC,UACnBG,KAAK,OAAQ,WACdpC,KAAKhY,KAAOgY,KAAKoB,YAChB2B,OAAO,QACPX,KAAK,OAAQ,SACbA,KAAK,YAAa,IAClBA,KAAK,IAAK,IACVA,KAAK,KAAM,GACXZ,KAAK,iBACNxB,KAAKG,QAAUH,KAAKoB,YACnB2B,OAAO,QACPX,KAAK,IAAK,IACVA,KAAK,IAAK,IACVA,KAAK,YAAa,IAClBA,KAAK,cAAe,QACpBA,KAAK,OAAQ,SACbZ,KAAK,oBACNxB,KAAKI,WAAaJ,KAAKoB,YACtB2B,OAAO,QACPX,KAAK,OAAQ,SACbA,KAAK,YAAa,IAClBA,KAAK,IAAK,IACVA,KAAK,IAAK,IACVZ,KAAK,kBACNxB,KAAKK,eAAiBL,KAAKoB,YAC1B2B,OAAO,QACPX,KAAK,OAAQ,SACbA,KAAK,YAAa,IAClBA,KAAK,IAAK,IACVA,KAAK,IAAK,IACVZ,KAAK,+BA0FR0B,cACF,SAAAC,EAAYvgB,GAAO,IAAAwgB,EAAA,OAAAnD,IAAAD,KAAAmD,IACfC,EAAAC,IAAArD,KAAAsD,IAAAH,GAAAI,KAAAvD,KAAMpd,KACD4gB,KAAOJ,EAAKI,KAAKC,KAAVC,IAAAN,IACZA,EAAKX,KAAOW,EAAKX,KAAKgB,KAAVC,IAAAN,IACZA,EAAKO,OAASP,EAAKO,OAAOF,KAAZC,IAAAN,IACdA,EAAKnmB,OACD2mB,QAAS,MANER,wDAWV,IAAAS,EAAA7D,KACG4D,EAAY5D,KAAK/iB,MAAjB2mB,QACRE,aAAaF,GACb5D,KAAK+D,UACDH,QAASI,WAAW,WAChBH,EAAKL,QACN,sCAKPxD,KAAKyC,sCAOLlC,EAAA,EAAa,IAAMP,KAAKpd,MAAMnF,GAAK,QAAQwmB,SAJxC,IAMC5C,EADIhd,EAAS2b,KAAKpd,MAAdyB,KAGJA,EAAKzE,QAAU,GAEfyhB,EADuBd,EAAA,EAAU,uBAAuBC,OACjCK,wBAAwBQ,MAAQrB,KAAKpd,MAAMC,OAAOM,KAAO6c,KAAKpd,MAAMC,OAAOO,MAElGie,EAAQrB,KAAKpd,MAAMI,WAGvB,IAOIkhB,EAPEC,EAASnE,KAAKpd,MAAMS,YACpBqd,EAAIH,EAAA,IAET6D,YAAa,EAAG/C,IAChBgD,QAAQ,KACHvD,EAAIP,EAAA,IAAiB+D,OAAQH,EAAQ,IAG3CD,EAAQ7f,EAAK0D,IAAI,SAAAtD,GAAC,OAAIA,EAAEuD,OACxB,IAAMuc,EAAmBhE,EAAA,EAAU,OAC7BiE,EAAQjE,EAAA,EAAcG,GAAG+D,WAAWP,GAEpCQ,EAAQnE,EAAA,EACJO,GACToD,MAAM,GACNS,WAAW,SAAAlgB,GAAC,OAAI8f,EAAiB9f,GAAGqe,QAAQ,IAAK,OACjD8B,UAAUvD,EAAO,EAAG,GAEfT,EAAML,EAAA,EACJ,IAAMP,KAAKpd,MAAMnF,IACxBslB,OAAO,OACPX,KAAK,QAASf,EAAQrB,KAAKpd,MAAMC,OAAOM,KAAO6c,KAAKpd,MAAMC,OAAOO,OACjEgf,KAAK,SAAU+B,EAASnE,KAAKpd,MAAMC,OAAOU,OAASyc,KAAKpd,MAAMC,OAAOS,KACrEyf,OAAO,KACPX,KACG,YACA,aACFpC,KAAKpd,MAAMC,OAAOM,KAClB,IACA6c,KAAKpd,MAAMC,OAAOS,IAClB,KAGIuhB,EAAYxgB,EAAK0D,IAAI,SAAAtD,GAAC,OAAIA,EAAEuD,OAC5B8c,EAAU,IAAIhF,GAChBc,IAAK,IAAMZ,KAAKpd,MAAMnF,KAE1BijB,EAAEqE,OAAOF,GACT/D,EAAEiE,QACE,EACAxE,EAAA,EAAOlc,EAAM,SAAAI,GAAC,OAAc,KAAVA,EAAEwc,SAAiB,IAIzCL,EACCmC,OAAO,KACPX,KAAK,QAAS,UACdmB,KAAKmB,GACLM,UAAU,QACV5C,KAAK,SAAU,WACfW,OAAO,QACPX,KAAK,YAAa,eAClBA,KAAK,IAAK,GACVA,KAAK,KAAM,SACXlf,MAAM,cAAe,OACrBA,MAAM,cAAe,QACrBse,KAAK,SACNZ,EACCmC,OAAO,QACPX,KAAK,YAAa,eAClBA,KAAK,IAAK,EAAIpC,KAAKpd,MAAMC,OAAOM,MAChCif,KAAK,IAAK,EAAI+B,EAAS,GACvB/B,KAAK,KAAM,OACXlf,MAAM,cAAe,UACrBse,KAAK,4BAGNZ,EACCmC,OAAO,KACPX,KAAK,QAAS,UACdA,KAAK,YAAa,eAAiB+B,EAAS,KAC5CZ,KAAKiB,GACLQ,UAAU,QACV9hB,MAAM,cAAe,SACrBkf,KAAK,KAAM,UACXA,KAAK,MAAO1B,EAAEuE,YAAc,KAAO,GACnC7C,KAAK,YAAa,eAEnBxB,EAAIoE,UAAU,gBAAgB5C,KAAK,SAAU,eAE7CxB,EAAIoE,UAAU,QACb3gB,KAAKA,GACL6gB,QAAQnC,OAAO,QACfX,KAAK,IAAK,SAAA3d,GAAC,OAAIic,EAAEjc,EAAEuD,QACnBoa,KAAK,QAAS1B,EAAEuE,aAChB7C,KAAK,IAAK,SAAA3d,GAAC,OAAIqc,EAAErc,EAAEwc,SACnB/d,MAAM,OAAQ,iBAnGD,YAoGbkf,KAAK,SAAU,SAAA3d,GAAC,OAAI0f,EAASrD,EAAErc,EAAEwc,SACjCkE,GAAG,YAAa,SAAS1gB,GACtB8b,EAAA,EAAUP,MAAM9c,MAAM,OAAQqd,EAAA,EAtGpB,WAsGkC6E,OAAO,IACnDN,EAAQO,gBAAgB5gB,KAE3B0gB,GAAG,YAAaL,EAAQO,iBACxBF,GAAG,WAAY,WACZ5E,EAAA,EAAUP,MAAM9c,MAAM,OA3GZ,WA4GV4hB,EAAQQ,+DAKZtF,KAAKwD,OAELrhB,OAAOojB,iBAAiB,SAAUvF,KAAK2D,uDAGpB,IACXC,EAAY5D,KAAK/iB,MAAjB2mB,QACRE,aAAaF,GACbzhB,OAAOqjB,oBAAoB,SAAUxF,KAAK2D,qDAI1C3D,KAAKwD,wCAIL,OAAOpc,EAAA7F,EAAAC,cAAA,OAAK/D,GAAKuiB,KAAKpd,MAAMnF,YA7JFuJ,EAAA,WAiKlCkc,EAAoB5gB,WAChB7E,GAAIyK,EAAA3G,EAAUkC,OACdY,KAAM6D,EAAA3G,EAAU4G,MAChBtF,OAAQqF,EAAA3G,EAAUgB,OAClBc,UAAW6E,EAAA3G,EAAU6G,KACrBpF,SAAUkF,EAAA3G,EAAU6G,MAGT,IAAAqd,EAAA1oB,OAAA4F,EAAA,GAAgBugB,uICvUxB,IAAMwC,EAAoB3oB,OAAA4oB,EAAA,EAAA5oB,CAAOsR,EAAA,UAAPtR,CAAH6oB,aCYxBC,GAAe,SAAA3oB,GAAA,IAAA4oB,EAAA5oB,EAAG6oB,oBAAH,IAAAD,EAAkB,EAAlBA,EAAA,OACjB1e,EAAA7F,EAAAC,cAACuM,EAAA,MAAK7K,OAAU8iB,UAAW,sBACvB5e,EAAA7F,EAAAC,cAAC6M,EAAA,WAAUnL,OAAU+iB,cAAe,MAApC,iBAGA7e,EAAA7F,EAAAC,cAAC8M,EAAA,SAAD,KACIlH,EAAA7F,EAAAC,cAAC0kB,EAAA,OACGrkB,aAAa,KACbC,KAAK,MACLoB,OAAU+C,MAAO,yCAfD,SAACkgB,GAAD,OAC5BA,EACCvD,QAAQ,GACRC,WACAC,QAAQ,wBAAyB,KAapBsD,CAAwBL,OAM1CF,GAAavjB,WACTyjB,aAAc7d,EAAA3G,EAAU8kB,QAGb,IAAAC,GAAA,mICtBf,IAAMC,GAAeZ,EAAA,EAAOa,IAAVC,MAIZC,GAAa,SAAAtpB,GACf,IAAMupB,EAAahE,WAAWvlB,GAC9B,OAAOupB,GAAcA,GAAc,EAAIvpB,EAAQ,IAG7CwpB,GAAkB,SAAA1pB,GAAA,IAAA2pB,EAAA3pB,EACpB4pB,kBADoB,IAAAD,EACP,IADOA,EAAAE,EAAA7pB,EAEpB8pB,qBAFoB,IAAAD,EAEJ,aAFIA,EAAAE,EAAA/pB,EAGpBgqB,sBAHoB,IAAAD,EAGH,IAHGA,EAAAE,EAAAjqB,EAIpBkqB,yBAJoB,IAAAD,EAIA,aAJAA,EAAA,OAMpB/f,EAAA7F,EAAAC,cAACuM,EAAA,KAAD,KACI3G,EAAA7F,EAAAC,cAACkkB,EAAD,kCAGAte,EAAA7F,EAAAC,cAAC8M,EAAA,SAAD,KACIlH,EAAA7F,EAAAC,cAAC+kB,GAAD,KACInf,EAAA7F,EAAAC,cAAA,sCACA4F,EAAA7F,EAAAC,cAAA,MAAI0B,OAAU+C,MAAO,sCAArB,wDAGAmB,EAAA7F,EAAAC,cAACmH,GAAA,YAAWzF,OAAUme,MAAO,QACzBja,EAAA7F,EAAAC,cAAC6lB,GAAA,eAAD,KACIjgB,EAAA7F,EAAAC,cAAC8lB,GAAA/lB,EAAD,OAEJ6F,EAAA7F,EAAAC,cAACoH,GAAA,WACGnL,GAAG,cACHN,KAAK,SACLqK,aAAW,cACXpK,MAAQ0pB,EACRje,SAAW,SAACtD,GAAD,OAAOyhB,EAAcN,GAAWnhB,OAE/C6B,EAAA7F,EAAAC,cAAC6lB,GAAA,eAAD,cAGRjgB,EAAA7F,EAAAC,cAAC+kB,IAAarjB,OAAUqkB,WAAY,SAChCngB,EAAA7F,EAAAC,cAAA,mCACA4F,EAAA7F,EAAAC,cAACmH,GAAA,YAAWzF,OAAUme,MAAO,QACzBja,EAAA7F,EAAAC,cAAC6lB,GAAA,eAAD,KACIjgB,EAAA7F,EAAAC,cAAC8lB,GAAA/lB,EAAD,OAEJ6F,EAAA7F,EAAAC,cAACoH,GAAA,WACGnL,GAAG,kBACHN,KAAK,SACLqK,aAAW,kBACXpK,MAAQ8pB,EACRre,SAAW,SAACtD,GAAD,OAAO6hB,EAAkBV,GAAWnhB,OAEnD6B,EAAA7F,EAAAC,cAAC6lB,GAAA,eAAD,iBAOpBT,GAAgBtkB,WACZwkB,WAAY5e,EAAA3G,EAAUkC,OACtBujB,cAAe9e,EAAA3G,EAAU6G,KACzB8e,eAAgBhf,EAAA3G,EAAUkC,OAC1B2jB,kBAAmBlf,EAAA3G,EAAU6G,MAGlB,IAAAof,GAAA,GClDAC,GAtBW,kBACtBrgB,EAAA7F,EAAAC,cAACuM,EAAA,MAAK7K,OAAUihB,OAAQ,SACpB/c,EAAA7F,EAAAC,cAACkkB,EAAD,2BACAte,EAAA7F,EAAAC,cAAC8M,EAAA,SAAD,KACIlH,EAAA7F,EAAAC,cAAA,SACI4F,EAAA7F,EAAAC,cAAA,uCADJ,KAEI4F,EAAA7F,EAAAC,cAAA,qHAIJ4F,EAAA7F,EAAAC,cAAA,SACI4F,EAAA7F,EAAAC,cAAA,2CADJ,KAEI4F,EAAA7F,EAAAC,cAAA,sFAEJ4F,EAAA7F,EAAAC,cAAA,SACI4F,EAAA7F,EAAAC,cAAA,oBADJ,KAEI4F,EAAA7F,EAAAC,cAAA,qiCCDhB,IAAMkmB,GAAiB/B,EAAA,EAAOa,IAAVmB,MAoBdC,GAAyBjC,EAAA,EAAOkC,GAAVC,MAItBC,GAAiBpC,EAAA,EAAOa,IAAVwB,MAMdC,GAAYtC,EAAA,EAAOa,IAAV0B,MAmBTC,GAAexC,EAAA,EAAOa,IAAV4B,MAILC,GAAsB,SAAAnrB,GAAA,IAAGmH,EAAHnH,EAAGmH,KAAH,OAC/B+C,EAAA7F,EAAAC,cAAC8mB,GAAA,SACG9gB,aAAW,0BACXoH,SAAS,OACT2Z,YACInhB,EAAA7F,EAAAC,cAACumB,GAAD,KACI3gB,EAAA7F,EAAAC,cAAA,SACI4F,EAAA7F,EAAAC,cAAA,gCADJ,IACiC,IAC3B6C,EAAKmkB,yBAAyB5F,QAAQ,IAE5Cxb,EAAA7F,EAAAC,cAAA,SACI4F,EAAA7F,EAAAC,cAAA,+CADJ,IACgD,IAC1C6C,EAAKokB,iBAEXrhB,EAAA7F,EAAAC,cAAA,SACI4F,EAAA7F,EAAAC,cAAA,0CADJ,IAC2C,IACrC6C,EAAKqkB,uBAKnBthB,EAAA7F,EAAAC,cAACmnB,GAAApnB,EAAD,QAIR8mB,GAAoB/lB,WAChB+B,KAAM6D,EAAA3G,EAAUgB,QAGpB,IAAMqmB,GAAe,SAAAzqB,GAAA,IAAA0qB,EAAA1qB,EACjBkG,YADiB,IAAAwkB,OAAAC,EAAA3qB,EAEjB4qB,sBAFiB,IAAAD,EAEA,aAFAA,EAAAE,EAAA7qB,EAGjB8qB,6BAHiB,IAAAD,EAGO,aAHPA,EAAA,OAKjB5hB,EAAA7F,EAAAC,cAACuM,EAAA,MAAK7K,OAAUgmB,SAAU,OAAQC,KAAM,SAAYC,UAAU,iBAC1DhiB,EAAA7F,EAAAC,cAAC8M,EAAA,SAAD,KACIlH,EAAA7F,EAAAC,cAAA,6EACE6C,EAAK0D,IAAI,SAAC1D,GAAD,OACP+C,EAAA7F,EAAAC,cAAA,OAAKlD,IAAM+F,EAAK5G,IACZ2J,EAAA7F,EAAAC,cAAC6nB,GAAA,SAAQxa,QAAU,mDACfzH,EAAA7F,EAAAC,cAAC6L,GAAA,QACGnK,OAAUmhB,QAAS,eACnBiF,UAAU,IACVpnB,QAAU,kBAAM+mB,EAAsB5kB,EAAK5G,KAC3CgE,QAAQ,QAEN4C,EAAK2D,OAGfZ,EAAA7F,EAAAC,cAACkmB,GAAD,KACItgB,EAAA7F,EAAAC,cAAC2mB,IAAa7pB,IAAM+F,EAAK5G,IACrB2J,EAAA7F,EAAAC,cAACmH,GAAA,WAAD,KACIvB,EAAA7F,EAAAC,cAACoH,GAAA,WACGnL,GAAK4G,EAAK5G,GACVN,KAAK,SACLqK,aAAW,oBACXpK,MAAQL,OAAAwsB,EAAA,EAAAxsB,CAAqBsH,EAAKmlB,YAClC3gB,SAAW,SAAA4gB,GAAO,OACdV,EAAehsB,OAAAwsB,EAAA,EAAAxsB,CAAqB0sB,GAAUplB,EAAK5G,OAG3D2J,EAAA7F,EAAAC,cAAC6lB,GAAA,eAAD,cAGRjgB,EAAA7F,EAAAC,cAAComB,GAAD,UACgBvjB,EAAKqlB,uBADrB,cAGAtiB,EAAA7F,EAAAC,cAACymB,GAAD,KACI7gB,EAAA7F,EAAAC,cAAC6mB,IAAoBhkB,KAAOA,MAGpC+C,EAAA7F,EAAAC,cAAA,KAAG0B,OAAU+C,MAAO,YAApB,IACO5B,EAAK4c,MAAM2B,QAAQ,UAQ9CgG,GAAatmB,WACT+B,KAAM6D,EAAA3G,EAAU4G,MAChB4gB,eAAgB7gB,EAAA3G,EAAU6G,KAC1B6gB,sBAAuB/gB,EAAA3G,EAAU6G,KACjCuhB,cAAezhB,EAAA3G,EAAU4G,MACzByhB,iBAAkB1hB,EAAA3G,EAAU6G,MAGjB,IAAAyhB,GAAA,iZCrHf,IAAMC,GAAUnE,EAAA,EAAOa,IAAVuD,MAMPC,GAAcrE,EAAA,EAAOa,IAAVyD,MAOXC,GAAevE,EAAA,EAAOa,IAAV2D,MAcZC,GAAkB,SAAC/lB,EAAM6iB,EAAgBJ,GAAvB,OAAsCziB,EAAK0D,IAAI,SAAAyF,GACnE,IAAM4S,EAAarjB,OAAAwsB,EAAA,EAAAxsB,CAAsByQ,EAAGgc,YAAchc,EAAGkc,uBAAyB/G,WAAWmE,GAC3F5F,EAAgBnkB,OAAAwsB,EAAA,EAAAxsB,CAAsByQ,EAAGgb,0BAA4B7F,WAAWuE,GAChFjG,EAAQlkB,OAAAwsB,EAAA,EAAAxsB,CAAemkB,EAAed,GAE5C,OAAAiK,OAAY7c,GAAIyT,QAAOb,aAAYc,qBAKjCoJ,GAAuB,SAAAnsB,GAAiB,IAAdmhB,EAAcnhB,EAAdmhB,QACtBiL,EAAgBlL,EAAYC,EAAS,eADD5a,EAEJ3H,OAAAiK,EAAA,SAAAjK,CAAS,MAFL6H,EAAAqC,IAAAvC,EAAA,GAElCoiB,EAFkCliB,EAAA,GAEtBoiB,EAFsBpiB,EAAA,GAAAiI,EAGI9P,OAAAiK,EAAA,SAAAjK,CAAS,MAHb+P,EAAA7F,IAAA4F,EAAA,GAGlCqa,EAHkCpa,EAAA,GAGlBsa,EAHkBta,EAAA,GAAA0d,EAKNztB,OAAA0tB,EAAA,EAAA1tB,CAAO,MALD2tB,EAAAzjB,IAAAujB,EAAA,GAKlCG,EALkCD,EAAA,GAKvBE,EALuBF,EAAA,GAAAG,EAMV9tB,OAAA0tB,EAAA,EAAA1tB,KANU+tB,EAAA7jB,IAAA4jB,EAAA,GAMlC9gB,EANkC+gB,EAAA,GAMzBC,EANyBD,EAAA,GAAAE,EAOFjuB,OAAA0tB,EAAA,EAAA1tB,IAEpC,SAACsH,GAAD,OAAU+lB,GA3BH,SAAAltB,GAAA,IAAA+tB,EAAA/tB,EAAGguB,MAAH,gBAAAD,QAAyBljB,IAAI,SAAAyF,GAAE,OAAA6c,OACvC7c,GACHyT,MAAO,EACPuI,WAAY,KACZpJ,WAAY,EACZc,cAAe,MAsBeiK,CAAO9mB,GAAO6iB,EAAgBJ,KATlBsE,EAAAnkB,IAAA+jB,EAAA,GAOlCK,EAPkCD,EAAA,GAO7BE,EAP6BF,EAAA,GAOnBG,EAPmBH,EAAA,GAAAI,EAetCzuB,OAAAH,EAAA,EAAAG,CAAe0uB,EAAA,EAASnlB,eAFxBpH,EAbsCssB,EAatCtsB,YACAO,EAdsC+rB,EActC/rB,eAQEspB,EAAiB,SAAC2C,EAASjuB,GAC7B,IAAMkuB,EAAcN,EAAIhnB,KAAK0D,IAAI,SAAAyF,GAC7B,OAAIA,EAAG/P,KAAOA,GACV+P,EAAGgc,WAAakC,EACKtB,IAAkB5c,GAAM0Z,EAAgBJ,GAAY,IAGlEtZ,IAIf+d,EAAaI,IAGjB5uB,OAAAiK,EAAA,UAAAjK,CAAU,WACN6tB,EAAa7tB,OAAA6uB,EAAA,EAAA7uB,IACbguB,EAAWhuB,OAAA6uB,EAAA,EAAA7uB,EAAiB8uB,OAAQ3sB,UAMxCnC,OAAAiK,EAAA,UAAAjK,CAAU,WACNwuB,EACInB,GAAgBiB,EAAIhnB,KAAM6iB,EAAgBJ,MAE7CI,EAAgBJ,IAKrB/pB,OAAAiK,EAAA,UAAAjK,CAAU,WACNuuB,EAASvuB,OAAA6uB,EAAA,EAAA7uB,EAAU8uB,OAAQ3sB,OAC1BA,IAML,IAAM+pB,EAAwB,SAAA6C,GAK1BvB,GAHI9rB,iBAAkB,eAClBI,aAAeitB,MAuDvB,OACI1kB,EAAA7F,EAAAC,cAAC4F,EAAA7F,EAAMK,SAAP,KACIwF,EAAA7F,EAAAC,cAACuqB,EAAA,YAAW7oB,OAAUimB,KAAM,MACxB/hB,EAAA7F,EAAAC,cAACuqB,EAAA,iBAAgBC,MAAQ,2BAE3BrB,EAAUtpB,OACR+F,EAAA7F,EAAAC,cAACyqB,EAAA,KAAD,KACI7kB,EAAA7F,EAAAC,cAAC0qB,EAAA,GACG5qB,eAAiBqpB,EAAUtpB,SAIrCspB,EAAUvmB,WACRgD,EAAA7F,EAAAC,cAAC4F,EAAA7F,EAAMK,SAAP,KACIwF,EAAA7F,EAAAC,cAACyqB,EAAA,MAAK/oB,OAAU+iB,cAAe,MAC3B7e,EAAA7F,EAAAC,cAACuM,EAAA,KAAD,KACI3G,EAAA7F,EAAAC,cAAC8M,EAAA,SAAD,KACIlH,EAAA7F,EAAAC,cAACyL,EAAA,GACGlG,WAAagD,EAAQ1F,KACrB0H,QAAU7M,EACV8M,WAAavM,OAK7B2H,EAAA7F,EAAAC,cAACsoB,IAAQV,UAAU,sBA1E/BhiB,EAAA7F,EAAAC,cAACwoB,GAAD,KACI5iB,EAAA7F,EAAAC,cAACyqB,EAAA,MAAK/oB,OAAU+iB,cAAe,MAC3B7e,EAAA7F,EAAAC,cAACuM,EAAA,KAAD,KACI3G,EAAA7F,EAAAC,cAACkkB,EAAD,2BACAte,EAAA7F,EAAAC,cAAC8M,EAAA,SAAD,KACM+c,EAAIlnB,WAAaiD,EAAA7F,EAAAC,cAAC2qB,EAAA,EAAD,MACjBd,EAAIhqB,OAAS+F,EAAA7F,EAAAC,cAACsE,EAAA,GAAcC,QAAUslB,EAAIhqB,MAAMA,QAChDgqB,EAAIjnB,WAAainB,EAAIhnB,KAAKzE,QAAU,GAAKwH,EAAA7F,EAAAC,cAAC4qB,EAAA,EAAD,MACzCf,EAAIjnB,WAAainB,EAAIhnB,KAAKzE,OAAS,GACjCwH,EAAA7F,EAAAC,cAAC4F,EAAA7F,EAAMK,SAAP,KACIwF,EAAA7F,EAAAC,cAACikB,GACG5iB,QAAWS,IAAK,GAAIF,MAAO,GAAIG,OAAQ,GAAIJ,KAAM,IACjD1F,GAAG,oBACH4G,KAAOgnB,EAAIhnB,OAEf+C,EAAA7F,EAAAC,cAAA,KAAG0B,OAAUmpB,UAAW,WAAxB,iBAMpBjlB,EAAA7F,EAAAC,cAACyqB,EAAA,KAAD,KACI7kB,EAAA7F,EAAAC,cAACimB,GAAD,QAMRrgB,EAAA7F,EAAAC,cAAC0oB,GAAD,KACI9iB,EAAA7F,EAAAC,cAACyqB,EAAA,MAAK/oB,OAAU+iB,cAAe,IAAKqG,YAAa,MAC7CllB,EAAA7F,EAAAC,cAAC8kB,IAAaP,aAtGF,SAAA1hB,GAAI,OAAIA,EAAKmG,OAAO,SAAC+hB,EAAKC,GAAN,OAAeD,EAAMC,EAAKvL,OAAO,GAsGpCwL,CAAoBpB,EAAIhnB,SAEzD+C,EAAA7F,EAAAC,cAACyqB,EAAA,MAAK/oB,OAAUwpB,QAAS,OAAQC,cAAe,SAAUxD,KAAM,QAASmD,YAAa,MAClFllB,EAAA7F,EAAAC,cAACgmB,IACGV,WAAaA,EACbE,cAAgBA,EAChBE,eAAiBA,EACjBE,kBAAoBA,IAExBhgB,EAAA7F,EAAAC,cAACqoB,IACGZ,sBAAwBA,EACxB5kB,KAAOgnB,EAAIhnB,KACX0kB,eAAiBA,EACjB6D,kBAAoBvB,EAAIhnB,aAyC5CimB,GAAqBhoB,WACjBgd,QAASpX,EAAA3G,EAAUgB,QAGRC,EAAA,kZCpBAqqB,aA3NX,SAAAle,EAAYme,GAAM,IAAA/M,EAAAC,KAAAC,IAAAD,KAAArR,GAAAuR,IAAAF,KAAA,kBAiHA,SAACvb,GACf,IAAIsoB,EAAU,EACVC,EAAO,EACP7G,EAAQ,EACNzF,EACFH,EAAA,EAASI,MACTJ,EAAA,EACQR,EAAKa,KACZJ,OACAK,wBAAwBH,EACzB,GACEI,EACFP,EAAA,EAASQ,MACTR,EAAA,EACQR,EAAKa,KACZJ,OACAK,wBAAwBC,EACzB,GACEmM,EAAoB1M,EAAA,EAAc,SACxC,GAAK9b,EAAL,CAIA,IAAM0c,EAAepB,EAAKqB,YAAYZ,OAAOK,wBAAwBQ,MAC/DC,EAAaf,EAAA,EACXR,EAAKa,IAAM,SAClBJ,OACAK,wBAAwBQ,MAEnBE,EADW,IAAOJ,EAAeG,EAAc,IACzBZ,EAAIY,EAAc,IAC1C7c,IACAsoB,EAAUtoB,EAAEyoB,KAAO,EACnBF,EAAOvoB,EAAE0oB,MAAQ,EACjBhH,EAAQ1hB,EAAE2oB,OAAS,EACnBrN,EAAKsN,KAAK7L,KAAKyL,EAAkBxoB,EAAE6oB,MAAQ,QAG3C7oB,GAAKA,EAAEJ,OACP0oB,EAAUtoB,EAAEJ,KAAK6oB,KAAO,EACxBF,EAAOvoB,EAAEJ,KAAK8oB,MAAQ,EACtBhH,EAAQ1hB,EAAEJ,KAAK+oB,OAAS,EACxBrN,EAAKsN,KAAK7L,KAAKyL,EAAkBxoB,EAAEJ,KAAKipB,MAAQ,QAGpDvN,EAAKwN,KAAK/L,KAAU2E,EAAQ,SAC5BpG,EAAKyN,UAAYzN,EAAKwN,KAAK/M,OAAOkB,wBAClC3B,EAAK0N,OAAOjM,KAAK,GAAKwL,GACtBjN,EAAK2N,WAAWlM,KAAK,GAAKuL,GAC1BhN,EAAK4N,iBAAmB5N,EAAK2N,WAAWlN,OAAOkB,wBAC/C3B,EAAK6N,cAAgB7N,EAAK0N,OAAOjN,OAAOkB,wBAExC,IAGIK,EAHEC,EAAcjC,EAAKyN,UAAYzN,EAAKkC,SAAW,IAE/CC,EAAUF,EADE,GAIdD,EADAC,EAHc,GAIEjC,EAAKkC,SAAWC,EAEhBnC,EAAKkC,SAGzBlC,EAAKoC,YAAYC,KAAK,QAASL,GAC/BhC,EAAKqB,YAAYgB,KAAK,YAAa,aAAe1B,EAAI,IAAMI,EAAI,KAC5DS,GACAxB,EAAKsC,aAAaD,KAAK,YAAa,gCACpCrC,EAAKoC,YAAYC,KAAK,KAAML,EAAgB,IAC5ChC,EAAK8N,cAAczL,KAAK,MAAOL,GAC/BhC,EAAK+N,WAAW1L,KAAK,MAAOL,GAC5BhC,EAAKgO,WAAW3L,KAAK,KAAML,EAAgB,GAC3ChC,EAAKiO,YAAY5L,KAAK,KAAML,EAAgB,GAC5ChC,EAAKkO,YAAY7L,KAAK,IAAsB,GAAhBL,GAC5BhC,EAAKmO,SAAS9L,KAAK,IAAsB,GAAhBL,GACzBhC,EAAK2N,WAAWtL,KAAK,KAAMrC,EAAK4N,iBAAmB,GAAK,IACxD5N,EAAK0N,OAAOrL,KAAK,KAAMrC,EAAK6N,cAAgB,GAAK,IACjD7N,EAAKsN,KAAKjL,KAAK,KAAML,EAAgB,GACrChC,EAAKwN,KAAKnL,KAAK,KAAMrC,EAAKyN,UAAY,EAAI,GAC1CzN,EAAKoO,UAAU/L,KAAK,KAAML,KAE1BhC,EAAKsC,aAAaD,KAAK,YAAa,+BACpCrC,EAAKoC,YAAYC,KAAK,IAAK,IAC3BrC,EAAK8N,cAAczL,KAAK,KAAM,IAC9BrC,EAAK+N,WAAW1L,KAAK,KAAM,IAC3BrC,EAAKgO,WAAW3L,KAAK,IAAK,IAC1BrC,EAAKiO,YAAY5L,KAAK,IAAK,IAC3BrC,EAAKkO,YAAY7L,KAAK,IAAK,IAC3BrC,EAAKmO,SAAS9L,KAAK,IAAK,IACxBrC,EAAK2N,WAAWtL,KAAK,IAAML,EAAgBhC,EAAK4N,kBAChD5N,EAAK0N,OAAOrL,KAAK,IAAML,EAAgBhC,EAAK6N,eAC5C7N,EAAKsN,KAAKjL,KAAK,IAAK,IACpBrC,EAAKwN,KAAKnL,KAAK,IAAML,GACrBhC,EAAKoO,UAAU/L,KAAK,IAAK,KAG7BrC,EAAKqB,YAAYle,MAAM,UAAW,GAClC6c,EAAKqB,YAAYkB,eA/MHpC,IAAAF,KAAA,iBAkND,WACbD,EAAKqB,YACJmB,aACAC,MAAM,IACNtf,MAAM,UAAW,GACjBA,MAAM,iBAAkB,UAtNzB8c,KAAKY,IAAMkM,EAAKlM,IAChBZ,KAAKoO,OAAStB,EAAKsB,OACnBpO,KAAKyC,kDAILzC,KAAKoB,YAAcb,EAAA,EAAUP,KAAKY,IAAM,SAASmC,OAAO,KACxD/C,KAAKoB,YAAYgB,KAAK,KAAM,0BAA4BpC,KAAKY,IAAIoC,MAAM,IACvEhD,KAAKoB,YAAYgB,KAAK,WAAY,WAClCpC,KAAKoB,YAAYle,MAAM,UAAW,GAClC8c,KAAKoB,YAAYle,MAAM,iBAAkB,QACzC8c,KAAKoB,YAAYgB,KAAK,YAAa,uBACnCpC,KAAKiC,SAAW,IAChBjC,KAAKiD,mBAAqB,GAE1BjD,KAAKqC,aAAerC,KAAKoB,YACxB2B,OAAO,QACPX,KAAK,YAAa,iCAClBA,KAAK,IAAK,GACVA,KAAK,IAAK,GACVA,KAAK,SAAU,IACfA,KAAK,QAAS,IACdA,KAAK,OAAQ,WACdpC,KAAKmC,YAAcnC,KAAKoB,YACvB2B,OAAO,QACPX,KAAK,IAAK,IACVA,KAAK,KAAM,IACXA,KAAK,KAAM,GACXA,KAAK,SAAU,KACfA,KAAK,QAASpC,KAAKiC,UACnBG,KAAK,OAAQ,WACdpC,KAAK6N,cAAgB7N,KAAKoB,YACzB2B,OAAO,UACPX,KAAK,KAAM,IACXA,KAAK,KAAM,GACXA,KAAK,IAAK,GACVA,KAAK,SAAU,SACfA,KAAK,OAAQ,SACdpC,KAAK8N,WAAa9N,KAAKoB,YACtB2B,OAAO,UACPX,KAAK,KAAM,IACXA,KAAK,KAAM,IACXA,KAAK,IAAK,GACVA,KAAK,SAAU,SACfA,KAAK,OAAQ,SACdpC,KAAKiO,YAAcjO,KAAKoB,YACvB2B,OAAO,QACPX,KAAK,IAAK,IACVA,KAAK,IAAK,GACVA,KAAK,YAAa,IAClBA,KAAK,OAAQ,SACbZ,KAAK,cACNxB,KAAKkO,SAAWlO,KAAKoB,YACpB2B,OAAO,QACPX,KAAK,IAAK,IACVA,KAAK,IAAK,IACVA,KAAK,YAAa,IAClBA,KAAK,OAAQ,SACbZ,KAAK,UACNxB,KAAKgO,YAAchO,KAAKoB,YACvB2B,OAAO,QACPX,KAAK,QAAS,aACdA,KAAK,OAAQpC,KAAKoO,OAAO,IACzBhM,KAAK,IAAK,IACVA,KAAK,IAAK,GACVZ,KAAK,KACNxB,KAAK+N,WAAa/N,KAAKoB,YACtB2B,OAAO,QACPX,KAAK,QAAS,aACdA,KAAK,OAAQpC,KAAKoO,OAAO,IACzBhM,KAAK,IAAK,IACVA,KAAK,IAAK,IACVZ,KAAK,KACNxB,KAAKuN,KAAOvN,KAAKoB,YAChB2B,OAAO,QACPX,KAAK,OAAQ,SACbA,KAAK,IAAK,KACVA,KAAK,KAAM,IACXA,KAAK,YAAa,IAClBA,KAAK,cAAe,OACpBZ,KAAK,WACNxB,KAAK0N,WAAa1N,KAAKoB,YACtB2B,OAAO,QACPX,KAAK,OAAQ,SACbA,KAAK,YAAa,IAClBA,KAAK,IAAK,KACVA,KAAK,IAAK,GACVZ,KAAK,KACNxB,KAAKyN,OAASzN,KAAKoB,YAClB2B,OAAO,QACPX,KAAK,OAAQ,SACbA,KAAK,YAAa,IAClBA,KAAK,IAAK,KACVA,KAAK,IAAK,IACVZ,KAAK,KACNxB,KAAKqN,KAAOrN,KAAKoB,YAChB2B,OAAO,QACPX,KAAK,OAAQ,SACbA,KAAK,SAAU,SACfA,KAAK,IAAK,IACVA,KAAK,KAAM,IACXA,KAAK,YAAa,IAClBZ,KAAK,SACNxB,KAAKmO,UAAYnO,KAAKoB,YACrB2B,OAAO,QACPX,KAAK,OAAQ,SACbA,KAAK,IAAK,IACVA,KAAK,IAAK,IACVA,KAAK,YAAa,IAClBZ,KAAK,qDCpGR6M,cACF,SAAAC,EAAY1rB,GAAO,IAAAmd,EAAA,OAAAE,IAAAD,KAAAsO,IACfvO,EAAAsD,IAAArD,KAAAsD,IAAAgL,GAAA/K,KAAAvD,KAAMpd,KACD6f,KAAO1C,EAAK0C,KAAKgB,KAAVC,IAAA3D,IACZA,EAAKyD,KAAOzD,EAAKyD,KAAKC,KAAVC,IAAA3D,IACZA,EAAK4D,OAAS5D,EAAK4D,OAAOF,KAAZC,IAAA3D,IACdA,EAAKkJ,sBAAwBlJ,EAAKkJ,sBAAsBxF,KAA3BC,IAAA3D,IAC7BA,EAAK9iB,OACDsxB,iBACA3K,QAAS,MARE7D,wEAY4B,IAATsN,EAASnwB,EAAvBmH,KAAQipB,KACpBpnB,EAAgB2Z,EAAA,EAAhB3Z,YACFsoB,EAAgBzxB,OAAAwsB,EAAA,EAAAxsB,CAAWswB,GAC3BoB,GACF5wB,WAAY2wB,EACZ1wB,SAAU0wB,EACV/vB,iBAAkB,SAClBD,QAAU,SAAU,eAElBihB,EAAS1iB,OAAA2iB,EAAA,UAAA3iB,CAAU0xB,GAAsB9O,YAAa,YAC5DK,KAAKpd,MAAM0c,QAAQzU,MACf+U,SAAU1Z,EACVuZ,4CAIC,IAAA2D,EAAApD,KACG4D,EAAY5D,KAAK/iB,MAAjB2mB,QACRE,aAAaF,GACb5D,KAAK+D,UACDH,QAASI,WAAW,WAAQZ,EAAKI,QAAW,sCAKhDxD,KAAKyC,sCAMLlC,EAAA,EAAa,IAAMP,KAAKpd,MAAMnF,GAAK,QAAQwmB,SAC3C,IAyEIC,EAzEEwK,EAAYnO,EAAA,EAAa,YAH5BoO,EAIoC3O,KAAKpd,MAAhCgsB,EAJTD,EAIGtqB,KAAuBjH,EAJ1BuxB,EAI0BvxB,MACvBiH,EAAOuqB,EAAgBpkB,OAAO,SAACqkB,EAAD1wB,GAAgD,IAAlC2wB,EAAkC3wB,EAAlC2wB,QAASpB,EAAyBvvB,EAAzBuvB,WAAYD,EAAatvB,EAAbsvB,OAC/DH,EAAOoB,EAAUI,IAAY,IAAIC,KACjC7B,GAAOQ,GAAc,EACrBP,GAAQM,GAAU,EAClBL,GAASM,EAAaD,GAAU,EACpC,OAAOoB,EAAUtjB,QAAS+hB,OAAMJ,MAAKC,OAAMC,eAEzC/L,EAAQrB,KAAKpd,MAAMI,WACnBmhB,EAASnE,KAAKpd,MAAMS,YACpBqd,EAAIH,EAAA,IAET6D,YAAa,EAAG/C,IAChBgD,QAAQ,KACHvD,EAAIP,EAAA,IAAiB+D,OAAQH,EAAQ,IAErCvD,EAAML,EAAA,EACJ,IAAMP,KAAKpd,MAAMnF,IACxBslB,OAAO,OACPX,KAAK,QAASf,EAAQrB,KAAKpd,MAAMC,OAAOM,KAAO6c,KAAKpd,MAAMC,OAAOO,OACjEgf,KAAK,SAAU+B,EAASnE,KAAKpd,MAAMC,OAAOS,IAAM0c,KAAKpd,MAAMC,OAAOU,QAClEwf,OAAO,KACPX,KACG,YACA,aACIpC,KAAKpd,MAAMC,OAAOM,KAClB,IACA6c,KAAKpd,MAAMC,OAAOS,IAClB,KAGJ8qB,EAAS7N,EAAA,GAAkB,UAAW,YAEpCyO,EAAa,IAAInC,GACnBjM,IAAK,IAAMZ,KAAKpd,MAAMnF,GACtB2wB,WAWEa,EANQ1O,EAAA,IAEb7T,MALgB,OAAQ,QAMxBwiB,MAAM3O,EAAA,GACNhhB,OAAOghB,EAAA,EAEO4O,CAAM9qB,GAErBqc,EAAEqE,OAAOkK,EAAO,GAAGlnB,IAAI,SAAAtD,GAAC,OAAIA,EAAEJ,KAAKipB,QACnCxM,EAAEiE,QAAS,EAAGxE,EAAA,EAAO0O,EAAOA,EAAOrvB,OAAS,GAAI,SAAA6E,GAAC,OAAW,KAAPA,EAAE,MAAc,IAErEmc,EACCmC,OAAO,KACPX,KAAK,QAAS,UACdmB,KACGhD,EAAA,EACUO,GACT8D,UAAUvD,EAAO,EAAG,IAExB2D,UAAU,QACV5C,KAAK,SAAU,WAChBxB,EAAIoE,UAAU,sBAAsB5C,KAAK,KAAM,GAE/CxB,EACCmC,OAAO,QACPX,KAAK,YAAa,eAClBA,KAAK,IAAK,EAAIpC,KAAKpd,MAAMC,OAAOM,MAChCif,KAAK,IAAK,EAAI+B,EAAS,GACvB/B,KAAK,KAAM,OACXlf,MAAM,cAAe,UACrBse,KAAK,4BAGN,IAAM4N,EAAWC,KAAKC,MAAMjrB,EAAKzE,QAAUxC,EAAQ,IACnD8mB,EAAQ7f,EAAK0D,IAAI,SAAAtD,GAAC,OAAIA,EAAE6oB,OACV,KAAVlwB,IACA8mB,EAAQ7f,EAAK0D,IAAI,SAACtD,EAAG6F,GAAJ,OACbA,EAAI8kB,GAAa,EAAI3qB,EAAE6oB,UAAOztB,IAAWwJ,OAAO,SAAAc,GAAI,OAAIA,KAGhEyW,EACCmC,OAAO,KACPX,KAAK,QAAS,UACdA,KAAK,YAAa,eAAiB+B,EAAS,KAC5CZ,KACGhD,EAAA,EACYG,GACX+D,WAAWP,GACXS,WAAWpE,EAAA,EAAc,aAE7ByE,UAAU,QACV5C,KAAK,SAAU,WAChBxB,EAAIoE,UAAU,sBACb5C,KAAK,IAAK,IAGXxB,EACCmC,OAAO,QACPX,KACG,YACA,aACIf,EAAQ,EACR,MACC8C,EAASnE,KAAKpd,MAAMC,OAAOS,IAAM,IAClC,KAEPJ,MAAM,cAAe,UACrBse,KAAK,QAEN,IAAM+N,EAAQ3O,EACboE,UAAU,SACV3gB,KAAK4qB,GACL/J,QACAnC,OAAO,KACPX,KAAK,QAAS,SACdlf,MAAM,OAAQ,SAACssB,EAAIllB,GAAL,OAAW8jB,EAAO9jB,KACjCilB,EACCvK,UAAU,QACV3gB,KAAK,SAAAI,GAAC,OAAIA,IACVygB,QACAnC,OAAO,QACPX,KAAK,IAAK,SAAA3d,GAAC,OAAIic,EAAEjc,EAAEJ,KAAKipB,QACxBlL,KAAK,IAAK,SAAA3d,GAAC,OAAIqc,EAAErc,EAAE,MACnB2d,KAAK,SAAU,GACfA,KAAK,QAAS1B,EAAEuE,YAAc,GAC9B1C,aACAkN,SAAS,KACTC,KAAKnP,EAAA,GACL6B,KAAK,IAAK,SAAA3d,GAAC,OAAIqc,EAAErc,EAAE,MACnB2d,KAAK,SAAU,SAAA3d,GAAC,OAAIqc,EAAErc,EAAE,IAAMqc,EAAErc,EAAE,MACnC8qB,EACCvK,UAAU,QACVG,GAAG,YAAa6J,EAAW3J,iBAC3BF,GAAG,YAAa6J,EAAW3J,iBAC3BF,GAAG,WAAY6J,EAAW1J,gBAC1BH,GAAG,QAASnF,KAAKiJ,mEAIlBjJ,KAAKwD,OAELrhB,OAAOojB,iBAAiB,SAAUvF,KAAK2D,mDAGxBgM,GACXA,EAAUvyB,QAAU4iB,KAAKpd,MAAMxF,OAC/B4iB,KAAKwD,sDAIU,IACXI,EAAY5D,KAAK/iB,MAAjB2mB,QACRE,aAAaF,GACbzhB,OAAOqjB,oBAAoB,SAAUxF,KAAK2D,yCAI1C,OAAOvc,EAAA7F,EAAAC,cAAA,OAAK/D,GAAKuiB,KAAKpd,MAAMnF,YA3MbuJ,EAAA,WA+MvBqnB,EAAS/rB,WACL7E,GAAIyK,EAAA3G,EAAUkC,OACdY,KAAM6D,EAAA3G,EAAU4G,MAChB/K,MAAO8K,EAAA3G,EAAU8kB,OACjBxjB,OAAQqF,EAAA3G,EAAUgB,OAClBc,UAAW6E,EAAA3G,EAAU6G,KACrBpF,SAAUkF,EAAA3G,EAAU6G,KACpBkX,QAASpX,EAAA3G,EAAUgB,QAGR,IAAAqtB,EAAA7yB,OAAA4F,EAAA,GAAgB5F,OAAA8yB,EAAA,EAAA9yB,CAAWsxB,IC1NpCyB,cACF,SAAAC,EAAYntB,GAAO,IAAAmd,EAAA,OAAAE,IAAAD,KAAA+P,IACfhQ,EAAAsD,IAAArD,KAAAsD,IAAAyM,GAAAxM,KAAAvD,KAAMpd,KACD4gB,KAAOzD,EAAKyD,KAAKC,KAAVC,IAAA3D,IACZA,EAAK0C,KAAO1C,EAAK0C,KAAKgB,KAAVC,IAAA3D,IACZA,EAAK4D,OAAS5D,EAAK4D,OAAOF,KAAZC,IAAA3D,IACdA,EAAKiQ,cAAgBjQ,EAAKiQ,cAAcvM,KAAnBC,IAAA3D,IACrBA,EAAKkJ,sBAAwBlJ,EAAKkJ,sBAAsBxF,KAA3BC,IAAA3D,IAC7BA,EAAK9iB,OACDsxB,iBACA3K,QAAS,MATE7D,wEAamB,IAARsN,EAAQnwB,EAAdowB,KACZpnB,EAAgB2Z,EAAA,EAAhB3Z,YACFsoB,EAAgBzxB,OAAAwsB,EAAA,EAAAxsB,CAAWswB,GAE3BoB,GACF5wB,WAAY2wB,EACZ1wB,SAAU0wB,EACV/vB,iBAAkB,SAClBD,QAAU,SAAU,cACpBI,YANkBohB,KAAKpd,MAAnBqtB,YASFxQ,EAAS1iB,OAAA2iB,EAAA,UAAA3iB,CAAU0xB,GAAsB9O,YAAa,YAC5DK,KAAKpd,MAAM0c,QAAQzU,MACf+U,SAAU1Z,EACVuZ,4CAIC,IAAA2D,EAAApD,KACG4D,EAAY5D,KAAK/iB,MAAjB2mB,QACRE,aAAaF,GACb5D,KAAK+D,UACDH,QAASI,WAAW,WAAQZ,EAAKI,QAAW,8CAIrC,IACHpmB,EAAU4iB,KAAKpd,MAAfxF,MACR,OAAIA,EAAQ,GACAA,EAAQ,EAETA,0CAIX4iB,KAAKwD,sCAGLxD,KAAKyC,sCAKLlC,EAAA,EAAa,IAAMP,KAAKpd,MAAMnF,GAAK,QAAQwmB,SAC3C,IAAM5C,EAAQrB,KAAKpd,MAAMI,WACnBmhB,EAASnE,KAAKpd,MAAMS,YAE1B,SAASkf,EAAWhD,GAChBA,EACCgD,aACAkN,SAAS,KACTS,UAAU,mBAAoBC,GAGnC,SAASA,IACL,IAAMC,EAAIpQ,KAAKqQ,iBACT/lB,EAAIiW,EAAA,EAAqB,KAAO6P,EAAGA,EAAI,IAAMA,GACnD,OAAO,SAASE,GACZ,OAAOhmB,EAAEgmB,IAIjB,IAAM5P,EAAIH,EAAA,IAAe6D,YAAa,EAAG/C,IACnCP,EAAIP,EAAA,IAAiB+D,OAAQH,EAAQ,IAGvCiK,EAAS7N,EAAA,GAAkB,UAAW,UAAW,SAC/CK,EAAML,EAAA,EACJ,IAAMP,KAAKpd,MAAMnF,IACxBslB,OAAO,OACPX,KAAK,QAASf,EAAQrB,KAAKpd,MAAMC,OAAOM,KAAO6c,KAAKpd,MAAMC,OAAOO,OACjEgf,KAAK,SAAU+B,EAASnE,KAAKpd,MAAMC,OAAOS,IAAM0c,KAAKpd,MAAMC,OAAOU,QAClE6e,KAAK,IAAK,KACVW,OAAO,KACPX,KACG,YACA,aACFpC,KAAKpd,MAAMC,OAAOM,KAClB,IACA6c,KAAKpd,MAAMC,OAAOS,IAClB,KAGIwhB,EAAU,IAAI+H,GAChBjM,IAAK,IAAMZ,KAAKpd,MAAMnF,GACtB2wB,WA5CDO,EA8CsC3O,KAAKpd,MAAhCgsB,EA9CXD,EA8CKtqB,KAAuBjH,EA9C5BuxB,EA8C4BvxB,MACzBsxB,EAAYnO,EAAA,EAAa,YAEzBlc,EAAOuqB,EAAgBpkB,OAAO,SAACqkB,EAAD1wB,GAAgD,IAAlC2wB,EAAkC3wB,EAAlC2wB,QAASpB,EAAyBvvB,EAAzBuvB,WAAYD,EAAatvB,EAAbsvB,OAC/DH,EAAOoB,EAAUI,IAAY,IAAIC,KACjC7B,GAAOQ,GAAc,EACrBP,GAAQM,GAAU,EAClBL,GAASM,EAAaD,GAAU,EACpC,OAAOoB,EAAUtjB,QAAS+hB,OAAMJ,MAAKC,OAAMC,eAG/C1M,EAAEqE,OACExE,EAAA,EAAUlc,EAAM,SAASI,GACrB,OAAOA,EAAE6oB,QAGjBxM,EAAEiE,QACE,EACAxE,EAAA,EAAOlc,EAAM,SAASI,GAClB,OAAiB,KAAVA,EAAE2oB,OAAgB,MAIjC,IA4CIlJ,EA5CEqM,EAAchQ,EAAA,IAEnBiQ,MAAMjQ,EAAA,GACNG,EAAE,SAASjc,GACR,OAAOic,EAAEjc,EAAE6oB,QAEdxM,EAAE,SAASrc,GACR,OAAOqc,EAAErc,EAAEyoB,OAGTuD,EAAWlQ,EAAA,IAEhBmQ,QAAQ,SAAAjsB,GAAC,OAAKksB,MAAMlsB,EAAE0oB,QACtBqD,MAAMjQ,EAAA,GACNG,EAAE,SAASjc,GACR,OAAOic,EAAEjc,EAAE6oB,QAEdxM,EAAE,SAASrc,GACR,OAAOqc,EAAErc,EAAE0oB,QAGfvM,EACCmC,OAAO,KACPX,KAAK,QAAS,UACdmB,KACGhD,EAAA,EACUO,GACToD,MAAM,IACNU,UAAUvD,IAEd2D,UAAU,QACV5C,KAAK,SAAU,WAChBxB,EAAIoE,UAAU,sBAAsB5C,KAAK,KAAM,GAG/CxB,EACCmC,OAAO,QACPX,KAAK,YAAa,eAClBA,KAAK,IAAK,EAAIpC,KAAKpd,MAAMC,OAAOM,MAChCif,KAAK,IAAK,EAAI+B,EAAS,GACvB/B,KAAK,KAAM,OACXlf,MAAM,cAAe,UACrBse,KAAK,YAGN,IAAM4N,EAAWC,KAAKC,MAAMjrB,EAAKzE,QAAUxC,EAAQ,IACnD8mB,EAAQ7f,EAAK0D,IAAI,SAAAtD,GAAC,OAAIA,EAAE6oB,OACV,KAAVlwB,IACA8mB,EAAQ7f,EAAK0D,IAAI,SAACtD,EAAG6F,GAAJ,OACbA,EAAI8kB,GAAa,EAAI3qB,EAAE6oB,UAAOztB,IAAWwJ,OAAO,SAAAc,GAAI,OAAIA,KAGhEyW,EACCmC,OAAO,KACPX,KAAK,QAAS,UACdA,KAAK,YAAa,eAAiB+B,EAAS,KAC5CZ,KACGhD,EAAA,EACYG,GACX+D,WAAWP,GACXU,UAAUT,GACVQ,WAAWpE,EAAA,EAAc,aAE7ByE,UAAU,QACV5C,KAAK,SAAU,WAChBxB,EAAIoE,UAAU,sBAAsB5C,KAAK,IAAK,IAG9CxB,EACCmC,OAAO,QACPX,KACG,YACA,aACIf,EAAQ,EACR,MACC8C,EAASnE,KAAKpd,MAAMC,OAAOS,IAAM,IAClC,KAEPJ,MAAM,cAAe,UACrBse,KAAK,QACN,IAAMoP,EAAWhQ,EAChBmC,OAAO,QACPX,KAAK,QAAS,cACdlf,MAAM,SAAU,SAChBA,MAAM,eAAgB,OACtBA,MAAM,mBAAqB,QAC3BA,MAAM,UAAW,KAEZmiB,EAAkB,SAAS5gB,GAC7BqgB,EAAQO,gBAAgB5gB,GAExBmsB,EAASrO,aAAarf,MAAM,UAAW,MAGrC2tB,EAAkB,WACpB,IAAIC,EAAa9Q,KAAK+Q,GAAGC,QAAQ5zB,MACjCwzB,EACCxO,KAAK,IAAK,WACP,IAAI3d,EAAI,IAAMqsB,EAAa,IAAM3M,EAEjC,OADA1f,GAAK,IAAMqsB,EAAa,QAK1BxL,EAAiB,WAEnBR,EAAQQ,iBAERsL,EAASrO,aAAarf,MAAM,UAAW,IAI3C0d,EACCmC,OAAO,QACP1e,MAAOA,IACP+d,KAAK,QAAS,QACdlf,MAAM,OAAQ,QACdA,MAAM,SAAU,kBAAMkrB,EAAO,KAC7BhM,KAAK,eAAgB,GACrBA,KAAK,IAAKmO,GACVhN,KAAKhB,GAGN3B,EACCmC,OAAO,QACP1e,MAAOA,IACP+d,KAAK,QAAS,QACdlf,MAAM,OAAQ,QACdA,MAAM,SAAU,kBAAMkrB,EAAO,KAC7BhM,KAAK,eAAgB,GACrBA,KAAK,IAAKqO,GACVlN,KAAKhB,GACN3B,EACCoE,UAAU,OACV3gB,KAAKA,GACL6gB,QACAnC,OAAO,UACPX,KAAK,IAAK,GACVlf,MAAM,SAAU,kBAAMkrB,EAAO,KAC7BlrB,MAAM,OAAQ,kBAAMkrB,EAAO,KAC3BhM,KAAK,KAAM,SAAS3d,GACjB,OAAOic,EAAEjc,EAAE6oB,QAEdlL,KAAK,KAAM,SAAS3d,GACjB,OAAOqc,EAAErc,EAAEyoB,OAGd/H,GAAG,YAAaE,GAChBF,GAAG,YAAa0L,GAChB1L,GAAG,WAAYG,GACfH,GAAG,QAASnF,KAAKiJ,uBAElBrI,EACCoE,UAAU,OACV3gB,KAAKA,GACL6gB,QACAnC,OAAO,UACPX,KAAK,IAAK,GACVlf,MAAM,SAAU,kBAAMkrB,EAAO,KAC7BlrB,MAAM,OAAQ,kBAAMkrB,EAAO,KAC3BhM,KAAK,KAAM,SAAS3d,GACjB,OAAOic,EAAEjc,EAAE6oB,QAEdlL,KAAK,KAAM,SAAS3d,GACjB,OAAOqc,EAAErc,EAAE0oB,QAEdhI,GAAG,YAAaE,GAChBF,GAAG,YAAa0L,GAChB1L,GAAG,WAAYG,GACfH,GAAG,QAASnF,KAAKiJ,mEAIlBjJ,KAAKgQ,gBAEL7tB,OAAOojB,iBAAiB,SAAUvF,KAAK2D,mDAGxBgM,GACXA,EAAUvyB,QAAU4iB,KAAKpd,MAAMxF,OAC/B4iB,KAAKgQ,+DAIU,IACXpM,EAAY5D,KAAK/iB,MAAjB2mB,QACRE,aAAaF,GACbzhB,OAAOqjB,oBAAoB,SAAUxF,KAAK2D,yCAI1C,OAAOvc,EAAA7F,EAAAC,cAAA,OAAK/D,GAAKuiB,KAAKpd,MAAMnF,YA5TZuJ,EAAA,WAgUxB8oB,EAAUxtB,WACN7E,GAAIyK,EAAA3G,EAAUkC,OACdY,KAAM6D,EAAA3G,EAAU4G,MAChB/K,MAAO8K,EAAA3G,EAAU8kB,OACjBxjB,OAAQqF,EAAA3G,EAAUgB,OAClBc,UAAW6E,EAAA3G,EAAU6G,KACrBpF,SAAUkF,EAAA3G,EAAU6G,KACpBkX,QAASpX,EAAA3G,EAAUgB,OACnB0tB,UAAW/nB,EAAA3G,EAAU8kB,QAGV,IAAA4K,EAAAl0B,OAAA4F,EAAA,GAAgB5F,OAAA8yB,EAAA,EAAA9yB,CAAW+yB,idC1U1C,IAAMoB,GAAen0B,OAAA4oB,EAAA,EAAA5oB,CAAOo0B,GAAA,aAAPp0B,CAAH6oB,MAIZwL,GAAer0B,OAAA4oB,EAAA,EAAA5oB,CAAOs0B,GAAA,aAAPt0B,CAAH+qB,MAOZwJ,GAAcv0B,OAAA4oB,EAAA,EAAA5oB,CAAOm0B,GAAPn0B,CAAHirB,MAMXuJ,GAAc,SAAAr0B,GAAA,IAAGs0B,EAAHt0B,EAAGs0B,QAASrtB,EAAZjH,EAAYiH,UAAZ,OAChBiD,EAAA7F,EAAAC,cAACiwB,EAAA,UAASjqB,aAAW,cAActE,OAC/BwuB,UAAW,QACXxI,SAAU,OACV/E,OAAQ,QACRwN,WAAY,UAEZvqB,EAAA7F,EAAAC,cAAC4vB,IAAaQ,kBAAgB,sBAC1BxqB,EAAA7F,EAAAC,cAAC0vB,GAAD,KACI9pB,EAAA7F,EAAAC,cAAA,0BAEJ4F,EAAA7F,EAAAC,cAAC8vB,GAAD,KACIlqB,EAAA7F,EAAAC,cAAA,qBAGN2C,GACEiD,EAAA7F,EAAAC,cAAC6vB,GAAA,cACGO,kBAAgB,kBAChBtzB,IAAM6F,EACNjB,OAAU2uB,OAAQ,SAElBzqB,EAAA7F,EAAAC,cAAC2vB,GAAA,aAAD,KACI/pB,EAAA7F,EAAAC,cAAC2qB,EAAA,EAAD,SAIThoB,GAAaqtB,EAAQ5xB,QAAU,GAC9BwH,EAAA7F,EAAAC,cAAC6vB,GAAA,cACGO,kBAAgB,kBAChBtzB,IAAM6F,EACNjB,OAAU2uB,OAAQ,SAElBzqB,EAAA7F,EAAAC,cAAC2vB,GAAA,aAAD,KACI/pB,EAAA7F,EAAAC,cAAC4qB,EAAA,EAAD,SAITjoB,GAAaqtB,EAAQnoB,OAAO,SAAA8V,GAAM,OAAsB,OAAlBA,EAAOA,SAAiBpX,IAAI,SAAA5J,EAAoB2zB,GAApB,IAAG3S,EAAHhhB,EAAGghB,OAAQ4S,EAAX5zB,EAAW4zB,MAAX,OACjE3qB,EAAA7F,EAAAC,cAAC4vB,IAAaQ,kBAAgB,qBAAqBtzB,IAAMwzB,GACrD1qB,EAAA7F,EAAAC,cAAC0vB,GAAD,KACI9pB,EAAA7F,EAAAC,cAAA,YAAQzE,OAAAwsB,EAAA,EAAAxsB,CAAQoiB,KAEpB/X,EAAA7F,EAAAC,cAAC8vB,GAAD,KACMS,QAOtBR,GAAYjvB,WACRkvB,QAAStpB,EAAA3G,EAAU4G,MACnBhE,UAAW+D,EAAA3G,EAAUqK,MAGV,IAAAomB,GAAA,u0CC/Df,IAAMC,GACF7qB,EAAA7F,EAAAC,cAAC0wB,GAAA3wB,GACGO,KAAK,KACLxD,IAAI,IACJ4E,OAAU+C,MAAO,qBAAsBksB,YAAa,SAGtDC,GACJhrB,EAAA7F,EAAAC,cAAA4F,EAAA7F,EAAAK,SAAA,KACEwF,EAAA7F,EAAAC,cAAC0wB,GAAA3wB,GACGO,KAAK,KACLxD,IAAI,IACJ4E,OAAU+C,MAAO,iBAAkBksB,YAAa,SAEpD/qB,EAAA7F,EAAAC,cAAA,QAAM/D,GAAG,aAAT,MAIE40B,GAAet1B,OAAA4oB,EAAA,EAAA5oB,CAAOo0B,GAAA,aAAPp0B,CAAHu1B,MAIZC,GAAyBx1B,OAAA4oB,EAAA,EAAA5oB,CAAOs0B,GAAA,aAAPt0B,CAAHy1B,MAKtBC,GAAe11B,OAAA4oB,EAAA,EAAA5oB,CAAOs0B,GAAA,aAAPt0B,CAAH21B,MASZC,GAAsB51B,OAAA4oB,EAAA,EAAA5oB,CAAO01B,GAAP11B,CAAHmrB,MAWnB0K,GAAsB71B,OAAA4oB,EAAA,EAAA5oB,CAAOs1B,GAAPt1B,CAAHqrB,MAInByK,GAAgBlN,EAAA,EAAOa,IAAVsM,MAWbC,GAAch2B,OAAA4oB,EAAA,EAAA5oB,CAAOs1B,GAAPt1B,CAAHi2B,MAMXC,GAAqBl2B,OAAA4oB,EAAA,EAAA5oB,CAAOg2B,GAAPh2B,CAAHm2B,MAiBlBC,GAAgB,SAAAj2B,GAA+D,IAA5DoiB,EAA4DpiB,EAA5DoiB,QAAS2Q,EAAmD/yB,EAAnD+yB,UAAWmD,EAAwCl2B,EAAxCk2B,UAAWjvB,EAA6BjH,EAA7BiH,UAAWjF,EAAkBhC,EAAlBgC,YAAkBwF,EACzC3H,OAAAiK,EAAA,SAAAjK,EAAS,GADgC6H,EAAAqC,IAAAvC,EAAA,GACzE2uB,EADyEzuB,EAAA,GAC5D0uB,EAD4D1uB,EAAA,GAAAiI,EAE3C9P,OAAAiK,EAAA,SAAAjK,CAAS,MAFkC+P,EAAA7F,IAAA4F,EAAA,GAEzE0mB,EAFyEzmB,EAAA,GAE7D0mB,EAF6D1mB,EAAA,GAAA2mB,EAG/B12B,OAAAiK,EAAA,SAAAjK,KAH+B22B,EAAAzsB,IAAAwsB,EAAA,GAGzEE,EAHyED,EAAA,GAGvDE,EAHuDF,EAAA,GAAAG,EAIzC92B,OAAAiK,EAAA,SAAAjK,KAJyC+2B,EAAA7sB,IAAA4sB,EAAA,GAIzEE,EAJyED,EAAA,GAI5DE,EAJ4DF,EAAA,GAMjF/2B,OAAAiK,EAAA,UAAAjK,CAAU,WAaFw2B,GARQ,eAAAp1B,EAAA81B,KAAAC,GAAA3yB,EAAA4yB,KAAG,SAAAC,IAAA,OAAAF,GAAA3yB,EAAA8yB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACLryB,OAAO8C,SAASC,OAAOC,KAAKC,UADvB,OAHJrI,OAAA6uB,EAAA,EAAA7uB,CAAiBw2B,GAAc1H,OAAQ3sB,IAKvBmG,KAAK,SAAAhB,GACxBuvB,EAAoBvvB,GACpB2vB,EAAe3vB,EAAKowB,gBAJb,wBAAAH,EAAAI,SAAAN,MAAH,yBAAAj2B,EAAAw2B,MAAA3U,KAAArgB,YAAA,EASRi1B,KAGHrB,IAqBL,OACAnsB,EAAA7F,EAAAC,cAAA4F,EAAA7F,EAAAK,SAAA,KACEwF,EAAA7F,EAAAC,cAACiwB,EAAA,UAASjqB,aAAW,gBAAgBtE,OACjCwuB,UAAW,QACXxI,SAAU,OACV/E,OAAQ,QACRwN,WAAY,UAEZvqB,EAAA7F,EAAAC,cAACixB,IAAab,kBAAgB,wBAC1BxqB,EAAA7F,EAAAC,cAAC6wB,GAAD,KACIjrB,EAAA7F,EAAAC,cAAA,4BAEJ4F,EAAA7F,EAAAC,cAACuxB,GAAD,KACI3rB,EAAA7F,EAAAC,cAAA,qBAGN2C,GACEiD,EAAA7F,EAAAC,cAAC6vB,GAAA,cACGO,kBAAgB,oBAChBtzB,IAAM6F,EACNjB,OAAU2uB,OAAQ,SAGlBzqB,EAAA7F,EAAAC,cAAC2vB,GAAA,aAAD,KACI/pB,EAAA7F,EAAAC,cAAC2qB,EAAA,EAAD,SAIThoB,GAAaivB,EAAUxzB,QAAU,GAChCwH,EAAA7F,EAAAC,cAAC6vB,GAAA,cACGO,kBAAgB,oBAChBtzB,IAAM6F,EACNjB,OAAU2uB,OAAQ,SAElBzqB,EAAA7F,EAAAC,cAAC2vB,GAAA,aAAD,KACI/pB,EAAA7F,EAAAC,cAAC4qB,EAAA,EAAD,SAITjoB,GAAaivB,EAAUrrB,IAAI,SAAA3J,EAAsB0zB,GAAtB,IAAG9pB,EAAH5J,EAAG4J,KAAM+pB,EAAT3zB,EAAS2zB,MAAOt0B,EAAhBW,EAAgBX,GAAhB,OAC1B2J,EAAA7F,EAAAC,cAACixB,IAAab,kBAAgB,uBAAuBtzB,IAAMwzB,GACvD1qB,EAAA7F,EAAAC,cAAC6wB,GAAD,KACIjrB,EAAA7F,EAAAC,cAAA,KACIU,QAAU,WACNoxB,GAAe,GACfE,EAAc/1B,KAGhBuK,IAGVZ,EAAA7F,EAAAC,cAACuxB,GAAD,KACMhB,OAKhB4B,GAAoBA,QAClBvsB,EAAA7F,EAAAC,cAACqzB,GAAA,OACGxT,MAAQ,MACR2K,MAAQ2H,EAAiB3rB,KAAO2rB,EAAiB3rB,KAAO,mBACxDT,OAAS8rB,EACTyB,QAAU,WACNxB,GAAe,GACfM,MACAI,MACAR,EAAc,OAElBuB,SACI3tB,EAAA7F,EAAAC,cAAC6L,GAAA,QACG/O,IAAI,SACJmD,QAAQ,YACRS,QAAU,WACNoxB,GAAe,GACfM,MACAI,MACAR,EAAc,QAPtB,WAcJpsB,EAAA7F,EAAAC,cAACiwB,EAAA,UAASjqB,aAAW,6BACjBJ,EAAA7F,EAAAC,cAAC+wB,IACGX,kBAAgB,gCAEhBxqB,EAAA7F,EAAAC,cAACqxB,GAAD,KACIzrB,EAAA7F,EAAAC,cAAA,OAAKowB,kBAAgB,YACjBxqB,EAAA7F,EAAAC,cAAA,KAAG0B,OAAUivB,YAAa,SAA1B,kBACEwB,EAAiBqB,gBACfrB,EAAiBqB,gBAAkB,eAE3C5tB,EAAA7F,EAAAC,cAAA,OAAKowB,kBAAgB,cACjBxqB,EAAA7F,EAAAC,cAAA,KAAG0B,OAAUivB,YAAa,SAA1B,cACEwB,EAAiBsB,UACftB,EAAiBsB,UAAY,eAErC7tB,EAAA7F,EAAAC,cAAA,OAAKowB,kBAAgB,YACjBxqB,EAAA7F,EAAAC,cAAA,KAAG0B,OAAUivB,YAAa,SAA1B,YACEwB,EAAiBuB,YACfvB,EAAiBuB,YAAc,eAEvC9tB,EAAA7F,EAAAC,cAAA,OAAKowB,kBAAgB,gBACjBxqB,EAAA7F,EAAAC,cAAA,KAAG0B,OAAUivB,YAAa,SAA1B,gBACGxB,MAAMgD,EAAiBwB,cAC4B,cAAlDp4B,OAAAwsB,EAAA,EAAAxsB,CAAiB42B,EAAiBwB,eAE1C/tB,EAAA7F,EAAAC,cAAA,OAAKowB,kBAAgB,oBACjBxqB,EAAA7F,EAAAC,cAAA,KAAG0B,OAAUivB,YAAa,SAA1B,oBACEwB,EAAiByB,kBAvKrB,SAAA/wB,GACxB,GAAKA,EAAL,CAIA,GAAIA,GAAQA,EAAK,GAAI,CACjB,IAAMgxB,EAAat4B,OAAAwsB,EAAA,EAAAxsB,CAAiBsH,EAAK,GAAGixB,WAC5C,SAAA/pB,OAAUlH,EAAK,GAAGkxB,UAAlB,KAAAhqB,OAA+B8pB,GAGnC,qBA8J8BG,CAAoB7B,EAAiByB,mBAAqB,iBAI1EhuB,EAAA7F,EAAAC,cAACmxB,GAAD,KACIvrB,EAAA7F,EAAAC,cAACoxB,IAAoBt0B,IAAI,aACrB8I,EAAA7F,EAAAC,cAACi0B,GAAA,OAAMh0B,QAAQ,WAAf,gBAFR,IAII2F,EAAA7F,EAAAC,cAACyxB,GAAD,KACI7rB,EAAA7F,EAAAC,cAAC6L,GAAA,QAAOic,UAAU,IAAIpnB,QA3Id,WAAM,IACxBgE,EAAgB2Z,EAAA,EAAhB3Z,YACFuoB,GACF5vB,aAAe00B,GACf/0B,QAAU,aAAc,SAAU,MAAO,UAAW,UAAW,QAAS,WAAY,WACpFE,UAAY,OACZb,WAAYqB,EAAY5B,UACxBQ,SAAUoB,EAAY3B,QACtBkB,iBAAkB,SAClBG,YAAcqxB,IAGZxQ,EAAS1iB,OAAA2iB,EAAA,UAAA3iB,CAAU0xB,GAAsB9O,YAAa,YAC5DL,EAAQzU,MACJ+U,SAAU1Z,EACVuZ,YA4HsEhe,QAAQ,QAAhE,mBAKR2F,EAAA7F,EAAAC,cAACmxB,IAAoBf,kBAAgB,mBACjCxqB,EAAA7F,EAAAC,cAAC2vB,GAAA,cAAe7yB,IAAI,eAApB,WACA8I,EAAA7F,EAAAC,cAAC2vB,GAAA,cAAe7yB,IAAI,mBAApB,WACA8I,EAAA7F,EAAAC,cAAC2vB,GAAA,cAAe7yB,IAAI,sBAApB,cACA8I,EAAA7F,EAAAC,cAAC2vB,GAAA,cAAe7yB,IAAI,sBAApB,eAEFy1B,EAAYn0B,QAAU,GAAKwH,EAAA7F,EAAAC,cAAC2qB,EAAA,EAAD,MAC3B4H,EAAYn0B,OAAS,GAC3Bm0B,EAAYhsB,IAAI,SAAC2tB,EAAK5D,GAAN,OACZ1qB,EAAA7F,EAAAC,cAACixB,IACGvvB,OAAUmhB,QAAS,UACnB/lB,IAAG,eAAAiN,OAAkBumB,GACrBF,kBAAgB,eAEhBxqB,EAAA7F,EAAAC,cAAC2vB,GAAA,cAAe7yB,IAAI,YACC,eAAfo3B,EAAIl3B,OAA0ByzB,GAAUG,GAAQ,IAChDsD,EAAIC,OAFV,MAEuBD,EAAIE,UAE3BxuB,EAAA7F,EAAAC,cAAC2vB,GAAA,cAAe7yB,IAAI,eACdo3B,EAAIG,eAAiBH,EAAII,cAE/B1uB,EAAA7F,EAAAC,cAAC2vB,GAAA,cAAe7yB,IAAI,cACdvB,OAAAwsB,EAAA,EAAAxsB,CAAe24B,EAAIK,aAEzB3uB,EAAA7F,EAAAC,cAAC2vB,GAAA,cAAe7yB,IAAI,cACdvB,OAAAwsB,EAAA,EAAAxsB,CAAc24B,EAAIM,oBAW9C7C,GAAc7wB,WACV8wB,UAAWlrB,EAAA3G,EAAU4G,MACrBhE,UAAW+D,EAAA3G,EAAUqK,KACrB1M,YAAagJ,EAAA3G,EAAUgB,QAGZ,IAAA0zB,GAAA,yXCzRf,IAAMC,GAAYn5B,OAAA4oB,EAAA,EAAA5oB,CAAOsR,EAAA,UAAPtR,CAAHo5B,MAgBTC,KACAh5B,MAAO,gBAAiBoR,MAAO,oBAAqB6nB,UAAU,IAC9Dj5B,MAAO,EAAGoR,MAAO,YAAa6nB,UAAU,IACxCj5B,MAAO,GAAIoR,MAAO,eAAgB6nB,UAAU,IAC5Cj5B,MAAO,GAAIoR,MAAO,aAAc6nB,UAAU,IAsBhD,IAAMC,IACFh5B,UAAWi5B,MACVl2B,SAAS,EAAG,SACZJ,OAAO,cACR1C,QAASg5B,MAASt2B,OAAO,eA2KduC,EAAA,QAxKE,SAAArE,GAAiB,IAAdmhB,EAAcnhB,EAAdmhB,QAAc5a,EACgB3H,OAAAiK,EAAA,SAAAjK,CAAS,MADzB6H,EAAAqC,IAAAvC,EAAA,GACtBpD,EADsBsD,EAAA,GACN4xB,EADM5xB,EAAA,GAAAiI,EAEY9P,OAAAiK,EAAA,SAAAjK,KAFZ+P,EAAA7F,IAAA4F,EAAA,GAEtB4pB,EAFsB3pB,EAAA,GAER4pB,EAFQ5pB,EAAA,GAAA2mB,EAGc12B,OAAAiK,EAAA,SAAAjK,KAHd22B,EAAAzsB,IAAAwsB,EAAA,GAGtBkD,EAHsBjD,EAAA,GAGPkD,EAHOlD,EAAA,GAAAG,EAIc92B,OAAAiK,EAAA,SAAAjK,KAJd+2B,EAAA7sB,IAAA4sB,EAAA,GAItBgD,EAJsB/C,EAAA,GAIPgD,EAJOhD,EAAA,GAAAiD,EAKUh6B,OAAAiK,EAAA,SAAAjK,KALVi6B,EAAA/vB,IAAA8vB,EAAA,GAKtBE,EALsBD,EAAA,GAKTE,EALSF,EAAA,GAAAG,EAMgBp6B,OAAAiK,EAAA,SAAAjK,KANhBq6B,EAAAnwB,IAAAkwB,EAAA,GAMtBE,EANsBD,EAAA,GAMNE,EANMF,EAAA,GAAAG,EAOoBx6B,OAAAiK,EAAA,SAAAjK,CAAS,IAP7By6B,EAAAvwB,IAAAswB,EAAA,GAOtBE,EAPsBD,EAAA,GAOJE,EAPIF,EAAA,GAAAG,EAQkB56B,OAAAiK,EAAA,SAAAjK,CAAS,OAR3B66B,EAAA3wB,IAAA0wB,EAAA,GAQtBE,EARsBD,EAAA,GAQLE,EARKF,EAAA,GAAAG,EASMh7B,OAAAiK,EAAA,SAAAjK,EAAS,GATfi7B,EAAA/wB,IAAA8wB,EAAA,GAStB5zB,EATsB6zB,EAAA,GASXC,GATWD,EAAA,GAAAxM,GAU2BzuB,OAAAH,EAAA,EAAAG,CACrDu5B,IADIp3B,GAVsBssB,GAUtBtsB,YAAaa,GAVSyrB,GAUTzrB,WAAYI,GAVHqrB,GAUGrrB,aAAcD,GAVjBsrB,GAUiBtrB,MA0C/C,OAtCAnD,OAAAiK,EAAA,UAAAjK,CAAU,WACNkI,SAASC,OAAOgzB,aAAcz6B,GAAI,WAAY06B,cAAc,IAE5DF,IAAa,GACb91B,OAAO8C,SAASC,OAAOC,KAAKC,UAAUC,KAAK,kBACvCtI,OAAA6uB,EAAA,EAAA7uB,GAAmBsI,KAAK,kBACpBtI,OAAA6uB,EAAA,EAAA7uB,GAAesI,KAAK,SAAAjH,GAAqC,IAAAg6B,EAAAh6B,EAAlCg1B,UACbiE,EA/C1B,SAA2BhzB,GAKvB,OAAOA,EAAKmG,OACR,SAACqkB,EAAD3xB,GAA8D,IAAhDsR,EAAgDtR,EAAhDsR,MAAmB/Q,EAA6BP,EAAzC0B,WAA8By5B,EAAWn7B,EAAzB44B,aAOjC,OANqB,IAAjBtnB,EAAM5O,OACNivB,EAAUhkB,MAAOzN,MAAOK,EAAI+Q,MAAO6pB,EAAMhC,UAAU,IAEnDxH,EAAUhkB,MAAOzN,MAAOK,EAAI+Q,QAAO6nB,UAAU,IAG1CxH,KAXTzxB,MAAO,gBAAiBoR,MAAO,iBAAkB6nB,UAAU,IAC3Dj5B,MAAO,MAAOoR,MAAO,eAAgB6nB,UAAU,KA4CdiC,MAD8B,IAAAF,QAErDd,EAAkBD,GAClBY,IAAa,OAEnB3yB,MAAM,SAACjE,GACLm1B,GAAoBl1B,eAAgBD,aAMhDtE,OAAAiK,EAAA,UAAAjK,CAAU,WACNk7B,IAAa,GACb91B,OAAO8C,SAASC,OAAOC,KAAKC,UAAUC,KAAK,kBACvCkzB,QAAQC,KACJz7B,OAAA6uB,EAAA,EAAA7uB,EAAc8uB,OAAQ3sB,KACtBnC,OAAA6uB,EAAA,EAAA7uB,EAAc8uB,OAAQ3sB,KACtBnC,OAAA6uB,EAAA,EAAA7uB,EAAgB8uB,OAAQ3sB,OACzBmG,KAAK,SAAAozB,GAIF,IAAAC,EAAAzxB,IAAAwxB,EAAA,GAAAE,EAAAD,EAAA,GAHAr0B,KAAMu0B,OAGN,IAAAD,OAAAE,EAAAH,EAAA,GAFAlH,QAASyF,OAET,IAAA4B,OAAAC,EAAAJ,EAAA,GADAtF,UAAWyD,OACX,IAAAiC,OACF55B,GAAYzB,GAAKm5B,EAAiBgC,GAAalC,EAAgBkC,GAC/D1B,EAAeD,GACfH,EAAiBD,GACjBoB,IAAa,KACd3yB,MAAM,0BAEZpG,KAGDkI,EAAA7F,EAAAC,cAAC4F,EAAA7F,EAAMK,SAAP,KACIwF,EAAA7F,EAAAC,cAACuqB,EAAA,WAAD,KACI3kB,EAAA7F,EAAAC,cAACuqB,EAAA,iBAAgBC,MAAQ,cAE3B1qB,GACE8F,EAAA7F,EAAAC,cAACyqB,EAAA,KAAD,KACI7kB,EAAA7F,EAAAC,cAAC0qB,EAAA,EAAgB5qB,KAGtBA,GACP8F,EAAA7F,EAAAC,cAAA4F,EAAA7F,EAAAK,SAAA,KACEwF,EAAA7F,EAAAC,cAACyqB,EAAA,MAAK/oB,OAAU+iB,cAAe,MAC3B7e,EAAA7F,EAAAC,cAACuM,EAAA,KAAD,KACI3G,EAAA7F,EAAAC,cAAC00B,IAAUhzB,OAAU+iB,cAAe,IAAKsB,WAAY,MACjDngB,EAAA7F,EAAAC,cAAA,UACI4F,EAAA7F,EAAAC,cAAC8L,EAAA/L,GAAW2B,OAAUivB,YAAa,UADvC,UAIA/qB,EAAA7F,EAAAC,cAAA,OAAK0B,OAAUwpB,QAAS,OAAQqM,eAAgB,aAC5C3xB,EAAA7F,EAAAC,cAACw3B,EAAA,YACGhxB,KAAK,kBACL5K,MAAQy6B,EACRhvB,SAAW,SAAAzL,GACP06B,EAAmB16B,GACnB8C,GAAM9C,IAEVoK,aAAW,iBACXtE,OAAUL,OAAQ,aAEhBw0B,EAAetvB,IAAI,SAAAkxB,EAA6BnH,GAA7B,IAAG10B,EAAH67B,EAAG77B,MAAOoR,EAAVyqB,EAAUzqB,MAAO6nB,EAAjB4C,EAAiB5C,SAAjB,OACjBjvB,EAAA7F,EAAAC,cAAC03B,EAAA,kBACGC,WAAa9C,EACb/3B,IAAMwzB,EACN10B,MAAQA,EACRoR,MAAQA,OAIpBpH,EAAA7F,EAAAC,cAACw3B,EAAA,YACGhxB,KAAK,mBACL5K,MAAQq6B,EACR5uB,SAAW,SAAAzL,GACPs6B,GAAqBt6B,GACrB2C,KACAI,IAAc/C,IAElBoK,aAAW,oBACXtE,OAAUL,OAAQ,aAEhBuzB,GAAiBruB,IAAI,SAACqxB,EAAQtH,GAAT,OACnB1qB,EAAA7F,EAAAC,cAAC03B,EAAA,kBACGC,WAAaC,EAAO/C,SACpB/3B,IAAMwzB,EACN10B,MAAQg8B,EAAOh8B,MACfoR,MAAQ4qB,EAAO5qB,eAQ3CpH,EAAA7F,EAAAC,cAACyqB,EAAA,KAAD,KACI7kB,EAAA7F,EAAAC,cAACuM,EAAA,KAAD,KACI3G,EAAA7F,EAAAC,cAAC6M,EAAA,UAAD,KACIjH,EAAA7F,EAAAC,cAAA,yBAEJ4F,EAAA7F,EAAAC,cAAC8M,EAAA,SAAD,KACMnK,IAAc7C,GAAkB8F,EAAA7F,EAAAC,cAAC2qB,EAAA,EAAD,MACZ,QAApB0L,GACNpB,EAAa72B,OAAS,IACrBuE,GACOiD,EAAA7F,EAAAC,cAACouB,GACG/sB,QAAWS,IAAK,GAAIF,MAAO,GAAIG,OAAQ,GAAIJ,KAAM,IACjD1F,GAAG,oBACH4G,KAAOoyB,EACPr5B,MAAQq6B,IAGM,QAApBI,GACNlB,EAAc/2B,OAAS,IACtBuE,GACOiD,EAAA7F,EAAAC,cAACyvB,GACGpuB,QAAWS,IAAK,GAAIF,MAAO,GAAIG,OAAQ,GAAIJ,KAAM,IACjD1F,GAAG,qBACH4G,KAAOsyB,EACPv5B,MAAQq6B,EACRxH,UAAY/wB,GAAYzB,OAKxC2J,EAAA7F,EAAAC,cAAA,OACI4nB,UAAU,WACVlmB,OAAUwpB,QAAS,OAAQ2M,UAAW,SAEtCjyB,EAAA7F,EAAAC,cAACy0B,IACG3W,QAAUA,EACVpgB,YAAcA,GACd+wB,UAAY/wB,GAAYzB,GACxB21B,UAAYyD,EAAc7T,MAAM,EAAG,IACnC7e,UAAYA,IAEhBiD,EAAA7F,EAAAC,cAACwwB,IACGR,QAAUyF,EAAYjU,MAAM,EAAG,IAC/B7e,UAAYA,y6CC9OlC,IAAMm1B,GAAY3T,EAAA,EAAOa,IAAVZ,IAKH,SAAAhjB,GAAK,OAAIA,EAAMuhB,SAGrBoV,GAAe5T,EAAA,EAAOa,IAAVsB,KAOZgC,GAAUnE,EAAA,EAAOa,IAAVwB,KAMPwR,GAAQ7T,EAAA,EAAOa,IAAIiT,MAAM,SAAA72B,GAAK,OAChCqD,MAAOrD,EAAMqD,OAAS,UADZ0f,CAAHuC,IAKK,SAAAtlB,GAAK,OAAIA,EAAMqD,QAIzBigB,GAAQP,EAAA,EAAO+T,KAAVtR,KASLuR,GAAWhU,EAAA,EAAO+T,KAAV5G,KAKR8G,GAAS78B,OAAA4oB,EAAA,EAAA5oB,CAAOwR,EAAA,OAAPxR,CAAHi2B,KAQN6G,eACF,SAAAC,EAAYl3B,GAAO,IAAAmd,EAAA,OAAAE,IAAAD,KAAA8Z,IACf/Z,EAAAsD,IAAArD,KAAAsD,IAAAwW,GAAAvW,KAAAvD,KAAMpd,KACDm3B,aAAeha,EAAKga,aAAatW,KAAlBC,IAAA3D,IAFLA,4DAINia,KAAkC,IAAV58B,EAAUF,EAApB8E,OAAU5E,OAGjCqK,EAFqBuY,KAAKpd,MAAlB6E,UACWkb,WAAWvlB,qCAGzB,IAAAgmB,EAAApD,KAAA2O,EAC8B3O,KAAKpd,MAAhCyB,EADHsqB,EACGtqB,KAAMsC,EADTgoB,EACShoB,SAAUwd,EADnBwK,EACmBxK,OACxB,OACI/c,EAAA7F,EAAAC,cAAC83B,IAAUnV,OAASA,GACd9f,EAAK0D,IACH,SAAA5J,EAA6B2zB,GAA7B,IAAG9pB,EAAH7J,EAAG6J,KAAM5K,EAATe,EAASf,MAAOK,EAAhBU,EAAgBV,GAAIs0B,EAApB5zB,EAAoB4zB,MAApB,OACI3qB,EAAA7F,EAAAC,cAAC+3B,IAAaj7B,IAAMwzB,GAChB1qB,EAAA7F,EAAAC,cAACsoB,GAAD,KACI1iB,EAAA7F,EAAAC,cAACg4B,IAAMvzB,MAAQ7I,IACfgK,EAAA7F,EAAAC,cAAC0kB,GAAD,KAASle,IAEX+pB,GACE3qB,EAAA7F,EAAAC,cAACm4B,GAAD,KAAY5H,GAEdprB,GACES,EAAA7F,EAAAC,cAACo4B,IACGlrB,UAAY/H,EAASszB,KAAK,SAAAryB,GAAS,OAAIA,IAAcnK,IACrDoL,SAAWua,EAAK2W,aAChBvyB,aAAaQ,EACb5K,MAAQK,EACRA,GAAE,GAAA8N,OAAMvD,EAAN,KAAAuD,OAAc9N,gBA9B/BuJ,EAAA,WAwCrB6yB,GAAOv3B,WACH+B,KAAM6D,EAAA3G,EAAU4G,MAChBxB,SAAUuB,EAAA3G,EAAU4G,MACpBV,SAAUS,EAAA3G,EAAU6G,KACpB+b,OAAQjc,EAAA3G,EAAUkC,QAGP,IAAAy2B,GAAA,mLC/Ff,IAAMC,GAAUxU,EAAA,EAAOa,IAAV4T,MAOPC,GAAa,SAAChN,GAChB,IAAMiN,EAASjN,EAAKkN,MAAM,KAC1B,SAAAhvB,OAAU+uB,EAAO,GAAjB,KAAA/uB,OAAuB+uB,EAAO,KAG5BE,cACF,SAAA7rB,EAAY/L,GAAO,IAAAmd,EAAAC,KAAAC,IAAAD,KAAArR,GAAAuR,IAAAF,KAAA,kBA+DH,SAAAvb,GACd,IAAI4oB,EACAoN,EACAlN,EACE7M,EACNH,EAAA,EAASI,MACTJ,EAAA,EACQR,EAAKa,KACZJ,OACAK,wBAAwBH,EACzB,GACMI,EACNP,EAAA,EAASQ,MACTR,EAAA,EACQR,EAAKa,KACZJ,OACAK,wBAAwBC,EACzB,GACA,GAAKrc,EAAL,CAII4oB,EAAO5oB,EAAE4oB,KACToN,EAAUh2B,EAAEuD,KACZulB,EAAO9oB,EAAErH,MACLqH,EAAEuD,KAAKpI,OAJO,KAKd66B,EAAUh2B,EAAEuD,KAAKgb,MAAM,EALT,IAKuBzX,OAAO,QAIpD,IAAM0hB,EAAoBoN,GACpBlZ,EAAepB,EAAKqB,YAAYZ,OAAOK,wBAAwBQ,MAC/DC,EAAaf,EAAA,EACXR,EAAKa,IAAM,SAClBJ,OACAK,wBAAwBQ,MAEnBE,EADW,IAAOJ,EAAeG,EAAc,IACzBZ,EAAIY,EAAc,IAE9CvB,EAAKsN,KAAK7L,KAAK,GAAKyL,EAAkBI,IACtCtN,EAAK0a,QAAQjZ,KAAK,GAAKiZ,GACvB1a,EAAKwN,KAAK/L,KAAU+L,EAAO,SAC3BxN,EAAKyN,UAAYzN,EAAKwN,KAAK/M,OAAOkB,wBAElC,IAGIK,EAHEC,EAAcjC,EAAKyN,UAAYzN,EAAKkC,SAAW,IAE/CC,EAAUF,EADE,GAIdD,EADAC,EAHc,GAIEjC,EAAKkC,SAAWC,EAEhBnC,EAAKkC,SAGzBlC,EAAKoC,YAAYC,KAAK,QAASL,GAC/BhC,EAAKqB,YAAYgB,KAAK,YAAa,aAAe1B,EAAI,IAAMI,EAAI,KAC5DS,GACAxB,EAAKsC,aAAaD,KAAK,YAAa,gCACpCrC,EAAKoC,YAAYC,KAAK,KAAML,EAAgB,IAC5ChC,EAAKwN,KAAKnL,KAAK,KAAMrC,EAAKyN,UAAY,GAAK,GAC3CzN,EAAK0a,QAAQrY,KAAK,KAAML,EAAgB,GACxChC,EAAKoO,UAAU/L,KAAK,KAAML,EAAgB,GAC1ChC,EAAKsN,KAAKjL,KAAK,KAAML,EAAgB,KAErChC,EAAKsC,aAAaD,KAAK,YAAa,+BACpCrC,EAAKoC,YAAYC,KAAK,IAAK,IAC3BrC,EAAK0a,QAAQrY,KAAK,IAAK,IACvBrC,EAAKoO,UAAU/L,KAAK,IAAK,IACzBrC,EAAKwN,KAAKnL,KAAK,IAAKL,EAAgB,GACpChC,EAAKsN,KAAKjL,KAAK,IAAK,KAGxBrC,EAAKqB,YAAYle,MAAM,UAAW,GAClC6c,EAAKqB,YAAYkB,eAxIApC,IAAAF,KAAA,iBA2IJ,WACbD,EAAKqB,YACJmB,aACAC,MAAM,IACNtf,MAAM,UAAW,GACjBA,MAAM,iBAAkB,UA/IvB8c,KAAKY,IAAMhe,EAAMge,IACjBZ,KAAKyC,kDAILzC,KAAKqB,MAAQ,IACbrB,KAAKoB,YAAcb,EAAA,EAAUP,KAAKY,IAAM,SAASmC,OAAO,KACxD/C,KAAKoB,YAAYgB,KAAK,KAAM,0BAA4BpC,KAAKY,IAAIoC,MAAM,IACvEhD,KAAKoB,YAAYgB,KAAK,WAAY,WAClCpC,KAAKoB,YAAYle,MAAM,UAAW,GAClC8c,KAAKoB,YAAYle,MAAM,iBAAkB,QACzC8c,KAAKoB,YAAYgB,KAAK,YAAa,uBACnCpC,KAAKiC,SAAW,IAChBjC,KAAKiD,mBAAqB,GAE1BjD,KAAKqC,aAAerC,KAAKoB,YACxB2B,OAAO,QACPX,KAAK,YAAa,iCAClBA,KAAK,IAAK,GACVA,KAAK,IAAK,GACVA,KAAK,SAAU,IACfA,KAAK,QAAS,IACdA,KAAK,OAAQ,WACdpC,KAAKmC,YAAcnC,KAAKoB,YACvB2B,OAAO,QACPX,KAAK,IAAK,IACVA,KAAK,KAAM,IACXA,KAAK,KAAM,GACXA,KAAK,SAAU,IACfA,KAAK,QAASpC,KAAKiC,UACnBG,KAAK,OAAQ,WACdpC,KAAKqN,KAAOrN,KAAKoB,YAChB2B,OAAO,QACPX,KAAK,IAAK,IACVA,KAAK,IAAK,IACVA,KAAK,YAAa,IAClBA,KAAK,OAAQ,SACbZ,KAAK,QACNxB,KAAKuN,KAAOvN,KAAKoB,YAChB2B,OAAO,QACPX,KAAK,OAAQ,SACbA,KAAK,YAAa,IAClBA,KAAK,IAAK,IACVA,KAAK,IAAK,IACVZ,KAAK,UACNxB,KAAKya,QAAUza,KAAKoB,YACnB2B,OAAO,QACPX,KAAK,OAAQ,SACbA,KAAK,cAAe,KACpBA,KAAK,IAAK,IACVA,KAAK,KAAM,GACXA,KAAK,YAAa,IAClBZ,KAAK,OACNxB,KAAKmO,UAAYnO,KAAKoB,YACrB2B,OAAO,QACPX,KAAK,OAAQ,SACbA,KAAK,IAAK,IACVA,KAAK,IAAK,IACVA,KAAK,YAAa,IAClBZ,KAAK,8BAwFRkZ,eACF,SAAAC,EAAY/3B,GAAO,IAAAwgB,EAAA,OAAAnD,IAAAD,KAAA2a,IACfvX,EAAAC,IAAArD,KAAAsD,IAAAqX,GAAApX,KAAAvD,KAAMpd,KACD4gB,KAAOJ,EAAKI,KAAKC,KAAVC,IAAAN,IACZA,EAAKwX,aAAexX,EAAKwX,aAAanX,KAAlBC,IAAAN,IACpBA,EAAKX,KAAOW,EAAKX,KAAKgB,KAAVC,IAAAN,IACZA,EAAKO,OAASP,EAAKO,OAAOF,KAAZC,IAAAN,IACdA,EAAK6F,sBAAwB7F,EAAK6F,sBAAsBxF,KAA3BC,IAAAN,IAC7BA,EAAKyX,SAAWj4B,EAAMyB,KAAK,GAAG6mB,MAC9B9H,EAAKxb,aACLwb,EAAKnmB,OACDmxB,UACAznB,YACA4nB,iBACA3K,QAAS,MAbER,wDAkBV,IAAAS,EAAA7D,KACG4D,EAAY5D,KAAK/iB,MAAjB2mB,QACRE,aAAaF,GACb5D,KAAK+D,UACDH,QAASI,WAAW,WAAQH,EAAKL,QAAW,wDAIhB,IAAZ6J,EAAYnwB,EAAZmwB,KAAM5vB,EAAMP,EAANO,GAC1B,IAAY,IAARA,EAAJ,CADgC,IAMxByI,EAAgB2Z,GAAA,EAAhB3Z,YACFsoB,EAAgB6L,GAAWhN,GAC3BoB,GACFhwB,iBAAkB,SAClBZ,WAAY2wB,EACZ1wB,SAAU0wB,EACVhwB,QAAU,aAAc,SAAU,MAAO,UAAW,UAAW,QAAS,WAAY,WACpFG,QAAUlB,IAGRgiB,EAAS1iB,OAAA2iB,GAAA,UAAA3iB,CAAU0xB,GAAsB9O,YAAa,YAC5DK,KAAKpd,MAAM0c,QAAQzU,MACf+U,SAAU1Z,EACVuZ,iDAIK8T,IACmC,IAAxCvT,KAAKpY,UAAUkzB,QAAQvH,GACvBvT,KAAKpY,aAAL2D,OAAAC,IAAsBwU,KAAKpY,YAAW2rB,IAC/BvT,KAAKpY,UAAU+E,SAAS4mB,KAC/BvT,KAAKpY,UAAY4D,IAAKwU,KAAKpY,WAAYyB,OAAO,SAAA0xB,GAAC,OAAIA,IAAMxH,KAG7DvT,KAAK+D,UAAWpd,SAAUqZ,KAAKpY,YAC/BoY,KAAKyC,sCAGF,IAAAuY,EAAAhb,KAE2B,IAA1BA,KAAKpY,UAAUhI,QACfogB,KAAK6a,SAAS38B,QAAQ,SAAC+8B,EAAKnJ,GACpBA,GAAS,GACTkJ,EAAKJ,aAAaK,EAAIx9B,MAMlC,IAAM2wB,EAASpO,KAAK6a,SAAS9yB,IAAI,SAAAkzB,GAC7B,IAAMjzB,GAAmB,IAAZizB,EAAIx9B,GAAY,SAAWw9B,EAAIjzB,KAC5C,OACIA,OACA5K,MAAO49B,EAAKp4B,MAAMs4B,UAAUlzB,GAC5BvK,GAAIw9B,EAAIx9B,MAGhBuiB,KAAK+D,UAAWqK,WAChBpO,KAAKyC,sCAKLlC,EAAA,EAAa,IAAMP,KAAKpd,MAAMnF,GAAK,QAAQwmB,SAFxC,IAAA0K,EAGwC3O,KAAKpd,MAApCgsB,EAHTD,EAGGtqB,KAAuB82B,EAH1BxM,EAG0BwM,UACvBx0B,EAAWqZ,KAAKpY,UAChBvD,EAAOuqB,EAAgBpkB,OAAO,SAACqkB,EAAD1wB,GAAgC,IAAlBkvB,EAAkBlvB,EAAlBkvB,KACxC+N,EAD0Dj9B,EAAZ+sB,MACzB7hB,OAAO,SAAAjL,GAAA,IAAGX,EAAHW,EAAGX,GAAH,OAAYkJ,EAASgG,SAASlP,KAChE,OAAOoxB,EAAUtjB,QAAS8hB,OAAM+N,sBAE9B/Z,EAAQrB,KAAKpd,MAAMI,WACnBmhB,EAASnE,KAAKpd,MAAMS,YAEpBg4B,EAAK9a,EAAA,IAEV+D,OAAQ,EAAGjD,IACXgD,QAAQ,KAEHiX,EAAK/a,EAAA,IACLO,EAAIP,EAAA,IAAiB+D,OAAQH,EAAQ,IAErCiL,EAAWC,KAAKC,MAAMjrB,EAAKzE,QAAUu7B,EAAY,IACnDjX,EAAQ7f,EAAK0D,IAAI,SAAAtD,GAAC,OAAIA,EAAE4oB,OACV,KAAd8N,IACAjX,EAAQ7f,EAAK0D,IAAI,SAACtD,EAAG6F,GAAJ,OACbA,EAAI8kB,GAAa,EAAI3qB,EAAE4oB,UAAOxtB,IAChCwJ,OAAO,SAAAc,GAAI,OAAIA,KAGrB,IAAMqa,EAAQjE,EAAA,EACF8a,GACX5W,WAAWP,GACXS,WAAW0V,IAEN3V,EAAQnE,EAAA,EACJO,GACToD,MAAM,GACNU,UAAUvD,EAAO,EAAG,GAEfT,EAAML,EAAA,EACJ,IAAMP,KAAKpd,MAAMnF,IACxBslB,OAAO,OACPX,KAAK,QAASf,EAAQrB,KAAKpd,MAAMC,OAAOM,KAAO6c,KAAKpd,MAAMC,OAAOO,OACjEgf,KAAK,SAAU+B,EAASnE,KAAKpd,MAAMC,OAAOU,OAASyc,KAAKpd,MAAMC,OAAOS,KACrEyf,OAAO,KACPX,KACG,YACA,aACFpC,KAAKpd,MAAMC,OAAOM,KAClB,IACA6c,KAAKpd,MAAMC,OAAOS,IAClB,KAGIi4B,EAAQl3B,EAAK0D,IAAI,SAAAtD,GAAC,OAAIA,EAAE4oB,OACxBmO,EAAmBn3B,EAAK,GAAG+2B,aAAarzB,IAAI,SAAAtD,GAAC,OAAIA,EAAEuD,OACnD8c,EAAU,IAAI0V,IAChB5Z,IAAK,IAAMZ,KAAKpd,MAAMnF,KAE1B49B,EAAGtW,OAAOwW,GACVD,EAAGvW,OAAOyW,GAAkBlX,OAAQ,EAAG+W,EAAGpW,cAC1CnE,EAAEiE,QACE,EACAxE,EAAA,EAAOlc,EAAM,SAAAgpB,GAAI,OAAI9M,EAAA,EAAO8M,EAAK+N,aAAc,SAAA32B,GAAC,OAAc,KAAVA,EAAErH,WAAkB,IAI5EwjB,EACCmC,OAAO,KACPX,KAAK,QAAS,UACdmB,KAAKmB,GACLM,UAAU,QACV5C,KAAK,SAAU,WACfW,OAAO,QACPX,KAAK,YAAa,eAClBA,KAAK,IAAK,GACVA,KAAK,KAAM,SACXlf,MAAM,cAAe,OACrBA,MAAM,cAAe,QACrBse,KAAK,SACNZ,EACCmC,OAAO,QACPX,KAAK,YAAa,eAClBA,KAAK,IAAK,EAAIpC,KAAKpd,MAAMC,OAAOM,MAChCif,KAAK,IAAK,EAAI+B,EAAS,GACvB/B,KAAK,KAAM,OACXlf,MAAM,cAAe,UACrBse,KAAK,oBAGNZ,EACCmC,OAAO,KACPX,KAAK,QAAS,UACdA,KAAK,YAAa,eAAiB+B,EAAS,KAC5CZ,KAAKiB,GACLQ,UAAU,QACV5C,KAAK,SAAU,WAChBxB,EACCmC,OAAO,QACPX,KACG,YACA,aAAef,EAAQ,EAAI,MAAQ8C,EAASnE,KAAKpd,MAAMC,OAAOS,IAAM,IAAM,KAE7EJ,MAAM,cAAe,UACrBse,KAAK,QAEN,IAAIwB,EAAQpC,EAAIoE,UAAU,UAAU3gB,KAAKA,GACzC2e,EAAMyY,OAAOxX,SAEb,IAAMiB,EAAQlC,EACbkC,QACAnC,OAAO,KACPX,KAAK,QAAS,SACdA,KAAK,YAAa,SAAA3d,GAAC,MAAI,aAAe42B,EAAG52B,EAAE4oB,MAAQ,QAGhDqO,GAFJ1Y,EAAQA,EAAM2Y,MAAMzW,IAEHF,UAAU,QAAQ3gB,KAAK,SAASI,GAC7C,OAAOA,EAAE22B,eAEbM,EAAKD,OAAOxX,SAEZ,IAAMhe,EAAQ+Z,KAAKpd,MAAMs4B,UACnBU,EAAWF,EAChBxW,QACAnC,OAAO,QACPX,KAAK,QAASkZ,EAAGrW,aACjB7C,KAAK,IAAK,SAAS3d,GAChB,OAAO62B,EAAG72B,EAAEuD,QAEf9E,MAAM,OAAQ,SAASuB,GACpB,OAAOwB,EAAMxB,EAAEuD,QAElBoa,KAAK,IAAK,SAAS3d,GAChB,OAAOqc,EAAErc,EAAErH,SAEdglB,KAAK,SAAU,SAAS3d,GACrB,OAAO0f,EAASrD,EAAErc,EAAErH,SAEvB+nB,GAAG,YAAa,SAAS1gB,GACtB8b,EAAA,EAAUP,MAAM9c,MAAM,OAAQqd,EAAA,EAAOta,EAAMxB,EAAEuD,OAAOod,OAAO,IAC3DN,EAAQO,oBAEXF,GAAG,YAAaL,EAAQO,iBACxBF,GAAG,WAAY,SAAS1gB,GACrB8b,EAAA,EAAUP,MAAM9c,MAAM,OAAQ+C,EAAMxB,EAAEuD,OACtC8c,EAAQQ,mBAEXH,GAAG,QAASnF,KAAKiJ,uBAClByS,EAAOA,EAAKC,MAAMC,+CAIlB5b,KAAKwD,OAELrhB,OAAOojB,iBAAiB,SAAUvF,KAAK2D,uDAGpB,IACXC,EAAY5D,KAAK/iB,MAAjB2mB,QACRE,aAAaF,GACbzhB,OAAOqjB,oBAAoB,SAAUxF,KAAK2D,yCAGrC,IAAAkY,EACwB7b,KAAK/iB,MAA1BmxB,EADHyN,EACGzN,OAAQznB,EADXk1B,EACWl1B,SAChB,OACIS,EAAA7F,EAAAC,cAAC24B,GAAD,KACI/yB,EAAA7F,EAAAC,cAAA,OAAK/D,GAAKuiB,KAAKpd,MAAMnF,KACnB2wB,EAAOxuB,OAAS,GACdwH,EAAA7F,EAAAC,cAAC04B,IACGz8B,GAAG,wBACH4G,KAAO+pB,EACPznB,SAAWA,EACXc,SAAWuY,KAAK4a,aAChBzW,OAAO,kBAjQDnd,EAAA,WAyQ9B0zB,GAAgBp4B,WACZ7E,GAAIyK,EAAA3G,EAAUkC,OACdq4B,aAAc5zB,EAAA3G,EAAUqK,KACxBvH,KAAM6D,EAAA3G,EAAU4G,MAChB/K,MAAO8K,EAAA3G,EAAU4G,MACjBtF,OAAQqF,EAAA3G,EAAUgB,OAClBc,UAAW6E,EAAA3G,EAAU6G,KACrBpF,SAAUkF,EAAA3G,EAAU6G,KACpB+yB,UAAWjzB,EAAA3G,EAAU8kB,OACrB/G,QAASpX,EAAA3G,EAAUgB,OACnB24B,UAAWhzB,EAAA3G,EAAU6G,MAGV,IAAA2zB,GAAAh/B,OAAA4F,EAAA,GAAgB+3B,yICzb/B,IAAMsB,GAAUrW,EAAA,EAAOa,IAAVyV,MAMPC,cACF,SAAAvtB,EAAY/L,GAAO,IAAAmd,EAAAC,KAAAC,IAAAD,KAAArR,GAAAuR,IAAAF,KAAA,kBAkEH,SAAAvb,GAOd,IAAI03B,EACAC,EACA3B,GAPe,IAAf1a,EAAKsc,QACLtc,EAAK0C,KAAKhe,GACVsb,EAAKsc,OAAQ,GAMjB,IAAM3b,EACNH,EAAA,EAASI,MACTJ,EAAA,EACQR,EAAKa,KACZJ,OACAK,wBAAwBH,EACzB,GACMI,EACNP,EAAA,EAASQ,MACTR,EAAA,EACQR,EAAKa,KACZJ,OACAK,wBAAwBC,EACzB,GACA,GAAKrc,EAAL,CAIA,GAAIA,GAAKA,EAAEJ,KAAM,CAEb83B,EAAO13B,EAAEJ,KAAKi4B,QACdF,EAAc33B,EAAEJ,KAAK8wB,aACrBsF,EAAUh2B,EAAEJ,KAAK2D,KACbvD,EAAEJ,KAAK2D,KAAKpI,OAJE,KAKd66B,EAAUh2B,EAAEJ,KAAK2D,KAAKgb,MAAM,EAAGuZ,IAAehxB,OAAO,QAI7D,IAAM4V,EAAepB,EAAKqB,YAAYZ,OAAOK,wBAAwBQ,MAC/DC,EAAaf,EAAA,EACXR,EAAKa,IAAM,SAClBJ,OACAK,wBAAwBQ,MAEnBE,EADW,IAAOJ,EAAeG,EAAc,IACzBZ,EAAIY,EAAc,IAE9CvB,EAAKyc,gBAAgBhb,KAAU2a,EAAO,KAClCC,GAAerc,EAAK0c,mBACpB1c,EAAK0c,kBAAkBjb,KAAK,IAAM4a,EAAc,iBAGpDrc,EAAK0a,QAAQjZ,KAAK,IAAMiZ,GACxB1a,EAAKqB,YAAYgB,KAAK,YAAa,aAAe1B,EAAI,IAAMI,EAAI,KAC5DS,GACAxB,EAAKsC,aAAaD,KAAK,YAAa,kCACpCrC,EAAK2c,YAAYta,KAAK,KAAM,KAC5BrC,EAAK0a,QAAQrY,KAAK,KAAM,KACxBrC,EAAKyc,gBAAgBpa,KAAK,KAAM,KAC5BrC,EAAK4c,aACL5c,EAAK0c,kBAAkBra,KAAK,KAAM,OAGtCrC,EAAKsC,aAAaD,KAAK,YAAa,iCACpCrC,EAAK2c,YAAYta,KAAK,IAAK,IAC3BrC,EAAK0a,QAAQrY,KAAK,IAAK,IACvBrC,EAAKyc,gBAAgBpa,KAAK,IAAK,IAC3BrC,EAAK4c,aACL5c,EAAK0c,kBAAkBra,KAAK,IAAK,KAIzCrC,EAAKqB,YAAYle,MAAM,UAAW,GAClC6c,EAAKqB,YAAYkB,eA1IApC,IAAAF,KAAA,iBA6IJ,WACbD,EAAKqB,YACJmB,aACAC,MAAM,IACNtf,MAAM,UAAW,GACjBA,MAAM,iBAAkB,UAjJvB8c,KAAKY,IAAMhe,EAAMge,IAEjBZ,KAAKqc,OAAQ,EAEbrc,KAAK2c,aAAc,2CAGlBl4B,GAEDub,KAAK2c,eAAel4B,GAAKA,EAAEJ,MAAQ,iBAAkBI,EAAEJ,MACvD,IAAMu4B,EAAkB5c,KAAK2c,YAAe,GAAK,GAC3CE,EAAiB7c,KAAK2c,YAAe,IAAM,IAEjD3c,KAAKoB,YAAcb,EAAA,EAAUP,KAAKY,IAAM,SAASmC,OAAO,KACxD/C,KAAKoB,YAAYgB,KAAK,KAAM,0BAA4BpC,KAAKY,IAAIoC,MAAM,IACvEhD,KAAKoB,YAAYgB,KAAK,WAAY,WAClCpC,KAAKoB,YAAYle,MAAM,UAAW,GAClC8c,KAAKoB,YAAYle,MAAM,iBAAkB,QACzC8c,KAAKoB,YAAYgB,KAAK,YAAa,uBAEnCpC,KAAKqC,aAAerC,KAAKoB,YACxB2B,OAAO,QACPX,KAAK,YAAa,iCAClBA,KAAK,IAAK,GACVA,KAAK,IAAK,GACVA,KAAK,SAAU,IACfA,KAAK,QAAS,IACdA,KAAK,OAAQ,WACdpC,KAAK0c,YAAc1c,KAAKoB,YACvB2B,OAAO,QACPX,KAAK,IAAK,IACVA,KAAK,KAAM,IACXA,KAAK,KAAM,GACXA,KAAK,SAAUwa,GACfxa,KAAK,QAASya,GACdza,KAAK,OAAQ,WACdpC,KAAKya,QAAUza,KAAKoB,YACnB2B,OAAO,QACPX,KAAK,OAAQ,SACbA,KAAK,YAAa,IAClBA,KAAK,cAAe,KACpBA,KAAK,IAAK,IACVA,KAAK,IAAK,GACVZ,KAAK,gBACNxB,KAAKwc,gBAAkBxc,KAAKoB,YAC3B2B,OAAO,QACPX,KAAK,OAAQ,SACbA,KAAK,YAAa,IAClBA,KAAK,cAAe,KACpBA,KAAK,IAAK,IACVA,KAAK,IAAK,IACVZ,KAAK,KACNxB,KAAKyc,kBAAoB,KACrBzc,KAAK2c,cACL3c,KAAKyc,kBAAoBzc,KAAKoB,YAC7B2B,OAAO,QACPX,KAAK,OAAQ,SACbA,KAAK,YAAa,IAClBA,KAAK,cAAe,KACpBA,KAAK,IAAK,IACVA,KAAK,IAAK,IACVZ,KAAK,cAwFZsb,eACF,SAAAC,EAAYn6B,GAAO,IAAAwgB,EAAA,OAAAnD,IAAAD,KAAA+c,IACf3Z,EAAAC,IAAArD,KAAAsD,IAAAyZ,GAAAxZ,KAAAvD,KAAMpd,KACD3F,OACDmxB,UACAxK,QAAS,MAEbR,EAAKX,KAAOW,EAAKX,KAAKgB,KAAVC,IAAAN,IACZA,EAAKI,KAAOJ,EAAKI,KAAKC,KAAVC,IAAAN,IACZA,EAAKO,OAASP,EAAKO,OAAOF,KAAZC,IAAAN,IARCA,wDAWV,IAAAS,EAAA7D,KACG4D,EAAY5D,KAAK/iB,MAAjB2mB,QACRE,aAAaF,GACb5D,KAAK+D,UACDH,QAASI,WAAW,WAAQH,EAAKL,QAAW,8CAGrCnf,GAEXA,EAAK24B,KAAK,SAACz7B,EAAG07B,GAAJ,OACN1c,EAAA,EAAcoC,WAAWphB,EAAEwwB,OAAQpP,WAAWsa,EAAElL,yCAGjD,IAAAiJ,EAAAhb,KAGGoO,EAFWpO,KAAKpd,MAAdyB,KAEY0D,IAAI,SAAAkzB,GACpB,IAAMjzB,GAAmB,IAAZizB,EAAIx9B,GAAY,SAAWw9B,EAAIjzB,KAC5C,OACIA,OACA5K,MAAO49B,EAAKp4B,MAAMs4B,UAAUlzB,GAC5B+pB,MAAO1C,KAAKC,MAAM2L,EAAIlJ,UAE3BiL,KAAK,SAACz7B,EAAG07B,GAAJ,OACH17B,EAAEwwB,MAAQkL,EAAElL,MAAS,EACjBkL,EAAElL,MAAQxwB,EAAEwwB,OAAU,EAAI,IAGnC/R,KAAK+D,UAAWqK,WAChBpO,KAAKyC,sCAGL,IAAMxc,EAAQ+Z,KAAKpd,MAAMs4B,UAEzB3a,EAAA,EAAa,IAAMP,KAAKpd,MAAMnF,GAAK,QAAQwmB,SAC3C,IAAM5C,EAAQrB,KAAKpd,MAAMI,WACnBmhB,EAASnE,KAAKpd,MAAMS,YACpBud,EAAML,EAAA,EACJ,IAAMP,KAAKpd,MAAMnF,IACxBslB,OAAO,OACPX,KAAK,QAASf,EAAQrB,KAAKpd,MAAMC,OAAOM,KAAO6c,KAAKpd,MAAMC,OAAOO,OACjEgf,KAAK,SAAU+B,EAASnE,KAAKpd,MAAMC,OAAOU,QAC1Cwf,OAAO,KAERnC,EAAImC,OAAO,KAAKX,KAAK,QAAS,UAC9BxB,EAAImC,OAAO,KAAKX,KAAK,QAAS,UAC9BxB,EAAImC,OAAO,KAAKX,KAAK,QAAS,SAC9B,IAAM8a,EAAS7N,KAAK8N,IAAI9b,EAAO8C,GAAU,EACjC9f,EAAS2b,KAAKpd,MAAdyB,KACF8hB,EAAQppB,OAAAwsB,GAAA,EAAAxsB,CAASsH,GACvBA,EAAKnG,QAAQ,SAASuG,GAClBA,EAAEstB,OAASttB,EAAEstB,MACbttB,EAAE63B,SAAWjN,KAAKC,MAAO7qB,EAAEstB,MAAQ5L,EAAS,OAEhD,IAAMiX,EAAe,IAAIlB,IACrBtb,IAAK,IAAMZ,KAAKpd,MAAMnF,KAEpB4/B,EAAM9c,EAAA,IAEXyc,KAAK,MACL5/B,MAAM,SAAAqH,GAAC,OAAIA,EAAEstB,QACRuL,EAAM/c,EAAA,IAEXgd,YAAYL,EAAS,IACrBM,YAAY,GAEb5c,EAAIwB,KACA,YACA,cACHf,EAAQrB,KAAKpd,MAAMC,OAAOM,KAAO6c,KAAKpd,MAAMC,OAAOO,OAAS,EAC7D,KACC+gB,EAASnE,KAAKpd,MAAMC,OAAOS,IAAM0c,KAAKpd,MAAMC,OAAOU,QAAU,EAC9D,KAGAqd,EACCoE,UAAU,QACV3gB,KAAKg5B,EAAIh5B,IACT6gB,QACAnC,OAAO,QACPX,KAAK,IAAKkb,GACVlb,KAAK,OAAQ,SAAA3d,GAAC,OAAIwB,EAAMxB,EAAEJ,KAAK2D,QAEhC4Y,EACCoE,UAAU,QACVG,GAAG,YAAa,SAAS1gB,GACtB8b,EAAA,EAAUP,MAAM9c,MAAM,OAAQqd,EAAA,EAAOta,EAAMxB,EAAEJ,KAAK2D,OAAOod,OAAO,IAChEgY,EAAa/X,gBAAgB5gB,KAEhC0gB,GAAG,WAAY,SAAS1gB,GACrB8b,EAAA,EAAUP,MAAM9c,MAAM,OAAQ+C,EAAMxB,EAAEJ,KAAK2D,OAC3Co1B,EAAa9X,mBAEhBH,GAAG,YAAaiY,EAAa/X,iBAE9BzE,EAAImC,OAAO,KAAK0a,QAAQ,UAAU,GAClC7c,EAAImC,OAAO,KAAK0a,QAAQ,SAAS,+CAIjCzd,KAAKwD,OAELrhB,OAAOojB,iBAAiB,SAAUvF,KAAK2D,uDAGpB,IACXC,EAAY5D,KAAK/iB,MAAjB2mB,QACRE,aAAaF,GACbzhB,OAAOqjB,oBAAoB,SAAUxF,KAAK2D,mDAE3BgM,GACXA,EAAUtrB,OAAS2b,KAAKpd,MAAMyB,MAC9B2b,KAAKwD,wCAIJ,IACG4K,EAAWpO,KAAK/iB,MAAhBmxB,OACR,OACIhnB,EAAA7F,EAAAC,cAACw6B,GAAD,KACI50B,EAAA7F,EAAAC,cAAA,OAAK/D,GAAKuiB,KAAKpd,MAAMnF,KACnB2wB,EAAOxuB,OAAS,GACdwH,EAAA7F,EAAAC,cAAC04B,IACGz8B,GAAG,wBACH4G,KAAO+pB,EACPznB,SAAW,KACXc,SAAW,KACX0c,OAAO,kBA3IRnd,EAAA,WAmJvB81B,GAASx6B,WACL7E,GAAIyK,EAAA3G,EAAUkC,OACdq4B,aAAc5zB,EAAA3G,EAAUqK,KACxBvH,KAAM6D,EAAA3G,EAAU4G,MAChBtF,OAAQqF,EAAA3G,EAAUgB,OAClBc,UAAW6E,EAAA3G,EAAU6G,KACrBpF,SAAUkF,EAAA3G,EAAU6G,KACpB+yB,UAAWjzB,EAAA3G,EAAU8kB,OACrB6U,UAAWhzB,EAAA3G,EAAU6G,MAGV,IAAAs1B,GAAA3gC,OAAA4F,EAAA,GAAgBm6B,+tBC9R/B,IAAMa,GAAY5gC,OAAA4oB,EAAA,EAAA5oB,CAAOsR,EAAA,UAAPtR,CAAH6gC,MAgBTC,GAAgBlY,EAAA,EAAOa,IAAVsX,MAebC,GAAUhhC,OAAA4oB,EAAA,EAAA5oB,CAAOgR,EAAA,KAAPhR,CAAHihC,MAIP9C,GAAYn+B,OAAAwjB,EAAA,EAAAxjB,ECvEd,OACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YD6DEkhC,GAAgB,SAAAl0B,GAAW,IACrBm0B,EAAgCn0B,EAAhCm0B,KAAuBC,GAASp0B,EAA1Bq0B,aADe5xB,IACWzC,GADX,yBAE7B,OAAAsgB,OAAY8T,GAAMr/B,QAASo/B,EAAKp/B,WAG9Bu/B,GAAkB,SAAAnhC,GAAA,IAAAohC,EAAAphC,EAAGq+B,MAAH,gBAAA+C,QAA8Bv2B,IAAI,SAAA5J,GAAA,IAAGkvB,EAAHlvB,EAAGkvB,KAAMnC,EAAT/sB,EAAS+sB,MAAT,OACtDmC,OACAnC,MAAOA,EAAMnjB,IAAI,SAAA3J,GAAA,IAAGX,EAAHW,EAAGX,GAAI8gC,EAAPngC,EAAOmgC,YAAav2B,EAApB5J,EAAoB4J,KAApB,OACbvK,KACA4vB,OACAjwB,MAAOmhC,EACPv2B,MAAc,IAARvK,EAAY,SAAYuK,GAAQ,yBAIxCw2B,GAAiB,SAAAC,GAAQ,OAAI,SAAAhG,GAAA,IAAAiG,EAAAjG,EAAGvN,MAAH,gBAAAwT,QACzB32B,IAAI,SAAA2wB,GAAA,IAAGj7B,EAAHi7B,EAAGj7B,GAAgBs0B,EAAnB2G,EAAQ+F,GAAkBz2B,EAA1B0wB,EAA0B1wB,KAA1B,OACNvK,KACAs0B,QACA/pB,MAAc,IAARvK,EAAY,SAAYuK,GAAQ,uBAGxC22B,GAAyB,SAAA1F,GAAiB,IAAd3Z,EAAc2Z,EAAd3Z,QAAckL,EACRztB,OAAA0tB,EAAA,EAAA1tB,CAAO,MADC2tB,EAAAzjB,IAAAujB,EAAA,GACpCG,EADoCD,EAAA,GACzBE,EADyBF,EAAA,GAAAG,EAElB9tB,OAAA0tB,EAAA,EAAA1tB,IAAWshC,IAFOvT,EAAA7jB,IAAA4jB,EAAA,GAEpC+T,EAFoC9T,EAAA,GAE9B+T,EAF8B/T,EAAA,GAAAE,EAGlBjuB,OAAA0tB,EAAA,EAAA1tB,IAAWyhC,GAAe,eAHRpT,EAAAnkB,IAAA+jB,EAAA,GAGpCuC,EAHoCnC,EAAA,GAG9B0T,EAH8B1T,EAAA,GAAA2T,EAIhBhiC,OAAA0tB,EAAA,EAAA1tB,IAAWyhC,GAAe,oBAJVQ,EAAA/3B,IAAA83B,EAAA,GAIpCE,EAJoCD,EAAA,GAI7BE,EAJ6BF,EAAA,GAAAG,EAKZpiC,OAAA0tB,EAAA,EAAA1tB,IAAWkhC,IALCmB,EAAAn4B,IAAAk4B,EAAA,GAKpCp1B,EALoCq1B,EAAA,GAK3BrU,EAL2BqU,EAAA,GAAA5T,EAMJzuB,OAAAH,EAAA,EAAAG,CAAe0uB,GAAA,EAAUnlB,eAAzDpH,EANoCssB,EAMpCtsB,YAAaO,EANuB+rB,EAMvB/rB,eAcrB,OAZA1C,OAAAiK,EAAA,UAAAjK,CAAU,WACNkI,SAASC,OAAOgzB,aAAcz6B,GAAI,0BAA2B06B,cAAc,IAC3EvN,EAAa7tB,OAAA6uB,EAAA,EAAA7uB,IACbguB,EAAWhuB,OAAA6uB,EAAA,EAAA7uB,EAAiB8uB,OAAQ3sB,UAGxCnC,OAAAiK,EAAA,UAAAjK,CAAU,WACN8hC,EAAQ9hC,OAAA6uB,EAAA,EAAA7uB,EAAuB8uB,OAAQ3sB,KACvC4/B,EAAQ/hC,OAAA6uB,EAAA,EAAA7uB,EAAmB8uB,OAAQ3sB,KACnCggC,EAASniC,OAAA6uB,EAAA,EAAA7uB,EAAqB8uB,OAAQ3sB,OACrCA,IAGDkI,EAAA7F,EAAAC,cAAC4F,EAAA7F,EAAMK,SAAP,KACIwF,EAAA7F,EAAAC,cAACuqB,EAAA,WAAD,KACI3kB,EAAA7F,EAAAC,cAACuqB,EAAA,iBAAgBC,MAAQ,6BAE3BrB,EAAUtpB,OACR+F,EAAA7F,EAAAC,cAACyqB,EAAA,KAAD,KACI7kB,EAAA7F,EAAAC,cAAC0qB,EAAA,GACG5qB,eAAiBqpB,EAAUtpB,SAIrCspB,EAAUvmB,WACRgD,EAAA7F,EAAAC,cAAC4F,EAAA7F,EAAMK,SAAP,KACIwF,EAAA7F,EAAAC,cAACyqB,EAAA,MAAK/oB,OAAU+iB,cAAe,MAC3B7e,EAAA7F,EAAAC,cAACuM,EAAA,KAAD,KACI3G,EAAA7F,EAAAC,cAAC8M,EAAA,SAAD,KACIlH,EAAA7F,EAAAC,cAACyL,GAAA,GACGlG,WAAagD,EAAQ1F,KACrB0H,QAAU7M,EACV8M,WAAavM,OAK7B2H,EAAA7F,EAAAC,cAACyqB,EAAA,KAAD,KACI7kB,EAAA7F,EAAAC,cAACu8B,GAAD,KACI32B,EAAA7F,EAAAC,cAACm8B,GAAD,KACIv2B,EAAA7F,EAAAC,cAAA,kCAEJ4F,EAAA7F,EAAAC,cAAC8M,EAAA,SAAD,KACMswB,EAAKz6B,WAAaiD,EAAA7F,EAAAC,cAAC2qB,EAAA,EAAD,MAClByS,EAAKv9B,OAAS+F,EAAA7F,EAAAC,cAACsE,EAAA,GAAcC,QAAU64B,EAAKv9B,MAAMA,QAClDu9B,EAAKx6B,WAAaw6B,EAAKv6B,KAAKzE,QAAU,GAAKwH,EAAA7F,EAAAC,cAAC4qB,EAAA,EAAD,MAC3CwS,EAAKx6B,WAAaw6B,EAAKv6B,KAAKzE,OAAS,GACnCwH,EAAA7F,EAAAC,cAACu6B,IACGl5B,QAAWS,IAAK,GAAIF,MAAO,GAAIG,OAAQ,GAAIJ,KAAM,IACjD1F,GAAG,4BACH4G,KAAOu6B,EAAKv6B,KACZib,QAAUA,EACV6b,UAAYyD,EAAKv6B,KAAMzE,OACvBs7B,UAAYA,OAK5B9zB,EAAA7F,EAAAC,cAACq8B,GAAD,KACIz2B,EAAA7F,EAAAC,cAACuM,EAAA,KAAD,KACI3G,EAAA7F,EAAAC,cAAC8M,EAAA,UAASpL,OAAUmhB,QAAS,IACzBjd,EAAA7F,EAAAC,cAACm8B,IAAUz6B,OAAUmhB,QAAS,IAC1Bjd,EAAA7F,EAAAC,cAAA,MAAI0B,OAAUm8B,WAAY,SAA1B,6BAIF9R,EAAKppB,WAAaiD,EAAA7F,EAAAC,cAAC2qB,EAAA,EAAD,MAClBoB,EAAKlsB,OAAS+F,EAAA7F,EAAAC,cAACsE,EAAA,GAAcC,QAAUwnB,EAAKlsB,MAAMA,QAClDksB,EAAKnpB,WAAampB,EAAKlpB,KAAKzE,QAAU,GAAKwH,EAAA7F,EAAAC,cAAC4qB,EAAA,EAAD,MAC3CmB,EAAKnpB,WAAampB,EAAKlpB,KAAKzE,OAAS,GACnCwH,EAAA7F,EAAAC,cAACk8B,IACG76B,QAAWS,IAAK,GAAIF,MAAO,GAAIG,OAAQ,EAAGJ,KAAM,IAChD1F,GAAG,wBACH4G,KAAOkpB,EAAKlpB,KACZ82B,UAAY5N,EAAKlpB,KAAKzE,OACtBs7B,UAAYA,OAK5B9zB,EAAA7F,EAAAC,cAACuM,EAAA,KAAD,KACI3G,EAAA7F,EAAAC,cAAC8M,EAAA,UAASpL,OAAUmhB,QAAS,IACzBjd,EAAA7F,EAAAC,cAACm8B,IAAUz6B,OAAUmhB,QAAS,IAC1Bjd,EAAA7F,EAAAC,cAAA,MAAI0B,OAAUm8B,WAAY,SAA1B,kCAIFJ,EAAM96B,WAAaiD,EAAA7F,EAAAC,cAAC2qB,EAAA,EAAD,MACnB8S,EAAM59B,OAAS+F,EAAA7F,EAAAC,cAACsE,EAAA,GAAcC,QAAUk5B,EAAM59B,MAAMA,QACpD49B,EAAM76B,WAAa66B,EAAM56B,KAAKzE,QAAU,GAAKwH,EAAA7F,EAAAC,cAAC4qB,EAAA,EAAD,MAC7C6S,EAAM76B,WAAa66B,EAAM56B,KAAKzE,OAAS,GACrCwH,EAAA7F,EAAAC,cAACk8B,IACG76B,QAAWS,IAAK,GAAIF,MAAO,GAAIG,OAAQ,EAAGJ,KAAM,IAChD1F,GAAG,wBACH4G,KAAO46B,EAAM56B,KACb82B,UAAY8D,EAAM56B,KAAKzE,OACvBs7B,UAAYA,YAaxDyD,GAAuBr8B,WACnBgd,QAASpX,EAAA3G,EAAUgB,QAGRC,EAAA,iPEjMA88B,EAdG,WACd,OACIl4B,EAAA7F,EAAAC,cAAC+9B,EAAA,YAAW99B,QAAU89B,EAAA,kBAAkB79B,MACpC0F,EAAA7F,EAAAC,cAACg+B,EAAA,gBAAe79B,KAAO89B,EAAAl+B,IACvB6F,EAAA7F,EAAAC,cAAC0kB,EAAA,OAAMpkB,KAAK,KAAKD,aAAa,MAA9B,oBAGAuF,EAAA7F,EAAAC,cAACk+B,EAAA,eAAD,saCNNC,GAAY,SAAAziC,GAAgB,IAAbsB,EAAatB,EAAbsB,OAoCjB,OACI4I,EAAA7F,EAAAC,cAACi0B,EAAA,OAAMh0B,QAAQ,UAAUwE,MAlCZ,WACb,OAAQzH,GACJ,IAAK,aACD,MAAO,QACX,IAAK,SACL,IAAK,QACD,MAAO,MACX,IAAK,UACL,IAAK,UACD,MAAO,OACX,IAAK,WACD,MAAO,SAEX,QAAS,MAAO,QAqBaohC,GAAaj+B,KAjBlC,WACZ,OAAQnD,GACJ,IAAK,aACD,OAAO4I,EAAA7F,EAAAC,cAACq+B,EAAAt+B,EAAD,MACX,IAAK,SACL,IAAK,QACD,OAAO6F,EAAA7F,EAAAC,cAACs+B,GAAAv+B,EAAD,MACX,IAAK,UACD,OAAO6F,EAAA7F,EAAAC,cAACu+B,GAAAx+B,EAAD,MACX,IAAK,WACD,OAAO6F,EAAA7F,EAAAC,cAACw+B,GAAAz+B,EAAD,MAEX,QAAS,OAAO6F,EAAA7F,EAAAC,cAACy+B,GAAA1+B,EAAD,OAKiC2+B,IApCrC,SAACC,GAAD,OAASA,EAAIC,OAAO,GAAGC,cAAgBF,EAAInd,MAAM,GAoCEsd,CAAY9hC,KAIvFmhC,GAAUr9B,WACN9D,OAAQ0J,EAAA3G,EAAUg/B,OACd,aACA,SAAU,QACV,UACA,MAAO,UAAW,UAAW,cAItB,IAAAC,GAAA,4oBCxCf,IAAMC,IACF,UACA,SACA,UACA,eACA,QAGEC,GAAmB3jC,OAAA4oB,EAAA,EAAA5oB,CAAO4jC,EAAAp/B,EAAPxE,CAAH6oB,MAKhBgb,GAAe7jC,OAAA4oB,EAAA,EAAA5oB,CAAOo0B,EAAA,aAAPp0B,CAAH+qB,MAOZ+Y,GAAqB9jC,OAAA4oB,EAAA,EAAA5oB,CAAO6jC,GAAP7jC,CAAHirB,MAOlB8Y,GAAoB/jC,OAAA4oB,EAAA,EAAA5oB,CAAOgkC,EAAA,kBAAPhkC,CAAHmrB,MAIjB8Y,GAAiBjkC,OAAA4oB,EAAA,EAAA5oB,CAAOkkC,EAAA,eAAPlkC,CAAHqrB,MAwBd8Y,GAAe,SAAChW,EAAOiW,EAAWC,EAAgBC,GAAgB,IAAA38B,EAC9B3H,OAAAiK,EAAA,SAAAjK,KAD8B6H,EAAAqC,IAAAvC,EAAA,GAC5DwC,EAD4DtC,EAAA,GAChDuC,EADgDvC,EAAA,GAGpE,OACIwC,EAAA7F,EAAAC,cAAA4F,EAAA7F,EAAAK,SAAA,KACMspB,EAAMnjB,IAAI,SAACoC,EAAM4nB,GAcf,OACI3qB,EAAA7F,EAAAC,cAAC6vB,EAAA,cAAa/yB,IAAM6L,EAAK1M,GAAGA,GAAKm0B,kBAAkBwP,EAAiBl6B,WAAaA,EAAWyF,SAAX,GAAApB,OAAuBpB,EAAK1M,GAAGA,GAA/B,aAC7E2J,EAAA7F,EAAAC,cAAC8/B,EAAA,iBAAgBhjC,IAAM6L,EAAK1M,GAAGA,IAC3B2J,EAAA7F,EAAAC,cAACw/B,IACGvjC,GAAE,GAAA8N,OAAMpB,EAAK1M,GAAGA,GAAd,WACF8jC,gBAAA,GAAAh2B,OAAmBpB,EAAK1M,GAAGA,GAA3B,WACAyE,QAAU,kBAnBX,SAAAzE,GACX,IAAMoM,EAAW3C,EACXs6B,EAAM33B,EAASixB,QAAQr9B,GACvBgkC,EACdD,GAAO,KAAPj2B,OAAAC,IAEW3B,EAASmZ,MAAM,EAAGwe,IAF7Bh2B,IAGW3B,EAASmZ,MAAMwe,EAAM,EAAG33B,EAASjK,aAH5C2L,OAAAC,IAKW3B,IAAUpM,IACb0J,EAAcs6B,GAScC,CAAM,GAAAn2B,OAAIpB,EAAK1M,GAAGA,GAAZ,aACtByJ,WAAaA,EAAWyF,SAAX,GAAApB,OAAuBpB,EAAK1M,GAAGA,GAA/B,cAEjB2J,EAAA7F,EAAAC,cAACs/B,IACGa,eACIv6B,EAAA7F,EAAAC,cAACo/B,IAAatiC,IAAMyzB,KAChB3qB,EAAA7F,EAAAC,cAAA,KAAGO,KAAOoI,EAAK1M,GAAGmkC,WAAa5/B,OAAO,SAASC,IAAI,uBAC7Co/B,EApDrB,KAqDoBj6B,EAAA7F,EAAAC,cAAA,QAAM0B,OAAU+C,MAAO,UAAW47B,WAAY,SAA9C,UACWz6B,EAAA7F,EAAAC,cAACk/B,GAAD,MADX,KAFL,OAAAn1B,OAOSpB,EAAK1M,GAAGA,GAPjB,OAAA8N,OAOyBpB,EAAK1M,GAAGqkC,iBAGrC16B,EAAA7F,EAAAC,cAACo/B,IAAatiC,IAAMyzB,KAEdsP,GA/DjB,KAgEmBj6B,EAAA7F,EAAAC,cAAA,QAAM0B,OAAU+C,MAAO,UAAW47B,WAAY,SAA9C,WAHR,IAMIz6B,EAAA7F,EAAAC,cAACg/B,IAAUhiC,OAAS2L,EAAK3L,UAE7B4I,EAAA7F,EAAAC,cAACmN,EAAA,SAAQrQ,IAAMyzB,IAAUljB,QAAUzH,EAAA7F,EAAAC,cAAA,SAAK2I,EAAK43B,eACzC36B,EAAA7F,EAAAC,cAACo/B,GAAD,KACMS,GAvErB,KAwEmBj6B,EAAA7F,EAAAC,cAAA,QAAM0B,OAAU+C,MAAO,UAAW47B,WAAY,SAA9C,YAFJ,IAKM13B,EAAK43B,eAGf36B,EAAA7F,EAAAC,cAACo/B,IAAatiC,IAAMyzB,KACdsP,GA/EjB,KAgFgBj6B,EAAA7F,EAAAC,cAAA,QAAM0B,OAAU+C,MAAO,UAAW47B,WAAY,SAA9C,iBAFL,IAKM13B,EAAK63B,UAEX56B,EAAA7F,EAAAC,cAACo/B,IAAatiC,IAAMyzB,KACdsP,GAtFjB,KAuFgBj6B,EAAA7F,EAAAC,cAAA,QAAM0B,OAAU+C,MAAO,UAAW47B,WAAY,SAA9C,SAFL,IAKM9kC,OAAAwsB,EAAA,EAAAxsB,CAAcoN,EAAKzL,eAKrC0I,EAAA7F,EAAAC,cAACygC,EAAA,iBACGz6B,aAAA,GAAA+D,OAAgBpB,EAAK1M,GAAGA,GAAxB,YACAA,GAAK,gBACLykC,UAAYh7B,EAAWyF,SAAX,GAAApB,OAAuBpB,EAAK1M,GAAGA,GAA/B,aAEZ2J,EAAA7F,EAAAC,cAACs/B,IACGa,eACIv6B,EAAA7F,EAAAC,cAACo/B,IAAatiC,IAAMyzB,KAApB,YACeh1B,OAAAwsB,EAAA,EAAAxsB,CAAeoN,EAAK2kB,UAEnC1nB,EAAA7F,EAAAC,cAACo/B,IAAatiC,IAAMyzB,KAApB,YACeh1B,OAAAwsB,EAAA,EAAAxsB,CAAeoN,EAAKg4B,UAEnC/6B,EAAA7F,EAAAC,cAACo/B,IAAatiC,IAAMyzB,KAApB,aACgBh1B,OAAAwsB,EAAA,EAAAxsB,CAAeoN,EAAKi4B,oBAYlEC,GAAkB,SAAAnlC,GAAc,IAAXqwB,EAAWrwB,EAAXqwB,KAAW1gB,EACM9P,OAAAiK,EAAA,SAAAjK,CAASoF,OAAOmgC,YADtBx1B,EAAA7F,IAAA4F,EAAA,GAC1Bw0B,EAD0Bv0B,EAAA,GACby1B,EADaz1B,EAAA,GAG5B01B,EAAW,kBAAMD,EAAepgC,OAAOmgC,aAO7C,OALAvlC,OAAAiK,EAAA,UAAAjK,CAAU,WAEN,OADAoF,OAAOojB,iBAAiB,SAAUid,GAC3B,kBAAMrgC,OAAOqjB,oBAAoB,SAAUgd,SAG/CtB,GAAa3T,EAAM,EAAiB,WAAY8T,IAGrDoB,GAAkB,SAAAtkC,GAAc,IAAXovB,EAAWpvB,EAAXovB,KAAWkG,EACM12B,OAAAiK,EAAA,SAAAjK,CAASoF,OAAOmgC,YADtB5O,EAAAzsB,IAAAwsB,EAAA,GAC1B4N,EAD0B3N,EAAA,GACb6O,EADa7O,EAAA,GAG5B8O,EAAW,kBAAMD,EAAepgC,OAAOmgC,aAO7C,OALAvlC,OAAAiK,EAAA,UAAAjK,CAAU,WAEN,OADAoF,OAAOojB,iBAAiB,SAAUid,GAC3B,kBAAMrgC,OAAOqjB,oBAAoB,SAAUgd,SAIlDp7B,EAAA7F,EAAAC,cAAA4F,EAAA7F,EAAAK,SAAA,KACK2rB,EAAK3tB,QAAU,GAAKwH,EAAA7F,EAAAC,cAAC2qB,EAAA,EAAD,MACrB/kB,EAAA7F,EAAAC,cAACiwB,EAAA,UAASiR,WAAS,GACbrB,GApJO,KAEL,SAAAsB,GAAM,OACtBv7B,EAAA7F,EAAAC,cAAC6vB,EAAA,aAAD,KACIjqB,EAAA7F,EAAAC,cAAC8/B,EAAA,iBAAgBp+B,OAAUopB,YAAa,SACpCllB,EAAA7F,EAAAC,cAACs/B,IACGa,cAAgBgB,EAAO56B,IAAI,SAAAyG,GAAK,OAC5BpH,EAAA7F,EAAAC,cAACq/B,IAAmBviC,IAAMkQ,GACpBA,EACU,YAAVA,GACIpH,EAAA7F,EAAAC,cAACk/B,GAAD,aA0IuBkC,CAAYnC,IACjDr5B,EAAA7F,EAAAC,cAAC6gC,IAAgB9U,KAAOA,EAAO8T,YAAcA,OAM7DoB,GAAgBngC,WACZirB,KAAMrlB,EAAA3G,EAAU4G,MAChBk5B,YAAan5B,EAAA3G,EAAU8kB,QAG3Bgc,GAAgB//B,WACZirB,KAAMrlB,EAAA3G,EAAU4G,MAChBk5B,YAAan5B,EAAA3G,EAAU8kB,QAGZ,IAAAwc,GAAA,aC1LTC,KACA9W,MAAO,IAAK5uB,MAAO,IACnB4uB,MAAO,KAAM5uB,MAAO,KACpB4uB,MAAO,KAAM5uB,MAAO,KACpB4uB,MAAO,KAAM5uB,MAAO,KACpB4uB,MAAO,KAAM5uB,MAAO,KAGpBqxB,GAAqBpE,OACpBoB,EAAA,EAAYnlB,eACfD,WAAYolB,EAAA,EAAYplB,aAGtB08B,GAAgB,SAAAh5B,GACuBA,EAAjCi5B,QAAiCj5B,EAAxB1D,WACjB,OAF6BmG,IACYzC,GADZ,0BAK3Bk5B,GAAc,SAAA/lC,GAGd,IAFUuiB,EAEVviB,EAFFkF,SAAYqd,OACZH,EACEpiB,EADFoiB,QACE5a,EAC4C3H,OAAAiK,EAAA,SAAAjK,CAAS,MADrD6H,EAAAqC,IAAAvC,EAAA,GACMpD,EADNsD,EAAA,GACsB4xB,EADtB5xB,EAAA,GAAA4lB,EAOaztB,OAAA0tB,EAAA,EAAA1tB,EAASmhC,QAAUhT,WAPhCR,EAAAzjB,IAAAujB,EAAA,GAAA0Y,EAAAxY,EAAA,GAGEvmB,EAHF++B,EAGE/+B,UACAC,EAJF8+B,EAIE9+B,UACA/C,EALF6hC,EAKE7hC,MALF8hC,EAAAD,EAME7+B,KANF++B,EAAAD,EAMUjF,YANV,IAAAkF,OAAAC,EAAAF,EAMqBjY,MAAO7mB,OAN5B,IAAAg/B,OAOCC,EAPD5Y,EAAA,GAAA7d,EAQgC9P,OAAAiK,EAAA,SAAAjK,CAAS,GARzC+P,EAAA7F,IAAA4F,EAAA,GAQM02B,EARNz2B,EAAA,GAQgB02B,EARhB12B,EAAA,GAAA+d,EAS8B9tB,OAAA0tB,EAAA,EAAA1tB,IAAWgmC,IATzCjY,EAAA7jB,IAAA4jB,EAAA,GASM9gB,EATN+gB,EAAA,GASeC,EATfD,EAAA,GAWE2Y,EAAsB1mC,OAAA2iB,EAAA,MAAA3iB,CAAM0iB,GAAUE,YAAa,UAAW+jB,eAAe,IAC7EC,EAAWtZ,OAAKoE,GAAuBgV,GAZzCjY,EAkBEzuB,OAAAH,EAAA,EAAAG,CAAe4mC,GAJfzkC,EAdFssB,EAcEtsB,YACAG,EAfFmsB,EAeEnsB,SACAC,EAhBFksB,EAgBElsB,UACAG,EAjBF+rB,EAiBE/rB,eAYJ1C,OAAAiK,EAAA,UAAAjK,CAAU,WACNkI,SAASC,OAAOgzB,aAAcz6B,GAAI,eAAgB06B,cAAc,IAEhEh2B,OAAO8C,SAASC,OAAOC,KAAKC,UAC3BC,KAAK,kBACFtI,OAAA6uB,EAAA,EAAA7uB,GACCuI,MAAM,SAACjE,GAAYm1B,GAAoBl1B,eAAgBD,aAKhEtE,OAAAiK,EAAA,UAAAjK,CAAU,WACNumC,EAAQvmC,OAAA6uB,EAAA,EAAA7uB,EAAkB8uB,OAAQ3sB,KAClC6rB,EAAWhuB,OAAA6uB,EAAA,EAAA7uB,EAAyB8uB,OAAQ3sB,KAtB9B,WAAM,IACZgH,EAAgB2Z,EAAA,EAAhB3Z,YACFuZ,EAAS1iB,OAAA2iB,EAAA,UAAA3iB,CAAUmC,GAAeygB,YAAa,YACrDL,EAAQwD,SACJlD,SAAU1Z,EACVuZ,WAkBJmkB,KACC1kC,IAEL,IAAM2kC,EAAkB,SAAAC,GAAI,OAAKA,EAAO,GAAK5kC,EAAYvB,OAEnDomC,EAAgB,SAAAD,GAClB,IAAME,EAAaH,EAAgBC,GACnCxkC,EAAU0kC,GACVR,EAAYM,IAGVG,GAAsB,SAACC,EAASJ,GAClCzkC,EAAS6kC,GACT,IAAMF,EAAaH,EAAgBC,GACnCxkC,EAAU0kC,GACVR,EAAYM,IAGhB,OACI18B,EAAA7F,EAAAC,cAAC4F,EAAA7F,EAAMK,SAAP,KACIwF,EAAA7F,EAAAC,cAACuqB,EAAA,WAAD,KACI3kB,EAAA7F,EAAAC,cAACuqB,EAAA,iBAAgBC,MAAQ,kBAG3B1qB,GACE8F,EAAA7F,EAAAC,cAACyqB,EAAA,KAAD,KACI7kB,EAAA7F,EAAAC,cAAC0qB,EAAA,EAAgB5qB,KAItBA,GACC8F,EAAA7F,EAAAC,cAACyqB,EAAA,KAAD,KACI7kB,EAAA7F,EAAAC,cAACuM,EAAA,KAAD,KACI3G,EAAA7F,EAAAC,cAAC8M,EAAA,SAAD,KACIlH,EAAA7F,EAAAC,cAACyL,GAAA,GACGlG,WAAagD,EAAQ1F,KACrB0H,QAAU7M,EACV8M,WAAavM,EACbyM,WACI9E,EAAA7F,EAAAC,cAAC2iC,EAAA,YACGC,UAAYlG,GAAQA,EAAKnM,MAAQmM,EAAKnM,MAAQ,EAC9CsS,SAAS,8BACTvB,eAAiBA,GACjBoB,QAAUhlC,EAAYvB,MACtBmmC,KAAOP,EACP9hC,QAAU0iC,EAAA,kBAAkB7gC,IAC5BghC,gBAAkB,SAAC38B,EAAQu8B,EAASJ,GAChCG,GAAoBC,EAASJ,IAEjCS,UAAY,SAAC58B,EAAQ68B,GACjBT,EAAcS,IAElB9B,WAAS,IAGjBt2B,aAAW,IAEb/K,GAAS+F,EAAA7F,EAAAC,cAACsE,EAAA,GAAcC,QAAU1E,EAAMA,QACxC8C,GAAaiD,EAAA7F,EAAAC,cAAC2qB,EAAA,EAAD,MACb/nB,GAAaC,EAAKzE,QAAU,GAAKwH,EAAA7F,EAAAC,cAAC89B,EAAD,MACjCl7B,GAAaC,EAAKzE,OAAS,GAAKwH,EAAA7F,EAAAC,cAACqhC,IAAgBtV,KAAOlpB,IAC1D+C,EAAA7F,EAAAC,cAAC2iC,EAAA,YACGC,UAAYlG,GAAQA,EAAKnM,MAAQmM,EAAKnM,MAAQ,EAC9CsS,SAAS,iCACTvB,eAAiBA,GACjBoB,QAAUhlC,EAAYvB,MACtBmmC,KAAOP,EACP9hC,QAAU0iC,EAAA,kBAAkB5gC,OAC5B+gC,gBAAkB,SAAC38B,EAAQu8B,EAASJ,GAChCG,GAAoBC,EAASJ,IAEjCS,UAAY,SAAC58B,EAAQ68B,GACjBT,EAAcS,IAElBthC,OAAUm2B,UAAW,eAUrD4J,GAAY3gC,WACRF,SAAU8F,EAAA3G,EAAUgB,OACpB+c,QAASpX,EAAA3G,EAAUgB,QAGRC,EAAA,u8BC5Kf,IAAMiiC,EAAsB1nC,OAAA4oB,EAAA,EAAA5oB,CAAO4jC,EAAAp/B,EAAPxE,CAAH6oB,KAMnB8e,EAA6B3nC,OAAA4oB,EAAA,EAAA5oB,CAAO4nC,EAAA,2BAAP5nC,CAAH+qB,KAW1B8c,EAAyB7nC,OAAA4oB,EAAA,EAAA5oB,CAAO8nC,EAAA,uBAAP9nC,CAAHirB,KAOtB8c,EAAgB,SAACzX,GACnB,IAAM0X,EAAMxO,IAAOlJ,GAEb2X,EAAMzO,MAAS0O,MAErB,OAAID,EAAIE,QAAQH,GACZ,GAAAx5B,OAAUy5B,EAAIG,KAAKJ,EAAK,QAAxB,gBAGAA,EAAIK,OAAOJ,EAAK,OACZD,EAAIM,UARI,KASR,GAAA95B,OAAWw5B,EAAII,KAAKH,EAAK,SAAzB,iBAGJ,GAAAz5B,OAAUy5B,EAAIG,KAAKJ,EAAK,WAAxB,wBALJ,GASEO,EAA0B,SAAApoC,GAAA,OAAAA,EAAGqoC,cACjBx9B,IACV,SAAA5J,GAAmE,IAAhEkvB,EAAgElvB,EAAhEkvB,KAAMtnB,EAA0D5H,EAA1D4H,QAASyI,EAAiDrQ,EAAjDqQ,MAAwB/Q,EAAyBU,EAA1CqnC,gBAAgCC,EAAUtnC,EAArBunC,UAC1C,MAAc,KAAVl3B,GAA0B,WAAVA,EAEZpH,EAAA7F,EAAAC,cAACkjC,GACGjjC,QAAQ,OACRnD,IAAM+uB,EAAO,IAAM5vB,GAEnB2J,EAAA7F,EAAAC,cAACmkC,EAAA,kCACGlkC,QAAQ,OACRuqB,MACA5kB,EAAA7F,EAAAC,cAAA4F,EAAA7F,EAAAK,SAAA,KACI6jC,EACEr+B,EAAA7F,EAAAC,cAAA,KAAGQ,OAAO,SAASC,IAAI,sBAAsBF,KAAO0jC,GAC9C1oC,OAAAwsB,EAAA,EAAAxsB,CAAWyR,GACbpH,EAAA7F,EAAAC,cAACijC,EAAD,OAEJ1nC,OAAAwsB,EAAA,EAAAxsB,CAAWyR,MAIrBpH,EAAA7F,EAAAC,cAACokC,EAAA,+BAAD,KACM7/B,EAAW,MAMf,UAAVyI,EAEIpH,EAAA7F,EAAAC,cAACkjC,GACGjjC,QAAQ,SACRnD,IAAM+uB,EAAO,IAAM5vB,GAEnB2J,EAAA7F,EAAAC,cAACmkC,EAAA,kCACGlkC,QAAQ,SACRuqB,MACA5kB,EAAA7F,EAAAC,cAAA4F,EAAA7F,EAAAK,SAAA,KACI6jC,EACEr+B,EAAA7F,EAAAC,cAAA,KAAGQ,OAAO,SAASC,IAAI,sBAAsBF,KAAO0jC,GAC9C1oC,OAAAwsB,EAAA,EAAAxsB,CAAWyR,GACbpH,EAAA7F,EAAAC,cAACijC,EAAD,OAEJ1nC,OAAAwsB,EAAA,EAAAxsB,CAAWyR,MAIrBpH,EAAA7F,EAAAC,cAACokC,EAAA,gCAA+BC,UAAYf,EAAczX,IACpDtnB,EAAW,MAMf,YAAVyI,EAEIpH,EAAA7F,EAAAC,cAACkjC,GACGjjC,QAAQ,UACRnD,IAAM+uB,EAAO,IAAM5vB,GAEnB2J,EAAA7F,EAAAC,cAACmkC,EAAA,kCACGlkC,QAAQ,UACRuqB,MACA5kB,EAAA7F,EAAAC,cAAA4F,EAAA7F,EAAAK,SAAA,KACI6jC,EACEr+B,EAAA7F,EAAAC,cAAA,KAAGQ,OAAO,SAASC,IAAI,sBAAsBF,KAAO0jC,GAC9C1oC,OAAAwsB,EAAA,EAAAxsB,CAAWyR,GACbpH,EAAA7F,EAAAC,cAACijC,EAAD,OAEJ1nC,OAAAwsB,EAAA,EAAAxsB,CAAWyR,MAIrBpH,EAAA7F,EAAAC,cAACokC,EAAA,gCAA+BC,UAAYf,EAAczX,IACpDtnB,EAAW,WApB7B,KA4BN+/B,EAA4B,SAAA1nC,GAAA,OAAAA,EAAGmnC,cAEhCl8B,OAAO,SAAA08B,GAAY,MAA2B,UAAvBA,EAAav3B,QACpCzG,IAAI,SAAA0wB,GAAA,IAAG1yB,EAAH0yB,EAAG1yB,QAASsnB,EAAZoL,EAAYpL,KAAM7e,EAAlBiqB,EAAkBjqB,MAAwB/Q,EAA1Cg7B,EAAyB+M,gBAAgCC,EAAzDhN,EAA8CiN,UAA9C,OACDt+B,EAAA7F,EAAAC,cAACkjC,GACGjjC,QAAQ,SACRnD,IAAM+uB,EAAO,IAAM5vB,GAEnB2J,EAAA7F,EAAAC,cAACmkC,EAAA,kCACGlkC,QAAQ,SACRuqB,MACA5kB,EAAA7F,EAAAC,cAAA4F,EAAA7F,EAAAK,SAAA,KACI6jC,EACEr+B,EAAA7F,EAAAC,cAAA,KAAGQ,OAAO,SAASC,IAAI,sBAAsBF,KAAO0jC,GAC9C1oC,OAAAwsB,EAAA,EAAAxsB,CAAWyR,GACbpH,EAAA7F,EAAAC,cAACijC,EAAD,OAEJ1nC,OAAAwsB,EAAA,EAAAxsB,CAAWyR,MAKrBpH,EAAA7F,EAAAC,cAACokC,EAAA,gCAA+BC,UAAYf,EAAczX,IACpDtnB,EAAW,SAKvBigC,EAA6B,SAAAtN,GAAA,OAAAA,EAAG6M,cAEjCl8B,OAAO,SAAA08B,GAAY,MAA2B,WAAvBA,EAAav3B,QACpCzG,IAAI,SAAAkxB,GAAA,IAAGlzB,EAAHkzB,EAAGlzB,QAASsnB,EAAZ4L,EAAY5L,KAAM7e,EAAlByqB,EAAkBzqB,MAAwB/Q,EAA1Cw7B,EAAyBuM,gBAAgCC,EAAzDxM,EAA8CyM,UAA9C,OACDt+B,EAAA7F,EAAAC,cAACkjC,GACGjjC,QAAQ,OACRnD,IAAM+uB,EAAO,IAAM5vB,GAEnB2J,EAAA7F,EAAAC,cAACmkC,EAAA,kCACGlkC,QAAQ,OACRuqB,MACA5kB,EAAA7F,EAAAC,cAAA4F,EAAA7F,EAAAK,SAAA,KACI6jC,EACEr+B,EAAA7F,EAAAC,cAAA,KAAGQ,OAAO,SAASC,IAAI,sBAAsBF,KAAO0jC,GAC9C1oC,OAAAwsB,EAAA,EAAAxsB,CAAWyR,GACbpH,EAAA7F,EAAAC,cAACijC,EAAD,OAEJ1nC,OAAAwsB,EAAA,EAAAxsB,CAAWyR,MAKrBpH,EAAA7F,EAAAC,cAACokC,EAAA,gCAAgCC,UAAYf,EAAczX,IACrDtnB,EAAW,SAKvBkgC,EAA8B,SAAAC,GAAA,OAAAA,EAAGX,cAElCl8B,OAAO,SAAA08B,GAAY,MAA2B,YAAvBA,EAAav3B,QACpCzG,IAAI,SAAAo+B,GAAA,IAAGpgC,EAAHogC,EAAGpgC,QAASsnB,EAAZ8Y,EAAY9Y,KAAM7e,EAAlB23B,EAAkB33B,MAAwB/Q,EAA1C0oC,EAAyBX,gBAAgCC,EAAzDU,EAA8CT,UAA9C,OACDt+B,EAAA7F,EAAAC,cAACkjC,GACGjjC,QAAQ,UACRnD,IAAM+uB,EAAO,IAAM5vB,GAEnB2J,EAAA7F,EAAAC,cAACmkC,EAAA,kCACGlkC,QAAQ,UACRuqB,MACA5kB,EAAA7F,EAAAC,cAAA4F,EAAA7F,EAAAK,SAAA,KACI6jC,EACEr+B,EAAA7F,EAAAC,cAAA,KAAGQ,OAAO,SAASC,IAAI,sBAAsBF,KAAO0jC,GAC9C1oC,OAAAwsB,EAAA,EAAAxsB,CAAWyR,GACbpH,EAAA7F,EAAAC,cAACijC,EAAD,OAEJ1nC,OAAAwsB,EAAA,EAAAxsB,CAAWyR,MAKrBpH,EAAA7F,EAAAC,cAACokC,EAAA,gCAAgCC,UAAYf,EAAczX,IACrDtnB,EAAW,SAKvBqgC,EAAoB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,SAAUf,EAAbc,EAAad,cAAb,OACxBn+B,EAAA7F,EAAAC,cAAA4F,EAAA7F,EAAAK,SAAA,KACEwF,EAAA7F,EAAAC,cAACojC,EAAD,KACMW,EAAc3lC,QAAU,GAAKwH,EAAA7F,EAAAC,cAAC2qB,EAAA,EAAD,MAChB,KAAbma,GACEl/B,EAAA7F,EAAAC,cAAC8jC,GAAwBC,cAAgBA,IAE9B,WAAbe,GACEl/B,EAAA7F,EAAAC,cAACwkC,GAA2BT,cAAgBA,IAEjC,UAAbe,GACEl/B,EAAA7F,EAAAC,cAACskC,GAA0BP,cAAgBA,IAEhC,YAAbe,GACEl/B,EAAA7F,EAAAC,cAACykC,GAA4BV,cAAgBA,OAMzDD,EAAwBhjC,WACpBijC,cAAer9B,EAAA3G,EAAU4G,OAG7B29B,EAA0BxjC,WACtBijC,cAAer9B,EAAA3G,EAAU4G,OAG7B89B,EAA4B3jC,WACxBijC,cAAer9B,EAAA3G,EAAU4G,OAG7Bi+B,EAAkB9jC,WACdijC,cAAer9B,EAAA3G,EAAU4G,MACzBm+B,SAAUp+B,EAAA3G,EAAUkC,QAGT,IAAA8iC,EAAA,+lBCzOf,IAAMC,GAAYzpC,OAAA4oB,EAAA,EAAA5oB,CAAOsR,EAAA,UAAPtR,CAAH0pC,KASTC,GAAgB/gB,EAAA,EAAOa,IAAVmgB,KAuBbC,KAEExpC,MAAO,gBACPoR,MAAO,+BACP6nB,UAAU,IAEZj5B,MAAO,QAASoR,MAAO,gBAAiB6nB,UAAU,IAClDj5B,MAAO,UAAWoR,MAAO,eAAgB6nB,UAAU,IACnDj5B,MAAO,SAAUoR,MAAO,cAAe6nB,UAAU,IACjDj5B,MAAO,GAAIoR,MAAO,WAAY6nB,UAAU,IAGxCyM,KACA9W,MAAO,IAAK5uB,MAAO,IACnB4uB,MAAO,KAAM5uB,MAAO,KACpB4uB,MAAO,KAAM5uB,MAAO,KACpB4uB,MAAO,KAAM5uB,MAAO,KACpB4uB,MAAO,MAAO5uB,MAAO,MAG3B,SAASk7B,GAAkBj0B,GAMvB,OAAOA,EAAKmG,OACR,SAACqkB,EAAD3xB,GAA8D,IAAhDsR,EAAgDtR,EAAhDsR,MAAmB/Q,EAA6BP,EAAzC0B,WAA8By5B,EAAWn7B,EAAzB44B,aAOjC,OANqB,IAAjBtnB,EAAM5O,OACNivB,EAAUhkB,MAAOzN,MAAOK,EAAI+Q,MAAO6pB,EAAMhC,UAAU,IAEnDxH,EAAUhkB,MAAOzN,MAAOK,EAAI+Q,QAAO6nB,UAAU,IAG1CxH,KAZTzxB,MAAO,gBAAiBoR,MAAO,iBAAkB6nB,UAAU,IAC3Dj5B,MAAO,GAAIoR,MAAO,eAAgB6nB,UAAU,IAC5Cj5B,OAAQ,EAAGoR,MAAO,eAAgB6nB,UAAU,KAgBtD,IAAM5H,IACF9wB,MAAO,EACP4B,OAAQ,GAmNGiD,EAAA,QAhNO,WAAM,IAAAkC,EACsB3H,OAAAiK,EAAA,SAAAjK,CAAS,MAD/B6H,EAAAqC,IAAAvC,EAAA,GAChBpD,EADgBsD,EAAA,GACA4xB,EADA5xB,EAAA,GAAAiI,EAE4B9P,OAAAiK,EAAA,SAAAjK,KAF5B+P,EAAA7F,IAAA4F,EAAA,GAEhBg6B,EAFgB/5B,EAAA,GAEGg6B,EAFHh6B,EAAA,GAAA2mB,EAGsB12B,OAAAiK,EAAA,SAAAjK,KAHtB22B,EAAAzsB,IAAAwsB,EAAA,GAGhB4D,EAHgB3D,EAAA,GAGA4D,EAHA5D,EAAA,GAAAG,EAIwB92B,OAAAiK,EAAA,SAAAjK,CAAS,IAJjC+2B,EAAA7sB,IAAA4sB,EAAA,GAIhBgE,EAJgB/D,EAAA,GAICgE,EAJDhE,EAAA,GAAAiD,EAKgBh6B,OAAAiK,EAAA,SAAAjK,EAAS,GALzBi6B,EAAA/vB,IAAA8vB,EAAA,GAKhBgQ,EALgB/P,EAAA,GAKHgQ,EALGhQ,EAAA,GAAAG,EAMYp6B,OAAAiK,EAAA,SAAAjK,EAAS,GANrBq6B,EAAAnwB,IAAAkwB,EAAA,GAMhBhzB,EANgBizB,EAAA,GAMLa,EANKb,EAAA,GAAAG,EAOEx6B,OAAAiK,EAAA,SAAAjK,KAPFy6B,EAAAvwB,IAAAswB,EAAA,GAOhB2G,EAPgB1G,EAAA,GAOVyP,EAPUzP,EAAA,GAAAG,EAQU56B,OAAAiK,EAAA,SAAAjK,CAAS,GARnB66B,EAAA3wB,IAAA0wB,EAAA,GAQhB4L,EARgB3L,EAAA,GAQN4L,EARM5L,EAAA,GAAApM,EAepBzuB,OAAAH,EAAA,EAAAG,CAAe0xB,IALfvvB,EAVoBssB,EAUpBtsB,YACAgB,EAXoBsrB,EAWpBtrB,MACAb,GAZoBmsB,EAYpBnsB,SACAC,GAboBksB,EAapBlsB,UACAE,GAdoBgsB,EAcpBhsB,YAGJzC,OAAAiK,EAAA,UAAAjK,CAAU,WACFgqC,GAQQ,eAAA5oC,EAAA81B,IAAAC,EAAA3yB,EAAA4yB,KAAG,SAAAC,IAAA,OAAAF,EAAA3yB,EAAA8yB,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACXyD,GAAa,GADF3D,EAAAE,KAAA,EAELryB,OAAO8C,SAASC,OAAOC,KAAKC,UAFvB,OAHJrI,OAAA6uB,EAAA,EAAA7uB,EAAoB8uB,OAAQ3sB,IAMzBmG,KACN,SAAAjH,GAAqD,IAAA8oC,EAAA9oC,EAAlDmnC,cAAesB,OAAmC,IAAAK,OAAXhJ,EAAW9/B,EAAX8/B,KACtC4I,EAAqBD,GACrBI,EAAQ/I,GACRjG,GAAa,KAPV,wBAAA3D,EAAAI,SAAAN,MAAH,yBAAAj2B,EAAAw2B,MAAA3U,KAAArgB,YAAA,EAYZi1B,KACC11B,IAELnC,OAAAiK,EAAA,UAAAjK,CAAU,WACNkI,SAASC,OAAOgzB,aAAcz6B,GAAI,gBAAiB06B,cAAc,IAEjE,IAAIgP,GAAS,EACPC,EAAiB,WACnB,OAAO7O,QAAQC,KACTz7B,OAAA6uB,EAAA,EAAA7uB,GAAgBA,OAAA6uB,EAAA,EAAA7uB,EAAoB8uB,OAAQ3sB,KAAiB6I,IAAI,SAAAs/B,GAAC,OAChEA,EAAE/hC,MAAM,0BAPR,SAAAgiC,IAAA,OAAAA,EAAArT,IAAAC,EAAA3yB,EAAA4yB,KAYZ,SAAAoT,IAAA,OAAArT,EAAA3yB,EAAA8yB,KAAA,SAAAmT,GAAA,cAAAA,EAAAjT,KAAAiT,EAAAhT,MAAA,cACIyD,GAAa,GADjBuP,EAAAhT,KAAA,EAEUryB,OAAO8C,SAASC,OAAOC,KAAKC,UAFtC,cAAAoiC,EAAAhT,KAAA,EAGUz3B,OAAA6uB,EAAA,EAAA7uB,GAAmBuI,MAAM,SAAAjE,GAC3Bm1B,GAAoBl1B,eAAgBD,MAJ5C,OAMI+lC,IAAiB/hC,KACb,SAAAozB,GAGM,IAAAC,EAAAzxB,IAAAwxB,EAAA,GAAAgP,EAAA/O,EAAA,GAFAtF,UAAWsU,OAEX,IAAAD,OAAAE,EAAAjP,EAAA,GAAAkP,EAAAD,EADApC,cAAesB,OACf,IAAAe,OADuC1J,EACvCyJ,EADuCzJ,KAEzC,IAAKiJ,EAAQ,CACT,IAAM9P,EAAiBiB,GAAkBoP,GACzCpQ,EAAkBD,GAClByP,EAAqBD,GACrBI,EAAQ/I,GACR8I,GAAe,GACf/O,GAAa,MAjB7B,wBAAAuP,EAAA9S,SAAA6S,OAZY5S,MAAA3U,KAAArgB,WAoCZ,OApCY,WAAA2nC,EAAA3S,MAAA3U,KAAArgB,WAmCZkoC,GACO,kBAAOV,GAAS,QAG3B,IAAMtD,GAAkB,SAAAC,GAEpB,OADiBA,EAAO,GAAK5kC,EAAYvB,OAIvComC,GAAgB,SAAAD,GAClB,IAAME,EAAaH,GAAgBC,GACnCxkC,GAAU0kC,GACVR,EAAYM,IAGVG,GAAsB,SAACC,EAASJ,GAClCzkC,GAAS6kC,GACT,IAAMF,EAAaH,GAAgBC,GACnCxkC,GAAU0kC,GACVR,EAAYM,IAGhB,OACI18B,EAAA7F,EAAAC,cAAC4F,EAAA7F,EAAMK,SAAP,KACIwF,EAAA7F,EAAAC,cAACuqB,EAAA,WAAD,KACI3kB,EAAA7F,EAAAC,cAACuqB,EAAA,iBAAgBC,MAAQ,mBAE3B1qB,GACE8F,EAAA7F,EAAAC,cAACyqB,EAAA,KAAD,KACI7kB,EAAA7F,EAAAC,cAAC0qB,EAAA,EAAgB5qB,KAGtBA,GACP8F,EAAA7F,EAAAC,cAAA4F,EAAA7F,EAAAK,SAAA,KACEwF,EAAA7F,EAAAC,cAACyqB,EAAA,KAAD,KACI7kB,EAAA7F,EAAAC,cAACuM,EAAA,KAAD,KACI3G,EAAA7F,EAAAC,cAACglC,GAAD,KACIp/B,EAAA7F,EAAAC,cAACklC,GAAD,KACIt/B,EAAA7F,EAAAC,cAACw3B,EAAA,YACGhxB,KAAK,kBACL5K,MAAQy6B,EACRhvB,SAAW,SAAAzL,GACP06B,EAAmB16B,GACnB8C,EAAM9C,GACNkC,GAAU,GACVkkC,EAAY,IAEhBh8B,aAAW,kBAET6vB,EAAetvB,IAAI,SAAAkxB,EAA6BnH,GAA7B,IAAG10B,EAAH67B,EAAG77B,MAAOoR,EAAVyqB,EAAUzqB,MAAO6nB,EAAjB4C,EAAiB5C,SAAjB,OACjBjvB,EAAA7F,EAAAC,cAAC03B,EAAA,kBACGC,WAAa9C,EACb/3B,IAAMwzB,EACN10B,MAAQA,EACRoR,MAAQA,OAIpBpH,EAAA7F,EAAAC,cAACw3B,EAAA,YACGhxB,KAAK,uBACL5K,MAAQ8B,EAAYnB,UAAY,GAChC8K,SAAW,SAAAzL,GACPoC,GAAYpC,GACZkC,GAAU,GACVkkC,EAAY,IAEhBh8B,aAAW,4BAETo/B,GAAoB7+B,IAClB,SAAAm+B,EAA6BpU,GAA7B,IAAGuE,EAAH6P,EAAG7P,SAAUj5B,EAAb8oC,EAAa9oC,MAAOoR,EAApB03B,EAAoB13B,MAApB,OACIpH,EAAA7F,EAAAC,cAAC03B,EAAA,kBACGC,WAAa9C,EACb/3B,IAAMwzB,EACN10B,MAAQA,EACRoR,MAAQA,QAM5BpH,EAAA7F,EAAAC,cAAC2iC,EAAA,YACGC,UAAYlG,GAAQA,EAAKnM,MAAQmM,EAAKnM,MAAQ,EAC9CsS,SAAS,8BACTvB,eAAiBA,GACjBoB,QAAUhlC,EAAYvB,MACtBmmC,KAAOP,EACP9hC,QAAU0iC,EAAA,kBAAkB7gC,IAC5BghC,gBAAkB,SAAC38B,EAAQu8B,EAASJ,GAChCG,GAAoBC,EAASJ,IAEjCS,UAAY,SAAC58B,EAAQ68B,GACjBT,GAAcS,IAElB9B,WAAS,KAGjBt7B,EAAA7F,EAAAC,cAAC8M,EAAA,SAAD,KACMnK,GAAaiD,EAAA7F,EAAAC,cAAC2qB,EAAA,EAAD,OACZhoB,GAAa0iC,EAAkBjnC,QAAU,GAAKwH,EAAA7F,EAAAC,cAAC4qB,EAAA,EAAD,OAC9CjoB,GAAa0iC,EAAkBjnC,OAAS,GACvCwH,EAAA7F,EAAAC,cAACsmC,EAAA,mBAAD,KACI1gC,EAAA7F,EAAAC,cAAC+kC,GACGD,SAAWpnC,EAAYnB,UAAY,GACnCgM,QAAU68B,GACVrB,cAAgBsB,KAI5Bz/B,EAAA7F,EAAAC,cAAC2iC,EAAA,YACGC,UAAYlG,GAAQA,EAAKnM,MAAQmM,EAAKnM,MAAQ,EAC9CsS,SAAS,iCACTvB,eAAiBA,GACjBoB,QAAUhlC,EAAYvB,MACtBmmC,KAAOP,EACP9hC,QAAU0iC,EAAA,kBAAkB5gC,OAC5B+gC,gBAAkB,SAAC38B,EAAQu8B,EAASJ,GAChCG,GAAoBC,EAASJ,IAEjCS,UAAY,SAAC58B,EAAQ68B,GACjBT,GAAcS,IAElBthC,OAAUm2B,UAAW,iDC/S/C74B,EAAAiE,EAAAjC,EAAA,sBAAAulC,IAAAvnC,EAAAiE,EAAAjC,EAAA,sBAAAwlC,IAAAxnC,EAAAiE,EAAAjC,EAAA,sBAAA63B,IAAA75B,EAAAiE,EAAAjC,EAAA,sBAAAylC,IAAAznC,EAAAiE,EAAAjC,EAAA,sBAAA0lC,IAAA1nC,EAAAiE,EAAAjC,EAAA,sBAAA2lC,IAAA3nC,EAAAiE,EAAAjC,EAAA,sBAAA4lC,IAAA5nC,EAAAiE,EAAAjC,EAAA,sBAAA6lC,IAAA7nC,EAAAiE,EAAAjC,EAAA,sBAAA8lC,IAAA9nC,EAAAiE,EAAAjC,EAAA,sBAAA+lC,IAAA/nC,EAAAiE,EAAAjC,EAAA,sBAAAgmC,IAAAhoC,EAAAiE,EAAAjC,EAAA,sBAAAimC,IAAA,IAAAC,EAAAloC,EAAA,IAAAmoC,EAAAnoC,EAAAE,EAAAgoC,GAKO,SAASE,EAAUv+B,GACtB,OAAY,IAARA,GAAqB,MAARA,MAIb7M,SAAS6M,MAITsY,WAAWtY,IAOZ,SAAS09B,EAAQ5H,GACpB,OAAOA,EAAItd,WAAWC,QAAQ,SAAU,IAGrC,SAASklB,EAAea,GAC3B,OAAOF,IAAO,IAAI5Z,KAAK8Z,GAAUC,eAAe7oC,OAAO,qBAGpD,SAASo6B,EAAWhN,GACvB,OAAOsb,IAAOtb,GAAMptB,OAAO,cAGxB,SAASgoC,EAAcvc,GAC1B,OAAOid,MAASI,QAAQ,OACvBrd,QAAQA,GACRzrB,OAAO,WAGL,SAASioC,EAAS7jC,GACrB,GAAKA,EAEE,CACH,IAAI8hB,EAAQ,EAIZ,OAHA9hB,EAAKnG,QAAQ,SAAA8qC,GACT7iB,GAAS3oB,SAASwrC,EAAMjX,SAErB5L,GAIR,SAASgiB,EAAiB99B,GAC7B,IAAIsmB,MAAMtmB,GAIV,SAAAkB,OAAUlB,EAAV,KAGG,IAAM+9B,EAAa,SAACrN,GACvB,MAAiB,iBAANA,EAAwB,GAE5BA,EAAEqF,OAAO,GAAGC,cAAgBtF,EAAE/X,MAAM,IAGxC,SAASqlB,EAAe9mC,EAAG07B,GAC9B,OAAK2L,EAAUrnC,IAAOqnC,EAAU3L,GAK3BA,EAAI17B,EAAK,EACH,EAGJ07B,EAAI17B,EARA,EA2BR,SAAS+mC,EAAqB5c,GACjC,OAAKluB,SAASkuB,GAIPA,EAAU,GAHN,EAMR,SAAS6c,EAAqBU,GACjC,OAAKzrC,SAASyrC,IAASzrC,SAASyrC,GAAQ,EAC7B,EAGc,IAAjBzrC,SAASyrC,GAGd,SAAST,EAAsB9c,GAClC,OAAKluB,SAASkuB,GAIPA,EAAU,KAHN,EAWR,SAAS+c,EAActrC,GAC1B,MAAiB,QAATA,EAAiB,eAAiB,iDC5H9C,IAAAoD,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAoD,EAAAnD,EAAA,IAAAoD,EAAApD,EAAA,IAAAqD,EAAArD,EAAA,KAAA0oC,EAAA1oC,EAAA,KAAA2oC,EAAA3oC,EAAA,KAAA4oC,EAAA5oC,EAAAE,EAAAyoC,GAsBe3mC,EAAA,EAZa,kBACxB/B,EAAAc,EAAAC,cAACoC,EAAA,YAAWnC,QAAUmC,EAAA,kBAAkBlC,MACpCjB,EAAAc,EAAAC,cAACqC,EAAA,gBAAelC,KAAOynC,EAAA7nC,IACvBd,EAAAc,EAAAC,cAACmC,EAAA,OAAM9B,aAAa,KAAKC,KAAK,MAA9B,cAGArB,EAAAc,EAAAC,cAAC0nC,EAAA,eAAD,qjBCbFG,EAAgB,wBAAA99B,OADH,KACG,aAChB+9B,EAAgB,wBAAA/9B,OAFH,KAEG,cAChBg+B,EAAe,wBAAAh+B,OAHF,KAGE,aACfi+B,EAAqB,wBAAAj+B,OAJR,KAIQ,mBACrBk+B,EAAiB,wBAAAl+B,OALJ,KAKI,gBACjBm+B,EAAoB,wBAAAn+B,OANP,KAMO,mBACpBo+B,EAAiB,wBAAAp+B,OAPJ,KAOI,eACjBq+B,EAAsB,wCAM5B,SAASC,IACL,IACIC,EADQ3nC,OAAOC,SAASL,KACdw4B,MAAM,KAEpB,OADAuP,EAAIC,MACGD,EAAIE,KAAK,KAGpB,SAASC,EAAeC,GACpB,OAAOA,EAASC,OAAO9kC,KAAK,SAAA8kC,GACxB,OAAID,EAASE,GACFD,EAGa,MAApBD,EAAS1rC,QAAsC,MAApB0rC,EAAS1rC,OAC7B+5B,QAAQ8R,QACX7rC,OAAQ0rC,EAAS1rC,OACjBuH,QAASokC,IAGN5R,QAAQ8R,OAAOF,KAK3B,IAAMG,EAAmB,SAAC7sC,EAADP,GAAwB,IAAAqtC,EAAArtC,EAAjB2uB,cAAiB,IAAA0e,OACpD,GAAK9sC,EAAL,CAIA,IAAM+sC,EAAeX,IACjBpE,EAAM,IAAIgF,IAAIf,EAAuBjsC,EAAK,IAAK+sC,GAEnD,OADAztC,OAAO2P,KAAKmf,GAAQ3tB,QAAQ,SAAAI,GAAG,OAAImnC,EAAIiF,aAAa3nB,OAAOzkB,EAAKutB,EAAOvtB,MAChEqsC,MAAMlF,GAAKpgC,KAAK4kC,KAGdW,EAAmB,WAC5B,OAAOD,MAAMlB,GAAmBpkC,KAAK4kC,IAG5BY,EAAe,WACxB,OAAOF,MAAMrB,GAAkBjkC,KAAK4kC,IAG3Ba,EAAc,SAAA3sC,GAAoB,IAAA4sC,EAAA5sC,EAAjB0tB,cAAiB,IAAAkf,OACrCP,EAAeX,IACjBpE,EAAM,IAAIgF,IAAIpB,EAAkBmB,GAEpC,OADAztC,OAAO2P,KAAKmf,GAAQ3tB,QAAQ,SAAAI,GAAG,OAAImnC,EAAIiF,aAAa3nB,OAAOzkB,EAAKutB,EAAOvtB,MAChEqsC,MAAMlF,GAAKpgC,KAAK4kC,IAIde,EAAiB,SAAA5sC,GAAoB,IAAA6sC,EAAA7sC,EAAjBytB,cAAiB,IAAAof,OAC1CxF,EAAM,IAAIgF,IAtDM,qEAsDkBZ,KACtC,OAAOc,MAAMlF,GACTyF,OAAQ,OACRC,KAAMC,KAAKC,UAAUxf,KACtBxmB,KAAK4kC,IAGCqB,EAAuB,SAAA7S,GAAoB,IAAA8S,EAAA9S,EAAjB5M,cAAiB,IAAA0f,OAC9CC,EAAUC,OACT5f,GACHxlB,YAAc,eACdG,eAAe,EACfD,SAAU,MACVzH,QAAO,eAAAyM,OAAiBsgB,EAAO/sB,WAG/B2mC,EAAM,IAAIgF,IAAIb,EAAqBC,KAMvC,OALApE,EAAIhmB,OAAS1iB,OAAA2uC,EAAA,UAAA3uC,EACTY,MAAO6tC,EAAQ7tC,MACfmB,QAAS0sC,EAAQ1sC,UAGd6rC,MAAMlF,GACTyF,OAAQ,OACRC,KAAMC,KAAKC,UAAUG,KACtBnmC,KAAK4kC,IAGC0B,EAAmB,SAAAjT,GAAoB,IAAAkT,EAAAlT,EAAjB7M,cAAiB,IAAA+f,OAC1CJ,EAAUC,OACT5f,GACHtlB,SAAU,MACVslC,gBAAgB,EAChBxlC,YAAc,cACdvH,QAAO,eAAAyM,OAAiBsgB,EAAO/sB,WAG/B2mC,EAAM,IAAIgF,IAAIb,EAAqBC,KAMvC,OALApE,EAAIhmB,OAAS1iB,OAAA2uC,EAAA,UAAA3uC,EACTY,MAAO6tC,EAAQ7tC,MACfmB,QAAS0sC,EAAQ1sC,UAGd6rC,MAAMlF,GACTyF,OAAQ,OACRC,KAAMC,KAAKC,UAAUG,KACtBnmC,KAAK4kC,IAGC6B,EAAqB,SAAA7S,GAAoB,IAAA8S,EAAA9S,EAAjBpN,cAAiB,IAAAkgB,OAC5CP,EAAUC,OACT5f,GACHtlB,SAAU,MACVslC,gBAAgB,EAChBplC,YAAa,QACbJ,YAAc,mBACdvH,QAAO,mBAAAyM,OAAqBsgB,EAAO/sB,WAGnC2mC,EAAM,IAAIgF,IAAIb,EAAqBC,KAMvC,OALApE,EAAIhmB,OAAS1iB,OAAA2uC,EAAA,UAAA3uC,EACTY,MAAO6tC,EAAQ7tC,MACfmB,QAAS0sC,EAAQ1sC,UAGd6rC,MAAMlF,GACTyF,OAAQ,OACRC,KAAMC,KAAKC,UAAUG,KACtBnmC,KAAK4kC,IAIC+B,EAAc,SAAA9F,GAAoB,IAAA+F,EAAA/F,EAAjBra,cAAiB,IAAAogB,OACrCzB,EAAeX,IACjBpE,EAAM,IAAIgF,IAAIlB,EAAiBiB,GAEnC,OADAztC,OAAO2P,KAAKmf,GAAQ3tB,QAAQ,SAAAI,GAAG,OAAImnC,EAAIiF,aAAa3nB,OAAOzkB,EAAKutB,EAAOvtB,MAChEqsC,MAAMlF,GAAKpgC,KAAK4kC,IAGdiC,EAAgB,SAAA/F,GAAoB,IAAAgG,EAAAhG,EAAjBta,cAAiB,IAAAsgB,OACvC3B,EAAeX,IACjBpE,EAAM,IAAIgF,IAAId,EAAmBa,GAErC,OADAztC,OAAO2P,KAAKmf,GAAQ3tB,QAAQ,SAAAI,GAAG,OAAImnC,EAAIiF,aAAa3nB,OAAOzkB,EAAKutB,EAAOvtB,MAChEqsC,MAAMlF,GAAKpgC,KAAK4kC,IAGdmC,EAAoB,SAAA/F,GAAoB,IAAAgG,EAAAhG,EAAjBxa,cAAiB,IAAAwgB,OAC3C7B,EAAeX,IACjBpE,EAAM,IAAIgF,IAAIjB,EAAuBgB,GAEzC,OADAztC,OAAO2P,KAAKmf,GAAQ3tB,QAAQ,SAAAI,GAAG,OAAImnC,EAAIiF,aAAa3nB,OAAOzkB,EAAKutB,EAAOvtB,MAChEqsC,MAAMlF,GAAKpgC,KAAK4kC,IAGdqC,EAAyB,SAAAC,GAAoB,IAAAC,EAAAD,EAAjB1gB,cAAiB,IAAA2gB,OAChDhC,EAAeX,IACjBpE,EAAM,IAAIgF,IAxJiB,gDAwJeD,GAC9C,OAAOG,MAAMlF,GACTyF,OAAQ,OACRC,KAAMC,KAAKC,UAAUxf,KACtBxmB,KAAK4kC,IAGCwC,EAAkB,SAAAC,GAAoB,IAAAC,EAAAD,EAAjB7gB,cAAiB,IAAA8gB,OAEzCC,GACFjvC,MAF+BkuB,EAA3BluB,MAGJ4B,OAH+BssB,EAApBtsB,OAIXT,QAJ+B+sB,EAAZ/sB,SAMjB+tC,EAAK9vC,OAAA2uC,EAAA,UAAA3uC,CAAU6vC,GACfpC,EAAeX,IACjBpE,EAAM,IAAIgF,IAAIb,EAAqBY,GAEvC,OADA/E,EAAIhmB,OAASotB,EACNlC,MAAMlF,GACTyF,OAAQ,OACRC,KAAMC,KAAKC,UAAUxf,KACtBxmB,KAAK4kC,IAGC6C,EAAU,SAAAC,GAAoB,IAAAC,EAAAD,EAAjBlhB,cAAiB,IAAAmhB,OACjCxC,EAAeX,IACjBpE,EAAM,IAAIgF,IAjLE,yCAiLeD,GAE/B,OADAztC,OAAO2P,KAAKmf,GAAQ3tB,QAAQ,SAAAI,GAAG,OAAImnC,EAAIiF,aAAa3nB,OAAOzkB,EAAKutB,EAAOvtB,MAChEqsC,MAAMlF,GACTyF,OAAQ,OACRC,KAAMC,KAAKC,UAAUxf,KACtBxmB,KAAK4kC,IAGCgD,EAAiB,SAAAC,GAAoB,IAAAC,EAAAD,EAAjBrhB,cAAiB,IAAAshB,OACxC3C,EAAeX,IACjBpE,EAAM,IAAIgF,IA1LkB,iDA0LeD,GAC/C,OAAOG,MAAMlF,GACTyF,OAAQ,OACRC,KAAMC,KAAKC,UAAUxf,KACtBxmB,KAAK4kC","file":"js/automation_analytics.7a0eb6dbcc93eedd1f4b.js","sourcesContent":["import { useReducer } from 'react';\nimport moment from 'moment';\n\nimport { formatDate } from '../Utilities/helpers';\n\nexport const useQueryParams = initial => {\n    const paramsReducer = (state, { type, value }) => {\n        switch (type) {\n            /* v0 api reducers */\n            case 'SET_STARTDATE':\n                return { ...state, startDate: value };\n            case 'SET_ENDDATE':\n                return { ...state, endDate: value };\n            case 'SET_ID':\n                if (!parseInt(value)) {\n                    const { id: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, id: parseInt(value) };\n            case 'SET_LIMIT':\n                if (!parseInt(value.limit)) {\n                    const { limit: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, limit: parseInt(value.limit) };\n            /* v1 api reducers */\n            case 'SET_OFFSET':\n            case 'SET_ATTRIBUTES':\n            case 'SET_JOB_TYPE':\n            case 'SET_STATUS':\n            case 'SET_ORG':\n            case 'SET_CLUSTER':\n            case 'SET_TEMPLATE':\n            case 'SET_SORTBY':\n            case 'SET_ROOT_WORKFLOWS_AND_JOBS':\n                return { ...state, ...value };\n            case 'SET_QUICK_DATE_RANGE': {\n                let newState = { ...state };\n                if (value !== 'custom') {\n                    newState = { ...newState, start_date: null, end_date: null };\n                }\n\n                newState = { ...newState, ...value };\n                return newState;\n            }\n\n            case 'SET_SEVERITY':\n                if (value.severity === '') {\n                    const { severity: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, ...value };\n            case 'SET_START_DATE':\n            case 'SET_END_DATE': {\n                let newValues = {};\n                Object.entries(value).forEach(([ key, value ]) => {\n                    newValues[key] = formatDate(value);\n                });\n                return { ...state, ...newValues };\n            }\n\n            case 'RESET_FILTER':\n                return { ...state,\n                    status: [],\n                    quick_date_range: '',\n                    job_type: [],\n                    org_id: [],\n                    cluster_id: [],\n                    template_id: [],\n                    sort_by: '',\n                    start_date: '',\n                    end_date: '',\n                    only_root_workflows_and_standalone_jobs: false\n                };\n            default:\n                throw new Error();\n        }\n    };\n\n    const [ queryParams, dispatch ] = useReducer(paramsReducer, { ...initial });\n\n    const actionMapper = {\n        status: 'SET_STATUS',\n        quick_date_range: 'SET_QUICK_DATE_RANGE',\n        job_type: 'SET_JOB_TYPE',\n        org_id: 'SET_ORG',\n        cluster_id: 'SET_CLUSTER',\n        template_id: 'SET_TEMPLATE',\n        sort_by: 'SET_SORTBY',\n        start_date: 'SET_START_DATE',\n        end_date: 'SET_END_DATE',\n        only_root_workflows_and_standalone_jobs: 'SET_ROOT_WORKFLOWS_AND_JOBS'\n    };\n\n    return {\n        queryParams,\n        dispatch,\n        setLimit: limit => dispatch({ type: 'SET_LIMIT', value: { limit }}),\n        setOffset: offset => dispatch({ type: 'SET_OFFSET', value: { offset }}),\n        setSeverity: severity => dispatch({ type: 'SET_SEVERITY', value: { severity }}),\n        setFromToolbar: (varName, value = null) => {\n            if (!varName) {\n                dispatch({ type: 'RESET_FILTER' });\n            } else {\n                dispatch({ type: actionMapper[varName], value: { [varName]: value }});\n            }\n        },\n        /* v0 api usage after this line */\n        setEndDate: () => {\n            const endDate = moment().format('YYYY-MM-DD');\n            dispatch({ type: 'SET_ENDDATE', value: endDate });\n        },\n        setId: value => dispatch({ type: 'SET_ID', value }),\n        setStartDate: days => {\n            let startDate;\n            if (days === 7) {\n                startDate = moment()\n                .subtract(1, 'week')\n                .format('YYYY-MM-DD');\n            }\n\n            if (days === 14) {\n                startDate = moment()\n                .subtract(2, 'weeks')\n                .format('YYYY-MM-DD');\n            }\n\n            if (days === 31) {\n                startDate = moment()\n                .subtract(1, 'month')\n                .format('YYYY-MM-DD');\n            } else {\n                startDate = moment()\n                .subtract(days, 'days')\n                .format('YYYY-MM-DD');\n            }\n\n            dispatch({ type: 'SET_STARTDATE', value: startDate });\n        },\n        setStartDateAsString: value => dispatch({ type: 'SET_STARTDATE', value })\n    };\n};\n","/*eslint max-len: [\"error\", { \"ignoreStrings\": true }]*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Button,\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { WrenchIcon } from '@patternfly/react-icons';\n\nconst DefaultEmptyState = ({ preflightError: error }) => (\n    <EmptyState variant={ EmptyStateVariant.full }>\n        <EmptyStateIcon icon={ WrenchIcon } />\n        { error.status === 404 && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    No data found\n                </Title>\n                <EmptyStateBody>\n                    Please visit <a href='https://docs.ansible.com/ansible-tower/latest/html/administration/usability_data_collection.html#automation-analytics' target='_blank' rel='noopener noreferrer'>here</a> to learn how to enable Automation Analytics.\n                </EmptyStateBody>\n            </>\n        ) }\n        { error.status === 401 && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    Not authorized\n                </Title>\n                <EmptyStateBody>\n                    You do not have the correct permissions to view this page.\n                </EmptyStateBody>\n            </>\n        ) }\n        { !error.status && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    Something went wrong, please try reloading the page\n                </Title>\n                <Button variant=\"primary\" onClick={ () => window.location.reload() }>Reload</Button>\n            </>\n        ) }\n\n    </EmptyState>\n);\n\nDefaultEmptyState.propTypes = {\n    preflightError: PropTypes.object\n};\n\nexport default DefaultEmptyState;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nconst initializeChart = Chart => {\n    const BaseChart = (props) => {\n        const { id, margin } = props;\n\n        const getWidth = () => {\n            let width;\n            width =\n            parseInt(d3.select('#' + id).style('width')) -\n                margin.left - margin.right || 700;\n            return width;\n        };\n\n        const getHeight = () => {\n            let height;\n            height =\n            parseInt(d3.select('#' + id).style('height')) -\n                margin.top - margin.bottom || 450;\n            return height;\n        };\n\n        return (\n            <Chart\n                { ...props }\n                getWidth={ getWidth }\n                getHeight={ getHeight }\n            />\n        );\n    };\n\n    BaseChart.propTypes = {\n        id: PropTypes.string,\n        margin: PropTypes.object\n    };\n\n    return BaseChart;\n};\n\ninitializeChart.propTypes = {\n    Chart: PropTypes.element\n};\n\nexport default initializeChart;\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst NoData = () => (\n    <EmptyState variant={ EmptyStateVariant.full }>\n        <EmptyStateIcon icon={ CubesIcon } />\n        <Title headingLevel=\"h5\" size=\"lg\">\n            No Data\n        </Title>\n    </EmptyState>\n);\n\nexport default NoData;\n","import { useState, useEffect, useReducer } from 'react';\n\nconst dataFetchReducer = (state, action) => {\n    switch (action.type) {\n        case 'FETCH_INIT':\n            return {\n                ...state,\n                isLoading: true,\n                isSuccess: false,\n                error: null\n            };\n        case 'FETCH_SUCCESS':\n            return {\n                ...state,\n                isLoading: false,\n                isSuccess: true,\n                error: null,\n                data: action.payload\n            };\n        case 'FETCH_FAILURE':\n            return {\n                ...state,\n                isLoading: false,\n                isSuccess: false,\n                error: action.payload\n            };\n        case 'UPDATE_DATA':\n            return {\n                ...state,\n                data: action.payload\n            };\n        default:\n            throw new Error();\n    }\n};\n\nconst useApi = (initialData, postprocess = d => d) => {\n    const [ request, setRequest ] = useState(null);\n\n    const [ state, dispatch ] = useReducer(dataFetchReducer, {\n        isLoading: false,\n        isSuccess: false,\n        error: null,\n        data: initialData\n    });\n\n    useEffect(() => {\n        // Prevent fetching nothing\n        if (!request) {\n            return;\n        }\n\n        // Initialize\n        let didCancel = false;\n        dispatch({ type: 'FETCH_INIT' });\n\n        // Fetching\n        window.insights.chrome.auth.getUser().then(() => request.then(data => {\n            if (!didCancel) {\n                dispatch({\n                    type: 'FETCH_SUCCESS',\n                    payload: postprocess(data)\n                });\n            }\n        }).catch(e => {\n            if (!didCancel) {\n                dispatch({ type: 'FETCH_FAILURE', payload: e });\n            }\n        }));\n\n        return () => { didCancel = true; };\n    }, [ request ]);\n\n    const setData = data => {\n        dispatch({ type: 'UPDATE_DATA', payload: data });\n    };\n\n    return [ state, setRequest, setData ];\n};\n\nexport default useApi;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateIcon,\n    EmptyStateVariant,\n    Title\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { global_danger_color_200 as globalDangerColor200 } from '@patternfly/react-tokens';\n\nconst ApiErrorState = ({ message }) => (\n    <EmptyState variant={ EmptyStateVariant.small }>\n        <EmptyStateIcon icon={ ExclamationCircleIcon } color={ globalDangerColor200.value } />\n        <Title headingLevel=\"h2\" size=\"lg\">Error</Title>\n        <EmptyStateBody>\n            { message }\n        </EmptyStateBody>\n    </EmptyState>\n);\n\nApiErrorState.propTypes = {\n    message: PropTypes.string\n};\n\nexport default ApiErrorState;\n","export const jobExplorer = {\n    attributes: [\n        'id',\n        'status',\n        'job_type',\n        'started',\n        'finished',\n        'elapsed',\n        'created',\n        'cluster_name',\n        'org_name',\n        'most_failed_tasks'\n    ],\n    defaultParams: {\n        status: [ 'successful', 'failed' ],\n        quick_date_range: 'last_30_days',\n        job_type: [ 'workflowjob', 'job' ],\n        org_id: [],\n        cluster_id: [],\n        template_id: [],\n        sort_by: 'created:desc',\n        start_date: null,\n        end_date: null,\n        only_root_workflows_and_standalone_jobs: false,\n        limit: 5\n    }\n};\n\nexport const roi = {\n    defaultParams: {\n        status: [ 'successful' ],\n        org_id: [],\n        cluster_id: [],\n        template_id: [],\n        quick_date_range: 'roi_last_year',\n        job_type: [ 'job' ],\n        sort_by: 'template_productivity_score:desc',\n        start_date: null,\n        end_date: null,\n        limit: 25,\n        only_root_workflows_and_standalone_jobs: true,\n        attributes: [\n            'successful_hosts_total',\n            'successful_elapsed_total',\n            'total_org_count',\n            'total_cluster_count'\n        ],\n        group_by: 'template',\n        group_by_time: false,\n        granularity: 'monthly'\n    }\n};\n\nexport const organizationStatistics = {\n    defaultParams: {\n        status: [],\n        org_id: [],\n        quick_date_range: 'last_30_days',\n        sort_by: 'desc',\n        limit: 5,\n        job_type: [ 'workflowjob', 'job' ],\n        cluster_id: [],\n        template_id: [],\n        start_date: null,\n        end_date: null\n    }\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ToolbarItem,\n    Select,\n    SelectOption\n} from '@patternfly/react-core';\n\nconst CategoryDropdown = ({\n    selected,\n    setSelected = () => {},\n    categories = []\n}) => {\n    const [ isExpanded, setIsExpanded ] = useState(false);\n\n    return (\n        <ToolbarItem>\n            <Select\n                isOpen={ isExpanded }\n                variant={ 'single' }\n                aria-label={ 'Categories' }\n                onToggle={ () => setIsExpanded(!isExpanded) }\n                onSelect={ (_event, selection) => {\n                    setSelected(selection);\n                    setIsExpanded(false);\n                } }\n                selections={ selected }\n                placeholderText={ 'Filter by' }\n            >\n                {\n                    categories.map(({ key, name }) => (\n                        <SelectOption key={ key } value={ key }>\n                            { name }\n                        </SelectOption>\n                    ))\n                }\n            </Select>\n        </ToolbarItem>\n    );\n};\n\nCategoryDropdown.propTypes = {\n    categories: PropTypes.array,\n    selected: PropTypes.string,\n    setSelected: PropTypes.func\n};\n\nexport default CategoryDropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    InputGroup,\n    TextInput\n} from '@patternfly/react-core';\n\nconst CustomDateSelector = ({\n    onInputChange = () => {},\n    startDate = '',\n    endDate = ''\n}) => {\n    return (\n        <>\n          <InputGroup>\n              <TextInput\n                  name=\"startDate\"\n                  id=\"startDate\"\n                  type=\"date\"\n                  aria-label=\"Start Date\"\n                  value={ startDate }\n                  onChange={ e => onInputChange('start_date', e) }\n              />\n          </InputGroup>\n          <InputGroup>\n              <TextInput\n                  name=\"endDate\"\n                  id=\"endDate\"\n                  type=\"date\"\n                  aria-label=\"End Date\"\n                  value={ endDate }\n                  onChange={ e => onInputChange('end_date', e) }\n              />\n          </InputGroup>\n        </>\n    );\n};\n\nCustomDateSelector.propTypes = {\n    startDate: PropTypes.string,\n    endDate: PropTypes.string,\n    onInputChange: PropTypes.func\n};\n\nexport default CustomDateSelector;\n","export const optionsForCategories = {\n    status: {\n        isSingle: false,\n        name: 'Status',\n        placeholder: 'Filter by job status'\n    },\n    quick_date_range: {\n        isSingle: true,\n        name: 'Date',\n        placeholder: 'Filter by date'\n    },\n    job_type: {\n        isSingle: false,\n        name: 'Job',\n        placeholder: 'Filter by job type'\n    },\n    org_id: {\n        isSingle: false,\n        name: 'Organization',\n        placeholder: 'Filter by organization'\n    },\n    cluster_id: {\n        isSingle: false,\n        name: 'Cluster',\n        placeholder: 'Filter by cluster'\n    },\n    template_id: {\n        isSingle: false,\n        name: 'Template',\n        placeholder: 'Filter by template'\n    },\n    sort_by: {\n        isSingle: true,\n        name: 'Sort by',\n        placeholder: 'Sort by attribute'\n    }\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ToolbarFilter,\n    Select,\n    SelectOption\n} from '@patternfly/react-core';\nimport {\n    handleCheckboxChips,\n    handleSingleChips\n} from './helpers';\nimport { optionsForCategories } from './constants';\n\nconst ToolbarFilterItem = ({\n    categoryKey,\n    filter = null,\n    values = [],\n    isVisible = true,\n    hasChips = true,\n    setFilter\n}) => {\n    const [ expanded, setExpanded ] = useState(false);\n    const options = optionsForCategories[categoryKey];\n\n    const onDelete = (name, valueToDelete) => {\n        const single = optionsForCategories[categoryKey].isSingle;\n\n        if (single) {\n            setFilter(null);\n        } else {\n            const keyToDelete = values.find(({ value }) => value === valueToDelete).key;\n            const filteredArr = filter.filter(value => value !== keyToDelete);\n            setFilter(filteredArr);\n        }\n    };\n\n    const handleChips = () => {\n        if (options.isSingle) {\n            return handleSingleChips(filter, values);\n        } else {\n            return handleCheckboxChips(filter, values);\n        }\n    };\n\n    const onSelect = (event, selection) => {\n        if (options.isSingle) {\n            setFilter(selection);\n            setExpanded(false);\n        } else {\n            setFilter(event.target.checked\n                ? [ ...filter, selection ]\n                : filter.filter(value => value !== selection)\n            );\n        }\n    };\n\n    return (\n        <ToolbarFilter\n            key = { categoryKey }\n            showToolbarItem={ isVisible }\n            chips={ hasChips ? handleChips() : [] }\n            categoryName={ options.name }\n            deleteChip={ hasChips ? onDelete : null }\n        >\n            <Select\n                variant={ options.isSingle ? 'single' : 'checkbox' }\n                aria-label={ categoryKey }\n                onToggle={ () => setExpanded(!expanded) }\n                onSelect={ onSelect }\n                selections={ filter }\n                isOpen={ expanded }\n                placeholderText={ options.placeholder }\n            >\n                {\n                    values && values.map(({ key, value, description }) => (\n                        <SelectOption key={ key } value={ key } description={ description }>\n                            { value }\n                        </SelectOption>\n                    ))\n                }\n            </Select>\n        </ToolbarFilter>\n    );\n};\n\nToolbarFilterItem.propTypes = {\n    categoryKey: PropTypes.string.isRequired,\n    filter: PropTypes.any,\n    values: PropTypes.array,\n    isVisible: PropTypes.bool,\n    hasChips: PropTypes.bool,\n    setFilter: PropTypes.func.isRequired\n};\n\nexport default ToolbarFilterItem;\n","/**\n * Get comparator values if their key is in the item list\n */\nexport const handleCheckboxChips = (item, comparator) => {\n    if (item && comparator) {\n        return item.reduce((acc, i) => {\n            Number.isInteger(parseInt(i)) ? (i = parseInt(i)) : i;\n\n            comparator.forEach(cmpItem => {\n                if (cmpItem.key === i) {\n                    acc.push(cmpItem.value);\n                }\n            });\n\n            return acc;\n        }, []);\n    }\n\n    return [];\n};\n\n/**\n * Convert a list of objects to a list of the last value if defined\n */\nexport const handleSingleChips = (item, comparator) => {\n    if (item && typeof item === 'string' && comparator) {\n        let val;\n        comparator.forEach(i => {\n            if (i.key === item) {\n                val = i.value;\n            }\n        });\n\n        if (val !== undefined) {\n            return [ val ];\n        }\n    }\n\n    return [];\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Toolbar,\n    ToolbarContent,\n    ToolbarGroup,\n    Button,\n    ToolbarItem,\n    Tooltip,\n    Switch\n} from '@patternfly/react-core';\nimport { Card, CardTitle, CardBody, CardActions, CardHeader } from '@patternfly/react-core';\nimport {\n    FilterIcon,\n    SortAmountDownIcon,\n    CogIcon,\n    QuestionCircleIcon,\n    TimesIcon\n} from '@patternfly/react-icons';\n\nimport CategoryDropdown from './CategoryDropdown';\nimport CustomDateSelector from './CustomDateSelector';\nimport { optionsForCategories } from './constants';\nimport ToolbarFilterItem from './ToolbarFilterItem';\n\nconst FilterableToolbar = ({\n    categories,\n    filters,\n    setFilters,\n    pagination = null,\n    hasSettings = false\n}) => {\n    const [ settingsExpanded, setSettingsExpanded ] = useState(false);\n    const { quick_date_range, sort_by, ...restCategories } = categories;\n\n    // Filter out elements which are not in the option object.\n    const filterCategories = Object.keys(restCategories)\n    .filter(key => Object.keys(optionsForCategories).includes(key))\n    .reduce((obj, key) => {\n        obj[key] = restCategories[key];\n        return obj;\n    }, {});\n\n    const [ currentCategory, setCurrentCategory ] = useState(\n        Object.keys(filterCategories)[0]\n    );\n\n    const onInputChange = (type, value) => {\n        setFilters(type, value);\n    };\n\n    const FilterCategoriesGroup = () => (\n        <ToolbarGroup variant=\"filter-group\">\n            <CategoryDropdown\n                selected={ currentCategory }\n                setSelected={ setCurrentCategory }\n                categories={\n                    Object.keys(filterCategories).map(el => ({\n                        key: el,\n                        name: optionsForCategories[el].name\n                    }))\n                }\n            />\n            { Object.keys(filterCategories).map(key =>\n                <ToolbarFilterItem\n                    key={ key }\n                    categoryKey={ key }\n                    filter={ filters[key] }\n                    values={ categories[key] }\n                    isVisible={ currentCategory === key }\n                    setFilter={ value => setFilters(key, value) }\n                />\n            ) }\n        </ToolbarGroup>\n    );\n\n    const QuickDateGroup = () => (\n        <ToolbarGroup variant=\"filter-group\">\n            <ToolbarFilterItem\n                categoryKey='quick_date_range'\n                filter={ filters.quick_date_range }\n                values={ quick_date_range }\n                setFilter={ value => setFilters('quick_date_range', value) }\n                hasChips={ false }\n            />\n            { filters.quick_date_range === 'custom' && (\n                <CustomDateSelector\n                    startDate={ filters.start_date ? filters.start_date : '' }\n                    endDate={ filters.end_date ? filters.end_date : '' }\n                    onInputChange={ onInputChange }\n                />\n            ) }\n        </ToolbarGroup>\n    );\n\n    const SortByGroup = () => (\n        <ToolbarGroup variant=\"filter-group\">\n            <ToolbarFilterItem\n                categoryKey='sort_by'\n                filter={ filters.sort_by }\n                values={ sort_by }\n                setFilter={ value => setFilters('sort_by', value) }\n                hasChips={ false }\n            />\n            <Button variant=\"control\">\n                <SortAmountDownIcon />\n            </Button>\n        </ToolbarGroup>\n    );\n\n    /* TODO: For future work: make settings more modular for different pages */\n    const Settings = () => (\n        <Card isFlat style={ { backgroundColor: '#EEEEEE' } }>\n            <CardHeader>\n                <CardActions>\n                    <Button\n                        variant='plain'\n                        onClick={ () => setSettingsExpanded(!settingsExpanded) }\n                    >\n                        <TimesIcon />\n                    </Button>\n                </CardActions>\n                <CardTitle>Settings</CardTitle>\n            </CardHeader>\n            <CardBody>\n                <Switch\n                    id=\"showRootWorkflowJobs\"\n                    label=\"Ignore nested workflows and jobs\"\n                    labelOff=\"Ignore nested workflows and jobs\"\n                    isChecked={ filters.only_root_workflows_and_standalone_jobs }\n                    onChange={ val => {\n                        setFilters('only_root_workflows_and_standalone_jobs', val);\n                    } }\n                />\n                <Tooltip\n                    position={ 'top' }\n                    content={\n                        <div>\n                            { ' ' }\n                              If enabled, nested workflows and jobs will not be included in\n                              the overall totals. Enable this option to filter out duplicate\n                              entries.\n                        </div>\n                    }\n                >\n                    <QuestionCircleIcon />\n                </Tooltip>\n            </CardBody>\n        </Card>\n    );\n\n    return (\n        <>\n            <Toolbar\n                id=\"filterable-toolbar-with-chip-groups\"\n                clearAllFilters={ () => { setFilters(null, null); } }\n                collapseListedFiltersBreakpoint=\"xl\"\n            >\n                <ToolbarContent>\n                    <Button variant=\"control\">\n                        <FilterIcon />\n                    </Button>\n                    { Object.keys(filterCategories).length > 0 && <FilterCategoriesGroup /> }\n                    { quick_date_range && <QuickDateGroup /> }\n                    { sort_by && <SortByGroup /> }\n                    {\n                        hasSettings &&\n                        <ToolbarItem>\n                            <Button\n                                variant=\"plain\"\n                                onClick={ () => setSettingsExpanded(!settingsExpanded) }\n                                aria-label=\"settings\"\n                                isActive={ settingsExpanded }\n                            >\n                                <CogIcon />\n                            </Button>\n                        </ToolbarItem>\n                    }\n                    {\n                        pagination &&\n                        <ToolbarItem variant=\"pagination\" visibility={ { default: 'hidden', lg: 'visible' } }>\n                            { pagination }\n                        </ToolbarItem>\n                    }\n                </ToolbarContent>\n                { settingsExpanded && <Settings /> }\n            </Toolbar>\n        </>\n    );\n};\n\nFilterableToolbar.propTypes = {\n    categories: PropTypes.object.isRequired,\n    filters: PropTypes.object.isRequired,\n    setFilters: PropTypes.func.isRequired,\n    pagination: PropTypes.object,\n    hasSettings: PropTypes.bool\n};\n\nexport default FilterableToolbar;\n","import Toolbar from './Toolbar';\n\nexport default Toolbar;\n","var map = {\n\t\"./af\": 181,\n\t\"./af.js\": 181,\n\t\"./ar\": 182,\n\t\"./ar-dz\": 183,\n\t\"./ar-dz.js\": 183,\n\t\"./ar-kw\": 184,\n\t\"./ar-kw.js\": 184,\n\t\"./ar-ly\": 185,\n\t\"./ar-ly.js\": 185,\n\t\"./ar-ma\": 186,\n\t\"./ar-ma.js\": 186,\n\t\"./ar-sa\": 187,\n\t\"./ar-sa.js\": 187,\n\t\"./ar-tn\": 188,\n\t\"./ar-tn.js\": 188,\n\t\"./ar.js\": 182,\n\t\"./az\": 189,\n\t\"./az.js\": 189,\n\t\"./be\": 190,\n\t\"./be.js\": 190,\n\t\"./bg\": 191,\n\t\"./bg.js\": 191,\n\t\"./bm\": 192,\n\t\"./bm.js\": 192,\n\t\"./bn\": 193,\n\t\"./bn.js\": 193,\n\t\"./bo\": 194,\n\t\"./bo.js\": 194,\n\t\"./br\": 195,\n\t\"./br.js\": 195,\n\t\"./bs\": 196,\n\t\"./bs.js\": 196,\n\t\"./ca\": 197,\n\t\"./ca.js\": 197,\n\t\"./cs\": 198,\n\t\"./cs.js\": 198,\n\t\"./cv\": 199,\n\t\"./cv.js\": 199,\n\t\"./cy\": 200,\n\t\"./cy.js\": 200,\n\t\"./da\": 201,\n\t\"./da.js\": 201,\n\t\"./de\": 202,\n\t\"./de-at\": 203,\n\t\"./de-at.js\": 203,\n\t\"./de-ch\": 204,\n\t\"./de-ch.js\": 204,\n\t\"./de.js\": 202,\n\t\"./dv\": 205,\n\t\"./dv.js\": 205,\n\t\"./el\": 206,\n\t\"./el.js\": 206,\n\t\"./en-SG\": 207,\n\t\"./en-SG.js\": 207,\n\t\"./en-au\": 208,\n\t\"./en-au.js\": 208,\n\t\"./en-ca\": 209,\n\t\"./en-ca.js\": 209,\n\t\"./en-gb\": 210,\n\t\"./en-gb.js\": 210,\n\t\"./en-ie\": 211,\n\t\"./en-ie.js\": 211,\n\t\"./en-il\": 212,\n\t\"./en-il.js\": 212,\n\t\"./en-nz\": 213,\n\t\"./en-nz.js\": 213,\n\t\"./eo\": 214,\n\t\"./eo.js\": 214,\n\t\"./es\": 215,\n\t\"./es-do\": 216,\n\t\"./es-do.js\": 216,\n\t\"./es-us\": 217,\n\t\"./es-us.js\": 217,\n\t\"./es.js\": 215,\n\t\"./et\": 218,\n\t\"./et.js\": 218,\n\t\"./eu\": 219,\n\t\"./eu.js\": 219,\n\t\"./fa\": 220,\n\t\"./fa.js\": 220,\n\t\"./fi\": 221,\n\t\"./fi.js\": 221,\n\t\"./fo\": 222,\n\t\"./fo.js\": 222,\n\t\"./fr\": 223,\n\t\"./fr-ca\": 224,\n\t\"./fr-ca.js\": 224,\n\t\"./fr-ch\": 225,\n\t\"./fr-ch.js\": 225,\n\t\"./fr.js\": 223,\n\t\"./fy\": 226,\n\t\"./fy.js\": 226,\n\t\"./ga\": 227,\n\t\"./ga.js\": 227,\n\t\"./gd\": 228,\n\t\"./gd.js\": 228,\n\t\"./gl\": 229,\n\t\"./gl.js\": 229,\n\t\"./gom-latn\": 230,\n\t\"./gom-latn.js\": 230,\n\t\"./gu\": 231,\n\t\"./gu.js\": 231,\n\t\"./he\": 232,\n\t\"./he.js\": 232,\n\t\"./hi\": 233,\n\t\"./hi.js\": 233,\n\t\"./hr\": 234,\n\t\"./hr.js\": 234,\n\t\"./hu\": 235,\n\t\"./hu.js\": 235,\n\t\"./hy-am\": 236,\n\t\"./hy-am.js\": 236,\n\t\"./id\": 237,\n\t\"./id.js\": 237,\n\t\"./is\": 238,\n\t\"./is.js\": 238,\n\t\"./it\": 239,\n\t\"./it-ch\": 240,\n\t\"./it-ch.js\": 240,\n\t\"./it.js\": 239,\n\t\"./ja\": 241,\n\t\"./ja.js\": 241,\n\t\"./jv\": 242,\n\t\"./jv.js\": 242,\n\t\"./ka\": 243,\n\t\"./ka.js\": 243,\n\t\"./kk\": 244,\n\t\"./kk.js\": 244,\n\t\"./km\": 245,\n\t\"./km.js\": 245,\n\t\"./kn\": 246,\n\t\"./kn.js\": 246,\n\t\"./ko\": 247,\n\t\"./ko.js\": 247,\n\t\"./ku\": 248,\n\t\"./ku.js\": 248,\n\t\"./ky\": 249,\n\t\"./ky.js\": 249,\n\t\"./lb\": 250,\n\t\"./lb.js\": 250,\n\t\"./lo\": 251,\n\t\"./lo.js\": 251,\n\t\"./lt\": 252,\n\t\"./lt.js\": 252,\n\t\"./lv\": 253,\n\t\"./lv.js\": 253,\n\t\"./me\": 254,\n\t\"./me.js\": 254,\n\t\"./mi\": 255,\n\t\"./mi.js\": 255,\n\t\"./mk\": 256,\n\t\"./mk.js\": 256,\n\t\"./ml\": 257,\n\t\"./ml.js\": 257,\n\t\"./mn\": 258,\n\t\"./mn.js\": 258,\n\t\"./mr\": 259,\n\t\"./mr.js\": 259,\n\t\"./ms\": 260,\n\t\"./ms-my\": 261,\n\t\"./ms-my.js\": 261,\n\t\"./ms.js\": 260,\n\t\"./mt\": 262,\n\t\"./mt.js\": 262,\n\t\"./my\": 263,\n\t\"./my.js\": 263,\n\t\"./nb\": 264,\n\t\"./nb.js\": 264,\n\t\"./ne\": 265,\n\t\"./ne.js\": 265,\n\t\"./nl\": 266,\n\t\"./nl-be\": 267,\n\t\"./nl-be.js\": 267,\n\t\"./nl.js\": 266,\n\t\"./nn\": 268,\n\t\"./nn.js\": 268,\n\t\"./pa-in\": 269,\n\t\"./pa-in.js\": 269,\n\t\"./pl\": 270,\n\t\"./pl.js\": 270,\n\t\"./pt\": 271,\n\t\"./pt-br\": 272,\n\t\"./pt-br.js\": 272,\n\t\"./pt.js\": 271,\n\t\"./ro\": 273,\n\t\"./ro.js\": 273,\n\t\"./ru\": 274,\n\t\"./ru.js\": 274,\n\t\"./sd\": 275,\n\t\"./sd.js\": 275,\n\t\"./se\": 276,\n\t\"./se.js\": 276,\n\t\"./si\": 277,\n\t\"./si.js\": 277,\n\t\"./sk\": 278,\n\t\"./sk.js\": 278,\n\t\"./sl\": 279,\n\t\"./sl.js\": 279,\n\t\"./sq\": 280,\n\t\"./sq.js\": 280,\n\t\"./sr\": 281,\n\t\"./sr-cyrl\": 282,\n\t\"./sr-cyrl.js\": 282,\n\t\"./sr.js\": 281,\n\t\"./ss\": 283,\n\t\"./ss.js\": 283,\n\t\"./sv\": 284,\n\t\"./sv.js\": 284,\n\t\"./sw\": 285,\n\t\"./sw.js\": 285,\n\t\"./ta\": 286,\n\t\"./ta.js\": 286,\n\t\"./te\": 287,\n\t\"./te.js\": 287,\n\t\"./tet\": 288,\n\t\"./tet.js\": 288,\n\t\"./tg\": 289,\n\t\"./tg.js\": 289,\n\t\"./th\": 290,\n\t\"./th.js\": 290,\n\t\"./tl-ph\": 291,\n\t\"./tl-ph.js\": 291,\n\t\"./tlh\": 292,\n\t\"./tlh.js\": 292,\n\t\"./tr\": 293,\n\t\"./tr.js\": 293,\n\t\"./tzl\": 294,\n\t\"./tzl.js\": 294,\n\t\"./tzm\": 295,\n\t\"./tzm-latn\": 296,\n\t\"./tzm-latn.js\": 296,\n\t\"./tzm.js\": 295,\n\t\"./ug-cn\": 297,\n\t\"./ug-cn.js\": 297,\n\t\"./uk\": 298,\n\t\"./uk.js\": 298,\n\t\"./ur\": 299,\n\t\"./ur.js\": 299,\n\t\"./uz\": 300,\n\t\"./uz-latn\": 301,\n\t\"./uz-latn.js\": 301,\n\t\"./uz.js\": 300,\n\t\"./vi\": 302,\n\t\"./vi.js\": 302,\n\t\"./x-pseudo\": 303,\n\t\"./x-pseudo.js\": 303,\n\t\"./yo\": 304,\n\t\"./yo.js\": 304,\n\t\"./zh-cn\": 305,\n\t\"./zh-cn.js\": 305,\n\t\"./zh-hk\": 306,\n\t\"./zh-hk.js\": 306,\n\t\"./zh-tw\": 307,\n\t\"./zh-tw.js\": 307\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 341;","import { Paths } from '../paths';\nimport { stringify } from 'query-string';\n\nconst useRedirect = (history, path) => (query) => {\n    const search = stringify(query, { arrayFormat: 'bracket' });\n    history.push({\n        pathname: Paths[path],\n        search\n    });\n};\n\nexport default useRedirect;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        this.draw();\n    }\n\n    formatDollars(amount) {\n        return parseFloat(amount).toFixed(2).toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    };\n\n    draw() {\n        this.width = 125;\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip-base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 125;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, 0) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', 92)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.name = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', -2)\n        .text('Template name');\n        this.savings = this.toolTipBase\n        .append('text')\n        .attr('x', 20)\n        .attr('y', 52)\n        .attr('font-size', 12)\n        .attr('font-weight', 'bold')\n        .attr('fill', 'white')\n        .text('Total savings $0');\n        this.manualCost = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', 16)\n        .text('Manual cost $0');\n        this.automationCost = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', 34)\n        .text('Automation cost $0');\n    }\n\n    handleMouseOver = d => {\n        let name;\n        let savings;\n        let manualCost;\n        let automationCost;\n        const scrollLeftOffset = d3.select('#d3-roi-chart-root').node().scrollLeft;\n        const x =\n            d3.event.pageX -\n            d3\n            .select(this.svg)\n            .node()\n            .getBoundingClientRect().x +\n            10 + scrollLeftOffset;\n        const y =\n            d3.event.pageY -\n            d3\n            .select(this.svg)\n            .node()\n            .getBoundingClientRect().y -\n            30;\n        if (!d) {\n            return;\n        } else {\n            savings = this.formatDollars(d.delta);\n            name = d.name;\n            manualCost = this.formatDollars(d.manualCost);\n            automationCost = this.formatDollars(d.automatedCost);\n        }\n\n        const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n        const chartWidth = d3\n        .select(this.svg + '> svg')\n        .node()\n        .getBoundingClientRect().width;\n        const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n        const flipped = overflow < (x / chartWidth) * 100;\n        this.name.text('' + name);\n        this.savings.text('Total savings $' + savings);\n        this.manualCost.text('Manual Cost $' + manualCost);\n        this.automationCost.text('Automation Cost $' + automationCost);\n        this.nameWidth = this.name.node().getComputedTextLength();\n        this.savingsWidth = this.savings.node().getComputedTextLength();\n        this.manualCostWidth = this.manualCost.node().getComputedTextLength();\n        this.automationCostWidth = this.automationCost.node().getComputedTextLength();\n        this.widestTextElem = d3.max([ this.nameWidth, this.savingsWidth, this.automationCostWidth, this.manualCostWidth ]);\n\n        const maxTextPerc = this.widestTextElem / this.boxWidth * 100;\n        const threshold = 85;\n        const overage = maxTextPerc / threshold;\n        let adjustedWidth;\n        if (maxTextPerc > threshold) {\n            adjustedWidth = this.boxWidth * overage;\n        } else {\n            adjustedWidth = this.boxWidth;\n        }\n\n        this.boundingBox.attr('width', adjustedWidth);\n        this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n        if (flipped) {\n            this.toolTipPoint.attr('transform', 'translate(-20, 15) rotate(45)');\n            this.boundingBox.attr('x', -adjustedWidth - 20);\n            this.name.attr('x', -(toolTipWidth - 7));\n            this.savings.attr('x', -(toolTipWidth - 7));\n            this.manualCost.attr('x', -(toolTipWidth - 7));\n            this.automationCost.attr('x', -(toolTipWidth - 7));\n        } else {\n            this.toolTipPoint.attr('transform', 'translate(10, 15) rotate(45)');\n            this.boundingBox.attr('x', 10);\n            this.name.attr('x', 20);\n            this.savings.attr('x', 20);\n            this.manualCost.attr('x', 20);\n            this.automationCost.attr('x', 20);\n        }\n\n        this.toolTipBase.style('opacity', 1);\n        this.toolTipBase.interrupt();\n    };\n\n    handleMouseOut = () => {\n        this.toolTipBase\n        .transition()\n        .delay(15)\n        .style('opacity', 0)\n        .style('pointer-events', 'none');\n    };\n}\n\nclass TopTemplatesSavings extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.state = {\n            timeout: null\n        };\n    }\n\n    // Methods\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => {\n                this.init();\n            }, 500)\n        });\n    }\n\n    init() {\n        this.draw();\n    }\n\n    draw() {\n        // Use PF chart color\n        const color = '#0066CC'; //blue\n        // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const { data } = this.props;\n        let width;\n        // adjust chart width to support larger datasets\n        if (data.length >= 15) {\n            const containerWidth = d3.select('.automation-wrapper').node();\n            width = containerWidth.getBoundingClientRect().width - this.props.margin.left - this.props.margin.right;\n        } else {\n            width = this.props.getWidth();\n        }\n\n        const height = this.props.getHeight();\n        const x = d3\n        .scaleBand()\n        .rangeRound([ 0, width ])\n        .padding(0.45);\n        const y = d3.scaleLinear().range([ height, 0 ]);\n        // format our X Axis ticks\n        let ticks;\n        ticks = data.map(d => d.name);\n        const formatYAxisValue = d3.format('.2s');\n        const xAxis = d3.axisBottom(x).tickValues(ticks);\n\n        const yAxis = d3\n        .axisLeft(y)\n        .ticks(8)\n        .tickFormat(d => formatYAxisValue(d).replace('G', 'B'))\n        .tickSize(-width, 0, 0);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n\n        const taskNames = data.map(d => d.name);\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id\n        });\n        x.domain(taskNames);\n        y.domain([\n            0,\n            d3.max(data, d => d.delta * 1.15) || 8\n        ]);\n\n        // add y axis\n        svg\n        .append('g')\n        .attr('class', 'y axis')\n        .call(yAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7')\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 6)\n        .attr('dy', '.71em')\n        .style('text-anchor', 'end')\n        .style('font-weight', 'bold')\n        .text('Value');\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Savings per template ($)');\n\n        // add x axis\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(xAxis)\n        .selectAll('text')\n        .style('text-anchor', 'start')\n        .attr('dx', '0.75em')\n        .attr('dy', -x.bandwidth() / 1.45 - 8)\n        .attr('transform', 'rotate(-90)');\n\n        svg.selectAll('.x-axis line').attr('stroke', 'transparent');\n\n        svg.selectAll('.bar')\n        .data(data)\n        .enter().append('rect')\n        .attr('x', d => x(d.name))\n        .attr('width', x.bandwidth())\n        .attr('y', d => y(d.delta))\n        .style('fill', () => color)\n        .attr('height', d => height - y(d.delta))\n        .on('mouseover', function(d) {\n            d3.select(this).style('fill', d3.rgb(color).darker(1));\n            tooltip.handleMouseOver(d);\n        })\n        .on('mousemove', tooltip.handleMouseOver)\n        .on('mouseout', function() {\n            d3.select(this).style('fill', color);\n            tooltip.handleMouseOut();\n        });\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate() {\n        this.init();\n    }\n\n    render() {\n        return <div id={ this.props.id } />;\n    }\n}\n\nTopTemplatesSavings.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func\n};\n\nexport default initializeChart(TopTemplatesSavings);\n","import styled from 'styled-components';\nimport { CardTitle } from '@patternfly/react-core';\n\nexport const BorderedCardTitle = styled(CardTitle)`\n  border-bottom: 1px solid #d7d7d7;\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Card,\n    CardBody,\n    CardTitle,\n    Title\n} from '@patternfly/react-core';\n\nconst floatToStringWithCommas = (total) =>\n    total\n    .toFixed(2)\n    .toString()\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\nconst TotalSavings = ({ totalSavings = 0 }) => (\n    <Card style={ { borderTop: '3px solid #2B9AF3' } }>\n        <CardTitle style={ { paddingBottom: '0' } }>\n                Total savings\n        </CardTitle>\n        <CardBody>\n            <Title\n                headingLevel=\"h3\"\n                size=\"4xl\"\n                style={ { color: 'var(--pf-global--success-color--200)' } }\n            >\n                { floatToStringWithCommas(totalSavings) }\n            </Title>\n        </CardBody>\n    </Card>\n);\n\nTotalSavings.propTypes = {\n    totalSavings: PropTypes.number\n};\n\nexport default TotalSavings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    Card,\n    CardBody,\n    InputGroup,\n    InputGroupText,\n    TextInput\n} from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst validFloat = value => {\n    const floatValue = parseFloat(value);\n    return floatValue && floatValue >= 0 ? value : '';\n};\n\nconst CalculationCost = ({\n    costManual = '0',\n    setCostManual = () => {},\n    costAutomation = '0',\n    setCostAutomation = () => {}\n}) => (\n    <Card>\n        <CardTitle>\n                Calculate your automation\n        </CardTitle>\n        <CardBody>\n            <InputAndText>\n                <p>Manual cost of automation</p>\n                <em style={ { color: 'var(--pf-global--Color--dark-200)' } }>\n                        (e.g. average salary of mid-level Software Engineer)\n                </em>\n                <InputGroup style={ { width: '50%' } }>\n                    <InputGroupText>\n                        <DollarSignIcon />\n                    </InputGroupText>\n                    <TextInput\n                        id=\"manual-cost\"\n                        type=\"number\"\n                        aria-label=\"manual-cost\"\n                        value={ costManual }\n                        onChange={ (e) => setCostManual(validFloat(e)) }\n                    />\n                    <InputGroupText>/hr</InputGroupText>\n                </InputGroup>\n            </InputAndText>\n            <InputAndText style={ { paddingTop: '10px' } }>\n                <p>Automated process cost</p>\n                <InputGroup style={ { width: '50%' } }>\n                    <InputGroupText>\n                        <DollarSignIcon />\n                    </InputGroupText>\n                    <TextInput\n                        id=\"automation-cost\"\n                        type=\"number\"\n                        aria-label=\"automation-cost\"\n                        value={ costAutomation }\n                        onChange={ (e) => setCostAutomation(validFloat(e)) }\n                    />\n                    <InputGroupText>/hr</InputGroupText>\n                </InputGroup>\n            </InputAndText>\n        </CardBody>\n    </Card>\n);\n\nCalculationCost.propTypes = {\n    costManual: PropTypes.string,\n    setCostManual: PropTypes.func,\n    costAutomation: PropTypes.string,\n    setCostAutomation: PropTypes.func\n};\n\nexport default CalculationCost;\n","import React from 'react';\n\nimport {\n    Card,\n    CardBody\n} from '@patternfly/react-core';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst AutomationFormula = () => (\n    <Card style={ { height: '100%' } }>\n        <CardTitle>Automation formula</CardTitle>\n        <CardBody>\n            <p>\n                <b>Manual cost for template x</b> =\n                <em>\n                    (time for a manual run on one host in hours * (sum of all hosts across all job runs) ) * cost per hour\n                </em>\n            </p>\n            <p>\n                <b>Automation cost for template x</b> =\n                <em>cost of automation per hour * sum of total elapsed hours for a template</em>\n            </p>\n            <p>\n                <b>Savings</b> =\n                <em>Sum of (manual cost - automation cost) across all templates</em>\n            </p>\n        </CardBody>\n    </Card>\n);\n\nexport default AutomationFormula;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    Button,\n    Card,\n    CardBody,\n    InputGroup,\n    InputGroupText,\n    TextInput,\n    Tooltip,\n    Popover\n} from '@patternfly/react-core';\nimport {\n    InfoCircleIcon\n} from '@patternfly/react-icons';\n\nimport {\n    convertSecondsToMins,\n    convertMinsToSeconds\n} from '../../Utilities/helpers';\n\nconst TemplateDetail = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  div,\n  em {\n    padding-right: 5px;\n  }\n\n  @media (max-width: 1490px) {\n    display: block;\n\n    em {\n      padding: 10px 0;\n      display: block;\n    }\n  }\n`;\n\nconst TemplateDetailSubTitle = styled.em`\n  color: var(--pf-global--Color--dark-200);\n`;\n\nconst TooltipWrapper = styled.div`\n  p {\n    text-align: left;\n  }\n`;\n\nconst IconGroup = styled.div`\n  & svg {\n    fill: var(--pf-global--Color--dark-200);\n\n    :hover {\n      cursor: pointer;\n    }\n\n    :first-of-type {\n      margin-right: 10px;\n      margin-left: 10px;\n\n      @media (max-width: 1350px) {\n        margin-left: 0;\n      }\n    }\n  }\n`;\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nexport const QuestionIconTooltip = ({ data }) => (\n    <Popover\n        aria-label=\"template detail popover\"\n        position=\"left\"\n        bodyContent={\n            <TooltipWrapper>\n                <p>\n                    <b>Success elapsed sum</b>:{ ' ' }\n                    { data.successful_elapsed_total.toFixed(2) }\n                </p>\n                <p>\n                    <b>Number of associated organizations</b>:{ ' ' }\n                    { data.total_org_count }\n                </p>\n                <p>\n                    <b>Number of associated clusters</b>:{ ' ' }\n                    { data.total_cluster_count }\n                </p>\n            </TooltipWrapper>\n        }\n    >\n        <InfoCircleIcon />\n    </Popover>\n);\n\nQuestionIconTooltip.propTypes = {\n    data: PropTypes.object\n};\n\nconst TopTemplates = ({\n    data = [],\n    setDataRunTime = () => {},\n    redirectToJobExplorer = () => {}\n}) => (\n    <Card style={ { overflow: 'auto', flex: '1 1 0' } } className=\"top-templates\">\n        <CardBody>\n            <p>Enter the time it takes to run the following templates manually.</p>\n            { data.map((data) => (\n                <div key={ data.id }>\n                    <Tooltip content={ 'List of jobs for this template for past 30 days' } >\n                        <Button\n                            style={ { padding: '15px 0 10px' } }\n                            component=\"a\"\n                            onClick={ () => redirectToJobExplorer(data.id) }\n                            variant=\"link\"\n                        >\n                            { data.name }\n                        </Button>\n                    </Tooltip>\n                    <TemplateDetail>\n                        <InputAndText key={ data.id }>\n                            <InputGroup>\n                                <TextInput\n                                    id={ data.id }\n                                    type=\"number\"\n                                    aria-label=\"time run manually\"\n                                    value={ convertSecondsToMins(data.avgRunTime) }\n                                    onChange={ minutes =>\n                                        setDataRunTime(convertMinsToSeconds(minutes), data.id)\n                                    }\n                                />\n                                <InputGroupText>min</InputGroupText>\n                            </InputGroup>\n                        </InputAndText>\n                        <TemplateDetailSubTitle>\n                                    x { data.successful_hosts_total } host runs\n                        </TemplateDetailSubTitle>\n                        <IconGroup>\n                            <QuestionIconTooltip data={ data }/>\n                        </IconGroup>\n                    </TemplateDetail>\n                    <p style={ { color: '#486B00' } }>\n                        ${ data.delta.toFixed(2) }\n                    </p>\n                </div>\n            )) }\n        </CardBody>\n    </Card>\n);\n\nTopTemplates.propTypes = {\n    data: PropTypes.array,\n    setDataRunTime: PropTypes.func,\n    redirectToJobExplorer: PropTypes.func,\n    deselectedIds: PropTypes.array,\n    setDeselectedIds: PropTypes.func\n};\n\nexport default TopTemplates;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\nimport {\n    Card,\n    CardBody\n} from '@patternfly/react-core';\n\n// Imports from custom components\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\n// Imports from API\nimport {\n    preflightRequest,\n    readROI,\n    readROIOptions\n} from '../../Api';\n\n// Imports from utilities\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { roi as roiConst } from '../../Utilities/constants';\nimport useRedirect from '../../Utilities/useRedirect';\nimport {\n    calculateDelta,\n    convertSecondsToHours\n} from '../../Utilities/helpers';\n\n// Chart\nimport TopTemplatesSavings from '../../Charts/ROITopTemplates';\n\n// Local imports\nimport { BorderedCardTitle } from './helpers';\nimport TotalSavings from './TotalSavings';\nimport CalculationCost from './CalculationCost';\nimport AutomationFormula from './AutomationFormula';\nimport TopTemplates from './TopTemplates';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 5fr 2fr;\n  height: 100%;\n`;\n\nconst WrapperLeft = styled.div`\n  flex: 5;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n`;\n\nconst WrapperRight = styled.div`\n  flex: 2;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst mapApi = ({ items = []}) => items.map(el => ({\n    ...el,\n    delta: 0,\n    avgRunTime: 3600,\n    manualCost: 0,\n    automatedCost: 0\n}));\n\nconst updateDeltaCost = (data, costAutomation, costManual) => data.map(el => {\n    const manualCost = convertSecondsToHours(el.avgRunTime) * el.successful_hosts_total * parseFloat(costManual);\n    const automatedCost = convertSecondsToHours(el.successful_elapsed_total) * parseFloat(costAutomation);\n    const delta = calculateDelta(automatedCost, manualCost);\n\n    return { ...el, delta, manualCost, automatedCost };\n});\n\nconst computeTotalSavings = data => data.reduce((sum, curr) => sum + curr.delta, 0);\n\nconst AutomationCalculator = ({ history }) => {\n    const toJobExplorer = useRedirect(history, 'jobExplorer');\n    const [ costManual, setCostManual ] = useState('50');\n    const [ costAutomation, setCostAutomation ] = useState('20');\n\n    const [ preflight, setPreflight ] = useApi(null);\n    const [ options, setOptions ] = useApi({});\n    const [ api, fetchApi, setDataInApi ] = useApi(\n        [],\n        (data) => updateDeltaCost(mapApi(data), costAutomation, costManual)\n    );\n\n    const {\n        queryParams,\n        setFromToolbar\n    } = useQueryParams(roiConst.defaultParams);\n\n    /**\n     * Modifies one elements avgRunTime in the unfilteredData\n     * and updates all calculated fields.\n     * Used in top templates.\n     */\n    const setDataRunTime = (seconds, id) => {\n        const updatedData = api.data.map(el => {\n            if (el.id === id) {\n                el.avgRunTime = seconds;\n                const updatedDelta = updateDeltaCost([ el ], costAutomation, costManual)[0];\n                return updatedDelta;\n            } else {\n                return el;\n            }\n        });\n\n        setDataInApi(updatedData);\n    };\n\n    useEffect(() => {\n        setPreflight(preflightRequest());\n        setOptions(readROIOptions({ params: queryParams }));\n    }, []);\n\n    /**\n     * Recalculates the delta and costs in the data after the cost is changed.\n     */\n    useEffect(() => {\n        setDataInApi(\n            updateDeltaCost(api.data, costAutomation, costManual)\n        );\n    }, [ costAutomation, costManual ]);\n\n    /**\n     * Get data from API depending on the queryParam.\n     */\n    useEffect(() => {\n        fetchApi(readROI({ params: queryParams }));\n    }, [ queryParams ]);\n\n    /**\n     * Function to redirect to the job explorer page\n     * with the same filters as is used here.\n     */\n    const redirectToJobExplorer = templateId => {\n        const initialQueryParams = {\n            quick_date_range: 'last_30_days',\n            template_id: [ templateId ]\n        };\n        toJobExplorer(initialQueryParams);\n    };\n\n    const renderLeft = () => (\n        <WrapperLeft>\n            <Main style={ { paddingBottom: '0' } }>\n                <Card>\n                    <BorderedCardTitle>Automation savings</BorderedCardTitle>\n                    <CardBody>\n                        { api.isLoading && <LoadingState /> }\n                        { api.error && <ApiErrorState message={ api.error.error } /> }\n                        { api.isSuccess && api.data.length <= 0 && <NoData /> }\n                        { api.isSuccess && api.data.length > 0 && (\n                            <React.Fragment>\n                                <TopTemplatesSavings\n                                    margin={ { top: 20, right: 20, bottom: 20, left: 70 } }\n                                    id=\"d3-roi-chart-root\"\n                                    data={ api.data }\n                                />\n                                <p style={ { textAlign: 'center' } }>Templates</p>\n                            </React.Fragment>\n                        ) }\n                    </CardBody>\n                </Card>\n            </Main>\n            <Main>\n                <AutomationFormula />\n            </Main>\n        </WrapperLeft>\n    );\n\n    const renderRight = () => (\n        <WrapperRight>\n            <Main style={ { paddingBottom: '0', paddingLeft: '0' } }>\n                <TotalSavings totalSavings={ computeTotalSavings(api.data) } />\n            </Main>\n            <Main style={ { display: 'flex', flexDirection: 'column', flex: '1 1 0', paddingLeft: '0' } }>\n                <CalculationCost\n                    costManual={ costManual }\n                    setCostManual={ setCostManual }\n                    costAutomation={ costAutomation }\n                    setCostAutomation={ setCostAutomation }\n                />\n                <TopTemplates\n                    redirectToJobExplorer={ redirectToJobExplorer }\n                    data={ api.data }\n                    setDataRunTime={ setDataRunTime }\n                    setUnfilteredData={ api.data }\n                />\n            </Main>\n        </WrapperRight>\n    );\n\n    return (\n        <React.Fragment>\n            <PageHeader style={ { flex: '0' } }>\n                <PageHeaderTitle title={ 'Automation Calculator' } />\n            </PageHeader>\n            { preflight.error && (\n                <Main>\n                    <EmptyState\n                        preflightError={ preflight.error }\n                    />\n                </Main>\n            ) }\n            { preflight.isSuccess && (\n                <React.Fragment>\n                    <Main style={ { paddingBottom: '0' } }>\n                        <Card>\n                            <CardBody>\n                                <FilterableToolbar\n                                    categories={ options.data }\n                                    filters={ queryParams }\n                                    setFilters={ setFromToolbar }\n                                />\n                            </CardBody>\n                        </Card>\n                    </Main>\n                    <Wrapper className=\"automation-wrapper\">\n                        { renderLeft() }\n                        { renderRight() }\n                    </Wrapper>\n                </React.Fragment>\n            ) }\n        </React.Fragment>\n    );\n};\n\nAutomationCalculator.propTypes = {\n    history: PropTypes.object\n};\n\nexport default AutomationCalculator;\n","import * as d3 from 'd3';\n\nclass Tooltip {\n    constructor(opts) {\n        this.svg = opts.svg;\n        this.colors = opts.colors;\n        this.draw();\n    }\n\n    draw() {\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 145;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -41)\n        .attr('rx', 2)\n        .attr('height', 110)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.circleSuccess = this.toolTipBase\n        .append('circle')\n        .attr('cx', 26)\n        .attr('cy', 0)\n        .attr('r', 8)\n        .attr('stroke', 'white')\n        .attr('fill', 'white');\n        this.circleFail = this.toolTipBase\n        .append('circle')\n        .attr('cx', 26)\n        .attr('cy', 26)\n        .attr('r', 8)\n        .attr('stroke', 'white')\n        .attr('fill', 'white');\n        this.successText = this.toolTipBase\n        .append('text')\n        .attr('x', 43)\n        .attr('y', 4)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Successful');\n        this.failText = this.toolTipBase\n        .append('text')\n        .attr('x', 43)\n        .attr('y', 28)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Failed');\n        this.successIcon = this.toolTipBase\n        .append('text')\n        .attr('class', 'fas fa-sm')\n        .attr('fill', this.colors(1))\n        .attr('x', 19)\n        .attr('y', 5)\n        .text('\\uf058');\n        this.failedIcon = this.toolTipBase\n        .append('text')\n        .attr('class', 'fas fa-sm')\n        .attr('fill', this.colors(0))\n        .attr('x', 20)\n        .attr('y', 31)\n        .text('\\uf06a');\n        this.jobs = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 137)\n        .attr('y', -21)\n        .attr('font-size', 12)\n        .attr('text-anchor', 'end')\n        .text('No jobs');\n        this.successful = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 122)\n        .attr('y', 4)\n        .text('0');\n        this.failed = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 122)\n        .attr('y', 28)\n        .text('0');\n        this.date = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('stroke', 'white')\n        .attr('x', 20)\n        .attr('y', -21)\n        .attr('font-size', 12)\n        .text('Never');\n        this.clickMore = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 20)\n        .attr('y', 55)\n        .attr('font-size', 12)\n        .text('Click for details');\n    }\n\n    handleMouseOver = (d) => {\n        let success = 0;\n        let fail = 0;\n        let total = 0;\n        const x =\n            d3.event.pageX -\n            d3\n            .select(this.svg)\n            .node()\n            .getBoundingClientRect().x +\n            10;\n        const y =\n            d3.event.pageY -\n            d3\n            .select(this.svg)\n            .node()\n            .getBoundingClientRect().y -\n            10;\n        const formatTooltipDate = d3.timeFormat('%m/%d');\n        if (!d) {\n            return;\n        }\n\n        const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n        const chartWidth = d3\n        .select(this.svg + '> svg')\n        .node()\n        .getBoundingClientRect().width;\n        const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n        const flipped = overflow < (x / chartWidth) * 100;\n        if (d) {\n            success = d.RAN || 0;\n            fail = d.FAIL || 0;\n            total = d.TOTAL || 0;\n            this.date.text(formatTooltipDate(d.DATE || null));\n        }\n\n        if (d && d.data) {\n            success = d.data.RAN || 0;\n            fail = d.data.FAIL || 0;\n            total = d.data.TOTAL || 0;\n            this.date.text(formatTooltipDate(d.data.DATE || null));\n        }\n\n        this.jobs.text('' + total + ' jobs');\n        this.jobsWidth = this.jobs.node().getComputedTextLength();\n        this.failed.text('' + fail);\n        this.successful.text('' + success);\n        this.successTextWidth = this.successful.node().getComputedTextLength();\n        this.failTextWidth = this.failed.node().getComputedTextLength();\n\n        const maxTextPerc = this.jobsWidth / this.boxWidth * 100;\n        const threshold = 40;\n        const overage = maxTextPerc / threshold;\n        let adjustedWidth;\n        if (maxTextPerc > threshold) {\n            adjustedWidth = this.boxWidth * overage;\n        } else {\n            adjustedWidth = this.boxWidth;\n        }\n\n        this.boundingBox.attr('width', adjustedWidth);\n        this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n        if (flipped) {\n            this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n            this.boundingBox.attr('x', -adjustedWidth - 20);\n            this.circleSuccess.attr('cx', -adjustedWidth);\n            this.circleFail.attr('cx', -adjustedWidth);\n            this.failedIcon.attr('x', -adjustedWidth - 7);\n            this.successIcon.attr('x', -adjustedWidth - 7);\n            this.successText.attr('x', -adjustedWidth + 17);\n            this.failText.attr('x', -adjustedWidth + 17);\n            this.successful.attr('x', -this.successTextWidth - 20 - 12);\n            this.failed.attr('x', -this.failTextWidth - 20 - 12);\n            this.date.attr('x', -adjustedWidth - 5);\n            this.jobs.attr('x', -this.jobsWidth / 2 - 7);\n            this.clickMore.attr('x', -adjustedWidth);\n        } else {\n            this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n            this.boundingBox.attr('x', 10);\n            this.circleSuccess.attr('cx', 26);\n            this.circleFail.attr('cx', 26);\n            this.failedIcon.attr('x', 19);\n            this.successIcon.attr('x', 19);\n            this.successText.attr('x', 43);\n            this.failText.attr('x', 43);\n            this.successful.attr('x', (adjustedWidth - this.successTextWidth));\n            this.failed.attr('x', (adjustedWidth - this.failTextWidth));\n            this.date.attr('x', 20);\n            this.jobs.attr('x', (adjustedWidth));\n            this.clickMore.attr('x', 20);\n        }\n\n        this.toolTipBase.style('opacity', 1);\n        this.toolTipBase.interrupt();\n    }\n\n    handleMouseOut = () => {\n        this.toolTipBase\n        .transition()\n        .delay(15)\n        .style('opacity', 0)\n        .style('pointer-events', 'none');\n    }\n}\n\nexport default Tooltip;\n","import React, { Component } from 'react';\nimport {\n    withRouter\n} from 'react-router-dom';\n\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { stringify } from 'query-string';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\n\nclass BarChart extends Component {\n    constructor(props) {\n        super(props);\n        this.draw = this.draw.bind(this);\n        this.init = this.init.bind(this);\n        this.resize = this.resize.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.state = {\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    redirectToJobExplorer({ data: { DATE: date }}) {\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const initialQueryParams = {\n            start_date: formattedDate,\n            end_date: formattedDate,\n            quick_date_range: 'custom',\n            status: [ 'failed', 'successful' ]\n        };\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => { this.init(); }, 500)\n        });\n    }\n\n    init() {\n        this.draw();\n    }\n\n    // Methods\n    draw() {\n        // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const parseTime = d3.timeParse('%Y-%m-%d');\n        let { data: unformattedData, value } = this.props;\n        const data = unformattedData.reduce((formatted, { created, successful, failed }) => {\n            let DATE = parseTime(created) || new Date();\n            let RAN = +successful || 0;\n            let FAIL = +failed || 0;\n            let TOTAL = +successful + failed || 0;\n            return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n        }, []);\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n        const x = d3\n        .scaleBand()\n        .rangeRound([ 0, width ])\n        .padding(0.35); // percentage\n        const y = d3.scaleLinear().range([ height, 0 ]);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n                this.props.margin.left +\n                ',' +\n                this.props.margin.top +\n                ')'\n        );\n        //[fail, success]\n        let colors = d3.scaleOrdinal([ '#6EC664', '#A30000' ]);\n\n        const barTooltip = new Tooltip({\n            svg: '#' + this.props.id,\n            colors\n        });\n        const status = [ 'FAIL', 'RAN' ];\n\n        // stack our data\n        const stack = d3\n        .stack()\n        .keys(status)\n        .order(d3.stackOrderNone)\n        .offset(d3.stackOffsetNone);\n\n        const layers = stack(data);\n        // Scale the range of the data\n        x.domain(layers[0].map(d => d.data.DATE));\n        y.domain([ 0, d3.max(layers[layers.length - 1], d => d[1] * 1.15) || 8 ]);\n        // Add the Y Axis\n        svg\n        .append('g')\n        .attr('class', 'y-axis')\n        .call(\n            d3\n            .axisLeft(y)\n            .tickSize(-width, 0, 0)\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.y-axis .tick text').attr('x', -5);\n        // text label for the y axis\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Jobs across all clusters');\n        // Add the X Axis\n        let ticks;\n        const maxTicks = Math.round(data.length / (value / 2));\n        ticks = data.map(d => d.DATE);\n        if (value === 31) {\n            ticks = data.map((d, i) =>\n                i % maxTicks === 0 ? d.DATE : undefined).filter(item => item);\n        }\n\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(\n            d3\n            .axisBottom(x)\n            .tickValues(ticks)\n            .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.x-axis .tick text')\n        .attr('y', 10);\n\n        // text label for the x axis\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' +\n                width / 2 +\n                ' ,' +\n                (height + this.props.margin.top + 20) +\n                ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n\n        const layer = svg\n        .selectAll('layer')\n        .data(layers)\n        .enter()\n        .append('g')\n        .attr('class', 'layer')\n        .style('fill', (_d, i) => colors(i));\n        layer\n        .selectAll('rect')\n        .data(d => d)\n        .enter()\n        .append('rect')\n        .attr('x', d => x(d.data.DATE))\n        .attr('y', d => y(d[0]))\n        .attr('height', 0)\n        .attr('width', x.bandwidth() - 1)\n        .transition()\n        .duration(550)\n        .ease(d3.easeCubic)\n        .attr('y', d => y(d[1]))\n        .attr('height', d => y(d[0]) - y(d[1]));\n        layer\n        .selectAll('rect')\n        .on('mouseover', barTooltip.handleMouseOver)\n        .on('mousemove', barTooltip.handleMouseOver)\n        .on('mouseout', barTooltip.handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.value !== this.props.value) {\n            this.init();\n        }\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        return <div id={ this.props.id } />;\n    }\n}\n\nBarChart.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    value: PropTypes.number,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    history: PropTypes.object\n};\n\nexport default initializeChart(withRouter(BarChart));\n","import React, { Component } from 'react';\nimport {\n    withRouter\n} from 'react-router-dom';\nimport initializeChart from './BaseChart';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\nimport { stringify } from 'query-string';\nimport * as d3 from 'd3';\n\nclass LineChart extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.updateCluster = this.updateCluster.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.state = {\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    redirectToJobExplorer({ DATE: date }) {\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const { clusterId } = this.props;\n        const initialQueryParams = {\n            start_date: formattedDate,\n            end_date: formattedDate,\n            quick_date_range: 'custom',\n            status: [ 'failed', 'successful' ],\n            cluster_id: [ clusterId ]\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => { this.init(); }, 500)\n        });\n    }\n\n    getTickCount() {\n        const { value } = this.props;\n        if (value > 20) {\n            return (value / 2);\n        } else {\n            return value;\n        }\n    }\n    updateCluster() {\n        this.init();\n    }\n    init() {\n        this.draw();\n    }\n    // Methods\n    draw() {\n    // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n\n        function transition(path) {\n            path\n            .transition()\n            .duration(1000)\n            .attrTween('stroke-dasharray', tweenDash);\n        }\n\n        function tweenDash() {\n            const l = this.getTotalLength();\n            const i = d3.interpolateString('0,' + l, l + ',' + l);\n            return function(t) {\n                return i(t);\n            };\n        }\n\n        const x = d3.scaleTime().rangeRound([ 0, width ]);\n        const y = d3.scaleLinear().range([ height, 0 ]);\n\n        //[success, fail, total]\n        let colors = d3.scaleOrdinal([ '#6EC664', '#A30000', '#06C' ]);\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n        .attr('z', 100)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n        // Tooltip\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id,\n            colors\n        });\n        const { data: unformattedData, value } = this.props;\n        const parseTime = d3.timeParse('%Y-%m-%d');\n\n        const data = unformattedData.reduce((formatted, { created, successful, failed }) => {\n            let DATE = parseTime(created) || new Date();\n            let RAN = +successful || 0;\n            let FAIL = +failed || 0;\n            let TOTAL = +successful + failed || 0;\n            return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n        }, []);\n        // Scale the range of the data\n        x.domain(\n            d3.extent(data, function(d) {\n                return d.DATE;\n            })\n        );\n        y.domain([\n            0,\n            d3.max(data, function(d) {\n                return d.TOTAL * 1.15 || 8;\n            })\n        ]);\n\n        const successLine = d3\n        .line()\n        .curve(d3.curveMonotoneX)\n        .x(function(d) {\n            return x(d.DATE);\n        })\n        .y(function(d) {\n            return y(d.RAN);\n        });\n\n        const failLine = d3\n        .line()\n        .defined(d => !isNaN(d.FAIL))\n        .curve(d3.curveMonotoneX)\n        .x(function(d) {\n            return x(d.DATE);\n        })\n        .y(function(d) {\n            return y(d.FAIL);\n        });\n        // Add the Y Axis\n        svg\n        .append('g')\n        .attr('class', 'y-axis')\n        .call(\n            d3\n            .axisLeft(y)\n            .ticks(10)\n            .tickSize(-width)\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.y-axis .tick text').attr('x', -5);\n\n        // text label for the y axis\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Job runs');\n        // Add the X Axis\n        let ticks;\n        const maxTicks = Math.round(data.length / (value / 2));\n        ticks = data.map(d => d.DATE);\n        if (value === 31) {\n            ticks = data.map((d, i) =>\n                i % maxTicks === 0 ? d.DATE : undefined).filter(item => item);\n        }\n\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(\n            d3\n            .axisBottom(x)\n            .tickValues(ticks)\n            .tickSize(-height)\n            .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n        ) // \"Jan-01\"\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n        // text label for the x axis\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' +\n                width / 2 +\n                ' ,' +\n                (height + this.props.margin.top + 20) +\n                ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n        const vertical = svg\n        .append('path')\n        .attr('class', 'mouse-line')\n        .style('stroke', 'black')\n        .style('stroke-width', '3px')\n        .style('stroke-dasharray', ('3, 3'))\n        .style('opacity', '0');\n\n        const handleMouseOver = function(d) {\n            tooltip.handleMouseOver(d);\n            // show vertical line\n            vertical.transition().style('opacity', '1');\n        };\n\n        const handleMouseMove = function() {\n            let intersectX = this.cx.baseVal.value;\n            vertical\n            .attr('d', function () {\n                let d = 'M' + intersectX + ',' + height;\n                d += ' ' + intersectX + ',' + 0;\n                return d;\n            });\n        };\n\n        const handleMouseOut = function() {\n            // hide tooltip\n            tooltip.handleMouseOut();\n            // hide vertical line\n            vertical.transition().style('opacity', 0);\n        };\n\n        // Add the successLine path.\n        svg\n        .append('path')\n        .data([ data ])\n        .attr('class', 'line')\n        .style('fill', 'none')\n        .style('stroke', () => colors(1))\n        .attr('stroke-width', 2)\n        .attr('d', successLine)\n        .call(transition);\n\n        // Add the failLine path.\n        svg\n        .append('path')\n        .data([ data ])\n        .attr('class', 'line')\n        .style('fill', 'none')\n        .style('stroke', () => colors(0))\n        .attr('stroke-width', 2)\n        .attr('d', failLine)\n        .call(transition);\n        svg\n        .selectAll('dot')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('r', 3)\n        .style('stroke', () => colors(1))\n        .style('fill', () => colors(1))\n        .attr('cx', function(d) {\n            return x(d.DATE);\n        })\n        .attr('cy', function(d) {\n            return y(d.RAN);\n        })\n\n        .on('mouseover', handleMouseOver)\n        .on('mousemove', handleMouseMove)\n        .on('mouseout', handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n        // create our failLine circles\n        svg\n        .selectAll('dot')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('r', 3)\n        .style('stroke', () => colors(0))\n        .style('fill', () => colors(0))\n        .attr('cx', function(d) {\n            return x(d.DATE);\n        })\n        .attr('cy', function(d) {\n            return y(d.FAIL);\n        })\n        .on('mouseover', handleMouseOver)\n        .on('mousemove', handleMouseMove)\n        .on('mouseout', handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n    }\n\n    componentDidMount() {\n        this.updateCluster();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.value !== this.props.value) {\n            this.updateCluster();\n        }\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        return <div id={ this.props.id } />;\n    }\n}\n\nLineChart.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    value: PropTypes.number,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    history: PropTypes.object,\n    clusterId: PropTypes.number\n};\n\nexport default initializeChart(withRouter(LineChart));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { trimStr } from '../Utilities/helpers';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell\n} from '@patternfly/react-core';\n\nconst DataListCell = styled(PFDataListCell)`\n    --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst ModulesList = ({ modules, isLoading }) => (\n    <DataList aria-label=\"Top Modules\" style={ {\n        maxHeight: '400px',\n        overflow: 'auto',\n        height: '400px',\n        background: 'white'\n    } }>\n        <DataListItem aria-labelledby=\"top-modules-header\">\n            <DataListCell>\n                <h3>Top modules</h3>\n            </DataListCell>\n            <DataCellEnd>\n                <h3>Usage</h3>\n            </DataCellEnd>\n        </DataListItem>\n        { isLoading && (\n            <PFDataListItem\n                aria-labelledby=\"modules-loading\"\n                key={ isLoading }\n                style={ { border: 'none' } }\n            >\n                <PFDataListCell>\n                    <LoadingState />\n                </PFDataListCell>\n            </PFDataListItem>\n        ) }\n        { !isLoading && modules.length <= 0 && (\n            <PFDataListItem\n                aria-labelledby=\"modules-no-data\"\n                key={ isLoading }\n                style={ { border: 'none' } }\n            >\n                <PFDataListCell>\n                    <NoData />\n                </PFDataListCell>\n            </PFDataListItem>\n        ) }\n        { !isLoading && modules.filter(module => module.module !== null).map(({ module, count }, index) => (\n            <DataListItem aria-labelledby=\"top-modules-detail\" key={ index }>\n                <DataListCell>\n                    <span>{ trimStr(module) }</span>\n                </DataListCell>\n                <DataCellEnd>\n                    { count }\n                </DataCellEnd>\n            </DataListItem>\n        )) }\n    </DataList>\n);\n\nModulesList.propTypes = {\n    modules: PropTypes.array,\n    isLoading: PropTypes.bool\n};\n\nexport default ModulesList;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { formatDateTime, formatSeconds, formatPercentage } from '../Utilities/helpers';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\nimport { Paths } from '../paths';\nimport { stringify } from 'query-string';\n\nimport {\n    Button,\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell,\n    Modal,\n    Label\n} from '@patternfly/react-core';\n\nimport { CircleIcon } from '@patternfly/react-icons';\n\nimport { readTemplateJobs } from '../Api';\n\nconst success = (\n    <CircleIcon\n        size=\"sm\"\n        key=\"5\"\n        style={ { color: 'rgb(110, 198, 100)', marginRight: '5px' } }\n    />\n);\nconst fail = (\n  <>\n    <CircleIcon\n        size=\"sm\"\n        key=\"5\"\n        style={ { color: 'rgb(163, 0, 0)', marginRight: '5px' } }\n    />\n    <span id=\"fail-icon\">!</span>\n  </>\n);\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst PFDataListItemNoBorder = styled(PFDataListItem)`\n    border-bottom: none;\n    margin-bottom: -20px;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataListItemCompact = styled(DataListItem)`\n  padding: 0;\n  > .pf-c-data-list__cell {\n    font-weight: 600;\n  }\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst DataListCellCompact = styled(DataListCell)`\n    padding: 7px;\n`;\n\nconst DataListFocus = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, auto);\n    grid-gap: 10px;\n    padding: var(--pf-global--spacer--lg);\n    background: #ebebeb;\n    border: 1px solid #ccc;\n    border-top: none;\n    margin-bottom: 20px;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst DataCellEndCompact = styled(DataCellEnd)`\n    padding: 7px !important;\n`;\n\nconst formatTopFailedTask = data => {\n    if (!data) {\n        return;\n    }\n\n    if (data && data[0]) {\n        const percentage = formatPercentage(data[0].fail_rate);\n        return `${data[0].task_name} ${percentage}`;\n    }\n\n    return `Unavailable`;\n};\n\nconst TemplatesList = ({ history, clusterId, templates, isLoading, queryParams }) => {\n    const [ isModalOpen, setIsModalOpen ] = useState(false);\n    const [ selectedId, setSelectedId ] = useState(null);\n    const [ selectedTemplate, setSelectedTemplate ] = useState([]);\n    const [ relatedJobs, setRelatedJobs ] = useState([]);\n\n    useEffect(() => {\n        const fetchTemplateDetails = () => {\n            return readTemplateJobs(selectedId, { params: queryParams });\n        };\n\n        const update = async () => {\n            await window.insights.chrome.auth.getUser();\n            fetchTemplateDetails().then(data => {\n                setSelectedTemplate(data);\n                setRelatedJobs(data.related_jobs);\n            });\n        };\n\n        if (selectedId) {\n            update();\n        }\n\n    }, [ selectedId ]);\n\n    const redirectToJobExplorer = () => {\n        const { jobExplorer } = Paths;\n        const initialQueryParams = {\n            template_id: [ selectedId ],\n            status: [ 'successful', 'failed', 'new', 'pending', 'waiting', 'error', 'canceled', 'running' ],\n            job_type: [ 'job' ],\n            start_date: queryParams.startDate,\n            end_date: queryParams.endDate,\n            quick_date_range: 'custom',\n            cluster_id: [ clusterId ]\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    return (\n    <>\n      <DataList aria-label=\"Top Templates\" style={ {\n          maxHeight: '400px',\n          overflow: 'auto',\n          height: '400px',\n          background: 'white'\n      } }>\n          <DataListItem aria-labelledby=\"top-templates-header\">\n              <DataListCell>\n                  <h3>Top templates</h3>\n              </DataListCell>\n              <DataCellEnd>\n                  <h3>Usage</h3>\n              </DataCellEnd>\n          </DataListItem>\n          { isLoading && (\n              <PFDataListItem\n                  aria-labelledby=\"templates-loading\"\n                  key={ isLoading }\n                  style={ { border: 'none' } }\n\n              >\n                  <PFDataListCell>\n                      <LoadingState />\n                  </PFDataListCell>\n              </PFDataListItem>\n          ) }\n          { !isLoading && templates.length <= 0 && (\n              <PFDataListItem\n                  aria-labelledby=\"templates-no-data\"\n                  key={ isLoading }\n                  style={ { border: 'none' } }\n              >\n                  <PFDataListCell>\n                      <NoData />\n                  </PFDataListCell>\n              </PFDataListItem>\n          ) }\n          { !isLoading && templates.map(({ name, count, id }, index) => (\n              <DataListItem aria-labelledby=\"top-templates-detail\" key={ index }>\n                  <DataListCell>\n                      <a\n                          onClick={ () => {\n                              setIsModalOpen(true);\n                              setSelectedId(id);\n                          } }\n                      >\n                          { name }\n                      </a>\n                  </DataListCell>\n                  <DataCellEnd>\n                      { count }\n                  </DataCellEnd>\n              </DataListItem>\n          )) }\n      </DataList>\n      { selectedTemplate && selectedTemplate !== [] && (\n          <Modal\n              width={ '80%' }\n              title={ selectedTemplate.name ? selectedTemplate.name : 'no-template-name' }\n              isOpen={ isModalOpen }\n              onClose={ () => {\n                  setIsModalOpen(false);\n                  setSelectedTemplate([]);\n                  setRelatedJobs([]);\n                  setSelectedId(null);\n              } }\n              actions={ [\n                  <Button\n                      key=\"cancel\"\n                      variant=\"secondary\"\n                      onClick={ () => {\n                          setIsModalOpen(false);\n                          setSelectedTemplate([]);\n                          setRelatedJobs([]);\n                          setSelectedId(null);\n                      } }\n                  >\n              Close\n                  </Button>\n              ] }\n          >\n              <DataList aria-label=\"Selected Template Details\">\n                  <PFDataListItemNoBorder\n                      aria-labelledby=\"Selected Template Statistics\"\n                  >\n                      <DataListFocus>\n                          <div aria-labelledby=\"job runs\">\n                              <b style={ { marginRight: '10px' } }>Number of runs</b>\n                              { selectedTemplate.total_run_count ?\n                                  selectedTemplate.total_run_count : 'Unavailable' }\n                          </div>\n                          <div aria-labelledby=\"total time\">\n                              <b style={ { marginRight: '10px' } }>Total time</b>\n                              { selectedTemplate.total_run ?\n                                  selectedTemplate.total_run : 'Unavailable' }\n                          </div>\n                          <div aria-labelledby=\"Avg Time\">\n                              <b style={ { marginRight: '10px' } }>Avg time</b>\n                              { selectedTemplate.average_run ?\n                                  selectedTemplate.average_run : 'Unavailable' }\n                          </div>\n                          <div aria-labelledby=\"success rate\">\n                              <b style={ { marginRight: '10px' } }>Success rate</b>\n                              { !isNaN(selectedTemplate.success_rate) ?\n                                  formatPercentage(selectedTemplate.success_rate) : 'Unavailable' }\n                          </div>\n                          <div aria-labelledby=\"most failed task\">\n                              <b style={ { marginRight: '10px' } }>Most failed task</b>\n                              { selectedTemplate.most_failed_tasks ?\n                                  formatTopFailedTask(selectedTemplate.most_failed_tasks) : 'Unavailable' }\n                          </div>\n                      </DataListFocus>\n                  </PFDataListItemNoBorder>\n                  <DataListItemCompact>\n                      <DataListCellCompact key=\"last5jobs\">\n                          <Label variant=\"outline\">Last 5 jobs</Label>\n                      </DataListCellCompact>,\n                      <DataCellEndCompact>\n                          <Button component=\"a\" onClick={ redirectToJobExplorer } variant=\"link\">\n                              View all jobs\n                          </Button>\n                      </DataCellEndCompact>\n                  </DataListItemCompact>\n                  <DataListItemCompact aria-labelledby=\"datalist header\">\n                      <PFDataListCell key=\"job heading\">Id/Name</PFDataListCell>\n                      <PFDataListCell key=\"cluster heading\">Cluster</PFDataListCell>\n                      <PFDataListCell key=\"start time heading\">Start Time</PFDataListCell>\n                      <PFDataListCell key=\"total time heading\">Total Time</PFDataListCell>\n                  </DataListItemCompact>\n                  { relatedJobs.length <= 0 && <LoadingState /> }\n                  { relatedJobs.length > 0 &&\n              relatedJobs.map((job, index) => (\n                  <DataListItem\n                      style={ { padding: '10px 0' } }\n                      key={ `job-details-${index}` }\n                      aria-labelledby=\"job details\"\n                  >\n                      <PFDataListCell key=\"job name\">\n                          { job.status === 'successful' ? success : fail }{ ' ' }\n                          { job.job_id } - { job.job_name }\n                      </PFDataListCell>\n                      <PFDataListCell key=\"job cluster\">\n                          { job.cluster_label || job.install_uuid }\n                      </PFDataListCell>\n                      <PFDataListCell key=\"start time\">\n                          { formatDateTime(job.start_time) }\n                      </PFDataListCell>\n                      <PFDataListCell key=\"total time\">\n                          { formatSeconds(job.total_time) }\n                      </PFDataListCell>\n                  </DataListItem>\n              )) }\n              </DataList>\n          </Modal>\n      ) }\n    </>\n    );\n};\n\nTemplatesList.propTypes = {\n    templates: PropTypes.array,\n    isLoading: PropTypes.bool,\n    queryParams: PropTypes.object\n};\n\nexport default TemplatesList;\n","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport {\n    preflightRequest,\n    readChart30,\n    readClusters,\n    readModules,\n    readTemplates\n} from '../../Api';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle,\n    FormSelect,\n    FormSelectOption\n} from '@patternfly/react-core';\n\nimport { FilterIcon } from '@patternfly/react-icons';\n\nimport BarChart from '../../Charts/BarChart';\nimport LineChart from '../../Charts/LineChart';\nimport ModulesList from '../../Components/ModulesList';\nimport TemplatesList from '../../Components/TemplatesList';\n\nconst CardTitle = styled(PFCardTitle)`\n  border-bottom: 2px solid #ebebeb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &&& {\n    min-height: 60px;\n    --pf-c-card--first-child--PaddingTop: 10px;\n    --pf-c-card__header--not-last-child--PaddingBottom: 10px;\n\n    h3 {\n      font-size: 0.875em;\n    }\n  }\n`;\n\nconst timeFrameOptions = [\n    { value: 'please choose', label: 'Select date range', disabled: true },\n    { value: 7, label: 'Past week', disabled: false },\n    { value: 14, label: 'Past 2 weeks', disabled: false },\n    { value: 31, label: 'Past month', disabled: false }\n];\n\nfunction formatClusterName(data) {\n    const defaultClusterOptions = [\n        { value: 'please choose', label: 'Select cluster', disabled: true },\n        { value: 'all', label: 'All clusters', disabled: false }\n    ];\n    return data.reduce(\n        (formatted, { label, cluster_id: id, install_uuid: uuid }) => {\n            if (label.length === 0) {\n                formatted.push({ value: id, label: uuid, disabled: false });\n            } else {\n                formatted.push({ value: id, label, disabled: false });\n            }\n\n            return formatted;\n        },\n        defaultClusterOptions\n    );\n}\n\nconst initialQueryParams = {\n    startDate: moment()\n    .subtract(1, 'month')\n    .format('YYYY-MM-DD'),\n    endDate: moment().format('YYYY-MM-DD')\n};\n\nconst Clusters = ({ history }) => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [ barChartData, setBarChartData ] = useState([]);\n    const [ lineChartData, setLineChartData ] = useState([]);\n    const [ templatesData, setTemplatesData ] = useState([]);\n    const [ modulesData, setModulesData ] = useState([]);\n    const [ clusterOptions, setClusterOptions ] = useState([]);\n    const [ clusterTimeFrame, setClusterTimeFrame ] = useState(31);\n    const [ selectedCluster, setSelectedCluster ] = useState('all');\n    const [ isLoading, setIsLoading ] = useState(true);\n    const { queryParams, setEndDate, setStartDate, setId } = useQueryParams(\n        initialQueryParams\n    );\n\n    useEffect(() => {\n        insights.chrome.appNavClick({ id: 'clusters', secondaryNav: true });\n\n        setIsLoading(true);\n        window.insights.chrome.auth.getUser().then(() =>\n            preflightRequest().then(() =>\n                readClusters().then(({ templates: clustersData = []}) => {\n                    const clusterOptions = formatClusterName(clustersData);\n                    setClusterOptions(clusterOptions);\n                    setIsLoading(false);\n                })\n            ).catch((error) => {\n                setPreFlightError({ preflightError: error });\n            })\n        );\n    }, []);\n\n    // Get and update the data\n    useEffect(() => {\n        setIsLoading(true);\n        window.insights.chrome.auth.getUser().then(() =>\n            Promise.all([\n                readChart30({ params: queryParams }),\n                readModules({ params: queryParams }),\n                readTemplates({ params: queryParams })\n            ]).then(([\n                { data: chartData = []},\n                { modules: modulesData = []},\n                { templates: templatesData = []}\n            ]) => {\n                queryParams.id ? setLineChartData(chartData) : setBarChartData(chartData);\n                setModulesData(modulesData);\n                setTemplatesData(templatesData);\n                setIsLoading(false);\n            }).catch(() => [])\n        );\n    }, [ queryParams ]);\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={ 'Clusters' } />\n            </PageHeader>\n            { preflightError && (\n                <Main>\n                    <EmptyState { ...preflightError } />\n                </Main>\n            ) }\n            { !preflightError && (\n        <>\n          <Main style={ { paddingBottom: '0' } }>\n              <Card>\n                  <CardTitle style={ { paddingBottom: '0', paddingTop: '0' } }>\n                      <h2>\n                          <FilterIcon style={ { marginRight: '10px' } } />\n                  Filter\n                      </h2>\n                      <div style={ { display: 'flex', justifyContent: 'flex-end' } }>\n                          <FormSelect\n                              name=\"selectedCluster\"\n                              value={ selectedCluster }\n                              onChange={ value => {\n                                  setSelectedCluster(value);\n                                  setId(value);\n                              } }\n                              aria-label=\"Select Cluster\"\n                              style={ { margin: '2px 10px' } }\n                          >\n                              { clusterOptions.map(({ value, label, disabled }, index) => (\n                                  <FormSelectOption\n                                      isDisabled={ disabled }\n                                      key={ index }\n                                      value={ value }\n                                      label={ label }\n                                  />\n                              )) }\n                          </FormSelect>\n                          <FormSelect\n                              name=\"clusterTimeFrame\"\n                              value={ clusterTimeFrame }\n                              onChange={ value => {\n                                  setClusterTimeFrame(+value);\n                                  setEndDate();\n                                  setStartDate(+value);\n                              } }\n                              aria-label=\"Select Date Range\"\n                              style={ { margin: '2px 10px' } }\n                          >\n                              { timeFrameOptions.map((option, index) => (\n                                  <FormSelectOption\n                                      isDisabled={ option.disabled }\n                                      key={ index }\n                                      value={ option.value }\n                                      label={ option.label }\n                                  />\n                              )) }\n                          </FormSelect>\n                      </div>\n                  </CardTitle>\n              </Card>\n          </Main>\n          <Main>\n              <Card>\n                  <PFCardTitle>\n                      <h2>Job status</h2>\n                  </PFCardTitle>\n                  <CardBody>\n                      { isLoading && !preflightError && <LoadingState /> }\n                      { selectedCluster === 'all' &&\n                  barChartData.length > 0 &&\n                  !isLoading && (\n                          <BarChart\n                              margin={ { top: 20, right: 20, bottom: 50, left: 70 } }\n                              id=\"d3-bar-chart-root\"\n                              data={ barChartData }\n                              value={ clusterTimeFrame }\n                          />\n                      ) }\n                      { selectedCluster !== 'all' &&\n                  lineChartData.length > 0 &&\n                  !isLoading && (\n                          <LineChart\n                              margin={ { top: 20, right: 20, bottom: 50, left: 70 } }\n                              id=\"d3-line-chart-root\"\n                              data={ lineChartData }\n                              value={ clusterTimeFrame }\n                              clusterId={ queryParams.id }\n                          />\n                      ) }\n                  </CardBody>\n              </Card>\n              <div\n                  className=\"dataCard\"\n                  style={ { display: 'flex', marginTop: '20px' } }\n              >\n                  <TemplatesList\n                      history={ history }\n                      queryParams={ queryParams }\n                      clusterId={ queryParams.id }\n                      templates={ templatesData.slice(0, 10) }\n                      isLoading={ isLoading }\n                  />\n                  <ModulesList\n                      modules={ modulesData.slice(0, 10) }\n                      isLoading={ isLoading }\n                  />\n              </div>\n          </Main>\n        </>\n            ) }\n        </React.Fragment>\n    );\n};\n\nexport default Clusters;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Switch as PFSwitch } from '@patternfly/react-core';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  overflow: auto;\n  width: 100%;\n  height: ${props => props.height};\n`;\n\nconst LegendDetail = styled.div`\n  display: flex;\n  padding: 7.5px 15px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  overflow: auto;\n`;\n\nconst Color = styled.div.attrs(props => ({\n    color: props.color || 'black'\n}))`\n  min-width: 12px;\n  height: 12px;\n  background: ${props => props.color};\n  margin-right: 20px;\n`;\n\nconst Title = styled.span`\n  font-size: 15px;\n  display: inline-block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n`;\n\nconst SubTitle = styled.span`\n    font-size: 15px;\n    margin-left: 20px;\n`;\n\nconst Switch = styled(PFSwitch)`\n  margin-left: 20px;\n\n  svg {\n    display: none;\n  }\n`;\n\nclass Legend extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(_isChecked, { target: { value }}) {\n        const { onToggle } = this.props;\n        const selectedId = parseFloat(value);\n        onToggle(selectedId);\n    };\n    render() {\n        const { data, selected, height } = this.props;\n        return (\n            <Container height={ height }>\n                { data.map(\n                    ({ name, value, id, count }, index) => (\n                        <LegendDetail key={ index }>\n                            <Wrapper>\n                                <Color color={ value } />\n                                <Title>{ name }</Title>\n                            </Wrapper>\n                            { count && (\n                                <SubTitle>{ count }</SubTitle>\n                            ) }\n                            { selected && (\n                                <Switch\n                                    isChecked={ selected.some(selection => selection === id) }\n                                    onChange={ this.handleChange }\n                                    aria-label={ name }\n                                    value={ id }\n                                    id={ `${name}-${id}` }\n                                />\n                            ) }\n                        </LegendDetail>\n                    )) }\n            </Container>\n        );\n    }\n}\n\nLegend.propTypes = {\n    data: PropTypes.array,\n    selected: PropTypes.array,\n    onToggle: PropTypes.func,\n    height: PropTypes.string\n};\n\nexport default Legend;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\n\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport Legend from '../Utilities/Legend';\nimport { Paths } from '../paths';\nimport { stringify } from 'query-string';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nconst formatDate = (date) => {\n    const pieces = date.split('-');\n    return `${pieces[1]}/${pieces[2]}`;\n};\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        this.draw();\n    }\n\n    draw() {\n        this.width = 125;\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 125;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', 68)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.date = this.toolTipBase\n        .append('text')\n        .attr('x', 20)\n        .attr('y', 14)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Date');\n        this.jobs = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 72)\n        .attr('y', 14)\n        .text('0 Jobs');\n        this.orgName = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', -1)\n        .attr('font-size', 12)\n        .text('Org');\n        this.clickMore = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 20)\n        .attr('y', 30)\n        .attr('font-size', 12)\n        .text('Click for details');\n    }\n\n  handleMouseOver = d => {\n      let date;\n      let orgName;\n      let jobs;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      if (!d) {\n          return;\n      } else {\n          const maxLength = 16;\n          date = d.date;\n          orgName = d.name;\n          jobs = d.value;\n          if (d.name.length > maxLength) {\n              orgName = d.name.slice(0, maxLength).concat('...');\n          }\n      }\n\n      const formatTooltipDate = formatDate;\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n\n      this.date.text('' + formatTooltipDate(date));\n      this.orgName.text('' + orgName);\n      this.jobs.text('' + jobs + ' Jobs');\n      this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n      const maxTextPerc = this.jobsWidth / this.boxWidth * 100;\n      const threshold = 45;\n      const overage = maxTextPerc / threshold;\n      let adjustedWidth;\n      if (maxTextPerc > threshold) {\n          adjustedWidth = this.boxWidth * overage;\n      } else {\n          adjustedWidth = this.boxWidth;\n      }\n\n      this.boundingBox.attr('width', adjustedWidth);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n          this.boundingBox.attr('x', -adjustedWidth - 20);\n          this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n          this.orgName.attr('x', -adjustedWidth - 7);\n          this.clickMore.attr('x', -adjustedWidth - 7);\n          this.date.attr('x', -adjustedWidth - 7);\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n          this.boundingBox.attr('x', 10);\n          this.orgName.attr('x', 20);\n          this.clickMore.attr('x', 20);\n          this.jobs.attr('x', adjustedWidth / 2);\n          this.date.attr('x', 20);\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass GroupedBarChart extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.handleToggle = this.handleToggle.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.orgsList = props.data[0].items;\n        this.selection = [];\n        this.state = {\n            colors: [],\n            selected: [],\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    // Methods\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => { this.init(); }, 500)\n        });\n    }\n\n    redirectToJobExplorer({ date, id }) {\n        if (id === -1) {\n            // disable clicking on \"others\" block\n            return;\n        }\n\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const initialQueryParams = {\n            quick_date_range: 'custom',\n            start_date: formattedDate,\n            end_date: formattedDate,\n            status: [ 'successful', 'failed', 'new', 'pending', 'waiting', 'error', 'canceled', 'running' ],\n            org_id: [ id ]\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    handleToggle(selectedId) {\n        if (this.selection.indexOf(selectedId) === -1) {\n            this.selection = [ ...this.selection, selectedId ];\n        } else if (this.selection.includes(selectedId)) {\n            this.selection = [ ...this.selection ].filter(s => s !== selectedId);\n        }\n\n        this.setState({ selected: this.selection });\n        this.draw();\n    }\n\n    init() {\n        // create the first 8 selected data points\n        if (this.selection.length === 0) {\n            this.orgsList.forEach((org, index) => {\n                if (index <= 7) {\n                    this.handleToggle(org.id);\n                }\n            });\n        }\n\n        // create our colors array to send to the Legend component\n        const colors = this.orgsList.map(org => {\n            const name = org.id === -1 ? 'Others' : org.name;\n            return {\n                name,\n                value: this.props.colorFunc(name),\n                id: org.id\n            };\n        });\n        this.setState({ colors });\n        this.draw();\n    }\n\n    draw() {\n        // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        let { data: unformattedData, timeFrame } = this.props;\n        const selected = this.selection;\n        const data = unformattedData.reduce((formatted, { date, items }) => {\n            const selectedOrgs = items.filter(({ id }) => selected.includes(id));\n            return formatted.concat({ date, selectedOrgs });\n        }, []);\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n        // x scale of entire chart\n        const x0 = d3\n        .scaleBand()\n        .range([ 0, width ])\n        .padding(0.35);\n        // x scale of individual grouped bars\n        const x1 = d3.scaleBand();\n        const y = d3.scaleLinear().range([ height, 0 ]);\n        // format our X Axis ticks\n        const maxTicks = Math.round(data.length / (timeFrame / 2));\n        let ticks = data.map(d => d.date);\n        if (timeFrame === 31) {\n            ticks = data.map((d, i) =>\n                i % maxTicks === 0 ? d.date : undefined\n            ).filter(item => item);\n        }\n\n        const xAxis = d3\n        .axisBottom(x0)\n        .tickValues(ticks)\n        .tickFormat(formatDate);\n\n        const yAxis = d3\n        .axisLeft(y)\n        .ticks(8)\n        .tickSize(-width, 0, 0);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n\n        const dates = data.map(d => d.date);\n        const selectedOrgNames = data[0].selectedOrgs.map(d => d.name);\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id\n        });\n        x0.domain(dates);\n        x1.domain(selectedOrgNames).range([ 0, x0.bandwidth() ]); // unsorted\n        y.domain([\n            0,\n            d3.max(data, date => d3.max(date.selectedOrgs, d => d.value * 1.15)) || 8\n        ]);\n\n        // add y axis\n        svg\n        .append('g')\n        .attr('class', 'y axis')\n        .call(yAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7')\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 6)\n        .attr('dy', '.71em')\n        .style('text-anchor', 'end')\n        .style('font-weight', 'bold')\n        .text('Value');\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Jobs across orgs');\n\n        // add x axis\n        svg\n        .append('g')\n        .attr('class', 'x axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(xAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' + width / 2 + ' ,' + (height + this.props.margin.top + 25) + ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n        // add the groups\n        let slice = svg.selectAll('.slice').data(data);\n        slice.exit().remove();\n\n        const enter = slice\n        .enter()\n        .append('g')\n        .attr('class', 'g foo')\n        .attr('transform', d => 'translate(' + x0(d.date) + ',0)');\n        slice = slice.merge(enter);\n        // add the individual bars\n        let bars = slice.selectAll('rect').data(function(d) {\n            return d.selectedOrgs;\n        });\n        bars.exit().remove();\n\n        const color = this.props.colorFunc;\n        const subEnter = bars\n        .enter()\n        .append('rect')\n        .attr('width', x1.bandwidth())\n        .attr('x', function(d) {\n            return x1(d.name);\n        }) // unsorted\n        .style('fill', function(d) {\n            return color(d.name);\n        })\n        .attr('y', function(d) {\n            return y(d.value);\n        })\n        .attr('height', function(d) {\n            return height - y(d.value);\n        })\n        .on('mouseover', function(d) {\n            d3.select(this).style('fill', d3.rgb(color(d.name)).darker(1));\n            tooltip.handleMouseOver();\n        })\n        .on('mousemove', tooltip.handleMouseOver)\n        .on('mouseout', function(d) {\n            d3.select(this).style('fill', color(d.name));\n            tooltip.handleMouseOut();\n        })\n        .on('click', this.redirectToJobExplorer);\n        bars = bars.merge(subEnter);\n    };\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        const { colors, selected } = this.state;\n        return (\n            <Wrapper>\n                <div id={ this.props.id } />\n                { colors.length > 0 && (\n                    <Legend\n                        id=\"d3-grouped-bar-legend\"\n                        data={ colors }\n                        selected={ selected }\n                        onToggle={ this.handleToggle }\n                        height=\"350px\"\n                    />\n                ) }\n            </Wrapper>\n        );\n    }\n}\n\nGroupedBarChart.propTypes = {\n    id: PropTypes.string,\n    isAccessible: PropTypes.bool,\n    data: PropTypes.array,\n    value: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    timeFrame: PropTypes.number,\n    history: PropTypes.object,\n    colorFunc: PropTypes.func\n};\n\nexport default initializeChart(GroupedBarChart);\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport { getTotal } from '../Utilities/helpers';\nimport Legend from '../Utilities/Legend';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        // defer drawing until we know the data shape\n        this.drawn = false;\n        // show the success rate or not\n        this.showSuccess = false;\n    }\n\n    draw(d) {\n        // chart1 has success rate data and chart2 does not ...\n        this.showSuccess = (d && d.data && 'success_rate' in d.data) ? true : false;\n        const boundingHeight = (this.showSuccess) ? 70 : 52;\n        const boundingWidth = (this.showSuccess) ? 120 : 108;\n\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBOx = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', boundingHeight)\n        .attr('width', boundingWidth)\n        .attr('fill', '#393f44');\n        this.orgName = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 0)\n        .text('Organization');\n        this.percentageTotal = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 16)\n        .text('0');\n        this.percentageSuccess = null;\n        if (this.showSuccess) {\n            this.percentageSuccess = this.toolTipBase\n            .append('text')\n            .attr('fill', 'white')\n            .attr('font-size', 12)\n            .attr('font-weight', 800)\n            .attr('x', 20)\n            .attr('y', 30)\n            .text('');\n        }\n    }\n\n  handleMouseOver = d => {\n      // treat draw() as a singleton to avoid a painted window effect\n      if (this.drawn !== true) {\n          this.draw(d);\n          this.drawn = true;\n      }\n\n      let perc;\n      let percSuccess;\n      let orgName;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      if (!d) {\n          return;\n      }\n\n      if (d && d.data) {\n          const maxLength = 16;\n          perc = d.data.percent;\n          percSuccess = d.data.success_rate;\n          orgName = d.data.name;\n          if (d.data.name.length > maxLength) {\n              orgName = d.data.name.slice(0, maxLength - 3).concat('...');\n          }\n      }\n\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n\n      this.percentageTotal.text('' + perc + '%');\n      if (percSuccess && this.percentageSuccess) {\n          this.percentageSuccess.text('(' + percSuccess + '% successful)');\n      }\n\n      this.orgName.text(' ' + orgName);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, -10) rotate(45)');\n          this.boundingBOx.attr('x', -125);\n          this.orgName.attr('x', -112);\n          this.percentageTotal.attr('x', -112);\n          if (this.showSuccess) {\n              this.percentageSuccess.attr('x', -112);\n          }\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, -10) rotate(45)');\n          this.boundingBOx.attr('x', 10);\n          this.orgName.attr('x', 20);\n          this.percentageTotal.attr('x', 20);\n          if (this.showSuccess) {\n              this.percentageSuccess.attr('x', 20);\n          }\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass PieChart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            colors: [],\n            timeout: null\n        };\n        this.draw = this.draw.bind(this);\n        this.init = this.init.bind(this);\n        this.resize = this.resize.bind(this);\n    }\n    // Methods\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => { this.init(); }, 500)\n        });\n    }\n    sortDescending(data) {\n    // descending\n        data.sort((a, b) =>\n            d3.descending(parseFloat(a.count), parseFloat(b.count))\n        );\n    }\n    init() {\n        const { data } = this.props;\n        // create our colors array to send to the Legend component\n        const colors = data.map(org => {\n            const name = org.id === -1 ? 'Others' : org.name;\n            return {\n                name,\n                value: this.props.colorFunc(name),\n                count: Math.round(org.count)\n            };\n        }).sort((a, b) =>\n            (a.count > b.count) ? 1 : (\n                (b.count > a.count) ? -1 : 0\n            )\n        );\n        this.setState({ colors });\n        this.draw();\n    }\n    draw() {\n        const color = this.props.colorFunc;\n\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.bottom)\n        .append('g');\n\n        svg.append('g').attr('class', 'slices');\n        svg.append('g').attr('class', 'labels');\n        svg.append('g').attr('class', 'lines');\n        const radius = Math.min(width, height) / 2;\n        const { data } = this.props;\n        const total = getTotal(data);\n        data.forEach(function(d) {\n            d.count = +d.count;\n            d.percent = +Math.round((d.count / total) * 100);\n        });\n        const donutTooltip = new Tooltip({\n            svg: '#' + this.props.id\n        });\n        const pie = d3\n        .pie()\n        .sort(null)\n        .value(d => d.count);\n        const arc = d3\n        .arc()\n        .outerRadius(radius - 10) // controls top positioning of chart\n        .innerRadius(0);\n\n        svg.attr(\n            'transform',\n            'translate(' +\n        (width + this.props.margin.left + this.props.margin.right) / 2 +\n        ',' +\n        (height + this.props.margin.top + this.props.margin.bottom) / 2 +\n        ')'\n        );\n\n        svg\n        .selectAll('path')\n        .data(pie(data))\n        .enter()\n        .append('path')\n        .attr('d', arc)\n        .attr('fill', d => color(d.data.name));\n\n        svg\n        .selectAll('path')\n        .on('mouseover', function(d) {\n            d3.select(this).style('fill', d3.rgb(color(d.data.name)).darker(1));\n            donutTooltip.handleMouseOver(d);\n        })\n        .on('mouseout', function(d) {\n            d3.select(this).style('fill', color(d.data.name));\n            donutTooltip.handleMouseOut();\n        })\n        .on('mousemove', donutTooltip.handleMouseOver);\n\n        svg.append('g').classed('labels', true);\n        svg.append('g').classed('lines', true);\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.data !== this.props.data) {\n            this.init();\n        }\n    }\n\n    render() {\n        const { colors } = this.state;\n        return (\n            <Wrapper>\n                <div id={ this.props.id } />\n                { colors.length > 0 && (\n                    <Legend\n                        id=\"d3-grouped-bar-legend\"\n                        data={ colors }\n                        selected={ null }\n                        onToggle={ null }\n                        height=\"300px\"\n                    />\n                ) }\n            </Wrapper>\n        );\n    }\n}\n\nPieChart.propTypes = {\n    id: PropTypes.string,\n    isAccessible: PropTypes.bool,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    timeFrame: PropTypes.number,\n    colorFunc: PropTypes.func\n};\n\nexport default initializeChart(PieChart);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\n\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport {\n    preflightRequest,\n    readJobsByDateAndOrg,\n    readJobRunsByOrg,\n    readJobEventsByOrg,\n    readOrgOptions\n} from '../../Api';\n\nimport { Main, PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle\n} from '@patternfly/react-core';\n\nimport GroupedBarChart from '../../Charts/GroupedBarChart';\nimport PieChart from '../../Charts/PieChart';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport { organizationStatistics as constants } from '../../Utilities/constants';\n\n// For chart colors\nimport { pfmulti } from '../../Utilities/colors';\nimport { scaleOrdinal } from 'd3';\n\nconst CardTitle = styled(PFCardTitle)`\n  border-bottom: 2px solid #ebebeb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &&& {\n    min-height: 60px;\n    --pf-c-card--first-child--PaddingTop: 10px;\n    --pf-c-card__header--not-last-child--PaddingBottom: 10px;\n\n    h3 {\n      font-size: 0.875em;\n    }\n  }\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  overflow: hidden;\n\n  .pf-c-card {\n    width: 50%;\n    margin-top: 20px;\n    overflow: auto;\n  }\n\n  .pf-c-card:first-of-type {\n    margin-right: 20px;\n  }\n`;\n\nconst TopCard = styled(Card)`\n  min-height: 500px;\n`;\n\nconst colorFunc = scaleOrdinal(pfmulti);\n\nconst optionsMapper = options => {\n    const { meta, inventory_id, ...rest } = options;\n    return { ...rest, sort_by: meta.sort_by };\n};\n\nconst orgsChartMapper = ({ dates: data = []}) => data.map(({ date, items }) => ({\n    date,\n    items: items.map(({ id, total_count, name }) => ({\n        id,\n        date,\n        value: total_count,\n        name: id === -1 ? 'Others' : (name || 'No organization')\n    }))\n}));\n\nconst pieChartMapper = attrName => ({ items = []}) =>\n    items.map(({ id, [attrName]: count, name }) => ({\n        id,\n        count,\n        name: id === -1 ? 'Others' : (name || 'No organization')\n    }));\n\nconst OrganizationStatistics = ({ history }) => {\n    const [ preflight, setPreflight ] = useApi(null);\n    const [ orgs, setOrgs ] = useApi([], orgsChartMapper);\n    const [ jobs, setJobs ] = useApi([], pieChartMapper('host_count'));\n    const [ tasks, setTasks ] = useApi([], pieChartMapper('host_task_count'));\n    const [ options, setOptions ] = useApi({}, optionsMapper);\n    const { queryParams, setFromToolbar } = useQueryParams(constants.defaultParams);\n\n    useEffect(() => {\n        insights.chrome.appNavClick({ id: 'organization-statistics', secondaryNav: true });\n        setPreflight(preflightRequest());\n        setOptions(readOrgOptions({ params: queryParams }));\n    }, []);\n\n    useEffect(() => {\n        setOrgs(readJobsByDateAndOrg({ params: queryParams }));\n        setJobs(readJobRunsByOrg({ params: queryParams }));\n        setTasks(readJobEventsByOrg({ params: queryParams }));\n    }, [ queryParams ]);\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={ 'Organization Statistics' } />\n            </PageHeader>\n            { preflight.error && (\n                <Main>\n                    <EmptyState\n                        preflightError={ preflight.error }\n                    />\n                </Main>\n            ) }\n            { preflight.isSuccess && (\n                <React.Fragment>\n                    <Main style={ { paddingBottom: '0' } }>\n                        <Card>\n                            <CardBody>\n                                <FilterableToolbar\n                                    categories={ options.data }\n                                    filters={ queryParams }\n                                    setFilters={ setFromToolbar }\n                                />\n                            </CardBody>\n                        </Card>\n                    </Main>\n                    <Main>\n                        <TopCard>\n                            <CardTitle>\n                                <h2>Organization Status</h2>\n                            </CardTitle>\n                            <CardBody>\n                                { orgs.isLoading && <LoadingState /> }\n                                { orgs.error && <ApiErrorState message={ orgs.error.error } /> }\n                                { orgs.isSuccess && orgs.data.length <= 0 && <NoData /> }\n                                { orgs.isSuccess && orgs.data.length > 0 && (\n                                    <GroupedBarChart\n                                        margin={ { top: 20, right: 20, bottom: 50, left: 50 } }\n                                        id=\"d3-grouped-bar-chart-root\"\n                                        data={ orgs.data }\n                                        history={ history }\n                                        timeFrame={ orgs.data .length }\n                                        colorFunc={ colorFunc }\n                                    />\n                                ) }\n                            </CardBody>\n                        </TopCard>\n                        <CardContainer>\n                            <Card>\n                                <CardBody style={ { padding: 0 } }>\n                                    <CardTitle style={ { padding: 0 } }>\n                                        <h2 style={ { marginLeft: '20px' } }>\n                                      Job Runs by Organization\n                                        </h2>\n                                    </CardTitle>\n                                    { jobs.isLoading && <LoadingState /> }\n                                    { jobs.error && <ApiErrorState message={ jobs.error.error } /> }\n                                    { jobs.isSuccess && jobs.data.length <= 0 && <NoData /> }\n                                    { jobs.isSuccess && jobs.data.length > 0 && (\n                                        <PieChart\n                                            margin={ { top: 20, right: 20, bottom: 0, left: 20 } }\n                                            id=\"d3-donut-1-chart-root\"\n                                            data={ jobs.data }\n                                            timeFrame={ jobs.data.length }\n                                            colorFunc={ colorFunc }\n                                        />\n                                    ) }\n                                </CardBody>\n                            </Card>\n                            <Card>\n                                <CardBody style={ { padding: 0 } }>\n                                    <CardTitle style={ { padding: 0 } }>\n                                        <h2 style={ { marginLeft: '20px' } }>\n                                      Usage by Organization (Tasks)\n                                        </h2>\n                                    </CardTitle>\n                                    { tasks.isLoading && <LoadingState /> }\n                                    { tasks.error && <ApiErrorState message={ tasks.error.error } /> }\n                                    { tasks.isSuccess && tasks.data.length <= 0 && <NoData /> }\n                                    { tasks.isSuccess && tasks.data.length > 0 && (\n                                        <PieChart\n                                            margin={ { top: 20, right: 20, bottom: 0, left: 20 } }\n                                            id=\"d3-donut-2-chart-root\"\n                                            data={ tasks.data }\n                                            timeFrame={ tasks.data.length }\n                                            colorFunc={ colorFunc }\n                                        />\n                                    ) }\n                                </CardBody>\n                            </Card>\n                        </CardContainer>\n                    </Main>\n                </React.Fragment>\n            ) }\n        </React.Fragment>\n    );\n};\n\nOrganizationStatistics.propTypes = {\n    history: PropTypes.object\n};\n\nexport default OrganizationStatistics;\n","const pfmulti = [\n    '#06C',\n    '#4CB140',\n    '#009596',\n    '#5752D1',\n    '#F4C145',\n    '#EC7A08',\n    '#8BC1F7',\n    '#23511E',\n    '#A2D9D9',\n    '#2A265F',\n    '#F9E0A2',\n    '#8F4700',\n    '#002F5D'\n];\n\nexport { pfmulti };\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst NoResults = () => {\n    return (\n        <EmptyState variant={ EmptyStateVariant.full }>\n            <EmptyStateIcon icon={ SearchIcon } />\n            <Title size=\"lg\" headingLevel=\"h4\">\n                No results found\n            </Title>\n            <EmptyStateBody>\n                No results match the filter criteria. Remove all filters or clear all filters to show results.\n            </EmptyStateBody>\n        </EmptyState>\n    );\n};\n\nexport default NoResults;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from '@patternfly/react-core';\nimport {\n    CheckCircleIcon,\n    ExclamationCircleIcon,\n    ClockIcon,\n    SyncAltIcon,\n    ExclamationTriangleIcon\n} from '@patternfly/react-icons';\n\nconst JobStatus = ({ status }) => {\n    const capitalized = (str) => str.charAt(0).toUpperCase() + str.slice(1);\n\n    const getColor = () => {\n        switch (status) {\n            case 'successful':\n                return 'green';\n            case 'failed':\n            case 'error':\n                return 'red';\n            case 'running':\n            case 'pending':\n                return 'blue';\n            case 'canceled':\n                return 'orange';\n            // case new, waiting\n            default: return 'grey';\n        }\n    };\n\n    const getIcon = () => {\n        switch (status) {\n            case 'successful':\n                return <CheckCircleIcon />;\n            case 'failed':\n            case 'error':\n                return <ExclamationCircleIcon />;\n            case 'running':\n                return <SyncAltIcon />;\n            case 'canceled':\n                return <ExclamationTriangleIcon />;\n            // case new, waiting, pending\n            default: return <ClockIcon />;\n        }\n    };\n\n    return (\n        <Label variant=\"outline\" color={ getColor() } icon={ getIcon() }>{ capitalized(status) }</Label>\n    );\n};\n\nJobStatus.propTypes = {\n    status: PropTypes.oneOf([\n        'successful',\n        'failed', 'error',\n        'running',\n        'new', 'waiting', 'pending', 'canceled'\n    ])\n};\n\nexport default JobStatus;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    DataListCell as PFDataListCell,\n    DataListContent,\n    DataList,\n    DataListItem,\n    DataListItemRow,\n    DataListItemCells as PFDataListItemCells,\n    DataListToggle as PFDataListToggle,\n    Tooltip\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkIcon } from '@patternfly/react-icons';\n\nimport LoadingState from '../Components/LoadingState';\nimport { formatDateTime, formatJobType } from '../Utilities/helpers';\nimport JobStatus from './JobStatus';\n\nconst headerLabels = [\n    'Id/Name',\n    'Status',\n    'Cluster',\n    'Organization',\n    'Type'\n];\n\nconst ExternalLinkIcon = styled(PFExternalLinkIcon)`\n    margin-left: 7px;\n    color: var(--pf-global--Color--400);\n`;\n\nconst DataListCell = styled(PFDataListCell)`\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    text-align: center;\n`;\n\nconst DataListCellHeader = styled(DataListCell)`\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    font-weight: bold;\n`;\n\nconst DataListItemCells = styled(PFDataListItemCells)`\n    align-items: center;\n`;\n\nconst DataListToggle = styled(PFDataListToggle)`\n    align-items: center;\n`;\n\nconst mobileBreakpoint = 765;\n\nconst buildHeader = labels => (\n    <DataListItem>\n        <DataListItemRow style={ { paddingLeft: '80px' } }>\n            <DataListItemCells\n                dataListCells={ labels.map(label => (\n                    <DataListCellHeader key={ label }>\n                        { label }\n                        { label === 'Id/Name' &&\n                              <ExternalLinkIcon />\n                        }\n                    </DataListCellHeader>\n                ))\n                }\n            />\n        </DataListItemRow>\n    </DataListItem>\n);\n\nconst buildListRow = (items, ariaLabel, ariaLabelledBy, windowWidth) => {\n    const [ isExpanded, setIsExpanded ] = useState([]);\n\n    return (\n        <>\n            { items.map((item, count) => {\n                const toggle = id => {\n                    const expanded = isExpanded;\n                    const idx = expanded.indexOf(id);\n                    const newExpanded =\n            idx >= 0\n                ? [\n                    ...expanded.slice(0, idx),\n                    ...expanded.slice(idx + 1, expanded.length)\n                ]\n                : [ ...expanded, id ];\n                    setIsExpanded(newExpanded);\n                };\n\n                return (\n                    <DataListItem key={ item.id.id } aria-labelledby={ ariaLabelledBy } isExpanded={ isExpanded.includes(`${item.id.id}-toggle`) } >\n                        <DataListItemRow key={ item.id.id }>\n                            <DataListToggle\n                                id={ `${item.id.id}-toggle` }\n                                aria-controls={ `${item.id.id}-expand` }\n                                onClick={ () => toggle(`${item.id.id}-toggle`) }\n                                isExpanded={ isExpanded.includes(`${item.id.id}-toggle`) }\n                            />\n                            <DataListItemCells\n                                dataListCells={ [\n                                    <DataListCell key={ count++ }>\n                                        <a href={ item.id.tower_link } target='_blank' rel='noopener noreferrer'>\n                                            { windowWidth < mobileBreakpoint &&\n                                             <span style={ { color: 'initial', fontWeight: 'bold' } }>\n                                                 Id/Name<ExternalLinkIcon />:\n                                             </span>\n                                            }\n                                            &nbsp;\n                                            { `${item.id.id} - ${item.id.template_name}` }\n                                        </a>\n                                    </DataListCell>,\n                                    <DataListCell key={ count++ }>\n\n                                        { windowWidth <= mobileBreakpoint &&\n                                            <span style={ { color: 'initial', fontWeight: 'bold' } }>Status:</span>\n                                        }\n                                            &nbsp;\n                                        <JobStatus status={ item.status } />\n                                    </DataListCell>,\n                                    <Tooltip key={ count++ } content={ <p>{ item.cluster_name }</p> }>\n                                        <DataListCell>\n                                            { windowWidth <= mobileBreakpoint &&\n                                            <span style={ { color: 'initial', fontWeight: 'bold' } }>Cluster:</span>\n                                            }\n                                            &nbsp;\n                                            { item.cluster_name }\n                                        </DataListCell>\n                                    </Tooltip>,\n                                    <DataListCell key={ count++ }>\n                                        { windowWidth <= mobileBreakpoint &&\n                                         <span style={ { color: 'initial', fontWeight: 'bold' } }>Organization:</span>\n                                        }\n                                        &nbsp;\n                                        { item.org_name }\n                                    </DataListCell>,\n                                    <DataListCell key={ count++ }>\n                                        { windowWidth <= mobileBreakpoint &&\n                                         <span style={ { color: 'initial', fontWeight: 'bold' } }>Type:</span>\n                                        }\n                                         &nbsp;\n                                        { formatJobType(item.job_type) }\n                                    </DataListCell>\n                                ] }\n                            />\n                        </DataListItemRow>\n                        <DataListContent\n                            aria-label={ `${item.id.id}-details` }\n                            id={ '${item.id.id}' }\n                            isHidden={ !isExpanded.includes(`${item.id.id}-toggle`) }\n                        >\n                            <DataListItemCells\n                                dataListCells={ [\n                                    <DataListCell key={ count++ }>\n                                        Created: { formatDateTime(item.created) }\n                                    </DataListCell>,\n                                    <DataListCell key={ count++ }>\n                                        Started: { formatDateTime(item.started) }\n                                    </DataListCell>,\n                                    <DataListCell key={ count++ }>\n                                        Finished: { formatDateTime(item.finished) }\n                                    </DataListCell>\n                                ] }\n                            />\n                        </DataListContent>\n                    </DataListItem>\n                );\n            }) }\n        </>\n    );\n};\n\nconst AllJobsTemplate = ({ jobs }) => {\n    const [ windowWidth, setWindowWidth ] = useState(window.innerWidth);\n\n    const onResize = () => setWindowWidth(window.innerWidth);\n\n    useEffect(() => {\n        window.addEventListener('resize', onResize);\n        return () => window.removeEventListener('resize', onResize);\n    }, []);\n\n    return buildListRow(jobs, 'All jobs view', 'all-jobs', windowWidth);\n};\n\nconst JobExplorerList = ({ jobs }) => {\n    const [ windowWidth, setWindowWidth ] = useState(window.innerWidth);\n\n    const onResize = () => setWindowWidth(window.innerWidth);\n\n    useEffect(() => {\n        window.addEventListener('resize', onResize);\n        return () => window.removeEventListener('resize', onResize);\n    }, []);\n\n    return (\n        <>\n            {jobs.length <= 0 && <LoadingState />}\n            <DataList isCompact>\n                { windowWidth >= mobileBreakpoint && buildHeader(headerLabels) }\n                <AllJobsTemplate jobs={ jobs } windowWidth={ windowWidth }/>\n            </DataList>\n        </>\n    );\n};\n\nJobExplorerList.propTypes = {\n    jobs: PropTypes.array,\n    windowWidth: PropTypes.number\n};\n\nAllJobsTemplate.propTypes = {\n    jobs: PropTypes.array,\n    windowWidth: PropTypes.number\n};\n\nexport default JobExplorerList;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { parse, stringify } from 'query-string';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { Paths } from '../../paths';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoResults from '../../Components/NoResults';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport {\n    preflightRequest,\n    readJobExplorer,\n    readJobExplorerOptions\n} from '../../Api';\nimport { jobExplorer } from '../../Utilities/constants';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    Pagination,\n    PaginationVariant\n} from '@patternfly/react-core';\n\nimport JobExplorerList from '../../Components/JobExplorerList';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\nconst perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '15', value: 15 },\n    { title: '20', value: 20 },\n    { title: '25', value: 25 }\n];\n\nconst initialQueryParams = {\n    ...jobExplorer.defaultParams,\n    attributes: jobExplorer.attributes\n};\n\nconst optionsMapper = options => {\n    const { groupBy, attributes, ...rest } = options;\n    return rest;\n};\n\nconst JobExplorer = ({\n    location: { search },\n    history\n}) => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [{\n        isLoading,\n        isSuccess,\n        error,\n        data: { meta = {}, items: data = []}\n    }, setData ] = useApi({ meta: {}, items: []});\n    const [ currPage, setCurrPage ] = useState(1);\n    const [ options, setOptions ] = useApi({}, optionsMapper);\n\n    let initialSearchParams = parse(search, { arrayFormat: 'bracket', parseBooleans: true });\n    let combined = { ...initialQueryParams, ...initialSearchParams };\n    const {\n        queryParams,\n        setLimit,\n        setOffset,\n        setFromToolbar\n    } = useQueryParams(combined);\n\n    const updateURL = () => {\n        const { jobExplorer } = Paths;\n        const search = stringify(queryParams, { arrayFormat: 'bracket' });\n        history.replace({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    useEffect(() => {\n        insights.chrome.appNavClick({ id: 'job-explorer', secondaryNav: true });\n\n        window.insights.chrome.auth.getUser()\n        .then(() =>\n            preflightRequest()\n            .catch((error) => { setPreFlightError({ preflightError: error }); })\n            // Loading is set false when the data also loaded\n        );\n    }, []);\n\n    useEffect(() => {\n        setData(readJobExplorer({ params: queryParams }),);\n        setOptions(readJobExplorerOptions({ params: queryParams }));\n        updateURL();\n    }, [ queryParams ]);\n\n    const returnOffsetVal = page => (page - 1) * queryParams.limit;\n\n    const handleSetPage = page => {\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    const handlePerPageSelect = (perPage, page) => {\n        setLimit(perPage);\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={ 'Job Explorer' } />\n            </PageHeader>\n\n            { preflightError && (\n                <Main>\n                    <EmptyState { ...preflightError } />\n                </Main>\n            ) }\n\n            { !preflightError && (\n                <Main>\n                    <Card>\n                        <CardBody>\n                            <FilterableToolbar\n                                categories={ options.data }\n                                filters={ queryParams }\n                                setFilters={ setFromToolbar }\n                                pagination={\n                                    <Pagination\n                                        itemCount={ meta && meta.count ? meta.count : 0 }\n                                        widgetId=\"pagination-options-menu-top\"\n                                        perPageOptions={ perPageOptions }\n                                        perPage={ queryParams.limit }\n                                        page={ currPage }\n                                        variant={ PaginationVariant.top }\n                                        onPerPageSelect={ (_event, perPage, page) => {\n                                            handlePerPageSelect(perPage, page);\n                                        } }\n                                        onSetPage={ (_event, pageNumber) => {\n                                            handleSetPage(pageNumber);\n                                        } }\n                                        isCompact\n                                    />\n                                }\n                                hasSettings\n                            />\n                            { error && <ApiErrorState message={ error.error } /> }\n                            { isLoading && <LoadingState /> }\n                            { isSuccess && data.length <= 0 && <NoResults /> }\n                            { isSuccess && data.length > 0 && <JobExplorerList jobs={ data } /> }\n                            <Pagination\n                                itemCount={ meta && meta.count ? meta.count : 0 }\n                                widgetId=\"pagination-options-menu-bottom\"\n                                perPageOptions={ perPageOptions }\n                                perPage={ queryParams.limit }\n                                page={ currPage }\n                                variant={ PaginationVariant.bottom }\n                                onPerPageSelect={ (_event, perPage, page) => {\n                                    handlePerPageSelect(perPage, page);\n                                } }\n                                onSetPage={ (_event, pageNumber) => {\n                                    handleSetPage(pageNumber);\n                                } }\n                                style={ { marginTop: '20px' } }\n                            />\n                        </CardBody>\n                    </Card>\n                </Main>\n            ) }\n        </React.Fragment>\n    );\n};\n\nJobExplorer.propTypes = {\n    location: PropTypes.object,\n    history: PropTypes.object\n};\n\nexport default JobExplorer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nimport {\n    NotificationDrawerList as PFNotificationDrawerList,\n    NotificationDrawerListItem as PFNotificationDrawerListItem,\n    NotificationDrawerListItemBody,\n    NotificationDrawerListItemHeader\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkAltIcon } from '@patternfly/react-icons';\nimport LoadingState from '../Components/LoadingState';\nimport { capitalize } from '../Utilities/helpers';\n\nconst ExternalLinkAltIcon = styled(PFExternalLinkAltIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n  font-size: 14px;\n`;\n\nconst NotificationDrawerListItem = styled(PFNotificationDrawerListItem)`\n  border-top: 1px solid var(--pf-global--BorderColor--light-100\n    );\n  border-bottom::nth-child(odd): 1px solid var(--pf-global--BorderColor--light-100\n    );\n  box-shadow: none;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst NotificationDrawerList = styled(PFNotificationDrawerList)`\n    &:last-child {\n      border-bottom: 1px solid var(--pf-global--BorderColor--light-100\n        );\n    }\n`;\n\nconst stringifyDate = (date) => {\n    const day = moment(date);\n    const oneHour = 60 * 60 * 1000;\n    const now = moment().utc();\n\n    if (now.isAfter(day)) {\n        return `${now.diff(day, 'days')} day(s) ago.`;\n    }\n\n    if (day.isSame(now, 'day')) {\n        if (day.valueOf() > oneHour) {\n            return  `${day.diff(now, 'hours') } hour(s) ago.`;\n        }\n\n        return `${now.diff(day, 'minutes')} minute(s) ago.`;\n    }\n};\n\nconst AllNotificationTemplate = ({ notifications }) =>\n    notifications.map(\n        ({ date, message, label, notification_id: id, tower_url: url }) => {\n            if (label === '' || label === 'notice') {\n                return (\n                    <NotificationDrawerListItem\n                        variant=\"info\"\n                        key={ date + '-' + id }\n                    >\n                        <NotificationDrawerListItemHeader\n                            variant=\"info\"\n                            title={\n                            <>\n                              { url ? (\n                                  <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                                      { capitalize(label) }\n                                      <ExternalLinkAltIcon />\n                                  </a>\n                              ) : capitalize(label) }\n                            </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody>\n                            { message }{ ' ' }\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n\n            if (label === 'error') {\n                return (\n                    <NotificationDrawerListItem\n                        variant=\"danger\"\n                        key={ date + '-' + id }\n                    >\n                        <NotificationDrawerListItemHeader\n                            variant=\"danger\"\n                            title={\n                            <>\n                              { url ? (\n                                  <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                                      { capitalize(label) }\n                                      <ExternalLinkAltIcon />\n                                  </a>\n                              ) : capitalize(label) }\n                            </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody timestamp={ stringifyDate(date) }>\n                            { message }{ ' ' }\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n\n            if (label === 'warning') {\n                return (\n                    <NotificationDrawerListItem\n                        variant=\"warning\"\n                        key={ date + '-' + id }\n                    >\n                        <NotificationDrawerListItemHeader\n                            variant=\"warning\"\n                            title={\n                            <>\n                              { url ? (\n                                  <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                                      { capitalize(label) }\n                                      <ExternalLinkAltIcon />\n                                  </a>\n                              ) : capitalize(label) }\n                            </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody timestamp={ stringifyDate(date) }>\n                            { message }{ ' ' }\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n        }\n    );\n\nconst ErrorNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'error')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem\n            variant=\"danger\"\n            key={ date + '-' + id }\n        >\n            <NotificationDrawerListItemHeader\n                variant=\"danger\"\n                title={\n                <>\n                  { url ? (\n                      <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                          { capitalize(label) }\n                          <ExternalLinkAltIcon />\n                      </a>\n                  ) : capitalize(label) }\n                </>\n                }\n            >\n            </NotificationDrawerListItemHeader>\n            <NotificationDrawerListItemBody timestamp={ stringifyDate(date) }>\n                { message }{ ' ' }\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst NoticeNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'notice')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem\n            variant=\"info\"\n            key={ date + '-' + id }\n        >\n            <NotificationDrawerListItemHeader\n                variant=\"info\"\n                title={\n                <>\n                  { url ? (\n                      <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                          { capitalize(label) }\n                          <ExternalLinkAltIcon />\n                      </a>\n                  ) : capitalize(label) }\n                </>\n                }\n            >\n            </NotificationDrawerListItemHeader>\n            <NotificationDrawerListItemBody  timestamp={ stringifyDate(date) }>\n                { message }{ ' ' }\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst WarningNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'warning')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem\n            variant=\"warning\"\n            key={ date + '-' + id }\n        >\n            <NotificationDrawerListItemHeader\n                variant=\"warning\"\n                title={\n                <>\n                  { url ? (\n                      <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                          { capitalize(label) }\n                          <ExternalLinkAltIcon />\n                      </a>\n                  ) : capitalize(label) }\n                </>\n                }\n            >\n            </NotificationDrawerListItemHeader>\n            <NotificationDrawerListItemBody  timestamp={ stringifyDate(date) }>\n                { message }{ ' ' }\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst NotificationsList = ({ filterBy, notifications }) => (\n  <>\n    <NotificationDrawerList>\n        { notifications.length <= 0 && <LoadingState /> }\n        { filterBy === '' && (\n            <AllNotificationTemplate notifications={ notifications } />\n        ) }\n        { filterBy === 'notice' && (\n            <NoticeNotificationTemplate notifications={ notifications } />\n        ) }\n        { filterBy === 'error' && (\n            <ErrorNotificationTemplate notifications={ notifications } />\n        ) }\n        { filterBy === 'warning' && (\n            <WarningNotificationTemplate notifications={ notifications } />\n        ) }\n    </NotificationDrawerList>\n  </>\n);\n\nAllNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nErrorNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nWarningNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nNotificationsList.propTypes = {\n    notifications: PropTypes.array,\n    filterBy: PropTypes.string\n};\n\nexport default NotificationsList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoData from '../../Components/NoData';\nimport { preflightRequest, readClusters, readNotifications } from '../../Api';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle,\n    FormSelect,\n    FormSelectOption,\n    Pagination,\n    PaginationVariant,\n    NotificationDrawer\n} from '@patternfly/react-core';\n\nimport NotificationsList from '../../Components/NotificationsList';\n\nconst CardTitle = styled(PFCardTitle)`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n`;\n\nconst DropdownGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-end;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n\n  select {\n    margin: 0 10px;\n    width: 150px;\n\n    @media screen and (max-width: 1035px) {\n      margin: 10px 10px 0 0;\n    }\n\n    @media screen and (max-width: 865px) {\n      width: 100%;\n    }\n  }\n`;\n\nconst notificationOptions = [\n    {\n        value: 'please choose',\n        label: 'Select Notification Severity',\n        disabled: true\n    },\n    { value: 'error', label: 'View Critical', disabled: false },\n    { value: 'warning', label: 'View Warning', disabled: false },\n    { value: 'notice', label: 'View Notice', disabled: false },\n    { value: '', label: 'View All', disabled: false }\n];\n\nconst perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 }\n];\n\nfunction formatClusterName(data) {\n    const defaultClusterOptions = [\n        { value: 'please choose', label: 'Select cluster', disabled: true },\n        { value: '', label: 'All Clusters', disabled: false },\n        { value: -1, label: 'Unassociated', disabled: false }\n    ];\n    return data.reduce(\n        (formatted, { label, cluster_id: id, install_uuid: uuid }) => {\n            if (label.length === 0) {\n                formatted.push({ value: id, label: uuid, disabled: false });\n            } else {\n                formatted.push({ value: id, label, disabled: false });\n            }\n\n            return formatted;\n        },\n        defaultClusterOptions\n    );\n}\n\nconst initialQueryParams = {\n    limit: 5,\n    offset: 0\n};\n\nconst Notifications = () => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [ notificationsData, setNotificationsData ] = useState([]);\n    const [ clusterOptions, setClusterOptions ] = useState([]);\n    const [ selectedCluster, setSelectedCluster ] = useState('');\n    const [ firstRender, setFirstRender ] = useState(true);\n    const [ isLoading, setIsLoading ] = useState(true);\n    const [ meta, setMeta ] = useState({});\n    const [ currPage, setCurrPage ] = useState(1);\n    const {\n        queryParams,\n        setId,\n        setLimit,\n        setOffset,\n        setSeverity\n    } = useQueryParams(initialQueryParams);\n\n    useEffect(() => {\n        if (firstRender) {\n            return;\n        }\n\n        const getData = () => {\n            return readNotifications({ params: queryParams });\n        };\n\n        const update = async () => {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            getData().then(\n                ({ notifications: notificationsData = [], meta }) => {\n                    setNotificationsData(notificationsData);\n                    setMeta(meta);\n                    setIsLoading(false);\n                }\n            );\n        };\n\n        update();\n    }, [ queryParams ]);\n\n    useEffect(() => {\n        insights.chrome.appNavClick({ id: 'notifications', secondaryNav: true });\n\n        let ignore = false;\n        const fetchEndpoints = () => {\n            return Promise.all(\n                [ readClusters(), readNotifications({ params: queryParams }) ].map(p =>\n                    p.catch(() => [])\n                )\n            );\n        };\n\n        async function initializeWithPreflight() {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            await preflightRequest().catch(error => {\n                setPreFlightError({ preflightError: error });\n            });\n            fetchEndpoints().then(\n                ([\n                    { templates: clustersData = []},\n                    { notifications: notificationsData = [], meta }\n                ]) => {\n                    if (!ignore) {\n                        const clusterOptions = formatClusterName(clustersData);\n                        setClusterOptions(clusterOptions);\n                        setNotificationsData(notificationsData);\n                        setMeta(meta);\n                        setFirstRender(false);\n                        setIsLoading(false);\n                    }\n                }\n            );\n        }\n\n        initializeWithPreflight();\n        return () => (ignore = true);\n    }, []);\n\n    const returnOffsetVal = page => {\n        let offsetVal = (page - 1) * queryParams.limit;\n        return offsetVal;\n    };\n\n    const handleSetPage = page => {\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    const handlePerPageSelect = (perPage, page) => {\n        setLimit(perPage);\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={ 'Notifications' } />\n            </PageHeader>\n            { preflightError && (\n                <Main>\n                    <EmptyState { ...preflightError } />\n                </Main>\n            ) }\n            { !preflightError && (\n        <>\n          <Main>\n              <Card>\n                  <CardTitle>\n                      <DropdownGroup>\n                          <FormSelect\n                              name=\"selectedCluster\"\n                              value={ selectedCluster }\n                              onChange={ value => {\n                                  setSelectedCluster(value);\n                                  setId(value);\n                                  setOffset(0);\n                                  setCurrPage(1);\n                              } }\n                              aria-label=\"Select Cluster\"\n                          >\n                              { clusterOptions.map(({ value, label, disabled }, index) => (\n                                  <FormSelectOption\n                                      isDisabled={ disabled }\n                                      key={ index }\n                                      value={ value }\n                                      label={ label }\n                                  />\n                              )) }\n                          </FormSelect>\n                          <FormSelect\n                              name=\"selectedNotification\"\n                              value={ queryParams.severity || '' }\n                              onChange={ value => {\n                                  setSeverity(value);\n                                  setOffset(0);\n                                  setCurrPage(1);\n                              } }\n                              aria-label=\"Select Notification Type\"\n                          >\n                              { notificationOptions.map(\n                                  ({ disabled, value, label }, index) => (\n                                      <FormSelectOption\n                                          isDisabled={ disabled }\n                                          key={ index }\n                                          value={ value }\n                                          label={ label }\n                                      />\n                                  )\n                              ) }\n                          </FormSelect>\n                      </DropdownGroup>\n                      <Pagination\n                          itemCount={ meta && meta.count ? meta.count : 0 }\n                          widgetId=\"pagination-options-menu-top\"\n                          perPageOptions={ perPageOptions }\n                          perPage={ queryParams.limit }\n                          page={ currPage }\n                          variant={ PaginationVariant.top }\n                          onPerPageSelect={ (_event, perPage, page) => {\n                              handlePerPageSelect(perPage, page);\n                          } }\n                          onSetPage={ (_event, pageNumber) => {\n                              handleSetPage(pageNumber);\n                          } }\n                          isCompact\n                      />\n                  </CardTitle>\n                  <CardBody>\n                      { isLoading && <LoadingState /> }\n                      { !isLoading && notificationsData.length <= 0 && <NoData /> }\n                      { !isLoading && notificationsData.length > 0 && (\n                          <NotificationDrawer>\n                              <NotificationsList\n                                  filterBy={ queryParams.severity || '' }\n                                  options={ notificationOptions }\n                                  notifications={ notificationsData }\n                              />\n                          </NotificationDrawer>\n                      ) }\n                      <Pagination\n                          itemCount={ meta && meta.count ? meta.count : 0 }\n                          widgetId=\"pagination-options-menu-bottom\"\n                          perPageOptions={ perPageOptions }\n                          perPage={ queryParams.limit }\n                          page={ currPage }\n                          variant={ PaginationVariant.bottom }\n                          onPerPageSelect={ (_event, perPage, page) => {\n                              handlePerPageSelect(perPage, page);\n                          } }\n                          onSetPage={ (_event, pageNumber) => {\n                              handleSetPage(pageNumber);\n                          } }\n                          style={ { marginTop: '20px' } }\n                      />\n                  </CardBody>\n              </Card>\n          </Main>\n        </>\n            ) }\n        </React.Fragment>\n    );\n};\n\nexport default Notifications;\n","import moment from 'moment';\n\n/*\n * isNumeric - return true if input is a real number\n */\nexport function isNumeric(val) {\n    if (val === 0 || val === '0') {\n        return true;\n    }\n\n    if (parseInt(val)) {\n        return true;\n    }\n\n    if (parseFloat(val)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function trimStr(str) {\n    return str.toString().replace(/['\"]+/g, '');\n}\n\nexport function formatDateTime(dateTime) {\n    return moment(new Date(dateTime).toISOString()).format('M/D/YYYY h:mm:ssa');\n}\n\nexport function formatDate(date) {\n    return moment(date).format('YYYY-MM-DD');\n}\n\nexport function formatSeconds(seconds) {\n    return moment().startOf('day')\n    .seconds(seconds)\n    .format('H:mm:ss');\n}\n\nexport function getTotal(data) {\n    if (!data) {\n        return;\n    } else {\n        let total = 0;\n        data.forEach(datum => {\n            total += parseInt(datum.count);\n        });\n        return total;\n    }\n}\n\nexport function formatPercentage(val) {\n    if (isNaN(val)) {\n        return;\n    }\n\n    return `${val}%`;\n}\n\nexport const capitalize = (s) => {\n    if (typeof s !== 'string') {return '';}\n\n    return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport function calculateDelta(a, b) {\n    if (!isNumeric(a) || !isNumeric(b)) {\n        return 0;\n    }\n\n    // never return less than zero ...\n    if ((b - a) < 0) {\n        return 0;\n    }\n\n    return b - a;\n}\n\nexport function convertMinsToMs(mins) {\n    if (!parseInt(mins)) {\n        return 0;\n    }\n\n    return mins * 60000;\n}\n\nexport function convertMsToMins(ms) {\n    if (!parseInt(ms)) {\n        return 0;\n    }\n\n    return ms / 60000;\n}\n\nexport function convertSecondsToMins(seconds) {\n    if (!parseInt(seconds)) {\n        return 0;\n    }\n\n    return seconds / 60;\n}\n\nexport function convertMinsToSeconds(mins) {\n    if (!parseInt(mins) || parseInt(mins) < 0) {\n        return 0;\n    }\n\n    return +parseInt(mins) * 60;\n}\n\nexport function convertSecondsToHours(seconds) {\n    if (!parseInt(seconds)) {\n        return 0;\n    }\n\n    return seconds / 3600;\n}\n\nexport function convertWithCommas(arr, key) {\n    const split = arr.reduce((strs, datum) => { strs.push(datum[key]); return strs; }, []);\n    return split.join(', ');\n}\n\nexport function formatJobType(type) {\n    return (type === 'job' ? 'Playbook run' : 'Workflow job');\n}\n\nexport function formatJobStatus(status) {\n    return (status === 'successful' ? 'Success' : 'Failed');\n}\n\nexport function formatJobDetailsURL(baseURL, jobId) {\n    const subDirectory1 = 'job';\n    const subDirectory2 = 'details';\n    return `${baseURL}/#/${subDirectory1}/${jobId}/${subDirectory2}/`;\n}\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst DefaultLoadingState = () => (\n    <EmptyState variant={ EmptyStateVariant.full }>\n        <EmptyStateIcon icon={ CubesIcon } />\n        <Title headingLevel=\"h5\" size=\"lg\">\n            Loading...\n        </Title>\n        <EmptyStateBody>\n            Please wait.\n        </EmptyStateBody>\n    </EmptyState>\n);\n\nexport default DefaultLoadingState;\n","import { stringify } from 'query-string';\n\nconst apiVersion = 'v0';\nconst barChartEndpoint = `/api/tower-analytics/${apiVersion}/chart30/`;\nconst clustersEndpoint = `/api/tower-analytics/${apiVersion}/clusters/`;\nconst modulesEndpoint = `/api/tower-analytics/${apiVersion}/modules/`;\nconst notificationsEndPoint = `/api/tower-analytics/${apiVersion}/notifications/`;\nconst preflightEndpoint = `/api/tower-analytics/${apiVersion}/authorized/`;\nconst templateJobsEndpoint = `/api/tower-analytics/${apiVersion}/template_jobs/`;\nconst templatesEndPoint = `/api/tower-analytics/${apiVersion}/templates/`;\nconst jobExplorerEndpoint = '/api/tower-analytics/v1/job_explorer/';\nconst jobExplorerOptionsEndpoint = '/api/tower-analytics/v1/job_explorer_options/';\nconst ROIEndpoint = '/api/tower-analytics/v1/roi_templates/';\nconst ROITemplatesOptionsEndpoint = '/api/tower-analytics/v1/roi_templates_options/';\nconst orgOptionsEndpoint = `/api/tower-analytics/v1/dashboard_organization_statistics_options/`;\n\nfunction getAbsoluteUrl() {\n    const url = window.location.href;\n    let arr = url.split('/');\n    arr.pop();\n    return arr.join('/');\n}\n\nfunction handleResponse(response) {\n    return response.json().then(json => {\n        if (response.ok) {\n            return json;\n        }\n\n        if (response.status === 404 || response.status === 401) {\n            return Promise.reject({\n                status: response.status,\n                message: json\n            });\n        } else {\n            return Promise.reject(json);\n        }\n    });\n}\n\nexport const readTemplateJobs = (id, { params = {}}) => {\n    if (!id) {\n        return;\n    }\n\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(templateJobsEndpoint + id + '/', formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const preflightRequest = () => {\n    return fetch(preflightEndpoint).then(handleResponse);\n};\n\nexport const readClusters = () => {\n    return fetch(clustersEndpoint).then(handleResponse);\n};\n\nexport const readChart30 = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(barChartEndpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\n/* Section: Orgs page */\nexport const readOrgOptions = ({ params = {}}) => {\n    let url = new URL(orgOptionsEndpoint, getAbsoluteUrl());\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readJobsByDateAndOrg = ({ params = {}}) => {\n    const rParams = {\n        ...params,\n        attributes: [ 'total_count' ],\n        group_by_time: true,\n        group_by: 'org',\n        sort_by: `total_count:${params.sort_by}`\n    };\n\n    let url = new URL(jobExplorerEndpoint, getAbsoluteUrl());\n    url.search = stringify({\n        limit: rParams.limit,\n        sort_by: rParams.sort_by\n    });\n\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(rParams)\n    }).then(handleResponse);\n};\n\nexport const readJobRunsByOrg = ({ params = {}}) => {\n    const rParams = {\n        ...params,\n        group_by: 'org',\n        include_others: true,\n        attributes: [ 'host_count' ],\n        sort_by: `total_count:${params.sort_by}`\n    };\n\n    let url = new URL(jobExplorerEndpoint, getAbsoluteUrl());\n    url.search = stringify({\n        limit: rParams.limit,\n        sort_by: rParams.sort_by\n    });\n\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(rParams)\n    }).then(handleResponse);\n};\n\nexport const readJobEventsByOrg = ({ params = {}}) => {\n    const rParams = {\n        ...params,\n        group_by: 'org',\n        include_others: true,\n        granularity: 'daily',\n        attributes: [ 'host_task_count' ],\n        sort_by: `host_task_count:${params.sort_by}`\n    };\n\n    let url = new URL(jobExplorerEndpoint, getAbsoluteUrl());\n    url.search = stringify({\n        limit: rParams.limit,\n        sort_by: rParams.sort_by\n    });\n\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(rParams)\n    }).then(handleResponse);\n};\n/* End of section: Orgs page */\n\nexport const readModules = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(modulesEndpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readTemplates = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(templatesEndPoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readNotifications = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(notificationsEndPoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readJobExplorerOptions = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(jobExplorerOptionsEndpoint, formattedUrl);\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readJobExplorer = ({ params = {}}) => {\n    const { limit, offset, sort_by } = params;\n    const paginationParams = {\n        limit,\n        offset,\n        sort_by\n    };\n    const qs = stringify(paginationParams);\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(jobExplorerEndpoint, formattedUrl);\n    url.search = qs;\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readROI = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(ROIEndpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readROIOptions = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(ROITemplatesOptionsEndpoint, formattedUrl);\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n"],"sourceRoot":""}