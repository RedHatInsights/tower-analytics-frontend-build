{"version":3,"sources":["webpack:///./src/Api.js","webpack:///./src/Utilities/useQueryParams.js","webpack:///./src/Components/EmptyState.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Utilities/useApi.js","webpack:///./src/Charts/BaseChart.js","webpack:///./src/Components/NoData.js","webpack:///./src/Components/ApiErrorState.js","webpack:///./src/Components/Toolbar/CategoryDropdown.js","webpack:///./src/Components/Toolbar/CustomDateSelector.js","webpack:///./src/Components/Toolbar/constants.js","webpack:///./src/Components/Toolbar/ToolbarFilterItem.js","webpack:///./src/Components/Toolbar/helpers.js","webpack:///./src/Components/Toolbar/Toolbar.js","webpack:///./src/Components/Toolbar/index.js","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/Utilities/useRedirect.js","webpack:///./src/Charts/ROITopTemplates.js","webpack:///./src/Containers/AutomationCalculator/helpers.js","webpack:///./src/Containers/AutomationCalculator/TotalSavings.js","webpack:///./src/Containers/AutomationCalculator/CalculationCost.js","webpack:///./src/Containers/AutomationCalculator/AutomationFormula.js","webpack:///./src/Containers/AutomationCalculator/TopTemplates.js","webpack:///./src/Containers/AutomationCalculator/AutomationCalculator.js","webpack:///./src/Utilities/Tooltip.js","webpack:///./src/Charts/BarChart.js","webpack:///./src/Charts/LineChart.js","webpack:///./src/Components/ModulesList.js","webpack:///./src/Components/ModalContents.js","webpack:///./src/Components/TemplatesList.js","webpack:///./src/Containers/Clusters/Clusters.js","webpack:///./src/Utilities/Legend.js","webpack:///./src/Charts/GroupedBarChart.js","webpack:///./src/Charts/PieChart.js","webpack:///./src/Containers/OrganizationStatistics/OrganizationStatistics.js","webpack:///./src/Utilities/colors.js","webpack:///./src/Components/NoResults.js","webpack:///./src/Components/JobStatus.js","webpack:///./src/Components/JobExplorerList.js","webpack:///./src/Containers/JobExplorer/JobExplorer.js","webpack:///./src/Components/NotificationsList.js","webpack:///./src/Containers/Notifications/Notifications.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Components/LoadingState.js"],"names":["jobExplorerEndpoint","getAbsoluteUrl","arr","window","location","href","split","pop","join","handleResponse","response","json","then","ok","status","Promise","reject","message","preflightRequest","fetch","readOrgOptions","_ref","_ref$params","params","url","URL","method","body","JSON","stringify","readJobsByDateAndOrg","_ref2","_ref2$params","combined","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","attributes","group_by_time","group_by","sort_by","concat","search","Object","query_string__WEBPACK_IMPORTED_MODULE_1__","limit","readJobRunsByOrg","_ref3","_ref3$params","include_others","readJobEventsByOrg","_ref4","_ref4$params","granularity","readClusters","readNotifications","_ref5","_ref5$params","formattedUrl","keys","forEach","key","searchParams","append","readJobExplorerOptions","_ref6","_ref6$params","readClustersOptions","_ref7","_ref7$params","readJobExplorer","_ref8","_ref8$params","paginationParams","offset","qs","readEventExplorer","_ref9","_ref9$params","readROI","_ref11","_ref11$params","readROIOptions","_ref12","_ref12$params","useQueryParams","initial","_useReducer","react__WEBPACK_IMPORTED_MODULE_4__","state","type","value","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_3___default","startDate","endDate","parseInt","id","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2___default","severity","newState","start_date","end_date","newValues","entries","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default","_Utilities_helpers__WEBPACK_IMPORTED_MODULE_6__","Error","_useReducer2","queryParams","dispatch","actionMapper","quick_date_range","job_type","org_id","cluster_id","template_id","only_root_workflows_and_standalone_jobs","setLimit","setOffset","setFromToolbar","varName","arguments","length","undefined","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default","setSeverity","setEndDate","moment__WEBPACK_IMPORTED_MODULE_5___default","format","setId","setStartDate","days","subtract","setStartDateAsString","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_patternfly_react_core_dist_js_components_Button_Button_js__WEBPACK_IMPORTED_MODULE_2__","_patternfly_react_core_dist_js_components_Title_Title_js__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_core_dist_js_components_EmptyState_EmptyState_js__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateIcon_js__WEBPACK_IMPORTED_MODULE_5__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateBody_js__WEBPACK_IMPORTED_MODULE_6__","_patternfly_react_icons_dist_js_icons_wrench_icon__WEBPACK_IMPORTED_MODULE_7__","_patternfly_react_icons_dist_js_icons_wrench_icon__WEBPACK_IMPORTED_MODULE_7___default","DefaultEmptyState","error","preflightError","a","createElement","variant","full","icon","Fragment","headingLevel","size","target","rel","onClick","reload","propTypes","object","__webpack_exports__","d","jobExplorer","roi","organizationStatistics","clusters","defaultParams","dataFetchReducer","action","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1___default","isLoading","isSuccess","data","payload","initialData","postprocess","_useState","react__WEBPACK_IMPORTED_MODULE_2__","_useState2","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default","request","setRequest","didCancel","insights","chrome","auth","getUser","catch","e","initializeChart","Chart","BaseChart","props","margin","react__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","getWidth","d3__WEBPACK_IMPORTED_MODULE_3__","style","left","right","getHeight","top","bottom","prop_types__WEBPACK_IMPORTED_MODULE_2___default","string","element","_patternfly_react_core_dist_js_components_Title_Title_js__WEBPACK_IMPORTED_MODULE_1__","_patternfly_react_core_dist_js_components_EmptyState_EmptyState_js__WEBPACK_IMPORTED_MODULE_2__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateIcon_js__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_4___default","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateBody_js__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateIcon_js__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_core_dist_js_components_Title_Title_js__WEBPACK_IMPORTED_MODULE_5__","_patternfly_react_icons_dist_js_icons_exclamation_circle_icon__WEBPACK_IMPORTED_MODULE_6__","_patternfly_react_icons_dist_js_icons_exclamation_circle_icon__WEBPACK_IMPORTED_MODULE_6___default","_patternfly_react_tokens__WEBPACK_IMPORTED_MODULE_7__","ApiErrorState","small","color","CategoryDropdown_CategoryDropdown","selected","_ref$setSelected","setSelected","_ref$categories","categories","react","slicedToArray_default","isExpanded","setIsExpanded","react_default","ToolbarItem","Select","isOpen","aria-label","onToggle","onSelect","_event","selection","selections","placeholderText","map","name","SelectOption","prop_types_default","array","func","Toolbar_CategoryDropdown","CustomDateSelector_CustomDateSelector","_ref$onInputChange","onInputChange","_ref$startDate","_ref$endDate","InputGroup","TextInput","onChange","Toolbar_CustomDateSelector","optionsForCategories","isSingle","placeholder","ToolbarFilterItem_renderValues","values","description","ToolbarFilterItem_ToolbarFilterItem","categoryKey","_ref2$filter","filter","_ref2$values","_ref2$isVisible","isVisible","_ref2$hasChips","hasChips","setFilter","expanded","setExpanded","options","ToolbarFilter","data-cy","showToolbarItem","chips","item","comparator","val","i","handleSingleChips","reduce","acc","Number","isInteger","cmpItem","push","handleCheckboxChips","categoryName","deleteChip","valueToDelete","keyToDelete","find","filteredArr","event","includes","toConsumableArray_default","onFilter","textInput","toLowerCase","hasInlineFilter","isRequired","any","bool","Toolbar_ToolbarFilterItem","Toolbar_FilterableToolbar","filters","setFilters","_ref$pagination","pagination","_ref$hasSettings","hasSettings","settingsExpanded","setSettingsExpanded","restCategories","objectWithoutProperties_default","filterCategories","obj","_useState3","_useState4","currentCategory","setCurrentCategory","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarContent","Button","filter_icon_default","ToolbarGroup","el","sort_amount_down_icon_default","isActive","cog_icon_default","visibility","default","lg","Card","isFlat","backgroundColor","CardHeader","CardActions","times_icon_default","CardTitle","CardBody","Switch","label","labelOff","isChecked","Tooltip","position","content","question_circle_icon_default","Toolbar_Toolbar","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","code","resolve","module","exports","Utilities_useRedirect","history","path","query","query_string","arrayFormat","pathname","paths","ROITopTemplates_Tooltip","_this","this","classCallCheck_default","defineProperty_default","savings","manualCost","automationCost","scrollLeftOffset","d3","node","scrollLeft","x","pageX","svg","getBoundingClientRect","y","pageY","formatDollars","delta","automatedCost","toolTipWidth","toolTipBase","width","chartWidth","flipped","text","nameWidth","getComputedTextLength","savingsWidth","manualCostWidth","automationCostWidth","widestTextElem","adjustedWidth","maxTextPerc","boxWidth","overage","boundingBox","attr","toolTipPoint","interrupt","transition","delay","draw","amount","parseFloat","toFixed","toString","replace","slice","textWidthThreshold","ROITopTemplates_TopTemplatesSavings","TopTemplatesSavings","_this2","possibleConstructorReturn_default","getPrototypeOf_default","call","init","bind","assertThisInitialized_default","resize","timeout","_this3","clearTimeout","setState","setTimeout","remove","ticks","height","rangeRound","padding","range","formatYAxisValue","xAxis","tickValues","yAxis","tickFormat","tickSize","taskNames","tooltip","domain","selectAll","bandwidth","enter","on","darker","handleMouseOver","handleMouseOut","addEventListener","removeEventListener","ROITopTemplates","BorderedCardTitle","styled_components_browser_esm","_templateObject","TotalSavings_TotalSavings","_ref$totalSavings","totalSavings","borderTop","paddingBottom","Title","total","floatToStringWithCommas","number","AutomationCalculator_TotalSavings","InputAndText","div","CalculationCost_templateObject","validFloat","floatValue","CalculationCost_CalculationCost","_ref$costManual","costManual","_ref$setCostManual","setCostManual","_ref$costAutomation","costAutomation","_ref$setCostAutomatio","setCostAutomation","InputGroupText","dollar_sign_icon_default","paddingTop","AutomationCalculator_CalculationCost","AutomationCalculator_AutomationFormula","TemplateDetail","TopTemplates_templateObject","TemplateDetailSubTitle","em","_templateObject2","TooltipWrapper","_templateObject3","IconGroup","_templateObject4","TopTemplates_InputAndText","_templateObject5","TopTemplates_QuestionIconTooltip","Popover","bodyContent","successful_elapsed_total","total_org_count","total_cluster_count","info_circle_icon_default","TopTemplates_TopTemplates","_ref2$data","_ref2$setDataRunTime","setDataRunTime","_ref2$redirectToJobEx","redirectToJobExplorer","overflow","flex","className","Tooltip_Tooltip","component","helpers","avgRunTime","minutes","successful_hosts_total","deselectedIds","setDeselectedIds","AutomationCalculator_TopTemplates","Wrapper","AutomationCalculator_templateObject","WrapperLeft","AutomationCalculator_templateObject2","WrapperRight","AutomationCalculator_templateObject3","AutomationCalculator_updateDeltaCost","objectSpread_default","AutomationCalculator_AutomationCalculator","toJobExplorer","_useApi","useApi","_useApi2","preflight","setPreflight","_useApi3","_useApi4","setOptions","_useApi5","_ref$items","items","AutomationCalculator_mapApi","_useApi6","api","fetchApi","setDataInApi","_useQueryParams","constants","seconds","updatedData","Api","templateId","PageHeader","title","Main","EmptyState","LoadingState","NoData","textAlign","paddingLeft","sum","curr","computeTotalSavings","display","flexDirection","setUnfilteredData","Utilities_Tooltip","opts","success","fail","formatTooltipDate","RAN","FAIL","TOTAL","date","DATE","jobs","jobsWidth","failed","successful","successTextWidth","failTextWidth","circleSuccess","circleFail","failedIcon","successIcon","successText","failText","clickMore","colors","BarChart_BarChart","BarChart","formattedData","formattedDate","_this$props","orgId","initialQueryParams","parseTime","formatted","created_date","successful_count","failed_count","Date","barTooltip","layers","order","stack","maxTicks","Math","round","layer","_d","duration","ease","prevProps","Charts_BarChart","react_router","LineChart_LineChart","LineChart","updateCluster","clusterId","attrTween","tweenDash","l","getTotalLength","t","unformattedData","successLine","curve","failLine","defined","isNaN","vertical","handleMouseMove","intersectX","cx","baseVal","Charts_LineChart","ModulesList_DataListCell","DataListCell","ModulesList_DataListItem","DataListItem","DataCellEnd","ModulesList_ModulesList","modules","DataList","maxHeight","background","aria-labelledby","border","index","host_task_count","Components_ModulesList","ModalContents_success","circle_icon_default","marginRight","ModalContents_fail","ModalContents_DataListCell","ModalContents_templateObject","ModalContents_DataListItem","ModalContents_templateObject2","ModalContents_DataCellEnd","ModalContents_templateObject3","PFDataListItemNoBorder","DataListItemCompact","DataListCellCompact","_templateObject6","DataListFocus","_templateObject7","DataCellEndCompact","_templateObject8","ModalContents_ModalContents","selectedId","handleModal","qp","jobType","handleCloseBtn","_useApi2$0$data$items","relatedJobs","setRelatedJobs","_useApi4$0$data$items2","stats","setStats","relatedTemplateJobsParams","agreggateTemplateParams","Modal","onClose","actions","total_count","elapsed","toISOString","substr","formatTotalTime","totalCount","ceil","formatAvgRun","successCount","formatSuccessRate","most_failed_tasks","percentage","total_failed_count","task_name","formatTopFailedTask","most_failed_steps","template_name","formatTopFailedStep","Label","job","cluster_name","started","Components_ModalContents","TemplatesList_DataListCell","TemplatesList_templateObject","TemplatesList_DataListItem","TemplatesList_templateObject2","TemplatesList_DataCellEnd","TemplatesList_templateObject3","TemplatesList_TemplatesList","templates","setSelectedId","isModalOpen","setIsModalOpen","Components_TemplatesList","initialTopTemplateParams","initialTopWorkflowParams","initialModuleParams","setPreFlightError","_useApi2$","_useApi2$$data$items","chartData","setData","_useApi4$0$data$items","setTemplates","_useApi6$0$data$items","workflows","setWorkflows","_useApi7","_useApi8","_useApi8$0$data$items","setModules","_useApi9","groupBy","_useApi10","_useApi10$0$data","initialOptionsParams","optionsQueryParams","topTemplatesParams","topWorkflowParams","topModuleParams","_initializeWithPreflight","asyncToGenerator_default","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","apply","initializeWithPreflight","marginTop","Container","LegendDetail","Color","attrs","span","SubTitle","Legend_Switch","Legend_Legend","handleChange","_isChecked","count","some","Utilities_Legend","GroupedBarChart_Wrapper","GroupedBarChart_templateObject","formatDate","pieces","GroupedBarChart_Tooltip","orgName","GroupedBarChart_GroupedBarChart","orgsList","org","colorFunc","selectedIds","setSelectedIds","timeFrame","selectedOrgs","x0","x1","dates","selectedOrgNames","exit","bars","merge","subEnter","isAccessible","Charts_GroupedBarChart","PieChart_Wrapper","PieChart_templateObject","PieChart_Tooltip","perc","percSuccess","drawn","percent","success_rate","maxLength","percentageTotal","percentageSuccess","boundingBOx","showSuccess","boundingHeight","boundingWidth","PieChart_PieChart","sort","b","radius","min","filteredData","donutTooltip","pie","arc","outerRadius","innerRadius","classed","Charts_PieChart","OrganizationStatistics_CardTitle","OrganizationStatistics_templateObject","CardContainer","OrganizationStatistics_templateObject2","TopCard","OrganizationStatistics_templateObject3","OrganizationStatistics_optionsMapper","meta","rest","inventory_id","orgsChartMapper","_ref$dates","pieChartMapper","attrName","_ref4$items","OrganizationStatistics_OrganizationStatistics","orgs","setOrgs","setJobs","tasks","setTasks","appNavClick","secondaryNav","marginLeft","Components_NoResults","EmptyState_EmptyState","EmptyStateIcon","search_icon_default","EmptyStateBody","JobStatus_JobStatus","getColor","check_circle_icon_default","exclamation_circle_icon_default","sync_alt_icon_default","exclamation_triangle_icon_default","clock_icon_default","getIcon","str","charAt","toUpperCase","capitalized","oneOf","Components_JobStatus","headerLabels","ExternalLinkIcon","external_link_alt_icon_default","JobExplorerList_DataListCell","DataListCellHeader","JobExplorerList_DataListItemCells","DataListItemCells","JobExplorerList_DataListToggle","DataListToggle","JobExplorerList_buildListRow","ariaLabel","ariaLabelledBy","windowWidth","DataListItemRow","aria-controls","idx","indexOf","newExpanded","toggle","dataListCells","tower_link","fontWeight","org_name","DataListContent","isHidden","created","finished","JobExplorerList_AllJobsTemplate","innerWidth","setWindowWidth","onResize","JobExplorerList_JobExplorerList","_useState5","_useState6","isCompact","labels","JobExplorerList_buildHeader","Components_JobExplorerList","perPageOptions","JobExplorer_optionsMapper","JobExplorer_JobExplorer","_useApi2$$data","_useApi2$$data$meta","currPage","setCurrPage","initialSearchParams","parseBooleans","updateURL","returnOffsetVal","page","handleSetPage","nextOffset","handlePerPageSelect","perPage","Pagination","itemCount","widgetId","onPerPageSelect","onSetPage","pageNumber","ExternalLinkAltIcon","NotificationsList_NotificationDrawerListItem","NotificationDrawerListItem","NotificationsList_NotificationDrawerList","NotificationDrawerList","NotificationsList_stringifyDate","day","moment_default","now","utc","isAfter","diff","isSame","valueOf","NotificationsList_AllNotificationTemplate","notifications","notification_id","tower_url","NotificationDrawerListItemHeader","NotificationDrawerListItemBody","timestamp","NotificationsList_ErrorNotificationTemplate","notification","NotificationsList_NoticeNotificationTemplate","NotificationsList_WarningNotificationTemplate","NotificationsList_NotificationsList","filterBy","Components_NotificationsList","Notifications_CardTitle","Notifications_templateObject","DropdownGroup","Notifications_templateObject2","notificationOptions","disabled","formatClusterName","uuid","install_uuid","notificationsData","setNotificationsData","clusterOptions","setClusterOptions","_useState7","_useState8","selectedCluster","setSelectedCluster","_useState9","_useState10","firstRender","setFirstRender","_useState11","_useState12","setIsLoading","_useState13","_useState14","setMeta","_useState15","_useState16","_ref3$notifications","update","ignore","fetchEndpoints","all","p","_callee2","_context2","_ref5$0$templates","clustersData","_ref5$","_ref5$$notifications","FormSelect","FormSelectOption","isDisabled","NotificationDrawer","trimStr","formatDateTime","formatSeconds","getTotal","capitalize","calculateDelta","convertSecondsToMins","convertMinsToSeconds","convertSecondsToHours","formatJobType","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","isNumeric","dateTime","startOf","datum","s","mins","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateBody_js__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_5__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_5___default"],"mappings":"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,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,QAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,WAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,KAIA,SAAAC,EAAAC,GACA,IAAAzgB,EAAA0gB,EAAAD,GACA,OAAAle,EAAAvC,GAEA,SAAA0gB,EAAAD,GACA,IAAAzgB,EAAAsJ,EAAAmX,GACA,KAAAzgB,EAAA,IACA,IAAAgG,EAAA,IAAAtF,MAAA,uBAAA+f,EAAA,KAEA,MADAza,EAAA2a,KAAA,mBACA3a,EAEA,OAAAhG,EAEAwgB,EAAA7iB,KAAA,WACA,OAAAhB,OAAAgB,KAAA2L,IAEAkX,EAAAI,QAAAF,EACAG,EAAAC,QAAAN,EACAA,EAAAxgB,GAAA,2QCzQe+gB,EARK,SAACC,EAASC,GAAV,OAAmB,SAAAC,GACnC,IAAMxkB,EAASC,OAAAwkB,EAAA,UAAAxkB,CAAUukB,GAASE,YAAa,YAC/CJ,EAAQzU,MACJ8U,SAAUC,EAAA,EAAML,GAChBvkB,8JCFF6kB,aACF,SAAAlR,EAAYjK,GAAO,IAAAob,EAAAC,KAAAC,IAAAD,KAAApR,GAAAsR,IAAAF,KAAA,kBAsEH,SAAApd,GACd,IAAIkF,EACAqY,EACAC,EACAC,EACEC,EAAmBC,EAAA,EAAU,sBAAsBC,OAAOC,WAC1DC,EACNH,EAAA,EAASI,MACTJ,EAAA,EACQR,EAAKa,KACZJ,OACAK,wBAAwBH,EACzB,GACAJ,EACMQ,EACNP,EAAA,EAASQ,MACTR,EAAA,EACQR,EAAKa,KACZJ,OACAK,wBAAwBC,EACzB,GACA,GAAKle,EAAL,CAGIud,EAAUJ,EAAKiB,cAAcpe,EAAEqe,OAC/BnZ,EAAOlF,EAAEkF,KACTsY,EAAaL,EAAKiB,cAAcpe,EAAEwd,YAClCC,EAAiBN,EAAKiB,cAAcpe,EAAEse,eAG1C,IAAMC,EAAepB,EAAKqB,YAAYZ,OAAOK,wBAAwBQ,MAC/DC,EAAaf,EAAA,EACXR,EAAKa,IAAM,SAClBJ,OACAK,wBAAwBQ,MAEnBE,EADW,IAAOJ,EAAeG,EAAc,IACzBZ,EAAIY,EAAc,IAC9CvB,EAAKjY,KAAK0Z,KAAK,GAAK1Z,GACpBiY,EAAKI,QAAQqB,KAAK,kBAAoBrB,GACtCJ,EAAKK,WAAWoB,KAAK,gBAAkBpB,GACvCL,EAAKM,eAAemB,KAAK,oBAAsBnB,GAC/CN,EAAK0B,UAAY1B,EAAKjY,KAAK0Y,OAAOkB,wBAClC3B,EAAK4B,aAAe5B,EAAKI,QAAQK,OAAOkB,wBACxC3B,EAAK6B,gBAAkB7B,EAAKK,WAAWI,OAAOkB,wBAC9C3B,EAAK8B,oBAAsB9B,EAAKM,eAC/BG,OACAkB,wBACD3B,EAAK+B,eAAiBvB,EAAA,GAClBR,EAAK0B,UACL1B,EAAK4B,aACL5B,EAAK8B,oBACL9B,EAAK6B,kBAGT,IAGIG,EAHEC,EAAejC,EAAK+B,eAAiB/B,EAAKkC,SAAY,IAEtDC,EAAUF,EADE,GAIdD,EADAC,EAHc,GAIEjC,EAAKkC,SAAWC,EAEhBnC,EAAKkC,SAGzBlC,EAAKoC,YAAYC,KAAK,QAASL,GAC/BhC,EAAKqB,YAAYgB,KAAK,YAAa,aAAe1B,EAAI,IAAMI,EAAI,KAC5DS,GACAxB,EAAKsC,aAAaD,KAAK,YAAa,iCACpCrC,EAAKoC,YAAYC,KAAK,KAAML,EAAgB,IAC5ChC,EAAKjY,KAAKsa,KAAK,MAAOjB,EAAe,IACrCpB,EAAKI,QAAQiC,KAAK,MAAOjB,EAAe,IACxCpB,EAAKK,WAAWgC,KAAK,MAAOjB,EAAe,IAC3CpB,EAAKM,eAAe+B,KAAK,MAAOjB,EAAe,MAE/CpB,EAAKsC,aAAaD,KAAK,YAAa,gCACpCrC,EAAKoC,YAAYC,KAAK,IAAK,IAC3BrC,EAAKjY,KAAKsa,KAAK,IAAK,IACpBrC,EAAKI,QAAQiC,KAAK,IAAK,IACvBrC,EAAKK,WAAWgC,KAAK,IAAK,IAC1BrC,EAAKM,eAAe+B,KAAK,IAAK,KAGlCrC,EAAKqB,YAAYnc,MAAM,UAAW,GAClC8a,EAAKqB,YAAYkB,eAzJApC,IAAAF,KAAA,iBA4JJ,WACbD,EAAKqB,YACJmB,aACAC,MAAM,IACNvd,MAAM,UAAW,GACjBA,MAAM,iBAAkB,UAhKvB+a,KAAKY,IAAMjc,EAAMic,IACjBZ,KAAKyC,yDAGKC,GACV,OAAOC,WAAWD,GACjBE,QAAQ,GACRC,WACAC,QAAQ,wBAAyB,oCAIlC9C,KAAKqB,MAAQ,IACbrB,KAAKoB,YAAcb,EAAA,EAAUP,KAAKY,IAAM,SAAStkB,OAAO,KACxD0jB,KAAKoB,YAAYgB,KAAK,KAAM,0BAA4BpC,KAAKY,IAAImC,MAAM,IACvE/C,KAAKoB,YAAYgB,KAAK,WAAY,WAClCpC,KAAKoB,YAAYnc,MAAM,UAAW,GAClC+a,KAAKoB,YAAYnc,MAAM,iBAAkB,QACzC+a,KAAKoB,YAAYgB,KAAK,YAAa,uBACnCpC,KAAKiC,SAAW,IAChBjC,KAAKgD,mBAAqB,GAE1BhD,KAAKqC,aAAerC,KAAKoB,YACxB9kB,OAAO,QACP8lB,KAAK,YAAa,+BAClBA,KAAK,IAAK,GACVA,KAAK,IAAK,GACVA,KAAK,SAAU,IACfA,KAAK,QAAS,IACdA,KAAK,OAAQ,WACdpC,KAAKmC,YAAcnC,KAAKoB,YACvB9kB,OAAO,QACP8lB,KAAK,IAAK,IACVA,KAAK,KAAM,IACXA,KAAK,KAAM,GACXA,KAAK,SAAU,IACfA,KAAK,QAASpC,KAAKiC,UACnBG,KAAK,OAAQ,WACdpC,KAAKlY,KAAOkY,KAAKoB,YAChB9kB,OAAO,QACP8lB,KAAK,OAAQ,SACbA,KAAK,YAAa,IAClBA,KAAK,IAAK,IACVA,KAAK,KAAM,GACXZ,KAAK,iBACNxB,KAAKG,QAAUH,KAAKoB,YACnB9kB,OAAO,QACP8lB,KAAK,IAAK,IACVA,KAAK,IAAK,IACVA,KAAK,YAAa,IAClBA,KAAK,cAAe,QACpBA,KAAK,OAAQ,SACbZ,KAAK,oBACNxB,KAAKI,WAAaJ,KAAKoB,YACtB9kB,OAAO,QACP8lB,KAAK,OAAQ,SACbA,KAAK,YAAa,IAClBA,KAAK,IAAK,IACVA,KAAK,IAAK,IACVZ,KAAK,kBACNxB,KAAKK,eAAiBL,KAAKoB,YAC1B9kB,OAAO,QACP8lB,KAAK,OAAQ,SACbA,KAAK,YAAa,IAClBA,KAAK,IAAK,IACVA,KAAK,IAAK,IACVZ,KAAK,+BAkGRyB,cACF,SAAAC,EAAYve,GAAO,IAAAwe,EAAA,OAAAlD,IAAAD,KAAAkD,IACfC,EAAAC,IAAApD,KAAAqD,IAAAH,GAAAI,KAAAtD,KAAMrb,KACD4e,KAAOJ,EAAKI,KAAKC,KAAVC,IAAAN,IACZA,EAAKV,KAAOU,EAAKV,KAAKe,KAAVC,IAAAN,IACZA,EAAKO,OAASP,EAAKO,OAAOF,KAAZC,IAAAN,IACdA,EAAKnlB,OACD2lB,QAAS,MANER,wDAWV,IAAAS,EAAA5D,KACG2D,EAAY3D,KAAKhiB,MAAjB2lB,QACRE,aAAaF,GACb3D,KAAK8D,UACDH,QAASI,WAAW,WAChBH,EAAKL,QACN,sCAKPvD,KAAKyC,sCAOLlC,EAAA,EAAa,IAAMP,KAAKrb,MAAMpG,GAAK,QAAQylB,SAJxC,IAMC3C,EADI9d,EAASyc,KAAKrb,MAAdpB,KAGJA,EAAKtD,QAAU,GAEfohB,EADuBd,EAAA,EAAU,uBAAuBC,OAE7CK,wBAAwBQ,MACvCrB,KAAKrb,MAAMC,OAAOM,KAClB8a,KAAKrb,MAAMC,OAAOO,MAEdkc,EAAQrB,KAAKrb,MAAMI,WAGvB,IAOIkf,EAPEC,EAASlE,KAAKrb,MAAMS,YACpBsb,EAAIH,EAAA,IAET4D,YAAa,EAAG9C,IAChB+C,QAAQ,KACHtD,EAAIP,EAAA,IAAiB8D,OAAQH,EAAQ,IAG3CD,EAAQ1gB,EAAKsE,IAAI,SAAAjF,GAAC,OAAIA,EAAEkF,OACxB,IAAMwc,EAAmB/D,EAAA,EAAU,OAC7BgE,EAAQhE,EAAA,EAAcG,GAAG8D,WAAWP,GAEpCQ,EAAQlE,EAAA,EACJO,GACTmD,MAAM,GACNS,WAAW,SAAA9hB,GAAC,OAAI0hB,EAAiB1hB,GAAGkgB,QAAQ,IAAK,OACjD6B,UAAUtD,EAAO,EAAG,GAEfT,EAAML,EAAA,EACJ,IAAMP,KAAKrb,MAAMpG,IACxBjC,OAAO,OACP8lB,KAAK,QAASf,EAAQrB,KAAKrb,MAAMC,OAAOM,KAAO8a,KAAKrb,MAAMC,OAAOO,OACjEid,KAAK,SAAU8B,EAASlE,KAAKrb,MAAMC,OAAOU,OAAS0a,KAAKrb,MAAMC,OAAOS,KACrE/I,OAAO,KACP8lB,KACG,YACA,aACFpC,KAAKrb,MAAMC,OAAOM,KAClB,IACA8a,KAAKrb,MAAMC,OAAOS,IAClB,KAGIuf,EAAYrhB,EAAKsE,IAAI,SAAAjF,GAAC,OAAIA,EAAEkF,OAC5B+c,EAAU,IAAI/E,GAChBc,IAAK,IAAMZ,KAAKrb,MAAMpG,KAE1BmiB,EAAEoE,OAAOF,GACT9D,EAAEgE,QAAS,EAAGvE,EAAA,EAAOhd,EAAM,SAAAX,GAAC,OAAc,KAAVA,EAAEqe,SAAiB,IAGnDL,EACCtkB,OAAO,KACP8lB,KAAK,QAAS,UACdkB,KAAKmB,GACLM,UAAU,QACV3C,KAAK,SAAU,WACf9lB,OAAO,QACP8lB,KAAK,YAAa,eAClBA,KAAK,IAAK,GACVA,KAAK,KAAM,SACXnd,MAAM,cAAe,OACrBA,MAAM,cAAe,QACrBuc,KAAK,SACNZ,EACCtkB,OAAO,QACP8lB,KAAK,YAAa,eAClBA,KAAK,IAAK,EAAIpC,KAAKrb,MAAMC,OAAOM,MAChCkd,KAAK,IAAK,EAAI8B,EAAS,GACvB9B,KAAK,KAAM,OACXnd,MAAM,cAAe,UACrBuc,KAAK,4BAGNZ,EACCtkB,OAAO,KACP8lB,KAAK,QAAS,UACdA,KAAK,YAAa,eAAiB8B,EAAS,KAC5CZ,KAAKiB,GACLQ,UAAU,QACV9f,MAAM,cAAe,SACrBmd,KAAK,KAAM,UACXA,KAAK,MAAO1B,EAAEsE,YAAc,KAAO,GACnC5C,KAAK,YAAa,eAEnBxB,EAAImE,UAAU,gBAAgB3C,KAAK,SAAU,eAE7CxB,EACCmE,UAAU,QACVxhB,KAAKA,GACL0hB,QACA3oB,OAAO,QACP8lB,KAAK,IAAK,SAAAxf,GAAC,OAAI8d,EAAE9d,EAAEkF,QACnBsa,KAAK,QAAS1B,EAAEsE,aAChB5C,KAAK,IAAK,SAAAxf,GAAC,OAAIke,EAAEle,EAAEqe,SACnBhc,MAAM,OAAQ,iBArGD,YAsGbmd,KAAK,SAAU,SAAAxf,GAAC,OAAIshB,EAASpD,EAAEle,EAAEqe,SACjCiE,GAAG,YAAa,SAAStiB,GACtB2d,EAAA,EAAUP,MAAM/a,MAAM,OAAQsb,EAAA,EAxGpB,WAwGkC4E,OAAO,IACnDN,EAAQO,gBAAgBxiB,KAE3BsiB,GAAG,YAAaL,EAAQO,iBACxBF,GAAG,WAAY,WACZ3E,EAAA,EAAUP,MAAM/a,MAAM,OA7GZ,WA8GV4f,EAAQQ,+DAKZrF,KAAKuD,OAEL3qB,OAAO0sB,iBAAiB,SAAUtF,KAAK0D,uDAGpB,IACXC,EAAY3D,KAAKhiB,MAAjB2lB,QACRE,aAAaF,GACb/qB,OAAO2sB,oBAAoB,SAAUvF,KAAK0D,qDAI1C1D,KAAKuD,wCAIL,OAAOrc,EAAArF,EAAAC,cAAA,OAAKvD,GAAIyhB,KAAKrb,MAAMpG,YA/JDuI,EAAA,WAmKlCmc,EAAoBxgB,WAChBlE,GAAIyJ,EAAAnG,EAAU2D,OACdjC,KAAMyE,EAAAnG,EAAUoG,MAChBrD,OAAQoD,EAAAnG,EAAUa,OAClB0C,UAAW4C,EAAAnG,EAAUqG,KACrBnD,SAAUiD,EAAAnG,EAAUqG,MAGT,IAAAsd,EAAAtqB,OAAAwJ,EAAA,GAAgBue,wICnVxB,IAAMwC,EAAoBvqB,OAAAwqB,EAAA,EAAAxqB,CAAOoT,EAAA,UAAPpT,CAAHyqB,aCOxBC,GAAe,SAAA9rB,GAAA,IAAA+rB,EAAA/rB,EAAGgsB,oBAAH,IAAAD,EAAkB,EAAlBA,EAAA,OACjB3e,EAAArF,EAAAC,cAACkM,EAAA,MAAK/I,OAAS8gB,UAAW,sBACtB7e,EAAArF,EAAAC,cAACwM,EAAA,WAAUrJ,OAAS+gB,cAAe,MAAnC,iBACA9e,EAAArF,EAAAC,cAACyM,EAAA,SAAD,KACIrH,EAAArF,EAAAC,cAACmkB,EAAA,OACG9jB,aAAa,KACbC,KAAK,MACL6C,OAASsB,MAAO,yCAbA,SAAA2f,GAAK,OACjCA,EACCtD,QAAQ,GACRC,WACAC,QAAQ,wBAAyB,KAWrBqD,CAAwBL,OAMzCF,GAAanjB,WACTqjB,aAAc9d,EAAAnG,EAAUukB,QAGb,IAAAC,GAAA,mICff,IAAMC,GAAeZ,EAAA,EAAOa,IAAVC,MAIZC,GAAa,SAAAvoB,GACf,IAAMwoB,EAAa/D,WAAWzkB,GAC9B,OAAOwoB,GAAcA,GAAc,EAAIxoB,EAAQ,IAG7CyoB,GAAkB,SAAA7sB,GAAA,IAAA8sB,EAAA9sB,EACpB+sB,kBADoB,IAAAD,EACP,IADOA,EAAAE,EAAAhtB,EAEpBitB,qBAFoB,IAAAD,EAEJ,aAFIA,EAAAE,EAAAltB,EAGpBmtB,sBAHoB,IAAAD,EAGH,IAHGA,EAAAE,EAAAptB,EAIpBqtB,yBAJoB,IAAAD,EAIA,aAJAA,EAAA,OAMpBhgB,EAAArF,EAAAC,cAACkM,EAAA,KAAD,KACI9G,EAAArF,EAAAC,cAAC2jB,EAAD,kCACAve,EAAArF,EAAAC,cAACyM,EAAA,SAAD,KACIrH,EAAArF,EAAAC,cAACwkB,GAAD,KACIpf,EAAArF,EAAAC,cAAA,sCACAoF,EAAArF,EAAAC,cAAA,MAAImD,OAASsB,MAAO,sCAApB,wDAGAW,EAAArF,EAAAC,cAAC2G,GAAA,YAAWxD,OAASoc,MAAO,QACxBna,EAAArF,EAAAC,cAACslB,GAAA,eAAD,KACIlgB,EAAArF,EAAAC,cAACulB,GAAAxlB,EAAD,OAEJqF,EAAArF,EAAAC,cAAC4G,GAAA,WACGnK,GAAG,cACHN,KAAK,SACLqJ,aAAW,cACXpJ,MAAO2oB,EACPle,SAAU,SAAApE,GAAC,OAAIwiB,EAAcN,GAAWliB,OAE5C2C,EAAArF,EAAAC,cAACslB,GAAA,eAAD,cAGRlgB,EAAArF,EAAAC,cAACwkB,IAAarhB,OAASqiB,WAAY,SAC/BpgB,EAAArF,EAAAC,cAAA,mCACAoF,EAAArF,EAAAC,cAAC2G,GAAA,YAAWxD,OAASoc,MAAO,QACxBna,EAAArF,EAAAC,cAACslB,GAAA,eAAD,KACIlgB,EAAArF,EAAAC,cAACulB,GAAAxlB,EAAD,OAEJqF,EAAArF,EAAAC,cAAC4G,GAAA,WACGnK,GAAG,kBACHN,KAAK,SACLqJ,aAAW,kBACXpJ,MAAO+oB,EACPte,SAAU,SAAApE,GAAC,OAAI4iB,EAAkBV,GAAWliB,OAEhD2C,EAAArF,EAAAC,cAACslB,GAAA,eAAD,iBAOpBT,GAAgBlkB,WACZokB,WAAY7e,EAAAnG,EAAU2D,OACtBuhB,cAAe/e,EAAAnG,EAAUqG,KACzB+e,eAAgBjf,EAAAnG,EAAU2D,OAC1B2hB,kBAAmBnf,EAAAnG,EAAUqG,MAGlB,IAAAqf,GAAA,GC/CAC,GA1BW,kBACtBtgB,EAAArF,EAAAC,cAACkM,EAAA,MAAK/I,OAASif,OAAQ,SACnBhd,EAAArF,EAAAC,cAAC2jB,EAAD,2BACAve,EAAArF,EAAAC,cAACyM,EAAA,SAAD,KACIrH,EAAArF,EAAAC,cAAA,SACIoF,EAAArF,EAAAC,cAAA,uCADJ,KAEIoF,EAAArF,EAAAC,cAAA,qHAKJoF,EAAArF,EAAAC,cAAA,SACIoF,EAAArF,EAAAC,cAAA,2CADJ,KAEIoF,EAAArF,EAAAC,cAAA,sFAKJoF,EAAArF,EAAAC,cAAA,SACIoF,EAAArF,EAAAC,cAAA,oBADJ,KAEIoF,EAAArF,EAAAC,cAAA,qiCCJhB,IAAM2lB,GAAiB/B,EAAA,EAAOa,IAAVmB,MAoBdC,GAAyBjC,EAAA,EAAOkC,GAAVC,MAItBC,GAAiBpC,EAAA,EAAOa,IAAVwB,MAMdC,GAAYtC,EAAA,EAAOa,IAAV0B,MAmBTC,GAAexC,EAAA,EAAOa,IAAV4B,MAILC,GAAsB,SAAAtuB,GAAA,IAAGyJ,EAAHzJ,EAAGyJ,KAAH,OAC/B2D,EAAArF,EAAAC,cAACumB,GAAA,SACG/gB,aAAW,0BACXuH,SAAS,OACTyZ,YACIphB,EAAArF,EAAAC,cAACgmB,GAAD,KACI5gB,EAAArF,EAAAC,cAAA,SACIoF,EAAArF,EAAAC,cAAA,gCADJ,KACiCyB,EAAKglB,yBAAyB3F,QAAQ,IAEvE1b,EAAArF,EAAAC,cAAA,SACIoF,EAAArF,EAAAC,cAAA,+CADJ,KACgDyB,EAAKilB,iBAErDthB,EAAArF,EAAAC,cAAA,SACIoF,EAAArF,EAAAC,cAAA,0CADJ,KAC2CyB,EAAKklB,uBAKxDvhB,EAAArF,EAAAC,cAAC4mB,GAAA7mB,EAAD,QAIRumB,GAAoB3lB,WAChBc,KAAMyE,EAAAnG,EAAUa,QAGpB,IAAMimB,GAAe,SAAAnuB,GAAA,IAAAouB,EAAApuB,EACjB+I,YADiB,IAAAqlB,OAAAC,EAAAruB,EAEjBsuB,sBAFiB,IAAAD,EAEA,aAFAA,EAAAE,EAAAvuB,EAGjBwuB,6BAHiB,IAAAD,EAGO,aAHPA,EAAA,OAKjB7hB,EAAArF,EAAAC,cAACkM,EAAA,MAAK/I,OAASgkB,SAAU,OAAQC,KAAM,SAAWC,UAAU,iBACxDjiB,EAAArF,EAAAC,cAACyM,EAAA,SAAD,KACIrH,EAAArF,EAAAC,cAAA,6EACCyB,EAAKsE,IAAI,SAAAtE,GAAI,OACV2D,EAAArF,EAAAC,cAAA,OAAK1F,IAAKmH,EAAKhF,IACX2I,EAAArF,EAAAC,cAACsnB,GAAA,SAAQta,QAAS,mDACd5H,EAAArF,EAAAC,cAACwL,GAAA,QACGrI,OAASmf,QAAS,eAClBiF,UAAU,IACV9mB,QAAS,kBAAMymB,EAAsBzlB,EAAKhF,KAC1CwD,QAAQ,QAEPwB,EAAKuE,OAGdZ,EAAArF,EAAAC,cAAC2lB,GAAD,KACIvgB,EAAArF,EAAAC,cAAComB,IAAa9rB,IAAKmH,EAAKhF,IACpB2I,EAAArF,EAAAC,cAAC2G,GAAA,WAAD,KACIvB,EAAArF,EAAAC,cAAC4G,GAAA,WACGnK,GAAIgF,EAAKhF,GACTN,KAAK,SACLqJ,aAAW,oBACXpJ,MAAOhD,OAAAouB,EAAA,EAAApuB,CAAqBqI,EAAKgmB,YACjC5gB,SAAU,SAAA6gB,GAAO,OACbV,EAAe5tB,OAAAouB,EAAA,EAAApuB,CAAqBsuB,GAAUjmB,EAAKhF,OAG3D2I,EAAArF,EAAAC,cAACslB,GAAA,eAAD,cAGRlgB,EAAArF,EAAAC,cAAC6lB,GAAD,UACPpkB,EAAKkmB,uBADE,cAGAviB,EAAArF,EAAAC,cAACkmB,GAAD,KACI9gB,EAAArF,EAAAC,cAACsmB,IAAoB7kB,KAAMA,MAGnC2D,EAAArF,EAAAC,cAAA,KAAGmD,OAASsB,MAAO,YAAnB,IAAkChD,EAAK0d,MAAM2B,QAAQ,UAOzE+F,GAAalmB,WACTc,KAAMyE,EAAAnG,EAAUoG,MAChB6gB,eAAgB9gB,EAAAnG,EAAUqG,KAC1B8gB,sBAAuBhhB,EAAAnG,EAAUqG,KACjCwhB,cAAe1hB,EAAAnG,EAAUoG,MACzB0hB,iBAAkB3hB,EAAAnG,EAAUqG,MAGjB,IAAA0hB,GAAA,iZCxHf,IAAMC,GAAUnE,EAAA,EAAOa,IAAVuD,MAMPC,GAAcrE,EAAA,EAAOa,IAAVyD,MAOXC,GAAevE,EAAA,EAAOa,IAAV2D,MAeZC,GAAkB,SAAC5mB,EAAM0jB,EAAgBJ,GAAvB,OACpBtjB,EAAKsE,IAAI,SAAA4F,GACL,IAAM2S,EACRllB,OAAAouB,EAAA,EAAApuB,CAAsBuS,EAAG8b,YACzB9b,EAAGgc,uBACH9G,WAAWkE,GACH3F,EACRhmB,OAAAouB,EAAA,EAAApuB,CAAsBuS,EAAG8a,0BACzB5F,WAAWsE,GACHhG,EAAQ/lB,OAAAouB,EAAA,EAAApuB,CAAegmB,EAAed,GAE5C,OAAAgK,OAAY3c,GAAIwT,QAAOb,aAAYc,qBAMrCmJ,GAAuB,SAAA7vB,GAAiB,IAAd+kB,EAAc/kB,EAAd+kB,QACtB+K,EAAgBhL,EAAYC,EAAS,eADD5b,EAEJzI,OAAA4L,EAAA,SAAA5L,CAAS,MAFL2I,EAAAkD,IAAApD,EAAA,GAElCkjB,EAFkChjB,EAAA,GAEtBkjB,EAFsBljB,EAAA,GAAAiJ,EAGI5R,OAAA4L,EAAA,SAAA5L,CAAS,MAHb6R,EAAAhG,IAAA+F,EAAA,GAGlCma,EAHkCla,EAAA,GAGlBoa,EAHkBpa,EAAA,GAAAwd,EAKNrvB,OAAAsvB,EAAA,EAAAtvB,CAAO,MALDuvB,EAAA1jB,IAAAwjB,EAAA,GAKlCG,EALkCD,EAAA,GAKvBE,EALuBF,EAAA,GAAAG,EAMV1vB,OAAAsvB,EAAA,EAAAtvB,KANU2vB,EAAA9jB,IAAA6jB,EAAA,GAMlC7gB,EANkC8gB,EAAA,GAMzBC,EANyBD,EAAA,GAAAE,EAOF7vB,OAAAsvB,EAAA,EAAAtvB,IAAW,SAAAqI,GAAI,OACnD4mB,GAlCO,SAAArwB,GAAA,IAAAkxB,EAAAlxB,EAAGmxB,MAAH,gBAAAD,QACLnjB,IAAI,SAAA4F,GAAE,OAAA2c,OACL3c,GACHwT,MAAO,EACPsI,WAAY,KACZnJ,WAAY,EACZc,cAAe,MA4BCgK,CAAO3nB,GAAO0jB,EAAgBJ,KARRsE,EAAApkB,IAAAgkB,EAAA,GAOlCK,EAPkCD,EAAA,GAO7BE,EAP6BF,EAAA,GAOnBG,EAPmBH,EAAA,GAAAI,EAWFrwB,OAAA0C,EAAA,EAAA1C,CACpCswB,EAAA,EAASvoB,eADL9D,EAXkCosB,EAWlCpsB,YAAaW,EAXqByrB,EAWrBzrB,eASfgpB,EAAiB,SAAC2C,EAASltB,GAC7B,IAAMmtB,EAAcN,EAAI7nB,KAAKsE,IAAI,SAAA4F,GAC7B,OAAIA,EAAGlP,KAAOA,GACVkP,EAAG8b,WAAakC,EACKtB,IACf1c,GACFwZ,EACAJ,GACF,IAGKpZ,IAIf6d,EAAaI,IAGjBxwB,OAAA4L,EAAA,UAAA5L,CAAU,WACNyvB,EAAazvB,OAAAywB,EAAA,EAAAzwB,IACb4vB,EAAW5vB,OAAAywB,EAAA,EAAAzwB,EAAiBlB,OAAQmF,UAMxCjE,OAAA4L,EAAA,UAAA5L,CAAU,WACNowB,EAAanB,GAAgBiB,EAAI7nB,KAAM0jB,EAAgBJ,MACtDI,EAAgBJ,IAKrB3rB,OAAA4L,EAAA,UAAA5L,CAAU,WACNmwB,EAASnwB,OAAAywB,EAAA,EAAAzwB,EAAUlB,OAAQmF,OAC1BA,IAML,IAAM6pB,EAAwB,SAAA4C,GAK1BtB,GAHIhrB,iBAAkB,eAClBI,aAAeksB,MA8DvB,OACI1kB,EAAArF,EAAAC,cAACoF,EAAArF,EAAMK,SAAP,KACIgF,EAAArF,EAAAC,cAAC+pB,EAAA,YAAW5mB,OAASikB,KAAM,MACvBhiB,EAAArF,EAAAC,cAAC+pB,EAAA,iBAAgBC,MAAO,2BAE3BpB,EAAU/oB,OACPuF,EAAArF,EAAAC,cAACiqB,EAAA,KAAD,KACI7kB,EAAArF,EAAAC,cAACkqB,EAAA,GAAWpqB,eAAgB8oB,EAAU/oB,SAG7C+oB,EAAUpnB,WACP4D,EAAArF,EAAAC,cAACoF,EAAArF,EAAMK,SAAP,KACIgF,EAAArF,EAAAC,cAACiqB,EAAA,MAAK9mB,OAAS+gB,cAAe,MAC1B9e,EAAArF,EAAAC,cAACkM,EAAA,KAAD,KACI9G,EAAArF,EAAAC,cAACyM,EAAA,SAAD,KACIrH,EAAArF,EAAAC,cAACoL,EAAA,GACGrG,WAAYkD,EAAQxG,KACpB2I,QAAS/M,EACTgN,WAAYrM,OAK5BoH,EAAArF,EAAAC,cAAC+nB,IAAQV,UAAU,sBA/E/BjiB,EAAArF,EAAAC,cAACioB,GAAD,KACI7iB,EAAArF,EAAAC,cAACiqB,EAAA,MAAK9mB,OAAS+gB,cAAe,MAC1B9e,EAAArF,EAAAC,cAACkM,EAAA,KAAD,KACI9G,EAAArF,EAAAC,cAAC2jB,EAAD,2BACAve,EAAArF,EAAAC,cAACyM,EAAA,SAAD,KACK6c,EAAI/nB,WAAa6D,EAAArF,EAAAC,cAACmqB,EAAA,EAAD,MACjBb,EAAIzpB,OAASuF,EAAArF,EAAAC,cAACuE,EAAA,GAAc3M,QAAS0xB,EAAIzpB,MAAMA,QAC/CypB,EAAI9nB,WAAa8nB,EAAI7nB,KAAKtD,QAAU,GAAKiH,EAAArF,EAAAC,cAACoqB,EAAA,EAAD,MACzCd,EAAI9nB,WAAa8nB,EAAI7nB,KAAKtD,OAAS,GAChCiH,EAAArF,EAAAC,cAACoF,EAAArF,EAAMK,SAAP,KACIgF,EAAArF,EAAAC,cAAC0jB,GACG5gB,QAAUS,IAAK,GAAIF,MAAO,GAAIG,OAAQ,GAAIJ,KAAM,IAChD3G,GAAG,oBACHgF,KAAM6nB,EAAI7nB,OAEd2D,EAAArF,EAAAC,cAAA,KAAGmD,OAASknB,UAAW,WAAvB,iBAMpBjlB,EAAArF,EAAAC,cAACiqB,EAAA,KAAD,KACI7kB,EAAArF,EAAAC,cAAC0lB,GAAD,QAMRtgB,EAAArF,EAAAC,cAACmoB,GAAD,KACI/iB,EAAArF,EAAAC,cAACiqB,EAAA,MAAK9mB,OAAS+gB,cAAe,IAAKoG,YAAa,MAC5CllB,EAAArF,EAAAC,cAACukB,IAAaP,aAvGF,SAAAviB,GAAI,OAC5BA,EAAKkH,OAAO,SAAC4hB,EAAKC,GAAN,OAAeD,EAAMC,EAAKrL,OAAO,GAsGLsL,CAAoBnB,EAAI7nB,SAExD2D,EAAArF,EAAAC,cAACiqB,EAAA,MACG9mB,OACIunB,QAAS,OACTC,cAAe,SACfvD,KAAM,QACNkD,YAAa,MAGjBllB,EAAArF,EAAAC,cAACylB,IACGV,WAAYA,EACZE,cAAeA,EACfE,eAAgBA,EAChBE,kBAAmBA,IAEvBjgB,EAAArF,EAAAC,cAAC8nB,IACGZ,sBAAuBA,EACvBzlB,KAAM6nB,EAAI7nB,KACVulB,eAAgBA,EAChB4D,kBAAmBtB,EAAI7nB,aAuC3C8mB,GAAqB5nB,WACjB8c,QAASvX,EAAAnG,EAAUa,QAGRC,EAAA,2ZCvBAgqB,aA3NX,SAAA/d,EAAYge,GAAM,IAAA7M,EAAAC,KAAAC,IAAAD,KAAApR,GAAAsR,IAAAF,KAAA,kBAiHF,SAAApd,GACd,IAAIiqB,EAAU,EACVC,EAAO,EACP5G,EAAQ,EACNxF,EACNH,EAAA,EAASI,MACTJ,EAAA,EACQR,EAAKa,KACZJ,OACAK,wBAAwBH,EACzB,GACMI,EACNP,EAAA,EAASQ,MACTR,EAAA,EACQR,EAAKa,KACZJ,OACAK,wBAAwBC,EACzB,GACMiM,EAAoBxM,EAAA,EAAc,SACxC,GAAK3d,EAAL,CAIA,IAAMue,EAAepB,EAAKqB,YAAYZ,OAAOK,wBAAwBQ,MAC/DC,EAAaf,EAAA,EACXR,EAAKa,IAAM,SAClBJ,OACAK,wBAAwBQ,MAEnBE,EADW,IAAOJ,EAAeG,EAAc,IACzBZ,EAAIY,EAAc,IAC1C1e,IACAiqB,EAAUjqB,EAAEoqB,KAAO,EACnBF,EAAOlqB,EAAEqqB,MAAQ,EACjB/G,EAAQtjB,EAAEsqB,OAAS,EACnBnN,EAAKoN,KAAK3L,KAAKuL,EAAkBnqB,EAAEwqB,MAAQ,QAG3CxqB,GAAKA,EAAEW,OACPspB,EAAUjqB,EAAEW,KAAKypB,KAAO,EACxBF,EAAOlqB,EAAEW,KAAK0pB,MAAQ,EACtB/G,EAAQtjB,EAAEW,KAAK2pB,OAAS,EACxBnN,EAAKoN,KAAK3L,KAAKuL,EAAkBnqB,EAAEW,KAAK6pB,MAAQ,QAGpDrN,EAAKsN,KAAK7L,KAAU0E,EAAQ,SAC5BnG,EAAKuN,UAAYvN,EAAKsN,KAAK7M,OAAOkB,wBAClC3B,EAAKwN,OAAO/L,KAAK,GAAKsL,GACtB/M,EAAKyN,WAAWhM,KAAK,GAAKqL,GAC1B9M,EAAK0N,iBAAmB1N,EAAKyN,WAAWhN,OAAOkB,wBAC/C3B,EAAK2N,cAAgB3N,EAAKwN,OAAO/M,OAAOkB,wBAExC,IAGIK,EAHEC,EAAejC,EAAKuN,UAAYvN,EAAKkC,SAAY,IAEjDC,EAAUF,EADE,GAIdD,EADAC,EAHc,GAIEjC,EAAKkC,SAAWC,EAEhBnC,EAAKkC,SAGzBlC,EAAKoC,YAAYC,KAAK,QAASL,GAC/BhC,EAAKqB,YAAYgB,KAAK,YAAa,aAAe1B,EAAI,IAAMI,EAAI,KAC5DS,GACAxB,EAAKsC,aAAaD,KAAK,YAAa,gCACpCrC,EAAKoC,YAAYC,KAAK,KAAML,EAAgB,IAC5ChC,EAAK4N,cAAcvL,KAAK,MAAOL,GAC/BhC,EAAK6N,WAAWxL,KAAK,MAAOL,GAC5BhC,EAAK8N,WAAWzL,KAAK,KAAML,EAAgB,GAC3ChC,EAAK+N,YAAY1L,KAAK,KAAML,EAAgB,GAC5ChC,EAAKgO,YAAY3L,KAAK,IAAsB,GAAhBL,GAC5BhC,EAAKiO,SAAS5L,KAAK,IAAsB,GAAhBL,GACzBhC,EAAKyN,WAAWpL,KAAK,KAAMrC,EAAK0N,iBAAmB,GAAK,IACxD1N,EAAKwN,OAAOnL,KAAK,KAAMrC,EAAK2N,cAAgB,GAAK,IACjD3N,EAAKoN,KAAK/K,KAAK,KAAML,EAAgB,GACrChC,EAAKsN,KAAKjL,KAAK,KAAMrC,EAAKuN,UAAY,EAAI,GAC1CvN,EAAKkO,UAAU7L,KAAK,KAAML,KAE1BhC,EAAKsC,aAAaD,KAAK,YAAa,+BACpCrC,EAAKoC,YAAYC,KAAK,IAAK,IAC3BrC,EAAK4N,cAAcvL,KAAK,KAAM,IAC9BrC,EAAK6N,WAAWxL,KAAK,KAAM,IAC3BrC,EAAK8N,WAAWzL,KAAK,IAAK,IAC1BrC,EAAK+N,YAAY1L,KAAK,IAAK,IAC3BrC,EAAKgO,YAAY3L,KAAK,IAAK,IAC3BrC,EAAKiO,SAAS5L,KAAK,IAAK,IACxBrC,EAAKyN,WAAWpL,KAAK,IAAKL,EAAgBhC,EAAK0N,kBAC/C1N,EAAKwN,OAAOnL,KAAK,IAAKL,EAAgBhC,EAAK2N,eAC3C3N,EAAKoN,KAAK/K,KAAK,IAAK,IACpBrC,EAAKsN,KAAKjL,KAAK,IAAKL,GACpBhC,EAAKkO,UAAU7L,KAAK,IAAK,KAG7BrC,EAAKqB,YAAYnc,MAAM,UAAW,GAClC8a,EAAKqB,YAAYkB,eA/MDpC,IAAAF,KAAA,iBAkNH,WACbD,EAAKqB,YACJmB,aACAC,MAAM,IACNvd,MAAM,UAAW,GACjBA,MAAM,iBAAkB,UAtNvB+a,KAAKY,IAAMgM,EAAKhM,IAChBZ,KAAKkO,OAAStB,EAAKsB,OACnBlO,KAAKyC,kDAILzC,KAAKoB,YAAcb,EAAA,EAAUP,KAAKY,IAAM,SAAStkB,OAAO,KACxD0jB,KAAKoB,YAAYgB,KAAK,KAAM,0BAA4BpC,KAAKY,IAAImC,MAAM,IACvE/C,KAAKoB,YAAYgB,KAAK,WAAY,WAClCpC,KAAKoB,YAAYnc,MAAM,UAAW,GAClC+a,KAAKoB,YAAYnc,MAAM,iBAAkB,QACzC+a,KAAKoB,YAAYgB,KAAK,YAAa,uBACnCpC,KAAKiC,SAAW,IAChBjC,KAAKgD,mBAAqB,GAE1BhD,KAAKqC,aAAerC,KAAKoB,YACxB9kB,OAAO,QACP8lB,KAAK,YAAa,iCAClBA,KAAK,IAAK,GACVA,KAAK,IAAK,GACVA,KAAK,SAAU,IACfA,KAAK,QAAS,IACdA,KAAK,OAAQ,WACdpC,KAAKmC,YAAcnC,KAAKoB,YACvB9kB,OAAO,QACP8lB,KAAK,IAAK,IACVA,KAAK,KAAM,IACXA,KAAK,KAAM,GACXA,KAAK,SAAU,KACfA,KAAK,QAASpC,KAAKiC,UACnBG,KAAK,OAAQ,WACdpC,KAAK2N,cAAgB3N,KAAKoB,YACzB9kB,OAAO,UACP8lB,KAAK,KAAM,IACXA,KAAK,KAAM,GACXA,KAAK,IAAK,GACVA,KAAK,SAAU,SACfA,KAAK,OAAQ,SACdpC,KAAK4N,WAAa5N,KAAKoB,YACtB9kB,OAAO,UACP8lB,KAAK,KAAM,IACXA,KAAK,KAAM,IACXA,KAAK,IAAK,GACVA,KAAK,SAAU,SACfA,KAAK,OAAQ,SACdpC,KAAK+N,YAAc/N,KAAKoB,YACvB9kB,OAAO,QACP8lB,KAAK,IAAK,IACVA,KAAK,IAAK,GACVA,KAAK,YAAa,IAClBA,KAAK,OAAQ,SACbZ,KAAK,cACNxB,KAAKgO,SAAWhO,KAAKoB,YACpB9kB,OAAO,QACP8lB,KAAK,IAAK,IACVA,KAAK,IAAK,IACVA,KAAK,YAAa,IAClBA,KAAK,OAAQ,SACbZ,KAAK,UACNxB,KAAK8N,YAAc9N,KAAKoB,YACvB9kB,OAAO,QACP8lB,KAAK,QAAS,aACdA,KAAK,OAAQpC,KAAKkO,OAAO,IACzB9L,KAAK,IAAK,IACVA,KAAK,IAAK,GACVZ,KAAK,KACNxB,KAAK6N,WAAa7N,KAAKoB,YACtB9kB,OAAO,QACP8lB,KAAK,QAAS,aACdA,KAAK,OAAQpC,KAAKkO,OAAO,IACzB9L,KAAK,IAAK,IACVA,KAAK,IAAK,IACVZ,KAAK,KACNxB,KAAKqN,KAAOrN,KAAKoB,YAChB9kB,OAAO,QACP8lB,KAAK,OAAQ,SACbA,KAAK,IAAK,KACVA,KAAK,KAAM,IACXA,KAAK,YAAa,IAClBA,KAAK,cAAe,OACpBZ,KAAK,WACNxB,KAAKwN,WAAaxN,KAAKoB,YACtB9kB,OAAO,QACP8lB,KAAK,OAAQ,SACbA,KAAK,YAAa,IAClBA,KAAK,IAAK,KACVA,KAAK,IAAK,GACVZ,KAAK,KACNxB,KAAKuN,OAASvN,KAAKoB,YAClB9kB,OAAO,QACP8lB,KAAK,OAAQ,SACbA,KAAK,YAAa,IAClBA,KAAK,IAAK,KACVA,KAAK,IAAK,IACVZ,KAAK,KACNxB,KAAKmN,KAAOnN,KAAKoB,YAChB9kB,OAAO,QACP8lB,KAAK,OAAQ,SACbA,KAAK,SAAU,SACfA,KAAK,IAAK,IACVA,KAAK,KAAM,IACXA,KAAK,YAAa,IAClBZ,KAAK,SACNxB,KAAKiO,UAAYjO,KAAKoB,YACrB9kB,OAAO,QACP8lB,KAAK,OAAQ,SACbA,KAAK,IAAK,IACVA,KAAK,IAAK,IACVA,KAAK,YAAa,IAClBZ,KAAK,qDCtGR2M,cACF,SAAAC,EAAYzpB,GAAO,IAAAob,EAAA,OAAAE,IAAAD,KAAAoO,IACfrO,EAAAqD,IAAApD,KAAAqD,IAAA+K,GAAA9K,KAAAtD,KAAMrb,KACD8d,KAAO1C,EAAK0C,KAAKe,KAAVC,IAAA1D,IACZA,EAAKwD,KAAOxD,EAAKwD,KAAKC,KAAVC,IAAA1D,IACZA,EAAK2D,OAAS3D,EAAK2D,OAAOF,KAAZC,IAAA1D,IACdA,EAAKiJ,sBAAwBjJ,EAAKiJ,sBAAsBxF,KAA3BC,IAAA1D,IAC7BA,EAAK/hB,OACDqwB,iBACA1K,QAAS,MARE5D,wEAY4B,IAAToN,EAASrzB,EAAvByJ,KAAQ6pB,KACpBvqB,EAAgBgd,EAAA,EAAhBhd,YACFyrB,EAAgBpzB,OAAAouB,EAAA,EAAApuB,CAAWiyB,GAFUoB,EAGbvO,KAAKrb,MAA3B6pB,EAHmCD,EAGnCC,MACFC,GACF9vB,WAAY2vB,EACZ1vB,SAAU0vB,EACVhvB,iBAAkB,SAClB/F,QAAU,SAAU,cACpBmG,YATuC6uB,EAG5B3C,WAOXpsB,OAAQgvB,GAENvzB,EAASC,OAAAwkB,EAAA,UAAAxkB,CAAUuzB,GAAsB9O,YAAa,YAC5DK,KAAKrb,MAAM4a,QAAQzU,MACf8U,SAAU/c,EACV5H,4CAIC,IAAAkoB,EAAAnD,KACG2D,EAAY3D,KAAKhiB,MAAjB2lB,QACRE,aAAaF,GACb3D,KAAK8D,UACDH,QAASI,WAAW,WAChBZ,EAAKI,QACN,sCAKPvD,KAAKyC,sCAMLlC,EAAA,EAAa,IAAMP,KAAKrb,MAAMpG,GAAK,QAAQylB,SAC3C,IAwEIC,EAxEEyK,EAAYnO,EAAA,EAAa,YAEzBhd,EAD0Byc,KAAKrb,MAA/BpB,KACuBkH,OACzB,SAACkkB,EAADn0B,GAAiE,IAAnDo0B,EAAmDp0B,EAAnDo0B,aAAcC,EAAqCr0B,EAArCq0B,iBAAkBC,EAAmBt0B,EAAnBs0B,aACtC1B,EAAOsB,EAAUE,IAAiB,IAAIG,KACtC/B,GAAO6B,GAAoB,EAC3B5B,GAAQ6B,GAAgB,EACxB5B,GAAS2B,EAAmBC,GAAgB,EAChD,OAAOH,EAAU3zB,QAASoyB,OAAMJ,MAAKC,OAAMC,eAI7C7L,EAAQrB,KAAKrb,MAAMI,WACnBmf,EAASlE,KAAKrb,MAAMS,YACpBsb,EAAIH,EAAA,IAET4D,YAAa,EAAG9C,IAChB+C,QAAQ,KACHtD,EAAIP,EAAA,IAAiB8D,OAAQH,EAAQ,IAErCtD,EAAML,EAAA,EACJ,IAAMP,KAAKrb,MAAMpG,IACxBjC,OAAO,OACP8lB,KAAK,QAASf,EAAQrB,KAAKrb,MAAMC,OAAOM,KAAO8a,KAAKrb,MAAMC,OAAOO,OACjEid,KAAK,SAAU8B,EAASlE,KAAKrb,MAAMC,OAAOS,IAAM2a,KAAKrb,MAAMC,OAAOU,QAClEhJ,OAAO,KACP8lB,KACG,YACA,aACFpC,KAAKrb,MAAMC,OAAOM,KAClB,IACA8a,KAAKrb,MAAMC,OAAOS,IAClB,KAGE6oB,EAAS3N,EAAA,GAAkB,UAAW,YAEpCyO,EAAa,IAAIrC,GACnB/L,IAAK,IAAMZ,KAAKrb,MAAMpG,GACtB2vB,WAWEe,EANQ1O,EAAA,IAEbrkB,MALgB,OAAQ,QAMxBgzB,MAAM3O,EAAA,GACNtjB,OAAOsjB,EAAA,EAEO4O,CAAM5rB,GAErBmd,EAAEoE,OAAOmK,EAAO,GAAGpnB,IAAI,SAAAjF,GAAC,OAAIA,EAAEW,KAAK6pB,QACnCtM,EAAEgE,QAAS,EAAGvE,EAAA,EAAO0O,EAAOA,EAAOhvB,OAAS,GAAI,SAAA2C,GAAC,OAAW,KAAPA,EAAE,MAAc,IAErEge,EACCtkB,OAAO,KACP8lB,KAAK,QAAS,UACdkB,KAAK/C,EAAA,EAAYO,GAAG6D,UAAUtD,EAAO,EAAG,IACxC0D,UAAU,QACV3C,KAAK,SAAU,WAChBxB,EAAImE,UAAU,sBAAsB3C,KAAK,KAAM,GAE/CxB,EACCtkB,OAAO,QACP8lB,KAAK,YAAa,eAClBA,KAAK,IAAK,EAAIpC,KAAKrb,MAAMC,OAAOM,MAChCkd,KAAK,IAAK,EAAI8B,EAAS,GACvB9B,KAAK,KAAM,OACXnd,MAAM,cAAe,UACrBuc,KAAK,4BAGN,IAAM4N,EAAWC,KAAKC,MAAM/rB,EAAKtD,QAAUsD,EAAKtD,OAAS,IACzDgkB,EAAQ1gB,EAAKsE,IAAI,SAAAjF,GAAC,OAAIA,EAAEwqB,OACpB7pB,EAAKtD,OAAS,KACdgkB,EAAQ1gB,EACPsE,IAAI,SAACjF,EAAG2H,GAAJ,OAAWA,EAAI6kB,GAAa,EAAIxsB,EAAEwqB,UAAOltB,IAC7CoJ,OAAO,SAAAc,GAAI,OAAIA,KAGpBwW,EACCtkB,OAAO,KACP8lB,KAAK,QAAS,UACdA,KAAK,YAAa,eAAiB8B,EAAS,KAC5CZ,KACG/C,EAAA,EACYG,GACX8D,WAAWP,GACXS,WAAWnE,EAAA,EAAc,aAE7BwE,UAAU,QACV3C,KAAK,SAAU,WAChBxB,EAAImE,UAAU,sBAAsB3C,KAAK,IAAK,IAG9CxB,EACCtkB,OAAO,QACP8lB,KACG,YACA,aACFf,EAAQ,EACR,MACC6C,EAASlE,KAAKrb,MAAMC,OAAOS,IAAM,IAClC,KAEDJ,MAAM,cAAe,UACrBuc,KAAK,QAEN,IAAM+N,EAAQ3O,EACbmE,UAAU,SACVxhB,KAAK0rB,GACLhK,QACA3oB,OAAO,KACP8lB,KAAK,QAAS,SACdnd,MAAM,OAAQ,SAACuqB,EAAIjlB,GAAL,OAAW2jB,EAAO3jB,KACjCglB,EACCxK,UAAU,QACVxhB,KAAK,SAAAX,GAAC,OAAIA,IACVqiB,QACA3oB,OAAO,QACP8lB,KAAK,IAAK,SAAAxf,GAAC,OAAI8d,EAAE9d,EAAEW,KAAK6pB,QACxBhL,KAAK,IAAK,SAAAxf,GAAC,OAAIke,EAAEle,EAAE,MACnBwf,KAAK,SAAU,GACfA,KAAK,QAAS1B,EAAEsE,YAAc,GAC9BzC,aACAkN,SAAS,KACTC,KAAKnP,EAAA,GACL6B,KAAK,IAAK,SAAAxf,GAAC,OAAIke,EAAEle,EAAE,MACnBwf,KAAK,SAAU,SAAAxf,GAAC,OAAIke,EAAEle,EAAE,IAAMke,EAAEle,EAAE,MACnC2sB,EACCxK,UAAU,QACVG,GAAG,YAAa8J,EAAW5J,iBAC3BF,GAAG,YAAa8J,EAAW5J,iBAC3BF,GAAG,WAAY8J,EAAW3J,gBAC1BH,GAAG,QAASlF,KAAKgJ,mEAIlBhJ,KAAKuD,OAEL3qB,OAAO0sB,iBAAiB,SAAUtF,KAAK0D,mDAGxBiM,GACXA,EAAUpsB,OAASyc,KAAKrb,MAAMpB,MAC9Byc,KAAKuD,sDAIU,IACXI,EAAY3D,KAAKhiB,MAAjB2lB,QACRE,aAAaF,GACb/qB,OAAO2sB,oBAAoB,SAAUvF,KAAK0D,yCAI1C,OAAOxc,EAAArF,EAAAC,cAAA,OAAKvD,GAAIyhB,KAAKrb,MAAMpG,YA/MZuI,EAAA,WAmNvBqnB,EAAS1rB,WACLlE,GAAIyJ,EAAAnG,EAAU2D,OACdomB,WAAY5jB,EAAAnG,EAAUoG,MACtBumB,MAAOxmB,EAAAnG,EAAUoG,MACjB1E,KAAMyE,EAAAnG,EAAUoG,MAChBrD,OAAQoD,EAAAnG,EAAUa,OAClB0C,UAAW4C,EAAAnG,EAAUqG,KACrBnD,SAAUiD,EAAAnG,EAAUqG,KACpBqX,QAASvX,EAAAnG,EAAUa,QAGR,IAAAktB,EAAA10B,OAAAwJ,EAAA,GAAgBxJ,OAAA20B,EAAA,EAAA30B,CAAWizB,IC/NpC2B,cACF,SAAAC,EAAYprB,GAAO,IAAAob,EAAA,OAAAE,IAAAD,KAAA+P,IACfhQ,EAAAqD,IAAApD,KAAAqD,IAAA0M,GAAAzM,KAAAtD,KAAMrb,KACD4e,KAAOxD,EAAKwD,KAAKC,KAAVC,IAAA1D,IACZA,EAAK0C,KAAO1C,EAAK0C,KAAKe,KAAVC,IAAA1D,IACZA,EAAK2D,OAAS3D,EAAK2D,OAAOF,KAAZC,IAAA1D,IACdA,EAAKiQ,cAAgBjQ,EAAKiQ,cAAcxM,KAAnBC,IAAA1D,IACrBA,EAAKiJ,sBAAwBjJ,EAAKiJ,sBAAsBxF,KAA3BC,IAAA1D,IAC7BA,EAAK/hB,OACDqwB,iBACA1K,QAAS,MATE5D,wEAamB,IAARoN,EAAQrzB,EAAdszB,KACZvqB,EAAgBgd,EAAA,EAAhBhd,YACFyrB,EAAgBpzB,OAAAouB,EAAA,EAAApuB,CAAWiyB,GAFCoB,EAGOvO,KAAKrb,MAAtCsrB,EAH0B1B,EAG1B0B,UAAWrE,EAHe2C,EAGf3C,WACb6C,GACF9vB,WAAY2vB,EACZ1vB,SAAU0vB,EACVhvB,iBAAkB,SAClB/F,QAAU,SAAU,cACpBkG,WAAYwwB,EACZzwB,OAV8B+uB,EAGHC,MAQ3B9uB,YAAaksB,GAGX3wB,EAASC,OAAAwkB,EAAA,UAAAxkB,CAAUuzB,GAAsB9O,YAAa,YAC5DK,KAAKrb,MAAM4a,QAAQzU,MACf8U,SAAU/c,EACV5H,4CAIC,IAAAkoB,EAAAnD,KACG2D,EAAY3D,KAAKhiB,MAAjB2lB,QACRE,aAAaF,GACb3D,KAAK8D,UACDH,QAASI,WAAW,WAChBZ,EAAKI,QACN,+CAKPvD,KAAKuD,sCAGLvD,KAAKyC,sCAKLlC,EAAA,EAAa,IAAMP,KAAKrb,MAAMpG,GAAK,QAAQylB,SAC3C,IAAM3C,EAAQrB,KAAKrb,MAAMI,WACnBmf,EAASlE,KAAKrb,MAAMS,YAE1B,SAASmd,EAAW/C,GAChBA,EACC+C,aACAkN,SAAS,KACTS,UAAU,mBAAoBC,GAGnC,SAASA,IACL,IAAMC,EAAIpQ,KAAKqQ,iBACT9lB,EAAIgW,EAAA,EAAqB,KAAO6P,EAAGA,EAAI,IAAMA,GACnD,OAAO,SAASE,GACZ,OAAO/lB,EAAE+lB,IAIjB,IAAM5P,EAAIH,EAAA,IAAe4D,YAAa,EAAG9C,IACnCP,EAAIP,EAAA,IAAiB8D,OAAQH,EAAQ,IAGvCgK,EAAS3N,EAAA,GAAkB,UAAW,UAAW,SAC/CK,EAAML,EAAA,EACJ,IAAMP,KAAKrb,MAAMpG,IACxBjC,OAAO,OACP8lB,KAAK,QAASf,EAAQrB,KAAKrb,MAAMC,OAAOM,KAAO8a,KAAKrb,MAAMC,OAAOO,OACjEid,KAAK,SAAU8B,EAASlE,KAAKrb,MAAMC,OAAOS,IAAM2a,KAAKrb,MAAMC,OAAOU,QAClE8c,KAAK,IAAK,KACV9lB,OAAO,KACP8lB,KACG,YACA,aACFpC,KAAKrb,MAAMC,OAAOM,KAClB,IACA8a,KAAKrb,MAAMC,OAAOS,IAClB,KAGIwf,EAAU,IAAI8H,GAChB/L,IAAK,IAAMZ,KAAKrb,MAAMpG,GACtB2vB,WAEUqC,EAAoBvQ,KAAKrb,MAA/BpB,KACFmrB,EAAYnO,EAAA,EAAa,YAEzBhd,EAAOgtB,EAAgB9lB,OACzB,SAACkkB,EAADn0B,GAAiE,IAAnDo0B,EAAmDp0B,EAAnDo0B,aAAcC,EAAqCr0B,EAArCq0B,iBAAkBC,EAAmBt0B,EAAnBs0B,aACtC1B,EAAOsB,EAAUE,IAAiB,IAAIG,KACtC/B,GAAO6B,GAAoB,EAC3B5B,GAAQ6B,GAAgB,EACxB5B,GAAS2B,EAAmBC,GAAgB,EAChD,OAAOH,EAAU3zB,QAASoyB,OAAMJ,MAAKC,OAAMC,eAKnDxM,EAAEoE,OACEvE,EAAA,EAAUhd,EAAM,SAASX,GACrB,OAAOA,EAAEwqB,QAGjBtM,EAAEgE,QACE,EACAvE,EAAA,EAAOhd,EAAM,SAASX,GAClB,OAAiB,KAAVA,EAAEsqB,OAAgB,MAIjC,IA4CIjJ,EA5CEuM,EAAcjQ,EAAA,IAEnBkQ,MAAMlQ,EAAA,GACNG,EAAE,SAAS9d,GACR,OAAO8d,EAAE9d,EAAEwqB,QAEdtM,EAAE,SAASle,GACR,OAAOke,EAAEle,EAAEoqB,OAGT0D,EAAWnQ,EAAA,IAEhBoQ,QAAQ,SAAA/tB,GAAC,OAAKguB,MAAMhuB,EAAEqqB,QACtBwD,MAAMlQ,EAAA,GACNG,EAAE,SAAS9d,GACR,OAAO8d,EAAE9d,EAAEwqB,QAEdtM,EAAE,SAASle,GACR,OAAOke,EAAEle,EAAEqqB,QAGfrM,EACCtkB,OAAO,KACP8lB,KAAK,QAAS,UACdkB,KACG/C,EAAA,EACUO,GACTmD,MAAM,IACNU,UAAUtD,IAEd0D,UAAU,QACV3C,KAAK,SAAU,WAChBxB,EAAImE,UAAU,sBAAsB3C,KAAK,KAAM,GAG/CxB,EACCtkB,OAAO,QACP8lB,KAAK,YAAa,eAClBA,KAAK,IAAK,EAAIpC,KAAKrb,MAAMC,OAAOM,MAChCkd,KAAK,IAAK,EAAI8B,EAAS,GACvB9B,KAAK,KAAM,OACXnd,MAAM,cAAe,UACrBuc,KAAK,YAGN,IAAM4N,EAAWC,KAAKC,MAAM/rB,EAAKtD,QAAUsD,EAAKtD,OAAS,IACzDgkB,EAAQ1gB,EAAKsE,IAAI,SAAAjF,GAAC,OAAIA,EAAEwqB,OACpB7pB,EAAKtD,OAAS,KACdgkB,EAAQ1gB,EACPsE,IAAI,SAACjF,EAAG2H,GAAJ,OAAWA,EAAI6kB,GAAa,EAAIxsB,EAAEwqB,UAAOltB,IAC7CoJ,OAAO,SAAAc,GAAI,OAAIA,KAGpBwW,EACCtkB,OAAO,KACP8lB,KAAK,QAAS,UACdA,KAAK,YAAa,eAAiB8B,EAAS,KAC5CZ,KACG/C,EAAA,EACYG,GACX8D,WAAWP,GACXU,UAAUT,GACVQ,WAAWnE,EAAA,EAAc,aAE7BwE,UAAU,QACV3C,KAAK,SAAU,WAChBxB,EAAImE,UAAU,sBAAsB3C,KAAK,IAAK,IAG9CxB,EACCtkB,OAAO,QACP8lB,KACG,YACA,aACFf,EAAQ,EACR,MACC6C,EAASlE,KAAKrb,MAAMC,OAAOS,IAAM,IAClC,KAEDJ,MAAM,cAAe,UACrBuc,KAAK,QACN,IAAMqP,EAAWjQ,EAChBtkB,OAAO,QACP8lB,KAAK,QAAS,cACdnd,MAAM,SAAU,SAChBA,MAAM,eAAgB,OACtBA,MAAM,mBAAoB,QAC1BA,MAAM,UAAW,KAEZmgB,EAAkB,SAASxiB,GAC7BiiB,EAAQO,gBAAgBxiB,GAExBiuB,EAAStO,aAAatd,MAAM,UAAW,MAGrC6rB,EAAkB,WACpB,IAAIC,EAAa/Q,KAAKgR,GAAGC,QAAQ/yB,MACjC2yB,EAASzO,KAAK,IAAK,WACf,IAAIxf,EAAI,IAAMmuB,EAAa,IAAM7M,EAEjC,OADAthB,GAAK,IAAMmuB,EAAa,QAK1B1L,EAAiB,WAEnBR,EAAQQ,iBAERwL,EAAStO,aAAatd,MAAM,UAAW,IAI3C2b,EACCtkB,OAAO,QACPiH,MAAOA,IACP6e,KAAK,QAAS,QACdnd,MAAM,OAAQ,QACdA,MAAM,SAAU,kBAAMipB,EAAO,KAC7B9L,KAAK,eAAgB,GACrBA,KAAK,IAAKoO,GACVlN,KAAKf,GAGN3B,EACCtkB,OAAO,QACPiH,MAAOA,IACP6e,KAAK,QAAS,QACdnd,MAAM,OAAQ,QACdA,MAAM,SAAU,kBAAMipB,EAAO,KAC7B9L,KAAK,eAAgB,GACrBA,KAAK,IAAKsO,GACVpN,KAAKf,GACN3B,EACCmE,UAAU,OACVxhB,KAAKA,GACL0hB,QACA3oB,OAAO,UACP8lB,KAAK,IAAK,GACVnd,MAAM,SAAU,kBAAMipB,EAAO,KAC7BjpB,MAAM,OAAQ,kBAAMipB,EAAO,KAC3B9L,KAAK,KAAM,SAASxf,GACjB,OAAO8d,EAAE9d,EAAEwqB,QAEdhL,KAAK,KAAM,SAASxf,GACjB,OAAOke,EAAEle,EAAEoqB,OAGd9H,GAAG,YAAaE,GAChBF,GAAG,YAAa4L,GAChB5L,GAAG,WAAYG,GACfH,GAAG,QAASlF,KAAKgJ,uBAElBpI,EACCmE,UAAU,OACVxhB,KAAKA,GACL0hB,QACA3oB,OAAO,UACP8lB,KAAK,IAAK,GACVnd,MAAM,SAAU,kBAAMipB,EAAO,KAC7BjpB,MAAM,OAAQ,kBAAMipB,EAAO,KAC3B9L,KAAK,KAAM,SAASxf,GACjB,OAAO8d,EAAE9d,EAAEwqB,QAEdhL,KAAK,KAAM,SAASxf,GACjB,OAAOke,EAAEle,EAAEqqB,QAEd/H,GAAG,YAAaE,GAChBF,GAAG,YAAa4L,GAChB5L,GAAG,WAAYG,GACfH,GAAG,QAASlF,KAAKgJ,mEAIlBhJ,KAAKgQ,gBAELp3B,OAAO0sB,iBAAiB,SAAUtF,KAAK0D,mDAGxBiM,GACXA,EAAUpsB,OAASyc,KAAKrb,MAAMpB,MAC9Byc,KAAKgQ,+DAIU,IACXrM,EAAY3D,KAAKhiB,MAAjB2lB,QACRE,aAAaF,GACb/qB,OAAO2sB,oBAAoB,SAAUvF,KAAK0D,yCAI1C,OAAOxc,EAAArF,EAAAC,cAAA,OAAKvD,GAAIyhB,KAAKrb,MAAMpG,YA3TXuI,EAAA,WA+TxBgpB,EAAUrtB,WACNlE,GAAIyJ,EAAAnG,EAAU2D,OACdyqB,UAAWjoB,EAAAnG,EAAUoG,MACrB2jB,WAAY5jB,EAAAnG,EAAUoG,MACtBumB,MAAOxmB,EAAAnG,EAAUoG,MACjB1E,KAAMyE,EAAAnG,EAAUoG,MAChBrD,OAAQoD,EAAAnG,EAAUa,OAClB0C,UAAW4C,EAAAnG,EAAUqG,KACrBnD,SAAUiD,EAAAnG,EAAUqG,KACpBqX,QAASvX,EAAAnG,EAAUa,QAGR,IAAAwuB,EAAAh2B,OAAAwJ,EAAA,GAAgBxJ,OAAA20B,EAAA,EAAA30B,CAAW40B,+eCxU1C,IAAMqB,GAAej2B,OAAAwqB,GAAA,EAAAxqB,CAAOk2B,GAAA,aAAPl2B,CAAHyqB,MAIZ0L,GAAen2B,OAAAwqB,GAAA,EAAAxqB,CAAOo2B,GAAA,aAAPp2B,CAAH2sB,MAOZ0J,GAAcr2B,OAAAwqB,GAAA,EAAAxqB,CAAOi2B,GAAPj2B,CAAH6sB,MAMXyJ,GAAc,SAAA13B,GAAA,IAAG23B,EAAH33B,EAAG23B,QAASpuB,EAAZvJ,EAAYuJ,UAAZ,OAChB6D,EAAArF,EAAAC,cAAC4vB,GAAA,UACGpqB,aAAW,cACXrC,OACI0sB,UAAW,QACX1I,SAAU,OACV/E,OAAQ,QACR0N,WAAY,UAGhB1qB,EAAArF,EAAAC,cAACuvB,IAAaQ,kBAAgB,sBAC1B3qB,EAAArF,EAAAC,cAACqvB,GAAD,KACIjqB,EAAArF,EAAAC,cAAA,0BAEJoF,EAAArF,EAAAC,cAACyvB,GAAD,KACIrqB,EAAArF,EAAAC,cAAA,qBAGPuB,GACG6D,EAAArF,EAAAC,cAACwvB,GAAA,cACGO,kBAAgB,kBAChBz1B,IAAKiH,EACL4B,OAAS6sB,OAAQ,SAEjB5qB,EAAArF,EAAAC,cAACsvB,GAAA,aAAD,KACIlqB,EAAArF,EAAAC,cAACmqB,EAAA,EAAD,SAIV5oB,GAAaouB,EAAQxxB,QAAU,GAC7BiH,EAAArF,EAAAC,cAACwvB,GAAA,cACGO,kBAAgB,kBAChBz1B,IAAKiH,EACL4B,OAAS6sB,OAAQ,SAEjB5qB,EAAArF,EAAAC,cAACsvB,GAAA,aAAD,KACIlqB,EAAArF,EAAAC,cAACoqB,GAAA,EAAD,SAIV7oB,GACJouB,EACCnoB,OAAO,SAAA8V,GAAM,OAAoB,OAAhBA,EAAOtX,OACxBD,IAAI,SAAArN,EAA4Bu3B,GAA5B,IAAGjqB,EAAHtN,EAAGsN,KAAMkqB,EAATx3B,EAASw3B,gBAAT,OACD9qB,EAAArF,EAAAC,cAACuvB,IAAaQ,kBAAgB,qBAAqBz1B,IAAK21B,GACpD7qB,EAAArF,EAAAC,cAACqvB,GAAD,KACIjqB,EAAArF,EAAAC,cAAA,YAAO5G,OAAAouB,EAAA,EAAApuB,CAAQ4M,KAEnBZ,EAAArF,EAAAC,cAACyvB,GAAD,KAAcS,QAM5BR,GAAY/uB,WACRgvB,QAASzpB,EAAAnG,EAAUoG,MACnB5E,UAAW2E,EAAAnG,EAAUkK,MAGV,IAAAkmB,GAAA,+wCCnEf,IAAMC,GACFhrB,EAAArF,EAAAC,cAACqwB,GAAAtwB,GACGO,KAAK,KACLhG,IAAI,IACJ6I,OAASsB,MAAO,qBAAsB6rB,YAAa,SAGrDC,GACFnrB,EAAArF,EAAAC,cAAAoF,EAAArF,EAAAK,SAAA,KACIgF,EAAArF,EAAAC,cAACqwB,GAAAtwB,GACGO,KAAK,KACLhG,IAAI,IACJ6I,OAASsB,MAAO,iBAAkB6rB,YAAa,SAEnDlrB,EAAArF,EAAAC,cAAA,QAAMvD,GAAG,aAAT,MAGF+zB,GAAep3B,OAAAwqB,GAAA,EAAAxqB,CAAOk2B,GAAA,aAAPl2B,CAAHq3B,MAIZC,GAAet3B,OAAAwqB,GAAA,EAAAxqB,CAAOo2B,GAAA,aAAPp2B,CAAHu3B,MASZC,GAAcx3B,OAAAwqB,GAAA,EAAAxqB,CAAOo3B,GAAPp3B,CAAHy3B,MAKXC,GAAyB13B,OAAAwqB,GAAA,EAAAxqB,CAAOo2B,GAAA,aAAPp2B,CAAH+sB,MAItB4K,GAAsB33B,OAAAwqB,GAAA,EAAAxqB,CAAOs3B,GAAPt3B,CAAHitB,MAWnB2K,GAAsB53B,OAAAwqB,GAAA,EAAAxqB,CAAOo3B,GAAPp3B,CAAH63B,MAInBC,GAAgBtN,GAAA,EAAOa,IAAV0M,MAUbC,GAAqBh4B,OAAAwqB,GAAA,EAAAxqB,CAAOw3B,GAAPx3B,CAAHi4B,MAyClBC,GAAgB,SAAAt5B,GAOhB,IANFu5B,EAMEv5B,EANFu5B,WACAhsB,EAKEvN,EALFuN,OACAisB,EAIEx5B,EAJFw5B,YACAC,EAGEz5B,EAHFy5B,GACAC,EAEE15B,EAFF05B,QACAC,EACE35B,EADF25B,eACElJ,EAMErvB,OAAAsvB,EAAA,EAAAtvB,EAAS+vB,WANXR,EAAA1jB,IAAAwjB,EAAA,GAAAmJ,EAAAjJ,EAAA,GAGMlnB,KAAQ0nB,MAAO0I,OAHrB,IAAAD,OAKEE,EALFnJ,EAAA,GAAAG,EAcE1vB,OAAAsvB,EAAA,EAAAtvB,EAAS+vB,WAdXJ,EAAA9jB,IAAA6jB,EAAA,GAAAiJ,EAAA9sB,IAAA8jB,EAAA,GASMtnB,KACI0nB,MAVV,MAUmB6I,OAVnB,IAAAD,EAU2B,EAV3BA,EAaEE,EAbFlJ,EAAA,GAgBEtL,EAAUrkB,OAAA20B,EAAA,EAAA30B,GA2BR84B,EAA4B5J,OAC3BmJ,GACH7zB,aAAe2zB,GACfz4B,YACI,KACA,SACA,WACA,UACA,WACA,UACA,UACA,eACA,YAEJC,eAAe,EACfO,MAAO,EACPL,QAAS,cACTuE,iBAAkBi0B,EAAGj0B,iBACfi0B,EAAGj0B,iBACH,eACNC,UAAYi0B,KAGVS,GACFn5B,SAAU,WACV4E,aAAe2zB,GACfz4B,YACI,UACA,WACA,mBACA,eACA,cACY,QAAZ44B,EAAoB,oBAAsB,qBAE9Cj6B,OAAQg6B,EAAGh6B,OACX+F,iBAAkBi0B,EAAGj0B,iBACfi0B,EAAGj0B,iBACH,eACNC,UAAYi0B,IAUhB,OAPAt4B,OAAA4L,EAAA,UAAA5L,CAAU,WACFm4B,IACAU,EAAS74B,OAAAywB,EAAA,EAAAzwB,EAAkBlB,OAAQi6B,KACnCL,EAAe14B,OAAAywB,EAAA,EAAAzwB,EAAkBlB,OAAQg6B,QAE5CX,IAGDnsB,EAAArF,EAAAC,cAACoyB,GAAA,OACG5sB,aAAW,QACX+Z,MAAO,MACPyK,MAAOgI,EAAMhsB,KAAOgsB,EAAMhsB,KAAO,mBACjCT,OAAQA,EACR8sB,QAAS,WACLb,GAAY,GACZG,EAAe,OAEnBW,SACIltB,EAAArF,EAAAC,cAACwL,GAAA,QACGlR,IAAI,SACJ2F,QAAQ,YACRQ,QAAS,WACL+wB,GAAY,GACZG,EAAe,QALvB,WAYJvsB,EAAArF,EAAAC,cAAC4vB,GAAA,UAASpqB,aAAW,6BACjBJ,EAAArF,EAAAC,cAAC8wB,IAAuBf,kBAAgB,gCACpC3qB,EAAArF,EAAAC,cAACkxB,GAAD,KACI9rB,EAAArF,EAAAC,cAAA,OAAK+vB,kBAAgB,YACjB3qB,EAAArF,EAAAC,cAAA,KAAGmD,OAASmtB,YAAa,SAAzB,kBACC0B,EAAMO,YAAcP,EAAMO,YAAc,eAE7CntB,EAAArF,EAAAC,cAAA,OAAK+vB,kBAAgB,cACjB3qB,EAAArF,EAAAC,cAAA,KAAGmD,OAASmtB,YAAa,SAAzB,cACC0B,EAAMQ,QArIX,SAAAA,GAAO,OAC3B,IAAIvF,KAAe,IAAVuF,GAAgBC,cAAcC,OAAO,GAAI,GAoITC,CAAgBX,EAAMQ,SAAW,eAEtDptB,EAAArF,EAAAC,cAAA,OAAK+vB,kBAAgB,YACjB3qB,EAAArF,EAAAC,cAAA,KAAGmD,OAASmtB,YAAa,SAAzB,YACC0B,EAAMQ,QA3Id,SAACA,EAASI,GAAV,OACjB,IAAI3F,KAAuC,IAAlCM,KAAKsF,KAAKL,EAAUI,IAAoBH,cAAcC,OAAO,GAAI,GA2I5CI,CAAad,EAAMQ,QAASR,EAAMO,aAClC,eAEVntB,EAAArF,EAAAC,cAAA,OAAK+vB,kBAAgB,gBACjB3qB,EAAArF,EAAAC,cAAA,KAAGmD,OAASmtB,YAAa,SAAzB,gBACExB,MAAMkD,EAAMjF,kBAER,cArJR,SAACgG,EAAcH,GAAf,OACtBrF,KAAKsF,KAAME,EAAeH,EAAc,KAAO,IAmJjBI,CAAkBhB,EAAMjF,iBAAkBiF,EAAMO,cAGzDP,EAAMiB,mBACH7tB,EAAArF,EAAAC,cAAA,OAAK+vB,kBAAgB,oBACjB3qB,EAAArF,EAAAC,cAAA,KAAGmD,OAASmtB,YAAa,SAAzB,oBACC0B,EAAMiB,kBAxLX,SAAAxxB,GACxB,GAAKA,EAAL,CAIA,GAAIA,GAAQA,EAAK,GAAI,CACjB,IAAMyxB,EAAa3F,KAAKsF,KACnBpxB,EAAK,GAAGurB,aAAevrB,EAAK,GAAG0xB,mBAAsB,KAE1D,SAAAj6B,OAAUuI,EAAK,GAAG2xB,UAAlB,KAAAl6B,OAA+Bg6B,EAA/B,KAGJ,qBA6KkCG,CAAoBrB,EAAMiB,mBAC1B,eAGbjB,EAAMsB,mBACHluB,EAAArF,EAAAC,cAAA,OAAK+vB,kBAAgB,oBACjB3qB,EAAArF,EAAAC,cAAA,KAAGmD,OAASmtB,YAAa,SAAzB,oBACC0B,EAAMsB,kBAjLX,SAAA7xB,GACxB,GAAKA,EAAL,CAIA,GAAIA,GAAQA,EAAK,GAAI,CACjB,IAAMyxB,EAAa3F,KAAKsF,KACnBpxB,EAAK,GAAGurB,aAAevrB,EAAK,GAAG0xB,mBAAsB,KAE1D,SAAAj6B,OAAUuI,EAAK,GAAG8xB,cAAlB,KAAAr6B,OAAmCg6B,EAAnC,KAGJ,qBAsKkCM,CAAoBxB,EAAMsB,mBAC1B,iBAKtBluB,EAAArF,EAAAC,cAAC+wB,GAAD,KACI3rB,EAAArF,EAAAC,cAACgxB,IAAoB12B,IAAI,aACrB8K,EAAArF,EAAAC,cAACyzB,GAAA,OAAMxzB,QAAQ,WAAf,gBAFR,IAKImF,EAAArF,EAAAC,cAACoxB,GAAD,KACIhsB,EAAArF,EAAAC,cAACwL,GAAA,QACG+b,UAAU,IACV9mB,QAjJM,WAAM,IACxBM,EAAgBgd,EAAA,EAAhBhd,YACF4rB,GACF/uB,aAAe2zB,GACf95B,QACI,aACA,SACA,MACA,UACA,UACA,QACA,WACA,WAEJgG,UAAY,OACZD,iBAAkB,gBAGhBrE,EAASC,OAAAwkB,EAAA,UAAAxkB,CAAUuzB,GAAsB9O,YAAa,YAC5DJ,EAAQzU,MACJ8U,SAAU/c,EACV5H,YA6HgB8G,QAAQ,QAHZ,mBASRmF,EAAArF,EAAAC,cAAC+wB,IAAoBhB,kBAAgB,mBACjC3qB,EAAArF,EAAAC,cAACsvB,GAAA,cAAeh1B,IAAI,eAApB,WACA8K,EAAArF,EAAAC,cAACsvB,GAAA,cAAeh1B,IAAI,mBAApB,WACA8K,EAAArF,EAAAC,cAACsvB,GAAA,cAAeh1B,IAAI,sBAApB,cACA8K,EAAArF,EAAAC,cAACsvB,GAAA,cAAeh1B,IAAI,sBAApB,eAEHu3B,EAAY1zB,QAAU,GAAKiH,EAAArF,EAAAC,cAACmqB,EAAA,EAAD,MAC3B0H,EAAY1zB,OAAS,GAC5B0zB,EAAY9rB,IAAI,SAAC2tB,EAAKzD,GAAN,OACZ7qB,EAAArF,EAAAC,cAAC0wB,IACGvtB,OAASmf,QAAS,UAClBhoB,IAAG,eAAApB,OAAiB+2B,GACpBF,kBAAgB,eAEhB3qB,EAAArF,EAAAC,cAACsvB,GAAA,cAAeh1B,IAAI,YACA,eAAfo5B,EAAIj8B,OAA0B24B,GAAUG,GAD7C,IACoDmD,EAAIj3B,GAAGA,GAD3D,KACiE,IAC5Di3B,EAAIj3B,GAAG82B,eAEZnuB,EAAArF,EAAAC,cAACsvB,GAAA,cAAeh1B,IAAI,eACfo5B,EAAIC,cAETvuB,EAAArF,EAAAC,cAACsvB,GAAA,cAAeh1B,IAAI,cACflB,OAAAouB,EAAA,EAAApuB,CAAes6B,EAAIE,UAExBxuB,EAAArF,EAAAC,cAACsvB,GAAA,cAAeh1B,IAAI,cACflB,OAAAouB,EAAA,EAAApuB,CAAcs6B,EAAIlB,gBASzClB,GAAc3wB,WACV4wB,WAAYrrB,EAAAnG,EAAUukB,OACtBmN,GAAIvrB,EAAAnG,EAAUa,OACd8wB,QAASxrB,EAAAnG,EAAU2D,OACnBiuB,eAAgBzrB,EAAAnG,EAAUqG,KAC1Bb,OAAQW,EAAAnG,EAAUkK,KAClBunB,YAAatrB,EAAAnG,EAAUqG,MAGZ,IAAAytB,GAAA,+dC7Uf,IAAMC,GAAe16B,OAAAwqB,GAAA,EAAAxqB,CAAOk2B,GAAA,aAAPl2B,CAAH26B,MAIZC,GAAe56B,OAAAwqB,GAAA,EAAAxqB,CAAOo2B,GAAA,aAAPp2B,CAAH66B,MASZC,GAAc96B,OAAAwqB,GAAA,EAAAxqB,CAAO06B,GAAP16B,CAAH+6B,MAMXC,GAAgB,SAAAp8B,GAAkD,IAA/Cq8B,EAA+Cr8B,EAA/Cq8B,UAAW9yB,EAAoCvJ,EAApCuJ,UAAWkwB,EAAyBz5B,EAAzBy5B,GAAIzH,EAAqBhyB,EAArBgyB,MAAO0H,EAAc15B,EAAd05B,QAAc7vB,EAC9BzI,OAAA4L,EAAA,SAAA5L,CAAS,MADqB2I,EAAAkD,IAAApD,EAAA,GAC5D0vB,EAD4DxvB,EAAA,GAChDuyB,EADgDvyB,EAAA,GAAAiJ,EAE5B5R,OAAA4L,EAAA,SAAA5L,EAAS,GAFmB6R,EAAAhG,IAAA+F,EAAA,GAE5DupB,EAF4DtpB,EAAA,GAE/CupB,EAF+CvpB,EAAA,GAIpE,OACI7F,EAAArF,EAAAC,cAAAoF,EAAArF,EAAAK,SAAA,KACIgF,EAAArF,EAAAC,cAAC4vB,GAAA,UACGpqB,aAAW,gBACXrC,OACI0sB,UAAW,QACX1I,SAAU,OACV/E,OAAQ,QACR0N,WAAY,UAGhB1qB,EAAArF,EAAAC,cAACg0B,IAAajE,kBAAgB,wBAC1B3qB,EAAArF,EAAAC,cAAC8zB,GAAD,KACI1uB,EAAArF,EAAAC,cAAA,UAAKgqB,IAET5kB,EAAArF,EAAAC,cAACk0B,GAAD,KACI9uB,EAAArF,EAAAC,cAAA,qBAGPuB,GACG6D,EAAArF,EAAAC,cAACwvB,GAAA,cACGO,kBAAgB,oBAChBz1B,IAAKiH,EACL4B,OAAS6sB,OAAQ,SAEjB5qB,EAAArF,EAAAC,cAACsvB,GAAA,aAAD,KACIlqB,EAAArF,EAAAC,cAACmqB,EAAA,EAAD,SAIV5oB,GAAa8yB,EAAUl2B,QAAU,GAC/BiH,EAAArF,EAAAC,cAACwvB,GAAA,cACGO,kBAAgB,oBAChBz1B,IAAKiH,EACL4B,OAAS6sB,OAAQ,SAEjB5qB,EAAArF,EAAAC,cAACsvB,GAAA,aAAD,KACIlqB,EAAArF,EAAAC,cAACoqB,GAAA,EAAD,SAIV7oB,GACR8yB,EAAUtuB,IAAI,SAAArN,EAA4Bu3B,GAA5B,IAAGjqB,EAAHtN,EAAGsN,KAAMusB,EAAT75B,EAAS65B,YAAa91B,EAAtB/D,EAAsB+D,GAAtB,OACV2I,EAAArF,EAAAC,cAACg0B,IAAajE,kBAAgB,uBAAuBz1B,IAAK21B,GACtD7qB,EAAArF,EAAAC,cAAC8zB,GAAD,KACI1uB,EAAArF,EAAAC,cAAA,KACIS,QAAS,WACL+zB,GAAe,GACfF,EAAc73B,KAGjBuJ,IAGTZ,EAAArF,EAAAC,cAACk0B,GAAD,KAAc3B,OAIpBntB,EAAArF,EAAAC,cAAC6zB,IACGtuB,OAAQgvB,EACR/C,YAAagD,EACbjD,WAAYA,EACZE,GAAIA,EACJC,QAASA,EACTC,eAAgB2C,MAMhCF,GAAczzB,WACV0zB,UAAWnuB,EAAAnG,EAAUoG,MACrB5E,UAAW2E,EAAAnG,EAAUkK,KACrB5M,YAAa6I,EAAAnG,EAAUa,OACvBopB,MAAO9jB,EAAAnG,EAAU2D,QAGN,IAAA+wB,GAAA,uBC7ETC,IACF17B,SAAU,WACVM,MAAO,GACPmE,UAAY,OACZ1E,eAAe,EACftB,QAAU,aAAc,WAGtBk9B,IACF37B,SAAU,WACVM,MAAO,GACPmE,UAAY,eACZ1E,eAAe,EACftB,QAAU,aAAc,WAGtBm9B,IACF57B,SAAU,SACVC,QAAS,uBACTK,MAAO,IAiMIuH,EAAA,QA9LE,WAAM,IAAAgB,EAC2BzI,OAAA4L,EAAA,SAAA5L,CAAS,MADpC2I,EAAAkD,IAAApD,EAAA,GACX/B,EADWiC,EAAA,GACK8yB,EADL9yB,EAAA,GAAA0nB,EAQqBrwB,OAAA0C,EAAA,EAAA1C,CAAekvB,OAChDoB,EAAA,EAASvoB,gBADR9D,EARWosB,EAQXpsB,YAAaW,EARFyrB,EAQEzrB,eARFyqB,EAoBfrvB,OAAAsvB,EAAA,EAAAtvB,EAAS+vB,WApBMR,EAAA1jB,IAAAwjB,EAAA,GAAAqM,EAAAnM,EAAA,GAcXpnB,EAdWuzB,EAcXvzB,UACAC,EAfWszB,EAeXtzB,UACA3B,EAhBWi1B,EAgBXj1B,MAhBWk1B,EAAAD,EAiBXrzB,KAAQ0nB,MAAO6L,OAjBJ,IAAAD,OAmBfE,EAnBetM,EAAA,GAAAG,EA2Bf1vB,OAAAsvB,EAAA,EAAAtvB,EAAS+vB,WA3BMJ,EAAA9jB,IAAA6jB,EAAA,GAAAoM,EAAAnM,EAAA,GAwBXtnB,KAAQ0nB,MAAOkL,OAxBJ,IAAAa,OA0BfC,EA1BepM,EAAA,GAAAE,EAiCf7vB,OAAAsvB,EAAA,EAAAtvB,EAAS+vB,WAjCME,EAAApkB,IAAAgkB,EAAA,GAAAmM,EAAA/L,EAAA,GA8BX5nB,KAAQ0nB,MAAOkM,OA9BJ,IAAAD,OAgCfE,EAhCejM,EAAA,GAAAkM,EAuCfn8B,OAAAsvB,EAAA,EAAAtvB,EAAS+vB,WAvCMqM,EAAAvwB,IAAAswB,EAAA,GAAAE,EAAAD,EAAA,GAoCX/zB,KAAQ0nB,MAAOwG,OApCJ,IAAA8F,OAsCfC,EAtCeF,EAAA,GAAAG,EAwC0Bv8B,OAAAsvB,EAAA,EAAAtvB,IArCvB,SAAA6O,GAElB,OADyCA,EAAjC2tB,QAAiC3tB,EAAxBnP,WADY+R,IACY5C,GADZ,2BAHd4tB,EAAA5wB,IAAA0wB,EAAA,GAAAG,EAAAD,EAAA,GAwCVp0B,KAAMwG,QAxCI,IAAA6tB,OAwCW9M,GAxCX6M,EAAA,GA0CbE,IACFj9B,WAAY4wB,EAAA,EAAY5wB,YAGPk9B,GAAuB58B,OAAA0C,EAAA,EAAA1C,CACxC28B,IADI14B,YAKJM,GAMAN,EANAM,WACAD,GAKAL,EALAK,OACAE,GAIAP,EAJAO,YACAJ,GAGAH,EAHAG,iBACAX,GAEAQ,EAFAR,WACAC,GACAO,EADAP,SAGEm5B,GAAqB3N,KACvB3qB,cACAD,UACAE,eACAJ,oBACAX,cACAC,aACG43B,IAGDwB,GAAoB5N,KACtB3qB,cACAD,UACAE,eACAJ,oBACAX,cACAC,aACG63B,IAGDwB,GAAkB7N,KACpB3qB,cACAD,UACAE,eACAJ,oBACAX,cACAC,aACG83B,IA2BP,OAxBAx7B,OAAA4L,EAAA,UAAA5L,CAAU,WAAM,SAAAg9B,IAAA,OAAAA,EAAAC,IAAAC,EAAAv2B,EAAAw2B,KACZ,SAAAC,IAAA,OAAAF,EAAAv2B,EAAA02B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACU9/B,OAAOsL,SAASC,OAAOC,KAAKC,UADtC,cAAAm0B,EAAAE,KAAA,EAEUx9B,OAAAywB,EAAA,EAAAzwB,GAAmBoJ,MAAM,SAAA3C,GAC3Bg1B,GAAoB/0B,eAAgBD,MAH5C,OAKImpB,GAAW5vB,OAAAywB,EAAA,EAAAzwB,EAAsBlB,OAAQ89B,MAL7C,wBAAAU,EAAAG,SAAAL,OADYM,MAAA5Y,KAAAhgB,YAAA,WAAAk4B,EAAAU,MAAA5Y,KAAAhgB,WASZ64B,QAIJ39B,OAAA4L,EAAA,UAAA5L,CAAU,WAEF67B,EAAQ77B,OAAAywB,EAAA,EAAAzwB,EAAkBlB,OAAQmF,KAClC83B,EAAa/7B,OAAAywB,EAAA,EAAAzwB,EAAkBlB,OAAQ+9B,MACvCX,EAAal8B,OAAAywB,EAAA,EAAAzwB,EAAkBlB,OAAQg+B,MACvCR,EAAWt8B,OAAAywB,EAAA,EAAAzwB,EAAoBlB,OAAQi+B,QAI1C94B,IAGD+H,EAAArF,EAAAC,cAACoF,EAAArF,EAAMK,SAAP,KACIgF,EAAArF,EAAAC,cAAC+pB,EAAA,WAAD,KACI3kB,EAAArF,EAAAC,cAAC+pB,EAAA,iBAAgBC,MAAO,aACxB5kB,EAAArF,EAAAC,cAACoL,GAAA,GACGrG,WAAYkD,GACZmC,QAAS/M,EACTgN,WAAYrM,KAGnB8B,GACGsF,EAAArF,EAAAC,cAACiqB,EAAA,KAAD,KACI7kB,EAAArF,EAAAC,cAACkqB,EAAA,EAAepqB,IAGvBD,GACGuF,EAAArF,EAAAC,cAACiqB,EAAA,KAAD,KACI7kB,EAAArF,EAAAC,cAACuE,GAAA,GAAc3M,QAASiI,EAAMA,UAGpCC,IAAmBD,GACjBuF,EAAArF,EAAAC,cAAAoF,EAAArF,EAAAK,SAAA,KACIgF,EAAArF,EAAAC,cAACiqB,EAAA,KAAD,KACI7kB,EAAArF,EAAAC,cAACkM,EAAA,KAAD,KACI9G,EAAArF,EAAAC,cAACwM,EAAA,UAAD,KACIpH,EAAArF,EAAAC,cAAA,yBAEJoF,EAAArF,EAAAC,cAACyM,EAAA,SAAD,KACKlL,GAAa6D,EAAArF,EAAAC,cAACmqB,EAAA,EAAD,MACb9sB,EAAYM,WAAWQ,QAAU,GAAKqD,GACnC4D,EAAArF,EAAAC,cAAC8tB,GACGhrB,QAAUS,IAAK,GAAIF,MAAO,GAAIG,OAAQ,GAAIJ,KAAM,IAChD3G,GAAG,oBACHgF,KAAMuzB,EACNlL,WAAYzsB,EAAYO,YACxB8uB,MAAOrvB,EAAYK,SAG1BL,EAAYM,WAAWQ,OAAS,GAAKqD,GAClC4D,EAAArF,EAAAC,cAACovB,GACGtsB,QAAUS,IAAK,GAAIF,MAAO,GAAIG,OAAQ,GAAIJ,KAAM,IAChD3G,GAAG,qBACHgF,KAAMuzB,EACN7G,UAAW9wB,EAAYM,WACvBmsB,WAAYzsB,EAAYO,YACxB8uB,MAAOrvB,EAAYK,WAKnC0H,EAAArF,EAAAC,cAAA,OACIqnB,UAAU,WACVlkB,OAASunB,QAAS,OAAQsM,UAAW,SAErC5xB,EAAArF,EAAAC,cAACy0B,IACGhD,GAAIp0B,EACJg3B,UAAWgB,EACX9zB,UAAWA,EACXyoB,MAAO,gBACP0H,QAAS,gBAEbtsB,EAAArF,EAAAC,cAACy0B,IACGhD,GAAIp0B,EACJg3B,UAAWA,EACX9yB,UAAWA,EACXyoB,MAAO,gBACP0H,QAAS,QAEbtsB,EAAArF,EAAAC,cAACmwB,IAAYR,QAASA,EAASpuB,UAAWA,o2CC1OtE,IAAM01B,EAAYrT,EAAA,EAAOa,IAAVZ,IAKH,SAAAhhB,GAAK,OAAIA,EAAMuf,SAGrB8U,EAAetT,EAAA,EAAOa,IAAVsB,KAOZgC,EAAUnE,EAAA,EAAOa,IAAVwB,KAMPkR,EAAQvT,EAAA,EAAOa,IAAI2S,MAAM,SAAAv0B,GAAK,OAChC4B,MAAO5B,EAAM4B,OAAS,UADZmf,CAAHuC,IAKK,SAAAtjB,GAAK,OAAIA,EAAM4B,QAIzB0f,EAAQP,EAAA,EAAOyT,KAAVhR,KASLiR,EAAW1T,EAAA,EAAOyT,KAAVpG,KAKRsG,EAASn+B,OAAAwqB,EAAA,EAAAxqB,CAAOsT,EAAA,OAAPtT,CAAH+3B,KAQNqG,EAAS,SAAAx/B,GAKT,IAJFyJ,EAIEzJ,EAJFyJ,KACAkD,EAGE3M,EAHF2M,SACAyd,EAEEpqB,EAFFoqB,OACA3c,EACEzN,EADFyN,SAEMgyB,EAAe,SAACC,EAADh/B,GAAsC,IAAb0D,EAAa1D,EAAvB6H,OAAUnE,MAAeqJ,EAASob,WAAWzkB,KAEjF,OACIgJ,EAAArF,EAAAC,cAACi3B,GAAU7U,OAASA,GACd3gB,EAAKsE,IACH,SAAAvM,EAA6By2B,GAA7B,IAAGjqB,EAAHxM,EAAGwM,KAAM5J,EAAT5C,EAAS4C,MAAOK,EAAhBjD,EAAgBiD,GAAIk7B,EAApBn+B,EAAoBm+B,MAApB,OACIvyB,EAAArF,EAAAC,cAACk3B,GAAa58B,IAAM21B,GAChB7qB,EAAArF,EAAAC,cAAC+nB,EAAD,KACI3iB,EAAArF,EAAAC,cAACm3B,GAAM1yB,MAAQrI,IACfgJ,EAAArF,EAAAC,cAACmkB,EAAD,KAASne,IAEX2xB,GACEvyB,EAAArF,EAAAC,cAACs3B,EAAD,KAAYK,GAEdhzB,GACES,EAAArF,EAAAC,cAACu3B,GACG1qB,UAAYlI,EAASizB,KAAK,SAAAhyB,GAAS,OAAIA,IAAcnJ,IACrDoK,SAAW4wB,EACXjyB,aAAaQ,EACb5J,MAAQK,EACRnC,IAAM21B,SAStCuH,EAAO72B,WACHc,KAAMyE,EAAAnG,EAAUoG,MAChBxB,SAAUuB,EAAAnG,EAAUoG,MACpBV,SAAUS,EAAAnG,EAAUqG,KACpBgc,OAAQlc,EAAAnG,EAAU2D,QAGP,IAAAm0B,GAAA,kLC1Ff,IAAMC,GAAUlU,EAAA,EAAOa,IAAVsT,MAOPC,GAAa,SAAA3M,GACf,IAAM4M,EAAS5M,EAAKp0B,MAAM,KAC1B,SAAAiC,OAAU++B,EAAO,GAAjB,KAAA/+B,OAAuB++B,EAAO,KAG5BC,cACF,SAAAprB,EAAYjK,GAAO,IAAAob,EAAAC,KAAAC,IAAAD,KAAApR,GAAAsR,IAAAF,KAAA,kBA+DH,SAAApd,GACd,IAAIuqB,EACA8M,EACA5M,EACE3M,EACNH,EAAA,EAASI,MACTJ,EAAA,EACQR,EAAKa,KACZJ,OACAK,wBAAwBH,EACzB,GACMI,EACNP,EAAA,EAASQ,MACTR,EAAA,EACQR,EAAKa,KACZJ,OACAK,wBAAwBC,EACzB,GACA,GAAKle,EAAL,CAIIuqB,EAAOvqB,EAAEuqB,KACT8M,EAAUr3B,EAAEkF,KACZulB,EAAOzqB,EAAE1E,MACL0E,EAAEkF,KAAK7H,OAJO,KAKdg6B,EAAUr3B,EAAEkF,KAAKib,MAAM,EALT,IAKuB/nB,OAAO,QAIpD,IAAM+xB,EAAoB+M,GACpB3Y,EAAepB,EAAKqB,YAAYZ,OAAOK,wBAAwBQ,MAC/DC,EAAaf,EAAA,EACXR,EAAKa,IAAM,SAClBJ,OACAK,wBAAwBQ,MAEnBE,EADW,IAAOJ,EAAeG,EAAc,IACzBZ,EAAIY,EAAc,IAE9CvB,EAAKoN,KAAK3L,KAAK,GAAKuL,EAAkBI,IACtCpN,EAAKka,QAAQzY,KAAK,GAAKyY,GACvBla,EAAKsN,KAAK7L,KAAU6L,EAAO,SAC3BtN,EAAKuN,UAAYvN,EAAKsN,KAAK7M,OAAOkB,wBAElC,IAGIK,EAHEC,EAAejC,EAAKuN,UAAYvN,EAAKkC,SAAY,IAEjDC,EAAUF,EADE,GAIdD,EADAC,EAHc,GAIEjC,EAAKkC,SAAWC,EAEhBnC,EAAKkC,SAGzBlC,EAAKoC,YAAYC,KAAK,QAASL,GAC/BhC,EAAKqB,YAAYgB,KAAK,YAAa,aAAe1B,EAAI,IAAMI,EAAI,KAC5DS,GACAxB,EAAKsC,aAAaD,KAAK,YAAa,gCACpCrC,EAAKoC,YAAYC,KAAK,KAAML,EAAgB,IAC5ChC,EAAKsN,KAAKjL,KAAK,KAAMrC,EAAKuN,UAAY,GAAK,GAC3CvN,EAAKka,QAAQ7X,KAAK,KAAML,EAAgB,GACxChC,EAAKkO,UAAU7L,KAAK,KAAML,EAAgB,GAC1ChC,EAAKoN,KAAK/K,KAAK,KAAML,EAAgB,KAErChC,EAAKsC,aAAaD,KAAK,YAAa,+BACpCrC,EAAKoC,YAAYC,KAAK,IAAK,IAC3BrC,EAAKka,QAAQ7X,KAAK,IAAK,IACvBrC,EAAKkO,UAAU7L,KAAK,IAAK,IACzBrC,EAAKsN,KAAKjL,KAAK,IAAKL,EAAgB,GACpChC,EAAKoN,KAAK/K,KAAK,IAAK,KAGxBrC,EAAKqB,YAAYnc,MAAM,UAAW,GAClC8a,EAAKqB,YAAYkB,eAxIApC,IAAAF,KAAA,iBA2IJ,WACbD,EAAKqB,YACJmB,aACAC,MAAM,IACNvd,MAAM,UAAW,GACjBA,MAAM,iBAAkB,UA/IvB+a,KAAKY,IAAMjc,EAAMic,IACjBZ,KAAKyC,kDAILzC,KAAKqB,MAAQ,IACbrB,KAAKoB,YAAcb,EAAA,EAAUP,KAAKY,IAAM,SAAStkB,OAAO,KACxD0jB,KAAKoB,YAAYgB,KAAK,KAAM,0BAA4BpC,KAAKY,IAAImC,MAAM,IACvE/C,KAAKoB,YAAYgB,KAAK,WAAY,WAClCpC,KAAKoB,YAAYnc,MAAM,UAAW,GAClC+a,KAAKoB,YAAYnc,MAAM,iBAAkB,QACzC+a,KAAKoB,YAAYgB,KAAK,YAAa,uBACnCpC,KAAKiC,SAAW,IAChBjC,KAAKgD,mBAAqB,GAE1BhD,KAAKqC,aAAerC,KAAKoB,YACxB9kB,OAAO,QACP8lB,KAAK,YAAa,iCAClBA,KAAK,IAAK,GACVA,KAAK,IAAK,GACVA,KAAK,SAAU,IACfA,KAAK,QAAS,IACdA,KAAK,OAAQ,WACdpC,KAAKmC,YAAcnC,KAAKoB,YACvB9kB,OAAO,QACP8lB,KAAK,IAAK,IACVA,KAAK,KAAM,IACXA,KAAK,KAAM,GACXA,KAAK,SAAU,IACfA,KAAK,QAASpC,KAAKiC,UACnBG,KAAK,OAAQ,WACdpC,KAAKmN,KAAOnN,KAAKoB,YAChB9kB,OAAO,QACP8lB,KAAK,IAAK,IACVA,KAAK,IAAK,IACVA,KAAK,YAAa,IAClBA,KAAK,OAAQ,SACbZ,KAAK,QACNxB,KAAKqN,KAAOrN,KAAKoB,YAChB9kB,OAAO,QACP8lB,KAAK,OAAQ,SACbA,KAAK,YAAa,IAClBA,KAAK,IAAK,IACVA,KAAK,IAAK,IACVZ,KAAK,UACNxB,KAAKia,QAAUja,KAAKoB,YACnB9kB,OAAO,QACP8lB,KAAK,OAAQ,SACbA,KAAK,cAAe,KACpBA,KAAK,IAAK,IACVA,KAAK,KAAM,GACXA,KAAK,YAAa,IAClBZ,KAAK,OACNxB,KAAKiO,UAAYjO,KAAKoB,YACrB9kB,OAAO,QACP8lB,KAAK,OAAQ,SACbA,KAAK,IAAK,IACVA,KAAK,IAAK,IACVA,KAAK,YAAa,IAClBZ,KAAK,8BAwFR0Y,GAAkB,SAACv1B,GACrB,IAAMw1B,EAAWx1B,EAAMpB,KAAK,GAAG0nB,MACzBiD,EAASiM,EAAStyB,IAAI,SAAAuyB,GACxB,IAAMtyB,GAAmB,IAAZsyB,EAAI77B,GAAY,SAAW67B,EAAItyB,KAC5C,OACIA,OACA5J,MAAOyG,EAAM01B,UAAUvyB,GACvBvJ,GAAI67B,EAAI77B,MAPeoF,EAUSzI,OAAA4L,EAAA,SAAA5L,CACpCi/B,EAAStyB,IAAI,SAAA/N,GAAA,OAAAA,EAAGyE,KAAawkB,MAAM,EAAG,IAXXlf,EAAAkD,IAAApD,EAAA,GAUvB22B,EAVuBz2B,EAAA,GAUV02B,EAVU12B,EAAA,GAa3B8f,EAAU,KAERqF,EAAwB,SAAAxuB,GAAkB,IAAf2yB,EAAe3yB,EAAf2yB,KAAM5uB,EAAS/D,EAAT+D,GACnC,IAAY,IAARA,EAAJ,CAD4C,IAMpCsE,EAAgBgd,GAAA,EAAhBhd,YACFyrB,EAAgBwL,GAAW3M,GAC3BsB,GACFnvB,iBAAkB,SAClBX,WAAY2vB,EACZ1vB,SAAU0vB,EACV/0B,QACI,aACA,SACA,MACA,UACA,UACA,QACA,WACA,WAEJiG,QAAUjB,IAGRtD,EAASC,OAAAwkB,GAAA,UAAAxkB,CAAUuzB,GAAsB9O,YAAa,YAC5Dhb,EAAM4a,QAAQzU,MACV8U,SAAU/c,EACV5H,aAYFwnB,EAAO,WAETlC,EAAA,EAAa,IAAM5b,EAAMpG,GAAK,QAAQylB,SAFvB,IAGHuM,EAA+B5rB,EAArCpB,KAAuBi3B,EAAc71B,EAAd61B,UACvBj3B,EAAOgtB,EAAgB9lB,OAAO,SAACkkB,EAADrzB,GAAgC,IAAlB6xB,EAAkB7xB,EAAlB6xB,KACxCsN,EAD0Dn/B,EAAZ2vB,MACzB3hB,OAAO,SAAA5N,GAAA,IAAG6C,EAAH7C,EAAG6C,GAAH,OAAY+7B,EAAY/uB,SAAShN,KACnE,OAAOowB,EAAU3zB,QAASmyB,OAAMsN,sBAE9BpZ,EAAQ1c,EAAMI,WACdmf,EAASvf,EAAMS,YAEfs1B,EAAKna,EAAA,IAEV8D,OAAQ,EAAGhD,IACX+C,QAAQ,KAEHuW,EAAKpa,EAAA,IACLO,EAAIP,EAAA,IAAiB8D,OAAQH,EAAQ,IAErCkL,EAAWC,KAAKC,MAAM/rB,EAAKtD,QAAUu6B,EAAY,IACnDvW,EAAQ1gB,EAAKsE,IAAI,SAAAjF,GAAC,OAAIA,EAAEuqB,OACV,KAAdqN,IACAvW,EAAQ1gB,EACPsE,IAAI,SAACjF,EAAG2H,GAAJ,OAAWA,EAAI6kB,GAAa,EAAIxsB,EAAEuqB,UAAOjtB,IAC7CoJ,OAAO,SAAAc,GAAI,OAAIA,KAGpB,IAAMma,EAAQhE,EAAA,EACFma,GACXlW,WAAWP,GACXS,WAAWoV,IAENrV,EAAQlE,EAAA,EACJO,GACTmD,MAAM,GACNU,UAAUtD,EAAO,EAAG,GAEfT,EAAML,EAAA,EACJ,IAAM5b,EAAMpG,IACnBjC,OAAO,OACP8lB,KAAK,QAASf,EAAQ1c,EAAMC,OAAOM,KAAOP,EAAMC,OAAOO,OACvDid,KAAK,SAAU8B,EAASvf,EAAMC,OAAOU,OAASX,EAAMC,OAAOS,KAC3D/I,OAAO,KACP8lB,KACG,YACA,aACFzd,EAAMC,OAAOM,KACb,IACAP,EAAMC,OAAOS,IACb,KAGIu1B,EAAQr3B,EAAKsE,IAAI,SAAAjF,GAAC,OAAIA,EAAEuqB,OACxB0N,EAAmBt3B,EAAK,GAAGk3B,aAAa5yB,IAAI,SAAAjF,GAAC,OAAIA,EAAEkF,OACnD+c,EAAU,IAAImV,IAChBpZ,IAAK,IAAMjc,EAAMpG,KAErBm8B,EAAG5V,OAAO8V,GACVD,EAAG7V,OAAO+V,GAAkBxW,OAAQ,EAAGqW,EAAG1V,cAC1ClE,EAAEgE,QACE,EACAvE,EAAA,EAAOhd,EAAM,SAAA4pB,GAAI,OAAI5M,EAAA,EAAO4M,EAAKsN,aAAc,SAAA73B,GAAC,OAAc,KAAVA,EAAE1E,WAAkB,IAI5E0iB,EACCtkB,OAAO,KACP8lB,KAAK,QAAS,UACdkB,KAAKmB,GACLM,UAAU,QACV3C,KAAK,SAAU,WACf9lB,OAAO,QACP8lB,KAAK,YAAa,eAClBA,KAAK,IAAK,GACVA,KAAK,KAAM,SACXnd,MAAM,cAAe,OACrBA,MAAM,cAAe,QACrBuc,KAAK,SACNZ,EACCtkB,OAAO,QACP8lB,KAAK,YAAa,eAClBA,KAAK,IAAK,EAAIzd,EAAMC,OAAOM,MAC3Bkd,KAAK,IAAK,EAAI8B,EAAS,GACvB9B,KAAK,KAAM,OACXnd,MAAM,cAAe,UACrBuc,KAAK,oBAGNZ,EACCtkB,OAAO,KACP8lB,KAAK,QAAS,UACdA,KAAK,YAAa,eAAiB8B,EAAS,KAC5CZ,KAAKiB,GACLQ,UAAU,QACV3C,KAAK,SAAU,WAChBxB,EACCtkB,OAAO,QACP8lB,KACG,YACA,aAAef,EAAQ,EAAI,MAAQ6C,EAASvf,EAAMC,OAAOS,IAAM,IAAM,KAExEJ,MAAM,cAAe,UACrBuc,KAAK,QAEN,IAAIuB,EAAQnC,EAAImE,UAAU,UAAUxhB,KAAKA,GACzCwf,EAAM+X,OAAO9W,SAEb,IAAMiB,EAAQlC,EACbkC,QACA3oB,OAAO,KACP8lB,KAAK,QAAS,SACdA,KAAK,YAAa,SAAAxf,GAAC,MAAI,aAAe83B,EAAG93B,EAAEuqB,MAAQ,QAGhD4N,GAFJhY,EAAQA,EAAMiY,MAAM/V,IAEHF,UAAU,QAAQxhB,KAAK,SAASX,GAC7C,OAAOA,EAAE63B,eAEbM,EAAKD,OAAO9W,SAEZ,IAAMzd,EAAQ5B,EAAM01B,UACdY,EAAWF,EAChB9V,QACA3oB,OAAO,QACP8lB,KAAK,QAASuY,EAAG3V,aACjB5C,KAAK,IAAK,SAASxf,GAChB,OAAO+3B,EAAG/3B,EAAEkF,QAEf7C,MAAM,OAAQ,SAASrC,GACpB,OAAO2D,EAAM3D,EAAEkF,QAElBsa,KAAK,IAAK,SAASxf,GAChB,OAAOke,EAAEle,EAAE1E,SAEdkkB,KAAK,SAAU,SAASxf,GACrB,OAAOshB,EAASpD,EAAEle,EAAE1E,SAEvBgnB,GAAG,YAAa,SAAStiB,GACtB2d,EAAA,EAAUP,MAAM/a,MAAM,OAAQsb,EAAA,EAAOha,EAAM3D,EAAEkF,OAAOqd,OAAO,IAC3DN,EAAQO,oBAEXF,GAAG,YAAaL,EAAQO,iBACxBF,GAAG,WAAY,SAAStiB,GACrB2d,EAAA,EAAUP,MAAM/a,MAAM,OAAQsB,EAAM3D,EAAEkF,OACtC+c,EAAQQ,mBAEXH,GAAG,QAAS8D,GACb+R,EAAOA,EAAKC,MAAMC,IAOhBvX,EAAS,WACXG,aAAaF,GACbA,EAAUI,WAAW,WAAQtB,KAAW,MAe5C,OAZAvnB,OAAA4L,EAAA,UAAA5L,CAAU,WAIN,OAZAunB,IAUA7pB,OAAO0sB,iBAAiB,SAAU5B,GAE3B,WACHG,aAAaF,GACb/qB,OAAO2sB,oBAAoB,SAAU7B,SAI7CxoB,OAAA4L,EAAA,UAAA5L,CAAU,WAAQunB,MAAa9d,EAAMpB,KAAM+2B,IAGvCpzB,EAAArF,EAAAC,cAAC83B,GAAD,KACI1yB,EAAArF,EAAAC,cAAA,OAAKvD,GAAKoG,EAAMpG,KACd2vB,EAAOjuB,OAAS,GACdiH,EAAArF,EAAAC,cAAC63B,IACGp7B,GAAE,GAAAvD,OAAM2J,EAAMpG,GAAZ,WACFgF,KAAO2qB,EACPznB,SAAW6zB,EACX/yB,SA1LK,SAAAhJ,GACb+7B,EAAY/uB,SAAShN,GACrBg8B,EAAeD,EAAYhxB,OAAO,SAAAmE,GAAE,OAAIA,IAAOlP,KAE/Cg8B,KAAcv/B,OAAAwQ,IAAM8uB,IAAa/7B,MAuLzB2lB,OAAO,YAO3BgW,GAAgBz3B,WACZlE,GAAIyJ,EAAAnG,EAAU2D,OACd01B,aAAclzB,EAAAnG,EAAUkK,KACxBxI,KAAMyE,EAAAnG,EAAUoG,MAChB/J,MAAO8J,EAAAnG,EAAUoG,MACjBrD,OAAQoD,EAAAnG,EAAUa,OAClB0C,UAAW4C,EAAAnG,EAAUqG,KACrBnD,SAAUiD,EAAAnG,EAAUqG,KACpBsyB,UAAWxyB,EAAAnG,EAAUukB,OACrB7G,QAASvX,EAAAnG,EAAUa,OACnB23B,UAAWryB,EAAAnG,EAAUqG,MAGV,IAAAizB,GAAAjgC,OAAAwJ,EAAA,GAAgBw1B,yICja/B,IAAMkB,GAAU1V,EAAA,EAAOa,IAAV8U,MAMPC,cACF,SAAA1sB,EAAYjK,GAAO,IAAAob,EAAAC,KAAAC,IAAAD,KAAApR,GAAAsR,IAAAF,KAAA,kBAkEH,SAAApd,GAOd,IAAI24B,EACAC,EACAvB,GAPe,IAAfla,EAAK0b,QACL1b,EAAK0C,KAAK7f,GACVmd,EAAK0b,OAAQ,GAMjB,IAAM/a,EACNH,EAAA,EAASI,MACTJ,EAAA,EACQR,EAAKa,KACZJ,OACAK,wBAAwBH,EACzB,GACMI,EACNP,EAAA,EAASQ,MACTR,EAAA,EACQR,EAAKa,KACZJ,OACAK,wBAAwBC,EACzB,GACA,GAAKle,EAAL,CAIA,GAAIA,GAAKA,EAAEW,KAAM,CAEbg4B,EAAO34B,EAAEW,KAAKm4B,QACdF,EAAc54B,EAAEW,KAAKo4B,aACrB1B,EAAUr3B,EAAEW,KAAKuE,KACblF,EAAEW,KAAKuE,KAAK7H,OAJE,KAKdg6B,EAAUr3B,EAAEW,KAAKuE,KAAKib,MAAM,EAAG6Y,IAAe5gC,OAAO,QAI7D,IAAMmmB,EAAepB,EAAKqB,YAAYZ,OAAOK,wBAAwBQ,MAC/DC,EAAaf,EAAA,EACXR,EAAKa,IAAM,SAClBJ,OACAK,wBAAwBQ,MAEnBE,EADW,IAAOJ,EAAeG,EAAc,IACzBZ,EAAIY,EAAc,IAE9CvB,EAAK8b,gBAAgBra,KAAU+Z,EAAO,KAClCC,GAAezb,EAAK+b,mBACpB/b,EAAK+b,kBAAkBta,KAAK,IAAMga,EAAc,iBAGpDzb,EAAKka,QAAQzY,KAAK,IAAMyY,GACxBla,EAAKqB,YAAYgB,KAAK,YAAa,aAAe1B,EAAI,IAAMI,EAAI,KAC5DS,GACAxB,EAAKsC,aAAaD,KAAK,YAAa,kCACpCrC,EAAKgc,YAAY3Z,KAAK,KAAM,KAC5BrC,EAAKka,QAAQ7X,KAAK,KAAM,KACxBrC,EAAK8b,gBAAgBzZ,KAAK,KAAM,KAC5BrC,EAAKic,aACLjc,EAAK+b,kBAAkB1Z,KAAK,KAAM,OAGtCrC,EAAKsC,aAAaD,KAAK,YAAa,iCACpCrC,EAAKgc,YAAY3Z,KAAK,IAAK,IAC3BrC,EAAKka,QAAQ7X,KAAK,IAAK,IACvBrC,EAAK8b,gBAAgBzZ,KAAK,IAAK,IAC3BrC,EAAKic,aACLjc,EAAK+b,kBAAkB1Z,KAAK,IAAK,KAIzCrC,EAAKqB,YAAYnc,MAAM,UAAW,GAClC8a,EAAKqB,YAAYkB,eA1IApC,IAAAF,KAAA,iBA6IJ,WACbD,EAAKqB,YACJmB,aACAC,MAAM,IACNvd,MAAM,UAAW,GACjBA,MAAM,iBAAkB,UAjJvB+a,KAAKY,IAAMjc,EAAMic,IAEjBZ,KAAKyb,OAAQ,EAEbzb,KAAKgc,aAAc,2CAGlBp5B,GAEDod,KAAKgc,eAAcp5B,GAAKA,EAAEW,MAAQ,iBAAkBX,EAAEW,MACtD,IAAM04B,EAAiBjc,KAAKgc,YAAc,GAAK,GACzCE,EAAgBlc,KAAKgc,YAAc,IAAM,IAE/Chc,KAAKoB,YAAcb,EAAA,EAAUP,KAAKY,IAAM,SAAStkB,OAAO,KACxD0jB,KAAKoB,YAAYgB,KAAK,KAAM,0BAA4BpC,KAAKY,IAAImC,MAAM,IACvE/C,KAAKoB,YAAYgB,KAAK,WAAY,WAClCpC,KAAKoB,YAAYnc,MAAM,UAAW,GAClC+a,KAAKoB,YAAYnc,MAAM,iBAAkB,QACzC+a,KAAKoB,YAAYgB,KAAK,YAAa,uBAEnCpC,KAAKqC,aAAerC,KAAKoB,YACxB9kB,OAAO,QACP8lB,KAAK,YAAa,iCAClBA,KAAK,IAAK,GACVA,KAAK,IAAK,GACVA,KAAK,SAAU,IACfA,KAAK,QAAS,IACdA,KAAK,OAAQ,WACdpC,KAAK+b,YAAc/b,KAAKoB,YACvB9kB,OAAO,QACP8lB,KAAK,IAAK,IACVA,KAAK,KAAM,IACXA,KAAK,KAAM,GACXA,KAAK,SAAU6Z,GACf7Z,KAAK,QAAS8Z,GACd9Z,KAAK,OAAQ,WACdpC,KAAKia,QAAUja,KAAKoB,YACnB9kB,OAAO,QACP8lB,KAAK,OAAQ,SACbA,KAAK,YAAa,IAClBA,KAAK,cAAe,KACpBA,KAAK,IAAK,IACVA,KAAK,IAAK,GACVZ,KAAK,gBACNxB,KAAK6b,gBAAkB7b,KAAKoB,YAC3B9kB,OAAO,QACP8lB,KAAK,OAAQ,SACbA,KAAK,YAAa,IAClBA,KAAK,cAAe,KACpBA,KAAK,IAAK,IACVA,KAAK,IAAK,IACVZ,KAAK,KACNxB,KAAK8b,kBAAoB,KACrB9b,KAAKgc,cACLhc,KAAK8b,kBAAoB9b,KAAKoB,YAC7B9kB,OAAO,QACP8lB,KAAK,OAAQ,SACbA,KAAK,YAAa,IAClBA,KAAK,cAAe,KACpBA,KAAK,IAAK,IACVA,KAAK,IAAK,IACVZ,KAAK,cAwFZ2a,GAAW,SAAAriC,GAOX,IANFyJ,EAMEzJ,EANFyJ,KACAhF,EAKEzE,EALFyE,GACWgI,EAITzM,EAJFugC,UACAz1B,EAGE9K,EAHF8K,OACAG,EAEEjL,EAFFiL,SACAK,EACEtL,EADFsL,UAEM8oB,EAAS3qB,EAAKsE,IAAI,SAAAuyB,GACpB,IAAMtyB,GAAmB,IAAZsyB,EAAI77B,GAAY,SAAW67B,EAAItyB,KAC5C,OACIvJ,GAAI67B,EAAI77B,GACRuJ,OACA5J,MAAOqI,EAAMuB,GACb2xB,MAAOpK,KAAKC,MAAM8K,EAAIX,UAE3B2C,KAAK,SAACv6B,EAAGw6B,GAAJ,OAAWx6B,EAAE43B,MAAQ4C,EAAE5C,MAAS,EAAM4C,EAAE5C,MAAQ53B,EAAE43B,OAAU,EAAI,IATtE91B,EAWsCzI,OAAA4L,EAAA,SAAA5L,CACpCqI,EAAKsE,IAAI,SAAArN,GAAA,OAAAA,EAAG+D,KAAawkB,MAAM,EAAG,IAZpClf,EAAAkD,IAAApD,EAAA,GAWM22B,EAXNz2B,EAAA,GAWmB02B,EAXnB12B,EAAA,GAcE8f,EAAU,KAURlB,EAAO,WACTlC,EAAA,EAAa,IAAMhiB,EAAK,QAAQylB,SAChC,IAAM3C,EAAQtc,IACRmf,EAAS9e,IACTwb,EAAML,EAAA,EACJ,IAAMhiB,GACbjC,OAAO,OACP8lB,KAAK,QAASf,EAAQzc,EAAOM,KAAON,EAAOO,OAC3Cid,KAAK,SAAU8B,EAAStf,EAAOU,QAC/BhJ,OAAO,KAERskB,EAAItkB,OAAO,KAAK8lB,KAAK,QAAS,UAC9BxB,EAAItkB,OAAO,KAAK8lB,KAAK,QAAS,UAC9BxB,EAAItkB,OAAO,KAAK8lB,KAAK,QAAS,SAC9B,IAAMka,EAASjN,KAAKkN,IAAIlb,EAAO6C,GAAU,EACnCsY,EAAej5B,EAAK+F,OAAO,SAAAhO,GAAA,IAAGiD,EAAHjD,EAAGiD,GAAH,OAAY+7B,EAAY/uB,SAAShN,KAC5D2nB,EAAQhrB,OAAAouB,GAAA,EAAApuB,CAASshC,GACvBA,EAAargC,QAAQ,SAASyG,GAC1BA,EAAE62B,OAAS72B,EAAE62B,MACb72B,EAAE84B,SAAWrM,KAAKC,MAAO1sB,EAAE62B,MAAQvT,EAAS,OAEhD,IAAMuW,EAAe,IAAInB,IACrB1a,IAAK,IAAMriB,IAETm+B,EAAMnc,EAAA,IAEX6b,KAAK,MACLl+B,MAAM,SAAA0E,GAAC,OAAIA,EAAE62B,QACRkD,EAAMpc,EAAA,IAEXqc,YAAYN,EAAS,IACrBO,YAAY,GAEbjc,EAAIwB,KACA,YACA,cACHf,EAAQzc,EAAOM,KAAON,EAAOO,OAAS,EACvC,KACC+e,EAAStf,EAAOS,IAAMT,EAAOU,QAAU,EACxC,KAGAsb,EACCmE,UAAU,QACVxhB,KAAKm5B,EAAIF,IACTvX,QACA3oB,OAAO,QACP8lB,KAAK,IAAKua,GACVva,KAAK,OAAQ,SAAAxf,GAAC,OAAI2D,EAAM3D,EAAEW,KAAKuE,QAEhC8Y,EACCmE,UAAU,QACVG,GAAG,YAAa,SAAStiB,GACtB2d,EAAA,EAAUP,MAAM/a,MAAM,OAAQsb,EAAA,EAAOha,EAAM3D,EAAEW,KAAKuE,OAAOqd,OAAO,IAChEsX,EAAarX,gBAAgBxiB,KAEhCsiB,GAAG,WAAY,SAAStiB,GACrB2d,EAAA,EAAUP,MAAM/a,MAAM,OAAQsB,EAAM3D,EAAEW,KAAKuE,OAC3C20B,EAAapX,mBAEhBH,GAAG,YAAauX,EAAarX,iBAE9BxE,EAAItkB,OAAO,KAAKwgC,QAAQ,UAAU,GAClClc,EAAItkB,OAAO,KAAKwgC,QAAQ,SAAS,IAO/BpZ,EAAS,WACXG,aAAaF,GACbA,EAAUI,WAAW,WAAQtB,KAAW,MAe5C,OAZAvnB,OAAA4L,EAAA,UAAA5L,CAAU,WAIN,OAZAunB,IAUA7pB,OAAO0sB,iBAAiB,SAAU5B,GAE3B,WACHG,aAAaF,GACb/qB,OAAO2sB,oBAAoB,kBAAe7B,cAIlDxoB,OAAA4L,EAAA,UAAA5L,CAAU,WAAQunB,MAAalf,EAAM+2B,IAGjCpzB,EAAArF,EAAAC,cAACs5B,GAAD,KACIl0B,EAAArF,EAAAC,cAAA,OAAKvD,GAAKA,IACR2vB,EAAOjuB,OAAS,GACdiH,EAAArF,EAAAC,cAAC63B,IACGp7B,GAAE,GAAAvD,OAAMuD,EAAN,WACFgF,KAAO2qB,EACPznB,SAAW6zB,EACX/yB,SAvGK,SAAAhJ,GACb+7B,EAAY/uB,SAAShN,GACrBg8B,EAAeD,EAAYhxB,OAAO,SAAAmE,GAAE,OAAIA,IAAOlP,KAE/Cg8B,KAAcv/B,OAAAwQ,IAAM8uB,IAAa/7B,MAoGzB2lB,OAAO,YAO3BiY,GAAS15B,WACLlE,GAAIyJ,EAAAnG,EAAU2D,OACdjC,KAAMyE,EAAAnG,EAAUoG,MAChBrD,OAAQoD,EAAAnG,EAAUa,OAClB0C,UAAW4C,EAAAnG,EAAUqG,KACrBnD,SAAUiD,EAAAnG,EAAUqG,KACpBsyB,UAAWxyB,EAAAnG,EAAUukB,OACrBiU,UAAWryB,EAAAnG,EAAUqG,MAGV,IAAA60B,GAAA7hC,OAAAwJ,EAAA,GAAgBy3B,+tBC5Q/B,IAAMa,GAAY9hC,OAAAwqB,EAAA,EAAAxqB,CAAOoT,EAAA,UAAPpT,CAAH+hC,MAgBTC,GAAgBxX,EAAA,EAAOa,IAAV4W,MAebC,GAAUliC,OAAAwqB,EAAA,EAAAxqB,CAAO8S,EAAA,KAAP9S,CAAHmiC,MAIPhD,GAAYn/B,OAAAqlB,EAAA,EAAArlB,EC3Ed,OACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YDiEEoiC,GAAgB,SAAAvzB,GAAW,IACrBwzB,EAAgCxzB,EAAhCwzB,KAAuBC,GAASzzB,EAA1B0zB,aADe9wB,IACW5C,GADX,yBAE7B,OAAAqgB,OAAYoT,GAAMziC,QAASwiC,EAAKxiC,WAG9B2iC,GAAkB,SAAA5jC,GAAA,IAAA6jC,EAAA7jC,EAAG8gC,MAAH,gBAAA+C,QACf91B,IAAI,SAAArN,GAAA,IAAG2yB,EAAH3yB,EAAG2yB,KAAMlC,EAATzwB,EAASywB,MAAT,OACLkC,OACAlC,MAAOA,EAAMpjB,IAAI,SAAAvM,GAAA,IAAGiD,EAAHjD,EAAGiD,GAAI81B,EAAP/4B,EAAO+4B,YAAavsB,EAApBxM,EAAoBwM,KAApB,OACbvJ,KACA4uB,OACAjvB,MAAOm2B,EACPvsB,MAAc,IAARvJ,EAAY,SAAWuJ,GAAQ,yBAI3C81B,GAAiB,SAAAC,GAAQ,OAAI,SAAAniC,GAAA,IAAAoiC,EAAApiC,EAAGuvB,MAAH,gBAAA6S,QACzBj2B,IAAI,SAAA9L,GAAA,IAAGwC,EAAHxC,EAAGwC,GAAgBk7B,EAAnB19B,EAAQ8hC,GAAkB/1B,EAA1B/L,EAA0B+L,KAA1B,OACNvJ,KACAk7B,QACA3xB,MAAc,IAARvJ,EAAY,SAAWuJ,GAAQ,uBAGvCi2B,GAAyB,SAAAvhC,GAAiB,IAAd+iB,EAAc/iB,EAAd+iB,QAAcgL,EACRrvB,OAAAsvB,EAAA,EAAAtvB,CAAO,MADCuvB,EAAA1jB,IAAAwjB,EAAA,GACpCG,EADoCD,EAAA,GACzBE,EADyBF,EAAA,GAAAG,EAElB1vB,OAAAsvB,EAAA,EAAAtvB,IAAWwiC,IAFO7S,EAAA9jB,IAAA6jB,EAAA,GAEpCoT,EAFoCnT,EAAA,GAE9BoT,EAF8BpT,EAAA,GAAAE,EAGlB7vB,OAAAsvB,EAAA,EAAAtvB,IAAW0iC,GAAe,eAHRzS,EAAApkB,IAAAgkB,EAAA,GAGpCsC,EAHoClC,EAAA,GAG9B+S,EAH8B/S,EAAA,GAAAkM,EAIhBn8B,OAAAsvB,EAAA,EAAAtvB,IAAW0iC,GAAe,oBAJVtG,EAAAvwB,IAAAswB,EAAA,GAIpC8G,EAJoC7G,EAAA,GAI7B8G,EAJ6B9G,EAAA,GAAAG,EAKZv8B,OAAAsvB,EAAA,EAAAtvB,IAAWoiC,IALC3F,EAAA5wB,IAAA0wB,EAAA,GAKpC1tB,EALoC4tB,EAAA,GAK3B7M,EAL2B6M,EAAA,GAAApM,EAMJrwB,OAAA0C,EAAA,EAAA1C,CACpCswB,GAAA,EAAUvoB,eADN9D,EANoCosB,EAMpCpsB,YAAaW,EANuByrB,EAMvBzrB,eAmBrB,OAfA5E,OAAA4L,EAAA,UAAA5L,CAAU,WACNgJ,SAASC,OAAOk6B,aACZ9/B,GAAI,0BACJ+/B,cAAc,IAElB3T,EAAazvB,OAAAywB,EAAA,EAAAzwB,IACb4vB,EAAW5vB,OAAAywB,EAAA,EAAAzwB,EAAiBlB,OAAQmF,UAGxCjE,OAAA4L,EAAA,UAAA5L,CAAU,WACN+iC,EAAQ/iC,OAAAywB,EAAA,EAAAzwB,EAAuBlB,OAAQmF,KACvC++B,EAAQhjC,OAAAywB,EAAA,EAAAzwB,EAAmBlB,OAAQmF,KACnCi/B,EAASljC,OAAAywB,EAAA,EAAAzwB,EAAqBlB,OAAQmF,OACrCA,IAGD+H,EAAArF,EAAAC,cAACoF,EAAArF,EAAMK,SAAP,KACIgF,EAAArF,EAAAC,cAAC+pB,EAAA,WAAD,KACI3kB,EAAArF,EAAAC,cAAC+pB,EAAA,iBAAgBC,MAAO,6BAE3BpB,EAAU/oB,OACPuF,EAAArF,EAAAC,cAACiqB,EAAA,KAAD,KACI7kB,EAAArF,EAAAC,cAACkqB,EAAA,GAAWpqB,eAAgB8oB,EAAU/oB,SAG7C+oB,EAAUpnB,WACP4D,EAAArF,EAAAC,cAACoF,EAAArF,EAAMK,SAAP,KACIgF,EAAArF,EAAAC,cAACiqB,EAAA,MAAK9mB,OAAS+gB,cAAe,MAC1B9e,EAAArF,EAAAC,cAACkM,EAAA,KAAD,KACI9G,EAAArF,EAAAC,cAACyM,EAAA,SAAD,KACIrH,EAAArF,EAAAC,cAACoL,GAAA,GACGrG,WAAYkD,EAAQxG,KACpB2I,QAAS/M,EACTgN,WAAYrM,OAK5BoH,EAAArF,EAAAC,cAACiqB,EAAA,KAAD,KACI7kB,EAAArF,EAAAC,cAACs7B,GAAD,KACIl2B,EAAArF,EAAAC,cAACk7B,GAAD,KACI91B,EAAArF,EAAAC,cAAA,kCAEJoF,EAAArF,EAAAC,cAACyM,EAAA,SAAD,KACKyvB,EAAK36B,WAAa6D,EAAArF,EAAAC,cAACmqB,EAAA,EAAD,MAClB+R,EAAKr8B,OAASuF,EAAArF,EAAAC,cAACuE,EAAA,GAAc3M,QAASskC,EAAKr8B,MAAMA,QACjDq8B,EAAK16B,WAAa06B,EAAKz6B,KAAKtD,QAAU,GAAKiH,EAAArF,EAAAC,cAACoqB,EAAA,EAAD,MAC3C8R,EAAK16B,WAAa06B,EAAKz6B,KAAKtD,OAAS,GAClCiH,EAAArF,EAAAC,cAACq5B,IACGv2B,QAAUS,IAAK,GAAIF,MAAO,GAAIG,OAAQ,GAAIJ,KAAM,IAChD3G,GAAG,4BACHgF,KAAMy6B,EAAKz6B,KACXgc,QAASA,EACTib,UAAWwD,EAAKz6B,KAAKtD,OACrBo6B,UAAWA,OAK3BnzB,EAAArF,EAAAC,cAACo7B,GAAD,KACIh2B,EAAArF,EAAAC,cAACkM,EAAA,KAAD,KACI9G,EAAArF,EAAAC,cAACyM,EAAA,UAAStJ,OAASmf,QAAS,IACxBld,EAAArF,EAAAC,cAACk7B,IAAU/3B,OAASmf,QAAS,IACzBld,EAAArF,EAAAC,cAAA,MAAImD,OAASs5B,WAAY,SAAzB,6BAIHlR,EAAKhqB,WAAa6D,EAAArF,EAAAC,cAACmqB,EAAA,EAAD,MAClBoB,EAAK1rB,OAASuF,EAAArF,EAAAC,cAACuE,EAAA,GAAc3M,QAAS2zB,EAAK1rB,MAAMA,QACjD0rB,EAAK/pB,WAAa+pB,EAAK9pB,KAAKtD,QAAU,GAAKiH,EAAArF,EAAAC,cAACoqB,EAAA,EAAD,MAC3CmB,EAAK/pB,WAAa+pB,EAAK9pB,KAAKtD,OAAS,GAClCiH,EAAArF,EAAAC,cAACi7B,IACGn4B,QAAUS,IAAK,GAAIF,MAAO,GAAIG,OAAQ,EAAGJ,KAAM,IAC/C3G,GAAG,wBACHgF,KAAM8pB,EAAK9pB,KACXi3B,UAAWnN,EAAK9pB,KAAKtD,OACrBo6B,UAAWA,OAK3BnzB,EAAArF,EAAAC,cAACkM,EAAA,KAAD,KACI9G,EAAArF,EAAAC,cAACyM,EAAA,UAAStJ,OAASmf,QAAS,IACxBld,EAAArF,EAAAC,cAACk7B,IAAU/3B,OAASmf,QAAS,IACzBld,EAAArF,EAAAC,cAAA,MAAImD,OAASs5B,WAAY,SAAzB,kCAIHJ,EAAM96B,WAAa6D,EAAArF,EAAAC,cAACmqB,EAAA,EAAD,MACnBkS,EAAMx8B,OAASuF,EAAArF,EAAAC,cAACuE,EAAA,GAAc3M,QAASykC,EAAMx8B,MAAMA,QACnDw8B,EAAM76B,WAAa66B,EAAM56B,KAAKtD,QAAU,GAAKiH,EAAArF,EAAAC,cAACoqB,EAAA,EAAD,MAC7CiS,EAAM76B,WAAa66B,EAAM56B,KAAKtD,OAAS,GACpCiH,EAAArF,EAAAC,cAACi7B,IACGn4B,QAAUS,IAAK,GAAIF,MAAO,GAAIG,OAAQ,EAAGJ,KAAM,IAC/C3G,GAAG,wBACHgF,KAAM46B,EAAM56B,KACZi3B,UAAW2D,EAAM56B,KAAKtD,OACtBo6B,UAAWA,YAavD0D,GAAuBt7B,WACnB8c,QAASvX,EAAAnG,EAAUa,QAGRC,EAAA,iPExMA67B,EAfG,WACd,OACIt3B,EAAArF,EAAAC,cAAC28B,EAAA,YAAW18B,QAAS08B,EAAA,kBAAkBz8B,MACnCkF,EAAArF,EAAAC,cAAC48B,EAAA,gBAAez8B,KAAM08B,EAAA98B,IACtBqF,EAAArF,EAAAC,cAACmkB,EAAA,OAAM7jB,KAAK,KAAKD,aAAa,MAA9B,oBAGA+E,EAAArF,EAAAC,cAAC88B,EAAA,eAAD,uaCNNC,GAAY,SAAA/kC,GAAgB,IAAbP,EAAaO,EAAbP,OAsCjB,OACI2N,EAAArF,EAAAC,cAACyzB,EAAA,OAAMxzB,QAAQ,UAAUwE,MApCZ,WACb,OAAQhN,GACJ,IAAK,aACD,MAAO,QACX,IAAK,SACL,IAAK,QACD,MAAO,MACX,IAAK,UACL,IAAK,UACD,MAAO,OACX,IAAK,WACD,MAAO,SAEX,QACI,MAAO,QAsBiBulC,GAAY78B,KAlBhC,WACZ,OAAQ1I,GACJ,IAAK,aACD,OAAO2N,EAAArF,EAAAC,cAACi9B,EAAAl9B,EAAD,MACX,IAAK,SACL,IAAK,QACD,OAAOqF,EAAArF,EAAAC,cAACk9B,GAAAn9B,EAAD,MACX,IAAK,UACD,OAAOqF,EAAArF,EAAAC,cAACm9B,GAAAp9B,EAAD,MACX,IAAK,WACD,OAAOqF,EAAArF,EAAAC,cAACo9B,GAAAr9B,EAAD,MAEX,QACI,OAAOqF,EAAArF,EAAAC,cAACq9B,GAAAt9B,EAAD,OAKmCu9B,IAtClC,SAAAC,GAAG,OAAIA,EAAIC,OAAO,GAAGC,cAAgBF,EAAItc,MAAM,GAuC1Dyc,CAAYjmC,KAKzBslC,GAAUp8B,WACNlJ,OAAQyO,EAAAnG,EAAU49B,OACd,aACA,SACA,QACA,UACA,MACA,UACA,UACA,cAIO,IAAAC,GAAA,onBChDf,IAAMC,IAAiB,UAAW,SAAU,UAAW,eAAgB,QAEjEC,GAAmB1kC,OAAAwqB,EAAA,EAAAxqB,CAAO2kC,EAAAh+B,EAAP3G,CAAHyqB,MAKhBma,GAAe5kC,OAAAwqB,EAAA,EAAAxqB,CAAOk2B,EAAA,aAAPl2B,CAAH2sB,MAOZkY,GAAqB7kC,OAAAwqB,EAAA,EAAAxqB,CAAO4kC,GAAP5kC,CAAH6sB,MAOlBiY,GAAoB9kC,OAAAwqB,EAAA,EAAAxqB,CAAO+kC,EAAA,kBAAP/kC,CAAH+sB,MAIjBiY,GAAiBhlC,OAAAwqB,EAAA,EAAAxqB,CAAOilC,EAAA,eAAPjlC,CAAHitB,MAqBdiY,GAAe,SAACnV,EAAOoV,EAAWC,EAAgBC,GAAgB,IAAA58B,EAC9BzI,OAAA4L,EAAA,SAAA5L,KAD8B2I,EAAAkD,IAAApD,EAAA,GAC5DqD,EAD4DnD,EAAA,GAChDoD,EADgDpD,EAAA,GAGpE,OACIqD,EAAArF,EAAAC,cAAAoF,EAAArF,EAAAK,SAAA,KACK+oB,EAAMpjB,IAAI,SAACuC,EAAMqvB,GAcd,OACIvyB,EAAArF,EAAAC,cAACwvB,EAAA,cACGl1B,IAAKgO,EAAK7L,GAAGA,GACbszB,kBAAiByO,EACjBt5B,WAAYA,EAAWuE,SAAX,GAAAvQ,OAAuBoP,EAAK7L,GAAGA,GAA/B,aAEZ2I,EAAArF,EAAAC,cAAC0+B,EAAA,iBAAgBpkC,IAAKgO,EAAK7L,GAAGA,IAC1B2I,EAAArF,EAAAC,cAACo+B,IACG3hC,GAAE,GAAAvD,OAAKoP,EAAK7L,GAAGA,GAAb,WACFkiC,gBAAA,GAAAzlC,OAAkBoP,EAAK7L,GAAGA,GAA1B,WACAgE,QAAS,kBAvBV,SAAAhE,GACX,IAAMsL,EAAW7C,EACX05B,EAAM72B,EAAS82B,QAAQpiC,GACvBqiC,EACdF,GAAO,KAAP1lC,OAAAwQ,IAEW3B,EAASkZ,MAAM,EAAG2d,IAF7Bl1B,IAGW3B,EAASkZ,MAAM2d,EAAM,EAAG72B,EAAS5J,aAH5CjF,OAAAwQ,IAKW3B,IAAUtL,IACb0I,EAAc25B,GAaaC,CAAM,GAAA7lC,OAAIoP,EAAK7L,GAAGA,GAAZ,aACrByI,WAAYA,EAAWuE,SAAX,GAAAvQ,OAAuBoP,EAAK7L,GAAGA,GAA/B,cAEhB2I,EAAArF,EAAAC,cAACk+B,IACGc,eACI55B,EAAArF,EAAAC,cAACg+B,IAAa1jC,IAAKq9B,KACfvyB,EAAArF,EAAAC,cAAA,KACIhJ,KAAMsR,EAAK7L,GAAGwiC,WACd1+B,OAAO,SACPC,IAAI,uBAEHi+B,EAzDpB,KA0DuBr5B,EAAArF,EAAAC,cAAA,QAAMmD,OAASsB,MAAO,UAAWy6B,WAAY,SAA7C,UAEI95B,EAAArF,EAAAC,cAAC89B,GAAD,MAFJ,KANR,OAAA5kC,OAYQoP,EAAK7L,GAAGA,GAZhB,OAAAvD,OAYwBoP,EAAK7L,GAAG82B,iBAGpCnuB,EAAArF,EAAAC,cAACg+B,IAAa1jC,IAAKq9B,KACd8G,GApEhB,KAqEmBr5B,EAAArF,EAAAC,cAAA,QAAMmD,OAASsB,MAAO,UAAWy6B,WAAY,SAA7C,WAFR,IAOI95B,EAAArF,EAAAC,cAAC49B,IAAUnmC,OAAQ6Q,EAAK7Q,UAE5B2N,EAAArF,EAAAC,cAAC8M,EAAA,SAAQxS,IAAKq9B,IAAS3qB,QAAS5H,EAAArF,EAAAC,cAAA,SAAIsI,EAAKqrB,eACrCvuB,EAAArF,EAAAC,cAACg+B,GAAD,KACKS,GA9EpB,KA+EuBr5B,EAAArF,EAAAC,cAAA,QAAMmD,OAASsB,MAAO,UAAWy6B,WAAY,SAA7C,YAFR,IAOK52B,EAAKqrB,eAGdvuB,EAAArF,EAAAC,cAACg+B,IAAa1jC,IAAKq9B,KACd8G,GAxFhB,KAyFmBr5B,EAAArF,EAAAC,cAAA,QAAMmD,OAASsB,MAAO,UAAWy6B,WAAY,SAA7C,iBAFR,IAOK52B,EAAK62B,UAEV/5B,EAAArF,EAAAC,cAACg+B,IAAa1jC,IAAKq9B,KACd8G,GAjGhB,KAkGmBr5B,EAAArF,EAAAC,cAAA,QAAMmD,OAASsB,MAAO,UAAWy6B,WAAY,SAA7C,SAFR,IAOK9lC,OAAAouB,EAAA,EAAApuB,CAAckP,EAAK7K,eAKpC2H,EAAArF,EAAAC,cAACo/B,EAAA,iBACG55B,aAAA,GAAAtM,OAAeoP,EAAK7L,GAAGA,GAAvB,YACAA,GAAI,gBACJ4iC,UAAWn6B,EAAWuE,SAAX,GAAAvQ,OAAuBoP,EAAK7L,GAAGA,GAA/B,aAEX2I,EAAArF,EAAAC,cAACk+B,IACGc,eACI55B,EAAArF,EAAAC,cAACg+B,IAAa1jC,IAAKq9B,KAAnB,YACNv+B,OAAAouB,EAAA,EAAApuB,CAAekP,EAAKg3B,UAEdl6B,EAAArF,EAAAC,cAACg+B,IAAa1jC,IAAKq9B,KAAnB,YACNv+B,OAAAouB,EAAA,EAAApuB,CAAekP,EAAKsrB,UAEdxuB,EAAArF,EAAAC,cAACg+B,IAAa1jC,IAAKq9B,KAAnB,aACLv+B,OAAAouB,EAAA,EAAApuB,CAAekP,EAAKi3B,oBAY7CC,GAAkB,SAAAxnC,GAAc,IAAXuzB,EAAWvzB,EAAXuzB,KAAWvgB,EACM5R,OAAA4L,EAAA,SAAA5L,CAAStC,OAAO2oC,YADtBx0B,EAAAhG,IAAA+F,EAAA,GAC1ByzB,EAD0BxzB,EAAA,GACby0B,EADaz0B,EAAA,GAG5B00B,EAAW,kBAAMD,EAAe5oC,OAAO2oC,aAO7C,OALArmC,OAAA4L,EAAA,UAAA5L,CAAU,WAEN,OADAtC,OAAO0sB,iBAAiB,SAAUmc,GAC3B,kBAAM7oC,OAAO2sB,oBAAoB,SAAUkc,SAG/CrB,GAAa/S,EAAM,EAAiB,WAAYkT,IAGrDmB,GAAkB,SAAAlnC,GAAc,IAAX6yB,EAAW7yB,EAAX6yB,KAAWsU,EACMzmC,OAAA4L,EAAA,SAAA5L,CAAStC,OAAO2oC,YADtBK,EAAA76B,IAAA46B,EAAA,GAC1BpB,EAD0BqB,EAAA,GACbJ,EADaI,EAAA,GAG5BH,EAAW,kBAAMD,EAAe5oC,OAAO2oC,aAO7C,OALArmC,OAAA4L,EAAA,UAAA5L,CAAU,WAEN,OADAtC,OAAO0sB,iBAAiB,SAAUmc,GAC3B,kBAAM7oC,OAAO2sB,oBAAoB,SAAUkc,SAIlDv6B,EAAArF,EAAAC,cAAAoF,EAAArF,EAAAK,SAAA,KACKmrB,EAAKptB,QAAU,GAAKiH,EAAArF,EAAAC,cAACmqB,EAAA,EAAD,MACrB/kB,EAAArF,EAAAC,cAAC4vB,EAAA,UAASmQ,WAAS,GACdtB,GAjKQ,KAEL,SAAAuB,GAAM,OACtB56B,EAAArF,EAAAC,cAACwvB,EAAA,aAAD,KACIpqB,EAAArF,EAAAC,cAAC0+B,EAAA,iBAAgBv7B,OAASmnB,YAAa,SACnCllB,EAAArF,EAAAC,cAACk+B,IACGc,cAAegB,EAAOj6B,IAAI,SAAA4G,GAAK,OAC3BvH,EAAArF,EAAAC,cAACi+B,IAAmB3jC,IAAKqS,GACpBA,EACU,YAAVA,GAAuBvH,EAAArF,EAAAC,cAAC89B,GAAD,aAwJImC,CAAYpC,IAChDz4B,EAAArF,EAAAC,cAACw/B,IAAgBjU,KAAMA,EAAMkT,YAAaA,OAM1DmB,GAAgBj/B,WACZ4qB,KAAMrlB,EAAAnG,EAAUoG,MAChBs4B,YAAav4B,EAAAnG,EAAUukB,QAG3Bkb,GAAgB7+B,WACZ4qB,KAAMrlB,EAAAnG,EAAUoG,MAChBs4B,YAAav4B,EAAAnG,EAAUukB,QAGZ,IAAA4b,GAAA,aCjMTC,KACAnW,MAAO,IAAK5tB,MAAO,IACnB4tB,MAAO,KAAM5tB,MAAO,KACpB4tB,MAAO,KAAM5tB,MAAO,KACpB4tB,MAAO,KAAM5tB,MAAO,KACpB4tB,MAAO,KAAM5tB,MAAO,KAGpBuwB,GAAqBrE,OACpBoB,EAAA,EAAYvoB,eACfrI,WAAY4wB,EAAA,EAAY5wB,aAGtBsnC,GAAgB,SAAAn4B,GACuBA,EAAjC2tB,QAAiC3tB,EAAxBnP,WACjB,OAF6B+R,IACY5C,GADZ,0BAK3Bo4B,GAAc,SAAAroC,GAAuC,IAAxBmB,EAAwBnB,EAApCjB,SAAYoC,OAAUskB,EAAczlB,EAAdylB,QAAc5b,EACTzI,OAAA4L,EAAA,SAAA5L,CAAS,MADA2I,EAAAkD,IAAApD,EAAA,GAC/C/B,EAD+CiC,EAAA,GAC/B8yB,EAD+B9yB,EAAA,GAAA0mB,EAUnDrvB,OAAAsvB,EAAA,EAAAtvB,EAASqiC,QAAUtS,WAVgCR,EAAA1jB,IAAAwjB,EAAA,GAAAqM,EAAAnM,EAAA,GAI/CpnB,EAJ+CuzB,EAI/CvzB,UACAC,EAL+CszB,EAK/CtzB,UACA3B,EAN+Ci1B,EAM/Cj1B,MAN+CygC,EAAAxL,EAO/CrzB,KAP+C8+B,EAAAD,EAOvC7E,YAPuC,IAAA8E,OAAAxL,EAAAuL,EAO5BnX,MAAO1nB,OAPqB,IAAAszB,OASnDE,EATmDtM,EAAA,GAAA3d,EAWrB5R,OAAA4L,EAAA,SAAA5L,CAAS,GAXY6R,EAAAhG,IAAA+F,EAAA,GAW/Cw1B,EAX+Cv1B,EAAA,GAWrCw1B,EAXqCx1B,EAAA,GAAA6d,EAYvB1vB,OAAAsvB,EAAA,EAAAtvB,IAAWgnC,IAZYrX,EAAA9jB,IAAA6jB,EAAA,GAY/C7gB,EAZ+C8gB,EAAA,GAYtCC,EAZsCD,EAAA,GAcnD2X,EAAsBtnC,OAAAwkB,EAAA,MAAAxkB,CAAMD,GAC5B0kB,YAAa,UACb8iB,eAAe,IAEf/nC,EAAW0vB,OAAKqE,GAAuB+T,GAlBYjX,EAmBMrwB,OAAA0C,EAAA,EAAA1C,CACzDR,GADIyE,EAnB+CosB,EAmB/CpsB,YAAaS,EAnBkC2rB,EAmBlC3rB,SAAUC,EAnBwB0rB,EAmBxB1rB,UAAWC,EAnBayrB,EAmBbzrB,eAa1C5E,OAAA4L,EAAA,UAAA5L,CAAU,WACNgJ,SAASC,OAAOk6B,aAAc9/B,GAAI,eAAgB+/B,cAAc,IAEhE1lC,OAAOsL,SAASC,OAAOC,KAAKC,UAAUhL,KAClC,kBACI6B,OAAAywB,EAAA,EAAAzwB,GAAmBoJ,MAAM,SAAA3C,GACrBg1B,GAAoB/0B,eAAgBD,aAMpDzG,OAAA4L,EAAA,UAAA5L,CAAU,WACN67B,EAAQ77B,OAAAywB,EAAA,EAAAzwB,EAAkBlB,OAAQmF,KAClC2rB,EAAW5vB,OAAAywB,EAAA,EAAAzwB,EAAyBlB,OAAQmF,KAvB9B,WAAM,IACZ0D,EAAgBgd,EAAA,EAAhBhd,YACF5H,EAASC,OAAAwkB,EAAA,UAAAxkB,CAAUiE,GAAewgB,YAAa,YACrDJ,EAAQuD,SACJlD,SAAU/c,EACV5H,WAmBJynC,KACCvjC,IAEL,IAAMwjC,EAAkB,SAAAC,GAAI,OAAKA,EAAO,GAAKzjC,EAAY/D,OAEnDynC,EAAgB,SAAAD,GAClB,IAAME,EAAaH,EAAgBC,GACnC/iC,EAAUijC,GACVP,EAAYK,IAGVG,GAAsB,SAACC,EAASJ,GAClChjC,EAASojC,GACT,IAAMF,EAAaH,EAAgBC,GACnC/iC,EAAUijC,GACVP,EAAYK,IAGhB,OACI17B,EAAArF,EAAAC,cAACoF,EAAArF,EAAMK,SAAP,KACIgF,EAAArF,EAAAC,cAAC+pB,EAAA,WAAD,KACI3kB,EAAArF,EAAAC,cAAC+pB,EAAA,iBAAgBC,MAAO,kBAG3BlqB,GACGsF,EAAArF,EAAAC,cAACiqB,EAAA,KAAD,KACI7kB,EAAArF,EAAAC,cAACkqB,EAAA,EAAepqB,KAItBA,GACEsF,EAAArF,EAAAC,cAACiqB,EAAA,KAAD,KACI7kB,EAAArF,EAAAC,cAACkM,EAAA,KAAD,KACI9G,EAAArF,EAAAC,cAACyM,EAAA,SAAD,KACIrH,EAAArF,EAAAC,cAACoL,GAAA,GACGrG,WAAYkD,EAAQxG,KACpB2I,QAAS/M,EACTgN,WAAYrM,EACZuM,WACInF,EAAArF,EAAAC,cAACmhC,EAAA,YACGC,UAAW3F,GAAQA,EAAK9D,MAAQ8D,EAAK9D,MAAQ,EAC7C0J,SAAS,8BACTlB,eAAgBA,GAChBe,QAAS7jC,EAAY/D,MACrBwnC,KAAMN,EACNvgC,QAASkhC,EAAA,kBAAkB59B,IAC3B+9B,gBAAiB,SAAC37B,EAAQu7B,EAASJ,GAC/BG,GAAoBC,EAASJ,IAEjCS,UAAW,SAAC57B,EAAQ67B,GAChBT,EAAcS,IAElBzB,WAAS,IAGjBt1B,aAAW,IAEd5K,GAASuF,EAAArF,EAAAC,cAACuE,EAAA,GAAc3M,QAASiI,EAAMA,QACvC0B,GAAa6D,EAAArF,EAAAC,cAACmqB,EAAA,EAAD,MACb3oB,GAAaC,EAAKtD,QAAU,GAAKiH,EAAArF,EAAAC,cAAC08B,EAAD,MACjCl7B,GAAaC,EAAKtD,OAAS,GAAKiH,EAAArF,EAAAC,cAACkgC,IAAgB3U,KAAM9pB,IACxD2D,EAAArF,EAAAC,cAACmhC,EAAA,YACGC,UAAW3F,GAAQA,EAAK9D,MAAQ8D,EAAK9D,MAAQ,EAC7C0J,SAAS,iCACTlB,eAAgBA,GAChBe,QAAS7jC,EAAY/D,MACrBwnC,KAAMN,EACNvgC,QAASkhC,EAAA,kBAAkB39B,OAC3B89B,gBAAiB,SAAC37B,EAAQu7B,EAASJ,GAC/BG,GAAoBC,EAASJ,IAEjCS,UAAW,SAAC57B,EAAQ67B,GAChBT,EAAcS,IAElBr+B,OAAS6zB,UAAW,eAUpDqJ,GAAY1/B,WACR5J,SAAUmP,EAAAnG,EAAUa,OACpB6c,QAASvX,EAAAnG,EAAUa,QAGRC,EAAA,y7BC7Kf,IAAM4gC,EAAsBroC,OAAAwqB,EAAA,EAAAxqB,CAAO2kC,EAAAh+B,EAAP3G,CAAHyqB,KAMnB6d,EAA6BtoC,OAAAwqB,EAAA,EAAAxqB,CAAOuoC,EAAA,2BAAPvoC,CAAH2sB,KAW1B6b,EAAyBxoC,OAAAwqB,EAAA,EAAAxqB,CAAOyoC,EAAA,uBAAPzoC,CAAH6sB,KAMtB6b,EAAgB,SAAAzW,GAClB,IAAM0W,EAAMC,IAAO3W,GAEb4W,EAAMD,MAASE,MAErB,OAAID,EAAIE,QAAQJ,GACZ,GAAA7oC,OAAU+oC,EAAIG,KAAKL,EAAK,QAAxB,gBAGAA,EAAIM,OAAOJ,EAAK,OACZF,EAAIO,UARI,KASR,GAAAppC,OAAU6oC,EAAIK,KAAKH,EAAK,SAAxB,iBAGJ,GAAA/oC,OAAU+oC,EAAIG,KAAKL,EAAK,WAAxB,wBALJ,GASEQ,EAA0B,SAAAvqC,GAAA,OAAAA,EAAGwqC,cACjBz8B,IACV,SAAArN,GAAmE,IAAhE2yB,EAAgE3yB,EAAhE2yB,KAAMzzB,EAA0Dc,EAA1Dd,QAAS+U,EAAiDjU,EAAjDiU,MAAwBlQ,EAAyB/D,EAA1C+pC,gBAAgCtqC,EAAUO,EAArBgqC,UAC1C,MAAc,KAAV/1B,GAA0B,WAAVA,EAEZvH,EAAArF,EAAAC,cAAC0hC,GAA2BzhC,QAAQ,OAAO3F,IAAK+wB,EAAO,IAAM5uB,GACzD2I,EAAArF,EAAAC,cAAC2iC,EAAA,kCACG1iC,QAAQ,OACR+pB,MACI5kB,EAAArF,EAAAC,cAAAoF,EAAArF,EAAAK,SAAA,KACKjI,EACGiN,EAAArF,EAAAC,cAAA,KAAGO,OAAO,SAASC,IAAI,sBAAsBxJ,KAAMmB,GAC9CiB,OAAAouB,EAAA,EAAApuB,CAAWuT,GACZvH,EAAArF,EAAAC,cAACyhC,EAAD,OAGJroC,OAAAouB,EAAA,EAAApuB,CAAWuT,MAK3BvH,EAAArF,EAAAC,cAAC4iC,EAAA,+BAAD,KACKhrC,EAAS,MAMZ,UAAV+U,EAEIvH,EAAArF,EAAAC,cAAC0hC,GAA2BzhC,QAAQ,SAAS3F,IAAK+wB,EAAO,IAAM5uB,GAC3D2I,EAAArF,EAAAC,cAAC2iC,EAAA,kCACG1iC,QAAQ,SACR+pB,MACI5kB,EAAArF,EAAAC,cAAAoF,EAAArF,EAAAK,SAAA,KACKjI,EACGiN,EAAArF,EAAAC,cAAA,KAAGO,OAAO,SAASC,IAAI,sBAAsBxJ,KAAMmB,GAC9CiB,OAAAouB,EAAA,EAAApuB,CAAWuT,GACZvH,EAAArF,EAAAC,cAACyhC,EAAD,OAGJroC,OAAAouB,EAAA,EAAApuB,CAAWuT,MAK3BvH,EAAArF,EAAAC,cAAC4iC,EAAA,gCAA+BC,UAAWf,EAAczW,IACpDzzB,EAAS,MAMZ,YAAV+U,EAEIvH,EAAArF,EAAAC,cAAC0hC,GAA2BzhC,QAAQ,UAAU3F,IAAK+wB,EAAO,IAAM5uB,GAC5D2I,EAAArF,EAAAC,cAAC2iC,EAAA,kCACG1iC,QAAQ,UACR+pB,MACI5kB,EAAArF,EAAAC,cAAAoF,EAAArF,EAAAK,SAAA,KACKjI,EACGiN,EAAArF,EAAAC,cAAA,KAAGO,OAAO,SAASC,IAAI,sBAAsBxJ,KAAMmB,GAC9CiB,OAAAouB,EAAA,EAAApuB,CAAWuT,GACZvH,EAAArF,EAAAC,cAACyhC,EAAD,OAGJroC,OAAAouB,EAAA,EAAApuB,CAAWuT,MAK3BvH,EAAArF,EAAAC,cAAC4iC,EAAA,gCAA+BC,UAAWf,EAAczW,IACpDzzB,EAAS,WAnB1B,KA2BNkrC,EAA4B,SAAAtpC,GAAA,OAAAA,EAAGgpC,cAEhCh7B,OAAO,SAAAu7B,GAAY,MAA2B,UAAvBA,EAAap2B,QACpC5G,IAAI,SAAAnM,GAAA,IAAGhC,EAAHgC,EAAGhC,QAASyzB,EAAZzxB,EAAYyxB,KAAM1e,EAAlB/S,EAAkB+S,MAAwBlQ,EAA1C7C,EAAyB6oC,gBAAgCtqC,EAAzDyB,EAA8C8oC,UAA9C,OACDt9B,EAAArF,EAAAC,cAAC0hC,GAA2BzhC,QAAQ,SAAS3F,IAAK+wB,EAAO,IAAM5uB,GAC3D2I,EAAArF,EAAAC,cAAC2iC,EAAA,kCACG1iC,QAAQ,SACR+pB,MACI5kB,EAAArF,EAAAC,cAAAoF,EAAArF,EAAAK,SAAA,KACKjI,EACGiN,EAAArF,EAAAC,cAAA,KAAGO,OAAO,SAASC,IAAI,sBAAsBxJ,KAAMmB,GAC9CiB,OAAAouB,EAAA,EAAApuB,CAAWuT,GACZvH,EAAArF,EAAAC,cAACyhC,EAAD,OAGJroC,OAAAouB,EAAA,EAAApuB,CAAWuT,MAK3BvH,EAAArF,EAAAC,cAAC4iC,EAAA,gCAA+BC,UAAWf,EAAczW,IACpDzzB,EAAS,SAKpBorC,EAA6B,SAAA/oC,GAAA,OAAAA,EAAGuoC,cAEjCh7B,OAAO,SAAAu7B,GAAY,MAA2B,WAAvBA,EAAap2B,QACpC5G,IAAI,SAAArL,GAAA,IAAG9C,EAAH8C,EAAG9C,QAASyzB,EAAZ3wB,EAAY2wB,KAAM1e,EAAlBjS,EAAkBiS,MAAwBlQ,EAA1C/B,EAAyB+nC,gBAAgCtqC,EAAzDuC,EAA8CgoC,UAA9C,OACDt9B,EAAArF,EAAAC,cAAC0hC,GAA2BzhC,QAAQ,OAAO3F,IAAK+wB,EAAO,IAAM5uB,GACzD2I,EAAArF,EAAAC,cAAC2iC,EAAA,kCACG1iC,QAAQ,OACR+pB,MACI5kB,EAAArF,EAAAC,cAAAoF,EAAArF,EAAAK,SAAA,KACKjI,EACGiN,EAAArF,EAAAC,cAAA,KAAGO,OAAO,SAASC,IAAI,sBAAsBxJ,KAAMmB,GAC9CiB,OAAAouB,EAAA,EAAApuB,CAAWuT,GACZvH,EAAArF,EAAAC,cAACyhC,EAAD,OAGJroC,OAAAouB,EAAA,EAAApuB,CAAWuT,MAK3BvH,EAAArF,EAAAC,cAAC4iC,EAAA,gCAA+BC,UAAWf,EAAczW,IACpDzzB,EAAS,SAKpBqrC,EAA8B,SAAApoC,GAAA,OAAAA,EAAG2nC,cAElCh7B,OAAO,SAAAu7B,GAAY,MAA2B,YAAvBA,EAAap2B,QACpC5G,IAAI,SAAA/K,GAAA,IAAGpD,EAAHoD,EAAGpD,QAASyzB,EAAZrwB,EAAYqwB,KAAM1e,EAAlB3R,EAAkB2R,MAAwBlQ,EAA1CzB,EAAyBynC,gBAAgCtqC,EAAzD6C,EAA8C0nC,UAA9C,OACDt9B,EAAArF,EAAAC,cAAC0hC,GAA2BzhC,QAAQ,UAAU3F,IAAK+wB,EAAO,IAAM5uB,GAC5D2I,EAAArF,EAAAC,cAAC2iC,EAAA,kCACG1iC,QAAQ,UACR+pB,MACI5kB,EAAArF,EAAAC,cAAAoF,EAAArF,EAAAK,SAAA,KACKjI,EACGiN,EAAArF,EAAAC,cAAA,KAAGO,OAAO,SAASC,IAAI,sBAAsBxJ,KAAMmB,GAC9CiB,OAAAouB,EAAA,EAAApuB,CAAWuT,GACZvH,EAAArF,EAAAC,cAACyhC,EAAD,OAGJroC,OAAAouB,EAAA,EAAApuB,CAAWuT,MAK3BvH,EAAArF,EAAAC,cAAC4iC,EAAA,gCAA+BC,UAAWf,EAAczW,IACpDzzB,EAAS,SAKpBsrC,EAAoB,SAAA5nC,GAAA,IAAG6nC,EAAH7nC,EAAG6nC,SAAUX,EAAblnC,EAAaknC,cAAb,OACtBp9B,EAAArF,EAAAC,cAAAoF,EAAArF,EAAAK,SAAA,KACIgF,EAAArF,EAAAC,cAAC4hC,EAAD,KACKY,EAAcrkC,QAAU,GAAKiH,EAAArF,EAAAC,cAACmqB,EAAA,EAAD,MAChB,KAAbgZ,GACG/9B,EAAArF,EAAAC,cAACuiC,GAAwBC,cAAeA,IAE9B,WAAbW,GACG/9B,EAAArF,EAAAC,cAACgjC,GAA2BR,cAAeA,IAEjC,UAAbW,GACG/9B,EAAArF,EAAAC,cAAC8iC,GAA0BN,cAAeA,IAEhC,YAAbW,GACG/9B,EAAArF,EAAAC,cAACijC,GAA4BT,cAAeA,OAM5DD,EAAwB5hC,WACpB6hC,cAAet8B,EAAAnG,EAAUoG,OAG7B28B,EAA0BniC,WACtB6hC,cAAet8B,EAAAnG,EAAUoG,OAG7B88B,EAA4BtiC,WACxB6hC,cAAet8B,EAAAnG,EAAUoG,OAG7B+8B,EAAkBviC,WACd6hC,cAAet8B,EAAAnG,EAAUoG,MACzBg9B,SAAUj9B,EAAAnG,EAAU2D,QAGT,IAAA0/B,EAAA,+lBC/Nf,IAAMC,GAAYjqC,OAAAwqB,EAAA,EAAAxqB,CAAOoT,EAAA,UAAPpT,CAAHkqC,KASTC,GAAgB3f,EAAA,EAAOa,IAAV+e,KAuBbC,KAEErnC,MAAO,gBACPuQ,MAAO,+BACP+2B,UAAU,IAEZtnC,MAAO,QAASuQ,MAAO,gBAAiB+2B,UAAU,IAClDtnC,MAAO,UAAWuQ,MAAO,eAAgB+2B,UAAU,IACnDtnC,MAAO,SAAUuQ,MAAO,cAAe+2B,UAAU,IACjDtnC,MAAO,GAAIuQ,MAAO,WAAY+2B,UAAU,IAGxCvD,KACAnW,MAAO,IAAK5tB,MAAO,IACnB4tB,MAAO,KAAM5tB,MAAO,KACpB4tB,MAAO,KAAM5tB,MAAO,KACpB4tB,MAAO,KAAM5tB,MAAO,KACpB4tB,MAAO,MAAO5tB,MAAO,MAG3B,SAASunC,GAAkBliC,GAMvB,OAAOA,EAAKkH,OACR,SAACkkB,EAAD70B,GAA8D,IAAhD2U,EAAgD3U,EAAhD2U,MAAmBlQ,EAA6BzE,EAAzC2F,WAA8BimC,EAAW5rC,EAAzB6rC,aAOjC,OANqB,IAAjBl3B,EAAMxO,OACN0uB,EAAU7jB,MAAO5M,MAAOK,EAAIkQ,MAAOi3B,EAAMF,UAAU,IAEnD7W,EAAU7jB,MAAO5M,MAAOK,EAAIkQ,QAAO+2B,UAAU,IAG1C7W,KAZTzwB,MAAO,gBAAiBuQ,MAAO,iBAAkB+2B,UAAU,IAC3DtnC,MAAO,GAAIuQ,MAAO,eAAgB+2B,UAAU,IAC5CtnC,OAAQ,EAAGuQ,MAAO,eAAgB+2B,UAAU,KAgBtD,IAAM/W,IACFrzB,MAAO,EACP6B,OAAQ,GAiNG0F,EAAA,QA9MO,WAAM,IAAAgB,EACsBzI,OAAA4L,EAAA,SAAA5L,CAAS,MAD/B2I,EAAAkD,IAAApD,EAAA,GAChB/B,EADgBiC,EAAA,GACA8yB,EADA9yB,EAAA,GAAAiJ,EAE4B5R,OAAA4L,EAAA,SAAA5L,KAF5B6R,EAAAhG,IAAA+F,EAAA,GAEhB84B,EAFgB74B,EAAA,GAEG84B,EAFH94B,EAAA,GAAA40B,EAGsBzmC,OAAA4L,EAAA,SAAA5L,KAHtB0mC,EAAA76B,IAAA46B,EAAA,GAGhBmE,EAHgBlE,EAAA,GAGAmE,EAHAnE,EAAA,GAAAoE,EAIwB9qC,OAAA4L,EAAA,SAAA5L,CAAS,IAJjC+qC,EAAAl/B,IAAAi/B,EAAA,GAIhBE,EAJgBD,EAAA,GAICE,EAJDF,EAAA,GAAAG,EAKgBlrC,OAAA4L,EAAA,SAAA5L,EAAS,GALzBmrC,EAAAt/B,IAAAq/B,EAAA,GAKhBE,EALgBD,EAAA,GAKHE,EALGF,EAAA,GAAAG,EAMYtrC,OAAA4L,EAAA,SAAA5L,EAAS,GANrBurC,EAAA1/B,IAAAy/B,EAAA,GAMhBnjC,EANgBojC,EAAA,GAMLC,EANKD,EAAA,GAAAE,EAOEzrC,OAAA4L,EAAA,SAAA5L,KAPF0rC,EAAA7/B,IAAA4/B,EAAA,GAOhBpJ,EAPgBqJ,EAAA,GAOVC,EAPUD,EAAA,GAAAE,EAQU5rC,OAAA4L,EAAA,SAAA5L,CAAS,GARnB6rC,EAAAhgC,IAAA+/B,EAAA,GAQhBxE,EARgByE,EAAA,GAQNxE,EARMwE,EAAA,GAAAxb,EAepBrwB,OAAA0C,EAAA,EAAA1C,CAAeuzB,IALftvB,EAVoBosB,EAUpBpsB,YACAqB,EAXoB+qB,EAWpB/qB,MACAZ,GAZoB2rB,EAYpB3rB,SACAC,GAboB0rB,EAapB1rB,UACAO,GAdoBmrB,EAcpBnrB,YAGJlF,OAAA4L,EAAA,UAAA5L,CAAU,WACForC,GAQQ,eAAA9rC,EAAA29B,IAAAC,EAAAv2B,EAAAw2B,KAAG,SAAAC,IAAA,OAAAF,EAAAv2B,EAAA02B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACXgO,GAAa,GADFlO,EAAAE,KAAA,EAEL9/B,OAAOsL,SAASC,OAAOC,KAAKC,UAFvB,OAHJnJ,OAAAywB,EAAA,EAAAzwB,EAAoBlB,OAAQmF,IAMzB9F,KAAK,SAAAiC,GAAqD,IAAA0rC,EAAA1rC,EAAlDgpC,cAAesB,OAAmC,IAAAoB,OAAXzJ,EAAWjiC,EAAXiiC,KACrDsI,EAAqBD,GACrBiB,EAAQtJ,GACRmJ,GAAa,KANN,wBAAAlO,EAAAG,SAAAL,MAAH,yBAAA99B,EAAAo+B,MAAA5Y,KAAAhgB,YAAA,EAUZinC,KACC9nC,IAELjE,OAAA4L,EAAA,UAAA5L,CAAU,WACNgJ,SAASC,OAAOk6B,aAAc9/B,GAAI,gBAAiB+/B,cAAc,IAEjE,IAAI4I,GAAS,EACPC,EAAiB,WACnB,OAAO3tC,QAAQ4tC,KACTlsC,OAAAywB,EAAA,EAAAzwB,GAAgBA,OAAAywB,EAAA,EAAAzwB,EAAoBlB,OAAQmF,KAAiB0I,IAAI,SAAAw/B,GAAC,OAChEA,EAAE/iC,MAAM,0BAPR,SAAA4zB,IAAA,OAAAA,EAAAC,IAAAC,EAAAv2B,EAAAw2B,KAYZ,SAAAiP,IAAA,OAAAlP,EAAAv2B,EAAA02B,KAAA,SAAAgP,GAAA,cAAAA,EAAA9O,KAAA8O,EAAA7O,MAAA,cACIgO,GAAa,GADjBa,EAAA7O,KAAA,EAEU9/B,OAAOsL,SAASC,OAAOC,KAAKC,UAFtC,cAAAkjC,EAAA7O,KAAA,EAGUx9B,OAAAywB,EAAA,EAAAzwB,GAAmBoJ,MAAM,SAAA3C,GAC3Bg1B,GAAoB/0B,eAAgBD,MAJ5C,OAMIwlC,IAAiB9tC,KACb,SAAAqC,GAGM,IAAAK,EAAAgL,IAAArL,EAAA,GAAA8rC,EAAAzrC,EAAA,GAFAo6B,UAAWsR,OAEX,IAAAD,OAAAE,EAAA3rC,EAAA,GAAA4rC,EAAAD,EADApD,cAAesB,OACf,IAAA+B,OADuCpK,EACvCmK,EADuCnK,KAEzC,IAAK2J,EAAQ,CACT,IAAMpB,EAAiBL,GAAkBgC,GACzC1B,EAAkBD,GAClBD,EAAqBD,GACrBiB,EAAQtJ,GACRgJ,GAAe,GACfG,GAAa,MAjB7B,wBAAAa,EAAA5O,SAAA2O,OAZY1O,MAAA5Y,KAAAhgB,WAoCZ,OApCY,WAAAk4B,EAAAU,MAAA5Y,KAAAhgB,WAmCZ64B,GACO,kBAAOqO,GAAS,QAG3B,IAAMvE,GAAkB,SAAAC,GAEpB,OADiBA,EAAO,GAAKzjC,EAAY/D,OAIvCynC,GAAgB,SAAAD,GAClB,IAAME,EAAaH,GAAgBC,GACnC/iC,GAAUijC,GACVP,EAAYK,IAGVG,GAAsB,SAACC,EAASJ,GAClChjC,GAASojC,GACT,IAAMF,EAAaH,GAAgBC,GACnC/iC,GAAUijC,GACVP,EAAYK,IAGhB,OACI17B,EAAArF,EAAAC,cAACoF,EAAArF,EAAMK,SAAP,KACIgF,EAAArF,EAAAC,cAAC+pB,EAAA,WAAD,KACI3kB,EAAArF,EAAAC,cAAC+pB,EAAA,iBAAgBC,MAAO,mBAE3BlqB,GACGsF,EAAArF,EAAAC,cAACiqB,EAAA,KAAD,KACI7kB,EAAArF,EAAAC,cAACkqB,EAAA,EAAepqB,KAGtBA,GACEsF,EAAArF,EAAAC,cAAAoF,EAAArF,EAAAK,SAAA,KACIgF,EAAArF,EAAAC,cAACiqB,EAAA,KAAD,KACI7kB,EAAArF,EAAAC,cAACkM,EAAA,KAAD,KACI9G,EAAArF,EAAAC,cAACqjC,GAAD,KACIj+B,EAAArF,EAAAC,cAACujC,GAAD,KACIn+B,EAAArF,EAAAC,cAAC8lC,EAAA,YACG9/B,KAAK,kBACL5J,MAAOgoC,EACPv9B,SAAU,SAAAzK,GACNioC,EAAmBjoC,GACnBsC,EAAMtC,GACN2B,GAAU,GACV0iC,EAAY,IAEhBj7B,aAAW,kBAEVw+B,EAAej+B,IAAI,SAAArL,EAA6Bu1B,GAA7B,IAAG7zB,EAAH1B,EAAG0B,MAAOuQ,EAAVjS,EAAUiS,MAAO+2B,EAAjBhpC,EAAiBgpC,SAAjB,OAChBt+B,EAAArF,EAAAC,cAAC+lC,EAAA,kBACGC,WAAYtC,EACZppC,IAAK21B,EACL7zB,MAAOA,EACPuQ,MAAOA,OAInBvH,EAAArF,EAAAC,cAAC8lC,EAAA,YACG9/B,KAAK,uBACL5J,MAAOiB,EAAYV,UAAY,GAC/BkK,SAAU,SAAAzK,GACNkC,GAAYlC,GACZ2B,GAAU,GACV0iC,EAAY,IAEhBj7B,aAAW,4BAEVi+B,GAAoB19B,IACjB,SAAAlL,EAA6Bo1B,GAA7B,IAAGyT,EAAH7oC,EAAG6oC,SAAUtnC,EAAbvB,EAAauB,MAAOuQ,EAApB9R,EAAoB8R,MAApB,OACIvH,EAAArF,EAAAC,cAAC+lC,EAAA,kBACGC,WAAYtC,EACZppC,IAAK21B,EACL7zB,MAAOA,EACPuQ,MAAOA,QAM3BvH,EAAArF,EAAAC,cAACmhC,EAAA,YACGC,UAAW3F,GAAQA,EAAK9D,MAAQ8D,EAAK9D,MAAQ,EAC7C0J,SAAS,8BACTlB,eAAgBA,GAChBe,QAAS7jC,EAAY/D,MACrBwnC,KAAMN,EACNvgC,QAASkhC,EAAA,kBAAkB59B,IAC3B+9B,gBAAiB,SAAC37B,EAAQu7B,EAASJ,GAC/BG,GAAoBC,EAASJ,IAEjCS,UAAW,SAAC57B,EAAQ67B,GAChBT,GAAcS,IAElBzB,WAAS,KAGjB36B,EAAArF,EAAAC,cAACyM,EAAA,SAAD,KACKlL,GAAa6D,EAAArF,EAAAC,cAACmqB,EAAA,EAAD,OACZ5oB,GAAauiC,EAAkB3lC,QAAU,GAAKiH,EAAArF,EAAAC,cAACoqB,EAAA,EAAD,OAC9C7oB,GAAauiC,EAAkB3lC,OAAS,GACtCiH,EAAArF,EAAAC,cAACimC,EAAA,mBAAD,KACI7gC,EAAArF,EAAAC,cAACojC,GACGD,SAAU9lC,EAAYV,UAAY,GAClCsL,QAASw7B,GACTjB,cAAesB,KAI3B1+B,EAAArF,EAAAC,cAACmhC,EAAA,YACGC,UAAW3F,GAAQA,EAAK9D,MAAQ8D,EAAK9D,MAAQ,EAC7C0J,SAAS,iCACTlB,eAAgBA,GAChBe,QAAS7jC,EAAY/D,MACrBwnC,KAAMN,EACNvgC,QAASkhC,EAAA,kBAAkB39B,OAC3B89B,gBAAiB,SAAC37B,EAAQu7B,EAASJ,GAC/BG,GAAoBC,EAASJ,IAEjCS,UAAW,SAAC57B,EAAQ67B,GAChBT,GAAcS,IAElBr+B,OAAS6zB,UAAW,iDC7SxDh4B,EAAA8B,EAAAD,EAAA,sBAAAqlC,IAAAlnC,EAAA8B,EAAAD,EAAA,sBAAAslC,IAAAnnC,EAAA8B,EAAAD,EAAA,sBAAAm3B,IAAAh5B,EAAA8B,EAAAD,EAAA,sBAAAulC,IAAApnC,EAAA8B,EAAAD,EAAA,sBAAAwlC,IAAArnC,EAAA8B,EAAAD,EAAA,sBAAAylC,IAAAtnC,EAAA8B,EAAAD,EAAA,sBAAA0lC,IAAAvnC,EAAA8B,EAAAD,EAAA,sBAAA2lC,IAAAxnC,EAAA8B,EAAAD,EAAA,sBAAA4lC,IAAAznC,EAAA8B,EAAAD,EAAA,sBAAA6lC,IAAA1nC,EAAA8B,EAAAD,EAAA,sBAAA8lC,IAAA,IAAAC,EAAA5nC,EAAA,IAAA6nC,EAAA7nC,EAAAE,EAAA0nC,GAKO,SAASE,EAAUt+B,GACtB,OAAY,IAARA,GAAqB,MAARA,MAIbhM,SAASgM,MAITqY,WAAWrY,IAOZ,SAAS09B,EAAQ3I,GACpB,OAAOA,EAAIxc,WAAWC,QAAQ,SAAU,IAGrC,SAASmlB,EAAeY,GAC3B,OAAOF,IAAO,IAAI5Z,KAAK8Z,GAAUtU,eAAeh0B,OAAO,qBAGpD,SAASu5B,EAAW3M,GACvB,OAAOwb,IAAOxb,GAAM5sB,OAAO,cAGxB,SAAS2nC,EAAczc,GAC1B,OAAOkd,MACNG,QAAQ,OACRrd,QAAQA,GACRlrB,OAAO,WAGL,SAAS4nC,EAAS5kC,GACrB,GAAKA,EAEE,CACH,IAAI2iB,EAAQ,EAIZ,OAHA3iB,EAAKpH,QAAQ,SAAA4sC,GACT7iB,GAAS5nB,SAASyqC,EAAMtP,SAErBvT,GAYR,IAAMkiB,EAAa,SAAAY,GACtB,MAAiB,iBAANA,EACA,GAGJA,EAAE1J,OAAO,GAAGC,cAAgByJ,EAAEjmB,MAAM,IAGxC,SAASslB,EAAexmC,EAAGw6B,GAC9B,OAAKuM,EAAU/mC,IAAO+mC,EAAUvM,GAK5BA,EAAIx6B,EAAI,EACD,EAGJw6B,EAAIx6B,EARA,EA2BR,SAASymC,EAAqB7c,GACjC,OAAKntB,SAASmtB,GAIPA,EAAU,GAHN,EAMR,SAAS8c,EAAqBU,GACjC,OAAK3qC,SAAS2qC,IAAS3qC,SAAS2qC,GAAQ,EAC7B,EAGc,IAAjB3qC,SAAS2qC,GAGd,SAAST,EAAsB/c,GAClC,OAAKntB,SAASmtB,GAIPA,EAAU,KAHN,EAcR,SAASgd,EAAcxqC,GAC1B,MAAgB,QAATA,EAAiB,eAAiB,iDClI7C,IAAA4C,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAA6E,EAAA5E,EAAA,IAAA6E,EAAA7E,EAAA,IAAA8E,EAAA9E,EAAA,KAAAooC,EAAApoC,EAAA,KAAAqoC,EAAAroC,EAAA,KAAAsoC,EAAAtoC,EAAAE,EAAAmoC,GAoBexmC,EAAA,EAVa,kBACxB5B,EAAAc,EAAAC,cAAC6D,EAAA,YAAW5D,QAAS4D,EAAA,kBAAkB3D,MACnCjB,EAAAc,EAAAC,cAAC8D,EAAA,gBAAe3D,KAAMmnC,EAAAvnC,IACtBd,EAAAc,EAAAC,cAAC4D,EAAA,OAAMvD,aAAa,KAAKC,KAAK,MAA9B,cAGArB,EAAAc,EAAAC,cAAConC,EAAA,eAAD","file":"js/automation_analytics.4beb675061fd27341f4c.js","sourcesContent":["import { stringify } from 'query-string';\n\nconst clustersEndpoint = `/api/tower-analytics/v0/clusters/`;\nconst notificationsEndPoint = `/api/tower-analytics/v0/notifications/`;\nconst preflightEndpoint = `/api/tower-analytics/v0/authorized/`;\n\nconst jobExplorerEndpoint = '/api/tower-analytics/v1/job_explorer/';\nconst jobExplorerOptionsEndpoint =\n  '/api/tower-analytics/v1/job_explorer_options/';\nconst ROIEndpoint = '/api/tower-analytics/v1/roi_templates/';\nconst ROITemplatesOptionsEndpoint =\n  '/api/tower-analytics/v1/roi_templates_options/';\nconst orgOptionsEndpoint = `/api/tower-analytics/v1/dashboard_organization_statistics_options/`;\nconst clustersOptionsEndpoint =\n  '/api/tower-analytics/v1/dashboard_clusters_options/';\nconst eventExplorerEndpoint = '/api/tower-analytics/v1/event_explorer/';\n\nfunction getAbsoluteUrl() {\n    const url = window.location.href;\n    let arr = url.split('/');\n    arr.pop();\n    return arr.join('/');\n}\n\nfunction handleResponse(response) {\n    return response.json().then(json => {\n        if (response.ok) {\n            return json;\n        }\n\n        if (response.status === 404 || response.status === 401) {\n            return Promise.reject({\n                status: response.status,\n                message: json\n            });\n        } else {\n            return Promise.reject(json);\n        }\n    });\n}\n\nexport const preflightRequest = () => {\n    return fetch(preflightEndpoint).then(handleResponse);\n};\n\n/* Section: Orgs page */\nexport const readOrgOptions = ({ params = {}}) => {\n    let url = new URL(orgOptionsEndpoint, getAbsoluteUrl());\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readJobsByDateAndOrg = ({ params = {}}) => {\n    const combined = {\n        ...params,\n        attributes: [ 'total_count' ],\n        group_by_time: true,\n        group_by: 'org',\n        sort_by: `total_count:${params.sort_by}`\n    };\n\n    let url = new URL(jobExplorerEndpoint, getAbsoluteUrl());\n    url.search = stringify({\n        limit: combined.limit,\n        sort_by: combined.sort_by\n    });\n\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(combined)\n    }).then(handleResponse);\n};\n\nexport const readJobRunsByOrg = ({ params = {}}) => {\n    const combined = {\n        ...params,\n        group_by: 'org',\n        include_others: true,\n        attributes: [ 'host_count' ],\n        sort_by: `total_count:${params.sort_by}`\n    };\n\n    let url = new URL(jobExplorerEndpoint, getAbsoluteUrl());\n    url.search = stringify({\n        limit: combined.limit,\n        sort_by: combined.sort_by\n    });\n\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(combined)\n    }).then(handleResponse);\n};\n\nexport const readJobEventsByOrg = ({ params = {}}) => {\n    const combined = {\n        ...params,\n        group_by: 'org',\n        include_others: true,\n        granularity: 'daily',\n        attributes: [ 'host_task_count' ],\n        sort_by: `host_task_count:${params.sort_by}`\n    };\n\n    let url = new URL(jobExplorerEndpoint, getAbsoluteUrl());\n    url.search = stringify({\n        limit: combined.limit,\n        sort_by: combined.sort_by\n    });\n\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(combined)\n    }).then(handleResponse);\n};\n/* End of section: Orgs page */\n\n// used in Notifications.js\nexport const readClusters = () => {\n    return fetch(clustersEndpoint).then(handleResponse);\n};\n\nexport const readNotifications = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(notificationsEndPoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readJobExplorerOptions = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(jobExplorerOptionsEndpoint, formattedUrl);\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readClustersOptions = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(clustersOptionsEndpoint, formattedUrl);\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readJobExplorer = ({ params = {}}) => {\n    const { limit, offset, sort_by } = params;\n    const paginationParams = {\n        limit,\n        offset,\n        sort_by\n    };\n    const qs = stringify(paginationParams);\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(jobExplorerEndpoint, formattedUrl);\n    url.search = qs;\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readEventExplorer = ({ params = {}}) => {\n    const { limit, offset, sort_by } = params;\n    const paginationParams = {\n        limit,\n        offset,\n        sort_by\n    };\n    const qs = stringify(paginationParams);\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(eventExplorerEndpoint, formattedUrl);\n    url.search = qs;\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readClustersBarChart = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(jobExplorerEndpoint, formattedUrl);\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readROI = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(ROIEndpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readROIOptions = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(ROITemplatesOptionsEndpoint, formattedUrl);\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n","import { useReducer } from 'react';\nimport moment from 'moment';\n\nimport { formatDate } from '../Utilities/helpers';\n\nexport const useQueryParams = initial => {\n    const paramsReducer = (state, { type, value }) => {\n        switch (type) {\n            /* v0 api reducers */\n            case 'SET_STARTDATE':\n                return { ...state, startDate: value };\n            case 'SET_ENDDATE':\n                return { ...state, endDate: value };\n            case 'SET_ID':\n                if (!parseInt(value)) {\n                    const { id: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, id: parseInt(value) };\n            case 'SET_LIMIT':\n                if (!parseInt(value.limit)) {\n                    const { limit: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, limit: parseInt(value.limit) };\n            case 'SET_SEVERITY':\n                if (value.severity === '') {\n                    const { severity: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, ...value };\n\n                /* v1 api reducers */\n            case 'SET_OFFSET':\n            case 'SET_ATTRIBUTES':\n            case 'SET_JOB_TYPE':\n            case 'SET_STATUS':\n            case 'SET_ORG':\n            case 'SET_CLUSTER':\n            case 'SET_TEMPLATE':\n            case 'SET_SORTBY':\n            case 'SET_ROOT_WORKFLOWS_AND_JOBS':\n                return { ...state, ...value };\n            case 'SET_QUICK_DATE_RANGE': {\n                let newState = { ...state };\n                if (value !== 'custom') {\n                    newState = { ...newState, start_date: null, end_date: null };\n                }\n\n                newState = { ...newState, ...value };\n                return newState;\n            }\n\n            case 'SET_START_DATE':\n            case 'SET_END_DATE': {\n                let newValues = {};\n                Object.entries(value).forEach(([ key, value ]) => {\n                    newValues[key] = formatDate(value);\n                });\n                return { ...state, ...newValues };\n            }\n\n            case 'RESET_FILTER':\n                return {\n                    ...state,\n                    ...initial\n                };\n            default:\n                throw new Error();\n        }\n    };\n\n    const [ queryParams, dispatch ] = useReducer(paramsReducer, { ...initial });\n\n    const actionMapper = {\n        status: 'SET_STATUS',\n        quick_date_range: 'SET_QUICK_DATE_RANGE',\n        job_type: 'SET_JOB_TYPE',\n        org_id: 'SET_ORG',\n        cluster_id: 'SET_CLUSTER',\n        template_id: 'SET_TEMPLATE',\n        sort_by: 'SET_SORTBY',\n        start_date: 'SET_START_DATE',\n        end_date: 'SET_END_DATE',\n        only_root_workflows_and_standalone_jobs: 'SET_ROOT_WORKFLOWS_AND_JOBS'\n    };\n\n    return {\n        queryParams,\n        dispatch,\n        setLimit: limit => dispatch({ type: 'SET_LIMIT', value: { limit }}),\n        setOffset: offset => dispatch({ type: 'SET_OFFSET', value: { offset }}),\n        setFromToolbar: (varName, value = null) => {\n            if (!varName) {\n                dispatch({ type: 'RESET_FILTER' });\n            } else {\n                dispatch({ type: actionMapper[varName], value: { [varName]: value }});\n            }\n        },\n        /* v0 api usage after this line */\n        setSeverity: severity =>\n            dispatch({ type: 'SET_SEVERITY', value: { severity }}),\n        setEndDate: () => {\n            const endDate = moment().format('YYYY-MM-DD');\n            dispatch({ type: 'SET_ENDDATE', value: endDate });\n        },\n        setId: value => dispatch({ type: 'SET_ID', value }),\n        setStartDate: days => {\n            let startDate;\n            if (days === 7) {\n                startDate = moment()\n                .subtract(1, 'week')\n                .format('YYYY-MM-DD');\n            }\n\n            if (days === 14) {\n                startDate = moment()\n                .subtract(2, 'weeks')\n                .format('YYYY-MM-DD');\n            }\n\n            if (days === 31) {\n                startDate = moment()\n                .subtract(1, 'month')\n                .format('YYYY-MM-DD');\n            } else {\n                startDate = moment()\n                .subtract(days, 'days')\n                .format('YYYY-MM-DD');\n            }\n\n            dispatch({ type: 'SET_STARTDATE', value: startDate });\n        },\n        setStartDateAsString: value => dispatch({ type: 'SET_STARTDATE', value })\n    };\n};\n","/*eslint max-len: [\"error\", { \"ignoreStrings\": true }]*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Button,\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { WrenchIcon } from '@patternfly/react-icons';\n\nconst DefaultEmptyState = ({ preflightError: error }) => (\n    <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={WrenchIcon} />\n        {error.status === 404 && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n          No data found\n                </Title>\n                <EmptyStateBody>\n          Please visit{' '}\n                    <a\n                        href=\"https://docs.ansible.com/ansible-tower/latest/html/administration/usability_data_collection.html#automation-analytics\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n            here\n                    </a>{' '}\n          to learn how to enable Automation Analytics.\n                </EmptyStateBody>\n            </>\n        )}\n        {error.status === 401 && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n          Not authorized\n                </Title>\n                <EmptyStateBody>\n          You do not have the correct permissions to view this page.\n                </EmptyStateBody>\n            </>\n        )}\n        {!error.status && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n          Something went wrong, please try reloading the page\n                </Title>\n                <Button variant=\"primary\" onClick={() => window.location.reload()}>\n          Reload\n                </Button>\n            </>\n        )}\n    </EmptyState>\n);\n\nDefaultEmptyState.propTypes = {\n    preflightError: PropTypes.object\n};\n\nexport default DefaultEmptyState;\n","export const jobExplorer = {\n    attributes: [\n        'id',\n        'status',\n        'job_type',\n        'started',\n        'finished',\n        'elapsed',\n        'created',\n        'cluster_name',\n        'org_name',\n        'most_failed_tasks'\n    ],\n    defaultParams: {\n        status: [ 'successful', 'failed' ],\n        quick_date_range: 'last_30_days',\n        job_type: [ 'workflowjob', 'job' ],\n        org_id: [],\n        cluster_id: [],\n        template_id: [],\n        sort_by: 'created:desc',\n        start_date: null,\n        end_date: null,\n        only_root_workflows_and_standalone_jobs: false,\n        limit: 5\n    }\n};\n\nexport const roi = {\n    defaultParams: {\n        status: [ 'successful' ],\n        org_id: [],\n        cluster_id: [],\n        template_id: [],\n        quick_date_range: 'roi_last_year',\n        job_type: [ 'job' ],\n        sort_by: 'template_productivity_score:desc',\n        start_date: null,\n        end_date: null,\n        limit: 25,\n        only_root_workflows_and_standalone_jobs: true,\n        attributes: [\n            'successful_hosts_total',\n            'successful_elapsed_total',\n            'total_org_count',\n            'total_cluster_count'\n        ],\n        group_by: 'template',\n        group_by_time: false,\n        granularity: 'monthly'\n    }\n};\n\nexport const organizationStatistics = {\n    defaultParams: {\n        status: [],\n        org_id: [],\n        quick_date_range: 'last_30_days',\n        sort_by: 'desc',\n        limit: 5,\n        job_type: [ 'workflowjob', 'job' ],\n        cluster_id: [],\n        template_id: [],\n        start_date: null,\n        end_date: null\n    }\n};\n\nexport const clusters = {\n    defaultParams: {\n        status: [ 'successful', 'failed' ],\n        quick_date_range: 'last_30_days',\n        job_type: [ 'workflowjob', 'job' ],\n        group_by_time: true,\n        org_id: [],\n        cluster_id: [],\n        template_id: [],\n        only_root_workflows_and_standalone_jobs: false\n    }\n};\n","import { useState, useEffect, useReducer } from 'react';\n\nconst dataFetchReducer = (state, action) => {\n    switch (action.type) {\n        case 'FETCH_INIT':\n            return {\n                ...state,\n                isLoading: true,\n                isSuccess: false,\n                error: null\n            };\n        case 'FETCH_SUCCESS':\n            return {\n                ...state,\n                isLoading: false,\n                isSuccess: true,\n                error: null,\n                data: action.payload\n            };\n        case 'FETCH_FAILURE':\n            return {\n                ...state,\n                isLoading: false,\n                isSuccess: false,\n                error: action.payload\n            };\n        case 'UPDATE_DATA':\n            return {\n                ...state,\n                data: action.payload\n            };\n        default:\n            throw new Error();\n    }\n};\n\nconst useApi = (initialData, postprocess = d => d) => {\n    const [ request, setRequest ] = useState(null);\n\n    const [ state, dispatch ] = useReducer(dataFetchReducer, {\n        isLoading: false,\n        isSuccess: false,\n        error: null,\n        data: initialData\n    });\n\n    useEffect(() => {\n    // Prevent fetching nothing\n        if (!request) {\n            return;\n        }\n\n        // Initialize\n        let didCancel = false;\n        dispatch({ type: 'FETCH_INIT' });\n\n        // Fetching\n        window.insights.chrome.auth.getUser().then(() =>\n            request\n            .then(data => {\n                if (!didCancel) {\n                    dispatch({\n                        type: 'FETCH_SUCCESS',\n                        payload: postprocess(data)\n                    });\n                }\n            })\n            .catch(e => {\n                if (!didCancel) {\n                    dispatch({ type: 'FETCH_FAILURE', payload: e });\n                }\n            })\n        );\n\n        return () => {\n            didCancel = true;\n        };\n    }, [ request ]);\n\n    const setData = data => {\n        dispatch({ type: 'UPDATE_DATA', payload: data });\n    };\n\n    return [ state, setRequest, setData ];\n};\n\nexport default useApi;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nconst initializeChart = Chart => {\n    const BaseChart = props => {\n        const { id, margin } = props;\n\n        const getWidth = () => {\n            let width;\n            width =\n        parseInt(d3.select('#' + id).style('width')) -\n          margin.left -\n          margin.right || 700;\n            return width;\n        };\n\n        const getHeight = () => {\n            let height;\n            height =\n        parseInt(d3.select('#' + id).style('height')) -\n          margin.top -\n          margin.bottom || 450;\n            return height;\n        };\n\n        return <Chart {...props} getWidth={getWidth} getHeight={getHeight} />;\n    };\n\n    BaseChart.propTypes = {\n        id: PropTypes.string,\n        margin: PropTypes.object\n    };\n\n    return BaseChart;\n};\n\ninitializeChart.propTypes = {\n    Chart: PropTypes.element\n};\n\nexport default initializeChart;\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst NoData = () => (\n    <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={CubesIcon} />\n        <Title headingLevel=\"h5\" size=\"lg\">\n      No Data\n        </Title>\n    </EmptyState>\n);\n\nexport default NoData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateIcon,\n    EmptyStateVariant,\n    Title\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { global_danger_color_200 as globalDangerColor200 } from '@patternfly/react-tokens';\n\nconst ApiErrorState = ({ message }) => (\n    <EmptyState variant={EmptyStateVariant.small}>\n        <EmptyStateIcon\n            icon={ExclamationCircleIcon}\n            color={globalDangerColor200.value}\n        />\n        <Title headingLevel=\"h2\" size=\"lg\">\n      Error\n        </Title>\n        <EmptyStateBody>{message}</EmptyStateBody>\n    </EmptyState>\n);\n\nApiErrorState.propTypes = {\n    message: PropTypes.string\n};\n\nexport default ApiErrorState;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarItem, Select, SelectOption } from '@patternfly/react-core';\n\nconst CategoryDropdown = ({\n    selected,\n    setSelected = () => {},\n    categories = []\n}) => {\n    const [ isExpanded, setIsExpanded ] = useState(false);\n\n    return (\n        <ToolbarItem>\n            <Select\n                isOpen={isExpanded}\n                variant={'single'}\n                aria-label={'Categories'}\n                onToggle={() => setIsExpanded(!isExpanded)}\n                onSelect={(_event, selection) => {\n                    setSelected(selection);\n                    setIsExpanded(false);\n                }}\n                selections={selected}\n                placeholderText={'Filter by'}\n            >\n                {categories.map(({ key, name }) => (\n                    <SelectOption key={key} value={key}>\n                        {name}\n                    </SelectOption>\n                ))}\n            </Select>\n        </ToolbarItem>\n    );\n};\n\nCategoryDropdown.propTypes = {\n    categories: PropTypes.array,\n    selected: PropTypes.string,\n    setSelected: PropTypes.func\n};\n\nexport default CategoryDropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, TextInput } from '@patternfly/react-core';\n\nconst CustomDateSelector = ({\n    onInputChange = () => {},\n    startDate = '',\n    endDate = ''\n}) => {\n    return (\n        <>\n            <InputGroup>\n                <TextInput\n                    name=\"startDate\"\n                    id=\"startDate\"\n                    type=\"date\"\n                    aria-label=\"Start Date\"\n                    value={startDate}\n                    onChange={e => onInputChange('start_date', e)}\n                />\n            </InputGroup>\n            <InputGroup>\n                <TextInput\n                    name=\"endDate\"\n                    id=\"endDate\"\n                    type=\"date\"\n                    aria-label=\"End Date\"\n                    value={endDate}\n                    onChange={e => onInputChange('end_date', e)}\n                />\n            </InputGroup>\n        </>\n    );\n};\n\nCustomDateSelector.propTypes = {\n    startDate: PropTypes.string,\n    endDate: PropTypes.string,\n    onInputChange: PropTypes.func\n};\n\nexport default CustomDateSelector;\n","export const optionsForCategories = {\n    status: {\n        isSingle: false,\n        name: 'Status',\n        placeholder: 'Filter by job status'\n    },\n    quick_date_range: {\n        isSingle: true,\n        name: 'Date',\n        placeholder: 'Filter by date'\n    },\n    job_type: {\n        isSingle: false,\n        name: 'Job',\n        placeholder: 'Filter by job type'\n    },\n    org_id: {\n        isSingle: false,\n        name: 'Organization',\n        placeholder: 'Filter by organization'\n    },\n    cluster_id: {\n        isSingle: false,\n        name: 'Cluster',\n        placeholder: 'Filter by cluster'\n    },\n    template_id: {\n        isSingle: false,\n        name: 'Template',\n        placeholder: 'Filter by template'\n    },\n    sort_by: {\n        isSingle: true,\n        name: 'Sort by',\n        placeholder: 'Sort by attribute'\n    }\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ToolbarFilter,\n    Select,\n    SelectOption\n} from '@patternfly/react-core';\n\nimport {\n    handleCheckboxChips,\n    handleSingleChips\n} from './helpers';\nimport { optionsForCategories } from './constants';\n\nconst renderValues = values =>\n    values && values.map(({ key, value, description }) => (\n        <SelectOption key={ key } value={ key } description={ description }>\n            { value }\n        </SelectOption>\n    ));\n\nconst ToolbarFilterItem = ({\n    categoryKey,\n    filter = null,\n    values = [],\n    isVisible = true,\n    hasChips = true,\n    setFilter\n}) => {\n    const [ expanded, setExpanded ] = useState(false);\n    const options = optionsForCategories[categoryKey];\n\n    const onDelete = (name, valueToDelete) => {\n        const single = optionsForCategories[categoryKey].isSingle;\n\n        if (single) {\n            setFilter(null);\n        } else {\n            const keyToDelete = values.find(({ value }) => value === valueToDelete)\n            .key;\n            const filteredArr = filter.filter(value => value !== keyToDelete);\n            setFilter(filteredArr);\n        }\n    };\n\n    const handleChips = () => {\n        if (options.isSingle) {\n            return handleSingleChips(filter, values);\n        } else {\n            return handleCheckboxChips(filter, values);\n        }\n    };\n\n    const onSelect = (event, selection) => {\n        if (options.isSingle) {\n            setFilter(selection);\n            setExpanded(false);\n        } else {\n            setFilter(!filter.includes(selection)\n                ? [ ...filter, selection ]\n                : filter.filter(value => value !== selection)\n            );\n        }\n    };\n\n    const onFilter = event => {\n        const textInput = event.target.value;\n        if (textInput === '') {\n            return renderValues(values);\n        } else {\n            return renderValues(\n                values.filter(({ value }) =>\n                    value.toLowerCase().includes(textInput.toLowerCase())\n                )\n            );\n        }\n    };\n\n    return (\n        <ToolbarFilter\n            data-cy={categoryKey}\n            key={categoryKey}\n            showToolbarItem={isVisible}\n            chips={hasChips ? handleChips() : []}\n            categoryName={options.name}\n            deleteChip={hasChips ? onDelete : null}\n        >\n            <Select\n                variant={ options.isSingle ? 'single' : 'checkbox' }\n                aria-label={ categoryKey }\n                onToggle={ () => setExpanded(!expanded) }\n                onSelect={ onSelect }\n                selections={ filter }\n                isOpen={ expanded }\n                onFilter={ onFilter }\n                hasInlineFilter\n                placeholderText={ options.placeholder }\n            >\n                { renderValues(values) }\n            </Select>\n        </ToolbarFilter>\n    );\n};\n\nToolbarFilterItem.propTypes = {\n    categoryKey: PropTypes.string.isRequired,\n    filter: PropTypes.any,\n    values: PropTypes.array,\n    isVisible: PropTypes.bool,\n    hasChips: PropTypes.bool,\n    setFilter: PropTypes.func.isRequired\n};\n\nexport default ToolbarFilterItem;\n","/**\n * Get comparator values if their key is in the item list\n */\nexport const handleCheckboxChips = (item, comparator) => {\n    if (item && comparator) {\n        return item.reduce((acc, i) => {\n            Number.isInteger(parseInt(i)) ? (i = parseInt(i)) : i;\n\n            comparator.forEach(cmpItem => {\n                if (cmpItem.key === i) {\n                    acc.push(cmpItem.value);\n                }\n            });\n\n            return acc;\n        }, []);\n    }\n\n    return [];\n};\n\n/**\n * Convert a list of objects to a list of the last value if defined\n */\nexport const handleSingleChips = (item, comparator) => {\n    if (item && typeof item === 'string' && comparator) {\n        let val;\n        comparator.forEach(i => {\n            if (i.key === item) {\n                val = i.value;\n            }\n        });\n\n        if (val !== undefined) {\n            return [ val ];\n        }\n    }\n\n    return [];\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Toolbar,\n    ToolbarContent,\n    ToolbarGroup,\n    Button,\n    ToolbarItem,\n    Tooltip,\n    Switch\n} from '@patternfly/react-core';\nimport {\n    Card,\n    CardTitle,\n    CardBody,\n    CardActions,\n    CardHeader\n} from '@patternfly/react-core';\nimport {\n    FilterIcon,\n    SortAmountDownIcon,\n    CogIcon,\n    QuestionCircleIcon,\n    TimesIcon\n} from '@patternfly/react-icons';\n\nimport CategoryDropdown from './CategoryDropdown';\nimport CustomDateSelector from './CustomDateSelector';\nimport { optionsForCategories } from './constants';\nimport ToolbarFilterItem from './ToolbarFilterItem';\n\nconst FilterableToolbar = ({\n    categories,\n    filters,\n    setFilters,\n    pagination = null,\n    hasSettings = false\n}) => {\n    const [ settingsExpanded, setSettingsExpanded ] = useState(false);\n    const { quick_date_range, sort_by, ...restCategories } = categories;\n\n    // Filter out elements which are not in the option object.\n    const filterCategories = Object.keys(restCategories)\n    .filter(key => Object.keys(optionsForCategories).includes(key))\n    .reduce((obj, key) => {\n        obj[key] = restCategories[key];\n        return obj;\n    }, {});\n\n    const [ currentCategory, setCurrentCategory ] = useState(\n        Object.keys(filterCategories)[0]\n    );\n\n    const onInputChange = (type, value) => {\n        setFilters(type, value);\n    };\n\n    const FilterCategoriesGroup = () => (\n        <ToolbarGroup variant=\"filter-group\">\n            <CategoryDropdown\n                selected={currentCategory}\n                setSelected={setCurrentCategory}\n                categories={Object.keys(filterCategories).map(el => ({\n                    key: el,\n                    name: optionsForCategories[el].name\n                }))}\n            />\n            {Object.keys(filterCategories).map(key => (\n                <ToolbarFilterItem\n                    key={key}\n                    categoryKey={key}\n                    filter={filters[key]}\n                    values={categories[key]}\n                    isVisible={currentCategory === key}\n                    setFilter={value => setFilters(key, value)}\n                />\n            ))}\n        </ToolbarGroup>\n    );\n\n    const QuickDateGroup = () => (\n        <ToolbarGroup variant=\"filter-group\">\n            <ToolbarFilterItem\n                categoryKey=\"quick_date_range\"\n                filter={filters.quick_date_range}\n                values={quick_date_range}\n                setFilter={value => setFilters('quick_date_range', value)}\n                hasChips={false}\n            />\n            {filters.quick_date_range === 'custom' && (\n                <CustomDateSelector\n                    startDate={filters.start_date ? filters.start_date : ''}\n                    endDate={filters.end_date ? filters.end_date : ''}\n                    onInputChange={onInputChange}\n                />\n            )}\n        </ToolbarGroup>\n    );\n\n    const SortByGroup = () => (\n        <ToolbarGroup variant=\"filter-group\">\n            <ToolbarFilterItem\n                categoryKey=\"sort_by\"\n                filter={filters.sort_by}\n                values={sort_by}\n                setFilter={value => setFilters('sort_by', value)}\n                hasChips={false}\n            />\n            <Button variant=\"control\">\n                <SortAmountDownIcon />\n            </Button>\n        </ToolbarGroup>\n    );\n\n    /* TODO: For future work: make settings more modular for different pages */\n    const Settings = () => (\n        <Card isFlat style={{ backgroundColor: '#EEEEEE' }}>\n            <CardHeader>\n                <CardActions>\n                    <Button\n                        variant=\"plain\"\n                        onClick={() => setSettingsExpanded(!settingsExpanded)}\n                    >\n                        <TimesIcon />\n                    </Button>\n                </CardActions>\n                <CardTitle>Settings</CardTitle>\n            </CardHeader>\n            <CardBody>\n                <Switch\n                    id=\"showRootWorkflowJobs\"\n                    label=\"Ignore nested workflows and jobs\"\n                    labelOff=\"Ignore nested workflows and jobs\"\n                    isChecked={filters.only_root_workflows_and_standalone_jobs}\n                    onChange={val => {\n                        setFilters('only_root_workflows_and_standalone_jobs', val);\n                    }}\n                />\n                <Tooltip\n                    position={'top'}\n                    content={\n                        <div>\n                            {' '}\n              If enabled, nested workflows and jobs will not be included in the\n              overall totals. Enable this option to filter out duplicate\n              entries.\n                        </div>\n                    }\n                >\n                    <QuestionCircleIcon />\n                </Tooltip>\n            </CardBody>\n        </Card>\n    );\n\n    return (\n        <>\n            <Toolbar\n                id=\"filterable-toolbar-with-chip-groups\"\n                clearAllFilters={() => {\n                    setFilters(null, null);\n                }}\n                collapseListedFiltersBreakpoint=\"xl\"\n            >\n                <ToolbarContent>\n                    <Button variant=\"control\">\n                        <FilterIcon />\n                    </Button>\n                    {Object.keys(filterCategories).length > 0 && (\n                        <FilterCategoriesGroup />\n                    )}\n                    {quick_date_range && <QuickDateGroup />}\n                    {sort_by && <SortByGroup />}\n                    {hasSettings && (\n                        <ToolbarItem>\n                            <Button\n                                variant=\"plain\"\n                                onClick={() => setSettingsExpanded(!settingsExpanded)}\n                                aria-label=\"settings\"\n                                isActive={settingsExpanded}\n                            >\n                                <CogIcon />\n                            </Button>\n                        </ToolbarItem>\n                    )}\n                    {pagination && (\n                        <ToolbarItem\n                            variant=\"pagination\"\n                            visibility={{ default: 'hidden', lg: 'visible' }}\n                        >\n                            {pagination}\n                        </ToolbarItem>\n                    )}\n                </ToolbarContent>\n                {settingsExpanded && <Settings />}\n            </Toolbar>\n        </>\n    );\n};\n\nFilterableToolbar.propTypes = {\n    categories: PropTypes.object.isRequired,\n    filters: PropTypes.object.isRequired,\n    setFilters: PropTypes.func.isRequired,\n    pagination: PropTypes.object,\n    hasSettings: PropTypes.bool\n};\n\nexport default FilterableToolbar;\n","import Toolbar from './Toolbar';\n\nexport default Toolbar;\n","var map = {\n\t\"./af\": 186,\n\t\"./af.js\": 186,\n\t\"./ar\": 187,\n\t\"./ar-dz\": 188,\n\t\"./ar-dz.js\": 188,\n\t\"./ar-kw\": 189,\n\t\"./ar-kw.js\": 189,\n\t\"./ar-ly\": 190,\n\t\"./ar-ly.js\": 190,\n\t\"./ar-ma\": 191,\n\t\"./ar-ma.js\": 191,\n\t\"./ar-sa\": 192,\n\t\"./ar-sa.js\": 192,\n\t\"./ar-tn\": 193,\n\t\"./ar-tn.js\": 193,\n\t\"./ar.js\": 187,\n\t\"./az\": 194,\n\t\"./az.js\": 194,\n\t\"./be\": 195,\n\t\"./be.js\": 195,\n\t\"./bg\": 196,\n\t\"./bg.js\": 196,\n\t\"./bm\": 197,\n\t\"./bm.js\": 197,\n\t\"./bn\": 198,\n\t\"./bn.js\": 198,\n\t\"./bo\": 199,\n\t\"./bo.js\": 199,\n\t\"./br\": 200,\n\t\"./br.js\": 200,\n\t\"./bs\": 201,\n\t\"./bs.js\": 201,\n\t\"./ca\": 202,\n\t\"./ca.js\": 202,\n\t\"./cs\": 203,\n\t\"./cs.js\": 203,\n\t\"./cv\": 204,\n\t\"./cv.js\": 204,\n\t\"./cy\": 205,\n\t\"./cy.js\": 205,\n\t\"./da\": 206,\n\t\"./da.js\": 206,\n\t\"./de\": 207,\n\t\"./de-at\": 208,\n\t\"./de-at.js\": 208,\n\t\"./de-ch\": 209,\n\t\"./de-ch.js\": 209,\n\t\"./de.js\": 207,\n\t\"./dv\": 210,\n\t\"./dv.js\": 210,\n\t\"./el\": 211,\n\t\"./el.js\": 211,\n\t\"./en-SG\": 212,\n\t\"./en-SG.js\": 212,\n\t\"./en-au\": 213,\n\t\"./en-au.js\": 213,\n\t\"./en-ca\": 214,\n\t\"./en-ca.js\": 214,\n\t\"./en-gb\": 215,\n\t\"./en-gb.js\": 215,\n\t\"./en-ie\": 216,\n\t\"./en-ie.js\": 216,\n\t\"./en-il\": 217,\n\t\"./en-il.js\": 217,\n\t\"./en-nz\": 218,\n\t\"./en-nz.js\": 218,\n\t\"./eo\": 219,\n\t\"./eo.js\": 219,\n\t\"./es\": 220,\n\t\"./es-do\": 221,\n\t\"./es-do.js\": 221,\n\t\"./es-us\": 222,\n\t\"./es-us.js\": 222,\n\t\"./es.js\": 220,\n\t\"./et\": 223,\n\t\"./et.js\": 223,\n\t\"./eu\": 224,\n\t\"./eu.js\": 224,\n\t\"./fa\": 225,\n\t\"./fa.js\": 225,\n\t\"./fi\": 226,\n\t\"./fi.js\": 226,\n\t\"./fo\": 227,\n\t\"./fo.js\": 227,\n\t\"./fr\": 228,\n\t\"./fr-ca\": 229,\n\t\"./fr-ca.js\": 229,\n\t\"./fr-ch\": 230,\n\t\"./fr-ch.js\": 230,\n\t\"./fr.js\": 228,\n\t\"./fy\": 231,\n\t\"./fy.js\": 231,\n\t\"./ga\": 232,\n\t\"./ga.js\": 232,\n\t\"./gd\": 233,\n\t\"./gd.js\": 233,\n\t\"./gl\": 234,\n\t\"./gl.js\": 234,\n\t\"./gom-latn\": 235,\n\t\"./gom-latn.js\": 235,\n\t\"./gu\": 236,\n\t\"./gu.js\": 236,\n\t\"./he\": 237,\n\t\"./he.js\": 237,\n\t\"./hi\": 238,\n\t\"./hi.js\": 238,\n\t\"./hr\": 239,\n\t\"./hr.js\": 239,\n\t\"./hu\": 240,\n\t\"./hu.js\": 240,\n\t\"./hy-am\": 241,\n\t\"./hy-am.js\": 241,\n\t\"./id\": 242,\n\t\"./id.js\": 242,\n\t\"./is\": 243,\n\t\"./is.js\": 243,\n\t\"./it\": 244,\n\t\"./it-ch\": 245,\n\t\"./it-ch.js\": 245,\n\t\"./it.js\": 244,\n\t\"./ja\": 246,\n\t\"./ja.js\": 246,\n\t\"./jv\": 247,\n\t\"./jv.js\": 247,\n\t\"./ka\": 248,\n\t\"./ka.js\": 248,\n\t\"./kk\": 249,\n\t\"./kk.js\": 249,\n\t\"./km\": 250,\n\t\"./km.js\": 250,\n\t\"./kn\": 251,\n\t\"./kn.js\": 251,\n\t\"./ko\": 252,\n\t\"./ko.js\": 252,\n\t\"./ku\": 253,\n\t\"./ku.js\": 253,\n\t\"./ky\": 254,\n\t\"./ky.js\": 254,\n\t\"./lb\": 255,\n\t\"./lb.js\": 255,\n\t\"./lo\": 256,\n\t\"./lo.js\": 256,\n\t\"./lt\": 257,\n\t\"./lt.js\": 257,\n\t\"./lv\": 258,\n\t\"./lv.js\": 258,\n\t\"./me\": 259,\n\t\"./me.js\": 259,\n\t\"./mi\": 260,\n\t\"./mi.js\": 260,\n\t\"./mk\": 261,\n\t\"./mk.js\": 261,\n\t\"./ml\": 262,\n\t\"./ml.js\": 262,\n\t\"./mn\": 263,\n\t\"./mn.js\": 263,\n\t\"./mr\": 264,\n\t\"./mr.js\": 264,\n\t\"./ms\": 265,\n\t\"./ms-my\": 266,\n\t\"./ms-my.js\": 266,\n\t\"./ms.js\": 265,\n\t\"./mt\": 267,\n\t\"./mt.js\": 267,\n\t\"./my\": 268,\n\t\"./my.js\": 268,\n\t\"./nb\": 269,\n\t\"./nb.js\": 269,\n\t\"./ne\": 270,\n\t\"./ne.js\": 270,\n\t\"./nl\": 271,\n\t\"./nl-be\": 272,\n\t\"./nl-be.js\": 272,\n\t\"./nl.js\": 271,\n\t\"./nn\": 273,\n\t\"./nn.js\": 273,\n\t\"./pa-in\": 274,\n\t\"./pa-in.js\": 274,\n\t\"./pl\": 275,\n\t\"./pl.js\": 275,\n\t\"./pt\": 276,\n\t\"./pt-br\": 277,\n\t\"./pt-br.js\": 277,\n\t\"./pt.js\": 276,\n\t\"./ro\": 278,\n\t\"./ro.js\": 278,\n\t\"./ru\": 279,\n\t\"./ru.js\": 279,\n\t\"./sd\": 280,\n\t\"./sd.js\": 280,\n\t\"./se\": 281,\n\t\"./se.js\": 281,\n\t\"./si\": 282,\n\t\"./si.js\": 282,\n\t\"./sk\": 283,\n\t\"./sk.js\": 283,\n\t\"./sl\": 284,\n\t\"./sl.js\": 284,\n\t\"./sq\": 285,\n\t\"./sq.js\": 285,\n\t\"./sr\": 286,\n\t\"./sr-cyrl\": 287,\n\t\"./sr-cyrl.js\": 287,\n\t\"./sr.js\": 286,\n\t\"./ss\": 288,\n\t\"./ss.js\": 288,\n\t\"./sv\": 289,\n\t\"./sv.js\": 289,\n\t\"./sw\": 290,\n\t\"./sw.js\": 290,\n\t\"./ta\": 291,\n\t\"./ta.js\": 291,\n\t\"./te\": 292,\n\t\"./te.js\": 292,\n\t\"./tet\": 293,\n\t\"./tet.js\": 293,\n\t\"./tg\": 294,\n\t\"./tg.js\": 294,\n\t\"./th\": 295,\n\t\"./th.js\": 295,\n\t\"./tl-ph\": 296,\n\t\"./tl-ph.js\": 296,\n\t\"./tlh\": 297,\n\t\"./tlh.js\": 297,\n\t\"./tr\": 298,\n\t\"./tr.js\": 298,\n\t\"./tzl\": 299,\n\t\"./tzl.js\": 299,\n\t\"./tzm\": 300,\n\t\"./tzm-latn\": 301,\n\t\"./tzm-latn.js\": 301,\n\t\"./tzm.js\": 300,\n\t\"./ug-cn\": 302,\n\t\"./ug-cn.js\": 302,\n\t\"./uk\": 303,\n\t\"./uk.js\": 303,\n\t\"./ur\": 304,\n\t\"./ur.js\": 304,\n\t\"./uz\": 305,\n\t\"./uz-latn\": 306,\n\t\"./uz-latn.js\": 306,\n\t\"./uz.js\": 305,\n\t\"./vi\": 307,\n\t\"./vi.js\": 307,\n\t\"./x-pseudo\": 308,\n\t\"./x-pseudo.js\": 308,\n\t\"./yo\": 309,\n\t\"./yo.js\": 309,\n\t\"./zh-cn\": 310,\n\t\"./zh-cn.js\": 310,\n\t\"./zh-hk\": 311,\n\t\"./zh-hk.js\": 311,\n\t\"./zh-tw\": 312,\n\t\"./zh-tw.js\": 312\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 347;","import { Paths } from '../paths';\nimport { stringify } from 'query-string';\n\nconst useRedirect = (history, path) => query => {\n    const search = stringify(query, { arrayFormat: 'bracket' });\n    history.push({\n        pathname: Paths[path],\n        search\n    });\n};\n\nexport default useRedirect;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        this.draw();\n    }\n\n    formatDollars(amount) {\n        return parseFloat(amount)\n        .toFixed(2)\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    }\n\n    draw() {\n        this.width = 125;\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip-base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 125;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, 0) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', 92)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.name = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', -2)\n        .text('Template name');\n        this.savings = this.toolTipBase\n        .append('text')\n        .attr('x', 20)\n        .attr('y', 52)\n        .attr('font-size', 12)\n        .attr('font-weight', 'bold')\n        .attr('fill', 'white')\n        .text('Total savings $0');\n        this.manualCost = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', 16)\n        .text('Manual cost $0');\n        this.automationCost = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', 34)\n        .text('Automation cost $0');\n    }\n\n  handleMouseOver = d => {\n      let name;\n      let savings;\n      let manualCost;\n      let automationCost;\n      const scrollLeftOffset = d3.select('#d3-roi-chart-root').node().scrollLeft;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10 +\n      scrollLeftOffset;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      30;\n      if (!d) {\n          return;\n      } else {\n          savings = this.formatDollars(d.delta);\n          name = d.name;\n          manualCost = this.formatDollars(d.manualCost);\n          automationCost = this.formatDollars(d.automatedCost);\n      }\n\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n      this.name.text('' + name);\n      this.savings.text('Total savings $' + savings);\n      this.manualCost.text('Manual Cost $' + manualCost);\n      this.automationCost.text('Automation Cost $' + automationCost);\n      this.nameWidth = this.name.node().getComputedTextLength();\n      this.savingsWidth = this.savings.node().getComputedTextLength();\n      this.manualCostWidth = this.manualCost.node().getComputedTextLength();\n      this.automationCostWidth = this.automationCost\n      .node()\n      .getComputedTextLength();\n      this.widestTextElem = d3.max([\n          this.nameWidth,\n          this.savingsWidth,\n          this.automationCostWidth,\n          this.manualCostWidth\n      ]);\n\n      const maxTextPerc = (this.widestTextElem / this.boxWidth) * 100;\n      const threshold = 85;\n      const overage = maxTextPerc / threshold;\n      let adjustedWidth;\n      if (maxTextPerc > threshold) {\n          adjustedWidth = this.boxWidth * overage;\n      } else {\n          adjustedWidth = this.boxWidth;\n      }\n\n      this.boundingBox.attr('width', adjustedWidth);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, 15) rotate(45)');\n          this.boundingBox.attr('x', -adjustedWidth - 20);\n          this.name.attr('x', -(toolTipWidth - 7));\n          this.savings.attr('x', -(toolTipWidth - 7));\n          this.manualCost.attr('x', -(toolTipWidth - 7));\n          this.automationCost.attr('x', -(toolTipWidth - 7));\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, 15) rotate(45)');\n          this.boundingBox.attr('x', 10);\n          this.name.attr('x', 20);\n          this.savings.attr('x', 20);\n          this.manualCost.attr('x', 20);\n          this.automationCost.attr('x', 20);\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass TopTemplatesSavings extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.state = {\n            timeout: null\n        };\n    }\n\n    // Methods\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => {\n                this.init();\n            }, 500)\n        });\n    }\n\n    init() {\n        this.draw();\n    }\n\n    draw() {\n    // Use PF chart color\n        const color = '#0066CC'; //blue\n        // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const { data } = this.props;\n        let width;\n        // adjust chart width to support larger datasets\n        if (data.length >= 15) {\n            const containerWidth = d3.select('.automation-wrapper').node();\n            width =\n        containerWidth.getBoundingClientRect().width -\n        this.props.margin.left -\n        this.props.margin.right;\n        } else {\n            width = this.props.getWidth();\n        }\n\n        const height = this.props.getHeight();\n        const x = d3\n        .scaleBand()\n        .rangeRound([ 0, width ])\n        .padding(0.45);\n        const y = d3.scaleLinear().range([ height, 0 ]);\n        // format our X Axis ticks\n        let ticks;\n        ticks = data.map(d => d.name);\n        const formatYAxisValue = d3.format('.2s');\n        const xAxis = d3.axisBottom(x).tickValues(ticks);\n\n        const yAxis = d3\n        .axisLeft(y)\n        .ticks(8)\n        .tickFormat(d => formatYAxisValue(d).replace('G', 'B'))\n        .tickSize(-width, 0, 0);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n\n        const taskNames = data.map(d => d.name);\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id\n        });\n        x.domain(taskNames);\n        y.domain([ 0, d3.max(data, d => d.delta * 1.15) || 8 ]);\n\n        // add y axis\n        svg\n        .append('g')\n        .attr('class', 'y axis')\n        .call(yAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7')\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 6)\n        .attr('dy', '.71em')\n        .style('text-anchor', 'end')\n        .style('font-weight', 'bold')\n        .text('Value');\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Savings per template ($)');\n\n        // add x axis\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(xAxis)\n        .selectAll('text')\n        .style('text-anchor', 'start')\n        .attr('dx', '0.75em')\n        .attr('dy', -x.bandwidth() / 1.45 - 8)\n        .attr('transform', 'rotate(-90)');\n\n        svg.selectAll('.x-axis line').attr('stroke', 'transparent');\n\n        svg\n        .selectAll('.bar')\n        .data(data)\n        .enter()\n        .append('rect')\n        .attr('x', d => x(d.name))\n        .attr('width', x.bandwidth())\n        .attr('y', d => y(d.delta))\n        .style('fill', () => color)\n        .attr('height', d => height - y(d.delta))\n        .on('mouseover', function(d) {\n            d3.select(this).style('fill', d3.rgb(color).darker(1));\n            tooltip.handleMouseOver(d);\n        })\n        .on('mousemove', tooltip.handleMouseOver)\n        .on('mouseout', function() {\n            d3.select(this).style('fill', color);\n            tooltip.handleMouseOut();\n        });\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate() {\n        this.init();\n    }\n\n    render() {\n        return <div id={this.props.id} />;\n    }\n}\n\nTopTemplatesSavings.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func\n};\n\nexport default initializeChart(TopTemplatesSavings);\n","import styled from 'styled-components';\nimport { CardTitle } from '@patternfly/react-core';\n\nexport const BorderedCardTitle = styled(CardTitle)`\n  border-bottom: 1px solid #d7d7d7;\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle, Title } from '@patternfly/react-core';\n\nconst floatToStringWithCommas = total =>\n    total\n    .toFixed(2)\n    .toString()\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\nconst TotalSavings = ({ totalSavings = 0 }) => (\n    <Card style={{ borderTop: '3px solid #2B9AF3' }}>\n        <CardTitle style={{ paddingBottom: '0' }}>Total savings</CardTitle>\n        <CardBody>\n            <Title\n                headingLevel=\"h3\"\n                size=\"4xl\"\n                style={{ color: 'var(--pf-global--success-color--200)' }}\n            >\n                {floatToStringWithCommas(totalSavings)}\n            </Title>\n        </CardBody>\n    </Card>\n);\n\nTotalSavings.propTypes = {\n    totalSavings: PropTypes.number\n};\n\nexport default TotalSavings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    Card,\n    CardBody,\n    InputGroup,\n    InputGroupText,\n    TextInput\n} from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst validFloat = value => {\n    const floatValue = parseFloat(value);\n    return floatValue && floatValue >= 0 ? value : '';\n};\n\nconst CalculationCost = ({\n    costManual = '0',\n    setCostManual = () => {},\n    costAutomation = '0',\n    setCostAutomation = () => {}\n}) => (\n    <Card>\n        <CardTitle>Calculate your automation</CardTitle>\n        <CardBody>\n            <InputAndText>\n                <p>Manual cost of automation</p>\n                <em style={{ color: 'var(--pf-global--Color--dark-200)' }}>\n          (e.g. average salary of mid-level Software Engineer)\n                </em>\n                <InputGroup style={{ width: '50%' }}>\n                    <InputGroupText>\n                        <DollarSignIcon />\n                    </InputGroupText>\n                    <TextInput\n                        id=\"manual-cost\"\n                        type=\"number\"\n                        aria-label=\"manual-cost\"\n                        value={costManual}\n                        onChange={e => setCostManual(validFloat(e))}\n                    />\n                    <InputGroupText>/hr</InputGroupText>\n                </InputGroup>\n            </InputAndText>\n            <InputAndText style={{ paddingTop: '10px' }}>\n                <p>Automated process cost</p>\n                <InputGroup style={{ width: '50%' }}>\n                    <InputGroupText>\n                        <DollarSignIcon />\n                    </InputGroupText>\n                    <TextInput\n                        id=\"automation-cost\"\n                        type=\"number\"\n                        aria-label=\"automation-cost\"\n                        value={costAutomation}\n                        onChange={e => setCostAutomation(validFloat(e))}\n                    />\n                    <InputGroupText>/hr</InputGroupText>\n                </InputGroup>\n            </InputAndText>\n        </CardBody>\n    </Card>\n);\n\nCalculationCost.propTypes = {\n    costManual: PropTypes.string,\n    setCostManual: PropTypes.func,\n    costAutomation: PropTypes.string,\n    setCostAutomation: PropTypes.func\n};\n\nexport default CalculationCost;\n","import React from 'react';\n\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst AutomationFormula = () => (\n    <Card style={{ height: '100%' }}>\n        <CardTitle>Automation formula</CardTitle>\n        <CardBody>\n            <p>\n                <b>Manual cost for template x</b> =\n                <em>\n          (time for a manual run on one host in hours * (sum of all hosts across\n          all job runs) ) * cost per hour\n                </em>\n            </p>\n            <p>\n                <b>Automation cost for template x</b> =\n                <em>\n          cost of automation per hour * sum of total elapsed hours for a\n          template\n                </em>\n            </p>\n            <p>\n                <b>Savings</b> =\n                <em>Sum of (manual cost - automation cost) across all templates</em>\n            </p>\n        </CardBody>\n    </Card>\n);\n\nexport default AutomationFormula;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    Button,\n    Card,\n    CardBody,\n    InputGroup,\n    InputGroupText,\n    TextInput,\n    Tooltip,\n    Popover\n} from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\n\nimport {\n    convertSecondsToMins,\n    convertMinsToSeconds\n} from '../../Utilities/helpers';\n\nconst TemplateDetail = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  div,\n  em {\n    padding-right: 5px;\n  }\n\n  @media (max-width: 1490px) {\n    display: block;\n\n    em {\n      padding: 10px 0;\n      display: block;\n    }\n  }\n`;\n\nconst TemplateDetailSubTitle = styled.em`\n  color: var(--pf-global--Color--dark-200);\n`;\n\nconst TooltipWrapper = styled.div`\n  p {\n    text-align: left;\n  }\n`;\n\nconst IconGroup = styled.div`\n  & svg {\n    fill: var(--pf-global--Color--dark-200);\n\n    :hover {\n      cursor: pointer;\n    }\n\n    :first-of-type {\n      margin-right: 10px;\n      margin-left: 10px;\n\n      @media (max-width: 1350px) {\n        margin-left: 0;\n      }\n    }\n  }\n`;\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nexport const QuestionIconTooltip = ({ data }) => (\n    <Popover\n        aria-label=\"template detail popover\"\n        position=\"left\"\n        bodyContent={\n            <TooltipWrapper>\n                <p>\n                    <b>Success elapsed sum</b>: {data.successful_elapsed_total.toFixed(2)}\n                </p>\n                <p>\n                    <b>Number of associated organizations</b>: {data.total_org_count}\n                </p>\n                <p>\n                    <b>Number of associated clusters</b>: {data.total_cluster_count}\n                </p>\n            </TooltipWrapper>\n        }\n    >\n        <InfoCircleIcon />\n    </Popover>\n);\n\nQuestionIconTooltip.propTypes = {\n    data: PropTypes.object\n};\n\nconst TopTemplates = ({\n    data = [],\n    setDataRunTime = () => {},\n    redirectToJobExplorer = () => {}\n}) => (\n    <Card style={{ overflow: 'auto', flex: '1 1 0' }} className=\"top-templates\">\n        <CardBody>\n            <p>Enter the time it takes to run the following templates manually.</p>\n            {data.map(data => (\n                <div key={data.id}>\n                    <Tooltip content={'List of jobs for this template for past 30 days'}>\n                        <Button\n                            style={{ padding: '15px 0 10px' }}\n                            component=\"a\"\n                            onClick={() => redirectToJobExplorer(data.id)}\n                            variant=\"link\"\n                        >\n                            {data.name}\n                        </Button>\n                    </Tooltip>\n                    <TemplateDetail>\n                        <InputAndText key={data.id}>\n                            <InputGroup>\n                                <TextInput\n                                    id={data.id}\n                                    type=\"number\"\n                                    aria-label=\"time run manually\"\n                                    value={convertSecondsToMins(data.avgRunTime)}\n                                    onChange={minutes =>\n                                        setDataRunTime(convertMinsToSeconds(minutes), data.id)\n                                    }\n                                />\n                                <InputGroupText>min</InputGroupText>\n                            </InputGroup>\n                        </InputAndText>\n                        <TemplateDetailSubTitle>\n              x {data.successful_hosts_total} host runs\n                        </TemplateDetailSubTitle>\n                        <IconGroup>\n                            <QuestionIconTooltip data={data} />\n                        </IconGroup>\n                    </TemplateDetail>\n                    <p style={{ color: '#486B00' }}>${data.delta.toFixed(2)}</p>\n                </div>\n            ))}\n        </CardBody>\n    </Card>\n);\n\nTopTemplates.propTypes = {\n    data: PropTypes.array,\n    setDataRunTime: PropTypes.func,\n    redirectToJobExplorer: PropTypes.func,\n    deselectedIds: PropTypes.array,\n    setDeselectedIds: PropTypes.func\n};\n\nexport default TopTemplates;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\nimport { Card, CardBody } from '@patternfly/react-core';\n\n// Imports from custom components\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\n// Imports from API\nimport { preflightRequest, readROI, readROIOptions } from '../../Api';\n\n// Imports from utilities\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { roi as roiConst } from '../../Utilities/constants';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { calculateDelta, convertSecondsToHours } from '../../Utilities/helpers';\n\n// Chart\nimport TopTemplatesSavings from '../../Charts/ROITopTemplates';\n\n// Local imports\nimport { BorderedCardTitle } from './helpers';\nimport TotalSavings from './TotalSavings';\nimport CalculationCost from './CalculationCost';\nimport AutomationFormula from './AutomationFormula';\nimport TopTemplates from './TopTemplates';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 5fr 2fr;\n  height: 100%;\n`;\n\nconst WrapperLeft = styled.div`\n  flex: 5;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n`;\n\nconst WrapperRight = styled.div`\n  flex: 2;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst mapApi = ({ items = []}) =>\n    items.map(el => ({\n        ...el,\n        delta: 0,\n        avgRunTime: 3600,\n        manualCost: 0,\n        automatedCost: 0\n    }));\n\nconst updateDeltaCost = (data, costAutomation, costManual) =>\n    data.map(el => {\n        const manualCost =\n      convertSecondsToHours(el.avgRunTime) *\n      el.successful_hosts_total *\n      parseFloat(costManual);\n        const automatedCost =\n      convertSecondsToHours(el.successful_elapsed_total) *\n      parseFloat(costAutomation);\n        const delta = calculateDelta(automatedCost, manualCost);\n\n        return { ...el, delta, manualCost, automatedCost };\n    });\n\nconst computeTotalSavings = data =>\n    data.reduce((sum, curr) => sum + curr.delta, 0);\n\nconst AutomationCalculator = ({ history }) => {\n    const toJobExplorer = useRedirect(history, 'jobExplorer');\n    const [ costManual, setCostManual ] = useState('50');\n    const [ costAutomation, setCostAutomation ] = useState('20');\n\n    const [ preflight, setPreflight ] = useApi(null);\n    const [ options, setOptions ] = useApi({});\n    const [ api, fetchApi, setDataInApi ] = useApi([], data =>\n        updateDeltaCost(mapApi(data), costAutomation, costManual)\n    );\n\n    const { queryParams, setFromToolbar } = useQueryParams(\n        roiConst.defaultParams\n    );\n\n    /**\n   * Modifies one elements avgRunTime in the unfilteredData\n   * and updates all calculated fields.\n   * Used in top templates.\n   */\n    const setDataRunTime = (seconds, id) => {\n        const updatedData = api.data.map(el => {\n            if (el.id === id) {\n                el.avgRunTime = seconds;\n                const updatedDelta = updateDeltaCost(\n                    [ el ],\n                    costAutomation,\n                    costManual\n                )[0];\n                return updatedDelta;\n            } else {\n                return el;\n            }\n        });\n\n        setDataInApi(updatedData);\n    };\n\n    useEffect(() => {\n        setPreflight(preflightRequest());\n        setOptions(readROIOptions({ params: queryParams }));\n    }, []);\n\n    /**\n   * Recalculates the delta and costs in the data after the cost is changed.\n   */\n    useEffect(() => {\n        setDataInApi(updateDeltaCost(api.data, costAutomation, costManual));\n    }, [ costAutomation, costManual ]);\n\n    /**\n   * Get data from API depending on the queryParam.\n   */\n    useEffect(() => {\n        fetchApi(readROI({ params: queryParams }));\n    }, [ queryParams ]);\n\n    /**\n   * Function to redirect to the job explorer page\n   * with the same filters as is used here.\n   */\n    const redirectToJobExplorer = templateId => {\n        const initialQueryParams = {\n            quick_date_range: 'last_30_days',\n            template_id: [ templateId ]\n        };\n        toJobExplorer(initialQueryParams);\n    };\n\n    const renderLeft = () => (\n        <WrapperLeft>\n            <Main style={{ paddingBottom: '0' }}>\n                <Card>\n                    <BorderedCardTitle>Automation savings</BorderedCardTitle>\n                    <CardBody>\n                        {api.isLoading && <LoadingState />}\n                        {api.error && <ApiErrorState message={api.error.error} />}\n                        {api.isSuccess && api.data.length <= 0 && <NoData />}\n                        {api.isSuccess && api.data.length > 0 && (\n                            <React.Fragment>\n                                <TopTemplatesSavings\n                                    margin={{ top: 20, right: 20, bottom: 20, left: 70 }}\n                                    id=\"d3-roi-chart-root\"\n                                    data={api.data}\n                                />\n                                <p style={{ textAlign: 'center' }}>Templates</p>\n                            </React.Fragment>\n                        )}\n                    </CardBody>\n                </Card>\n            </Main>\n            <Main>\n                <AutomationFormula />\n            </Main>\n        </WrapperLeft>\n    );\n\n    const renderRight = () => (\n        <WrapperRight>\n            <Main style={{ paddingBottom: '0', paddingLeft: '0' }}>\n                <TotalSavings totalSavings={computeTotalSavings(api.data)} />\n            </Main>\n            <Main\n                style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    flex: '1 1 0',\n                    paddingLeft: '0'\n                }}\n            >\n                <CalculationCost\n                    costManual={costManual}\n                    setCostManual={setCostManual}\n                    costAutomation={costAutomation}\n                    setCostAutomation={setCostAutomation}\n                />\n                <TopTemplates\n                    redirectToJobExplorer={redirectToJobExplorer}\n                    data={api.data}\n                    setDataRunTime={setDataRunTime}\n                    setUnfilteredData={api.data}\n                />\n            </Main>\n        </WrapperRight>\n    );\n\n    return (\n        <React.Fragment>\n            <PageHeader style={{ flex: '0' }}>\n                <PageHeaderTitle title={'Automation Calculator'} />\n            </PageHeader>\n            {preflight.error && (\n                <Main>\n                    <EmptyState preflightError={preflight.error} />\n                </Main>\n            )}\n            {preflight.isSuccess && (\n                <React.Fragment>\n                    <Main style={{ paddingBottom: '0' }}>\n                        <Card>\n                            <CardBody>\n                                <FilterableToolbar\n                                    categories={options.data}\n                                    filters={queryParams}\n                                    setFilters={setFromToolbar}\n                                />\n                            </CardBody>\n                        </Card>\n                    </Main>\n                    <Wrapper className=\"automation-wrapper\">\n                        {renderLeft()}\n                        {renderRight()}\n                    </Wrapper>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n};\n\nAutomationCalculator.propTypes = {\n    history: PropTypes.object\n};\n\nexport default AutomationCalculator;\n","import * as d3 from 'd3';\n\nclass Tooltip {\n    constructor(opts) {\n        this.svg = opts.svg;\n        this.colors = opts.colors;\n        this.draw();\n    }\n\n    draw() {\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 145;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -41)\n        .attr('rx', 2)\n        .attr('height', 110)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.circleSuccess = this.toolTipBase\n        .append('circle')\n        .attr('cx', 26)\n        .attr('cy', 0)\n        .attr('r', 8)\n        .attr('stroke', 'white')\n        .attr('fill', 'white');\n        this.circleFail = this.toolTipBase\n        .append('circle')\n        .attr('cx', 26)\n        .attr('cy', 26)\n        .attr('r', 8)\n        .attr('stroke', 'white')\n        .attr('fill', 'white');\n        this.successText = this.toolTipBase\n        .append('text')\n        .attr('x', 43)\n        .attr('y', 4)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Successful');\n        this.failText = this.toolTipBase\n        .append('text')\n        .attr('x', 43)\n        .attr('y', 28)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Failed');\n        this.successIcon = this.toolTipBase\n        .append('text')\n        .attr('class', 'fas fa-sm')\n        .attr('fill', this.colors(1))\n        .attr('x', 19)\n        .attr('y', 5)\n        .text('\\uf058');\n        this.failedIcon = this.toolTipBase\n        .append('text')\n        .attr('class', 'fas fa-sm')\n        .attr('fill', this.colors(0))\n        .attr('x', 20)\n        .attr('y', 31)\n        .text('\\uf06a');\n        this.jobs = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 137)\n        .attr('y', -21)\n        .attr('font-size', 12)\n        .attr('text-anchor', 'end')\n        .text('No jobs');\n        this.successful = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 122)\n        .attr('y', 4)\n        .text('0');\n        this.failed = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 122)\n        .attr('y', 28)\n        .text('0');\n        this.date = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('stroke', 'white')\n        .attr('x', 20)\n        .attr('y', -21)\n        .attr('font-size', 12)\n        .text('Never');\n        this.clickMore = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 20)\n        .attr('y', 55)\n        .attr('font-size', 12)\n        .text('Click for details');\n    }\n\n  handleMouseOver = d => {\n      let success = 0;\n      let fail = 0;\n      let total = 0;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      const formatTooltipDate = d3.timeFormat('%m/%d');\n      if (!d) {\n          return;\n      }\n\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n      if (d) {\n          success = d.RAN || 0;\n          fail = d.FAIL || 0;\n          total = d.TOTAL || 0;\n          this.date.text(formatTooltipDate(d.DATE || null));\n      }\n\n      if (d && d.data) {\n          success = d.data.RAN || 0;\n          fail = d.data.FAIL || 0;\n          total = d.data.TOTAL || 0;\n          this.date.text(formatTooltipDate(d.data.DATE || null));\n      }\n\n      this.jobs.text('' + total + ' jobs');\n      this.jobsWidth = this.jobs.node().getComputedTextLength();\n      this.failed.text('' + fail);\n      this.successful.text('' + success);\n      this.successTextWidth = this.successful.node().getComputedTextLength();\n      this.failTextWidth = this.failed.node().getComputedTextLength();\n\n      const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n      const threshold = 40;\n      const overage = maxTextPerc / threshold;\n      let adjustedWidth;\n      if (maxTextPerc > threshold) {\n          adjustedWidth = this.boxWidth * overage;\n      } else {\n          adjustedWidth = this.boxWidth;\n      }\n\n      this.boundingBox.attr('width', adjustedWidth);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n          this.boundingBox.attr('x', -adjustedWidth - 20);\n          this.circleSuccess.attr('cx', -adjustedWidth);\n          this.circleFail.attr('cx', -adjustedWidth);\n          this.failedIcon.attr('x', -adjustedWidth - 7);\n          this.successIcon.attr('x', -adjustedWidth - 7);\n          this.successText.attr('x', -adjustedWidth + 17);\n          this.failText.attr('x', -adjustedWidth + 17);\n          this.successful.attr('x', -this.successTextWidth - 20 - 12);\n          this.failed.attr('x', -this.failTextWidth - 20 - 12);\n          this.date.attr('x', -adjustedWidth - 5);\n          this.jobs.attr('x', -this.jobsWidth / 2 - 7);\n          this.clickMore.attr('x', -adjustedWidth);\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n          this.boundingBox.attr('x', 10);\n          this.circleSuccess.attr('cx', 26);\n          this.circleFail.attr('cx', 26);\n          this.failedIcon.attr('x', 19);\n          this.successIcon.attr('x', 19);\n          this.successText.attr('x', 43);\n          this.failText.attr('x', 43);\n          this.successful.attr('x', adjustedWidth - this.successTextWidth);\n          this.failed.attr('x', adjustedWidth - this.failTextWidth);\n          this.date.attr('x', 20);\n          this.jobs.attr('x', adjustedWidth);\n          this.clickMore.attr('x', 20);\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nexport default Tooltip;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { stringify } from 'query-string';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\n\nclass BarChart extends Component {\n    constructor(props) {\n        super(props);\n        this.draw = this.draw.bind(this);\n        this.init = this.init.bind(this);\n        this.resize = this.resize.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.state = {\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    redirectToJobExplorer({ data: { DATE: date }}) {\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const { orgId, templateId } = this.props;\n        const initialQueryParams = {\n            start_date: formattedDate,\n            end_date: formattedDate,\n            quick_date_range: 'custom',\n            status: [ 'failed', 'successful' ],\n            template_id: templateId,\n            org_id: orgId\n        };\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    }\n\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => {\n                this.init();\n            }, 500)\n        });\n    }\n\n    init() {\n        this.draw();\n    }\n\n    // Methods\n    draw() {\n    // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const parseTime = d3.timeParse('%Y-%m-%d');\n        let { data: unformattedData } = this.props;\n        const data = unformattedData.reduce(\n            (formatted, { created_date, successful_count, failed_count }) => {\n                let DATE = parseTime(created_date) || new Date();\n                let RAN = +successful_count || 0;\n                let FAIL = +failed_count || 0;\n                let TOTAL = +successful_count + failed_count || 0;\n                return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n            },\n            []\n        );\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n        const x = d3\n        .scaleBand()\n        .rangeRound([ 0, width ])\n        .padding(0.35); // percentage\n        const y = d3.scaleLinear().range([ height, 0 ]);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n        //[fail, success]\n        let colors = d3.scaleOrdinal([ '#6EC664', '#A30000' ]);\n\n        const barTooltip = new Tooltip({\n            svg: '#' + this.props.id,\n            colors\n        });\n        const status = [ 'FAIL', 'RAN' ];\n\n        // stack our data\n        const stack = d3\n        .stack()\n        .keys(status)\n        .order(d3.stackOrderNone)\n        .offset(d3.stackOffsetNone);\n\n        const layers = stack(data);\n        // Scale the range of the data\n        x.domain(layers[0].map(d => d.data.DATE));\n        y.domain([ 0, d3.max(layers[layers.length - 1], d => d[1] * 1.15) || 8 ]);\n        // Add the Y Axis\n        svg\n        .append('g')\n        .attr('class', 'y-axis')\n        .call(d3.axisLeft(y).tickSize(-width, 0, 0))\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.y-axis .tick text').attr('x', -5);\n        // text label for the y axis\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Jobs across all clusters');\n        // Add the X Axis\n        let ticks;\n        const maxTicks = Math.round(data.length / (data.length / 2));\n        ticks = data.map(d => d.DATE);\n        if (data.length > 14) {\n            ticks = data\n            .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n            .filter(item => item);\n        }\n\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(\n            d3\n            .axisBottom(x)\n            .tickValues(ticks)\n            .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n        // text label for the x axis\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n\n        const layer = svg\n        .selectAll('layer')\n        .data(layers)\n        .enter()\n        .append('g')\n        .attr('class', 'layer')\n        .style('fill', (_d, i) => colors(i));\n        layer\n        .selectAll('rect')\n        .data(d => d)\n        .enter()\n        .append('rect')\n        .attr('x', d => x(d.data.DATE))\n        .attr('y', d => y(d[0]))\n        .attr('height', 0)\n        .attr('width', x.bandwidth() - 1)\n        .transition()\n        .duration(550)\n        .ease(d3.easeCubic)\n        .attr('y', d => y(d[1]))\n        .attr('height', d => y(d[0]) - y(d[1]));\n        layer\n        .selectAll('rect')\n        .on('mouseover', barTooltip.handleMouseOver)\n        .on('mousemove', barTooltip.handleMouseOver)\n        .on('mouseout', barTooltip.handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.data !== this.props.data) {\n            this.init();\n        }\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        return <div id={this.props.id} />;\n    }\n}\n\nBarChart.propTypes = {\n    id: PropTypes.string,\n    templateId: PropTypes.array,\n    orgId: PropTypes.array,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    history: PropTypes.object\n};\n\nexport default initializeChart(withRouter(BarChart));\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport initializeChart from './BaseChart';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\nimport { stringify } from 'query-string';\nimport * as d3 from 'd3';\n\nclass LineChart extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.updateCluster = this.updateCluster.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.state = {\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    redirectToJobExplorer({ DATE: date }) {\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const { clusterId, templateId, orgId } = this.props;\n        const initialQueryParams = {\n            start_date: formattedDate,\n            end_date: formattedDate,\n            quick_date_range: 'custom',\n            status: [ 'failed', 'successful' ],\n            cluster_id: clusterId,\n            org_id: orgId,\n            template_id: templateId\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    }\n\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => {\n                this.init();\n            }, 500)\n        });\n    }\n\n    updateCluster() {\n        this.init();\n    }\n    init() {\n        this.draw();\n    }\n    // Methods\n    draw() {\n    // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n\n        function transition(path) {\n            path\n            .transition()\n            .duration(1000)\n            .attrTween('stroke-dasharray', tweenDash);\n        }\n\n        function tweenDash() {\n            const l = this.getTotalLength();\n            const i = d3.interpolateString('0,' + l, l + ',' + l);\n            return function(t) {\n                return i(t);\n            };\n        }\n\n        const x = d3.scaleTime().rangeRound([ 0, width ]);\n        const y = d3.scaleLinear().range([ height, 0 ]);\n\n        //[success, fail, total]\n        let colors = d3.scaleOrdinal([ '#6EC664', '#A30000', '#06C' ]);\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n        .attr('z', 100)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n        // Tooltip\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id,\n            colors\n        });\n        const { data: unformattedData } = this.props;\n        const parseTime = d3.timeParse('%Y-%m-%d');\n\n        const data = unformattedData.reduce(\n            (formatted, { created_date, successful_count, failed_count }) => {\n                let DATE = parseTime(created_date) || new Date();\n                let RAN = +successful_count || 0;\n                let FAIL = +failed_count || 0;\n                let TOTAL = +successful_count + failed_count || 0;\n                return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n            },\n            []\n        );\n        // Scale the range of the data\n        x.domain(\n            d3.extent(data, function(d) {\n                return d.DATE;\n            })\n        );\n        y.domain([\n            0,\n            d3.max(data, function(d) {\n                return d.TOTAL * 1.15 || 8;\n            })\n        ]);\n\n        const successLine = d3\n        .line()\n        .curve(d3.curveMonotoneX)\n        .x(function(d) {\n            return x(d.DATE);\n        })\n        .y(function(d) {\n            return y(d.RAN);\n        });\n\n        const failLine = d3\n        .line()\n        .defined(d => !isNaN(d.FAIL))\n        .curve(d3.curveMonotoneX)\n        .x(function(d) {\n            return x(d.DATE);\n        })\n        .y(function(d) {\n            return y(d.FAIL);\n        });\n        // Add the Y Axis\n        svg\n        .append('g')\n        .attr('class', 'y-axis')\n        .call(\n            d3\n            .axisLeft(y)\n            .ticks(10)\n            .tickSize(-width)\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.y-axis .tick text').attr('x', -5);\n\n        // text label for the y axis\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Job runs');\n        // Add the X Axis\n        let ticks;\n        const maxTicks = Math.round(data.length / (data.length / 2));\n        ticks = data.map(d => d.DATE);\n        if (data.length > 14) {\n            ticks = data\n            .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n            .filter(item => item);\n        }\n\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(\n            d3\n            .axisBottom(x)\n            .tickValues(ticks)\n            .tickSize(-height)\n            .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n        ) // \"Jan-01\"\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n        // text label for the x axis\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n        const vertical = svg\n        .append('path')\n        .attr('class', 'mouse-line')\n        .style('stroke', 'black')\n        .style('stroke-width', '3px')\n        .style('stroke-dasharray', '3, 3')\n        .style('opacity', '0');\n\n        const handleMouseOver = function(d) {\n            tooltip.handleMouseOver(d);\n            // show vertical line\n            vertical.transition().style('opacity', '1');\n        };\n\n        const handleMouseMove = function() {\n            let intersectX = this.cx.baseVal.value;\n            vertical.attr('d', function() {\n                let d = 'M' + intersectX + ',' + height;\n                d += ' ' + intersectX + ',' + 0;\n                return d;\n            });\n        };\n\n        const handleMouseOut = function() {\n            // hide tooltip\n            tooltip.handleMouseOut();\n            // hide vertical line\n            vertical.transition().style('opacity', 0);\n        };\n\n        // Add the successLine path.\n        svg\n        .append('path')\n        .data([ data ])\n        .attr('class', 'line')\n        .style('fill', 'none')\n        .style('stroke', () => colors(1))\n        .attr('stroke-width', 2)\n        .attr('d', successLine)\n        .call(transition);\n\n        // Add the failLine path.\n        svg\n        .append('path')\n        .data([ data ])\n        .attr('class', 'line')\n        .style('fill', 'none')\n        .style('stroke', () => colors(0))\n        .attr('stroke-width', 2)\n        .attr('d', failLine)\n        .call(transition);\n        svg\n        .selectAll('dot')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('r', 3)\n        .style('stroke', () => colors(1))\n        .style('fill', () => colors(1))\n        .attr('cx', function(d) {\n            return x(d.DATE);\n        })\n        .attr('cy', function(d) {\n            return y(d.RAN);\n        })\n\n        .on('mouseover', handleMouseOver)\n        .on('mousemove', handleMouseMove)\n        .on('mouseout', handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n        // create our failLine circles\n        svg\n        .selectAll('dot')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('r', 3)\n        .style('stroke', () => colors(0))\n        .style('fill', () => colors(0))\n        .attr('cx', function(d) {\n            return x(d.DATE);\n        })\n        .attr('cy', function(d) {\n            return y(d.FAIL);\n        })\n        .on('mouseover', handleMouseOver)\n        .on('mousemove', handleMouseMove)\n        .on('mouseout', handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n    }\n\n    componentDidMount() {\n        this.updateCluster();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.data !== this.props.data) {\n            this.updateCluster();\n        }\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        return <div id={this.props.id} />;\n    }\n}\n\nLineChart.propTypes = {\n    id: PropTypes.string,\n    clusterId: PropTypes.array,\n    templateId: PropTypes.array,\n    orgId: PropTypes.array,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    history: PropTypes.object\n};\n\nexport default initializeChart(withRouter(LineChart));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { trimStr } from '../Utilities/helpers';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell\n} from '@patternfly/react-core';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst ModulesList = ({ modules, isLoading }) => (\n    <DataList\n        aria-label=\"Top Modules\"\n        style={{\n            maxHeight: '400px',\n            overflow: 'auto',\n            height: '400px',\n            background: 'white'\n        }}\n    >\n        <DataListItem aria-labelledby=\"top-modules-header\">\n            <DataListCell>\n                <h3>Top modules</h3>\n            </DataListCell>\n            <DataCellEnd>\n                <h3>Usage</h3>\n            </DataCellEnd>\n        </DataListItem>\n        {isLoading && (\n            <PFDataListItem\n                aria-labelledby=\"modules-loading\"\n                key={isLoading}\n                style={{ border: 'none' }}\n            >\n                <PFDataListCell>\n                    <LoadingState />\n                </PFDataListCell>\n            </PFDataListItem>\n        )}\n        {!isLoading && modules.length <= 0 && (\n            <PFDataListItem\n                aria-labelledby=\"modules-no-data\"\n                key={isLoading}\n                style={{ border: 'none' }}\n            >\n                <PFDataListCell>\n                    <NoData />\n                </PFDataListCell>\n            </PFDataListItem>\n        )}\n        {!isLoading &&\n      modules\n      .filter(module => module.name !== null)\n      .map(({ name, host_task_count }, index) => (\n          <DataListItem aria-labelledby=\"top-modules-detail\" key={index}>\n              <DataListCell>\n                  <span>{trimStr(name)}</span>\n              </DataListCell>\n              <DataCellEnd>{host_task_count}</DataCellEnd>\n          </DataListItem>\n      ))}\n    </DataList>\n);\n\nModulesList.propTypes = {\n    modules: PropTypes.array,\n    isLoading: PropTypes.bool\n};\n\nexport default ModulesList;\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport { Paths } from '../paths';\nimport { stringify } from 'query-string';\nimport useApi from '../Utilities/useApi';\nimport { formatDateTime, formatSeconds } from '../Utilities/helpers';\nimport { readJobExplorer } from '../Api';\n\nimport {\n    Button,\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell,\n    Label,\n    Modal\n} from '@patternfly/react-core';\n\nimport { CircleIcon } from '@patternfly/react-icons';\n\nconst success = (\n    <CircleIcon\n        size=\"sm\"\n        key=\"5\"\n        style={{ color: 'rgb(110, 198, 100)', marginRight: '5px' }}\n    />\n);\nconst fail = (\n    <>\n        <CircleIcon\n            size=\"sm\"\n            key=\"5\"\n            style={{ color: 'rgb(163, 0, 0)', marginRight: '5px' }}\n        />\n        <span id=\"fail-icon\">!</span>\n    </>\n);\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\nconst PFDataListItemNoBorder = styled(PFDataListItem)`\n  border-bottom: none;\n  margin-bottom: -20px;\n`;\nconst DataListItemCompact = styled(DataListItem)`\n  padding: 0;\n  > .pf-c-data-list__cell {\n    font-weight: 600;\n  }\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst DataListCellCompact = styled(DataListCell)`\n  padding: 7px;\n`;\n\nconst DataListFocus = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-gap: 10px;\n  padding: var(--pf-global--spacer--lg);\n  background: #ebebeb;\n  border: 1px solid #ccc;\n  border-top: none;\n  margin-bottom: 20px;\n`;\nconst DataCellEndCompact = styled(DataCellEnd)`\n  padding: 7px !important;\n`;\n\nconst formatTopFailedTask = data => {\n    if (!data) {\n        return;\n    }\n\n    if (data && data[0]) {\n        const percentage = Math.ceil(\n            (data[0].failed_count / data[0].total_failed_count) * 100\n        );\n        return `${data[0].task_name} ${percentage}%`;\n    }\n\n    return `Unavailable`;\n};\n\nconst formatTopFailedStep = data => {\n    if (!data) {\n        return;\n    }\n\n    if (data && data[0]) {\n        const percentage = Math.ceil(\n            (data[0].failed_count / data[0].total_failed_count) * 100\n        );\n        return `${data[0].template_name} ${percentage}%`;\n    }\n\n    return `Unavailable`;\n};\n\nconst formatSuccessRate = (successCount, totalCount) =>\n    Math.ceil((successCount / totalCount) * 100) + '%';\nconst formatAvgRun = (elapsed, totalCount) =>\n    new Date(Math.ceil(elapsed / totalCount) * 1000).toISOString().substr(11, 8);\nconst formatTotalTime = elapsed =>\n    new Date(elapsed * 1000).toISOString().substr(11, 8);\n\nconst ModalContents = ({\n    selectedId,\n    isOpen,\n    handleModal,\n    qp,\n    jobType,\n    handleCloseBtn\n}) => {\n    const [\n        {\n            data: { items: relatedJobs = []}\n        },\n        setRelatedJobs\n    ] = useApi({ items: []});\n    const [\n        {\n            data: {\n                items: [ stats = 0 ]\n            }\n        },\n        setStats\n    ] = useApi({ items: []});\n\n    let history = useHistory();\n\n    const redirectToJobExplorer = () => {\n        const { jobExplorer } = Paths;\n        const initialQueryParams = {\n            template_id: [ selectedId ],\n            status: [\n                'successful',\n                'failed',\n                'new',\n                'pending',\n                'waiting',\n                'error',\n                'canceled',\n                'running'\n            ],\n            job_type: [ 'job' ],\n            quick_date_range: 'last_30_days'\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    const relatedTemplateJobsParams = {\n        ...qp,\n        template_id: [ selectedId ],\n        attributes: [\n            'id',\n            'status',\n            'job_type',\n            'started',\n            'finished',\n            'elapsed',\n            'created',\n            'cluster_name',\n            'org_name'\n        ],\n        group_by_time: false,\n        limit: 5,\n        sort_by: 'created:asc',\n        quick_date_range: qp.quick_date_range\n            ? qp.quick_date_range\n            : 'last_30_days',\n        job_type: [ jobType ]\n    };\n\n    const agreggateTemplateParams = {\n        group_by: 'template',\n        template_id: [ selectedId ],\n        attributes: [\n            'elapsed',\n            'job_type',\n            'successful_count',\n            'failed_count',\n            'total_count',\n            jobType === 'job' ? 'most_failed_tasks' : 'most_failed_steps'\n        ],\n        status: qp.status,\n        quick_date_range: qp.quick_date_range\n            ? qp.quick_date_range\n            : 'last_30_days',\n        job_type: [ jobType ]\n    };\n\n    useEffect(() => {\n        if (selectedId) {\n            setStats(readJobExplorer({ params: agreggateTemplateParams }));\n            setRelatedJobs(readJobExplorer({ params: relatedTemplateJobsParams }));\n        }\n    }, [ selectedId ]);\n\n    return (\n        <Modal\n            aria-label=\"modal\"\n            width={'80%'}\n            title={stats.name ? stats.name : 'no-template-name'}\n            isOpen={isOpen}\n            onClose={() => {\n                handleModal(false);\n                handleCloseBtn(null);\n            }}\n            actions={[\n                <Button\n                    key=\"cancel\"\n                    variant=\"secondary\"\n                    onClick={() => {\n                        handleModal(false);\n                        handleCloseBtn(null);\n                    }}\n                >\n          Close\n                </Button>\n            ]}\n        >\n            <DataList aria-label=\"Selected Template Details\">\n                <PFDataListItemNoBorder aria-labelledby=\"Selected Template Statistics\">\n                    <DataListFocus>\n                        <div aria-labelledby=\"job runs\">\n                            <b style={{ marginRight: '10px' }}>Number of runs</b>\n                            {stats.total_count ? stats.total_count : 'Unavailable'}\n                        </div>\n                        <div aria-labelledby=\"total time\">\n                            <b style={{ marginRight: '10px' }}>Total time</b>\n                            {stats.elapsed ? formatTotalTime(stats.elapsed) : 'Unavailable'}\n                        </div>\n                        <div aria-labelledby=\"Avg Time\">\n                            <b style={{ marginRight: '10px' }}>Avg time</b>\n                            {stats.elapsed\n                                ? formatAvgRun(stats.elapsed, stats.total_count)\n                                : 'Unavailable'}\n                        </div>\n                        <div aria-labelledby=\"success rate\">\n                            <b style={{ marginRight: '10px' }}>Success rate</b>\n                            {!isNaN(stats.successful_count)\n                                ? formatSuccessRate(stats.successful_count, stats.total_count)\n                                : 'Unavailable'}\n                        </div>\n                        {stats.most_failed_tasks && (\n                            <div aria-labelledby=\"most failed task\">\n                                <b style={{ marginRight: '10px' }}>Most failed task</b>\n                                {stats.most_failed_tasks\n                                    ? formatTopFailedTask(stats.most_failed_tasks)\n                                    : 'Unavailable'}\n                            </div>\n                        )}\n                        {stats.most_failed_steps && (\n                            <div aria-labelledby=\"most failed step\">\n                                <b style={{ marginRight: '10px' }}>Most failed step</b>\n                                {stats.most_failed_steps\n                                    ? formatTopFailedStep(stats.most_failed_steps)\n                                    : 'Unavailable'}\n                            </div>\n                        )}\n                    </DataListFocus>\n                </PFDataListItemNoBorder>\n                <DataListItemCompact>\n                    <DataListCellCompact key=\"last5jobs\">\n                        <Label variant=\"outline\">Last 5 jobs</Label>\n                    </DataListCellCompact>\n          ,\n                    <DataCellEndCompact>\n                        <Button\n                            component=\"a\"\n                            onClick={redirectToJobExplorer}\n                            variant=\"link\"\n                        >\n              View all jobs\n                        </Button>\n                    </DataCellEndCompact>\n                </DataListItemCompact>\n                <DataListItemCompact aria-labelledby=\"datalist header\">\n                    <PFDataListCell key=\"job heading\">Id/Name</PFDataListCell>\n                    <PFDataListCell key=\"cluster heading\">Cluster</PFDataListCell>\n                    <PFDataListCell key=\"start time heading\">Start Time</PFDataListCell>\n                    <PFDataListCell key=\"total time heading\">Total Time</PFDataListCell>\n                </DataListItemCompact>\n                {relatedJobs.length <= 0 && <LoadingState />}\n                {relatedJobs.length > 0 &&\n          relatedJobs.map((job, index) => (\n              <DataListItem\n                  style={{ padding: '10px 0' }}\n                  key={`job-details-${index}`}\n                  aria-labelledby=\"job details\"\n              >\n                  <PFDataListCell key=\"job name\">\n                      {job.status === 'successful' ? success : fail} {job.id.id} -{' '}\n                      {job.id.template_name}\n                  </PFDataListCell>\n                  <PFDataListCell key=\"job cluster\">\n                      {job.cluster_name}\n                  </PFDataListCell>\n                  <PFDataListCell key=\"start time\">\n                      {formatDateTime(job.started)}\n                  </PFDataListCell>\n                  <PFDataListCell key=\"total time\">\n                      {formatSeconds(job.elapsed)}\n                  </PFDataListCell>\n              </DataListItem>\n          ))}\n            </DataList>\n        </Modal>\n    );\n};\n\nModalContents.propTypes = {\n    selectedId: PropTypes.number,\n    qp: PropTypes.object,\n    jobType: PropTypes.string,\n    handleCloseBtn: PropTypes.func,\n    isOpen: PropTypes.bool,\n    handleModal: PropTypes.func\n};\n\nexport default ModalContents;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell\n} from '@patternfly/react-core';\n\nimport ModalContents from './ModalContents';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst TemplatesList = ({ templates, isLoading, qp, title, jobType }) => {\n    const [ selectedId, setSelectedId ] = useState(null);\n    const [ isModalOpen, setIsModalOpen ] = useState(false);\n\n    return (\n        <>\n            <DataList\n                aria-label=\"Top Templates\"\n                style={{\n                    maxHeight: '400px',\n                    overflow: 'auto',\n                    height: '400px',\n                    background: 'white'\n                }}\n            >\n                <DataListItem aria-labelledby=\"top-templates-header\">\n                    <DataListCell>\n                        <h3>{title}</h3>\n                    </DataListCell>\n                    <DataCellEnd>\n                        <h3>Usage</h3>\n                    </DataCellEnd>\n                </DataListItem>\n                {isLoading && (\n                    <PFDataListItem\n                        aria-labelledby=\"templates-loading\"\n                        key={isLoading}\n                        style={{ border: 'none' }}\n                    >\n                        <PFDataListCell>\n                            <LoadingState />\n                        </PFDataListCell>\n                    </PFDataListItem>\n                )}\n                {!isLoading && templates.length <= 0 && (\n                    <PFDataListItem\n                        aria-labelledby=\"templates-no-data\"\n                        key={isLoading}\n                        style={{ border: 'none' }}\n                    >\n                        <PFDataListCell>\n                            <NoData />\n                        </PFDataListCell>\n                    </PFDataListItem>\n                )}\n                {!isLoading &&\n          templates.map(({ name, total_count, id }, index) => (\n              <DataListItem aria-labelledby=\"top-templates-detail\" key={index}>\n                  <DataListCell>\n                      <a\n                          onClick={() => {\n                              setIsModalOpen(true);\n                              setSelectedId(id);\n                          }}\n                      >\n                          {name}\n                      </a>\n                  </DataListCell>\n                  <DataCellEnd>{total_count}</DataCellEnd>\n              </DataListItem>\n          ))}\n            </DataList>\n            <ModalContents\n                isOpen={isModalOpen}\n                handleModal={setIsModalOpen}\n                selectedId={selectedId}\n                qp={qp}\n                jobType={jobType}\n                handleCloseBtn={setSelectedId}\n            />\n        </>\n    );\n};\n\nTemplatesList.propTypes = {\n    templates: PropTypes.array,\n    isLoading: PropTypes.bool,\n    queryParams: PropTypes.object,\n    title: PropTypes.string\n};\n\nexport default TemplatesList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport {\n    preflightRequest,\n    readClustersOptions,\n    readJobExplorer,\n    readEventExplorer\n} from '../../Api';\n\nimport { jobExplorer } from '../../Utilities/constants';\nimport useApi from '../../Utilities/useApi';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle\n} from '@patternfly/react-core';\n\nimport BarChart from '../../Charts/BarChart';\nimport LineChart from '../../Charts/LineChart';\nimport ModulesList from '../../Components/ModulesList';\nimport TemplatesList from '../../Components/TemplatesList';\nimport FilterableToolbar from '../../Components/Toolbar';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport { clusters } from '../../Utilities/constants';\n\nconst initialTopTemplateParams = {\n    group_by: 'template',\n    limit: 10,\n    job_type: [ 'job' ],\n    group_by_time: false,\n    status: [ 'successful', 'failed' ]\n};\n\nconst initialTopWorkflowParams = {\n    group_by: 'template',\n    limit: 10,\n    job_type: [ 'workflowjob' ],\n    group_by_time: false,\n    status: [ 'successful', 'failed' ]\n};\n\nconst initialModuleParams = {\n    group_by: 'module',\n    sort_by: 'host_task_count:desc',\n    limit: 10\n};\n\nconst Clusters = () => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n\n    const optionsMapper = options => {\n        const { groupBy, attributes, ...rest } = options;\n        return rest;\n    };\n\n    const { queryParams, setFromToolbar } = useQueryParams({\n        ...clusters.defaultParams\n    });\n\n    const [\n        {\n            isLoading,\n            isSuccess,\n            error,\n            data: { items: chartData = []}\n        },\n        setData\n    ] = useApi({ items: []});\n\n    const [\n        {\n            data: { items: templates = []}\n        },\n        setTemplates\n    ] = useApi({ items: []});\n    const [\n        {\n            data: { items: workflows = []}\n        },\n        setWorkflows\n    ] = useApi({ items: []});\n    const [\n        {\n            data: { items: modules = []}\n        },\n        setModules\n    ] = useApi({ items: []});\n    const [{ data: options = []}, setOptions ] = useApi({}, optionsMapper);\n\n    const initialOptionsParams = {\n        attributes: jobExplorer.attributes\n    };\n\n    const { queryParams: optionsQueryParams } = useQueryParams(\n        initialOptionsParams\n    );\n\n    const {\n        cluster_id,\n        org_id,\n        template_id,\n        quick_date_range,\n        start_date,\n        end_date\n    } = queryParams;\n\n    const topTemplatesParams = {\n        cluster_id,\n        org_id,\n        template_id,\n        quick_date_range,\n        start_date,\n        end_date,\n        ...initialTopTemplateParams\n    };\n\n    const topWorkflowParams = {\n        cluster_id,\n        org_id,\n        template_id,\n        quick_date_range,\n        start_date,\n        end_date,\n        ...initialTopWorkflowParams\n    };\n\n    const topModuleParams = {\n        cluster_id,\n        org_id,\n        template_id,\n        quick_date_range,\n        start_date,\n        end_date,\n        ...initialModuleParams\n    };\n\n    useEffect(() => {\n        async function initializeWithPreflight() {\n            await window.insights.chrome.auth.getUser();\n            await preflightRequest().catch(error => {\n                setPreFlightError({ preflightError: error });\n            });\n            setOptions(readClustersOptions({ params: optionsQueryParams }));\n        }\n\n        initializeWithPreflight();\n    }, []);\n\n    // Get and update the data\n    useEffect(() => {\n        const fetchEndpoints = () => {\n            setData(readJobExplorer({ params: queryParams }));\n            setTemplates(readJobExplorer({ params: topTemplatesParams }));\n            setWorkflows(readJobExplorer({ params: topWorkflowParams }));\n            setModules(readEventExplorer({ params: topModuleParams }));\n        };\n\n        fetchEndpoints();\n    }, [ queryParams ]);\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={'Clusters'} />\n                <FilterableToolbar\n                    categories={options}\n                    filters={queryParams}\n                    setFilters={setFromToolbar}\n                />\n            </PageHeader>\n            {preflightError && (\n                <Main>\n                    <EmptyState {...preflightError} />\n                </Main>\n            )}\n            {error && (\n                <Main>\n                    <ApiErrorState message={error.error} />\n                </Main>\n            )}\n            {!preflightError && !error && (\n                <>\n                    <Main>\n                        <Card>\n                            <PFCardTitle>\n                                <h2>Job status</h2>\n                            </PFCardTitle>\n                            <CardBody>\n                                {isLoading && <LoadingState />}\n                                {queryParams.cluster_id.length <= 0 && isSuccess && (\n                                    <BarChart\n                                        margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                                        id=\"d3-bar-chart-root\"\n                                        data={chartData}\n                                        templateId={queryParams.template_id}\n                                        orgId={queryParams.org_id}\n                                    />\n                                )}\n                                {queryParams.cluster_id.length > 0 && isSuccess && (\n                                    <LineChart\n                                        margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                                        id=\"d3-line-chart-root\"\n                                        data={chartData}\n                                        clusterId={queryParams.cluster_id}\n                                        templateId={queryParams.template_id}\n                                        orgId={queryParams.org_id}\n                                    />\n                                )}\n                            </CardBody>\n                        </Card>\n                        <div\n                            className=\"dataCard\"\n                            style={{ display: 'flex', marginTop: '20px' }}\n                        >\n                            <TemplatesList\n                                qp={queryParams}\n                                templates={workflows}\n                                isLoading={isLoading}\n                                title={'Top workflows'}\n                                jobType={'workflowjob'}\n                            />\n                            <TemplatesList\n                                qp={queryParams}\n                                templates={templates}\n                                isLoading={isLoading}\n                                title={'Top templates'}\n                                jobType={'job'}\n                            />\n                            <ModulesList modules={modules} isLoading={isLoading} />\n                        </div>\n                    </Main>\n                </>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default Clusters;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Switch as PFSwitch } from '@patternfly/react-core';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  overflow: auto;\n  width: 100%;\n  height: ${props => props.height};\n`;\n\nconst LegendDetail = styled.div`\n  display: flex;\n  padding: 7.5px 15px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  overflow: auto;\n`;\n\nconst Color = styled.div.attrs(props => ({\n    color: props.color || 'black'\n}))`\n  min-width: 12px;\n  height: 12px;\n  background: ${props => props.color};\n  margin-right: 20px;\n`;\n\nconst Title = styled.span`\n  font-size: 15px;\n  display: inline-block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n`;\n\nconst SubTitle = styled.span`\n  font-size: 15px;\n  margin-left: 20px;\n`;\n\nconst Switch = styled(PFSwitch)`\n  margin-left: 20px;\n\n  svg {\n    display: none;\n  }\n`;\n\nconst Legend = ({\n    data,\n    selected,\n    height,\n    onToggle\n}) => {\n    const handleChange = (_isChecked, { target: { value }}) => { onToggle(parseFloat(value)); };\n\n    return (\n        <Container height={ height }>\n            { data.map(\n                ({ name, value, id, count }, index) => (\n                    <LegendDetail key={ index }>\n                        <Wrapper>\n                            <Color color={ value } />\n                            <Title>{ name }</Title>\n                        </Wrapper>\n                        { count && (\n                            <SubTitle>{ count }</SubTitle>\n                        ) }\n                        { selected && (\n                            <Switch\n                                isChecked={ selected.some(selection => selection === id) }\n                                onChange={ handleChange }\n                                aria-label={ name }\n                                value={ id }\n                                key={ index }\n                            />\n                        ) }\n                    </LegendDetail>\n                )) }\n        </Container>\n    );\n};\n\nLegend.propTypes = {\n    data: PropTypes.array,\n    selected: PropTypes.array,\n    onToggle: PropTypes.func,\n    height: PropTypes.string\n};\n\nexport default Legend;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\n\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport Legend from '../Utilities/Legend';\nimport { Paths } from '../paths';\nimport { stringify } from 'query-string';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nconst formatDate = date => {\n    const pieces = date.split('-');\n    return `${pieces[1]}/${pieces[2]}`;\n};\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        this.draw();\n    }\n\n    draw() {\n        this.width = 125;\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 125;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', 68)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.date = this.toolTipBase\n        .append('text')\n        .attr('x', 20)\n        .attr('y', 14)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Date');\n        this.jobs = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 72)\n        .attr('y', 14)\n        .text('0 Jobs');\n        this.orgName = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', -1)\n        .attr('font-size', 12)\n        .text('Org');\n        this.clickMore = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 20)\n        .attr('y', 30)\n        .attr('font-size', 12)\n        .text('Click for details');\n    }\n\n  handleMouseOver = d => {\n      let date;\n      let orgName;\n      let jobs;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      if (!d) {\n          return;\n      } else {\n          const maxLength = 16;\n          date = d.date;\n          orgName = d.name;\n          jobs = d.value;\n          if (d.name.length > maxLength) {\n              orgName = d.name.slice(0, maxLength).concat('...');\n          }\n      }\n\n      const formatTooltipDate = formatDate;\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n\n      this.date.text('' + formatTooltipDate(date));\n      this.orgName.text('' + orgName);\n      this.jobs.text('' + jobs + ' Jobs');\n      this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n      const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n      const threshold = 45;\n      const overage = maxTextPerc / threshold;\n      let adjustedWidth;\n      if (maxTextPerc > threshold) {\n          adjustedWidth = this.boxWidth * overage;\n      } else {\n          adjustedWidth = this.boxWidth;\n      }\n\n      this.boundingBox.attr('width', adjustedWidth);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n          this.boundingBox.attr('x', -adjustedWidth - 20);\n          this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n          this.orgName.attr('x', -adjustedWidth - 7);\n          this.clickMore.attr('x', -adjustedWidth - 7);\n          this.date.attr('x', -adjustedWidth - 7);\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n          this.boundingBox.attr('x', 10);\n          this.orgName.attr('x', 20);\n          this.clickMore.attr('x', 20);\n          this.jobs.attr('x', adjustedWidth / 2);\n          this.date.attr('x', 20);\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nconst GroupedBarChart = (props) => {\n    const orgsList = props.data[0].items;\n    const colors = orgsList.map(org => {\n        const name = org.id === -1 ? 'Others' : org.name;\n        return {\n            name,\n            value: props.colorFunc(name),\n            id: org.id\n        };\n    });\n    const [ selectedIds, setSelectedIds ] = useState(\n        orgsList.map(({ id }) => id).slice(0, 8)\n    );\n    let timeout = null;\n\n    const redirectToJobExplorer = ({ date, id }) => {\n        if (id === -1) {\n            // disable clicking on \"others\" block\n            return;\n        }\n\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const initialQueryParams = {\n            quick_date_range: 'custom',\n            start_date: formattedDate,\n            end_date: formattedDate,\n            status: [\n                'successful',\n                'failed',\n                'new',\n                'pending',\n                'waiting',\n                'error',\n                'canceled',\n                'running'\n            ],\n            org_id: [ id ]\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    const handleToggle = id => {\n        if (selectedIds.includes(id)) {\n            setSelectedIds(selectedIds.filter(el => el !== id));\n        } else {\n            setSelectedIds([ ...selectedIds, id ]);\n        }\n    };\n\n    const draw = () => {\n        // Clear our chart container element first\n        d3.selectAll('#' + props.id + ' > *').remove();\n        let { data: unformattedData, timeFrame } = props;\n        const data = unformattedData.reduce((formatted, { date, items }) => {\n            const selectedOrgs = items.filter(({ id }) => selectedIds.includes(id));\n            return formatted.concat({ date, selectedOrgs });\n        }, []);\n        const width = props.getWidth();\n        const height = props.getHeight();\n        // x scale of entire chart\n        const x0 = d3\n        .scaleBand()\n        .range([ 0, width ])\n        .padding(0.35);\n        // x scale of individual grouped bars\n        const x1 = d3.scaleBand();\n        const y = d3.scaleLinear().range([ height, 0 ]);\n        // format our X Axis ticks\n        const maxTicks = Math.round(data.length / (timeFrame / 2));\n        let ticks = data.map(d => d.date);\n        if (timeFrame === 31) {\n            ticks = data\n            .map((d, i) => (i % maxTicks === 0 ? d.date : undefined))\n            .filter(item => item);\n        }\n\n        const xAxis = d3\n        .axisBottom(x0)\n        .tickValues(ticks)\n        .tickFormat(formatDate);\n\n        const yAxis = d3\n        .axisLeft(y)\n        .ticks(8)\n        .tickSize(-width, 0, 0);\n\n        const svg = d3\n        .select('#' + props.id)\n        .append('svg')\n        .attr('width', width + props.margin.left + props.margin.right)\n        .attr('height', height + props.margin.bottom + props.margin.top)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          props.margin.left +\n          ',' +\n          props.margin.top +\n          ')'\n        );\n\n        const dates = data.map(d => d.date);\n        const selectedOrgNames = data[0].selectedOrgs.map(d => d.name);\n        const tooltip = new Tooltip({\n            svg: '#' + props.id\n        });\n        x0.domain(dates);\n        x1.domain(selectedOrgNames).range([ 0, x0.bandwidth() ]); // unsorted\n        y.domain([\n            0,\n            d3.max(data, date => d3.max(date.selectedOrgs, d => d.value * 1.15)) || 8\n        ]);\n\n        // add y axis\n        svg\n        .append('g')\n        .attr('class', 'y axis')\n        .call(yAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7')\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 6)\n        .attr('dy', '.71em')\n        .style('text-anchor', 'end')\n        .style('font-weight', 'bold')\n        .text('Value');\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Jobs across orgs');\n\n        // add x axis\n        svg\n        .append('g')\n        .attr('class', 'x axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(xAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' + width / 2 + ' ,' + (height + props.margin.top + 25) + ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n        // add the groups\n        let slice = svg.selectAll('.slice').data(data);\n        slice.exit().remove();\n\n        const enter = slice\n        .enter()\n        .append('g')\n        .attr('class', 'g foo')\n        .attr('transform', d => 'translate(' + x0(d.date) + ',0)');\n        slice = slice.merge(enter);\n        // add the individual bars\n        let bars = slice.selectAll('rect').data(function(d) {\n            return d.selectedOrgs;\n        });\n        bars.exit().remove();\n\n        const color = props.colorFunc;\n        const subEnter = bars\n        .enter()\n        .append('rect')\n        .attr('width', x1.bandwidth())\n        .attr('x', function(d) {\n            return x1(d.name);\n        }) // unsorted\n        .style('fill', function(d) {\n            return color(d.name);\n        })\n        .attr('y', function(d) {\n            return y(d.value);\n        })\n        .attr('height', function(d) {\n            return height - y(d.value);\n        })\n        .on('mouseover', function(d) {\n            d3.select(this).style('fill', d3.rgb(color(d.name)).darker(1));\n            tooltip.handleMouseOver();\n        })\n        .on('mousemove', tooltip.handleMouseOver)\n        .on('mouseout', function(d) {\n            d3.select(this).style('fill', color(d.name));\n            tooltip.handleMouseOut();\n        })\n        .on('click', redirectToJobExplorer);\n        bars = bars.merge(subEnter);\n    };\n\n    const init = () => {\n        draw();\n    };\n\n    const resize = () => {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => { draw(); }, 500);\n    };\n\n    useEffect(() => {\n        init();\n        window.addEventListener('resize', resize);\n\n        return () => {\n            clearTimeout(timeout);\n            window.removeEventListener('resize', resize);\n        };\n    }, []);\n\n    useEffect(() => { draw(); }, [ props.data, selectedIds ]);\n\n    return (\n        <Wrapper>\n            <div id={ props.id } />\n            { colors.length > 0 && (\n                <Legend\n                    id={ `${props.id}-legend` }\n                    data={ colors }\n                    selected={ selectedIds }\n                    onToggle={ handleToggle }\n                    height=\"350px\"\n                />\n            ) }\n        </Wrapper>\n    );\n};\n\nGroupedBarChart.propTypes = {\n    id: PropTypes.string,\n    isAccessible: PropTypes.bool,\n    data: PropTypes.array,\n    value: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    timeFrame: PropTypes.number,\n    history: PropTypes.object,\n    colorFunc: PropTypes.func\n};\n\nexport default initializeChart(GroupedBarChart);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport { getTotal } from '../Utilities/helpers';\nimport Legend from '../Utilities/Legend';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        // defer drawing until we know the data shape\n        this.drawn = false;\n        // show the success rate or not\n        this.showSuccess = false;\n    }\n\n    draw(d) {\n    // chart1 has success rate data and chart2 does not ...\n        this.showSuccess = d && d.data && 'success_rate' in d.data ? true : false;\n        const boundingHeight = this.showSuccess ? 70 : 52;\n        const boundingWidth = this.showSuccess ? 120 : 108;\n\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBOx = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', boundingHeight)\n        .attr('width', boundingWidth)\n        .attr('fill', '#393f44');\n        this.orgName = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 0)\n        .text('Organization');\n        this.percentageTotal = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 16)\n        .text('0');\n        this.percentageSuccess = null;\n        if (this.showSuccess) {\n            this.percentageSuccess = this.toolTipBase\n            .append('text')\n            .attr('fill', 'white')\n            .attr('font-size', 12)\n            .attr('font-weight', 800)\n            .attr('x', 20)\n            .attr('y', 30)\n            .text('');\n        }\n    }\n\n  handleMouseOver = d => {\n      // treat draw() as a singleton to avoid a painted window effect\n      if (this.drawn !== true) {\n          this.draw(d);\n          this.drawn = true;\n      }\n\n      let perc;\n      let percSuccess;\n      let orgName;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      if (!d) {\n          return;\n      }\n\n      if (d && d.data) {\n          const maxLength = 16;\n          perc = d.data.percent;\n          percSuccess = d.data.success_rate;\n          orgName = d.data.name;\n          if (d.data.name.length > maxLength) {\n              orgName = d.data.name.slice(0, maxLength - 3).concat('...');\n          }\n      }\n\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n\n      this.percentageTotal.text('' + perc + '%');\n      if (percSuccess && this.percentageSuccess) {\n          this.percentageSuccess.text('(' + percSuccess + '% successful)');\n      }\n\n      this.orgName.text(' ' + orgName);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, -10) rotate(45)');\n          this.boundingBOx.attr('x', -125);\n          this.orgName.attr('x', -112);\n          this.percentageTotal.attr('x', -112);\n          if (this.showSuccess) {\n              this.percentageSuccess.attr('x', -112);\n          }\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, -10) rotate(45)');\n          this.boundingBOx.attr('x', 10);\n          this.orgName.attr('x', 20);\n          this.percentageTotal.attr('x', 20);\n          if (this.showSuccess) {\n              this.percentageSuccess.attr('x', 20);\n          }\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nconst PieChart = ({\n    data,\n    id,\n    colorFunc: color,\n    margin,\n    getWidth,\n    getHeight\n}) => {\n    const colors = data.map(org => {\n        const name = org.id === -1 ? 'Others' : org.name;\n        return {\n            id: org.id,\n            name,\n            value: color(name),\n            count: Math.round(org.count)\n        };\n    }).sort((a, b) => (a.count > b.count) ? 1 : ((b.count > a.count) ? -1 : 0));\n\n    const [ selectedIds, setSelectedIds ] = useState(\n        data.map(({ id }) => id).slice(0, 8));\n\n    let timeout = null;\n\n    const handleToggle = id => {\n        if (selectedIds.includes(id)) {\n            setSelectedIds(selectedIds.filter(el => el !== id));\n        } else {\n            setSelectedIds([ ...selectedIds, id ]);\n        }\n    };\n\n    const draw = () => {\n        d3.selectAll('#' + id + ' > *').remove();\n        const width = getWidth();\n        const height = getHeight();\n        const svg = d3\n        .select('#' + id)\n        .append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.bottom)\n        .append('g');\n\n        svg.append('g').attr('class', 'slices');\n        svg.append('g').attr('class', 'labels');\n        svg.append('g').attr('class', 'lines');\n        const radius = Math.min(width, height) / 2;\n        const filteredData = data.filter(({ id }) => selectedIds.includes(id));\n        const total = getTotal(filteredData);\n        filteredData.forEach(function(d) {\n            d.count = +d.count;\n            d.percent = +Math.round((d.count / total) * 100);\n        });\n        const donutTooltip = new Tooltip({\n            svg: '#' + id\n        });\n        const pie = d3\n        .pie()\n        .sort(null)\n        .value(d => d.count);\n        const arc = d3\n        .arc()\n        .outerRadius(radius - 10) // controls top positioning of chart\n        .innerRadius(0);\n\n        svg.attr(\n            'transform',\n            'translate(' +\n        (width + margin.left + margin.right) / 2 +\n        ',' +\n        (height + margin.top + margin.bottom) / 2 +\n        ')'\n        );\n\n        svg\n        .selectAll('path')\n        .data(pie(filteredData))\n        .enter()\n        .append('path')\n        .attr('d', arc)\n        .attr('fill', d => color(d.data.name));\n\n        svg\n        .selectAll('path')\n        .on('mouseover', function(d) {\n            d3.select(this).style('fill', d3.rgb(color(d.data.name)).darker(1));\n            donutTooltip.handleMouseOver(d);\n        })\n        .on('mouseout', function(d) {\n            d3.select(this).style('fill', color(d.data.name));\n            donutTooltip.handleMouseOut();\n        })\n        .on('mousemove', donutTooltip.handleMouseOver);\n\n        svg.append('g').classed('labels', true);\n        svg.append('g').classed('lines', true);\n    };\n\n    const init = () => {\n        draw();\n    };\n\n    const resize = () => {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => { draw(); }, 500);\n    };\n\n    useEffect(() => {\n        init();\n        window.addEventListener('resize', resize);\n\n        return () => {\n            clearTimeout(timeout);\n            window.removeEventListener('resize', this.resize);\n        };\n    }, []);\n\n    useEffect(() => { draw(); }, [ data, selectedIds ]);\n\n    return (\n        <Wrapper>\n            <div id={ id } />\n            { colors.length > 0 && (\n                <Legend\n                    id={ `${id}-legend` }\n                    data={ colors }\n                    selected={ selectedIds }\n                    onToggle={ handleToggle }\n                    height=\"300px\"\n                />\n            ) }\n        </Wrapper>\n    );\n};\n\nPieChart.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    timeFrame: PropTypes.number,\n    colorFunc: PropTypes.func\n};\n\nexport default initializeChart(PieChart);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\n\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport {\n    preflightRequest,\n    readJobsByDateAndOrg,\n    readJobRunsByOrg,\n    readJobEventsByOrg,\n    readOrgOptions\n} from '../../Api';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle\n} from '@patternfly/react-core';\n\nimport GroupedBarChart from '../../Charts/GroupedBarChart';\nimport PieChart from '../../Charts/PieChart';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport { organizationStatistics as constants } from '../../Utilities/constants';\n\n// For chart colors\nimport { pfmulti } from '../../Utilities/colors';\nimport { scaleOrdinal } from 'd3';\n\nconst CardTitle = styled(PFCardTitle)`\n  border-bottom: 2px solid #ebebeb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &&& {\n    min-height: 60px;\n    --pf-c-card--first-child--PaddingTop: 10px;\n    --pf-c-card__header--not-last-child--PaddingBottom: 10px;\n\n    h3 {\n      font-size: 0.875em;\n    }\n  }\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  overflow: hidden;\n\n  .pf-c-card {\n    width: 50%;\n    margin-top: 20px;\n    overflow: auto;\n  }\n\n  .pf-c-card:first-of-type {\n    margin-right: 20px;\n  }\n`;\n\nconst TopCard = styled(Card)`\n  min-height: 500px;\n`;\n\nconst colorFunc = scaleOrdinal(pfmulti);\n\nconst optionsMapper = options => {\n    const { meta, inventory_id, ...rest } = options;\n    return { ...rest, sort_by: meta.sort_by };\n};\n\nconst orgsChartMapper = ({ dates: data = []}) =>\n    data.map(({ date, items }) => ({\n        date,\n        items: items.map(({ id, total_count, name }) => ({\n            id,\n            date,\n            value: total_count,\n            name: id === -1 ? 'Others' : name || 'No organization'\n        }))\n    }));\n\nconst pieChartMapper = attrName => ({ items = []}) =>\n    items.map(({ id, [attrName]: count, name }) => ({\n        id,\n        count,\n        name: id === -1 ? 'Others' : name || 'No organization'\n    }));\n\nconst OrganizationStatistics = ({ history }) => {\n    const [ preflight, setPreflight ] = useApi(null);\n    const [ orgs, setOrgs ] = useApi([], orgsChartMapper);\n    const [ jobs, setJobs ] = useApi([], pieChartMapper('host_count'));\n    const [ tasks, setTasks ] = useApi([], pieChartMapper('host_task_count'));\n    const [ options, setOptions ] = useApi({}, optionsMapper);\n    const { queryParams, setFromToolbar } = useQueryParams(\n        constants.defaultParams\n    );\n\n    useEffect(() => {\n        insights.chrome.appNavClick({\n            id: 'organization-statistics',\n            secondaryNav: true\n        });\n        setPreflight(preflightRequest());\n        setOptions(readOrgOptions({ params: queryParams }));\n    }, []);\n\n    useEffect(() => {\n        setOrgs(readJobsByDateAndOrg({ params: queryParams }));\n        setJobs(readJobRunsByOrg({ params: queryParams }));\n        setTasks(readJobEventsByOrg({ params: queryParams }));\n    }, [ queryParams ]);\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={'Organization Statistics'} />\n            </PageHeader>\n            {preflight.error && (\n                <Main>\n                    <EmptyState preflightError={preflight.error} />\n                </Main>\n            )}\n            {preflight.isSuccess && (\n                <React.Fragment>\n                    <Main style={{ paddingBottom: '0' }}>\n                        <Card>\n                            <CardBody>\n                                <FilterableToolbar\n                                    categories={options.data}\n                                    filters={queryParams}\n                                    setFilters={setFromToolbar}\n                                />\n                            </CardBody>\n                        </Card>\n                    </Main>\n                    <Main>\n                        <TopCard>\n                            <CardTitle>\n                                <h2>Organization Status</h2>\n                            </CardTitle>\n                            <CardBody>\n                                {orgs.isLoading && <LoadingState />}\n                                {orgs.error && <ApiErrorState message={orgs.error.error} />}\n                                {orgs.isSuccess && orgs.data.length <= 0 && <NoData />}\n                                {orgs.isSuccess && orgs.data.length > 0 && (\n                                    <GroupedBarChart\n                                        margin={{ top: 20, right: 20, bottom: 50, left: 50 }}\n                                        id=\"d3-grouped-bar-chart-root\"\n                                        data={orgs.data}\n                                        history={history}\n                                        timeFrame={orgs.data.length}\n                                        colorFunc={colorFunc}\n                                    />\n                                )}\n                            </CardBody>\n                        </TopCard>\n                        <CardContainer>\n                            <Card>\n                                <CardBody style={{ padding: 0 }}>\n                                    <CardTitle style={{ padding: 0 }}>\n                                        <h2 style={{ marginLeft: '20px' }}>\n                      Job Runs by Organization\n                                        </h2>\n                                    </CardTitle>\n                                    {jobs.isLoading && <LoadingState />}\n                                    {jobs.error && <ApiErrorState message={jobs.error.error} />}\n                                    {jobs.isSuccess && jobs.data.length <= 0 && <NoData />}\n                                    {jobs.isSuccess && jobs.data.length > 0 && (\n                                        <PieChart\n                                            margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                                            id=\"d3-donut-1-chart-root\"\n                                            data={jobs.data}\n                                            timeFrame={jobs.data.length}\n                                            colorFunc={colorFunc}\n                                        />\n                                    )}\n                                </CardBody>\n                            </Card>\n                            <Card>\n                                <CardBody style={{ padding: 0 }}>\n                                    <CardTitle style={{ padding: 0 }}>\n                                        <h2 style={{ marginLeft: '20px' }}>\n                      Usage by Organization (Tasks)\n                                        </h2>\n                                    </CardTitle>\n                                    {tasks.isLoading && <LoadingState />}\n                                    {tasks.error && <ApiErrorState message={tasks.error.error} />}\n                                    {tasks.isSuccess && tasks.data.length <= 0 && <NoData />}\n                                    {tasks.isSuccess && tasks.data.length > 0 && (\n                                        <PieChart\n                                            margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                                            id=\"d3-donut-2-chart-root\"\n                                            data={tasks.data}\n                                            timeFrame={tasks.data.length}\n                                            colorFunc={colorFunc}\n                                        />\n                                    )}\n                                </CardBody>\n                            </Card>\n                        </CardContainer>\n                    </Main>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n};\n\nOrganizationStatistics.propTypes = {\n    history: PropTypes.object\n};\n\nexport default OrganizationStatistics;\n","const pfmulti = [\n    '#06C',\n    '#4CB140',\n    '#009596',\n    '#5752D1',\n    '#F4C145',\n    '#EC7A08',\n    '#8BC1F7',\n    '#23511E',\n    '#A2D9D9',\n    '#2A265F',\n    '#F9E0A2',\n    '#8F4700',\n    '#002F5D'\n];\n\nexport { pfmulti };\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst NoResults = () => {\n    return (\n        <EmptyState variant={EmptyStateVariant.full}>\n            <EmptyStateIcon icon={SearchIcon} />\n            <Title size=\"lg\" headingLevel=\"h4\">\n        No results found\n            </Title>\n            <EmptyStateBody>\n        No results match the filter criteria. Remove all filters or clear all\n        filters to show results.\n            </EmptyStateBody>\n        </EmptyState>\n    );\n};\n\nexport default NoResults;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from '@patternfly/react-core';\nimport {\n    CheckCircleIcon,\n    ExclamationCircleIcon,\n    ClockIcon,\n    SyncAltIcon,\n    ExclamationTriangleIcon\n} from '@patternfly/react-icons';\n\nconst JobStatus = ({ status }) => {\n    const capitalized = str => str.charAt(0).toUpperCase() + str.slice(1);\n\n    const getColor = () => {\n        switch (status) {\n            case 'successful':\n                return 'green';\n            case 'failed':\n            case 'error':\n                return 'red';\n            case 'running':\n            case 'pending':\n                return 'blue';\n            case 'canceled':\n                return 'orange';\n                // case new, waiting\n            default:\n                return 'grey';\n        }\n    };\n\n    const getIcon = () => {\n        switch (status) {\n            case 'successful':\n                return <CheckCircleIcon />;\n            case 'failed':\n            case 'error':\n                return <ExclamationCircleIcon />;\n            case 'running':\n                return <SyncAltIcon />;\n            case 'canceled':\n                return <ExclamationTriangleIcon />;\n                // case new, waiting, pending\n            default:\n                return <ClockIcon />;\n        }\n    };\n\n    return (\n        <Label variant=\"outline\" color={getColor()} icon={getIcon()}>\n            {capitalized(status)}\n        </Label>\n    );\n};\n\nJobStatus.propTypes = {\n    status: PropTypes.oneOf([\n        'successful',\n        'failed',\n        'error',\n        'running',\n        'new',\n        'waiting',\n        'pending',\n        'canceled'\n    ])\n};\n\nexport default JobStatus;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    DataListCell as PFDataListCell,\n    DataListContent,\n    DataList,\n    DataListItem,\n    DataListItemRow,\n    DataListItemCells as PFDataListItemCells,\n    DataListToggle as PFDataListToggle,\n    Tooltip\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkIcon } from '@patternfly/react-icons';\n\nimport LoadingState from '../Components/LoadingState';\nimport { formatDateTime, formatJobType } from '../Utilities/helpers';\nimport JobStatus from './JobStatus';\n\nconst headerLabels = [ 'Id/Name', 'Status', 'Cluster', 'Organization', 'Type' ];\n\nconst ExternalLinkIcon = styled(PFExternalLinkIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n`;\n\nconst DataListCell = styled(PFDataListCell)`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  text-align: center;\n`;\n\nconst DataListCellHeader = styled(DataListCell)`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  font-weight: bold;\n`;\n\nconst DataListItemCells = styled(PFDataListItemCells)`\n  align-items: center;\n`;\n\nconst DataListToggle = styled(PFDataListToggle)`\n  align-items: center;\n`;\n\nconst mobileBreakpoint = 765;\n\nconst buildHeader = labels => (\n    <DataListItem>\n        <DataListItemRow style={{ paddingLeft: '80px' }}>\n            <DataListItemCells\n                dataListCells={labels.map(label => (\n                    <DataListCellHeader key={label}>\n                        {label}\n                        {label === 'Id/Name' && <ExternalLinkIcon />}\n                    </DataListCellHeader>\n                ))}\n            />\n        </DataListItemRow>\n    </DataListItem>\n);\n\nconst buildListRow = (items, ariaLabel, ariaLabelledBy, windowWidth) => {\n    const [ isExpanded, setIsExpanded ] = useState([]);\n\n    return (\n        <>\n            {items.map((item, count) => {\n                const toggle = id => {\n                    const expanded = isExpanded;\n                    const idx = expanded.indexOf(id);\n                    const newExpanded =\n            idx >= 0\n                ? [\n                    ...expanded.slice(0, idx),\n                    ...expanded.slice(idx + 1, expanded.length)\n                ]\n                : [ ...expanded, id ];\n                    setIsExpanded(newExpanded);\n                };\n\n                return (\n                    <DataListItem\n                        key={item.id.id}\n                        aria-labelledby={ariaLabelledBy}\n                        isExpanded={isExpanded.includes(`${item.id.id}-toggle`)}\n                    >\n                        <DataListItemRow key={item.id.id}>\n                            <DataListToggle\n                                id={`${item.id.id}-toggle`}\n                                aria-controls={`${item.id.id}-expand`}\n                                onClick={() => toggle(`${item.id.id}-toggle`)}\n                                isExpanded={isExpanded.includes(`${item.id.id}-toggle`)}\n                            />\n                            <DataListItemCells\n                                dataListCells={[\n                                    <DataListCell key={count++}>\n                                        <a\n                                            href={item.id.tower_link}\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                        >\n                                            {windowWidth < mobileBreakpoint && (\n                                                <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                          Id/Name\n                                                    <ExternalLinkIcon />:\n                                                </span>\n                                            )}\n                      &nbsp;\n                                            {`${item.id.id} - ${item.id.template_name}`}\n                                        </a>\n                                    </DataListCell>,\n                                    <DataListCell key={count++}>\n                                        {windowWidth <= mobileBreakpoint && (\n                                            <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Status:\n                                            </span>\n                                        )}\n                    &nbsp;\n                                        <JobStatus status={item.status} />\n                                    </DataListCell>,\n                                    <Tooltip key={count++} content={<p>{item.cluster_name}</p>}>\n                                        <DataListCell>\n                                            {windowWidth <= mobileBreakpoint && (\n                                                <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                          Cluster:\n                                                </span>\n                                            )}\n                      &nbsp;\n                                            {item.cluster_name}\n                                        </DataListCell>\n                                    </Tooltip>,\n                                    <DataListCell key={count++}>\n                                        {windowWidth <= mobileBreakpoint && (\n                                            <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Organization:\n                                            </span>\n                                        )}\n                    &nbsp;\n                                        {item.org_name}\n                                    </DataListCell>,\n                                    <DataListCell key={count++}>\n                                        {windowWidth <= mobileBreakpoint && (\n                                            <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Type:\n                                            </span>\n                                        )}\n                    &nbsp;\n                                        {formatJobType(item.job_type)}\n                                    </DataListCell>\n                                ]}\n                            />\n                        </DataListItemRow>\n                        <DataListContent\n                            aria-label={`${item.id.id}-details`}\n                            id={'${item.id.id}'}\n                            isHidden={!isExpanded.includes(`${item.id.id}-toggle`)}\n                        >\n                            <DataListItemCells\n                                dataListCells={[\n                                    <DataListCell key={count++}>\n                    Created: {formatDateTime(item.created)}\n                                    </DataListCell>,\n                                    <DataListCell key={count++}>\n                    Started: {formatDateTime(item.started)}\n                                    </DataListCell>,\n                                    <DataListCell key={count++}>\n                    Finished: {formatDateTime(item.finished)}\n                                    </DataListCell>\n                                ]}\n                            />\n                        </DataListContent>\n                    </DataListItem>\n                );\n            })}\n        </>\n    );\n};\n\nconst AllJobsTemplate = ({ jobs }) => {\n    const [ windowWidth, setWindowWidth ] = useState(window.innerWidth);\n\n    const onResize = () => setWindowWidth(window.innerWidth);\n\n    useEffect(() => {\n        window.addEventListener('resize', onResize);\n        return () => window.removeEventListener('resize', onResize);\n    }, []);\n\n    return buildListRow(jobs, 'All jobs view', 'all-jobs', windowWidth);\n};\n\nconst JobExplorerList = ({ jobs }) => {\n    const [ windowWidth, setWindowWidth ] = useState(window.innerWidth);\n\n    const onResize = () => setWindowWidth(window.innerWidth);\n\n    useEffect(() => {\n        window.addEventListener('resize', onResize);\n        return () => window.removeEventListener('resize', onResize);\n    }, []);\n\n    return (\n        <>\n            {jobs.length <= 0 && <LoadingState />}\n            <DataList isCompact>\n                {windowWidth >= mobileBreakpoint && buildHeader(headerLabels)}\n                <AllJobsTemplate jobs={jobs} windowWidth={windowWidth} />\n            </DataList>\n        </>\n    );\n};\n\nJobExplorerList.propTypes = {\n    jobs: PropTypes.array,\n    windowWidth: PropTypes.number\n};\n\nAllJobsTemplate.propTypes = {\n    jobs: PropTypes.array,\n    windowWidth: PropTypes.number\n};\n\nexport default JobExplorerList;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { parse, stringify } from 'query-string';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { Paths } from '../../paths';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoResults from '../../Components/NoResults';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport {\n    preflightRequest,\n    readJobExplorer,\n    readJobExplorerOptions\n} from '../../Api';\nimport { jobExplorer } from '../../Utilities/constants';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    Pagination,\n    PaginationVariant\n} from '@patternfly/react-core';\n\nimport JobExplorerList from '../../Components/JobExplorerList';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\nconst perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '15', value: 15 },\n    { title: '20', value: 20 },\n    { title: '25', value: 25 }\n];\n\nconst initialQueryParams = {\n    ...jobExplorer.defaultParams,\n    attributes: jobExplorer.attributes\n};\n\nconst optionsMapper = options => {\n    const { groupBy, attributes, ...rest } = options;\n    return rest;\n};\n\nconst JobExplorer = ({ location: { search }, history }) => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [\n        {\n            isLoading,\n            isSuccess,\n            error,\n            data: { meta = {}, items: data = []}\n        },\n        setData\n    ] = useApi({ meta: {}, items: []});\n    const [ currPage, setCurrPage ] = useState(1);\n    const [ options, setOptions ] = useApi({}, optionsMapper);\n\n    let initialSearchParams = parse(search, {\n        arrayFormat: 'bracket',\n        parseBooleans: true\n    });\n    let combined = { ...initialQueryParams, ...initialSearchParams };\n    const { queryParams, setLimit, setOffset, setFromToolbar } = useQueryParams(\n        combined\n    );\n\n    const updateURL = () => {\n        const { jobExplorer } = Paths;\n        const search = stringify(queryParams, { arrayFormat: 'bracket' });\n        history.replace({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    useEffect(() => {\n        insights.chrome.appNavClick({ id: 'job-explorer', secondaryNav: true });\n\n        window.insights.chrome.auth.getUser().then(\n            () =>\n                preflightRequest().catch(error => {\n                    setPreFlightError({ preflightError: error });\n                })\n            // Loading is set false when the data also loaded\n        );\n    }, []);\n\n    useEffect(() => {\n        setData(readJobExplorer({ params: queryParams }));\n        setOptions(readJobExplorerOptions({ params: queryParams }));\n        updateURL();\n    }, [ queryParams ]);\n\n    const returnOffsetVal = page => (page - 1) * queryParams.limit;\n\n    const handleSetPage = page => {\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    const handlePerPageSelect = (perPage, page) => {\n        setLimit(perPage);\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={'Job Explorer'} />\n            </PageHeader>\n\n            {preflightError && (\n                <Main>\n                    <EmptyState {...preflightError} />\n                </Main>\n            )}\n\n            {!preflightError && (\n                <Main>\n                    <Card>\n                        <CardBody>\n                            <FilterableToolbar\n                                categories={options.data}\n                                filters={queryParams}\n                                setFilters={setFromToolbar}\n                                pagination={\n                                    <Pagination\n                                        itemCount={meta && meta.count ? meta.count : 0}\n                                        widgetId=\"pagination-options-menu-top\"\n                                        perPageOptions={perPageOptions}\n                                        perPage={queryParams.limit}\n                                        page={currPage}\n                                        variant={PaginationVariant.top}\n                                        onPerPageSelect={(_event, perPage, page) => {\n                                            handlePerPageSelect(perPage, page);\n                                        }}\n                                        onSetPage={(_event, pageNumber) => {\n                                            handleSetPage(pageNumber);\n                                        }}\n                                        isCompact\n                                    />\n                                }\n                                hasSettings\n                            />\n                            {error && <ApiErrorState message={error.error} />}\n                            {isLoading && <LoadingState />}\n                            {isSuccess && data.length <= 0 && <NoResults />}\n                            {isSuccess && data.length > 0 && <JobExplorerList jobs={data} />}\n                            <Pagination\n                                itemCount={meta && meta.count ? meta.count : 0}\n                                widgetId=\"pagination-options-menu-bottom\"\n                                perPageOptions={perPageOptions}\n                                perPage={queryParams.limit}\n                                page={currPage}\n                                variant={PaginationVariant.bottom}\n                                onPerPageSelect={(_event, perPage, page) => {\n                                    handlePerPageSelect(perPage, page);\n                                }}\n                                onSetPage={(_event, pageNumber) => {\n                                    handleSetPage(pageNumber);\n                                }}\n                                style={{ marginTop: '20px' }}\n                            />\n                        </CardBody>\n                    </Card>\n                </Main>\n            )}\n        </React.Fragment>\n    );\n};\n\nJobExplorer.propTypes = {\n    location: PropTypes.object,\n    history: PropTypes.object\n};\n\nexport default JobExplorer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nimport {\n    NotificationDrawerList as PFNotificationDrawerList,\n    NotificationDrawerListItem as PFNotificationDrawerListItem,\n    NotificationDrawerListItemBody,\n    NotificationDrawerListItemHeader\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkAltIcon } from '@patternfly/react-icons';\nimport LoadingState from '../Components/LoadingState';\nimport { capitalize } from '../Utilities/helpers';\n\nconst ExternalLinkAltIcon = styled(PFExternalLinkAltIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n  font-size: 14px;\n`;\n\nconst NotificationDrawerListItem = styled(PFNotificationDrawerListItem)`\n  border-top: 1px solid var(--pf-global--BorderColor--light-100\n    );\n  border-bottom::nth-child(odd): 1px solid var(--pf-global--BorderColor--light-100\n    );\n  box-shadow: none;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst NotificationDrawerList = styled(PFNotificationDrawerList)`\n  &:last-child {\n    border-bottom: 1px solid var(--pf-global--BorderColor--light-100);\n  }\n`;\n\nconst stringifyDate = date => {\n    const day = moment(date);\n    const oneHour = 60 * 60 * 1000;\n    const now = moment().utc();\n\n    if (now.isAfter(day)) {\n        return `${now.diff(day, 'days')} day(s) ago.`;\n    }\n\n    if (day.isSame(now, 'day')) {\n        if (day.valueOf() > oneHour) {\n            return `${day.diff(now, 'hours')} hour(s) ago.`;\n        }\n\n        return `${now.diff(day, 'minutes')} minute(s) ago.`;\n    }\n};\n\nconst AllNotificationTemplate = ({ notifications }) =>\n    notifications.map(\n        ({ date, message, label, notification_id: id, tower_url: url }) => {\n            if (label === '' || label === 'notice') {\n                return (\n                    <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n                        <NotificationDrawerListItemHeader\n                            variant=\"info\"\n                            title={\n                                <>\n                                    {url ? (\n                                        <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                            {capitalize(label)}\n                                            <ExternalLinkAltIcon />\n                                        </a>\n                                    ) : (\n                                        capitalize(label)\n                                    )}\n                                </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody>\n                            {message}{' '}\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n\n            if (label === 'error') {\n                return (\n                    <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n                        <NotificationDrawerListItemHeader\n                            variant=\"danger\"\n                            title={\n                                <>\n                                    {url ? (\n                                        <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                            {capitalize(label)}\n                                            <ExternalLinkAltIcon />\n                                        </a>\n                                    ) : (\n                                        capitalize(label)\n                                    )}\n                                </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                            {message}{' '}\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n\n            if (label === 'warning') {\n                return (\n                    <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n                        <NotificationDrawerListItemHeader\n                            variant=\"warning\"\n                            title={\n                                <>\n                                    {url ? (\n                                        <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                            {capitalize(label)}\n                                            <ExternalLinkAltIcon />\n                                        </a>\n                                    ) : (\n                                        capitalize(label)\n                                    )}\n                                </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                            {message}{' '}\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n        }\n    );\n\nconst ErrorNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'error')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n                variant=\"danger\"\n                title={\n                    <>\n                        {url ? (\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                {capitalize(label)}\n                                <ExternalLinkAltIcon />\n                            </a>\n                        ) : (\n                            capitalize(label)\n                        )}\n                    </>\n                }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                {message}{' '}\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst NoticeNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'notice')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n                variant=\"info\"\n                title={\n                    <>\n                        {url ? (\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                {capitalize(label)}\n                                <ExternalLinkAltIcon />\n                            </a>\n                        ) : (\n                            capitalize(label)\n                        )}\n                    </>\n                }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                {message}{' '}\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst WarningNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'warning')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n                variant=\"warning\"\n                title={\n                    <>\n                        {url ? (\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                {capitalize(label)}\n                                <ExternalLinkAltIcon />\n                            </a>\n                        ) : (\n                            capitalize(label)\n                        )}\n                    </>\n                }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                {message}{' '}\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst NotificationsList = ({ filterBy, notifications }) => (\n    <>\n        <NotificationDrawerList>\n            {notifications.length <= 0 && <LoadingState />}\n            {filterBy === '' && (\n                <AllNotificationTemplate notifications={notifications} />\n            )}\n            {filterBy === 'notice' && (\n                <NoticeNotificationTemplate notifications={notifications} />\n            )}\n            {filterBy === 'error' && (\n                <ErrorNotificationTemplate notifications={notifications} />\n            )}\n            {filterBy === 'warning' && (\n                <WarningNotificationTemplate notifications={notifications} />\n            )}\n        </NotificationDrawerList>\n    </>\n);\n\nAllNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nErrorNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nWarningNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nNotificationsList.propTypes = {\n    notifications: PropTypes.array,\n    filterBy: PropTypes.string\n};\n\nexport default NotificationsList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoData from '../../Components/NoData';\nimport { preflightRequest, readClusters, readNotifications } from '../../Api';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle,\n    FormSelect,\n    FormSelectOption,\n    Pagination,\n    PaginationVariant,\n    NotificationDrawer\n} from '@patternfly/react-core';\n\nimport NotificationsList from '../../Components/NotificationsList';\n\nconst CardTitle = styled(PFCardTitle)`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n`;\n\nconst DropdownGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-end;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n\n  select {\n    margin: 0 10px;\n    width: 150px;\n\n    @media screen and (max-width: 1035px) {\n      margin: 10px 10px 0 0;\n    }\n\n    @media screen and (max-width: 865px) {\n      width: 100%;\n    }\n  }\n`;\n\nconst notificationOptions = [\n    {\n        value: 'please choose',\n        label: 'Select Notification Severity',\n        disabled: true\n    },\n    { value: 'error', label: 'View Critical', disabled: false },\n    { value: 'warning', label: 'View Warning', disabled: false },\n    { value: 'notice', label: 'View Notice', disabled: false },\n    { value: '', label: 'View All', disabled: false }\n];\n\nconst perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 }\n];\n\nfunction formatClusterName(data) {\n    const defaultClusterOptions = [\n        { value: 'please choose', label: 'Select cluster', disabled: true },\n        { value: '', label: 'All Clusters', disabled: false },\n        { value: -1, label: 'Unassociated', disabled: false }\n    ];\n    return data.reduce(\n        (formatted, { label, cluster_id: id, install_uuid: uuid }) => {\n            if (label.length === 0) {\n                formatted.push({ value: id, label: uuid, disabled: false });\n            } else {\n                formatted.push({ value: id, label, disabled: false });\n            }\n\n            return formatted;\n        },\n        defaultClusterOptions\n    );\n}\n\nconst initialQueryParams = {\n    limit: 5,\n    offset: 0\n};\n\nconst Notifications = () => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [ notificationsData, setNotificationsData ] = useState([]);\n    const [ clusterOptions, setClusterOptions ] = useState([]);\n    const [ selectedCluster, setSelectedCluster ] = useState('');\n    const [ firstRender, setFirstRender ] = useState(true);\n    const [ isLoading, setIsLoading ] = useState(true);\n    const [ meta, setMeta ] = useState({});\n    const [ currPage, setCurrPage ] = useState(1);\n    const {\n        queryParams,\n        setId,\n        setLimit,\n        setOffset,\n        setSeverity\n    } = useQueryParams(initialQueryParams);\n\n    useEffect(() => {\n        if (firstRender) {\n            return;\n        }\n\n        const getData = () => {\n            return readNotifications({ params: queryParams });\n        };\n\n        const update = async () => {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            getData().then(({ notifications: notificationsData = [], meta }) => {\n                setNotificationsData(notificationsData);\n                setMeta(meta);\n                setIsLoading(false);\n            });\n        };\n\n        update();\n    }, [ queryParams ]);\n\n    useEffect(() => {\n        insights.chrome.appNavClick({ id: 'notifications', secondaryNav: true });\n\n        let ignore = false;\n        const fetchEndpoints = () => {\n            return Promise.all(\n                [ readClusters(), readNotifications({ params: queryParams }) ].map(p =>\n                    p.catch(() => [])\n                )\n            );\n        };\n\n        async function initializeWithPreflight() {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            await preflightRequest().catch(error => {\n                setPreFlightError({ preflightError: error });\n            });\n            fetchEndpoints().then(\n                ([\n                    { templates: clustersData = []},\n                    { notifications: notificationsData = [], meta }\n                ]) => {\n                    if (!ignore) {\n                        const clusterOptions = formatClusterName(clustersData);\n                        setClusterOptions(clusterOptions);\n                        setNotificationsData(notificationsData);\n                        setMeta(meta);\n                        setFirstRender(false);\n                        setIsLoading(false);\n                    }\n                }\n            );\n        }\n\n        initializeWithPreflight();\n        return () => (ignore = true);\n    }, []);\n\n    const returnOffsetVal = page => {\n        let offsetVal = (page - 1) * queryParams.limit;\n        return offsetVal;\n    };\n\n    const handleSetPage = page => {\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    const handlePerPageSelect = (perPage, page) => {\n        setLimit(perPage);\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={'Notifications'} />\n            </PageHeader>\n            {preflightError && (\n                <Main>\n                    <EmptyState {...preflightError} />\n                </Main>\n            )}\n            {!preflightError && (\n                <>\n                    <Main>\n                        <Card>\n                            <CardTitle>\n                                <DropdownGroup>\n                                    <FormSelect\n                                        name=\"selectedCluster\"\n                                        value={selectedCluster}\n                                        onChange={value => {\n                                            setSelectedCluster(value);\n                                            setId(value);\n                                            setOffset(0);\n                                            setCurrPage(1);\n                                        }}\n                                        aria-label=\"Select Cluster\"\n                                    >\n                                        {clusterOptions.map(({ value, label, disabled }, index) => (\n                                            <FormSelectOption\n                                                isDisabled={disabled}\n                                                key={index}\n                                                value={value}\n                                                label={label}\n                                            />\n                                        ))}\n                                    </FormSelect>\n                                    <FormSelect\n                                        name=\"selectedNotification\"\n                                        value={queryParams.severity || ''}\n                                        onChange={value => {\n                                            setSeverity(value);\n                                            setOffset(0);\n                                            setCurrPage(1);\n                                        }}\n                                        aria-label=\"Select Notification Type\"\n                                    >\n                                        {notificationOptions.map(\n                                            ({ disabled, value, label }, index) => (\n                                                <FormSelectOption\n                                                    isDisabled={disabled}\n                                                    key={index}\n                                                    value={value}\n                                                    label={label}\n                                                />\n                                            )\n                                        )}\n                                    </FormSelect>\n                                </DropdownGroup>\n                                <Pagination\n                                    itemCount={meta && meta.count ? meta.count : 0}\n                                    widgetId=\"pagination-options-menu-top\"\n                                    perPageOptions={perPageOptions}\n                                    perPage={queryParams.limit}\n                                    page={currPage}\n                                    variant={PaginationVariant.top}\n                                    onPerPageSelect={(_event, perPage, page) => {\n                                        handlePerPageSelect(perPage, page);\n                                    }}\n                                    onSetPage={(_event, pageNumber) => {\n                                        handleSetPage(pageNumber);\n                                    }}\n                                    isCompact\n                                />\n                            </CardTitle>\n                            <CardBody>\n                                {isLoading && <LoadingState />}\n                                {!isLoading && notificationsData.length <= 0 && <NoData />}\n                                {!isLoading && notificationsData.length > 0 && (\n                                    <NotificationDrawer>\n                                        <NotificationsList\n                                            filterBy={queryParams.severity || ''}\n                                            options={notificationOptions}\n                                            notifications={notificationsData}\n                                        />\n                                    </NotificationDrawer>\n                                )}\n                                <Pagination\n                                    itemCount={meta && meta.count ? meta.count : 0}\n                                    widgetId=\"pagination-options-menu-bottom\"\n                                    perPageOptions={perPageOptions}\n                                    perPage={queryParams.limit}\n                                    page={currPage}\n                                    variant={PaginationVariant.bottom}\n                                    onPerPageSelect={(_event, perPage, page) => {\n                                        handlePerPageSelect(perPage, page);\n                                    }}\n                                    onSetPage={(_event, pageNumber) => {\n                                        handleSetPage(pageNumber);\n                                    }}\n                                    style={{ marginTop: '20px' }}\n                                />\n                            </CardBody>\n                        </Card>\n                    </Main>\n                </>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default Notifications;\n","import moment from 'moment';\n\n/*\n * isNumeric - return true if input is a real number\n */\nexport function isNumeric(val) {\n    if (val === 0 || val === '0') {\n        return true;\n    }\n\n    if (parseInt(val)) {\n        return true;\n    }\n\n    if (parseFloat(val)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function trimStr(str) {\n    return str.toString().replace(/['\"]+/g, '');\n}\n\nexport function formatDateTime(dateTime) {\n    return moment(new Date(dateTime).toISOString()).format('M/D/YYYY h:mm:ssa');\n}\n\nexport function formatDate(date) {\n    return moment(date).format('YYYY-MM-DD');\n}\n\nexport function formatSeconds(seconds) {\n    return moment()\n    .startOf('day')\n    .seconds(seconds)\n    .format('H:mm:ss');\n}\n\nexport function getTotal(data) {\n    if (!data) {\n        return;\n    } else {\n        let total = 0;\n        data.forEach(datum => {\n            total += parseInt(datum.count);\n        });\n        return total;\n    }\n}\n\nexport function formatPercentage(val) {\n    if (isNaN(val)) {\n        return;\n    }\n\n    return `${val}%`;\n}\n\nexport const capitalize = s => {\n    if (typeof s !== 'string') {\n        return '';\n    }\n\n    return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport function calculateDelta(a, b) {\n    if (!isNumeric(a) || !isNumeric(b)) {\n        return 0;\n    }\n\n    // never return less than zero ...\n    if (b - a < 0) {\n        return 0;\n    }\n\n    return b - a;\n}\n\nexport function convertMinsToMs(mins) {\n    if (!parseInt(mins)) {\n        return 0;\n    }\n\n    return mins * 60000;\n}\n\nexport function convertMsToMins(ms) {\n    if (!parseInt(ms)) {\n        return 0;\n    }\n\n    return ms / 60000;\n}\n\nexport function convertSecondsToMins(seconds) {\n    if (!parseInt(seconds)) {\n        return 0;\n    }\n\n    return seconds / 60;\n}\n\nexport function convertMinsToSeconds(mins) {\n    if (!parseInt(mins) || parseInt(mins) < 0) {\n        return 0;\n    }\n\n    return +parseInt(mins) * 60;\n}\n\nexport function convertSecondsToHours(seconds) {\n    if (!parseInt(seconds)) {\n        return 0;\n    }\n\n    return seconds / 3600;\n}\n\nexport function convertWithCommas(arr, key) {\n    const split = arr.reduce((strs, datum) => {\n        strs.push(datum[key]);\n        return strs;\n    }, []);\n    return split.join(', ');\n}\n\nexport function formatJobType(type) {\n    return type === 'job' ? 'Playbook run' : 'Workflow job';\n}\n\nexport function formatJobStatus(status) {\n    return status === 'successful' ? 'Success' : 'Failed';\n}\n\nexport function formatJobDetailsURL(baseURL, jobId) {\n    const subDirectory1 = 'job';\n    const subDirectory2 = 'details';\n    return `${baseURL}/#/${subDirectory1}/${jobId}/${subDirectory2}/`;\n}\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst DefaultLoadingState = () => (\n    <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={CubesIcon} />\n        <Title headingLevel=\"h5\" size=\"lg\">\n      Loading...\n        </Title>\n        <EmptyStateBody>Please wait.</EmptyStateBody>\n    </EmptyState>\n);\n\nexport default DefaultLoadingState;\n"],"sourceRoot":""}