{"version":3,"sources":["webpack:///./src/Utilities/constants.js","webpack:///./src/Components/LoadingState.js","webpack:///./src/Api.js","webpack:///./src/Utilities/useApi.js","webpack:///./src/Utilities/useQueryParams.js","webpack:///./src/Components/EmptyState.js","webpack:///./src/Components/ApiErrorState.js","webpack:///./src/Charts/BaseChart.js","webpack:///./src/Components/NoData.js","webpack:///./src/Components/Toolbar/constants.js","webpack:///./src/Components/Toolbar/CustomFormElements/CategoryDropdown.js","webpack:///./src/Components/Toolbar/CustomFormElements/ToolbarFilterItem.js","webpack:///./src/Components/Toolbar/helpers.js","webpack:///./src/Components/Toolbar/Groups/FiltersCategoriesGroup.js","webpack:///./src/Components/Toolbar/CustomFormElements/CustomDateSelector.js","webpack:///./src/Components/Toolbar/Groups/QuickDateGroup.js","webpack:///./src/Components/Toolbar/Groups/SortByGroup.js","webpack:///./src/Components/Toolbar/Groups/SettingsPanel.js","webpack:///./src/Components/Toolbar/Toolbar.js","webpack:///./src/Components/Toolbar/index.js","webpack:///./src/Utilities/useRedirect.js","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/Containers/SavingsPlanner/PlanCard.js","webpack:///./src/Containers/SavingsPlanner/SavingsPlanner.js","webpack:///./src/Utilities/Legend.js","webpack:///./src/Charts/GroupedBarChart/GroupedBarChart.js","webpack:///./src/Charts/GroupedBarChart/OrgsTooltip.js","webpack:///./src/Charts/GroupedBarChart/HostsTooltip.js","webpack:///./src/Charts/PieChart.js","webpack:///./src/Containers/OrganizationStatistics/OrganizationStatistics.js","webpack:///./src/Utilities/colors.ts","webpack:///./src/Utilities/Tooltip.js","webpack:///./src/Charts/BarChart.js","webpack:///./src/Charts/LineChart.js","webpack:///./src/Components/ModulesList.js","webpack:///./src/Components/ModalContents.js","webpack:///./src/Components/TemplatesList.js","webpack:///./src/Containers/Clusters/Clusters.js","webpack:///./src/Charts/ROITopTemplates.js","webpack:///./src/Containers/AutomationCalculator/helpers.js","webpack:///./src/Containers/AutomationCalculator/TotalSavings.js","webpack:///./src/Containers/AutomationCalculator/CalculationCost.js","webpack:///./src/Containers/AutomationCalculator/AutomationFormula.js","webpack:///./src/Containers/AutomationCalculator/TopTemplates.js","webpack:///./src/Containers/AutomationCalculator/AutomationCalculator.js","webpack:///./src/Components/RoutedTabs.js","webpack:///./src/Containers/SavingsPlanner/DetailsTab.js","webpack:///./src/Containers/SavingsPlanner/GraphTab.js","webpack:///./src/Components/Breadcrumbs.js","webpack:///./src/Containers/SavingsPlanner/SavingsPlan.js","webpack:///./src/Components/NoResults.js","webpack:///./src/Components/JobStatus.js","webpack:///./src/Components/JobExplorerList.js","webpack:///./src/Containers/JobExplorer/JobExplorer.js","webpack:///./src/Components/NotificationsList.js","webpack:///./src/Containers/Notifications/Notifications.js","webpack:///./src/Utilities/helpers.js"],"names":["jobExplorer","attributes","defaultParams","status","quick_date_range","job_type","org_id","cluster_id","template_id","sort_options","sort_order","only_root_workflows_and_standalone_jobs","limit","roi","start_date","end_date","group_by","group_by_time","organizationStatistics","clusters","savingsPlanner","automation_status","category","frequency_period","name","notAuthorizedParams","title","description","DefaultLoadingState","variant","EmptyStateVariant","full","icon","CubesIcon","headingLevel","size","handleResponse","response","json","then","ok","Promise","reject","message","error","authenticatedFetch","endpoint","options","window","insights","chrome","auth","getUser","fetch","preflightRequest","readJobExplorer","params","paginationParams","offset","sort_by","qs","stringify","url","URL","location","origin","search","method","body","JSON","readEventExplorer","readROI","readHostExplorer","readPlans","readPlan","readClustersOptions","readOrgOptions","readROIOptions","readPlanOptions","readClusters","readNotifications","Object","keys","forEach","key","searchParams","append","readJobExplorerOptions","dataFetchReducer","state","action","type","isLoading","isSuccess","data","payload","Error","useApi","initialData","postprocess","d","useState","request","setRequest","useReducer","dispatch","useEffect","didCancel","e","setData","useQueryParams","initial","initialWithCalculatedParams","value","startDate","endDate","parseInt","id","severity","newState","newValues","entries","formatDate","queryParams","actionMapper","setLimit","setOffset","setFromToolbar","varName","setSeverity","setEndDate","moment","format","setId","setStartDate","days","subtract","setStartDateAsString","DefaultEmptyState","preflightError","WrenchIcon","href","target","rel","onClick","reload","propTypes","PropTypes","object","ApiErrorState","small","ExclamationCircleIcon","color","globalDangerColor200","string","initializeChart","Chart","BaseChart","props","margin","getWidth","d3","style","left","right","getHeight","top","bottom","element","NoData","optionsForCategories","isSingle","placeholder","CategoryDropdown","selected","setSelected","categories","isExpanded","setIsExpanded","ToolbarItem","Select","isOpen","aria-label","onToggle","onSelect","_event","selection","selections","placeholderText","map","SelectOption","array","func","styled","PFSelectOption","renderValues","values","marginLeft","ToolbarFilterItem","item","comparator","categoryKey","filter","isVisible","hasChips","setFilter","expanded","setExpanded","searchVal","setSearchVal","handleOnClick","handleInputChange","ToolbarFilter","data-cy","showToolbarItem","chips","categoryName","deleteChip","InputGroup","TextInput","onChange","Button","val","i","undefined","handleSingleChips","reduce","acc","Number","isInteger","cmpItem","push","valueToDelete","keyToDelete","find","filteredArr","event","includes","hasInlineFilter","onFilter","textInput","toLowerCase","maxHeight","isRequired","any","bool","FilterCategoriesGroup","filterCategories","filters","setFilters","currentCategory","setCurrentCategory","ToolbarGroup","el","CustomDateSelector","onInputChange","QuickDateGroup","SortByGroup","SettingsPanel","settingsExpanded","setSettingsExpanded","Card","isFlat","backgroundColor","CardHeader","CardActions","CardTitle","CardBody","Switch","label","labelOff","isChecked","Tooltip","position","content","FilterableToolbar","pagination","hasSettings","restCategories","obj","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarContent","length","isActive","visibility","default","lg","useRedirect","history","path","query","arrayFormat","pathname","Paths","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","resolve","module","exports","CardLabel","span","PlanCard","template","template_details","modified","isCardKebabOpen","setIsCardKebabOpen","match","useRouteMatch","useHistory","kebabDropDownItems","Fragment","DropdownItem","isHoverable","isCompact","CardHeaderMain","to","Dropdown","toggle","KebabToggle","isPlain","dropdownItems","Checkbox","templateId","initialQueryParams","Label","formatDateTime","CardFooter","number","perPageOptions","combined","SavingsPlanner","meta","items","setOptions","currPage","setCurrPage","setPreFlightError","combinedOptions","returnOffsetVal","page","handleSetPage","nextOffset","handlePerPageSelect","perPage","NotAuthorized","PageHeader","PageHeaderTitle","Pagination","itemCount","total_count","widgetId","PaginationVariant","onPerPageSelect","onSetPage","pageNumber","Main","EmptyState","height","LoadingState","Gallery","hasGutter","datum","isSticky","Container","div","LegendDetail","Wrapper","Color","attrs","Title","SubTitle","Legend","index","count","some","date","pieces","split","GroupedBarChart","TooltipClass","legend","colors","colorFunc","slice","selectedIds","setSelectedIds","timeout","draw","remove","formatted","selectedOrgs","concat","width","x0","range","padding","x1","y","maxTicksOneMonth","Math","round","maxTicksTwoMonths","ticks","xAxis","tickValues","tickFormat","yAxis","tickSize","svg","attr","dates","tooltip","domain","bandwidth","call","selectAll","text","yLabel","exit","enter","bars","merge","subEnter","on","this","darker","handleMouseOver","handleMouseOut","resize","clearTimeout","setTimeout","addEventListener","removeEventListener","OrgsTooltip","orgName","jobs","x","pageX","node","getBoundingClientRect","pageY","formatTooltipDate","toolTipWidth","toolTipBase","chartWidth","flipped","jobsWidth","getComputedTextLength","adjustedWidth","maxTextPerc","boxWidth","overage","boundingBox","toolTipPoint","clickMore","interrupt","transition","delay","textWidthThreshold","HostsTooltip","perc","percSuccess","drawn","percent","success_rate","maxLength","percentageTotal","percentageSuccess","boundingBOx","showSuccess","boundingHeight","boundingWidth","PieChart","sort","a","b","radius","min","filteredData","total","getTotal","donutTooltip","pie","arc","outerRadius","innerRadius","classed","PFCardTitle","CardContainer","TopCard","scaleOrdinal","optionsMapper","inventory_id","pieChartMapper","attrName","chartMapper","api","toJobExplorer","rest","formattedDate","dateForJobExplorer","OrganizationStatistics","preflight","setPreflight","activeTabKey","setActiveTabKey","orgs","setOrgs","setJobs","tasks","setTasks","constants","jobEventsByOrgParams","include_others","jobRunsByOrgParams","jobsByDateAndOrgParams","hostAcrossOrgParams","appNavClick","secondaryNav","readJobsOrHosts","Tabs","activeKey","_","tabIndex","Tab","eventKey","opts","success","fail","RAN","FAIL","TOTAL","DATE","failed","successful","successTextWidth","failTextWidth","circleSuccess","circleFail","failedIcon","successIcon","successText","failText","BarChart","bind","init","redirectToJobExplorer","formattedData","orgId","setState","parseTime","created_date","successful_count","failed_count","Date","rangeRound","barTooltip","layers","order","stack","maxTicks","layer","_d","duration","ease","prevProps","Component","withRouter","LineChart","updateCluster","clusterId","attrTween","tweenDash","l","getTotalLength","t","unformattedData","successLine","curve","failLine","defined","isNaN","vertical","handleMouseMove","intersectX","cx","baseVal","DataListCell","PFDataListCell","DataListItem","PFDataListItem","DataCellEnd","ModulesList","modules","DataList","overflow","background","aria-labelledby","border","host_task_count","trimStr","marginRight","PFDataListItemNoBorder","DataListItemCompact","DataListCellCompact","DataListFocus","DataCellEndCompact","ModalContents","successCount","totalCount","elapsed","selectedId","handleModal","qp","jobType","handleCloseBtn","relatedJobs","setRelatedJobs","stats","setStats","relatedTemplateJobsParams","agreggateTemplateParams","Modal","onClose","actions","toISOString","substr","ceil","formatAvgRun","most_failed_tasks","percentage","total_failed_count","task_name","formatTopFailedTask","most_failed_steps","template_name","formatTopFailedStep","component","job","cluster_name","started","formatSeconds","TemplatesList","templates","setSelectedId","isModalOpen","setIsModalOpen","initialTopTemplateParams","initialTopWorkflowParams","initialModuleParams","Clusters","chartData","setTemplates","workflows","setWorkflows","setModules","groupBy","initialOptionsParams","optionsQueryParams","topTemplatesParams","topWorkflowParams","topModuleParams","initializeWithPreflight","className","display","marginTop","savings","manualCost","automationCost","scrollLeftOffset","scrollLeft","formatDollars","delta","automatedCost","nameWidth","savingsWidth","manualCostWidth","automationCostWidth","widestTextElem","amount","parseFloat","toFixed","toString","replace","TopTemplatesSavings","formatYAxisValue","taskNames","BorderedCardTitle","TotalSavings","totalSavings","borderTop","paddingBottom","InputAndText","validFloat","floatValue","CalculationCost","costManual","setCostManual","costAutomation","setCostAutomation","InputGroupText","paddingTop","AutomationFormula","TemplateDetail","TemplateDetailSubTitle","em","TooltipWrapper","IconGroup","QuestionIconTooltip","details","Popover","bodyContent","k","capitalize","join","TopTemplates","sortBy","setDataRunTime","setEnabled","flex","convertSecondsToMins","avgRunTime","minutes","convertMinsToSeconds","successful_hosts_total","trimmed","sortAttribute","showSortAttr","enabled","deselectedIds","setDeselectedIds","WrapperLeft","WrapperRight","filterDisabled","updateDeltaCost","convertSecondsToHours","successful_elapsed_total","calculateDelta","AutomationCalculator","fetchApi","setDataInApi","roiConst","seconds","updatedData","textAlign","paddingLeft","sum","curr","flexDirection","setUnfilteredData","RoutedTabs","tabsArray","defaultTabId","useLocation","tab","link","getActiveTabId","TabTitleText","role","arrayOf","shape","oneOfType","defaultProps","DetailsTab","plans","hosts","manual_time","labelsAndValues","Name","Description","Frequency","Template","showTemplate","DescriptionList","isHorizontal","columnModifier","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","Divider","TextContent","List","task","ListItem","GraphTab","Breadcrumbs","current","Breadcrumb","navigate","basePathNavigate","getBaseName","BreadcrumbItem","BreadcrumbHeading","SavingsPlan","useParams","pageTitle","indexOf","showCardHeader","endsWith","breadcrumbUrl","breadcrumbsItems","exact","NoResults","EmptyStateIcon","SearchIcon","EmptyStateBody","JobStatus","str","getColor","getIcon","charAt","toUpperCase","oneOf","headerLabels","ExternalLinkIcon","PFExternalLinkIcon","DataListCellHeader","DataListItemCells","PFDataListItemCells","DataListToggle","PFDataListToggle","buildListRow","ariaLabel","ariaLabelledBy","windowWidth","DataListItemRow","aria-controls","idx","newExpanded","dataListCells","tower_link","fontWeight","org_name","formatJobType","DataListContent","isHidden","created","finished","AllJobsTemplate","innerWidth","setWindowWidth","onResize","JobExplorerList","labels","JobExplorer","initialSearchParams","parse","parseBooleans","updateURL","ExternalLinkAltIcon","PFExternalLinkAltIcon","NotificationDrawerListItem","PFNotificationDrawerListItem","NotificationDrawerList","PFNotificationDrawerList","stringifyDate","day","now","utc","isAfter","diff","isSame","valueOf","AllNotificationTemplate","notifications","notification_id","tower_url","NotificationDrawerListItemHeader","NotificationDrawerListItemBody","timestamp","ErrorNotificationTemplate","notification","NoticeNotificationTemplate","WarningNotificationTemplate","NotificationsList","filterBy","DropdownGroup","notificationOptions","disabled","formatClusterName","uuid","install_uuid","Notifications","notificationsData","setNotificationsData","clusterOptions","setClusterOptions","selectedCluster","setSelectedCluster","firstRender","setFirstRender","setIsLoading","setMeta","ignore","fetchEndpoints","all","p","clustersData","FormSelect","FormSelectOption","isDisabled","NotificationDrawer","isNumeric","dateTime","startOf","s","mins"],"mappings":"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","file":"js/automation_analytics.1f956e46fba6838e189f.js","sourcesContent":["export const jobExplorer = {\n    attributes: [\n        'id',\n        'status',\n        'job_type',\n        'started',\n        'finished',\n        'elapsed',\n        'created',\n        'cluster_name',\n        'org_name',\n        'most_failed_tasks'\n    ],\n    defaultParams: {\n        status: [ 'successful', 'failed' ],\n        quick_date_range: 'last_30_days',\n        job_type: [ 'workflowjob', 'job' ],\n        org_id: [],\n        cluster_id: [],\n        template_id: [],\n        sort_options: 'created',\n        sort_order: 'desc',\n        only_root_workflows_and_standalone_jobs: false,\n        limit: 5\n    }\n};\n\nexport const roi = {\n    defaultParams: {\n        status: [ 'successful' ],\n        org_id: [],\n        cluster_id: [],\n        template_id: [],\n        quick_date_range: 'roi_last_year',\n        job_type: [ 'job' ],\n        sort_options: 'template_productivity_score',\n        sort_order: 'desc',\n        start_date: null,\n        end_date: null,\n        limit: 25,\n        only_root_workflows_and_standalone_jobs: true,\n        attributes: [\n            'successful_hosts_total',\n            'successful_elapsed_total',\n            'total_org_count',\n            'total_cluster_count'\n        ],\n        group_by: 'template',\n        group_by_time: false\n    }\n};\n\nexport const organizationStatistics = {\n    defaultParams: {\n        status: [],\n        org_id: [],\n        quick_date_range: 'last_30_days',\n        limit: 5,\n        job_type: [ 'workflowjob', 'job' ],\n        cluster_id: [],\n        template_id: [],\n        start_date: null,\n        end_date: null\n    }\n};\n\nexport const clusters = {\n    defaultParams: {\n        status: [ 'successful', 'failed' ],\n        quick_date_range: 'last_30_days',\n        job_type: [ 'workflowjob', 'job' ],\n        group_by_time: true,\n        org_id: [],\n        cluster_id: [],\n        template_id: [],\n        only_root_workflows_and_standalone_jobs: false\n    }\n};\n\nexport const savingsPlanner = {\n    defaultParams: {\n        template_id: [],\n        automation_status: [],\n        category: [],\n        frequency_period: [],\n        name: ''\n    }\n};\n\nexport const notAuthorizedParams = {\n    title: 'RBAC Access Denied',\n    description: 'User does not have privileges to perform this action. Contact your organization adminstrator(s) for more information.'\n};\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst DefaultLoadingState = () => (\n    <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={CubesIcon} />\n        <Title headingLevel=\"h5\" size=\"lg\">\n      Loading...\n        </Title>\n        <EmptyStateBody>Please wait.</EmptyStateBody>\n    </EmptyState>\n);\n\nexport default DefaultLoadingState;\n","import { stringify } from 'query-string';\n/* v0 endpoints */\nconst clustersEndpoint = `/api/tower-analytics/v0/clusters/`;\nconst notificationsEndpoint = `/api/tower-analytics/v0/notifications/`;\nconst preflightEndpoint = `/api/tower-analytics/v0/authorized/`;\n\n/* v1 endpoints */\nconst jobExplorerEndpoint = '/api/tower-analytics/v1/job_explorer/';\nconst hostExplorerEndpoint = '/api/tower-analytics/v1/host_explorer/';\nconst eventExplorerEndpoint = '/api/tower-analytics/v1/event_explorer/';\nconst ROIEndpoint = '/api/tower-analytics/v1/roi_templates/';\nconst plansEndpoint = '/api/tower-analytics/v1/plans/';\n\n/* page options endpoints */\nconst jobExplorerOptionsEndpoint =\n    '/api/tower-analytics/v1/job_explorer_options/';\nconst ROITemplatesOptionsEndpoint = '/api/tower-analytics/v1/roi_templates_options/';\nconst orgOptionsEndpoint = '/api/tower-analytics/v1/dashboard_organization_statistics_options/';\nconst clustersOptionsEndpoint = '/api/tower-analytics/v1/dashboard_clusters_options/';\nconst planOptionsEndpoint = '/api/tower-analytics/v1/plan_options/';\n\nfunction handleResponse(response) {\n    return response.json().then(json => {\n        if (response.ok) {\n            return json;\n        }\n\n        if (response.status === 404 || response.status === 401) {\n            return Promise.reject({\n                status: response.status,\n                message: json\n            });\n        } else if (response.status === 403) {\n            return Promise.reject({\n                status: response.status,\n                error: 'RBAC access denied'\n            });\n        } else {\n            return Promise.reject(json);\n        }\n    });\n}\n\nfunction authenticatedFetch(endpoint, options) {\n    return window.insights.chrome.auth.getUser().then(() => fetch(endpoint, options));\n}\n\nexport const preflightRequest = () => {\n    return authenticatedFetch(preflightEndpoint).then(handleResponse);\n};\n\nexport const readJobExplorer = ({ params = {}}) => {\n    const { limit, offset, sort_by } = params;\n    const paginationParams = {\n        limit,\n        offset,\n        sort_by\n    };\n    const qs = stringify(paginationParams);\n    let url = new URL(jobExplorerEndpoint, window.location.origin);\n    url.search = qs;\n    return authenticatedFetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readEventExplorer = ({ params = {}}) => {\n    const { limit, offset, sort_by } = params;\n    const paginationParams = {\n        limit,\n        offset,\n        sort_by\n    };\n    const qs = stringify(paginationParams);\n    let url = new URL(eventExplorerEndpoint, window.location.origin);\n    url.search = qs;\n    return authenticatedFetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readROI = ({ params = {}}) => {\n    const { limit, offset, sort_by } = params;\n    const paginationParams = {\n        limit,\n        offset,\n        sort_by\n    };\n    const qs = stringify(paginationParams);\n    let url = new URL(ROIEndpoint, window.location.origin);\n    url.search = qs;\n    return authenticatedFetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readHostExplorer = ({ params = {}}) => {\n    const { limit, offset, sort_by } = params;\n    const paginationParams = {\n        limit,\n        offset,\n        sort_by\n    };\n    const qs = stringify(paginationParams);\n    let url = new URL(hostExplorerEndpoint, window.location.origin);\n    url.search = qs;\n    return authenticatedFetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readPlans = ({ params = {}}) => {\n    const { limit, offset, sort_by } = params;\n    const paginationParams = {\n        limit,\n        offset,\n        sort_by\n    };\n    const qs = stringify(paginationParams);\n    let url = new URL(plansEndpoint, window.location.origin);\n    url.search = qs;\n    return authenticatedFetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readPlan = ({ params = {}}) => {\n    let url = new URL(plansEndpoint, window.location.origin);\n    return authenticatedFetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readClustersOptions = ({ params = {}}) => {\n    let url = new URL(clustersOptionsEndpoint, window.location.origin);\n    return authenticatedFetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readOrgOptions = ({ params = {}}) => {\n    let url = new URL(orgOptionsEndpoint, window.location.origin);\n    return authenticatedFetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readROIOptions = ({ params = {}}) => {\n    let url = new URL(ROITemplatesOptionsEndpoint, window.location.origin);\n    return authenticatedFetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readPlanOptions = () => {\n    let url = new URL(planOptionsEndpoint, window.location.origin);\n    return authenticatedFetch(url, {\n        method: 'GET'\n    }).then(handleResponse);\n};\n\n// v0 endpoints used in Notifications.js\nexport const readClusters = () => {\n    return authenticatedFetch(clustersEndpoint).then(handleResponse);\n};\n\nexport const readNotifications = ({ params = {}}) => {\n    let url = new URL(notificationsEndpoint, window.location.origin);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return authenticatedFetch(url).then(handleResponse);\n};\n\nexport const readJobExplorerOptions = ({ params = {}}) => {\n    let url = new URL(jobExplorerOptionsEndpoint, window.location.origin);\n    return authenticatedFetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n","import { useState, useEffect, useReducer } from 'react';\n\nconst dataFetchReducer = (state, action) => {\n    switch (action.type) {\n        case 'FETCH_INIT':\n            return {\n                ...state,\n                isLoading: true,\n                isSuccess: false,\n                error: null\n            };\n        case 'FETCH_SUCCESS':\n            return {\n                ...state,\n                isLoading: false,\n                isSuccess: true,\n                error: null,\n                data: action.payload\n            };\n        case 'FETCH_FAILURE':\n            return {\n                ...state,\n                isLoading: false,\n                isSuccess: false,\n                error: action.payload\n            };\n        case 'UPDATE_DATA':\n            return {\n                ...state,\n                data: action.payload\n            };\n        default:\n            throw new Error();\n    }\n};\n\nconst useApi = (initialData, postprocess = d => d) => {\n    const [ request, setRequest ] = useState(null);\n\n    const [ state, dispatch ] = useReducer(dataFetchReducer, {\n        isLoading: false,\n        isSuccess: false,\n        error: null,\n        data: initialData\n    });\n\n    useEffect(() => {\n    // Prevent fetching nothing\n        if (!request) {\n            return;\n        }\n\n        // Initialize\n        let didCancel = false;\n        dispatch({ type: 'FETCH_INIT' });\n\n        // Fetching\n        request.then(data => {\n            if (!didCancel) {\n                dispatch({\n                    type: 'FETCH_SUCCESS',\n                    payload: postprocess(data)\n                });\n            }\n        }).catch(e => {\n            if (!didCancel) {\n                dispatch({ type: 'FETCH_FAILURE', payload: e });\n            }\n        });\n\n        return () => {\n            didCancel = true;\n        };\n    }, [ request ]);\n\n    const setData = data => {\n        dispatch({ type: 'UPDATE_DATA', payload: data });\n    };\n\n    return [ state, setRequest, setData ];\n};\n\nexport default useApi;\n","import { useReducer } from 'react';\nimport moment from 'moment';\n\nimport { formatDate } from '../Utilities/helpers';\n\nexport const useQueryParams = initial => {\n    const initialWithCalculatedParams = {\n        ...initial,\n        ...initial.sort_options && initial.sort_order && { sort_by: `${initial.sort_options}:${initial.sort_order}` }\n    };\n\n    const paramsReducer = (state, { type, value }) => {\n        switch (type) {\n            /* v0 api reducers */\n            case 'SET_STARTDATE':\n                return { ...state, startDate: value };\n            case 'SET_ENDDATE':\n                return { ...state, endDate: value };\n            case 'SET_ID':\n                if (!parseInt(value)) {\n                    const { id: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, id: parseInt(value) };\n            case 'SET_LIMIT':\n                if (!parseInt(value.limit)) {\n                    const { limit: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, limit: parseInt(value.limit) };\n            case 'SET_SEVERITY':\n                if (value.severity === '') {\n                    const { severity: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, ...value };\n\n            /* v1 api reducers */\n            case 'SET_OFFSET':\n            case 'SET_ATTRIBUTES':\n            case 'SET_JOB_TYPE':\n            case 'SET_STATUS':\n            case 'SET_ORG':\n            case 'SET_CLUSTER':\n            case 'SET_TEMPLATE':\n            case 'SET_AUTOMATION_STATUS':\n            case 'SET_CATEGORY':\n            case 'SET_FREQUENCY':\n            case 'SET_NAME':\n            case 'SET_ROOT_WORKFLOWS_AND_JOBS':\n                return { ...state, ...value };\n            case 'SET_QUICK_DATE_RANGE': {\n                let newState = { ...state };\n                if (value !== 'custom') {\n                    newState = { ...newState, start_date: null, end_date: null };\n                }\n\n                newState = { ...newState, ...value };\n                return newState;\n            }\n\n            case 'SET_START_DATE':\n            case 'SET_END_DATE': {\n                let newValues = {};\n                Object.entries(value).forEach(([ key, value ]) => {\n                    newValues[key] = formatDate(value);\n                });\n                return { ...state, ...newValues };\n            }\n\n            case 'SET_SORT_OPTIONS': {\n                return {\n                    ...state,\n                    sort_options: value.sort_options,\n                    ...state.sort_order && { sort_by: `${value.sort_options}:${state.sort_order}` } // Update sort by\n                };\n            }\n\n            case 'SET_SORT_ORDER': {\n                return {\n                    ...state,\n                    sort_order: value.sort_order,\n                    ...state.sort_options && { sort_by: `${state.sort_options}:${value.sort_order}` } // Update sort by\n                };\n            }\n\n            case 'REINITIALIZE':\n                return { ...value };\n            case 'RESET_FILTER':\n                return { ...initialWithCalculatedParams };\n            default:\n                throw new Error();\n        }\n    };\n\n    const [ queryParams, dispatch ] = useReducer(paramsReducer, { ...initialWithCalculatedParams });\n\n    const actionMapper = {\n        status: 'SET_STATUS',\n        quick_date_range: 'SET_QUICK_DATE_RANGE',\n        job_type: 'SET_JOB_TYPE',\n        org_id: 'SET_ORG',\n        cluster_id: 'SET_CLUSTER',\n        template_id: 'SET_TEMPLATE',\n        sort_order: 'SET_SORT_ORDER',\n        sort_options: `SET_SORT_OPTIONS`,\n        start_date: 'SET_START_DATE',\n        end_date: 'SET_END_DATE',\n        automation_status: 'SET_AUTOMATION_STATUS',\n        category: 'SET_CATEGORY',\n        frequency_period: 'SET_FREQUENCY',\n        name: 'SET_NAME',\n        only_root_workflows_and_standalone_jobs: 'SET_ROOT_WORKFLOWS_AND_JOBS'\n    };\n\n    return {\n        queryParams,\n        dispatch,\n        setLimit: limit => dispatch({ type: 'SET_LIMIT', value: { limit }}),\n        setOffset: offset => dispatch({ type: 'SET_OFFSET', value: { offset }}),\n        setFromToolbar: (varName, value = null) => {\n            if (!varName) {\n                dispatch({ type: 'RESET_FILTER' });\n            } else {\n                dispatch({ type: actionMapper[varName], value: { [varName]: value }});\n            }\n        },\n        /* v0 api usage after this line */\n        setSeverity: severity =>\n            dispatch({ type: 'SET_SEVERITY', value: { severity }}),\n        setEndDate: () => {\n            const endDate = moment().format('YYYY-MM-DD');\n            dispatch({ type: 'SET_ENDDATE', value: endDate });\n        },\n        setId: value => dispatch({ type: 'SET_ID', value }),\n        setStartDate: days => {\n            let startDate;\n            if (days === 7) {\n                startDate = moment()\n                .subtract(1, 'week')\n                .format('YYYY-MM-DD');\n            }\n\n            if (days === 14) {\n                startDate = moment()\n                .subtract(2, 'weeks')\n                .format('YYYY-MM-DD');\n            }\n\n            if (days === 31) {\n                startDate = moment()\n                .subtract(1, 'month')\n                .format('YYYY-MM-DD');\n            } else {\n                startDate = moment()\n                .subtract(days, 'days')\n                .format('YYYY-MM-DD');\n            }\n\n            dispatch({ type: 'SET_STARTDATE', value: startDate });\n        },\n        setStartDateAsString: value => dispatch({ type: 'SET_STARTDATE', value })\n    };\n};\n","/*eslint max-len: [\"error\", { \"ignoreStrings\": true }]*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Button,\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { WrenchIcon } from '@patternfly/react-icons';\n\nconst DefaultEmptyState = ({ preflightError: error }) => (\n    <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={WrenchIcon} />\n        {error.status === 404 && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n          No data found\n                </Title>\n                <EmptyStateBody>\n          Please visit{' '}\n                    <a\n                        href=\"https://docs.ansible.com/ansible-tower/latest/html/administration/usability_data_collection.html#automation-analytics\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n            here\n                    </a>{' '}\n          to learn how to enable Automation Analytics.\n                </EmptyStateBody>\n            </>\n        )}\n        {error.status === 401 && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n          Not authorized\n                </Title>\n                <EmptyStateBody>\n          You do not have the correct permissions to view this page.\n                </EmptyStateBody>\n            </>\n        )}\n        {!error.status && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n          Something went wrong, please try reloading the page\n                </Title>\n                <Button variant=\"primary\" onClick={() => window.location.reload()}>\n          Reload\n                </Button>\n            </>\n        )}\n    </EmptyState>\n);\n\nDefaultEmptyState.propTypes = {\n    preflightError: PropTypes.object\n};\n\nexport default DefaultEmptyState;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateIcon,\n    EmptyStateVariant,\n    Title\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { global_danger_color_200 as globalDangerColor200 } from '@patternfly/react-tokens';\n\nconst ApiErrorState = ({ message }) => (\n    <EmptyState variant={EmptyStateVariant.small}>\n        <EmptyStateIcon\n            icon={ExclamationCircleIcon}\n            color={globalDangerColor200.value}\n        />\n        <Title headingLevel=\"h2\" size=\"lg\">\n      Error\n        </Title>\n        <EmptyStateBody>{message}</EmptyStateBody>\n    </EmptyState>\n);\n\nApiErrorState.propTypes = {\n    message: PropTypes.string\n};\n\nexport default ApiErrorState;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nconst initializeChart = Chart => {\n    const BaseChart = props => {\n        const { id, margin } = props;\n\n        const getWidth = () => {\n            let width;\n            width =\n        parseInt(d3.select('#' + id).style('width')) -\n          margin.left -\n          margin.right || 700;\n            return width;\n        };\n\n        const getHeight = () => {\n            let height;\n            height =\n        parseInt(d3.select('#' + id).style('height')) -\n          margin.top -\n          margin.bottom || 450;\n            return height;\n        };\n\n        return <Chart {...props} getWidth={getWidth} getHeight={getHeight} />;\n    };\n\n    BaseChart.propTypes = {\n        id: PropTypes.string,\n        margin: PropTypes.object\n    };\n\n    return BaseChart;\n};\n\ninitializeChart.propTypes = {\n    Chart: PropTypes.element\n};\n\nexport default initializeChart;\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst NoData = () => (\n    <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={CubesIcon} />\n        <Title headingLevel=\"h5\" size=\"lg\">\n      No Data\n        </Title>\n    </EmptyState>\n);\n\nexport default NoData;\n","export const optionsForCategories = {\n    status: {\n        isSingle: false,\n        name: 'Status',\n        placeholder: 'Filter by job status'\n    },\n    quick_date_range: {\n        isSingle: true,\n        name: 'Date',\n        placeholder: 'Filter by date'\n    },\n    job_type: {\n        isSingle: false,\n        name: 'Job',\n        placeholder: 'Filter by job type'\n    },\n    org_id: {\n        isSingle: false,\n        name: 'Organization',\n        placeholder: 'Filter by organization'\n    },\n    cluster_id: {\n        isSingle: false,\n        name: 'Cluster',\n        placeholder: 'Filter by cluster'\n    },\n    template_id: {\n        isSingle: false,\n        name: 'Template',\n        placeholder: 'Filter by template'\n    },\n    sort_options: {\n        isSingle: true,\n        name: 'Sort by',\n        placeholder: 'Sort by attribute'\n    },\n    automation_status: {\n        isSingle: false,\n        name: 'Automation status',\n        placeholder: 'Filter by automation status'\n    },\n    frequency_period: {\n        isSingle: false,\n        name: 'Frequency',\n        placeholder: 'Filter by frequency'\n    },\n    category: {\n        isSingle: false,\n        name: 'Category',\n        placeholder: 'Filter by category'\n    },\n    name: {\n        isSingle: true,\n        name: 'Name',\n        placeholder: 'Filter by name'\n    }\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarItem, Select, SelectOption } from '@patternfly/react-core';\n\nconst CategoryDropdown = ({\n    selected,\n    setSelected = () => {},\n    categories = []\n}) => {\n    const [ isExpanded, setIsExpanded ] = useState(false);\n\n    return (\n        <ToolbarItem>\n            <Select\n                isOpen={isExpanded}\n                variant={'single'}\n                aria-label={'Categories'}\n                onToggle={() => setIsExpanded(!isExpanded)}\n                onSelect={(_event, selection) => {\n                    setSelected(selection);\n                    setIsExpanded(false);\n                }}\n                selections={selected}\n                placeholderText={'Filter by'}\n            >\n                {categories.map(({ key, name }) => (\n                    <SelectOption key={key} value={key}>\n                        {name}\n                    </SelectOption>\n                ))}\n            </Select>\n        </ToolbarItem>\n    );\n};\n\nCategoryDropdown.propTypes = {\n    categories: PropTypes.array,\n    selected: PropTypes.string,\n    setSelected: PropTypes.func\n};\n\nexport default CategoryDropdown;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ToolbarFilter,\n    Select,\n    SelectOption as PFSelectOption,\n    TextInput,\n    InputGroup,\n    ToolbarItem,\n    Button\n} from '@patternfly/react-core';\n\nimport {\n    SearchIcon\n} from '@patternfly/react-icons';\n\nimport {\n    handleCheckboxChips,\n    handleSingleChips\n} from '../helpers';\nimport { optionsForCategories } from '../constants';\nimport styled from 'styled-components';\n\nconst SelectOption = styled(PFSelectOption)`\n    display: block;\n    overflow-x: hidden;\n    text-overflow: ellipsis;\n    max-width: 300px;\n`;\n\nconst renderValues = values =>\n    values && values.map(({ key, value, description }) => (\n        <SelectOption key={ key } value={ key } description={ description }>\n            <span style={{ marginLeft: 5 }}>{ value } </span>\n        </SelectOption>\n    ));\n\nconst ToolbarFilterItem = ({\n    categoryKey,\n    filter = null,\n    values = [],\n    isVisible = true,\n    hasChips = true,\n    setFilter\n}) => {\n    const [ expanded, setExpanded ] = useState(false);\n    const [ searchVal, setSearchVal ] = useState('');\n    const options = optionsForCategories[categoryKey];\n\n    const onDelete = (name, valueToDelete) => {\n        const single = optionsForCategories[categoryKey].isSingle;\n\n        if (single) {\n            setFilter(null);\n        } else {\n            const keyToDelete = values.find(({ value }) => value === valueToDelete)\n            .key;\n            const filteredArr = filter.filter(value => value !== keyToDelete);\n            setFilter(filteredArr);\n        }\n    };\n\n    const onFilter = (_event, textInput) => {\n        if (textInput === '') {\n            return renderValues(values);\n        } else {\n            return renderValues(\n                values.filter(({ value }) =>\n                    value.toLowerCase().includes(textInput.toLowerCase())\n                )\n            );\n        }\n    };\n\n    const handleChips = () => {\n        if (options.isSingle) {\n            return handleSingleChips(filter, values);\n        } else {\n            return handleCheckboxChips(filter, values);\n        }\n    };\n\n    const onSelect = (event, selection) => {\n        if (options.isSingle) {\n            setFilter(selection);\n            setExpanded(false);\n        } else {\n            setFilter(!filter.includes(selection)\n                ? [ ...filter, selection ]\n                : filter.filter(value => value !== selection)\n            );\n        }\n    };\n\n    const handleOnClick = () => {\n        setFilter(searchVal);\n        setSearchVal(searchVal);\n    };\n\n    const handleInputChange = e => {\n        setSearchVal(e);\n    };\n\n    const renderSearch = () => {\n        return (\n            <ToolbarItem>\n                <InputGroup>\n                    <TextInput name=\"textInput1\" id=\"textInput1\" type=\"search\" aria-label=\"search input\" onChange={handleInputChange} />\n                    <Button variant='control' aria-label=\"search button for search input\">\n                        <SearchIcon onClick={handleOnClick} />\n                    </Button>\n                </InputGroup>\n            </ToolbarItem>\n        );\n    };\n\n    if (categoryKey === 'name') {\n        return (\n            <ToolbarFilter\n                data-cy={categoryKey}\n                key={categoryKey}\n                showToolbarItem={isVisible}\n                chips={[]}\n                categoryName={options.name}\n                deleteChip={null}\n            >\n                { renderSearch() }\n            </ToolbarFilter>\n        );\n    } else {\n        return (\n            <ToolbarFilter\n                data-cy={categoryKey}\n                key={categoryKey}\n                showToolbarItem={isVisible}\n                chips={hasChips ? handleChips() : []}\n                categoryName={options.name}\n                deleteChip={hasChips ? onDelete : null}\n            >\n                <Select\n                    variant={options.isSingle ? 'single' : 'checkbox'}\n                    aria-label={categoryKey}\n                    onToggle={() => setExpanded(!expanded)}\n                    onSelect={onSelect}\n                    selections={filter}\n                    isOpen={expanded}\n                    hasInlineFilter\n                    placeholderText={options.placeholder}\n                    onFilter={onFilter}\n                    maxHeight={'1000%'}\n                >\n                    { renderValues(values)}\n                </Select>\n            </ToolbarFilter>\n        );\n    }\n};\n\nToolbarFilterItem.propTypes = {\n    categoryKey: PropTypes.string.isRequired,\n    filter: PropTypes.any,\n    values: PropTypes.array,\n    isVisible: PropTypes.bool,\n    hasChips: PropTypes.bool,\n    setFilter: PropTypes.func.isRequired\n};\n\nexport default ToolbarFilterItem;\n","/**\n * Get comparator values if their key is in the item list\n */\nexport const handleCheckboxChips = (item, comparator) => {\n    if (item && comparator) {\n        return item.reduce((acc, i) => {\n            Number.isInteger(parseInt(i)) ? (i = parseInt(i)) : i;\n\n            comparator.forEach(cmpItem => {\n                if (cmpItem.key === i) {\n                    acc.push(cmpItem.value);\n                }\n            });\n\n            return acc;\n        }, []);\n    }\n\n    return [];\n};\n\n/**\n * Convert a list of objects to a list of the last value if defined\n */\nexport const handleSingleChips = (item, comparator) => {\n    if (item && typeof item === 'string' && comparator) {\n        let val;\n        comparator.forEach(i => {\n            if (i.key === item) {\n                val = i.value;\n            }\n        });\n\n        if (val !== undefined) {\n            return [ val ];\n        }\n    }\n\n    return [];\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ToolbarGroup\n} from '@patternfly/react-core';\n\nimport CategoryDropdown from '../CustomFormElements/CategoryDropdown';\nimport ToolbarFilterItem from '../CustomFormElements/ToolbarFilterItem';\nimport { optionsForCategories } from '../constants';\n\nconst FilterCategoriesGroup = ({\n    filterCategories,\n    filters,\n    setFilters\n}) => {\n    const [ currentCategory, setCurrentCategory ] = useState(\n        Object.keys(filterCategories)[0]\n    );\n\n    return (\n        <ToolbarGroup variant=\"filter-group\">\n            <CategoryDropdown\n                selected={currentCategory}\n                setSelected={setCurrentCategory}\n                categories={Object.keys(filterCategories).map(el => ({\n                    key: el,\n                    name: optionsForCategories[el].name\n                }))}\n            />\n            {Object.keys(filterCategories).map(key => (\n                <ToolbarFilterItem\n                    key={key}\n                    categoryKey={key}\n                    filter={filters[key]}\n                    values={filterCategories[key]}\n                    isVisible={currentCategory === key}\n                    setFilter={value => setFilters(key, value)}\n                />\n            ))}\n        </ToolbarGroup>\n    );\n};\n\nFilterCategoriesGroup.propTypes = {\n    filterCategories: PropTypes.object.isRequired,\n    filters: PropTypes.object.isRequired,\n    setFilters: PropTypes.func.isRequired\n};\n\nexport default FilterCategoriesGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, TextInput } from '@patternfly/react-core';\n\nconst CustomDateSelector = ({\n    onInputChange = () => {},\n    startDate = '',\n    endDate = ''\n}) => {\n    return (\n        <>\n            <InputGroup>\n                <TextInput\n                    name=\"startDate\"\n                    id=\"startDate\"\n                    type=\"date\"\n                    aria-label=\"Start Date\"\n                    value={startDate}\n                    onChange={e => onInputChange('start_date', e)}\n                />\n            </InputGroup>\n            <InputGroup>\n                <TextInput\n                    name=\"endDate\"\n                    id=\"endDate\"\n                    type=\"date\"\n                    aria-label=\"End Date\"\n                    value={endDate}\n                    onChange={e => onInputChange('end_date', e)}\n                />\n            </InputGroup>\n        </>\n    );\n};\n\nCustomDateSelector.propTypes = {\n    startDate: PropTypes.string,\n    endDate: PropTypes.string,\n    onInputChange: PropTypes.func\n};\n\nexport default CustomDateSelector;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ToolbarGroup\n} from '@patternfly/react-core';\n\nimport ToolbarFilterItem from '../CustomFormElements/ToolbarFilterItem';\nimport CustomDateSelector from '../CustomFormElements/CustomDateSelector';\n\nconst QuickDateGroup = ({\n    filters,\n    setFilters,\n    values\n}) => (\n    <ToolbarGroup variant=\"filter-group\">\n        <ToolbarFilterItem\n            categoryKey=\"quick_date_range\"\n            filter={filters.quick_date_range}\n            values={values}\n            setFilter={value => setFilters('quick_date_range', value)}\n            hasChips={false}\n        />\n        {filters.quick_date_range &&\n         filters.quick_date_range.includes('custom') && (\n            <CustomDateSelector\n                startDate={filters.start_date ? filters.start_date : ''}\n                endDate={filters.end_date ? filters.end_date : ''}\n                onInputChange={setFilters}\n            />\n        )}\n    </ToolbarGroup>\n);\n\nQuickDateGroup.propTypes = {\n    filters: PropTypes.object.isRequired,\n    setFilters: PropTypes.func.isRequired,\n    values: PropTypes.array.isRequired\n};\n\nexport default QuickDateGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ToolbarGroup,\n    Button\n} from '@patternfly/react-core';\nimport {\n    SortAmountDownIcon,\n    SortAmountUpIcon\n} from '@patternfly/react-icons';\n\nimport ToolbarFilterItem from '../CustomFormElements/ToolbarFilterItem';\n\nconst SortByGroup = ({\n    filters,\n    setFilters,\n    sort_options\n}) => (\n    <ToolbarGroup variant=\"filter-group\">\n        <ToolbarFilterItem\n            categoryKey=\"sort_options\"\n            filter={filters.sort_options}\n            values={sort_options}\n            setFilter={value =>\n                setFilters('sort_options', value)\n            }\n            hasChips={false}\n        />\n        <Button variant=\"control\"\n            onClick={() => setFilters(\n                'sort_order',\n                filters.sort_order === 'asc' ? 'desc' : 'asc'\n            )}\n        >\n            {filters.sort_order === 'asc' && (<SortAmountUpIcon />)}\n            {filters.sort_order === 'desc' && (<SortAmountDownIcon />)}\n        </Button>\n    </ToolbarGroup>\n);\n\nSortByGroup.propTypes = {\n    filters: PropTypes.object.isRequired,\n    setFilters: PropTypes.func.isRequired,\n    sort_options: PropTypes.array.isRequired\n};\n\nexport default SortByGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Button,\n    Tooltip,\n    Switch\n} from '@patternfly/react-core';\nimport {\n    Card,\n    CardTitle,\n    CardBody,\n    CardActions,\n    CardHeader\n} from '@patternfly/react-core';\nimport {\n    QuestionCircleIcon,\n    TimesIcon\n} from '@patternfly/react-icons';\n\n/* TODO: For future work: make settings more modular for different pages */\nconst SettingsPanel = ({\n    filters,\n    setFilters,\n    settingsExpanded,\n    setSettingsExpanded\n}) => (\n    <Card isFlat style={{ backgroundColor: '#EEEEEE' }}>\n        <CardHeader>\n            <CardActions>\n                <Button\n                    variant=\"plain\"\n                    onClick={() => setSettingsExpanded(!settingsExpanded)}\n                >\n                    <TimesIcon />\n                </Button>\n            </CardActions>\n            <CardTitle>Settings</CardTitle>\n        </CardHeader>\n        <CardBody>\n            <Switch\n                id=\"showRootWorkflowJobs\"\n                label=\"Ignore nested workflows and jobs\"\n                labelOff=\"Ignore nested workflows and jobs\"\n                isChecked={filters.only_root_workflows_and_standalone_jobs}\n                onChange={val => {\n                    setFilters('only_root_workflows_and_standalone_jobs', val);\n                }}\n            />\n            <Tooltip\n                position={'top'}\n                content={\n                    <div>\n                        {' '}\n            If enabled, nested workflows and jobs will not be included in the\n            overall totals. Enable this option to filter out duplicate\n            entries.\n                    </div>\n                }\n            >\n                <QuestionCircleIcon />\n            </Tooltip>\n        </CardBody>\n    </Card>\n);\n\nSettingsPanel.propTypes = {\n    filters: PropTypes.object.isRequired,\n    setFilters: PropTypes.func.isRequired,\n    settingsExpanded: PropTypes.bool.isRequired,\n    setSettingsExpanded: PropTypes.func.isRequired\n};\n\nexport default SettingsPanel;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Toolbar,\n    ToolbarContent,\n    Button,\n    ToolbarItem\n} from '@patternfly/react-core';\nimport {\n    FilterIcon,\n    CogIcon\n} from '@patternfly/react-icons';\n\nimport { optionsForCategories } from './constants';\nimport FilterCategoriesGroup from './Groups/FiltersCategoriesGroup';\nimport QuickDateGroup from './Groups/QuickDateGroup';\nimport SortByGroup from './Groups/SortByGroup';\nimport SettingsPanel from './Groups/SettingsPanel';\n\nconst FilterableToolbar = ({\n    categories,\n    filters,\n    setFilters,\n    pagination = null,\n    hasSettings = false\n}) => {\n    const [ settingsExpanded, setSettingsExpanded ] = useState(false);\n    const { quick_date_range, sort_options, ...restCategories } = categories;\n\n    // Filter out elements which are not in the option object.\n    const filterCategories = Object.keys(restCategories)\n    .filter(key => Object.keys(optionsForCategories).includes(key))\n    .reduce((obj, key) => {\n        obj[key] = restCategories[key];\n        return obj;\n    }, {});\n\n    return (\n        <>\n            <Toolbar\n                id=\"filterable-toolbar-with-chip-groups\"\n                clearAllFilters={() => {\n                    setFilters(null, null);\n                }}\n                collapseListedFiltersBreakpoint=\"xl\"\n            >\n                <ToolbarContent>\n                    <Button variant=\"control\">\n                        <FilterIcon />\n                    </Button>\n                    {Object.keys(filterCategories).length > 0 && (\n                        <FilterCategoriesGroup\n                            filterCategories={filterCategories}\n                            filters={filters}\n                            setFilters={setFilters}\n                        />\n                    )}\n                    {quick_date_range &&\n                        <QuickDateGroup\n                            filters={filters}\n                            setFilters={setFilters}\n                            values={quick_date_range}\n                        />}\n                    {sort_options &&\n                        <SortByGroup\n                            filters={filters}\n                            setFilters={setFilters}\n                            sort_options={sort_options}\n                        />}\n                    {hasSettings && (\n                        <ToolbarItem>\n                            <Button\n                                variant=\"plain\"\n                                onClick={() => setSettingsExpanded(!settingsExpanded)}\n                                aria-label=\"settings\"\n                                isActive={settingsExpanded}\n                            >\n                                <CogIcon />\n                            </Button>\n                        </ToolbarItem>\n                    )}\n                    {pagination && (\n                        <ToolbarItem\n                            variant=\"pagination\"\n                            visibility={{ default: 'hidden', lg: 'visible' }}\n                        >\n                            {pagination}\n                        </ToolbarItem>\n                    )}\n                </ToolbarContent>\n                {settingsExpanded &&\n                    <SettingsPanel\n                        filters={filters}\n                        setFilters={setFilters}\n                        settingsExpanded={settingsExpanded}\n                        setSettingsExpanded={setSettingsExpanded}\n                    />}\n            </Toolbar>\n        </>\n    );\n};\n\nFilterableToolbar.propTypes = {\n    categories: PropTypes.object.isRequired,\n    filters: PropTypes.object.isRequired,\n    setFilters: PropTypes.func.isRequired,\n    pagination: PropTypes.object,\n    hasSettings: PropTypes.bool\n};\n\nexport default FilterableToolbar;\n","import Toolbar from './Toolbar';\n\nexport default Toolbar;\n","import { Paths } from '../paths';\nimport { stringify } from 'query-string';\n\nconst useRedirect = (history, path) => query => {\n    const search = stringify(query, { arrayFormat: 'bracket' });\n    history.push({\n        pathname: Paths[path],\n        search\n    });\n};\n\nexport default useRedirect;\n","var map = {\n\t\"./af\": 245,\n\t\"./af.js\": 245,\n\t\"./ar\": 246,\n\t\"./ar-dz\": 247,\n\t\"./ar-dz.js\": 247,\n\t\"./ar-kw\": 248,\n\t\"./ar-kw.js\": 248,\n\t\"./ar-ly\": 249,\n\t\"./ar-ly.js\": 249,\n\t\"./ar-ma\": 250,\n\t\"./ar-ma.js\": 250,\n\t\"./ar-sa\": 251,\n\t\"./ar-sa.js\": 251,\n\t\"./ar-tn\": 252,\n\t\"./ar-tn.js\": 252,\n\t\"./ar.js\": 246,\n\t\"./az\": 253,\n\t\"./az.js\": 253,\n\t\"./be\": 254,\n\t\"./be.js\": 254,\n\t\"./bg\": 255,\n\t\"./bg.js\": 255,\n\t\"./bm\": 256,\n\t\"./bm.js\": 256,\n\t\"./bn\": 257,\n\t\"./bn-bd\": 258,\n\t\"./bn-bd.js\": 258,\n\t\"./bn.js\": 257,\n\t\"./bo\": 259,\n\t\"./bo.js\": 259,\n\t\"./br\": 260,\n\t\"./br.js\": 260,\n\t\"./bs\": 261,\n\t\"./bs.js\": 261,\n\t\"./ca\": 262,\n\t\"./ca.js\": 262,\n\t\"./cs\": 263,\n\t\"./cs.js\": 263,\n\t\"./cv\": 264,\n\t\"./cv.js\": 264,\n\t\"./cy\": 265,\n\t\"./cy.js\": 265,\n\t\"./da\": 266,\n\t\"./da.js\": 266,\n\t\"./de\": 267,\n\t\"./de-at\": 268,\n\t\"./de-at.js\": 268,\n\t\"./de-ch\": 269,\n\t\"./de-ch.js\": 269,\n\t\"./de.js\": 267,\n\t\"./dv\": 270,\n\t\"./dv.js\": 270,\n\t\"./el\": 271,\n\t\"./el.js\": 271,\n\t\"./en-au\": 272,\n\t\"./en-au.js\": 272,\n\t\"./en-ca\": 273,\n\t\"./en-ca.js\": 273,\n\t\"./en-gb\": 274,\n\t\"./en-gb.js\": 274,\n\t\"./en-ie\": 275,\n\t\"./en-ie.js\": 275,\n\t\"./en-il\": 276,\n\t\"./en-il.js\": 276,\n\t\"./en-in\": 277,\n\t\"./en-in.js\": 277,\n\t\"./en-nz\": 278,\n\t\"./en-nz.js\": 278,\n\t\"./en-sg\": 279,\n\t\"./en-sg.js\": 279,\n\t\"./eo\": 280,\n\t\"./eo.js\": 280,\n\t\"./es\": 281,\n\t\"./es-do\": 282,\n\t\"./es-do.js\": 282,\n\t\"./es-mx\": 283,\n\t\"./es-mx.js\": 283,\n\t\"./es-us\": 284,\n\t\"./es-us.js\": 284,\n\t\"./es.js\": 281,\n\t\"./et\": 285,\n\t\"./et.js\": 285,\n\t\"./eu\": 286,\n\t\"./eu.js\": 286,\n\t\"./fa\": 287,\n\t\"./fa.js\": 287,\n\t\"./fi\": 288,\n\t\"./fi.js\": 288,\n\t\"./fil\": 289,\n\t\"./fil.js\": 289,\n\t\"./fo\": 290,\n\t\"./fo.js\": 290,\n\t\"./fr\": 291,\n\t\"./fr-ca\": 292,\n\t\"./fr-ca.js\": 292,\n\t\"./fr-ch\": 293,\n\t\"./fr-ch.js\": 293,\n\t\"./fr.js\": 291,\n\t\"./fy\": 294,\n\t\"./fy.js\": 294,\n\t\"./ga\": 295,\n\t\"./ga.js\": 295,\n\t\"./gd\": 296,\n\t\"./gd.js\": 296,\n\t\"./gl\": 297,\n\t\"./gl.js\": 297,\n\t\"./gom-deva\": 298,\n\t\"./gom-deva.js\": 298,\n\t\"./gom-latn\": 299,\n\t\"./gom-latn.js\": 299,\n\t\"./gu\": 300,\n\t\"./gu.js\": 300,\n\t\"./he\": 301,\n\t\"./he.js\": 301,\n\t\"./hi\": 302,\n\t\"./hi.js\": 302,\n\t\"./hr\": 303,\n\t\"./hr.js\": 303,\n\t\"./hu\": 304,\n\t\"./hu.js\": 304,\n\t\"./hy-am\": 305,\n\t\"./hy-am.js\": 305,\n\t\"./id\": 306,\n\t\"./id.js\": 306,\n\t\"./is\": 307,\n\t\"./is.js\": 307,\n\t\"./it\": 308,\n\t\"./it-ch\": 309,\n\t\"./it-ch.js\": 309,\n\t\"./it.js\": 308,\n\t\"./ja\": 310,\n\t\"./ja.js\": 310,\n\t\"./jv\": 311,\n\t\"./jv.js\": 311,\n\t\"./ka\": 312,\n\t\"./ka.js\": 312,\n\t\"./kk\": 313,\n\t\"./kk.js\": 313,\n\t\"./km\": 314,\n\t\"./km.js\": 314,\n\t\"./kn\": 315,\n\t\"./kn.js\": 315,\n\t\"./ko\": 316,\n\t\"./ko.js\": 316,\n\t\"./ku\": 317,\n\t\"./ku.js\": 317,\n\t\"./ky\": 318,\n\t\"./ky.js\": 318,\n\t\"./lb\": 319,\n\t\"./lb.js\": 319,\n\t\"./lo\": 320,\n\t\"./lo.js\": 320,\n\t\"./lt\": 321,\n\t\"./lt.js\": 321,\n\t\"./lv\": 322,\n\t\"./lv.js\": 322,\n\t\"./me\": 323,\n\t\"./me.js\": 323,\n\t\"./mi\": 324,\n\t\"./mi.js\": 324,\n\t\"./mk\": 325,\n\t\"./mk.js\": 325,\n\t\"./ml\": 326,\n\t\"./ml.js\": 326,\n\t\"./mn\": 327,\n\t\"./mn.js\": 327,\n\t\"./mr\": 328,\n\t\"./mr.js\": 328,\n\t\"./ms\": 329,\n\t\"./ms-my\": 330,\n\t\"./ms-my.js\": 330,\n\t\"./ms.js\": 329,\n\t\"./mt\": 331,\n\t\"./mt.js\": 331,\n\t\"./my\": 332,\n\t\"./my.js\": 332,\n\t\"./nb\": 333,\n\t\"./nb.js\": 333,\n\t\"./ne\": 334,\n\t\"./ne.js\": 334,\n\t\"./nl\": 335,\n\t\"./nl-be\": 336,\n\t\"./nl-be.js\": 336,\n\t\"./nl.js\": 335,\n\t\"./nn\": 337,\n\t\"./nn.js\": 337,\n\t\"./oc-lnc\": 338,\n\t\"./oc-lnc.js\": 338,\n\t\"./pa-in\": 339,\n\t\"./pa-in.js\": 339,\n\t\"./pl\": 340,\n\t\"./pl.js\": 340,\n\t\"./pt\": 341,\n\t\"./pt-br\": 342,\n\t\"./pt-br.js\": 342,\n\t\"./pt.js\": 341,\n\t\"./ro\": 343,\n\t\"./ro.js\": 343,\n\t\"./ru\": 344,\n\t\"./ru.js\": 344,\n\t\"./sd\": 345,\n\t\"./sd.js\": 345,\n\t\"./se\": 346,\n\t\"./se.js\": 346,\n\t\"./si\": 347,\n\t\"./si.js\": 347,\n\t\"./sk\": 348,\n\t\"./sk.js\": 348,\n\t\"./sl\": 349,\n\t\"./sl.js\": 349,\n\t\"./sq\": 350,\n\t\"./sq.js\": 350,\n\t\"./sr\": 351,\n\t\"./sr-cyrl\": 352,\n\t\"./sr-cyrl.js\": 352,\n\t\"./sr.js\": 351,\n\t\"./ss\": 353,\n\t\"./ss.js\": 353,\n\t\"./sv\": 354,\n\t\"./sv.js\": 354,\n\t\"./sw\": 355,\n\t\"./sw.js\": 355,\n\t\"./ta\": 356,\n\t\"./ta.js\": 356,\n\t\"./te\": 357,\n\t\"./te.js\": 357,\n\t\"./tet\": 358,\n\t\"./tet.js\": 358,\n\t\"./tg\": 359,\n\t\"./tg.js\": 359,\n\t\"./th\": 360,\n\t\"./th.js\": 360,\n\t\"./tk\": 361,\n\t\"./tk.js\": 361,\n\t\"./tl-ph\": 362,\n\t\"./tl-ph.js\": 362,\n\t\"./tlh\": 363,\n\t\"./tlh.js\": 363,\n\t\"./tr\": 364,\n\t\"./tr.js\": 364,\n\t\"./tzl\": 365,\n\t\"./tzl.js\": 365,\n\t\"./tzm\": 366,\n\t\"./tzm-latn\": 367,\n\t\"./tzm-latn.js\": 367,\n\t\"./tzm.js\": 366,\n\t\"./ug-cn\": 368,\n\t\"./ug-cn.js\": 368,\n\t\"./uk\": 369,\n\t\"./uk.js\": 369,\n\t\"./ur\": 370,\n\t\"./ur.js\": 370,\n\t\"./uz\": 371,\n\t\"./uz-latn\": 372,\n\t\"./uz-latn.js\": 372,\n\t\"./uz.js\": 371,\n\t\"./vi\": 373,\n\t\"./vi.js\": 373,\n\t\"./x-pseudo\": 374,\n\t\"./x-pseudo.js\": 374,\n\t\"./yo\": 375,\n\t\"./yo.js\": 375,\n\t\"./zh-cn\": 376,\n\t\"./zh-cn.js\": 376,\n\t\"./zh-hk\": 377,\n\t\"./zh-hk.js\": 377,\n\t\"./zh-mo\": 378,\n\t\"./zh-mo.js\": 378,\n\t\"./zh-tw\": 379,\n\t\"./zh-tw.js\": 379\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 476;","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { Paths } from '../../paths';\n\nimport { formatDateTime } from '../../Utilities/helpers';\n\nimport {\n    Card,\n    CardHeader,\n    CardHeaderMain,\n    CardActions,\n    CardTitle,\n    CardBody,\n    CardFooter,\n    Checkbox,\n    Dropdown,\n    DropdownItem,\n    KebabToggle,\n    Label\n} from '@patternfly/react-core';\n\nimport { CheckCircleIcon, ExclamationCircleIcon } from '@patternfly/react-icons';\nimport styled from 'styled-components';\nimport { stringify } from 'query-string';\n\nimport { Link, useRouteMatch } from 'react-router-dom';\n\nconst CardLabel = styled.span`\n  margin-right: 5px;\n`;\n\nconst PlanCard = (\n    {\n        name,\n        id = null,\n        description = '',\n        frequency_period = '',\n        template_details = {},\n        automation_status = {},\n        modified = '',\n        category = '',\n        isSuccess\n    }) => {\n    const [ isCardKebabOpen, setIsCardKebabOpen ] = useState(false);\n\n    const match = useRouteMatch();\n    let history = useHistory();\n\n    const redirectToJobExplorer = templateId => {\n        const { jobExplorer } = Paths;\n        const initialQueryParams = {\n            quick_date_range: 'last_30_days',\n            status: [ 'failed', 'successful' ],\n            template_id: [ templateId ]\n        };\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    const renderTemplateLink = template => {\n        return (template && isSuccess ? <a onClick={() => redirectToJobExplorer(template.id)}>{template.name}</a> : null);\n    };\n\n    const kebabDropDownItems = [\n        <React.Fragment key={id}>\n            <DropdownItem key=\"edit\" onClick={() => { }} position=\"right\">\n                Edit\n            </DropdownItem>\n            <DropdownItem key=\"link\" onClick={() => { }} position=\"right\">\n                Link template\n            </DropdownItem>\n        </React.Fragment>\n    ];\n\n    return (\n        <Card isHoverable isCompact>\n            <CardHeader>\n                <CardHeaderMain>\n                    <CardTitle>\n                        <Link to={`${match.url}/${id}`}>\n                            {name}\n                        </Link>\n                    </CardTitle>\n                </CardHeaderMain>\n                <CardActions>\n                    <Dropdown\n                        onSelect={() => { }}\n                        toggle={<KebabToggle onToggle={() => setIsCardKebabOpen(!isCardKebabOpen)} />}\n                        isOpen={isCardKebabOpen}\n                        isPlain\n                        dropdownItems={kebabDropDownItems}\n                        position={'right'}\n                    />\n                    <Checkbox\n                        isChecked={false}\n                        onChange={() => { }}\n                        aria-label=\"card checkbox\"\n                        id=\"check-1\"\n                        name=\"check1\"\n                    />\n                </CardActions>\n            </CardHeader>\n            <CardBody>\n                {description ? (<p>{description}</p>) : null}\n                <div>\n                    <CardLabel>Frequency</CardLabel> {frequency_period ? frequency_period : (<em>None</em>)}\n                </div>\n                <div>\n                    <CardLabel>Template</CardLabel> {template_details ? renderTemplateLink(template_details) : (<em>None</em>)}\n                </div>\n                <div>\n                    <CardLabel>Automation status</CardLabel>\n                    {automation_status.status === 'successful' ? (\n                        <Label variant=\"outline\" color=\"green\" icon={<CheckCircleIcon />}>\n                            Running\n                        </Label>\n                    ) : (\n                        <Label variant=\"outline\" color=\"red\" icon={<ExclamationCircleIcon />}>\n                            Not Running\n                        </Label>\n                    )}\n                </div>\n                <div>\n                    <CardLabel>Last updated</CardLabel> <em>{formatDateTime(modified)}</em>\n                </div>\n            </CardBody>\n            <CardFooter>\n                <Label>{category}</Label>\n            </CardFooter>\n        </Card>\n    );\n};\n\nPlanCard.propTypes = {\n    isSuccess: PropTypes.bool.isRequired,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.number,\n    description: PropTypes.string,\n    frequency_period: PropTypes.string,\n    template_details: PropTypes.object,\n    modified: PropTypes.string,\n    category: PropTypes.string,\n    automation_status: PropTypes.object\n};\n\nexport default PlanCard;\n","import React, { useEffect, useState } from 'react';\n\nimport {\n    preflightRequest,\n    readPlanOptions,\n    readPlans\n} from '../../Api';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport PlanCard from './PlanCard';\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { savingsPlanner } from '../../Utilities/constants';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle,\n    NotAuthorized\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Gallery,\n    Pagination,\n    PaginationVariant\n} from '@patternfly/react-core';\n\nconst perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '15', value: 15 },\n    { title: '20', value: 20 },\n    { title: '25', value: 25 }\n];\n\nconst qp = {\n    limit: 5,\n    sort_options: 'modified',\n    sort_order: 'desc'\n};\n\nconst combined = {\n    ...savingsPlanner.defaultParams,\n    ...qp\n};\n\nconst SavingsPlanner = () => {\n    const {\n        queryParams,\n        setLimit,\n        setOffset,\n        setFromToolbar\n    } = useQueryParams(combined);\n    const [\n        {\n            isLoading,\n            isSuccess,\n            error,\n            data: { meta = {}, items: data = []}\n        },\n        setData\n    ] = useApi({ meta: {}, items: []});\n    const [ options, setOptions ] = useApi({});\n    const [ currPage, setCurrPage ] = useState(1);\n    const [ preflightError, setPreFlightError ] = useState(null);\n\n    const combinedOptions = {\n        ...options.data,\n        name: [{ key: 'name', value: null }]\n    };\n\n    const returnOffsetVal = page => (page - 1) * queryParams.limit;\n\n    const handleSetPage = page => {\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    const handlePerPageSelect = (perPage, page) => {\n        setLimit(perPage);\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    useEffect(() => {\n        const fetchEndpoints = () => {\n            preflightRequest().catch(error => {\n                setPreFlightError({ preflightError: error });\n            });\n            setData(readPlans({ params: queryParams }));\n            setOptions(readPlanOptions());\n        };\n\n        fetchEndpoints();\n    }, [ queryParams ]);\n\n    if (preflightError?.preflightError?.status === 403) {\n        return <NotAuthorized {...notAuthorizedParams} />;\n    }\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={'Savings Planner'} />\n                <FilterableToolbar\n                    categories={combinedOptions}\n                    filters={queryParams}\n                    setFilters={setFromToolbar}\n                    pagination={\n                        <Pagination\n                            itemCount={meta && meta.total_count ? meta.total_count : 0}\n                            widgetId=\"pagination-options-menu-top\"\n                            perPageOptions={perPageOptions}\n                            perPage={queryParams.limit}\n                            page={currPage}\n                            variant={PaginationVariant.top}\n                            onPerPageSelect={(_event, perPage, page) => {\n                                handlePerPageSelect(perPage, page);\n                            }}\n                            onSetPage={(_event, pageNumber) => {\n                                handleSetPage(pageNumber);\n                            }}\n                            isCompact\n                        />\n                    }\n                />\n            </PageHeader>\n            {preflightError && (\n                <Main>\n                    <EmptyState {...preflightError} />\n                </Main>\n            )}\n            {error && (\n                <Main style={{ height: '100vh' }}>\n                    <ApiErrorState message={error.error} />\n                </Main>\n            )}\n            {isLoading && (\n                <Main style={{ height: '100vh' }}>\n                    <LoadingState />\n                </Main>\n            )}\n            {isSuccess && (\n                <Main style={{ height: '100vh' }}>\n                    <Gallery hasGutter>\n                        {options.isSuccess && data.map(datum => (\n                            <PlanCard\n                                key={datum.id}\n                                isSuccess={options.isSuccess}\n                                {...datum}\n                            />\n                        ))}\n                    </Gallery>\n                </Main>\n            )}\n            <Pagination\n                itemCount={meta && meta.total_count ? meta.total_count : 0}\n                widgetId=\"pagination-options-menu-top\"\n                perPageOptions={perPageOptions}\n                perPage={queryParams.limit}\n                page={currPage}\n                variant={PaginationVariant.bottom}\n                onPerPageSelect={(_event, perPage, page) => {\n                    handlePerPageSelect(perPage, page);\n                }}\n                onSetPage={(_event, pageNumber) => {\n                    handleSetPage(pageNumber);\n                }}\n                isSticky\n            />\n        </React.Fragment>\n    );\n};\n\nexport default SavingsPlanner;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Switch } from '@patternfly/react-core';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  overflow: auto;\n  width: 100%;\n  height: ${props => props.height};\n`;\n\nconst LegendDetail = styled.div`\n  display: flex;\n  padding: 7.5px 15px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  overflow: auto;\n`;\n\nconst Color = styled.div.attrs(props => ({\n    color: props.color || 'black'\n}))`\n  min-width: 12px;\n  height: 12px;\n  background: ${props => props.color};\n  margin-right: 20px;\n`;\n\nconst Title = styled.span`\n  font-size: 15px;\n  display: inline-block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n`;\n\nconst SubTitle = styled.span`\n  font-size: 15px;\n  margin-left: auto;\n  margin-right: 0;\n  padding-right: 10px;\n`;\n\nconst Legend = ({\n    data,\n    selected,\n    height,\n    onToggle\n}) => {\n    return (\n        <Container height={ height }>\n            { data.map(\n                ({ name, value, id, count }, index) => (\n                    <LegendDetail key={ index }>\n                        <Wrapper>\n                            <Color color={ value } />\n                            <Title>{ name }</Title>\n                        </Wrapper>\n                        {count && (\n                            <SubTitle>{count}</SubTitle>\n                        )}\n                        {selected && (\n                            <Switch\n                                isChecked={selected.some(selection => selection === id)}\n                                onChange={() => onToggle(id)}\n                                aria-label={name}\n                                value={id}\n                                key={index}\n                                id={id}\n                            />\n                        )}\n                    </LegendDetail>\n                )) }\n        </Container>\n    );\n};\n\nLegend.propTypes = {\n    data: PropTypes.array,\n    selected: PropTypes.array,\n    onToggle: PropTypes.func,\n    height: PropTypes.string\n};\n\nexport default Legend;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport styled from 'styled-components';\n\nimport initializeChart from '.././BaseChart';\nimport Legend from '../../Utilities/Legend';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nconst formatDate = date => {\n    const pieces = date.split('-');\n    return `${pieces[1]}/${pieces[2]}`;\n};\n\nconst GroupedBarChart = ({\n    onClick = null,\n    TooltipClass,\n    legend,\n    ...props\n}) => {\n    const colors = legend.map(({ id, name }) => {\n        return {\n            name,\n            value: props.colorFunc(id),\n            id\n        };\n    });\n    const [ selectedIds, setSelectedIds ] = useState(\n        legend.map(({ id }) => id).slice(0, 8)\n    );\n    let timeout = null;\n\n    const handleToggle = id => {\n        if (selectedIds.includes(id)) {\n            setSelectedIds(selectedIds.filter(el => el !== id));\n        } else {\n            setSelectedIds([ ...selectedIds, id ]);\n        }\n    };\n\n    const draw = () => {\n        // Clear our chart container element first\n        d3.selectAll('#' + props.id + ' > *').remove();\n        let { data: unformattedData } = props;\n        const data = unformattedData.reduce((formatted, { date, items }) => {\n            const selectedOrgs = items.filter(({ id }) => selectedIds.includes(id));\n            return formatted.concat({ date, selectedOrgs });\n        }, []);\n        const width = props.getWidth();\n        const height = props.getHeight();\n        // x scale of entire chart\n        const x0 = d3\n        .scaleBand()\n        .range([ 0, width ])\n        .padding(0.35);\n        // x scale of individual grouped bars\n        const x1 = d3.scaleBand();\n        const y = d3.scaleLinear().range([ height, 0 ]);\n        // format our X Axis ticks\n        const maxTicksOneMonth = Math.round(data.length / (data.length / 2));\n        const maxTicksTwoMonths = Math.round(data.length / (data.length / 4));\n        let ticks = data.map(d => d.date);\n        if (data.length > 14) {\n            ticks = data\n            .map((d, i) => (i % (data.length > 31 ? maxTicksTwoMonths : maxTicksOneMonth) === 0 ? d.date : undefined))\n            .filter(item => item);\n        }\n\n        const xAxis = d3\n        .axisBottom(x0)\n        .tickValues(ticks)\n        .tickFormat(formatDate);\n\n        const yAxis = d3\n        .axisLeft(y)\n        .ticks(8)\n        .tickSize(-width, 0, 0);\n\n        const svg = d3\n        .select('#' + props.id)\n        .append('svg')\n        .attr('width', width + props.margin.left + props.margin.right)\n        .attr('height', height + props.margin.bottom + props.margin.top)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          props.margin.left +\n          ',' +\n          props.margin.top +\n          ')'\n        );\n\n        const dates = data.map(d => d.date);\n        const tooltip = new TooltipClass({\n            svg: '#' + props.id\n        });\n        x0.domain(dates);\n        x1.domain(selectedIds).range([ 0, x0.bandwidth() ]);\n        y.domain([\n            0,\n            d3.max(data, date => d3.max(date.selectedOrgs, d => d.value * 1.15)) || 8\n        ]);\n\n        // add y axis\n        svg\n        .append('g')\n        .attr('class', 'y axis')\n        .call(yAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7')\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 6)\n        .attr('dy', '.71em')\n        .style('text-anchor', 'end')\n        .style('font-weight', 'bold')\n        .text('Value');\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text(props.yLabel);\n\n        // add x axis\n        svg\n        .append('g')\n        .attr('class', 'x axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(xAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' + width / 2 + ' ,' + (height + props.margin.top + 25) + ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n        // add the groups\n        let slice = svg.selectAll('.slice').data(data);\n        slice.exit().remove();\n\n        const enter = slice\n        .enter()\n        .append('g')\n        .attr('class', 'g foo')\n        .attr('transform', d => 'translate(' + x0(d.date) + ',0)');\n        slice = slice.merge(enter);\n        // add the individual bars\n        let bars = slice.selectAll('rect').data(function(d) {\n            return d.selectedOrgs;\n        });\n        bars.exit().remove();\n\n        const color = props.colorFunc;\n        const subEnter = bars\n        .enter()\n        .append('rect')\n        .attr('width', x1.bandwidth())\n        .attr('x', function(d) {\n            return x1(d.id);\n        }) // unsorted\n        .style('fill', function(d) {\n            return color(d.id);\n        })\n        .attr('y', function(d) {\n            return y(d.value);\n        })\n        .attr('height', function(d) {\n            return height - y(d.value);\n        })\n        .on('mouseover', function(d) {\n            d3.select(this).style('cursor', onClick ? 'pointer' : 'default');\n            d3.select(this).style('fill', d3.rgb(color(d.id)).darker(1));\n            tooltip.handleMouseOver();\n        })\n        .on('mousemove', tooltip.handleMouseOver)\n        .on('mouseout', function(d) {\n            d3.select(this).style('fill', color(d.id));\n            tooltip.handleMouseOut();\n        })\n        .on('click', onClick);\n        bars = bars.merge(subEnter);\n    };\n\n    const init = () => {\n        draw();\n    };\n\n    const resize = () => {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => { draw(); }, 500);\n    };\n\n    useEffect(() => {\n        init();\n        window.addEventListener('resize', resize);\n\n        return () => {\n            clearTimeout(timeout);\n            window.removeEventListener('resize', resize);\n        };\n    }, []);\n\n    useEffect(() => { draw(); }, [ props.data, selectedIds ]);\n\n    return (\n        <Wrapper>\n            <div id={ props.id } />\n            { colors.length > 0 && (\n                <Legend\n                    id={ `${props.id}-legend` }\n                    data={ colors }\n                    selected={ selectedIds }\n                    onToggle={ handleToggle }\n                    height=\"350px\"\n                />\n            ) }\n        </Wrapper>\n    );\n};\n\nGroupedBarChart.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    legend: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    colorFunc: PropTypes.func,\n    yLabel: PropTypes.string,\n    onClick: PropTypes.func,\n    TooltipClass: PropTypes.any.isRequired\n};\n\nexport default initializeChart(GroupedBarChart);\n","import * as d3 from 'd3';\n\nconst formatDate = date => {\n    const pieces = date.split('-');\n    return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class OrgsTooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        this.draw();\n    }\n\n    draw() {\n        this.width = 125;\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 125;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', 68)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.date = this.toolTipBase\n        .append('text')\n        .attr('x', 20)\n        .attr('y', 14)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Date');\n        this.jobs = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 72)\n        .attr('y', 14)\n        .text('0 Jobs');\n        this.orgName = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', -1)\n        .attr('font-size', 12)\n        .text('Org');\n        this.clickMore = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 20)\n        .attr('y', 30)\n        .attr('font-size', 12)\n        .text('Click for details');\n    }\n\n  handleMouseOver = d => {\n      let date;\n      let orgName;\n      let jobs;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      if (!d) {\n          return;\n      } else {\n          const maxLength = 16;\n          date = d.date;\n          orgName = d.name;\n          jobs = d.value;\n          if (d.name.length > maxLength) {\n              orgName = d.name.slice(0, maxLength).concat('...');\n          }\n      }\n\n      const formatTooltipDate = formatDate;\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n\n      this.date.text('' + formatTooltipDate(date));\n      this.orgName.text('' + orgName);\n      this.jobs.text('' + jobs + ' Jobs');\n      this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n      const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n      const threshold = 45;\n      const overage = maxTextPerc / threshold;\n      let adjustedWidth;\n      if (maxTextPerc > threshold) {\n          adjustedWidth = this.boxWidth * overage;\n      } else {\n          adjustedWidth = this.boxWidth;\n      }\n\n      this.boundingBox.attr('width', adjustedWidth);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n          this.boundingBox.attr('x', -adjustedWidth - 20);\n          this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n          this.orgName.attr('x', -adjustedWidth - 7);\n          this.clickMore.attr('x', -adjustedWidth - 7);\n          this.date.attr('x', -adjustedWidth - 7);\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n          this.boundingBox.attr('x', 10);\n          this.orgName.attr('x', 20);\n          this.clickMore.attr('x', 20);\n          this.jobs.attr('x', adjustedWidth / 2);\n          this.date.attr('x', 20);\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import * as d3 from 'd3';\n\nconst formatDate = date => {\n    const pieces = date.split('-');\n    return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class HostsTooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        this.draw();\n    }\n\n    draw() {\n        this.width = 125;\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 125;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', 68)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.date = this.toolTipBase\n        .append('text')\n        .attr('x', 20)\n        .attr('y', 14)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Date');\n        this.jobs = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 72)\n        .attr('y', 14)\n        .text('0 Jobs');\n        this.orgName = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', -1)\n        .attr('font-size', 12)\n        .text('Org');\n        this.clickMore = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 20)\n        .attr('y', 30)\n        .attr('font-size', 12)\n        .text('Click for details');\n    }\n\n  handleMouseOver = d => {\n      let date;\n      let orgName;\n      let jobs;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      if (!d) {\n          return;\n      } else {\n          const maxLength = 16;\n          date = d.date;\n          orgName = d.name;\n          jobs = d.value;\n          if (d.name.length > maxLength) {\n              orgName = d.name.slice(0, maxLength).concat('...');\n          }\n      }\n\n      const formatTooltipDate = formatDate;\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n\n      this.date.text('' + formatTooltipDate(date));\n      this.orgName.text('' + orgName);\n      this.jobs.text('' + jobs + ' Hosts');\n      this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n      const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n      const threshold = 45;\n      const overage = maxTextPerc / threshold;\n      let adjustedWidth;\n      if (maxTextPerc > threshold) {\n          adjustedWidth = this.boxWidth * overage;\n      } else {\n          adjustedWidth = this.boxWidth;\n      }\n\n      this.boundingBox.attr('width', adjustedWidth);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n          this.boundingBox.attr('x', -adjustedWidth - 20);\n          this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n          this.orgName.attr('x', -adjustedWidth - 7);\n          this.clickMore.attr('x', -adjustedWidth - 7);\n          this.date.attr('x', -adjustedWidth - 7);\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n          this.boundingBox.attr('x', 10);\n          this.orgName.attr('x', 20);\n          this.clickMore.attr('x', 20);\n          this.jobs.attr('x', adjustedWidth / 2);\n          this.date.attr('x', 20);\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport { getTotal } from '../Utilities/helpers';\nimport Legend from '../Utilities/Legend';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        // defer drawing until we know the data shape\n        this.drawn = false;\n        // show the success rate or not\n        this.showSuccess = false;\n    }\n\n    draw(d) {\n    // chart1 has success rate data and chart2 does not ...\n        this.showSuccess = d && d.data && 'success_rate' in d.data ? true : false;\n        const boundingHeight = this.showSuccess ? 70 : 52;\n        const boundingWidth = this.showSuccess ? 120 : 108;\n\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBOx = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', boundingHeight)\n        .attr('width', boundingWidth)\n        .attr('fill', '#393f44');\n        this.orgName = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 0)\n        .text('Organization');\n        this.percentageTotal = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 16)\n        .text('0');\n        this.percentageSuccess = null;\n        if (this.showSuccess) {\n            this.percentageSuccess = this.toolTipBase\n            .append('text')\n            .attr('fill', 'white')\n            .attr('font-size', 12)\n            .attr('font-weight', 800)\n            .attr('x', 20)\n            .attr('y', 30)\n            .text('');\n        }\n    }\n\n  handleMouseOver = d => {\n      // treat draw() as a singleton to avoid a painted window effect\n      if (this.drawn !== true) {\n          this.draw(d);\n          this.drawn = true;\n      }\n\n      let perc;\n      let percSuccess;\n      let orgName;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      if (!d) {\n          return;\n      }\n\n      if (d && d.data) {\n          const maxLength = 16;\n          perc = d.data.percent;\n          percSuccess = d.data.success_rate;\n          orgName = d.data.name;\n          if (d.data.name.length > maxLength) {\n              orgName = d.data.name.slice(0, maxLength - 3).concat('...');\n          }\n      }\n\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n\n      this.percentageTotal.text('' + perc + '%');\n      if (percSuccess && this.percentageSuccess) {\n          this.percentageSuccess.text('(' + percSuccess + '% successful)');\n      }\n\n      this.orgName.text(' ' + orgName);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, -10) rotate(45)');\n          this.boundingBOx.attr('x', -125);\n          this.orgName.attr('x', -112);\n          this.percentageTotal.attr('x', -112);\n          if (this.showSuccess) {\n              this.percentageSuccess.attr('x', -112);\n          }\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, -10) rotate(45)');\n          this.boundingBOx.attr('x', 10);\n          this.orgName.attr('x', 20);\n          this.percentageTotal.attr('x', 20);\n          if (this.showSuccess) {\n              this.percentageSuccess.attr('x', 20);\n          }\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nconst PieChart = ({\n    data,\n    id,\n    colorFunc: color,\n    margin,\n    getWidth,\n    getHeight\n}) => {\n    const colors = data.map(({ id, name, count }) => {\n        return {\n            id,\n            name,\n            value: color(id),\n            count: Math.round(count)\n        };\n    }).sort((a, b) => (a.count > b.count) ? 1 : ((b.count > a.count) ? -1 : 0));\n\n    const [ selectedIds, setSelectedIds ] = useState(\n        data.map(({ id }) => id).slice(0, 8));\n\n    let timeout = null;\n\n    const handleToggle = id => {\n        if (selectedIds.includes(id)) {\n            setSelectedIds(selectedIds.filter(el => el !== id));\n        } else {\n            setSelectedIds([ ...selectedIds, id ]);\n        }\n    };\n\n    const draw = () => {\n        d3.selectAll('#' + id + ' > *').remove();\n        const width = getWidth();\n        const height = getHeight();\n        const svg = d3\n        .select('#' + id)\n        .append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.bottom)\n        .append('g');\n\n        svg.append('g').attr('class', 'slices');\n        svg.append('g').attr('class', 'labels');\n        svg.append('g').attr('class', 'lines');\n        const radius = Math.min(width, height) / 2;\n        const filteredData = data.filter(({ id }) => selectedIds.includes(id));\n        const total = getTotal(filteredData);\n        filteredData.forEach(function(d) {\n            d.count = +d.count;\n            d.percent = +Math.round((d.count / total) * 100);\n        });\n        const donutTooltip = new Tooltip({\n            svg: '#' + id\n        });\n        const pie = d3\n        .pie()\n        .sort(null)\n        .value(d => d.count);\n        const arc = d3\n        .arc()\n        .outerRadius(radius - 10) // controls top positioning of chart\n        .innerRadius(0);\n\n        svg.attr(\n            'transform',\n            'translate(' +\n        (width + margin.left + margin.right) / 2 +\n        ',' +\n        (height + margin.top + margin.bottom) / 2 +\n        ')'\n        );\n\n        svg\n        .selectAll('path')\n        .data(pie(filteredData))\n        .enter()\n        .append('path')\n        .attr('d', arc)\n        .attr('fill', d => color(d.data.id));\n\n        svg\n        .selectAll('path')\n        .on('mouseover', function(d) {\n            d3.select(this).style('fill', d3.rgb(color(d.data.id)).darker(1));\n            donutTooltip.handleMouseOver(d);\n        })\n        .on('mouseout', function(d) {\n            d3.select(this).style('fill', color(d.data.id));\n            donutTooltip.handleMouseOut();\n        })\n        .on('mousemove', donutTooltip.handleMouseOver);\n\n        svg.append('g').classed('labels', true);\n        svg.append('g').classed('lines', true);\n    };\n\n    const init = () => {\n        draw();\n    };\n\n    const resize = () => {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => { draw(); }, 500);\n    };\n\n    useEffect(() => {\n        init();\n        window.addEventListener('resize', resize);\n\n        return () => {\n            clearTimeout(timeout);\n            window.removeEventListener('resize', resize);\n        };\n    }, []);\n\n    useEffect(() => { draw(); }, [ data, selectedIds ]);\n\n    return (\n        <Wrapper>\n            <div id={ id } />\n            { colors.length > 0 && (\n                <Legend\n                    id={ `${id}-legend` }\n                    data={ colors }\n                    selected={ selectedIds }\n                    onToggle={ handleToggle }\n                    height=\"300px\"\n                />\n            ) }\n        </Wrapper>\n    );\n};\n\nPieChart.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    colorFunc: PropTypes.func\n};\n\nexport default initializeChart(PieChart);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { formatDate as dateForJobExplorer } from '../../Utilities/helpers';\n\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport {\n    preflightRequest,\n    readJobExplorer,\n    readHostExplorer,\n    readOrgOptions\n} from '../../Api';\n\nimport {\n    Main,\n    NotAuthorized,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle,\n    Tabs,\n    Tab\n} from '@patternfly/react-core';\n\nimport {\n    GroupedBarChart,\n    OrgsTooltip,\n    HostsTooltip\n} from '../../Charts/GroupedBarChart/';\nimport PieChart from '../../Charts/PieChart';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport { organizationStatistics as constants } from '../../Utilities/constants';\n\n// For chart colors\nimport { pfmulti } from '../../Utilities/colors';\nimport { scaleOrdinal } from 'd3';\n\nconst CardTitle = styled(PFCardTitle)`\n  border-bottom: 2px solid #ebebeb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &&& {\n    min-height: 60px;\n    --pf-c-card--first-child--PaddingTop: 10px;\n    --pf-c-card__header--not-last-child--PaddingBottom: 10px;\n\n    h3 {\n      font-size: 0.875em;\n    }\n  }\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  overflow: hidden;\n\n  .pf-c-card {\n    width: 50%;\n    margin-top: 20px;\n    overflow: auto;\n  }\n\n  .pf-c-card:first-of-type {\n    margin-right: 20px;\n  }\n`;\n\nconst TopCard = styled(Card)`\n  min-height: 500px;\n`;\n\nconst colorFunc = scaleOrdinal(pfmulti);\n\nconst optionsMapper = options => {\n    const { inventory_id, ...rest } = options;\n    return { ...rest };\n};\n\nconst orgsChartMapper = attrName => ({ dates: data = [], meta }) => ({\n    data: data.map(({ date, items }) => ({\n        date,\n        items: items.map(({ id, [attrName]: value, name }) => ({\n            id,\n            date,\n            value,\n            name: name || 'No organization'\n        }))\n    })),\n    legend: meta.legend\n});\n\nconst pieChartMapper = attrName => ({ items = []}) =>\n    items.map(({ id, [attrName]: count, name }) => ({\n        id,\n        count,\n        name: name || 'No organization'\n    }));\n\nconst redirectToJobExplorer = (toJobExplorer, queryParams) => ({ date, id }) => {\n    if (id === -1) {\n        // disable clicking on \"others\" block\n        return;\n    }\n\n    const { sort_by, ...rest } = queryParams;\n    const formattedDate = dateForJobExplorer(date);\n    const initialQueryParams = {\n        ...rest,\n        quick_date_range: 'custom',\n        start_date: formattedDate,\n        end_date: formattedDate,\n        status: [\n            'successful',\n            'failed',\n            'new',\n            'pending',\n            'waiting',\n            'error',\n            'canceled',\n            'running'\n        ],\n        org_id: [ id ]\n    };\n\n    toJobExplorer(initialQueryParams);\n};\n\nconst chartMapper = [\n    {\n        api: readJobExplorer,\n        attr: 'total_count',\n        label: 'Jobs across organizations',\n        onClick: redirectToJobExplorer,\n        tooltip: OrgsTooltip\n    },\n    {\n        api: readHostExplorer,\n        attr: 'total_unique_host_count',\n        label: 'Hosts across organizations',\n        onClick: () => null,\n        tooltip: HostsTooltip\n    }\n];\n\nconst OrganizationStatistics = ({ history }) => {\n    const toJobExplorer = useRedirect(history, 'jobExplorer');\n    const [ preflight, setPreflight ] = useApi(null);\n    const [ activeTabKey, setActiveTabKey ] = useState(0);\n    const [ orgs, setOrgs ] = useApi([], orgsChartMapper(chartMapper[activeTabKey].attr));\n    const [ jobs, setJobs ] = useApi([], pieChartMapper('total_count'));\n    const [ tasks, setTasks ] = useApi([], pieChartMapper('host_task_count'));\n    const [ options, setOptions ] = useApi({}, optionsMapper);\n    const { queryParams, setFromToolbar } = useQueryParams(\n        constants.defaultParams\n    );\n\n    const jobEventsByOrgParams = {\n        ...queryParams,\n        attributes: [ 'host_task_count' ],\n        group_by: 'org',\n        include_others: true,\n        sort_by: `host_task_count:desc`\n    };\n\n    const jobRunsByOrgParams = {\n        ...queryParams,\n        attributes: [ 'total_count' ],\n        group_by: 'org',\n        include_others: true,\n        sort_by: `total_count:desc`\n    };\n\n    const jobsByDateAndOrgParams = {\n        ...queryParams,\n        attributes: [ 'total_count' ],\n        group_by: 'org',\n        group_by_time: true,\n        sort_by: `total_count:desc`\n    };\n\n    const hostAcrossOrgParams = {\n        ...queryParams,\n        attributes: [ 'total_unique_host_count' ],\n        group_by: 'org',\n        group_by_time: true,\n        sort_by: `host_task_count:desc`\n    };\n\n    const handleTabClick = (_, tabIndex) => { setActiveTabKey(tabIndex); };\n\n    useEffect(() => {\n        insights.chrome.appNavClick({\n            id: 'organization-statistics',\n            secondaryNav: true\n        });\n        setPreflight(preflightRequest());\n        setOptions(readOrgOptions({ params: queryParams }));\n    }, []);\n\n    useEffect(() => {\n        const { api: readJobsOrHosts } = chartMapper[activeTabKey];\n        const params = activeTabKey === 0 ? jobsByDateAndOrgParams : hostAcrossOrgParams;\n        setOrgs(readJobsOrHosts({ params }));\n    }, [ queryParams, activeTabKey ]);\n\n    useEffect(() => {\n        setJobs(readJobExplorer({ params: jobRunsByOrgParams }));\n        setTasks(readJobExplorer({ params: jobEventsByOrgParams }));\n    }, [ queryParams ]);\n\n    if (preflight?.error?.status === 403) {\n        return <NotAuthorized { ...notAuthorizedParams } />;\n    }\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={'Organization Statistics'} />\n                <FilterableToolbar\n                    categories={options.data}\n                    filters={queryParams}\n                    setFilters={setFromToolbar}\n                />\n            </PageHeader>\n            {preflight.error && (\n                <Main>\n                    <EmptyState preflightError={preflight.error} />\n                </Main>\n            )}\n            {preflight.isSuccess && (\n                <React.Fragment>\n                    <Main>\n                        <TopCard>\n                            <Tabs activeKey={ activeTabKey } onSelect={ handleTabClick }>\n                                <Tab eventKey={ 0 } title={ 'Jobs' }/>\n                                <Tab eventKey={ 1 } title={ 'Hosts' }/>\n                            </Tabs>\n                            <CardBody>\n                                {orgs.isLoading && <LoadingState />}\n                                {orgs.error && <ApiErrorState message={orgs.error.error} />}\n                                {orgs.isSuccess && orgs.data?.data.length <= 0 && <NoData />}\n                                {orgs.isSuccess && orgs.data?.data.length > 0 && (\n                                    <GroupedBarChart\n                                        margin={{ top: 20, right: 20, bottom: 50, left: 50 }}\n                                        id=\"d3-grouped-bar-chart-root\"\n                                        data={ orgs.data.data }\n                                        legend={ orgs.data.legend }\n                                        history={ history }\n                                        colorFunc={ colorFunc }\n                                        yLabel={ chartMapper[activeTabKey].label }\n                                        onClick={ chartMapper[activeTabKey].onClick(toJobExplorer, queryParams) }\n                                        TooltipClass={ chartMapper[activeTabKey].tooltip }\n                                    />\n                                )}\n                            </CardBody>\n                        </TopCard>\n                        <CardContainer>\n                            <Card>\n                                <CardBody style={{ padding: 0 }}>\n                                    <CardTitle style={{ padding: 0 }}>\n                                        <h2 style={{ marginLeft: '20px' }}>\n                                            Job Runs by Organization\n                                        </h2>\n                                    </CardTitle>\n                                    {jobs.isLoading && <LoadingState />}\n                                    {jobs.error && <ApiErrorState message={jobs.error.error} />}\n                                    {jobs.isSuccess && jobs.data.length <= 0 && <NoData />}\n                                    {jobs.isSuccess && jobs.data.length > 0 && (\n                                        <PieChart\n                                            margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                                            id=\"d3-donut-1-chart-root\"\n                                            data={jobs.data}\n                                            colorFunc={colorFunc}\n                                        />\n                                    )}\n                                </CardBody>\n                            </Card>\n                            <Card>\n                                <CardBody style={{ padding: 0 }}>\n                                    <CardTitle style={{ padding: 0 }}>\n                                        <h2 style={{ marginLeft: '20px' }}>\n                                            Usage by Organization (Tasks)\n                                        </h2>\n                                    </CardTitle>\n                                    {tasks.isLoading && <LoadingState />}\n                                    {tasks.error && <ApiErrorState message={tasks.error.error} />}\n                                    {tasks.isSuccess && tasks.data.length <= 0 && <NoData />}\n                                    {tasks.isSuccess && tasks.data.length > 0 && (\n                                        <PieChart\n                                            margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                                            id=\"d3-donut-2-chart-root\"\n                                            data={tasks.data}\n                                            colorFunc={colorFunc}\n                                        />\n                                    )}\n                                </CardBody>\n                            </Card>\n                        </CardContainer>\n                    </Main>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n};\n\nOrganizationStatistics.propTypes = {\n    history: PropTypes.object\n};\n\nexport default OrganizationStatistics;\n","var pfmulti = [\n    '#06C',\n    '#4CB140',\n    '#009596',\n    '#5752D1',\n    '#F4C145',\n    '#EC7A08',\n    '#8BC1F7',\n    '#23511E',\n    '#A2D9D9',\n    '#2A265F',\n    '#F9E0A2',\n    '#8F4700',\n    '#002F5D'\n];\nexport { pfmulti };\n","import * as d3 from 'd3';\n\nclass Tooltip {\n    constructor(opts) {\n        this.svg = opts.svg;\n        this.colors = opts.colors;\n        this.draw();\n    }\n\n    draw() {\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 145;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -41)\n        .attr('rx', 2)\n        .attr('height', 110)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.circleSuccess = this.toolTipBase\n        .append('circle')\n        .attr('cx', 26)\n        .attr('cy', 0)\n        .attr('r', 8)\n        .attr('stroke', 'white')\n        .attr('fill', 'white');\n        this.circleFail = this.toolTipBase\n        .append('circle')\n        .attr('cx', 26)\n        .attr('cy', 26)\n        .attr('r', 8)\n        .attr('stroke', 'white')\n        .attr('fill', 'white');\n        this.successText = this.toolTipBase\n        .append('text')\n        .attr('x', 43)\n        .attr('y', 4)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Successful');\n        this.failText = this.toolTipBase\n        .append('text')\n        .attr('x', 43)\n        .attr('y', 28)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Failed');\n        this.successIcon = this.toolTipBase\n        .append('text')\n        .attr('class', 'fas fa-sm')\n        .attr('fill', this.colors(1))\n        .attr('x', 19)\n        .attr('y', 5)\n        .text('\\uf058');\n        this.failedIcon = this.toolTipBase\n        .append('text')\n        .attr('class', 'fas fa-sm')\n        .attr('fill', this.colors(0))\n        .attr('x', 20)\n        .attr('y', 31)\n        .text('\\uf06a');\n        this.jobs = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 137)\n        .attr('y', -21)\n        .attr('font-size', 12)\n        .attr('text-anchor', 'end')\n        .text('No jobs');\n        this.successful = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 122)\n        .attr('y', 4)\n        .text('0');\n        this.failed = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 122)\n        .attr('y', 28)\n        .text('0');\n        this.date = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('stroke', 'white')\n        .attr('x', 20)\n        .attr('y', -21)\n        .attr('font-size', 12)\n        .text('Never');\n        this.clickMore = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 20)\n        .attr('y', 55)\n        .attr('font-size', 12)\n        .text('Click for details');\n    }\n\n  handleMouseOver = d => {\n      let success = 0;\n      let fail = 0;\n      let total = 0;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      const formatTooltipDate = d3.timeFormat('%m/%d');\n      if (!d) {\n          return;\n      }\n\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n      if (d) {\n          success = d.RAN || 0;\n          fail = d.FAIL || 0;\n          total = d.TOTAL || 0;\n          this.date.text(formatTooltipDate(d.DATE || null));\n      }\n\n      if (d && d.data) {\n          success = d.data.RAN || 0;\n          fail = d.data.FAIL || 0;\n          total = d.data.TOTAL || 0;\n          this.date.text(formatTooltipDate(d.data.DATE || null));\n      }\n\n      this.jobs.text('' + total + ' jobs');\n      this.jobsWidth = this.jobs.node().getComputedTextLength();\n      this.failed.text('' + fail);\n      this.successful.text('' + success);\n      this.successTextWidth = this.successful.node().getComputedTextLength();\n      this.failTextWidth = this.failed.node().getComputedTextLength();\n\n      const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n      const threshold = 40;\n      const overage = maxTextPerc / threshold;\n      let adjustedWidth;\n      if (maxTextPerc > threshold) {\n          adjustedWidth = this.boxWidth * overage;\n      } else {\n          adjustedWidth = this.boxWidth;\n      }\n\n      this.boundingBox.attr('width', adjustedWidth);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n          this.boundingBox.attr('x', -adjustedWidth - 20);\n          this.circleSuccess.attr('cx', -adjustedWidth);\n          this.circleFail.attr('cx', -adjustedWidth);\n          this.failedIcon.attr('x', -adjustedWidth - 7);\n          this.successIcon.attr('x', -adjustedWidth - 7);\n          this.successText.attr('x', -adjustedWidth + 17);\n          this.failText.attr('x', -adjustedWidth + 17);\n          this.successful.attr('x', -this.successTextWidth - 20 - 12);\n          this.failed.attr('x', -this.failTextWidth - 20 - 12);\n          this.date.attr('x', -adjustedWidth - 5);\n          this.jobs.attr('x', -this.jobsWidth / 2 - 7);\n          this.clickMore.attr('x', -adjustedWidth);\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n          this.boundingBox.attr('x', 10);\n          this.circleSuccess.attr('cx', 26);\n          this.circleFail.attr('cx', 26);\n          this.failedIcon.attr('x', 19);\n          this.successIcon.attr('x', 19);\n          this.successText.attr('x', 43);\n          this.failText.attr('x', 43);\n          this.successful.attr('x', adjustedWidth - this.successTextWidth);\n          this.failed.attr('x', adjustedWidth - this.failTextWidth);\n          this.date.attr('x', 20);\n          this.jobs.attr('x', adjustedWidth);\n          this.clickMore.attr('x', 20);\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nexport default Tooltip;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { stringify } from 'query-string';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\n\nclass BarChart extends Component {\n    constructor(props) {\n        super(props);\n        this.draw = this.draw.bind(this);\n        this.init = this.init.bind(this);\n        this.resize = this.resize.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.state = {\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    redirectToJobExplorer({ data: { DATE: date }}) {\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const { orgId, templateId } = this.props;\n        const initialQueryParams = {\n            start_date: formattedDate,\n            end_date: formattedDate,\n            quick_date_range: 'custom',\n            status: [ 'failed', 'successful' ],\n            template_id: templateId,\n            org_id: orgId\n        };\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    }\n\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => {\n                this.init();\n            }, 500)\n        });\n    }\n\n    init() {\n        this.draw();\n    }\n\n    // Methods\n    draw() {\n    // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const parseTime = d3.timeParse('%Y-%m-%d');\n        let { data: unformattedData } = this.props;\n        const data = unformattedData.reduce(\n            (formatted, { created_date, successful_count, failed_count }) => {\n                let DATE = parseTime(created_date) || new Date();\n                let RAN = +successful_count || 0;\n                let FAIL = +failed_count || 0;\n                let TOTAL = +successful_count + failed_count || 0;\n                return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n            },\n            []\n        );\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n        const x = d3\n        .scaleBand()\n        .rangeRound([ 0, width ])\n        .padding(0.35); // percentage\n        const y = d3.scaleLinear().range([ height, 0 ]);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n        //[fail, success]\n        let colors = d3.scaleOrdinal([ '#6EC664', '#A30000' ]);\n\n        const barTooltip = new Tooltip({\n            svg: '#' + this.props.id,\n            colors\n        });\n        const status = [ 'FAIL', 'RAN' ];\n\n        // stack our data\n        const stack = d3\n        .stack()\n        .keys(status)\n        .order(d3.stackOrderNone)\n        .offset(d3.stackOffsetNone);\n\n        const layers = stack(data);\n        // Scale the range of the data\n        x.domain(layers[0].map(d => d.data.DATE));\n        y.domain([ 0, d3.max(layers[layers.length - 1], d => d[1] * 1.15) || 8 ]);\n        // Add the Y Axis\n        svg\n        .append('g')\n        .attr('class', 'y-axis')\n        .call(d3.axisLeft(y).tickSize(-width, 0, 0))\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.y-axis .tick text').attr('x', -5);\n        // text label for the y axis\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Jobs across all clusters');\n        // Add the X Axis\n        let ticks;\n        const maxTicks = Math.round(data.length / (data.length / 2));\n        ticks = data.map(d => d.DATE);\n        if (data.length > 14) {\n            ticks = data\n            .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n            .filter(item => item);\n        }\n\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(\n            d3\n            .axisBottom(x)\n            .tickValues(ticks)\n            .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n        // text label for the x axis\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n\n        const layer = svg\n        .selectAll('layer')\n        .data(layers)\n        .enter()\n        .append('g')\n        .attr('class', 'layer')\n        .style('fill', (_d, i) => colors(i));\n        layer\n        .selectAll('rect')\n        .data(d => d)\n        .enter()\n        .append('rect')\n        .attr('x', d => x(d.data.DATE))\n        .attr('y', d => y(d[0]))\n        .attr('height', 0)\n        .attr('width', x.bandwidth() - 1)\n        .transition()\n        .duration(550)\n        .ease(d3.easeCubic)\n        .attr('y', d => y(d[1]))\n        .attr('height', d => y(d[0]) - y(d[1]));\n        layer\n        .selectAll('rect')\n        .on('mouseover', barTooltip.handleMouseOver)\n        .on('mousemove', barTooltip.handleMouseOver)\n        .on('mouseout', barTooltip.handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.data !== this.props.data) {\n            this.init();\n        }\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        return <div id={this.props.id} />;\n    }\n}\n\nBarChart.propTypes = {\n    id: PropTypes.string,\n    templateId: PropTypes.array,\n    orgId: PropTypes.array,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    history: PropTypes.object\n};\n\nexport default initializeChart(withRouter(BarChart));\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport initializeChart from './BaseChart';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\nimport { stringify } from 'query-string';\nimport * as d3 from 'd3';\n\nclass LineChart extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.updateCluster = this.updateCluster.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.state = {\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    redirectToJobExplorer({ DATE: date }) {\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const { clusterId, templateId, orgId } = this.props;\n        const initialQueryParams = {\n            start_date: formattedDate,\n            end_date: formattedDate,\n            quick_date_range: 'custom',\n            status: [ 'failed', 'successful' ],\n            cluster_id: clusterId,\n            org_id: orgId,\n            template_id: templateId\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    }\n\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => {\n                this.init();\n            }, 500)\n        });\n    }\n\n    updateCluster() {\n        this.init();\n    }\n    init() {\n        this.draw();\n    }\n    // Methods\n    draw() {\n    // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n\n        function transition(path) {\n            path\n            .transition()\n            .duration(1000)\n            .attrTween('stroke-dasharray', tweenDash);\n        }\n\n        function tweenDash() {\n            const l = this.getTotalLength();\n            const i = d3.interpolateString('0,' + l, l + ',' + l);\n            return function(t) {\n                return i(t);\n            };\n        }\n\n        const x = d3.scaleTime().rangeRound([ 0, width ]);\n        const y = d3.scaleLinear().range([ height, 0 ]);\n\n        //[success, fail, total]\n        let colors = d3.scaleOrdinal([ '#6EC664', '#A30000', '#06C' ]);\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n        .attr('z', 100)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n        // Tooltip\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id,\n            colors\n        });\n        const { data: unformattedData } = this.props;\n        const parseTime = d3.timeParse('%Y-%m-%d');\n\n        const data = unformattedData.reduce(\n            (formatted, { created_date, successful_count, failed_count }) => {\n                let DATE = parseTime(created_date) || new Date();\n                let RAN = +successful_count || 0;\n                let FAIL = +failed_count || 0;\n                let TOTAL = +successful_count + failed_count || 0;\n                return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n            },\n            []\n        );\n        // Scale the range of the data\n        x.domain(\n            d3.extent(data, function(d) {\n                return d.DATE;\n            })\n        );\n        y.domain([\n            0,\n            d3.max(data, function(d) {\n                return d.TOTAL * 1.15 || 8;\n            })\n        ]);\n\n        const successLine = d3\n        .line()\n        .curve(d3.curveMonotoneX)\n        .x(function(d) {\n            return x(d.DATE);\n        })\n        .y(function(d) {\n            return y(d.RAN);\n        });\n\n        const failLine = d3\n        .line()\n        .defined(d => !isNaN(d.FAIL))\n        .curve(d3.curveMonotoneX)\n        .x(function(d) {\n            return x(d.DATE);\n        })\n        .y(function(d) {\n            return y(d.FAIL);\n        });\n        // Add the Y Axis\n        svg\n        .append('g')\n        .attr('class', 'y-axis')\n        .call(\n            d3\n            .axisLeft(y)\n            .ticks(10)\n            .tickSize(-width)\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.y-axis .tick text').attr('x', -5);\n\n        // text label for the y axis\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Job runs');\n        // Add the X Axis\n        let ticks;\n        const maxTicks = Math.round(data.length / (data.length / 2));\n        ticks = data.map(d => d.DATE);\n        if (data.length > 14) {\n            ticks = data\n            .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n            .filter(item => item);\n        }\n\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(\n            d3\n            .axisBottom(x)\n            .tickValues(ticks)\n            .tickSize(-height)\n            .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n        ) // \"Jan-01\"\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n        // text label for the x axis\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n        const vertical = svg\n        .append('path')\n        .attr('class', 'mouse-line')\n        .style('stroke', 'black')\n        .style('stroke-width', '3px')\n        .style('stroke-dasharray', '3, 3')\n        .style('opacity', '0');\n\n        const handleMouseOver = function(d) {\n            tooltip.handleMouseOver(d);\n            // show vertical line\n            vertical.transition().style('opacity', '1');\n        };\n\n        const handleMouseMove = function() {\n            let intersectX = this.cx.baseVal.value;\n            vertical.attr('d', function() {\n                let d = 'M' + intersectX + ',' + height;\n                d += ' ' + intersectX + ',' + 0;\n                return d;\n            });\n        };\n\n        const handleMouseOut = function() {\n            // hide tooltip\n            tooltip.handleMouseOut();\n            // hide vertical line\n            vertical.transition().style('opacity', 0);\n        };\n\n        // Add the successLine path.\n        svg\n        .append('path')\n        .data([ data ])\n        .attr('class', 'line')\n        .style('fill', 'none')\n        .style('stroke', () => colors(1))\n        .attr('stroke-width', 2)\n        .attr('d', successLine)\n        .call(transition);\n\n        // Add the failLine path.\n        svg\n        .append('path')\n        .data([ data ])\n        .attr('class', 'line')\n        .style('fill', 'none')\n        .style('stroke', () => colors(0))\n        .attr('stroke-width', 2)\n        .attr('d', failLine)\n        .call(transition);\n        svg\n        .selectAll('dot')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('r', 3)\n        .style('stroke', () => colors(1))\n        .style('fill', () => colors(1))\n        .attr('cx', function(d) {\n            return x(d.DATE);\n        })\n        .attr('cy', function(d) {\n            return y(d.RAN);\n        })\n\n        .on('mouseover', handleMouseOver)\n        .on('mousemove', handleMouseMove)\n        .on('mouseout', handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n        // create our failLine circles\n        svg\n        .selectAll('dot')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('r', 3)\n        .style('stroke', () => colors(0))\n        .style('fill', () => colors(0))\n        .attr('cx', function(d) {\n            return x(d.DATE);\n        })\n        .attr('cy', function(d) {\n            return y(d.FAIL);\n        })\n        .on('mouseover', handleMouseOver)\n        .on('mousemove', handleMouseMove)\n        .on('mouseout', handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n    }\n\n    componentDidMount() {\n        this.updateCluster();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.data !== this.props.data) {\n            this.updateCluster();\n        }\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        return <div id={this.props.id} />;\n    }\n}\n\nLineChart.propTypes = {\n    id: PropTypes.string,\n    clusterId: PropTypes.array,\n    templateId: PropTypes.array,\n    orgId: PropTypes.array,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    history: PropTypes.object\n};\n\nexport default initializeChart(withRouter(LineChart));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { trimStr } from '../Utilities/helpers';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell\n} from '@patternfly/react-core';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst ModulesList = ({ modules, isLoading }) => (\n    <DataList\n        aria-label=\"Top Modules\"\n        style={{\n            maxHeight: '400px',\n            overflow: 'auto',\n            height: '400px',\n            background: 'white'\n        }}\n    >\n        <DataListItem aria-labelledby=\"top-modules-header\">\n            <DataListCell>\n                <h3>Top modules</h3>\n            </DataListCell>\n            <DataCellEnd>\n                <h3>Usage</h3>\n            </DataCellEnd>\n        </DataListItem>\n        {isLoading && (\n            <PFDataListItem\n                aria-labelledby=\"modules-loading\"\n                key={isLoading}\n                style={{ border: 'none' }}\n            >\n                <PFDataListCell>\n                    <LoadingState />\n                </PFDataListCell>\n            </PFDataListItem>\n        )}\n        {!isLoading && modules.length <= 0 && (\n            <PFDataListItem\n                aria-labelledby=\"modules-no-data\"\n                key={isLoading}\n                style={{ border: 'none' }}\n            >\n                <PFDataListCell>\n                    <NoData />\n                </PFDataListCell>\n            </PFDataListItem>\n        )}\n        {!isLoading &&\n      modules\n      .filter(module => module.name !== null)\n      .map(({ name, host_task_count }, index) => (\n          <DataListItem aria-labelledby=\"top-modules-detail\" key={index}>\n              <DataListCell>\n                  <span>{trimStr(name)}</span>\n              </DataListCell>\n              <DataCellEnd>{host_task_count}</DataCellEnd>\n          </DataListItem>\n      ))}\n    </DataList>\n);\n\nModulesList.propTypes = {\n    modules: PropTypes.array,\n    isLoading: PropTypes.bool\n};\n\nexport default ModulesList;\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport { Paths } from '../paths';\nimport { stringify } from 'query-string';\nimport useApi from '../Utilities/useApi';\nimport { formatDateTime, formatSeconds } from '../Utilities/helpers';\nimport { readJobExplorer } from '../Api';\n\nimport {\n    Button,\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell,\n    Label,\n    Modal\n} from '@patternfly/react-core';\n\nimport { CircleIcon } from '@patternfly/react-icons';\n\nconst success = (\n    <CircleIcon\n        size=\"sm\"\n        key=\"5\"\n        style={{ color: 'rgb(110, 198, 100)', marginRight: '5px' }}\n    />\n);\nconst fail = (\n    <>\n        <CircleIcon\n            size=\"sm\"\n            key=\"5\"\n            style={{ color: 'rgb(163, 0, 0)', marginRight: '5px' }}\n        />\n        <span id=\"fail-icon\">!</span>\n    </>\n);\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\nconst PFDataListItemNoBorder = styled(PFDataListItem)`\n  border-bottom: none;\n  margin-bottom: -20px;\n`;\nconst DataListItemCompact = styled(DataListItem)`\n  padding: 0;\n  > .pf-c-data-list__cell {\n    font-weight: 600;\n  }\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst DataListCellCompact = styled(DataListCell)`\n  padding: 7px;\n`;\n\nconst DataListFocus = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-gap: 10px;\n  padding: var(--pf-global--spacer--lg);\n  background: #ebebeb;\n  border: 1px solid #ccc;\n  border-top: none;\n  margin-bottom: 20px;\n`;\nconst DataCellEndCompact = styled(DataCellEnd)`\n  padding: 7px !important;\n`;\n\nconst formatTopFailedTask = data => {\n    if (!data) {\n        return;\n    }\n\n    if (data && data[0]) {\n        const percentage = Math.ceil(\n            (data[0].failed_count / data[0].total_failed_count) * 100\n        );\n        return `${data[0].task_name} ${percentage}%`;\n    }\n\n    return `Unavailable`;\n};\n\nconst formatTopFailedStep = data => {\n    if (!data) {\n        return;\n    }\n\n    if (data && data[0]) {\n        const percentage = Math.ceil(\n            (data[0].failed_count / data[0].total_failed_count) * 100\n        );\n        return `${data[0].template_name} ${percentage}%`;\n    }\n\n    return `Unavailable`;\n};\n\nconst formatSuccessRate = (successCount, totalCount) =>\n    Math.ceil((successCount / totalCount) * 100) + '%';\nconst formatAvgRun = (elapsed, totalCount) =>\n    new Date(Math.ceil(elapsed / totalCount) * 1000).toISOString().substr(11, 8);\nconst formatTotalTime = elapsed =>\n    new Date(elapsed * 1000).toISOString().substr(11, 8);\n\nconst ModalContents = ({\n    selectedId,\n    isOpen,\n    handleModal,\n    qp,\n    jobType,\n    handleCloseBtn\n}) => {\n    const [\n        {\n            data: { items: relatedJobs = []}\n        },\n        setRelatedJobs\n    ] = useApi({ items: []});\n    const [\n        {\n            data: {\n                items: [ stats = 0 ]\n            }\n        },\n        setStats\n    ] = useApi({ items: []});\n\n    let history = useHistory();\n\n    const redirectToJobExplorer = () => {\n        const { jobExplorer } = Paths;\n        const initialQueryParams = {\n            template_id: [ selectedId ],\n            status: [\n                'successful',\n                'failed',\n                'new',\n                'pending',\n                'waiting',\n                'error',\n                'canceled',\n                'running'\n            ],\n            job_type: [ jobType ],\n            quick_date_range: 'last_30_days'\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    const relatedTemplateJobsParams = {\n        ...qp,\n        template_id: [ selectedId ],\n        attributes: [\n            'id',\n            'status',\n            'job_type',\n            'started',\n            'finished',\n            'elapsed',\n            'created',\n            'cluster_name',\n            'org_name'\n        ],\n        group_by_time: false,\n        limit: 5,\n        sort_by: 'created:desc',\n        quick_date_range: qp.quick_date_range\n            ? qp.quick_date_range\n            : 'last_30_days',\n        job_type: [ jobType ]\n    };\n\n    const agreggateTemplateParams = {\n        group_by: 'template',\n        template_id: [ selectedId ],\n        attributes: [\n            'elapsed',\n            'job_type',\n            'successful_count',\n            'failed_count',\n            'total_count',\n            jobType === 'job' ? 'most_failed_tasks' : 'most_failed_steps'\n        ],\n        status: qp.status,\n        quick_date_range: qp.quick_date_range\n            ? qp.quick_date_range\n            : 'last_30_days',\n        job_type: [ jobType ]\n    };\n\n    useEffect(() => {\n        if (selectedId) {\n            setStats(readJobExplorer({ params: agreggateTemplateParams }));\n            setRelatedJobs(readJobExplorer({ params: relatedTemplateJobsParams }));\n        }\n    }, [ selectedId ]);\n\n    return (\n        <Modal\n            aria-label=\"modal\"\n            width={'80%'}\n            title={stats.name ? stats.name : 'no-template-name'}\n            isOpen={isOpen}\n            onClose={() => {\n                handleModal(false);\n                handleCloseBtn(null);\n            }}\n            actions={[\n                <Button\n                    key=\"cancel\"\n                    variant=\"secondary\"\n                    onClick={() => {\n                        handleModal(false);\n                        handleCloseBtn(null);\n                    }}\n                >\n          Close\n                </Button>\n            ]}\n        >\n            <DataList aria-label=\"Selected Template Details\">\n                <PFDataListItemNoBorder aria-labelledby=\"Selected Template Statistics\">\n                    <DataListFocus>\n                        <div aria-labelledby=\"job runs\">\n                            <b style={{ marginRight: '10px' }}>Number of runs</b>\n                            {stats.total_count ? stats.total_count : 'Unavailable'}\n                        </div>\n                        <div aria-labelledby=\"total time\">\n                            <b style={{ marginRight: '10px' }}>Total time</b>\n                            {stats.elapsed ? formatTotalTime(stats.elapsed) : 'Unavailable'}\n                        </div>\n                        <div aria-labelledby=\"Avg Time\">\n                            <b style={{ marginRight: '10px' }}>Avg time</b>\n                            {stats.elapsed\n                                ? formatAvgRun(stats.elapsed, stats.total_count)\n                                : 'Unavailable'}\n                        </div>\n                        <div aria-labelledby=\"success rate\">\n                            <b style={{ marginRight: '10px' }}>Success rate</b>\n                            {!isNaN(stats.successful_count)\n                                ? formatSuccessRate(stats.successful_count, stats.total_count)\n                                : 'Unavailable'}\n                        </div>\n                        {stats.most_failed_tasks && (\n                            <div aria-labelledby=\"most failed task\">\n                                <b style={{ marginRight: '10px' }}>Most failed task</b>\n                                {stats.most_failed_tasks\n                                    ? formatTopFailedTask(stats.most_failed_tasks)\n                                    : 'Unavailable'}\n                            </div>\n                        )}\n                        {stats.most_failed_steps && (\n                            <div aria-labelledby=\"most failed step\">\n                                <b style={{ marginRight: '10px' }}>Most failed step</b>\n                                {stats.most_failed_steps\n                                    ? formatTopFailedStep(stats.most_failed_steps)\n                                    : 'Unavailable'}\n                            </div>\n                        )}\n                    </DataListFocus>\n                </PFDataListItemNoBorder>\n                <DataListItemCompact>\n                    <DataListCellCompact key=\"last5jobs\">\n                        <Label variant=\"outline\">Last 5 jobs</Label>\n                    </DataListCellCompact>\n          ,\n                    <DataCellEndCompact>\n                        <Button\n                            component=\"a\"\n                            onClick={redirectToJobExplorer}\n                            variant=\"link\"\n                        >\n              View all jobs\n                        </Button>\n                    </DataCellEndCompact>\n                </DataListItemCompact>\n                <DataListItemCompact aria-labelledby=\"datalist header\">\n                    <PFDataListCell key=\"job heading\">Id/Name</PFDataListCell>\n                    <PFDataListCell key=\"cluster heading\">Cluster</PFDataListCell>\n                    <PFDataListCell key=\"start time heading\">Start Time</PFDataListCell>\n                    <PFDataListCell key=\"total time heading\">Total Time</PFDataListCell>\n                </DataListItemCompact>\n                {relatedJobs.length <= 0 && <LoadingState />}\n                {relatedJobs.length > 0 &&\n          relatedJobs.map((job, index) => (\n              <DataListItem\n                  style={{ padding: '10px 0' }}\n                  key={`job-details-${index}`}\n                  aria-labelledby=\"job details\"\n              >\n                  <PFDataListCell key=\"job name\">\n                      {job.status === 'successful' ? success : fail} {job.id.id} -{' '}\n                      {job.id.template_name}\n                  </PFDataListCell>\n                  <PFDataListCell key=\"job cluster\">\n                      {job.cluster_name}\n                  </PFDataListCell>\n                  <PFDataListCell key=\"start time\">\n                      {formatDateTime(job.started)}\n                  </PFDataListCell>\n                  <PFDataListCell key=\"total time\">\n                      {formatSeconds(job.elapsed)}\n                  </PFDataListCell>\n              </DataListItem>\n          ))}\n            </DataList>\n        </Modal>\n    );\n};\n\nModalContents.propTypes = {\n    selectedId: PropTypes.number,\n    qp: PropTypes.object,\n    jobType: PropTypes.string,\n    handleCloseBtn: PropTypes.func,\n    isOpen: PropTypes.bool,\n    handleModal: PropTypes.func\n};\n\nexport default ModalContents;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell\n} from '@patternfly/react-core';\n\nimport ModalContents from './ModalContents';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst TemplatesList = ({ templates, isLoading, qp, title, jobType }) => {\n    const [ selectedId, setSelectedId ] = useState(null);\n    const [ isModalOpen, setIsModalOpen ] = useState(false);\n\n    return (\n        <>\n            <DataList\n                aria-label=\"Top Templates\"\n                style={{\n                    maxHeight: '400px',\n                    overflow: 'auto',\n                    height: '400px',\n                    background: 'white'\n                }}\n            >\n                <DataListItem aria-labelledby=\"top-templates-header\">\n                    <DataListCell>\n                        <h3>{title}</h3>\n                    </DataListCell>\n                    <DataCellEnd>\n                        <h3>Usage</h3>\n                    </DataCellEnd>\n                </DataListItem>\n                {isLoading && (\n                    <PFDataListItem\n                        aria-labelledby=\"templates-loading\"\n                        key={isLoading}\n                        style={{ border: 'none' }}\n                    >\n                        <PFDataListCell>\n                            <LoadingState />\n                        </PFDataListCell>\n                    </PFDataListItem>\n                )}\n                {!isLoading && templates.length <= 0 && (\n                    <PFDataListItem\n                        aria-labelledby=\"templates-no-data\"\n                        key={isLoading}\n                        style={{ border: 'none' }}\n                    >\n                        <PFDataListCell>\n                            <NoData />\n                        </PFDataListCell>\n                    </PFDataListItem>\n                )}\n                {!isLoading &&\n          templates.map(({ name, total_count, id }, index) => (\n              <DataListItem aria-labelledby=\"top-templates-detail\" key={index}>\n                  <DataListCell>\n                      <a\n                          onClick={() => {\n                              setIsModalOpen(true);\n                              setSelectedId(id);\n                          }}\n                      >\n                          {name}\n                      </a>\n                  </DataListCell>\n                  <DataCellEnd>{total_count}</DataCellEnd>\n              </DataListItem>\n          ))}\n            </DataList>\n            <ModalContents\n                isOpen={isModalOpen}\n                handleModal={setIsModalOpen}\n                selectedId={selectedId}\n                qp={qp}\n                jobType={jobType}\n                handleCloseBtn={setSelectedId}\n            />\n        </>\n    );\n};\n\nTemplatesList.propTypes = {\n    templates: PropTypes.array,\n    isLoading: PropTypes.bool,\n    queryParams: PropTypes.object,\n    title: PropTypes.string,\n    qp: PropTypes.object,\n    jobType: PropTypes.string\n};\n\nexport default TemplatesList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport {\n    preflightRequest,\n    readClustersOptions,\n    readJobExplorer,\n    readEventExplorer\n} from '../../Api';\n\nimport { jobExplorer } from '../../Utilities/constants';\nimport useApi from '../../Utilities/useApi';\n\nimport {\n    Main,\n    NotAuthorized,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle\n} from '@patternfly/react-core';\n\nimport BarChart from '../../Charts/BarChart';\nimport LineChart from '../../Charts/LineChart';\nimport ModulesList from '../../Components/ModulesList';\nimport TemplatesList from '../../Components/TemplatesList';\nimport FilterableToolbar from '../../Components/Toolbar';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport { clusters } from '../../Utilities/constants';\n\nconst initialTopTemplateParams = {\n    group_by: 'template',\n    limit: 10,\n    job_type: [ 'job' ],\n    group_by_time: false,\n    status: [ 'successful', 'failed' ]\n};\n\nconst initialTopWorkflowParams = {\n    group_by: 'template',\n    limit: 10,\n    job_type: [ 'workflowjob' ],\n    group_by_time: false,\n    status: [ 'successful', 'failed' ]\n};\n\nconst initialModuleParams = {\n    group_by: 'module',\n    sort_by: 'host_task_count:desc',\n    limit: 10\n};\n\nconst Clusters = () => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n\n    const optionsMapper = options => {\n        const { groupBy, attributes, ...rest } = options;\n        return rest;\n    };\n\n    const { queryParams, setFromToolbar } = useQueryParams({\n        ...clusters.defaultParams\n    });\n\n    const [\n        {\n            isLoading,\n            isSuccess,\n            error,\n            data: { items: chartData = []}\n        },\n        setData\n    ] = useApi({ items: []});\n\n    const [\n        {\n            data: { items: templates = []}\n        },\n        setTemplates\n    ] = useApi({ items: []});\n    const [\n        {\n            data: { items: workflows = []}\n        },\n        setWorkflows\n    ] = useApi({ items: []});\n    const [\n        {\n            data: { items: modules = []}\n        },\n        setModules\n    ] = useApi({ items: []});\n    const [{ data: options = []}, setOptions ] = useApi({}, optionsMapper);\n\n    const initialOptionsParams = {\n        attributes: jobExplorer.attributes\n    };\n\n    const { queryParams: optionsQueryParams } = useQueryParams(\n        initialOptionsParams\n    );\n\n    const {\n        cluster_id,\n        org_id,\n        template_id,\n        quick_date_range,\n        start_date,\n        end_date\n    } = queryParams;\n\n    const topTemplatesParams = {\n        cluster_id,\n        org_id,\n        template_id,\n        quick_date_range,\n        start_date,\n        end_date,\n        ...initialTopTemplateParams\n    };\n\n    const topWorkflowParams = {\n        cluster_id,\n        org_id,\n        template_id,\n        quick_date_range,\n        start_date,\n        end_date,\n        ...initialTopWorkflowParams\n    };\n\n    const topModuleParams = {\n        cluster_id,\n        org_id,\n        template_id,\n        quick_date_range,\n        start_date,\n        end_date,\n        ...initialModuleParams\n    };\n\n    useEffect(() => {\n        async function initializeWithPreflight() {\n            await preflightRequest().catch(error => {\n                setPreFlightError({ preflightError: error });\n            });\n            setOptions(readClustersOptions({ params: optionsQueryParams }));\n        }\n\n        initializeWithPreflight();\n    }, []);\n\n    // Get and update the data\n    useEffect(() => {\n        const fetchEndpoints = () => {\n            setData(readJobExplorer({ params: queryParams }));\n            setTemplates(readJobExplorer({ params: topTemplatesParams }));\n            setWorkflows(readJobExplorer({ params: topWorkflowParams }));\n            setModules(readEventExplorer({ params: topModuleParams }));\n        };\n\n        fetchEndpoints();\n    }, [ queryParams ]);\n\n    if (preflightError?.preflightError?.status === 403) {\n        return <NotAuthorized { ...notAuthorizedParams } />;\n    }\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={'Clusters'} />\n                <FilterableToolbar\n                    categories={options}\n                    filters={queryParams}\n                    setFilters={setFromToolbar}\n                />\n            </PageHeader>\n            {preflightError && (\n                <Main>\n                    <EmptyState {...preflightError} />\n                </Main>\n            )}\n            {error && (\n                <Main>\n                    <ApiErrorState message={error.error} />\n                </Main>\n            )}\n            {!preflightError && !error && (\n                <>\n                    <Main>\n                        <Card>\n                            <PFCardTitle>\n                                <h2>Job status</h2>\n                            </PFCardTitle>\n                            <CardBody>\n                                {isLoading && <LoadingState />}\n                                {queryParams.cluster_id.length <= 0 && isSuccess && (\n                                    <BarChart\n                                        margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                                        id=\"d3-bar-chart-root\"\n                                        data={chartData}\n                                        templateId={queryParams.template_id}\n                                        orgId={queryParams.org_id}\n                                    />\n                                )}\n                                {queryParams.cluster_id.length > 0 && isSuccess && (\n                                    <LineChart\n                                        margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                                        id=\"d3-line-chart-root\"\n                                        data={chartData}\n                                        clusterId={queryParams.cluster_id}\n                                        templateId={queryParams.template_id}\n                                        orgId={queryParams.org_id}\n                                    />\n                                )}\n                            </CardBody>\n                        </Card>\n                        <div\n                            className=\"dataCard\"\n                            style={{ display: 'flex', marginTop: '20px' }}\n                        >\n                            <TemplatesList\n                                qp={queryParams}\n                                templates={workflows}\n                                isLoading={isLoading}\n                                title={'Top workflows'}\n                                jobType={'workflowjob'}\n                            />\n                            <TemplatesList\n                                qp={queryParams}\n                                templates={templates}\n                                isLoading={isLoading}\n                                title={'Top templates'}\n                                jobType={'job'}\n                            />\n                            <ModulesList modules={modules} isLoading={isLoading} />\n                        </div>\n                    </Main>\n                </>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default Clusters;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        this.draw();\n    }\n\n    formatDollars(amount) {\n        return parseFloat(amount)\n        .toFixed(2)\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    }\n\n    draw() {\n        this.width = 125;\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip-base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 125;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, 0) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', 92)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.name = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', -2)\n        .text('Template name');\n        this.savings = this.toolTipBase\n        .append('text')\n        .attr('x', 20)\n        .attr('y', 52)\n        .attr('font-size', 12)\n        .attr('font-weight', 'bold')\n        .attr('fill', 'white')\n        .text('Total savings $0');\n        this.manualCost = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', 16)\n        .text('Manual cost $0');\n        this.automationCost = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', 34)\n        .text('Automation cost $0');\n    }\n\n  handleMouseOver = d => {\n      let name;\n      let savings;\n      let manualCost;\n      let automationCost;\n      const scrollLeftOffset = d3.select('#d3-roi-chart-root').node().scrollLeft;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10 +\n      scrollLeftOffset;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      30;\n      if (!d) {\n          return;\n      } else {\n          savings = this.formatDollars(d.delta);\n          name = d.name;\n          manualCost = this.formatDollars(d.manualCost);\n          automationCost = this.formatDollars(d.automatedCost);\n      }\n\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n      this.name.text('' + name);\n      this.savings.text('Total savings $' + savings);\n      this.manualCost.text('Manual Cost $' + manualCost);\n      this.automationCost.text('Automation Cost $' + automationCost);\n      this.nameWidth = this.name.node().getComputedTextLength();\n      this.savingsWidth = this.savings.node().getComputedTextLength();\n      this.manualCostWidth = this.manualCost.node().getComputedTextLength();\n      this.automationCostWidth = this.automationCost\n      .node()\n      .getComputedTextLength();\n      this.widestTextElem = d3.max([\n          this.nameWidth,\n          this.savingsWidth,\n          this.automationCostWidth,\n          this.manualCostWidth\n      ]);\n\n      const maxTextPerc = (this.widestTextElem / this.boxWidth) * 100;\n      const threshold = 85;\n      const overage = maxTextPerc / threshold;\n      let adjustedWidth;\n      if (maxTextPerc > threshold) {\n          adjustedWidth = this.boxWidth * overage;\n      } else {\n          adjustedWidth = this.boxWidth;\n      }\n\n      this.boundingBox.attr('width', adjustedWidth);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, 15) rotate(45)');\n          this.boundingBox.attr('x', -adjustedWidth - 20);\n          this.name.attr('x', -(toolTipWidth - 7));\n          this.savings.attr('x', -(toolTipWidth - 7));\n          this.manualCost.attr('x', -(toolTipWidth - 7));\n          this.automationCost.attr('x', -(toolTipWidth - 7));\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, 15) rotate(45)');\n          this.boundingBox.attr('x', 10);\n          this.name.attr('x', 20);\n          this.savings.attr('x', 20);\n          this.manualCost.attr('x', 20);\n          this.automationCost.attr('x', 20);\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass TopTemplatesSavings extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.state = {\n            timeout: null\n        };\n    }\n\n    // Methods\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => {\n                this.init();\n            }, 500)\n        });\n    }\n\n    init() {\n        this.draw();\n    }\n\n    draw() {\n    // Use PF chart color\n        const color = '#0066CC'; //blue\n        // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const { data } = this.props;\n        let width;\n        // adjust chart width to support larger datasets\n        if (data.length >= 15) {\n            const containerWidth = d3.select('.automation-wrapper').node();\n            width =\n        containerWidth.getBoundingClientRect().width -\n        this.props.margin.left -\n        this.props.margin.right;\n        } else {\n            width = this.props.getWidth();\n        }\n\n        const height = this.props.getHeight();\n        const x = d3\n        .scaleBand()\n        .rangeRound([ 0, width ])\n        .padding(0.45);\n        const y = d3.scaleLinear().range([ height, 0 ]);\n        // format our X Axis ticks\n        let ticks;\n        ticks = data.map(d => d.name);\n        const formatYAxisValue = d3.format('.2s');\n        const xAxis = d3.axisBottom(x).tickValues(ticks);\n\n        const yAxis = d3\n        .axisLeft(y)\n        .ticks(8)\n        .tickFormat(d => formatYAxisValue(d).replace('G', 'B'))\n        .tickSize(-width, 0, 0);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n\n        const taskNames = data.map(d => d.name);\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id\n        });\n        x.domain(taskNames);\n        y.domain([ 0, d3.max(data, d => d.delta * 1.15) || 8 ]);\n\n        // add y axis\n        svg\n        .append('g')\n        .attr('class', 'y axis')\n        .call(yAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7')\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 6)\n        .attr('dy', '.71em')\n        .style('text-anchor', 'end')\n        .style('font-weight', 'bold')\n        .text('Value');\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Savings per template ($)');\n\n        // add x axis\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(xAxis)\n        .selectAll('text')\n        .style('text-anchor', 'start')\n        .attr('dx', '0.75em')\n        .attr('dy', -x.bandwidth() / 1.45 - 8)\n        .attr('transform', 'rotate(-90)');\n\n        svg.selectAll('.x-axis line').attr('stroke', 'transparent');\n\n        svg\n        .selectAll('.bar')\n        .data(data)\n        .enter()\n        .append('rect')\n        .attr('x', d => x(d.name))\n        .attr('width', x.bandwidth())\n        .attr('y', d => y(d.delta))\n        .style('fill', () => color)\n        .attr('height', d => height - y(d.delta))\n        .on('mouseover', function(d) {\n            d3.select(this).style('fill', d3.rgb(color).darker(1));\n            tooltip.handleMouseOver(d);\n        })\n        .on('mousemove', tooltip.handleMouseOver)\n        .on('mouseout', function() {\n            d3.select(this).style('fill', color);\n            tooltip.handleMouseOut();\n        });\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate() {\n        this.init();\n    }\n\n    render() {\n        return <div id={this.props.id} />;\n    }\n}\n\nTopTemplatesSavings.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func\n};\n\nexport default initializeChart(TopTemplatesSavings);\n","import styled from 'styled-components';\nimport { CardTitle } from '@patternfly/react-core';\n\nexport const BorderedCardTitle = styled(CardTitle)`\n  border-bottom: 1px solid #d7d7d7;\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle, Title } from '@patternfly/react-core';\n\nconst floatToStringWithCommas = total =>\n    total\n    .toFixed(2)\n    .toString()\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\nconst TotalSavings = ({ totalSavings = 0 }) => (\n    <Card style={{ borderTop: '3px solid #2B9AF3' }}>\n        <CardTitle style={{ paddingBottom: '0' }}>Total savings</CardTitle>\n        <CardBody>\n            <Title\n                headingLevel=\"h3\"\n                size=\"4xl\"\n                style={{ color: 'var(--pf-global--success-color--200)' }}\n            >\n                {floatToStringWithCommas(totalSavings)}\n            </Title>\n        </CardBody>\n    </Card>\n);\n\nTotalSavings.propTypes = {\n    totalSavings: PropTypes.number\n};\n\nexport default TotalSavings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    Card,\n    CardBody,\n    InputGroup,\n    InputGroupText,\n    TextInput\n} from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst validFloat = value => {\n    const floatValue = parseFloat(value);\n    return floatValue && floatValue >= 0 ? value : '';\n};\n\nconst CalculationCost = ({\n    costManual = '0',\n    setCostManual = () => {},\n    costAutomation = '0',\n    setCostAutomation = () => {}\n}) => (\n    <Card>\n        <CardTitle>Calculate your automation</CardTitle>\n        <CardBody>\n            <InputAndText>\n                <p>Manual cost of automation</p>\n                <em style={{ color: 'var(--pf-global--Color--dark-200)' }}>\n          (e.g. average salary of mid-level Software Engineer)\n                </em>\n                <InputGroup style={{ width: '50%' }}>\n                    <InputGroupText>\n                        <DollarSignIcon />\n                    </InputGroupText>\n                    <TextInput\n                        id=\"manual-cost\"\n                        type=\"number\"\n                        aria-label=\"manual-cost\"\n                        value={costManual}\n                        onChange={e => setCostManual(validFloat(e))}\n                    />\n                    <InputGroupText>/hr</InputGroupText>\n                </InputGroup>\n            </InputAndText>\n            <InputAndText style={{ paddingTop: '10px' }}>\n                <p>Automated process cost</p>\n                <InputGroup style={{ width: '50%' }}>\n                    <InputGroupText>\n                        <DollarSignIcon />\n                    </InputGroupText>\n                    <TextInput\n                        id=\"automation-cost\"\n                        type=\"number\"\n                        aria-label=\"automation-cost\"\n                        value={costAutomation}\n                        onChange={e => setCostAutomation(validFloat(e))}\n                    />\n                    <InputGroupText>/hr</InputGroupText>\n                </InputGroup>\n            </InputAndText>\n        </CardBody>\n    </Card>\n);\n\nCalculationCost.propTypes = {\n    costManual: PropTypes.string,\n    setCostManual: PropTypes.func,\n    costAutomation: PropTypes.string,\n    setCostAutomation: PropTypes.func\n};\n\nexport default CalculationCost;\n","import React from 'react';\n\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst AutomationFormula = () => (\n    <Card style={{ height: '100%' }}>\n        <CardTitle>Automation formula</CardTitle>\n        <CardBody>\n            <p>\n                <b>Manual cost for template x</b> =\n                <em>\n          (time for a manual run on one host in hours * (sum of all hosts across\n          all job runs) ) * cost per hour\n                </em>\n            </p>\n            <p>\n                <b>Automation cost for template x</b> =\n                <em>\n          cost of automation per hour * sum of total elapsed hours for a\n          template\n                </em>\n            </p>\n            <p>\n                <b>Savings</b> =\n                <em>Sum of (manual cost - automation cost) across all templates</em>\n            </p>\n        </CardBody>\n    </Card>\n);\n\nexport default AutomationFormula;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    Button,\n    Card,\n    CardBody,\n    InputGroup,\n    InputGroupText,\n    TextInput,\n    Tooltip,\n    Popover\n} from '@patternfly/react-core';\nimport {\n    InfoCircleIcon,\n    ToggleOnIcon,\n    ToggleOffIcon\n} from '@patternfly/react-icons';\n\nimport {\n    convertSecondsToMins,\n    convertMinsToSeconds,\n    capitalize\n} from '../../Utilities/helpers';\n\nconst TemplateDetail = styled.div`\n  em {\n    display: block;\n    padding: 5px 0;\n  }\n\n  @media (max-width: 1490px) {\n    display: block;\n\n    em {\n      padding: 10px 0;\n      display: block;\n    }\n  }\n`;\n\nconst TemplateDetailSubTitle = styled.em`\n  color: var(--pf-global--Color--dark-200);\n`;\n\nconst TooltipWrapper = styled.div`\n  p {\n    text-align: left;\n  }\n`;\n\nconst IconGroup = styled.div`\n  & svg {\n    fill: var(--pf-global--Color--dark-200);\n\n    :hover {\n      cursor: pointer;\n    }\n\n    :first-of-type {\n      margin-right: 10px;\n      margin-left: 10px;\n\n      @media (max-width: 1350px) {\n        margin-left: 0;\n      }\n    }\n  }\n`;\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst showSortAttr = (details, sortBy) => {\n    const trimmed = sortBy.split(':')[0];\n    const sortAttribute = Object.keys(details).map(k =>\n        k === trimmed ? `${details[k]}` : null\n    );\n\n    return (\n        <TemplateDetailSubTitle>\n            {capitalize(trimmed.split('_').join(' '))}: {sortAttribute}\n        </TemplateDetailSubTitle>\n    );\n};\n\nconst QuestionIconTooltip = ({ details }) => (\n    <Popover\n        aria-label=\"template detail popover\"\n        position=\"left\"\n        bodyContent={\n            <TooltipWrapper>\n                {Object.keys(details).map((k, i) => (\n                    <p key={i}>\n                        <b>{capitalize(k.split('_').join(' '))}</b>: {details[k]}\n                    </p>\n                ))}\n            </TooltipWrapper>\n        }\n    >\n        <InfoCircleIcon />\n    </Popover>\n);\n\nQuestionIconTooltip.propTypes = {\n    details: PropTypes.object\n};\n\nconst TopTemplates = ({\n    data = [],\n    sortBy = '',\n    setDataRunTime = () => {},\n    setEnabled = () => {},\n    redirectToJobExplorer = () => {}\n}) => (\n    <Card style={{ overflow: 'auto', flex: '1 1 0' }} className=\"top-templates\">\n        <CardBody>\n            <p>Enter the time it takes to run the following templates manually.</p>\n            {data.map(d => (\n                <div key={d.id}>\n                    <Tooltip content={'List of jobs for this template for past 30 days'}>\n                        <Button\n                            style={{ padding: '15px 0 10px' }}\n                            component=\"a\"\n                            onClick={() => redirectToJobExplorer(d.id)}\n                            variant=\"link\"\n                        >\n                            {d.name}\n                        </Button>\n                    </Tooltip>\n                    <TemplateDetail>\n                        <InputAndText key={d.id}>\n                            <InputGroup>\n                                <TextInput\n                                    id={d.id}\n                                    type=\"number\"\n                                    aria-label=\"time run manually\"\n                                    value={convertSecondsToMins(d.avgRunTime)}\n                                    onChange={minutes =>\n                                        setDataRunTime(convertMinsToSeconds(minutes), d.id)\n                                    }\n                                />\n                                <InputGroupText>min</InputGroupText>\n                            </InputGroup>\n                        </InputAndText>\n                        <TemplateDetailSubTitle>\n                            x {d.successful_hosts_total} host runs\n                        </TemplateDetailSubTitle>\n                        {showSortAttr(d, sortBy)}\n                        <IconGroup>\n                            <QuestionIconTooltip\n                                details={d}\n                            />\n                            { !d.enabled && <ToggleOffIcon onClick={ () => setEnabled(d.id)(true) } /> }\n                            { d.enabled && <ToggleOnIcon onClick={ () => setEnabled(d.id)(false) } /> }\n                        </IconGroup>\n                    </TemplateDetail>\n                    <p style={{ color: '#486B00' }}>${d.delta.toFixed(2)}</p>\n                </div>\n            ))}\n        </CardBody>\n    </Card>\n);\n\nTopTemplates.propTypes = {\n    data: PropTypes.array,\n    setDataRunTime: PropTypes.func,\n    redirectToJobExplorer: PropTypes.func,\n    deselectedIds: PropTypes.array,\n    setDeselectedIds: PropTypes.func,\n    setEnabled: PropTypes.func,\n    sortBy: PropTypes.string\n};\n\nexport default TopTemplates;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n    Main,\n    NotAuthorized,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\n// Imports from custom components\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\n// Imports from API\nimport { preflightRequest, readROI, readROIOptions } from '../../Api';\n\n// Imports from utilities\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { roi as roiConst } from '../../Utilities/constants';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { calculateDelta, convertSecondsToHours } from '../../Utilities/helpers';\n\n// Chart\nimport TopTemplatesSavings from '../../Charts/ROITopTemplates';\n\n// Local imports\nimport { BorderedCardTitle } from './helpers';\nimport TotalSavings from './TotalSavings';\nimport CalculationCost from './CalculationCost';\nimport AutomationFormula from './AutomationFormula';\nimport TopTemplates from './TopTemplates';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 5fr 2fr;\n  height: 100%;\n`;\n\nconst WrapperLeft = styled.div`\n  flex: 5;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n`;\n\nconst WrapperRight = styled.div`\n  flex: 2;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst mapApi = ({ items = []}) =>\n    items.map(el => ({\n        ...el,\n        delta: 0,\n        avgRunTime: 3600,\n        manualCost: 0,\n        automatedCost: 0,\n        enabled: true\n    }));\n\nconst filterDisabled = data => data.filter(({ enabled }) => enabled);\n\nconst updateDeltaCost = (data, costAutomation, costManual) =>\n    data.map(el => {\n        const manualCost =\n      convertSecondsToHours(el.avgRunTime) *\n      el.successful_hosts_total *\n      parseFloat(costManual);\n        const automatedCost =\n      convertSecondsToHours(el.successful_elapsed_total) *\n      parseFloat(costAutomation);\n        const delta = calculateDelta(automatedCost, manualCost);\n\n        return { ...el, delta, manualCost, automatedCost };\n    });\n\nconst computeTotalSavings = data =>\n    data.reduce((sum, curr) => sum + curr.delta, 0);\n\nconst AutomationCalculator = ({ history }) => {\n    const toJobExplorer = useRedirect(history, 'jobExplorer');\n    const [ costManual, setCostManual ] = useState('50');\n    const [ costAutomation, setCostAutomation ] = useState('20');\n\n    const [ preflight, setPreflight ] = useApi(null);\n    const [ options, setOptions ] = useApi({});\n    const [ api, fetchApi, setDataInApi ] = useApi([], data =>\n        updateDeltaCost(mapApi(data), costAutomation, costManual)\n    );\n\n    const { queryParams, setFromToolbar } = useQueryParams(\n        roiConst.defaultParams\n    );\n\n    /**\n   * Modifies one elements avgRunTime in the unfilteredData\n   * and updates all calculated fields.\n   * Used in top templates.\n   */\n    const setDataRunTime = (seconds, id) => {\n        const updatedData = api.data.map(el => {\n            if (el.id === id) {\n                el.avgRunTime = seconds;\n                const updatedDelta = updateDeltaCost(\n                    [ el ],\n                    costAutomation,\n                    costManual\n                )[0];\n                return updatedDelta;\n            } else {\n                return el;\n            }\n        });\n\n        setDataInApi(updatedData);\n    };\n\n    const setEnabled = id => value => {\n        setDataInApi(api.data.map(el =>\n            el.id === id\n                ? { ...el, enabled: value }\n                : el\n        ));\n    };\n\n    useEffect(() => {\n        setPreflight(preflightRequest());\n        setOptions(readROIOptions({ params: queryParams }));\n    }, []);\n\n    /**\n   * Recalculates the delta and costs in the data after the cost is changed.\n   */\n    useEffect(() => {\n        setDataInApi(updateDeltaCost(api.data, costAutomation, costManual));\n    }, [ costAutomation, costManual ]);\n\n    /**\n   * Get data from API depending on the queryParam.\n   */\n    useEffect(() => {\n        fetchApi(readROI({ params: queryParams }));\n    }, [ queryParams ]);\n\n    /**\n   * Function to redirect to the job explorer page\n   * with the same filters as is used here.\n   */\n    const redirectToJobExplorer = templateId => {\n        const initialQueryParams = {\n            quick_date_range: 'last_30_days',\n            template_id: [ templateId ]\n        };\n        toJobExplorer(initialQueryParams);\n    };\n\n    const renderLeft = () => (\n        <WrapperLeft>\n            <Main style={{ paddingBottom: '0' }}>\n                <Card>\n                    <BorderedCardTitle>Automation savings</BorderedCardTitle>\n                    <CardBody>\n                        {api.isLoading && <LoadingState />}\n                        {api.error && <ApiErrorState message={api.error.error} />}\n                        {api.isSuccess && api.data.length <= 0 && <NoData />}\n                        {api.isSuccess && api.data.length > 0 && (\n                            <React.Fragment>\n                                <TopTemplatesSavings\n                                    margin={{ top: 20, right: 20, bottom: 20, left: 70 }}\n                                    id=\"d3-roi-chart-root\"\n                                    data={filterDisabled(api.data)}\n                                />\n                                <p style={{ textAlign: 'center' }}>Templates</p>\n                            </React.Fragment>\n                        )}\n                    </CardBody>\n                </Card>\n            </Main>\n            <Main>\n                <AutomationFormula />\n            </Main>\n        </WrapperLeft>\n    );\n\n    const renderRight = () => (\n        <WrapperRight>\n            <Main style={{ paddingBottom: '0', paddingLeft: '0' }}>\n                <TotalSavings totalSavings={computeTotalSavings(filterDisabled(api.data))} />\n            </Main>\n            <Main\n                style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    flex: '1 1 0',\n                    paddingLeft: '0'\n                }}\n            >\n                <CalculationCost\n                    costManual={costManual}\n                    setCostManual={setCostManual}\n                    costAutomation={costAutomation}\n                    setCostAutomation={setCostAutomation}\n                />\n                <TopTemplates\n                    redirectToJobExplorer={redirectToJobExplorer}\n                    data={api.data}\n                    setDataRunTime={setDataRunTime}\n                    setUnfilteredData={api.data}\n                    setEnabled={setEnabled}\n                    sortBy={queryParams.sort_by}\n                />\n            </Main>\n        </WrapperRight>\n    );\n\n    if (preflight?.error?.status === 403) {\n        return <NotAuthorized { ...notAuthorizedParams } />;\n    }\n\n    return (\n        <React.Fragment>\n            <PageHeader style={{ flex: '0' }}>\n                <PageHeaderTitle title={'Automation Calculator'} />\n                <FilterableToolbar\n                    categories={options.data}\n                    filters={queryParams}\n                    setFilters={setFromToolbar}\n                />\n            </PageHeader>\n            {preflight.error && (\n                <Main>\n                    <EmptyState preflightError={preflight.error} />\n                </Main>\n            )}\n            {preflight.isSuccess && (\n                <React.Fragment>\n                    <Wrapper className=\"automation-wrapper\">\n                        {renderLeft()}\n                        {renderRight()}\n                    </Wrapper>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n};\n\nAutomationCalculator.propTypes = {\n    history: PropTypes.object\n};\n\nexport default AutomationCalculator;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { shape, string, number, arrayOf, node, oneOfType } from 'prop-types';\nimport { Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst RoutedTabs = ({ tabsArray, defaultTabId }) => {\n    const history = useHistory();\n    const location = useLocation();\n\n    const getActiveTabId = (defaultTabId) => {\n        return tabsArray.find(tab => tab.link === location.pathname)?.id || defaultTabId;\n    };\n\n    const handleTabSelect = (_, eventKey) => {\n        const match = tabsArray.find(tab => tab.id === eventKey);\n        if (match) {\n            history.push(match.link);\n        }\n    };\n\n    return (\n        <Tabs activeKey={getActiveTabId(defaultTabId)} onSelect={handleTabSelect}>\n            {tabsArray.map(tab => (\n                <Tab\n                    aria-label={typeof tab.name === 'string' ? tab.name : `${tab.id} tab`}\n                    eventKey={tab.id}\n                    key={tab.id}\n                    link={tab.link}\n                    title={<TabTitleText>{tab.name}</TabTitleText>}\n                    role=\"tab\"\n                />\n            ))}\n        </Tabs>\n    );\n};\n\nRoutedTabs.propTypes = {\n    defaultTabId: PropTypes.number,\n    tabsArray: arrayOf(\n        shape({\n            id: number.isRequired,\n            link: string.isRequired,\n            name: oneOfType([ string.isRequired, node.isRequired ])\n        })\n    ).isRequired\n};\n\nRoutedTabs.defaultProps = {\n    defaultTabId: 1\n};\n\nexport default RoutedTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\nimport { Paths } from '../../paths';\nimport { stringify } from 'query-string';\n\nimport {\n    useHistory\n} from 'react-router-dom';\n\nimport {\n    Card,\n    DescriptionList,\n    DescriptionListTerm,\n    DescriptionListGroup,\n    DescriptionListDescription,\n    Divider,\n    Label,\n    TextContent,\n    List,\n    ListItem\n} from '@patternfly/react-core';\n\nimport { CheckCircleIcon, ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { formatDateTime } from '../../Utilities/helpers';\nimport RoutedTabs from '../../Components/RoutedTabs';\n\nconst TopCard = styled(Card)`\n  min-height: 500px;\n`;\n\nconst DetailsTab = ({ tabsArray, plans }) => {\n    let history = useHistory();\n    const {\n        automation_status,\n        category,\n        description,\n        frequency_period,\n        hosts,\n        manual_time,\n        modified,\n        name,\n        tasks,\n        template_details,\n        template_id\n    } = plans[0];\n\n    const redirectToJobExplorer = templateId => {\n        const { jobExplorer } = Paths;\n        const initialQueryParams = {\n            quick_date_range: 'last_30_days',\n            status: [ 'failed', 'successful' ],\n            template_id: [ templateId ]\n        };\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    const showTemplate = (template_details) => {\n        if (!template_details.id) {\n            return;\n        }\n\n        return (\n            <a onClick={() => redirectToJobExplorer(template_details.id)}>{template_details.name}</a>\n        );\n    };\n\n    const labelsAndValues = {\n        Name: name || undefined,\n        'Automation Type': category || undefined,\n        Description: description || undefined,\n        'Manual Time': manual_time || undefined,\n        'Run on hosts': hosts || undefined,\n        Frequency: frequency_period || undefined,\n        Template: template_id ? showTemplate(template_details) : undefined,\n        'Automation status': automation_status.status === 'successful' ? (\n            <Label variant=\"outline\" color=\"green\" icon={<CheckCircleIcon />}>\n                Running\n            </Label>\n        ) : (\n            <Label variant=\"outline\" color=\"red\" icon={<ExclamationCircleIcon />}>\n                Not Running\n            </Label>\n        ),\n        'Last updated': modified ? <em>{formatDateTime(modified)}</em> : undefined\n    };\n\n    return (\n        <React.Fragment>\n            { plans && (\n                <TopCard>\n                    <RoutedTabs tabsArray={tabsArray}/>\n                    <div style={{ padding: '1rem' }}>\n                        <DescriptionList isHorizontal columnModifier={{ lg: '3Col' }}>\n                            {Object.keys(labelsAndValues).map((key, i) => (\n                                labelsAndValues[key] !== undefined && (\n                                    <DescriptionListGroup key={i}>\n                                        <DescriptionListTerm>{key}</DescriptionListTerm>\n                                        <DescriptionListDescription>{labelsAndValues[key]}</DescriptionListDescription>\n                                    </DescriptionListGroup>\n                                )\n                            ))}\n                        </DescriptionList>\n                        {tasks.length > 0 && (\n                            <>\n                                <Divider style={{ padding: '1rem' }} component=\"div\"/>\n                                <DescriptionListTerm>Tasks</DescriptionListTerm>\n                                <TextContent>\n                                    <List component='ol' type='1'>\n                                        {tasks.map((task) => (\n                                            <ListItem key={task.id}>{task.task}</ListItem>\n                                        ))}\n                                    </List>\n                                </TextContent>\n                            </>\n                        )}\n                    </div>\n                </TopCard>\n            )}\n        </React.Fragment>\n    );\n};\n\nDetailsTab.propTypes = {\n    plans: PropTypes.array,\n    tabsArray: PropTypes.array\n};\n\nexport default DetailsTab;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\n\nimport {\n    Card,\n    CardBody\n} from '@patternfly/react-core';\nimport RoutedTabs from '../../Components/RoutedTabs';\n\nconst TopCard = styled(Card)`\n  min-height: 500px;\n`;\n\nconst GraphTab = ({ tabsArray }) => {\n    return (\n        <>\n            <TopCard>\n                <RoutedTabs tabsArray={tabsArray}/>\n                <CardBody />\n            </TopCard>\n        </>\n    );\n};\n\nGraphTab.propTypes = {\n    tabsArray: PropTypes.array\n};\n\nexport default GraphTab;\n","/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Breadcrumb, BreadcrumbItem, BreadcrumbHeading } from '@patternfly/react-core';\n\nimport getBaseName from '../Utilities/getBaseName';\n\nconst Breadcrumbs = ({items, current}) => {\n    return (\n        <Breadcrumb>\n            {items.map(({title, navigate}) => {\n                const basePathNavigate = getBaseName() + navigate;\n                return (<BreadcrumbItem key={title} to={basePathNavigate}>{title}</BreadcrumbItem>);\n            })}\n            {current && (<BreadcrumbHeading>{current}</BreadcrumbHeading>)}\n        </Breadcrumb>\n    );\n};\n\nBreadcrumbs.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n      navigate: PropTypes.any,\n      title: PropTypes.node\n  })),\n  current: PropTypes.node,\n};\n\nBreadcrumbs.defaultProps = {\n  items: [],\n  current: null,\n};\n\nexport default Breadcrumbs;\n","import React, { useState, useEffect } from 'react';\nimport {\n    useParams,\n    Route,\n    Switch\n} from 'react-router-dom';\nimport { CaretLeftIcon } from '@patternfly/react-icons';\n\nimport DetailsTab from './DetailsTab';\nimport GraphTab from './GraphTab';\nimport SavingsPlanner from './SavingsPlanner';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport {\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\nimport Breadcrumbs from '../../Components/Breadcrumbs';\n\nimport {\n    readPlan\n} from '../../Api';\n\nimport useApi from '../../Utilities/useApi';\n\nconst SavingsPlan = () => {\n    let { id } = useParams();\n    const pageTitle = location.pathname.indexOf('/graph') !== -1 ? 'Graph' : 'Details';\n    const [ selectedId, setSelectedId ] = useState(id);\n    const [\n        {\n            isSuccess,\n            error,\n            data: { items: plans = []}\n        },\n        setData\n    ] = useApi({ items: []});\n    const queryParams = { id: [ selectedId ]};\n\n    useEffect(() => {\n        setSelectedId(id);\n        const fetchEndpoints = () => {\n            setData(readPlan({ params: queryParams }));\n        };\n\n        fetchEndpoints();\n    }, []);\n\n    const tabsArray = [\n        {\n            id: 0,\n            name: (\n                <>\n                    <CaretLeftIcon />\n                    {'Back to Plans'}\n                </>\n            ),\n            link: `/savings-planner`\n        },\n        { id: 1, name: 'Details', link: `/savings-planner/${selectedId}/details` },\n        { id: 2, name: 'Graph', link: `/savings-planner/${selectedId}/graph` }\n    ];\n\n    const showCardHeader = !(location.pathname.endsWith('edit'));\n    const breadcrumbUrl = `/savings-planner/${selectedId}`;\n    const breadcrumbsItems = isSuccess ? [\n        { title: 'Savings Planner', navigate: '/savings-planner' },\n        { title: plans[0].name, navigate: breadcrumbUrl }] : [];\n\n    return (\n        <>\n            {error && (\n                <>\n                    <ApiErrorState message={error.error} />\n                </>\n            )}\n            {isSuccess &&\n                <React.Fragment>\n                    <PageHeader>\n                        <Breadcrumbs items= {breadcrumbsItems}/>\n                        <PageHeaderTitle title={pageTitle} />\n                    </PageHeader>\n                    {showCardHeader &&\n                        <Switch>\n                            <Route path=\"/savings-planner/:id/graph\">\n                                <GraphTab tabsArray={tabsArray}/>\n                            </Route>\n                            <Route path=\"/savings-planner/:id/details\">\n                                <DetailsTab plans={plans} tabsArray={tabsArray}/>\n                            </Route>\n                            <Route path=\"/savings-planner/:id\">\n                                <DetailsTab plans={plans} tabsArray={tabsArray}/>\n                            </Route>\n                            <Route exact path=\"/savings-planner\">\n                                <SavingsPlanner />\n                            </Route>\n                        </Switch>\n                    }\n                </React.Fragment>\n            }\n        </>\n    );\n};\n\nexport default SavingsPlan;\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst NoResults = () => {\n    return (\n        <EmptyState variant={EmptyStateVariant.full}>\n            <EmptyStateIcon icon={SearchIcon} />\n            <Title size=\"lg\" headingLevel=\"h4\">\n        No results found\n            </Title>\n            <EmptyStateBody>\n        No results match the filter criteria. Remove all filters or clear all\n        filters to show results.\n            </EmptyStateBody>\n        </EmptyState>\n    );\n};\n\nexport default NoResults;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from '@patternfly/react-core';\nimport {\n    CheckCircleIcon,\n    ExclamationCircleIcon,\n    ClockIcon,\n    SyncAltIcon,\n    ExclamationTriangleIcon\n} from '@patternfly/react-icons';\n\nconst JobStatus = ({ status }) => {\n    const capitalized = str => str.charAt(0).toUpperCase() + str.slice(1);\n\n    const getColor = () => {\n        switch (status) {\n            case 'successful':\n                return 'green';\n            case 'failed':\n            case 'error':\n                return 'red';\n            case 'running':\n            case 'pending':\n                return 'blue';\n            case 'canceled':\n                return 'orange';\n                // case new, waiting\n            default:\n                return 'grey';\n        }\n    };\n\n    const getIcon = () => {\n        switch (status) {\n            case 'successful':\n                return <CheckCircleIcon />;\n            case 'failed':\n            case 'error':\n                return <ExclamationCircleIcon />;\n            case 'running':\n                return <SyncAltIcon />;\n            case 'canceled':\n                return <ExclamationTriangleIcon />;\n                // case new, waiting, pending\n            default:\n                return <ClockIcon />;\n        }\n    };\n\n    return (\n        <Label variant=\"outline\" color={getColor()} icon={getIcon()}>\n            {capitalized(status)}\n        </Label>\n    );\n};\n\nJobStatus.propTypes = {\n    status: PropTypes.oneOf([\n        'successful',\n        'failed',\n        'error',\n        'running',\n        'new',\n        'waiting',\n        'pending',\n        'canceled'\n    ])\n};\n\nexport default JobStatus;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    DataListCell as PFDataListCell,\n    DataListContent,\n    DataList,\n    DataListItem,\n    DataListItemRow,\n    DataListItemCells as PFDataListItemCells,\n    DataListToggle as PFDataListToggle,\n    Tooltip\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkIcon } from '@patternfly/react-icons';\n\nimport LoadingState from '../Components/LoadingState';\nimport { formatDateTime, formatJobType } from '../Utilities/helpers';\nimport JobStatus from './JobStatus';\n\nconst headerLabels = [ 'Id/Name', 'Status', 'Cluster', 'Organization', 'Type' ];\n\nconst ExternalLinkIcon = styled(PFExternalLinkIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n`;\n\nconst DataListCell = styled(PFDataListCell)`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  text-align: center;\n`;\n\nconst DataListCellHeader = styled(DataListCell)`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  font-weight: bold;\n`;\n\nconst DataListItemCells = styled(PFDataListItemCells)`\n  align-items: center;\n`;\n\nconst DataListToggle = styled(PFDataListToggle)`\n  align-items: center;\n`;\n\nconst mobileBreakpoint = 765;\n\nconst buildHeader = labels => (\n    <DataListItem>\n        <DataListItemRow style={{ paddingLeft: '80px' }}>\n            <DataListItemCells\n                dataListCells={labels.map(label => (\n                    <DataListCellHeader key={label}>\n                        {label}\n                        {label === 'Id/Name' && <ExternalLinkIcon />}\n                    </DataListCellHeader>\n                ))}\n            />\n        </DataListItemRow>\n    </DataListItem>\n);\n\nconst buildListRow = (items, ariaLabel, ariaLabelledBy, windowWidth) => {\n    const [ isExpanded, setIsExpanded ] = useState([]);\n\n    return (\n        <>\n            {items.map((item, count) => {\n                const toggle = id => {\n                    const expanded = isExpanded;\n                    const idx = expanded.indexOf(id);\n                    const newExpanded =\n            idx >= 0\n                ? [\n                    ...expanded.slice(0, idx),\n                    ...expanded.slice(idx + 1, expanded.length)\n                ]\n                : [ ...expanded, id ];\n                    setIsExpanded(newExpanded);\n                };\n\n                return (\n                    <DataListItem\n                        key={item.id.id}\n                        aria-labelledby={ariaLabelledBy}\n                        isExpanded={isExpanded.includes(`${item.id.id}-toggle`)}\n                    >\n                        <DataListItemRow key={item.id.id}>\n                            <DataListToggle\n                                id={`${item.id.id}-toggle`}\n                                aria-controls={`${item.id.id}-expand`}\n                                onClick={() => toggle(`${item.id.id}-toggle`)}\n                                isExpanded={isExpanded.includes(`${item.id.id}-toggle`)}\n                            />\n                            <DataListItemCells\n                                dataListCells={[\n                                    <DataListCell key={count++}>\n                                        <a\n                                            href={item.id.tower_link}\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                        >\n                                            {windowWidth < mobileBreakpoint && (\n                                                <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                          Id/Name\n                                                    <ExternalLinkIcon />:\n                                                </span>\n                                            )}\n                      &nbsp;\n                                            {`${item.id.id} - ${item.id.template_name}`}\n                                        </a>\n                                    </DataListCell>,\n                                    <DataListCell key={count++}>\n                                        {windowWidth <= mobileBreakpoint && (\n                                            <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Status:\n                                            </span>\n                                        )}\n                    &nbsp;\n                                        <JobStatus status={item.status} />\n                                    </DataListCell>,\n                                    <Tooltip key={count++} content={<p>{item.cluster_name}</p>}>\n                                        <DataListCell>\n                                            {windowWidth <= mobileBreakpoint && (\n                                                <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                          Cluster:\n                                                </span>\n                                            )}\n                      &nbsp;\n                                            {item.cluster_name}\n                                        </DataListCell>\n                                    </Tooltip>,\n                                    <DataListCell key={count++}>\n                                        {windowWidth <= mobileBreakpoint && (\n                                            <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Organization:\n                                            </span>\n                                        )}\n                    &nbsp;\n                                        {item.org_name}\n                                    </DataListCell>,\n                                    <DataListCell key={count++}>\n                                        {windowWidth <= mobileBreakpoint && (\n                                            <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Type:\n                                            </span>\n                                        )}\n                    &nbsp;\n                                        {formatJobType(item.job_type)}\n                                    </DataListCell>\n                                ]}\n                            />\n                        </DataListItemRow>\n                        <DataListContent\n                            aria-label={`${item.id.id}-details`}\n                            id={'${item.id.id}'}\n                            isHidden={!isExpanded.includes(`${item.id.id}-toggle`)}\n                        >\n                            <DataListItemCells\n                                dataListCells={[\n                                    <DataListCell key={count++}>\n                    Created: {formatDateTime(item.created)}\n                                    </DataListCell>,\n                                    <DataListCell key={count++}>\n                    Started: {formatDateTime(item.started)}\n                                    </DataListCell>,\n                                    <DataListCell key={count++}>\n                    Finished: {formatDateTime(item.finished)}\n                                    </DataListCell>\n                                ]}\n                            />\n                        </DataListContent>\n                    </DataListItem>\n                );\n            })}\n        </>\n    );\n};\n\nconst AllJobsTemplate = ({ jobs }) => {\n    const [ windowWidth, setWindowWidth ] = useState(window.innerWidth);\n\n    const onResize = () => setWindowWidth(window.innerWidth);\n\n    useEffect(() => {\n        window.addEventListener('resize', onResize);\n        return () => window.removeEventListener('resize', onResize);\n    }, []);\n\n    return buildListRow(jobs, 'All jobs view', 'all-jobs', windowWidth);\n};\n\nconst JobExplorerList = ({ jobs }) => {\n    const [ windowWidth, setWindowWidth ] = useState(window.innerWidth);\n\n    const onResize = () => setWindowWidth(window.innerWidth);\n\n    useEffect(() => {\n        window.addEventListener('resize', onResize);\n        return () => window.removeEventListener('resize', onResize);\n    }, []);\n\n    return (\n        <>\n            {jobs.length <= 0 && <LoadingState />}\n            <DataList isCompact>\n                {windowWidth >= mobileBreakpoint && buildHeader(headerLabels)}\n                <AllJobsTemplate jobs={jobs} windowWidth={windowWidth} />\n            </DataList>\n        </>\n    );\n};\n\nJobExplorerList.propTypes = {\n    jobs: PropTypes.array,\n    windowWidth: PropTypes.number\n};\n\nAllJobsTemplate.propTypes = {\n    jobs: PropTypes.array,\n    windowWidth: PropTypes.number\n};\n\nexport default JobExplorerList;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { parse, stringify } from 'query-string';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { Paths } from '../../paths';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoResults from '../../Components/NoResults';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport {\n    preflightRequest,\n    readJobExplorer,\n    readJobExplorerOptions\n} from '../../Api';\nimport { jobExplorer } from '../../Utilities/constants';\n\nimport {\n    Main,\n    NotAuthorized,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n    Card,\n    CardBody,\n    Pagination,\n    PaginationVariant\n} from '@patternfly/react-core';\n\nimport JobExplorerList from '../../Components/JobExplorerList';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\nconst perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '15', value: 15 },\n    { title: '20', value: 20 },\n    { title: '25', value: 25 }\n];\n\nconst initialQueryParams = {\n    ...jobExplorer.defaultParams,\n    attributes: jobExplorer.attributes\n};\n\nconst optionsMapper = options => {\n    const { groupBy, attributes, ...rest } = options;\n    return rest;\n};\n\nconst JobExplorer = ({ location: { search }, history }) => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [\n        {\n            isLoading,\n            isSuccess,\n            error,\n            data: { meta = {}, items: data = []}\n        },\n        setData\n    ] = useApi({ meta: {}, items: []});\n    const [ currPage, setCurrPage ] = useState(1);\n    const [ options, setOptions ] = useApi({}, optionsMapper);\n\n    const {\n        queryParams,\n        setLimit,\n        setOffset,\n        setFromToolbar,\n        dispatch\n    } = useQueryParams(initialQueryParams);\n\n    const updateURL = () => {\n        const { jobExplorer } = Paths;\n        const search = stringify(queryParams, { arrayFormat: 'bracket' });\n        history.replace({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    useEffect(() => {\n        insights.chrome.appNavClick({ id: 'job-explorer', secondaryNav: true });\n\n        preflightRequest().catch(error => {\n            setPreFlightError({ preflightError: error });\n        });\n\n        const initialSearchParams = parse(search, {\n            arrayFormat: 'bracket',\n            parseBooleans: true\n        });\n\n        dispatch({ type: 'REINITIALIZE', value: {\n            ...initialQueryParams,\n            ...initialSearchParams\n        }});\n    }, []);\n\n    useEffect(() => {\n        setData(readJobExplorer({ params: queryParams }));\n        setOptions(readJobExplorerOptions({ params: queryParams }));\n        updateURL();\n    }, [ queryParams ]);\n\n    const returnOffsetVal = page => (page - 1) * queryParams.limit;\n\n    const handleSetPage = page => {\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    const handlePerPageSelect = (perPage, page) => {\n        setLimit(perPage);\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    if (preflightError?.preflightError?.status === 403) {\n        return <NotAuthorized { ...notAuthorizedParams } />;\n    }\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={'Job Explorer'} />\n            </PageHeader>\n\n            {preflightError && (\n                <Main>\n                    <EmptyState {...preflightError} />\n                </Main>\n            )}\n\n            {!preflightError && (\n                <Main>\n                    <Card>\n                        <CardBody>\n                            <FilterableToolbar\n                                categories={options.data}\n                                filters={queryParams}\n                                setFilters={setFromToolbar}\n                                pagination={\n                                    <Pagination\n                                        itemCount={meta && meta.count ? meta.count : 0}\n                                        widgetId=\"pagination-options-menu-top\"\n                                        perPageOptions={perPageOptions}\n                                        perPage={queryParams.limit}\n                                        page={currPage}\n                                        variant={PaginationVariant.top}\n                                        onPerPageSelect={(_event, perPage, page) => {\n                                            handlePerPageSelect(perPage, page);\n                                        }}\n                                        onSetPage={(_event, pageNumber) => {\n                                            handleSetPage(pageNumber);\n                                        }}\n                                        isCompact\n                                    />\n                                }\n                                hasSettings\n                            />\n                            {error && <ApiErrorState message={error.error} />}\n                            {isLoading && <LoadingState />}\n                            {isSuccess && data.length <= 0 && <NoResults />}\n                            {isSuccess && data.length > 0 && <JobExplorerList jobs={data} />}\n                            <Pagination\n                                itemCount={meta && meta.count ? meta.count : 0}\n                                widgetId=\"pagination-options-menu-bottom\"\n                                perPageOptions={perPageOptions}\n                                perPage={queryParams.limit}\n                                page={currPage}\n                                variant={PaginationVariant.bottom}\n                                onPerPageSelect={(_event, perPage, page) => {\n                                    handlePerPageSelect(perPage, page);\n                                }}\n                                onSetPage={(_event, pageNumber) => {\n                                    handleSetPage(pageNumber);\n                                }}\n                                style={{ marginTop: '20px' }}\n                            />\n                        </CardBody>\n                    </Card>\n                </Main>\n            )}\n        </React.Fragment>\n    );\n};\n\nJobExplorer.propTypes = {\n    location: PropTypes.object,\n    history: PropTypes.object\n};\n\nexport default JobExplorer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nimport {\n    NotificationDrawerList as PFNotificationDrawerList,\n    NotificationDrawerListItem as PFNotificationDrawerListItem,\n    NotificationDrawerListItemBody,\n    NotificationDrawerListItemHeader\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkAltIcon } from '@patternfly/react-icons';\nimport LoadingState from '../Components/LoadingState';\nimport { capitalize } from '../Utilities/helpers';\n\nconst ExternalLinkAltIcon = styled(PFExternalLinkAltIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n  font-size: 14px;\n`;\n\nconst NotificationDrawerListItem = styled(PFNotificationDrawerListItem)`\n  border-top: 1px solid var(--pf-global--BorderColor--light-100\n    );\n  border-bottom::nth-child(odd): 1px solid var(--pf-global--BorderColor--light-100\n    );\n  box-shadow: none;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst NotificationDrawerList = styled(PFNotificationDrawerList)`\n  &:last-child {\n    border-bottom: 1px solid var(--pf-global--BorderColor--light-100);\n  }\n`;\n\nconst stringifyDate = date => {\n    const day = moment(date);\n    const oneHour = 60 * 60 * 1000;\n    const now = moment().utc();\n\n    if (now.isAfter(day)) {\n        return `${now.diff(day, 'days')} day(s) ago.`;\n    }\n\n    if (day.isSame(now, 'day')) {\n        if (day.valueOf() > oneHour) {\n            return `${day.diff(now, 'hours')} hour(s) ago.`;\n        }\n\n        return `${now.diff(day, 'minutes')} minute(s) ago.`;\n    }\n};\n\nconst AllNotificationTemplate = ({ notifications }) =>\n    notifications.map(\n        ({ date, message, label, notification_id: id, tower_url: url }) => {\n            if (label === '' || label === 'notice') {\n                return (\n                    <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n                        <NotificationDrawerListItemHeader\n                            variant=\"info\"\n                            title={\n                                <>\n                                    {url ? (\n                                        <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                            {capitalize(label)}\n                                            <ExternalLinkAltIcon />\n                                        </a>\n                                    ) : (\n                                        capitalize(label)\n                                    )}\n                                </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody>\n                            {message}{' '}\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n\n            if (label === 'error') {\n                return (\n                    <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n                        <NotificationDrawerListItemHeader\n                            variant=\"danger\"\n                            title={\n                                <>\n                                    {url ? (\n                                        <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                            {capitalize(label)}\n                                            <ExternalLinkAltIcon />\n                                        </a>\n                                    ) : (\n                                        capitalize(label)\n                                    )}\n                                </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                            {message}{' '}\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n\n            if (label === 'warning') {\n                return (\n                    <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n                        <NotificationDrawerListItemHeader\n                            variant=\"warning\"\n                            title={\n                                <>\n                                    {url ? (\n                                        <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                            {capitalize(label)}\n                                            <ExternalLinkAltIcon />\n                                        </a>\n                                    ) : (\n                                        capitalize(label)\n                                    )}\n                                </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                            {message}{' '}\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n        }\n    );\n\nconst ErrorNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'error')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n                variant=\"danger\"\n                title={\n                    <>\n                        {url ? (\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                {capitalize(label)}\n                                <ExternalLinkAltIcon />\n                            </a>\n                        ) : (\n                            capitalize(label)\n                        )}\n                    </>\n                }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                {message}{' '}\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst NoticeNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'notice')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n                variant=\"info\"\n                title={\n                    <>\n                        {url ? (\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                {capitalize(label)}\n                                <ExternalLinkAltIcon />\n                            </a>\n                        ) : (\n                            capitalize(label)\n                        )}\n                    </>\n                }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                {message}{' '}\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst WarningNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'warning')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n                variant=\"warning\"\n                title={\n                    <>\n                        {url ? (\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                {capitalize(label)}\n                                <ExternalLinkAltIcon />\n                            </a>\n                        ) : (\n                            capitalize(label)\n                        )}\n                    </>\n                }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                {message}{' '}\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst NotificationsList = ({ filterBy, notifications }) => (\n    <>\n        <NotificationDrawerList>\n            {notifications.length <= 0 && <LoadingState />}\n            {filterBy === '' && (\n                <AllNotificationTemplate notifications={notifications} />\n            )}\n            {filterBy === 'notice' && (\n                <NoticeNotificationTemplate notifications={notifications} />\n            )}\n            {filterBy === 'error' && (\n                <ErrorNotificationTemplate notifications={notifications} />\n            )}\n            {filterBy === 'warning' && (\n                <WarningNotificationTemplate notifications={notifications} />\n            )}\n        </NotificationDrawerList>\n    </>\n);\n\nAllNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nErrorNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nWarningNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nNotificationsList.propTypes = {\n    notifications: PropTypes.array,\n    filterBy: PropTypes.string\n};\n\nexport default NotificationsList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoData from '../../Components/NoData';\nimport { preflightRequest, readClusters, readNotifications } from '../../Api';\n\nimport {\n    Main,\n    NotAuthorized,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle,\n    FormSelect,\n    FormSelectOption,\n    Pagination,\n    PaginationVariant,\n    NotificationDrawer\n} from '@patternfly/react-core';\n\nimport NotificationsList from '../../Components/NotificationsList';\n\nconst CardTitle = styled(PFCardTitle)`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n`;\n\nconst DropdownGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-end;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n\n  select {\n    margin: 0 10px;\n    width: 150px;\n\n    @media screen and (max-width: 1035px) {\n      margin: 10px 10px 0 0;\n    }\n\n    @media screen and (max-width: 865px) {\n      width: 100%;\n    }\n  }\n`;\n\nconst notificationOptions = [\n    {\n        value: 'please choose',\n        label: 'Select Notification Severity',\n        disabled: true\n    },\n    { value: 'error', label: 'View Critical', disabled: false },\n    { value: 'warning', label: 'View Warning', disabled: false },\n    { value: 'notice', label: 'View Notice', disabled: false },\n    { value: '', label: 'View All', disabled: false }\n];\n\nconst perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 }\n];\n\nfunction formatClusterName(data) {\n    const defaultClusterOptions = [\n        { value: 'please choose', label: 'Select cluster', disabled: true },\n        { value: '', label: 'All Clusters', disabled: false },\n        { value: -1, label: 'Unassociated', disabled: false }\n    ];\n    return data.reduce(\n        (formatted, { label, cluster_id: id, install_uuid: uuid }) => {\n            if (label.length === 0) {\n                formatted.push({ value: id, label: uuid, disabled: false });\n            } else {\n                formatted.push({ value: id, label, disabled: false });\n            }\n\n            return formatted;\n        },\n        defaultClusterOptions\n    );\n}\n\nconst initialQueryParams = {\n    limit: 5,\n    offset: 0\n};\n\nconst Notifications = () => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [ notificationsData, setNotificationsData ] = useState([]);\n    const [ clusterOptions, setClusterOptions ] = useState([]);\n    const [ selectedCluster, setSelectedCluster ] = useState('');\n    const [ firstRender, setFirstRender ] = useState(true);\n    const [ isLoading, setIsLoading ] = useState(true);\n    const [ meta, setMeta ] = useState({});\n    const [ currPage, setCurrPage ] = useState(1);\n    const {\n        queryParams,\n        setId,\n        setLimit,\n        setOffset,\n        setSeverity\n    } = useQueryParams(initialQueryParams);\n\n    useEffect(() => {\n        if (firstRender) {\n            return;\n        }\n\n        const getData = () => {\n            return readNotifications({ params: queryParams });\n        };\n\n        const update = () => {\n            setIsLoading(true);\n            getData().then(({ notifications: notificationsData = [], meta }) => {\n                setNotificationsData(notificationsData);\n                setMeta(meta);\n                setIsLoading(false);\n            });\n        };\n\n        update();\n    }, [ queryParams ]);\n\n    useEffect(() => {\n        insights.chrome.appNavClick({ id: 'notifications', secondaryNav: true });\n\n        let ignore = false;\n        const fetchEndpoints = () => {\n            return Promise.all(\n                [ readClusters(), readNotifications({ params: queryParams }) ].map(p =>\n                    p.catch(() => [])\n                )\n            );\n        };\n\n        async function initializeWithPreflight() {\n            setIsLoading(true);\n            await preflightRequest().catch(error => {\n                setPreFlightError({ preflightError: error });\n            });\n            fetchEndpoints().then(\n                ([\n                    { templates: clustersData = []},\n                    { notifications: notificationsData = [], meta }\n                ]) => {\n                    if (!ignore) {\n                        const clusterOptions = formatClusterName(clustersData);\n                        setClusterOptions(clusterOptions);\n                        setNotificationsData(notificationsData);\n                        setMeta(meta);\n                        setFirstRender(false);\n                        setIsLoading(false);\n                    }\n                }\n            );\n        }\n\n        initializeWithPreflight();\n        return () => (ignore = true);\n    }, []);\n\n    const returnOffsetVal = page => {\n        let offsetVal = (page - 1) * queryParams.limit;\n        return offsetVal;\n    };\n\n    const handleSetPage = page => {\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    const handlePerPageSelect = (perPage, page) => {\n        setLimit(perPage);\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    if (preflightError?.preflightError?.status === 403) {\n        return <NotAuthorized { ...notAuthorizedParams } />;\n    }\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={'Notifications'} />\n            </PageHeader>\n            {preflightError && (\n                <Main>\n                    <EmptyState {...preflightError} />\n                </Main>\n            )}\n            {!preflightError && (\n                <>\n                    <Main>\n                        <Card>\n                            <CardTitle>\n                                <DropdownGroup>\n                                    <FormSelect\n                                        name=\"selectedCluster\"\n                                        value={selectedCluster}\n                                        onChange={value => {\n                                            setSelectedCluster(value);\n                                            setId(value);\n                                            setOffset(0);\n                                            setCurrPage(1);\n                                        }}\n                                        aria-label=\"Select Cluster\"\n                                    >\n                                        {clusterOptions.map(({ value, label, disabled }, index) => (\n                                            <FormSelectOption\n                                                isDisabled={disabled}\n                                                key={index}\n                                                value={value}\n                                                label={label}\n                                            />\n                                        ))}\n                                    </FormSelect>\n                                    <FormSelect\n                                        name=\"selectedNotification\"\n                                        value={queryParams.severity || ''}\n                                        onChange={value => {\n                                            setSeverity(value);\n                                            setOffset(0);\n                                            setCurrPage(1);\n                                        }}\n                                        aria-label=\"Select Notification Type\"\n                                    >\n                                        {notificationOptions.map(\n                                            ({ disabled, value, label }, index) => (\n                                                <FormSelectOption\n                                                    isDisabled={disabled}\n                                                    key={index}\n                                                    value={value}\n                                                    label={label}\n                                                />\n                                            )\n                                        )}\n                                    </FormSelect>\n                                </DropdownGroup>\n                                <Pagination\n                                    itemCount={meta && meta.count ? meta.count : 0}\n                                    widgetId=\"pagination-options-menu-top\"\n                                    perPageOptions={perPageOptions}\n                                    perPage={queryParams.limit}\n                                    page={currPage}\n                                    variant={PaginationVariant.top}\n                                    onPerPageSelect={(_event, perPage, page) => {\n                                        handlePerPageSelect(perPage, page);\n                                    }}\n                                    onSetPage={(_event, pageNumber) => {\n                                        handleSetPage(pageNumber);\n                                    }}\n                                    isCompact\n                                />\n                            </CardTitle>\n                            <CardBody>\n                                {isLoading && <LoadingState />}\n                                {!isLoading && notificationsData.length <= 0 && <NoData />}\n                                {!isLoading && notificationsData.length > 0 && (\n                                    <NotificationDrawer>\n                                        <NotificationsList\n                                            filterBy={queryParams.severity || ''}\n                                            options={notificationOptions}\n                                            notifications={notificationsData}\n                                        />\n                                    </NotificationDrawer>\n                                )}\n                                <Pagination\n                                    itemCount={meta && meta.count ? meta.count : 0}\n                                    widgetId=\"pagination-options-menu-bottom\"\n                                    perPageOptions={perPageOptions}\n                                    perPage={queryParams.limit}\n                                    page={currPage}\n                                    variant={PaginationVariant.bottom}\n                                    onPerPageSelect={(_event, perPage, page) => {\n                                        handlePerPageSelect(perPage, page);\n                                    }}\n                                    onSetPage={(_event, pageNumber) => {\n                                        handleSetPage(pageNumber);\n                                    }}\n                                    style={{ marginTop: '20px' }}\n                                />\n                            </CardBody>\n                        </Card>\n                    </Main>\n                </>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default Notifications;\n","import moment from 'moment';\n\n/*\n * isNumeric - return true if input is a real number\n */\nexport function isNumeric(val) {\n    if (val === 0 || val === '0') {\n        return true;\n    }\n\n    if (parseInt(val)) {\n        return true;\n    }\n\n    if (parseFloat(val)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function trimStr(str) {\n    return str.toString().replace(/['\"]+/g, '');\n}\n\nexport function formatDateTime(dateTime) {\n    return moment(new Date(dateTime).toISOString()).format('M/D/YYYY h:mm:ssa');\n}\n\nexport function formatDate(date) {\n    return moment(date).format('YYYY-MM-DD');\n}\n\nexport function formatSeconds(seconds) {\n    return moment()\n    .startOf('day')\n    .seconds(seconds)\n    .format('H:mm:ss');\n}\n\nexport function getTotal(data) {\n    if (!data) {\n        return;\n    } else {\n        let total = 0;\n        data.forEach(datum => {\n            total += parseInt(datum.count);\n        });\n        return total;\n    }\n}\n\nexport function formatPercentage(val) {\n    if (isNaN(val)) {\n        return;\n    }\n\n    return `${val}%`;\n}\n\nexport const capitalize = s => {\n    if (typeof s !== 'string') {\n        return '';\n    }\n\n    return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport function calculateDelta(a, b) {\n    if (!isNumeric(a) || !isNumeric(b)) {\n        return 0;\n    }\n\n    // never return less than zero ...\n    if (b - a < 0) {\n        return 0;\n    }\n\n    return b - a;\n}\n\nexport function convertMinsToMs(mins) {\n    if (!parseInt(mins)) {\n        return 0;\n    }\n\n    return mins * 60000;\n}\n\nexport function convertMsToMins(ms) {\n    if (!parseInt(ms)) {\n        return 0;\n    }\n\n    return ms / 60000;\n}\n\nexport function convertSecondsToMins(seconds) {\n    if (!parseInt(seconds)) {\n        return 0;\n    }\n\n    return seconds / 60;\n}\n\nexport function convertMinsToSeconds(mins) {\n    if (!parseInt(mins) || parseInt(mins) < 0) {\n        return 0;\n    }\n\n    return +parseInt(mins) * 60;\n}\n\nexport function convertSecondsToHours(seconds) {\n    if (!parseInt(seconds)) {\n        return 0;\n    }\n\n    return seconds / 3600;\n}\n\nexport function convertWithCommas(arr, key) {\n    const split = arr.reduce((strs, datum) => {\n        strs.push(datum[key]);\n        return strs;\n    }, []);\n    return split.join(', ');\n}\n\nexport function formatJobType(type) {\n    return type === 'job' ? 'Playbook run' : 'Workflow job';\n}\n\nexport function formatJobStatus(status) {\n    return status === 'successful' ? 'Success' : 'Failed';\n}\n\nexport function formatJobDetailsURL(baseURL, jobId) {\n    const subDirectory1 = 'job';\n    const subDirectory2 = 'details';\n    return `${baseURL}/#/${subDirectory1}/${jobId}/${subDirectory2}/`;\n}\n"],"sourceRoot":""}