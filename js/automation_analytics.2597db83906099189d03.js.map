{"version":3,"sources":["webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/Components/NoResults.js","webpack:///./src/Components/ApiErrorState.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Components/JobStatus.js","webpack:///./src/Components/JobExplorerList.js","webpack:///./src/Components/Toolbar.js","webpack:///./src/Containers/JobExplorer/JobExplorer.js","webpack:///./src/Utilities/Tooltip.js","webpack:///./src/Charts/BarChart.js","webpack:///./src/Charts/LineChart.js","webpack:///./src/Components/ModulesList.js","webpack:///./src/Components/TemplatesList.js","webpack:///./src/Containers/Clusters/Clusters.js","webpack:///./src/Utilities/Legend.js","webpack:///./src/Utilities/colors.js","webpack:///./src/Charts/GroupedBarChart.js","webpack:///./src/Charts/PieChart.js","webpack:///./src/Containers/OrganizationStatistics/OrganizationStatistics.js","webpack:///./src/Charts/ROITopTemplates.js","webpack:///./src/Containers/AutomationCalculator/AutomationCalculator.js","webpack:///./src/Components/NotificationsList.js","webpack:///./src/Containers/Notifications/Notifications.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Components/LoadingState.js","webpack:///./src/Utilities/formatQueryStrings.js","webpack:///./src/Api.js","webpack:///./src/Utilities/useQueryParams.js","webpack:///./src/Components/EmptyState.js","webpack:///./src/Charts/BaseChart.js","webpack:///./src/Components/NoData.js"],"names":["map","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","Components_NoResults","react_default","a","createElement","EmptyState_EmptyState","variant","full","EmptyStateIcon","icon","search_icon_default","Title","size","headingLevel","EmptyStateBody","ApiErrorState_ApiErrorState","_ref","message","small","exclamation_circle_icon_default","color","global_danger_color_200","value","propTypes","prop_types_default","string","Components_ApiErrorState","constants_jobExplorer","attributes","defaultParams","status","job_type","quick_date_range","limit","only_root_workflows_and_standalone_jobs","sort_by","toolbarCategories","name","JobStatus_JobStatus","Label","getColor","check_circle_icon_default","sync_alt_icon_default","exclamation_triangle_icon_default","clock_icon_default","getIcon","str","charAt","toUpperCase","slice","capitalized","oneOf","Components_JobStatus","headerLabels","ExternalLinkIcon","styled_components_browser_esm","external_link_alt_icon_default","_templateObject","JobExplorerList_DataListCell","DataListCell","_templateObject2","JobExplorerList_DataListItemCells","DataListItemCells","_templateObject3","JobExplorerList_DataListItemRow","DataListItemRow","_templateObject4","JobExplorerList_buildListRow","items","ariaLabel","ariaLabelledBy","windowWidth","_useState","react","_useState2","slicedToArray_default","isExpanded","setIsExpanded","DataList","aria-label","isCompact","item","count","DataListItem","key","aria-labelledby","includes","concat","DataListToggle","aria-controls","onClick","expanded","idx","indexOf","newExpanded","toConsumableArray_default","length","toggle","dataListCells","href","tower_link","target","rel","style","fontWeight","template_name","Tooltip","content","cluster_name","org_name","helpers","DataListContent","isHidden","created","started","finished","JobExplorerList_AllJobsTemplate","jobs","_useState3","window","innerWidth","_useState4","setWindowWidth","onResize","addEventListener","removeEventListener","JobExplorerList_JobExplorerList","_ref2","_useState5","_useState6","Fragment","LoadingState","labels","paddingLeft","label","JobExplorerList_buildHeader","array","number","Components_JobExplorerList","Toolbar_ToolbarGroup","ToolbarGroup","Toolbar_templateObject","Toolbar_ToolbarContent","ToolbarContent","Toolbar_templateObject2","Toolbar_Switch","Switch","Toolbar_templateObject3","Toolbar_Select","Select","Toolbar_templateObject4","handleChips","comparator","reduce","acc","i","Number","isInteger","parseInt","forEach","cmpItem","push","handleDateChips","date","val","undefined","Toolbar_FilterableToolbar","orgs","statuses","types","clusters","templates","sortables","dateRanges","onDelete","passedFilters","handleFilters","statusIsExpanded","setStatusIsExpanded","dateRangeIsExpanded","setDateRangeIsExpanded","jobTypeIsExpanded","setJobTypeIsExpanded","_useState7","_useState8","orgIsExpanded","setOrgIsExpanded","_useState9","_useState10","isCategoryExpanded","setIsCategoryExpanded","_useState11","_useState12","clusterIsExpanded","setClusterIsExpanded","_useState13","_useState14","templateIsExpanded","setTemplateIsExpanded","_useState15","_useState16","sortByIsExpanded","setSortByIsExpanded","_useState17","_useState18","currentCategory","setCurrentCategory","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarToggleGroup","toggleIcon","filter_icon_default","breakpoint","categories","ToolbarItem","Dropdown","onSelect","innerText","position","DropdownToggle","onToggle","width","isOpen","dropdownItems","category","DropdownItem","buildCategoryDropdown","organizationIdMenuItems","SelectOption","statusMenuItems","_ref3","jobTypeMenuItems","_ref4","clusterIdMenuItems","_ref5","templateIdMenuItems","_ref6","sortByMenuItems","Array","isArray","_ref7","dateRangeMenuItems","_ref8","type","event","selection","checked","objectSpread_default","defineProperty_default","filter","ToolbarFilter","showToolbarItem","chips","categoryName","deleteChip","selections","placeholderText","_event","onDateSelect","org","cluster","template","sortby","onSortSelect","buildFilterDropdown","InputGroup","InputGroupText","component","htmlFor","calendar_alt_icon_default","TextInput","startDate","onChange","handleStartDate","endDate","handleEndDate","labelOff","isChecked","showRootWorkflows","top","question_circle_icon_default","func","object","Components_Toolbar","JobExplorer_CardHeader","CardHeader","JobExplorer_templateObject","CompactPagination","Pagination","JobExplorer_templateObject2","JobExplorer_Pagination","JobExplorer_templateObject3","perPageOptions","title","initialQueryParams","initialOptionsParams","JobExplorer_JobExplorer","props","preflightError","setPreFlightError","apiError","setApiError","jobExplorerData","setJobExplorerData","firstRender","setFirstRender","isLoading","setIsLoading","meta","setMeta","currPage","setCurrPage","orgIds","setOrgIds","clusterIds","setClusterIds","_useState19","_useState20","templateIds","setTemplateIds","_useState21","_useState22","sortBy","setSortBy","_useState23","_useState24","setStatuses","_useState25","_useState26","jobTypes","setJobTypes","_useState27","_useState28","quickDateRanges","setQuickDateRanges","initialSearchParams","parse","formatQueryStrings","location","search","arrayFormat","combined","_useQueryParams","useQueryParams","queryParams","setLimit","setOffset","setJobType","setOrg","setStatus","setCluster","setTemplate","setSortBy2","setQuickDateRange","setRootWorkflowsAndJobs","setStart_Date","setEnd_Date","optionsQueryParams","formattedArray","datum","split","_useState29","org_id","cluster_id","template_id","start_date","end_date","_useState30","filters","setFilters","updateURL","jobExplorer","paths","_formatQueryStrings2","strings","stringify","history","pathname","insights","chrome","appNavClick","secondaryNav","asyncToGenerator_default","regenerator_default","mark","_callee","wrap","_context","prev","next","auth","getUser","Promise","all","Api","params","then","_ref3$","_ref3$$items","catch","error","finally","stop","apply","this","arguments","update","ignore","fetchEndpoints","p","_initializeWithPreflight","_callee2","_context2","_ref5$","_ref5$$items","_ref5$2","initializeWithPreflight","returnOffsetVal","page","fontSize","margin","handleSetPage","nextOffset","handlePerPageSelect","perPage","PageHeader","Main","EmptyState","Card","CardBody","filtered","job","toLowerCase","toString","itemCount","widgetId","bottom","dropDirection","onPerPageSelect","onSetPage","pageNumber","marginTop","__webpack_exports__","Utilities_Tooltip","opts","_this","classCallCheck_default","d","success","fail","total","x","d3","pageX","svg","node","getBoundingClientRect","y","pageY","formatTooltipDate","toolTipWidth","toolTipBase","chartWidth","flipped","RAN","FAIL","TOTAL","text","DATE","data","jobsWidth","getComputedTextLength","failed","successful","successTextWidth","failTextWidth","adjustedWidth","maxTextPerc","boxWidth","overage","boundingBox","attr","toolTipPoint","circleGreen","circleRed","successText","failText","clickMore","interrupt","transition","delay","colors","draw","append","textWidthThreshold","BarChart_BarChart","BarChart","possibleConstructorReturn_default","getPrototypeOf_default","call","bind","assertThisInitialized_default","init","resize","redirectToJobExplorer","state","formattedData","timeout","formattedDate","_formatQueryStrings","_this2","clearTimeout","setState","setTimeout","remove","ticks","parseTime","_this$props","unformattedData","formatted","Date","getWidth","height","getHeight","rangeRound","padding","range","left","right","barTooltip","layers","order","offset","stack","domain","tickSize","selectAll","maxTicks","Math","round","tickValues","tickFormat","layer","enter","_d","bandwidth","duration","ease","on","handleMouseOver","handleMouseOut","prevProps","Charts_BarChart","BaseChart","withRouter","LineChart_LineChart","LineChart","updateCluster","clusterId","path","attrTween","tweenDash","l","getTotalLength","t","tooltip","successLine","curve","failLine","defined","isNaN","vertical","handleMouseMove","intersectX","cx","baseVal","Charts_LineChart","ModulesList_DataListCell","ModulesList_DataListItem","DataCellEnd","ModulesList_ModulesList","modules","maxHeight","overflow","background","border","NoData","index","Badge","isRead","bool","Components_ModulesList","TemplatesList_success","circle_icon_default","marginRight","TemplatesList_fail","TemplatesList_DataListCell","TemplatesList_templateObject","PFDataListItemNoBorder","TemplatesList_templateObject2","TemplatesList_DataListItem","TemplatesList_templateObject3","DataListItemCompact","DataListCellCompact","_templateObject5","DataListFocus","div","_templateObject6","TemplatesList_DataCellEnd","_templateObject7","DataCellEndCompact","_templateObject8","TemplatesList_TemplatesList","isModalOpen","setIsModalOpen","selectedId","setSelectedId","selectedTemplate","setSelectedTemplate","relatedJobs","setRelatedJobs","related_jobs","Modal","onClose","actions","Button","total_run_count","total_run","average_run","success_rate","most_failed_tasks","percentage","fail_rate","task_name","TemplatesList_formatTopFailedTask","job_id","job_name","cluster_label","install_uuid","start_time","total_time","Components_TemplatesList","Clusters_CardTitle","CardTitle","Clusters_templateObject","timeFrameOptions","disabled","Clusters_initialQueryParams","moment_default","subtract","format","barChartData","setBarChartData","lineChartData","setLineChartData","templatesData","setTemplatesData","modulesData","setModulesData","clusterOptions","setClusterOptions","clusterTimeFrame","setClusterTimeFrame","selectedCluster","setSelectedCluster","setEndDate","setStartDate","setId","_ref3$templates","uuid","formatClusterName","_ref5$0$data","chartData","_ref5$1$modules","_ref5$2$templates","paddingBottom","paddingTop","display","justifyContent","FormSelect","FormSelectOption","isDisabled","option","className","Container","LegendDetail","Wrapper","Color","attrs","span","SubTitle","Legend_Switch","Legend_Legend","Legend","handleChange","_isChecked","parseFloat","selected","some","Utilities_Legend","pfmulti","GroupedBarChart_Wrapper","GroupedBarChart_templateObject","GroupedBarChart_color","GroupedBarChart_Tooltip","orgName","GroupedBarChart_GroupedBarChart","GroupedBarChart","handleToggle","orgsList","_this3","s","_this4","timeFrame","selectedOrgs","x0","x1","xAxis","yAxis","dates","selectedOrgNames","exit","bars","merge","subEnter","darker","_this$state","isAccessible","Charts_GroupedBarChart","PieChart_Wrapper","PieChart_templateObject","PieChart_Tooltip","perc","percSuccess","drawn","percent","maxLength","percentageTotal","percentageSuccess","boundingBOx","showSuccess","boundingHeight","boundingWidth","PieChart_PieChart","PieChart","sort","b","radius","min","donutTooltip","pie","arc","outerRadius","innerRadius","classed","Charts_PieChart","OrganizationStatistics_CardTitle","OrganizationStatistics_templateObject","CardContainer","OrganizationStatistics_templateObject2","TopCard","OrganizationStatistics_templateObject3","sortOptions","OrganizationStatistics_initialQueryParams","pieChart1Data","setPieChart1Data","pieChart2Data","setPieChart2Data","groupedBarChartData","setGroupedBarChartData","timeframe","setTimeframe","sortOrder","setSortOrder","_ref3$0$dates","_ref3$1$usages","usages","_ref3$2$usages","_ref5$0$dates","_ref5$1$usages","_ref5$2$usages","setLimitValue","marginLeft","ROITopTemplates_Tooltip","savings","manualCost","automationCost","scrollLeftOffset","scrollLeft","formatDollars","delta","calculations","cost","nameWidth","savingsWidth","manualCostWidth","automationCostWidth","widestTextElem","amount","toFixed","replace","ROITopTemplates_TopTemplatesSavings","TopTemplatesSavings","unfiltered","row","formatYAxisValue","taskNames","ROITopTemplates","FilterCardTitle","defaultAvgRunVal","defaultCostAutomation","defaultCostManual","InputAndText","TemplateDetail","TemplateDetailSubTitle","em","TooltipWrapper","IconGroup","WrapperLeft","WrapperRight","_templateObject9","pastYear","pastYTD","startOf","pastQuarter","pastMonth","AutomationCalculator_initialQueryParams","formatData","response","defaults","successful_run_count","successful_elapsed_sum","successful_host_run_count_avg","successful_host_run_count","elapsed_sum","failed_elapsed_sum","template_automation_percentage","run_count","host_count","isActive","avg_run","AutomationCalculator_updateData","seconds","updatedData","AutomationCalculator_handleManualTimeChange","minutes","AutomationCalculator_formatSelectedIds","arr","AutomationCalculator_handleToggle","currentSelection","AutomationCalculator_computeTotalSavings","costAutomation","costManual","costAutomationPerHour","costManualPerHour","floatToStringWithCommas","filterDataBySelectedIds","unfilteredData","selectedIds","setTemplatesIsActive","templatesList","setCostManual","setCostAutomation","totalSavings","setTotalSavings","setUnfilteredData","setFormattedData","setTemplatesList","setSelectedIds","roiTimeFrame","setRoiTimeFrame","setStartDateAsString","totalWithCommas","filteredData","getData","_ref4$templates","flex","textAlign","dollar_sign_icon_default","step","flexDirection","Tooltip_Tooltip","templateId","updated","entryDelay","exitDelay","info_circle_icon_default","toggle_on_icon_default","toggle_off_icon_default","ArrowIcon","arrow_icon_default","NotificationsList_AllNotificationTemplate","notifications","notification_id","url","tower_url","Alert","default","isInline","danger","warning","NotificationsList_ErrorNotificationTemplate","notification","NotificationsList_NoticeNotificationTemplate","NotificationsList_WarningNotificationTemplate","NotificationsList_NotificationsList","_ref9","filterBy","AlertGroup","Components_NotificationsList","Notifications_CardTitle","Notifications_templateObject","TitleWithBadge","DropdownGroup","notificationOptions","notificationsData","setNotificationsData","setSeverity","_ref3$notifications","_ref5$0$templates","clustersData","_ref5$$notifications","severity","options","trimStr","formatDateTime","formatDate","formatSeconds","getTotal","formatPercentage","capitalize","calculateDelta","convertSecondsToMins","convertMinsToSeconds","convertSecondsToHours","convertWithCommas","formatJobType","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","n","isNumeric","dateTime","toISOString","mins","strs","join","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_patternfly_react_core_dist_js_components_Title_Title_js__WEBPACK_IMPORTED_MODULE_1__","_patternfly_react_core_dist_js_components_EmptyState_EmptyState_js__WEBPACK_IMPORTED_MODULE_2__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateIcon_js__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateBody_js__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_5__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_5___default","query_string__WEBPACK_IMPORTED_MODULE_0__","parseAttrs","encodeURIComponent","parseStatuses","parseJobType","jobType","parseOrganization","orgId","parseCluster","parseTemplate","parseSortBy","parseStartDate","parseEndDate","parseLimit","parseOffset","parseRootWorkflowsAndJobs","parseQuickDateRange","quickDate","readTemplateJobs","preflightRequest","readClusters","readChart30","readJobsByDateAndOrg","readModules","readTemplates","readNotifications","readJobExplorerOptions","readJobExplorer","readJobRunsByOrg","readJobEventsByOrg","readROI","_Utilities_formatQueryStrings__WEBPACK_IMPORTED_MODULE_0__","barChartEndpoint","clustersEndpoint","groupedBarChartEndpoint","modulesEndpoint","notificationsEndPoint","pieChart1Endpoint","pieChart2Endpoint","preflightEndpoint","templateJobsEndpoint","templatesEndPoint","roiEndpoint","getAbsoluteUrl","pop","handleResponse","json","ok","reject","_ref$params","formattedUrl","URL","searchParams","fetch","_ref2$params","_ref3$params","_ref4$params","_ref5$params","_ref6$params","_ref7$params","method","body","JSON","_ref8$params","paginationParams","qs","_ref9$params","_ref10","_ref10$params","_ref11","_ref11$params","initial","_useReducer","react__WEBPACK_IMPORTED_MODULE_4__","action","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_1___default","_Utilities_helpers__WEBPACK_IMPORTED_MODULE_6__","_useReducer2","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default","dispatch","moment__WEBPACK_IMPORTED_MODULE_5___default","days","setAttributes","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_patternfly_react_core_dist_js_components_Button_Button_js__WEBPACK_IMPORTED_MODULE_2__","_patternfly_react_core_dist_js_components_Title_Title_js__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_core_dist_js_components_EmptyState_EmptyState_js__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateIcon_js__WEBPACK_IMPORTED_MODULE_5__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateBody_js__WEBPACK_IMPORTED_MODULE_6__","_patternfly_react_icons_dist_js_icons_wrench_icon__WEBPACK_IMPORTED_MODULE_7__","_patternfly_react_icons_dist_js_icons_wrench_icon__WEBPACK_IMPORTED_MODULE_7___default","DefaultEmptyState","reload","initializeChart","Chart","react__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","d3__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_2___default","element","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_4___default"],"mappings":"6EAAA,IAAAA,GACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAAA,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","file":"js/automation_analytics.2597db83906099189d03.js","sourcesContent":["var map = {\n\t\"./af\": 154,\n\t\"./af.js\": 154,\n\t\"./ar\": 155,\n\t\"./ar-dz\": 156,\n\t\"./ar-dz.js\": 156,\n\t\"./ar-kw\": 157,\n\t\"./ar-kw.js\": 157,\n\t\"./ar-ly\": 158,\n\t\"./ar-ly.js\": 158,\n\t\"./ar-ma\": 159,\n\t\"./ar-ma.js\": 159,\n\t\"./ar-sa\": 160,\n\t\"./ar-sa.js\": 160,\n\t\"./ar-tn\": 161,\n\t\"./ar-tn.js\": 161,\n\t\"./ar.js\": 155,\n\t\"./az\": 162,\n\t\"./az.js\": 162,\n\t\"./be\": 163,\n\t\"./be.js\": 163,\n\t\"./bg\": 164,\n\t\"./bg.js\": 164,\n\t\"./bm\": 165,\n\t\"./bm.js\": 165,\n\t\"./bn\": 166,\n\t\"./bn.js\": 166,\n\t\"./bo\": 167,\n\t\"./bo.js\": 167,\n\t\"./br\": 168,\n\t\"./br.js\": 168,\n\t\"./bs\": 169,\n\t\"./bs.js\": 169,\n\t\"./ca\": 170,\n\t\"./ca.js\": 170,\n\t\"./cs\": 171,\n\t\"./cs.js\": 171,\n\t\"./cv\": 172,\n\t\"./cv.js\": 172,\n\t\"./cy\": 173,\n\t\"./cy.js\": 173,\n\t\"./da\": 174,\n\t\"./da.js\": 174,\n\t\"./de\": 175,\n\t\"./de-at\": 176,\n\t\"./de-at.js\": 176,\n\t\"./de-ch\": 177,\n\t\"./de-ch.js\": 177,\n\t\"./de.js\": 175,\n\t\"./dv\": 178,\n\t\"./dv.js\": 178,\n\t\"./el\": 179,\n\t\"./el.js\": 179,\n\t\"./en-SG\": 180,\n\t\"./en-SG.js\": 180,\n\t\"./en-au\": 181,\n\t\"./en-au.js\": 181,\n\t\"./en-ca\": 182,\n\t\"./en-ca.js\": 182,\n\t\"./en-gb\": 183,\n\t\"./en-gb.js\": 183,\n\t\"./en-ie\": 184,\n\t\"./en-ie.js\": 184,\n\t\"./en-il\": 185,\n\t\"./en-il.js\": 185,\n\t\"./en-nz\": 186,\n\t\"./en-nz.js\": 186,\n\t\"./eo\": 187,\n\t\"./eo.js\": 187,\n\t\"./es\": 188,\n\t\"./es-do\": 189,\n\t\"./es-do.js\": 189,\n\t\"./es-us\": 190,\n\t\"./es-us.js\": 190,\n\t\"./es.js\": 188,\n\t\"./et\": 191,\n\t\"./et.js\": 191,\n\t\"./eu\": 192,\n\t\"./eu.js\": 192,\n\t\"./fa\": 193,\n\t\"./fa.js\": 193,\n\t\"./fi\": 194,\n\t\"./fi.js\": 194,\n\t\"./fo\": 195,\n\t\"./fo.js\": 195,\n\t\"./fr\": 196,\n\t\"./fr-ca\": 197,\n\t\"./fr-ca.js\": 197,\n\t\"./fr-ch\": 198,\n\t\"./fr-ch.js\": 198,\n\t\"./fr.js\": 196,\n\t\"./fy\": 199,\n\t\"./fy.js\": 199,\n\t\"./ga\": 200,\n\t\"./ga.js\": 200,\n\t\"./gd\": 201,\n\t\"./gd.js\": 201,\n\t\"./gl\": 202,\n\t\"./gl.js\": 202,\n\t\"./gom-latn\": 203,\n\t\"./gom-latn.js\": 203,\n\t\"./gu\": 204,\n\t\"./gu.js\": 204,\n\t\"./he\": 205,\n\t\"./he.js\": 205,\n\t\"./hi\": 206,\n\t\"./hi.js\": 206,\n\t\"./hr\": 207,\n\t\"./hr.js\": 207,\n\t\"./hu\": 208,\n\t\"./hu.js\": 208,\n\t\"./hy-am\": 209,\n\t\"./hy-am.js\": 209,\n\t\"./id\": 210,\n\t\"./id.js\": 210,\n\t\"./is\": 211,\n\t\"./is.js\": 211,\n\t\"./it\": 212,\n\t\"./it-ch\": 213,\n\t\"./it-ch.js\": 213,\n\t\"./it.js\": 212,\n\t\"./ja\": 214,\n\t\"./ja.js\": 214,\n\t\"./jv\": 215,\n\t\"./jv.js\": 215,\n\t\"./ka\": 216,\n\t\"./ka.js\": 216,\n\t\"./kk\": 217,\n\t\"./kk.js\": 217,\n\t\"./km\": 218,\n\t\"./km.js\": 218,\n\t\"./kn\": 219,\n\t\"./kn.js\": 219,\n\t\"./ko\": 220,\n\t\"./ko.js\": 220,\n\t\"./ku\": 221,\n\t\"./ku.js\": 221,\n\t\"./ky\": 222,\n\t\"./ky.js\": 222,\n\t\"./lb\": 223,\n\t\"./lb.js\": 223,\n\t\"./lo\": 224,\n\t\"./lo.js\": 224,\n\t\"./lt\": 225,\n\t\"./lt.js\": 225,\n\t\"./lv\": 226,\n\t\"./lv.js\": 226,\n\t\"./me\": 227,\n\t\"./me.js\": 227,\n\t\"./mi\": 228,\n\t\"./mi.js\": 228,\n\t\"./mk\": 229,\n\t\"./mk.js\": 229,\n\t\"./ml\": 230,\n\t\"./ml.js\": 230,\n\t\"./mn\": 231,\n\t\"./mn.js\": 231,\n\t\"./mr\": 232,\n\t\"./mr.js\": 232,\n\t\"./ms\": 233,\n\t\"./ms-my\": 234,\n\t\"./ms-my.js\": 234,\n\t\"./ms.js\": 233,\n\t\"./mt\": 235,\n\t\"./mt.js\": 235,\n\t\"./my\": 236,\n\t\"./my.js\": 236,\n\t\"./nb\": 237,\n\t\"./nb.js\": 237,\n\t\"./ne\": 238,\n\t\"./ne.js\": 238,\n\t\"./nl\": 239,\n\t\"./nl-be\": 240,\n\t\"./nl-be.js\": 240,\n\t\"./nl.js\": 239,\n\t\"./nn\": 241,\n\t\"./nn.js\": 241,\n\t\"./pa-in\": 242,\n\t\"./pa-in.js\": 242,\n\t\"./pl\": 243,\n\t\"./pl.js\": 243,\n\t\"./pt\": 244,\n\t\"./pt-br\": 245,\n\t\"./pt-br.js\": 245,\n\t\"./pt.js\": 244,\n\t\"./ro\": 246,\n\t\"./ro.js\": 246,\n\t\"./ru\": 247,\n\t\"./ru.js\": 247,\n\t\"./sd\": 248,\n\t\"./sd.js\": 248,\n\t\"./se\": 249,\n\t\"./se.js\": 249,\n\t\"./si\": 250,\n\t\"./si.js\": 250,\n\t\"./sk\": 251,\n\t\"./sk.js\": 251,\n\t\"./sl\": 252,\n\t\"./sl.js\": 252,\n\t\"./sq\": 253,\n\t\"./sq.js\": 253,\n\t\"./sr\": 254,\n\t\"./sr-cyrl\": 255,\n\t\"./sr-cyrl.js\": 255,\n\t\"./sr.js\": 254,\n\t\"./ss\": 256,\n\t\"./ss.js\": 256,\n\t\"./sv\": 257,\n\t\"./sv.js\": 257,\n\t\"./sw\": 258,\n\t\"./sw.js\": 258,\n\t\"./ta\": 259,\n\t\"./ta.js\": 259,\n\t\"./te\": 260,\n\t\"./te.js\": 260,\n\t\"./tet\": 261,\n\t\"./tet.js\": 261,\n\t\"./tg\": 262,\n\t\"./tg.js\": 262,\n\t\"./th\": 263,\n\t\"./th.js\": 263,\n\t\"./tl-ph\": 264,\n\t\"./tl-ph.js\": 264,\n\t\"./tlh\": 265,\n\t\"./tlh.js\": 265,\n\t\"./tr\": 266,\n\t\"./tr.js\": 266,\n\t\"./tzl\": 267,\n\t\"./tzl.js\": 267,\n\t\"./tzm\": 268,\n\t\"./tzm-latn\": 269,\n\t\"./tzm-latn.js\": 269,\n\t\"./tzm.js\": 268,\n\t\"./ug-cn\": 270,\n\t\"./ug-cn.js\": 270,\n\t\"./uk\": 271,\n\t\"./uk.js\": 271,\n\t\"./ur\": 272,\n\t\"./ur.js\": 272,\n\t\"./uz\": 273,\n\t\"./uz-latn\": 274,\n\t\"./uz-latn.js\": 274,\n\t\"./uz.js\": 273,\n\t\"./vi\": 275,\n\t\"./vi.js\": 275,\n\t\"./x-pseudo\": 276,\n\t\"./x-pseudo.js\": 276,\n\t\"./yo\": 277,\n\t\"./yo.js\": 277,\n\t\"./zh-cn\": 278,\n\t\"./zh-cn.js\": 278,\n\t\"./zh-hk\": 279,\n\t\"./zh-hk.js\": 279,\n\t\"./zh-tw\": 280,\n\t\"./zh-tw.js\": 280\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 315;","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst NoResults = () => {\n    return (\n        <EmptyState variant={ EmptyStateVariant.full }>\n            <EmptyStateIcon icon={ SearchIcon } />\n            <Title size=\"lg\" headingLevel=\"h4\">\n                No results found\n            </Title>\n            <EmptyStateBody>\n                No results match the filter criteria. Remove all filters or clear all filters to show results.\n            </EmptyStateBody>\n        </EmptyState>\n    );\n};\n\nexport default NoResults;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateIcon,\n    EmptyStateVariant,\n    Title\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { global_danger_color_200 as globalDangerColor200 } from '@patternfly/react-tokens';\n\nconst ApiErrorState = ({ message }) => (\n    <EmptyState variant={ EmptyStateVariant.small }>\n        <EmptyStateIcon icon={ ExclamationCircleIcon } color={ globalDangerColor200.value } />\n        <Title headingLevel=\"h2\" size=\"lg\">Error</Title>\n        <EmptyStateBody>\n            { message }\n        </EmptyStateBody>\n    </EmptyState>\n);\n\nApiErrorState.propTypes = {\n    message: PropTypes.string\n};\n\nexport default ApiErrorState;\n","/* eslint-disable camelcase */\n\nexport const jobExplorer = {\n    attributes: [\n        'id',\n        'status',\n        'job_type',\n        'started',\n        'finished',\n        'elapsed',\n        'created',\n        'cluster_name',\n        'org_name',\n        'most_failed_tasks'\n    ],\n    defaultParams: {\n        status: [ 'successful', 'failed' ],\n        job_type: [ 'workflowjob', 'job' ],\n        quick_date_range: 'last_30_days',\n        limit: 5,\n        only_root_workflows_and_standalone_jobs: false,\n        sort_by: 'created:desc'\n    }\n};\n\nexport const toolbarCategories = [\n    { name: 'Status', id: 1 },\n    { name: 'Date', id: 2 },\n    { name: 'Job', id: 3 },\n    { name: 'Organization', id: 4 },\n    { name: 'Cluster', id: 5 },\n    { name: 'Template', id: 6 },\n    { name: 'Sort by', id: 7 }\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from '@patternfly/react-core';\nimport {\n    CheckCircleIcon,\n    ExclamationCircleIcon,\n    ClockIcon,\n    SyncAltIcon,\n    ExclamationTriangleIcon\n} from '@patternfly/react-icons';\n\nconst JobStatus = ({ status }) => {\n    const capitalized = (str) => str.charAt(0).toUpperCase() + str.slice(1);\n\n    const getColor = () => {\n        switch (status) {\n            case 'successful':\n                return 'green';\n            case 'failed':\n            case 'error':\n                return 'red';\n            case 'running':\n            case 'pending':\n                return 'blue';\n            case 'canceled':\n                return 'orange';\n            // case new, waiting\n            default: return 'grey';\n        }\n    };\n\n    const getIcon = () => {\n        switch (status) {\n            case 'successful':\n                return <CheckCircleIcon />;\n            case 'failed':\n            case 'error':\n                return <ExclamationCircleIcon />;\n            case 'running':\n                return <SyncAltIcon />;\n            case 'canceled':\n                return <ExclamationTriangleIcon />;\n            // case new, waiting, pending\n            default: return <ClockIcon />;\n        }\n    };\n\n    return (\n        <Label variant=\"outline\" color={ getColor() } icon={ getIcon() }>{ capitalized(status) }</Label>\n    );\n};\n\nJobStatus.propTypes = {\n    status: PropTypes.oneOf([\n        'successful',\n        'failed', 'error',\n        'running',\n        'new', 'waiting', 'pending', 'canceled'\n    ])\n};\n\nexport default JobStatus;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    DataListCell as PFDataListCell,\n    DataListContent,\n    DataList,\n    DataListItem,\n    DataListItemRow as PFDataListItemRow,\n    DataListItemCells as PFDataListItemCells,\n    DataListToggle,\n    Tooltip\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkIcon } from '@patternfly/react-icons';\n\nimport LoadingState from '../Components/LoadingState';\nimport { formatDateTime, formatJobType } from '../Utilities/helpers';\nimport JobStatus from './JobStatus';\n\nconst headerLabels = [\n    'Id/Name',\n    'Status',\n    'Cluster',\n    'Organization',\n    'Type'\n];\n\nconst ExternalLinkIcon = styled(PFExternalLinkIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n`;\n\nconst DataListCell = styled(PFDataListCell)`\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n`;\n\nconst DataListItemCells = styled(PFDataListItemCells)`\nalign-items: center;\nmargin-top: 5px;\n`;\n\nconst DataListItemRow = styled(PFDataListItemRow)`\nalign-items: center; \n`;\n\nconst mobileBreakpoint = 765;\n\nconst buildHeader = labels => (\n    <DataListItemRow style={ { paddingLeft: '80px', fontWeight: '800' } }>\n        { labels.map(label => (\n            <DataListCell key={ label }>\n                { label }\n                { label === 'Id/Name' &&\n                    <ExternalLinkIcon />\n                }\n            </DataListCell>\n        )) }\n    </DataListItemRow>\n);\n\nconst buildListRow = (items, ariaLabel, ariaLabelledBy, windowWidth) => {\n    const [ isExpanded, setIsExpanded ] = useState([]);\n\n    return (\n        <DataList aria-label={ ariaLabel } isCompact>\n            { items.map((item, count) => {\n                const toggle = id => {\n                    const expanded = isExpanded;\n                    const idx = expanded.indexOf(id);\n                    const newExpanded =\n            idx >= 0\n                ? [\n                    ...expanded.slice(0, idx),\n                    ...expanded.slice(idx + 1, expanded.length)\n                ]\n                : [ ...expanded, id ];\n                    setIsExpanded(newExpanded);\n                };\n\n                return (\n                    <DataListItem key={ item.id.id } aria-labelledby={ ariaLabelledBy } isExpanded={ isExpanded.includes(`${item.id.id}-toggle`) } >\n                        <DataListItemRow key={ item.id.id }>\n                            <DataListToggle\n                                id={ `${item.id.id}-toggle` }\n                                aria-controls={ `${item.id.id}-expand` }\n                                onClick={ () => toggle(`${item.id.id}-toggle`) }\n                                isExpanded={ isExpanded.includes(`${item.id.id}-toggle`) }\n                            />\n                            <DataListItemCells\n                                dataListCells={ [\n                                    <DataListCell key={ count++ }>\n                                        <a href={ item.id.tower_link } target='_blank' rel='noopener noreferrer'>\n                                            { windowWidth < mobileBreakpoint &&\n                                             <span style={ { color: 'initial', fontWeight: 'bold' } }>\n                                                 Id/Name<ExternalLinkIcon />:\n                                             </span>\n                                            }\n                                            &nbsp;\n                                            { `${item.id.id} - ${item.id.template_name}` }\n                                        </a>\n                                    </DataListCell>,\n                                    <DataListCell key={ count++ }>\n\n                                        { windowWidth <= mobileBreakpoint &&\n                                            <span style={ { color: 'initial', fontWeight: 'bold' } }>Status:</span>\n                                        }\n                                            &nbsp;\n                                        <JobStatus status={ item.status } />\n                                    </DataListCell>,\n                                    <Tooltip key={ count++ } content={ <p>{ item.cluster_name }</p> }>\n                                        <DataListCell>\n                                            { windowWidth <= mobileBreakpoint &&\n                                            <span style={ { color: 'initial', fontWeight: 'bold' } }>Cluster:</span>\n                                            }\n                                            &nbsp;\n                                            { item.cluster_name }\n                                        </DataListCell>\n                                    </Tooltip>,\n                                    <DataListCell key={ count++ }>\n                                        { windowWidth <= mobileBreakpoint &&\n                                         <span style={ { color: 'initial', fontWeight: 'bold' } }>Organization:</span>\n                                        }\n                                        &nbsp;\n                                        { item.org_name }\n                                    </DataListCell>,\n                                    <DataListCell key={ count++ }>\n                                        { windowWidth <= mobileBreakpoint &&\n                                         <span style={ { color: 'initial', fontWeight: 'bold' } }>Type:</span>\n                                        }\n                                         &nbsp;\n                                        { formatJobType(item.job_type) }\n                                    </DataListCell>\n                                ] }\n                            />\n                        </DataListItemRow>\n                        <DataListContent\n                            aria-label={ `${item.id.id}-details` }\n                            id={ '${item.id.id}' }\n                            isHidden={ !isExpanded.includes(`${item.id.id}-toggle`) }\n                        >\n                            <DataListItemCells\n                                dataListCells={ [\n                                    <DataListCell key={ count++ }>\n                                        Created: { formatDateTime(item.created) }\n                                    </DataListCell>,\n                                    <DataListCell key={ count++ }>\n                                        Started: { formatDateTime(item.started) }\n                                    </DataListCell>,\n                                    <DataListCell key={ count++ }>\n                                        Finished: { formatDateTime(item.finished) }\n                                    </DataListCell>\n                                ] }\n                            />\n                        </DataListContent>\n                    </DataListItem>\n                );\n            }) }\n        </DataList>\n    );\n};\n\nconst AllJobsTemplate = ({ jobs }) => {\n    const [ windowWidth, setWindowWidth ] = useState(window.innerWidth);\n\n    const onResize = () => setWindowWidth(window.innerWidth);\n\n    useEffect(() => {\n        window.addEventListener('resize', onResize);\n        return () => window.removeEventListener('resize', onResize);\n    }, []);\n\n    return buildListRow(jobs, 'All jobs view', 'all-jobs', windowWidth);\n};\n\nconst JobExplorerList = ({ jobs }) => {\n    const [ windowWidth, setWindowWidth ] = useState(window.innerWidth);\n\n    const onResize = () => setWindowWidth(window.innerWidth);\n\n    useEffect(() => {\n        window.addEventListener('resize', onResize);\n        return () => window.removeEventListener('resize', onResize);\n    }, []);\n\n    return (\n        <>\n            {jobs.length <= 0 && <LoadingState />}\n            <>\n                { windowWidth >= mobileBreakpoint && buildHeader(headerLabels) }\n                <AllJobsTemplate jobs={ jobs } windowWidth={ windowWidth }/>\n            </>\n        </>\n    );\n};\n\nJobExplorerList.propTypes = {\n    jobs: PropTypes.array,\n    windowWidth: PropTypes.number\n};\n\nAllJobsTemplate.propTypes = {\n    jobs: PropTypes.array,\n    windowWidth: PropTypes.number\n};\n\nexport default JobExplorerList;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n    Dropdown,\n    DropdownToggle,\n    DropdownItem,\n    InputGroup,\n    InputGroupText,\n    TextInput,\n    Toolbar,\n    ToolbarContent as PFToolbarContent,\n    ToolbarFilter,\n    ToolbarToggleGroup,\n    ToolbarItem,\n    ToolbarGroup as PFToolbarGroup,\n    Select as PFSelect,\n    SelectOption,\n    Switch as PFSwitch,\n    Tooltip,\n    TooltipPosition\n} from '@patternfly/react-core';\nimport {\n    FilterIcon,\n    CalendarAltIcon,\n    QuestionCircleIcon\n} from '@patternfly/react-icons';\n\nimport { toolbarCategories } from '../Utilities/constants';\n\nconst ToolbarGroup = styled(PFToolbarGroup)`\n  button {\n    .pf-c-select__toggle-wrapper {\n      flex-wrap: nowrap;\n    }\n  }\n`;\n\nconst ToolbarContent = styled(PFToolbarContent)`\n  .pf-c-toolbar__content-section {\n    justify-content: space-between;\n  }\n`;\n\nconst Switch = styled(PFSwitch)`\n    &&& {\n        margin: 0 15px;\n    }\n`;\n\nconst Select = styled(PFSelect)`\n    .pf-c-select__menu {\n        max-height: 500px;\n        overflow: auto;\n    }\n`;\n\n/**\n * Get comparator values if their key is in the item list\n */\nexport const handleChips = (item, comparator) => {\n    if (item && comparator) {\n        return item.reduce((acc, i) => {\n            Number.isInteger(parseInt(i)) ? (i = parseInt(i)) : i;\n\n            comparator.forEach(cmpItem => {\n                if (cmpItem.key === i) {\n                    acc.push(cmpItem.value);\n                }\n            });\n\n            return acc;\n        }, []);\n    }\n\n    return [];\n};\n\n/**\n * Convert a list of objects to a list of the last value if defined\n */\nexport const handleDateChips = (date, comparator) => {\n    if (date && typeof date === 'string' && comparator) {\n        let val;\n        comparator.forEach(i => {\n            if (i.key === date) {\n                val = i.value;\n            }\n        });\n\n        if (val !== undefined) {\n            return [ val ];\n        }\n    }\n\n    return [];\n};\n\nconst FilterableToolbar = ({\n    orgs,\n    statuses,\n    types,\n    clusters,\n    templates,\n    sortables,\n    dateRanges,\n    onDelete,\n    passedFilters,\n    handleFilters\n}) => {\n    const [ statusIsExpanded, setStatusIsExpanded ] = useState(false);\n    const [ dateRangeIsExpanded, setDateRangeIsExpanded ] = useState(false);\n    const [ jobTypeIsExpanded, setJobTypeIsExpanded ] = useState(false);\n    const [ orgIsExpanded, setOrgIsExpanded ] = useState(false);\n    const [ isCategoryExpanded, setIsCategoryExpanded ] = useState(false);\n    const [ clusterIsExpanded, setClusterIsExpanded ] = useState(false);\n    const [ templateIsExpanded, setTemplateIsExpanded ] = useState(false);\n    const [ sortByIsExpanded, setSortByIsExpanded ] = useState(false);\n    const [ currentCategory, setCurrentCategory ] = useState('Status');\n\n    const handleStartDate = e => {\n        handleFilters({\n            ...passedFilters,\n            startDate: e\n        });\n    };\n\n    const handleEndDate = e => {\n        handleFilters({\n            ...passedFilters,\n            endDate: e\n        });\n    };\n\n    const buildCategoryDropdown = categories => {\n        return (\n            <ToolbarItem>\n                <Dropdown\n                    onSelect={ e => {\n                        setCurrentCategory(e.target.innerText);\n                        setIsCategoryExpanded(!isCategoryExpanded);\n                    } }\n                    position={ 'left' }\n                    toggle={\n                        <DropdownToggle\n                            onToggle={ () => {\n                                setIsCategoryExpanded(!isCategoryExpanded);\n                            } }\n                            style={ { width: '100%' } }\n                        >\n                            <FilterIcon />\n            &nbsp;{ currentCategory }\n                        </DropdownToggle>\n                    }\n                    isOpen={ isCategoryExpanded }\n                    dropdownItems={ categories.map(category => (\n                        <DropdownItem key={ category.id }>{ category.name }</DropdownItem>\n                    )) }\n                    style={ { width: '100%' } }\n                />\n            </ToolbarItem>\n        );\n    };\n\n    const buildFilterDropdown = () => {\n        const organizationIdMenuItems = orgs.map(({ key, value }) => (\n            <SelectOption key={ key } value={ `${key}` }>\n                { value }\n            </SelectOption>\n        ));\n\n        const statusMenuItems = statuses.map(({ key, value }) => (\n            <SelectOption key={ key } value={ key }>\n                { value }\n            </SelectOption>\n        ));\n\n        const jobTypeMenuItems = types.map(({ key, value }) => (\n            <SelectOption key={ key } value={ key }>\n                { value }\n            </SelectOption>\n        ));\n\n        const clusterIdMenuItems = clusters.map(({ key, value }) => (\n            <SelectOption key={ key } value={ `${key}` }>\n                { value }\n            </SelectOption>\n        ));\n\n        const templateIdMenuItems = templates.map(({ key, value }) => (\n            <SelectOption key={ key } value={ `${key}` }>\n                { value }\n            </SelectOption>\n        ));\n\n        let sortByMenuItems = [];\n        if (Array.isArray(sortables)) {\n            sortByMenuItems = sortables.map(({ key, value }) => (\n                <SelectOption key={ key } value={ key }>\n                    { value }\n                </SelectOption>\n            ));\n        }\n\n        const dateRangeMenuItems = dateRanges.map(({ key, value }) => (\n            <SelectOption key={ key } value={ key }>\n                { value }\n            </SelectOption>\n        ));\n\n        const onSelect = (type, event, selection) => {\n            const checked = event.target.checked;\n\n            handleFilters({\n                ...passedFilters,\n                [type]: checked\n                    ? [ ...passedFilters[type], selection ]\n                    : passedFilters[type].filter(value => value !== selection)\n            });\n        };\n\n        const onSortSelect = (_event, selection) => {\n            handleFilters({\n                ...passedFilters,\n                sortby: selection\n            });\n            setSortByIsExpanded(!sortByIsExpanded);\n        };\n\n        const onDateSelect = (_event, selection) => {\n            handleFilters({\n                ...passedFilters,\n                date: selection\n            });\n            setDateRangeIsExpanded(!dateRangeIsExpanded);\n        };\n\n        return (\n            <React.Fragment>\n                <ToolbarFilter\n                    showToolbarItem={ currentCategory === 'Status' }\n                    chips={ handleChips(passedFilters.status, statuses) }\n                    categoryName=\"Status\"\n                    deleteChip={ onDelete }\n                >\n                    <Select\n                        isOpen={ statusIsExpanded }\n                        variant={ 'checkbox' }\n                        aria-label=\"Status\"\n                        onToggle={ () => {\n                            setStatusIsExpanded(!statusIsExpanded);\n                        } }\n                        onSelect={ (event, selection) => {\n                            onSelect('status', event, selection);\n                        } }\n                        selections={ passedFilters.status }\n                        isExpanded={ statusIsExpanded }\n                        placeholderText=\"Filter by job status\"\n                    >\n                        { statusMenuItems }\n                    </Select>\n                </ToolbarFilter>\n                <ToolbarFilter\n                    showToolbarItem={ currentCategory === 'Date' }\n                    categoryName=\"Date\"\n                    chips={ handleDateChips(passedFilters.date, dateRanges) }\n                    deleteChip={ onDelete }\n                >\n                    <Select\n                        isOpen={ dateRangeIsExpanded }\n                        variant={ 'single' }\n                        aria-label=\"Date\"\n                        onToggle={ () => {\n                            setDateRangeIsExpanded(!dateRangeIsExpanded);\n                        } }\n                        onSelect={ (event, selection) => {\n                            onDateSelect(event, selection);\n                        } }\n                        selections={ passedFilters.date }\n                        isExpanded={ dateRangeIsExpanded }\n                        placeholderText=\"Filter by date range\"\n                    >\n                        { dateRangeMenuItems }\n                    </Select>\n\n                </ToolbarFilter>\n                <ToolbarFilter\n                    showToolbarItem={ currentCategory === 'Job' }\n                    categoryName=\"Type\"\n                    chips={ handleChips(passedFilters.type, types) }\n                    deleteChip={ onDelete }\n                >\n                    <Select\n                        isOpen={ jobTypeIsExpanded }\n                        aria-label=\"Type\"\n                        variant={ 'checkbox' }\n                        onToggle={ () => {\n                            setJobTypeIsExpanded(!jobTypeIsExpanded);\n                        } }\n                        onSelect={ (event, selection) => {\n                            onSelect('type', event, selection);\n                        } }\n                        selections={ passedFilters.type }\n                        isExpanded={ jobTypeIsExpanded }\n                        placeholderText=\"Filter by job type\"\n                    >\n                        { jobTypeMenuItems }\n                    </Select>\n                </ToolbarFilter>\n                <ToolbarFilter\n                    showToolbarItem={ currentCategory === 'Organization' }\n                    categoryName=\"Org\"\n                    chips={ handleChips(passedFilters.org, orgs) }\n                    deleteChip={ onDelete }\n                >\n                    <Select\n                        isOpen={ orgIsExpanded }\n                        aria-label=\"Filter by Org\"\n                        variant={ 'checkbox' }\n                        onToggle={ () => {\n                            setOrgIsExpanded(!orgIsExpanded);\n                        } }\n                        onSelect={ (event, selection) => {\n                            onSelect('org', event, selection);\n                        } }\n                        selections={ passedFilters.org }\n                        isExpanded={ orgIsExpanded }\n                        placeholderText=\"Filter by organization\"\n                    >\n                        { organizationIdMenuItems }\n                    </Select>\n                </ToolbarFilter>\n                <ToolbarFilter\n                    showToolbarItem={ currentCategory === 'Cluster' }\n                    categoryName=\"Cluster\"\n                    chips={ handleChips(passedFilters.cluster, clusters) }\n                    deleteChip={ onDelete }\n                >\n                    <Select\n                        isOpen={ clusterIsExpanded }\n                        aria-label=\"Filter by Cluster\"\n                        variant={ 'checkbox' }\n                        onToggle={ () => {\n                            setClusterIsExpanded(!clusterIsExpanded);\n                        } }\n                        onSelect={ (event, selection) => {\n                            onSelect('cluster', event, selection);\n                        } }\n                        selections={ passedFilters.cluster }\n                        isExpanded={ clusterIsExpanded }\n                        placeholderText=\"Filter by cluster\"\n                    >\n                        { clusterIdMenuItems }\n                    </Select>\n                </ToolbarFilter>\n                <ToolbarFilter\n                    showToolbarItem={ currentCategory === 'Template' }\n                    categoryName=\"Template\"\n                    chips={ handleChips(passedFilters.template, templates) }\n                    deleteChip={ onDelete }\n                >\n                    <Select\n                        isOpen={ templateIsExpanded }\n                        aria-label=\"Filter by template\"\n                        variant={ 'checkbox' }\n                        onToggle={ () => setTemplateIsExpanded(!templateIsExpanded) }\n                        onSelect={ (event, selection) => {\n                            onSelect('template', event, selection);\n                        } }\n                        selections={ passedFilters.template }\n                        isExpanded={ templateIsExpanded }\n                        placeholderText=\"Filter by template\"\n                    >\n                        { templateIdMenuItems }\n                    </Select>\n                </ToolbarFilter>\n                <ToolbarFilter\n                    showToolbarItem={ currentCategory === 'Sort by' }\n                    categoryName=\"SortBy\"\n                    chips={ handleDateChips(passedFilters.sortby, sortables) }\n                    deleteChip={ onDelete }\n                >\n                    <PFSelect\n                        isOpen={ sortByIsExpanded }\n                        aria-label=\"Sort by\"\n                        variant={ 'single' }\n                        onToggle={ () => {\n                            setSortByIsExpanded(!sortByIsExpanded);\n                        } }\n                        onSelect={ (event, selection) => {\n                            onSortSelect(event, selection);\n                        } }\n                        selections={ passedFilters.sortby }\n                        isExpanded={ sortByIsExpanded }\n                        placeholderText=\"Sort by attribute\"\n                    >\n                        { sortByMenuItems }\n                    </PFSelect>\n                </ToolbarFilter>\n            </React.Fragment>\n        );\n    };\n\n    return (\n        <Toolbar\n            id=\"filterable-toolbar-with-chip-groups\"\n            clearAllFilters={ onDelete }\n            collapseListedFiltersBreakpoint=\"xl\"\n        >\n            <ToolbarContent>\n                <ToolbarToggleGroup toggleIcon={ <FilterIcon /> } breakpoint=\"xl\">\n                    <ToolbarGroup variant=\"filter-group\">\n                        { buildCategoryDropdown(toolbarCategories) }\n                        { buildFilterDropdown() }\n                        { (currentCategory === 'Date' && passedFilters.date === 'custom') && (\n                            <>\n                              <InputGroup>\n                                  <InputGroupText component=\"label\" htmlFor=\"startDate\">\n                                      <CalendarAltIcon />\n                                  </InputGroupText>\n                                  <TextInput\n                                      name=\"startDate\"\n                                      id=\"startDate\"\n                                      type=\"date\"\n                                      aria-label=\"Start Date\"\n                                      value={ passedFilters.startDate || '' }\n                                      onChange={ e => handleStartDate(e) }\n                                  />\n                              </InputGroup>\n                              <InputGroup>\n                                  <InputGroupText component=\"label\" htmlFor=\"endDate\">\n                                      <CalendarAltIcon />\n                                  </InputGroupText>\n                                  <TextInput\n                                      name=\"endDate\"\n                                      id=\"endDate\"\n                                      type=\"date\"\n                                      aria-label=\"End Date\"\n                                      value={ passedFilters.endDate || '' }\n                                      onChange={ e => handleEndDate(e) }\n                                  />\n                              </InputGroup>\n                            </>\n                        ) }\n                    </ToolbarGroup>\n                </ToolbarToggleGroup>\n                <div>\n                    <Switch\n                        id=\"showRootWorkflowJobs\"\n                        label=\"Ignore nested workflows and jobs\"\n                        labelOff=\"Ignore nested workflows and jobs\"\n                        isChecked={ passedFilters.showRootWorkflows }\n                        onChange={ val => {\n                            handleFilters({\n                                ...passedFilters,\n                                showRootWorkflows: val\n                            });\n                        } }\n                    />\n                    <Tooltip\n                        position={ TooltipPosition.top }\n                        content={\n                            <div>\n                                { ' ' }\n                If enabled, nested workflows and jobs will not be included in\n                the overall totals. Enable this option to filter out duplicate\n                entries.\n                            </div>\n                        }\n                    >\n                        <QuestionCircleIcon />\n                    </Tooltip>\n                </div>\n            </ToolbarContent>\n        </Toolbar>\n    );\n};\n\nFilterableToolbar.propTypes = {\n    orgs: PropTypes.array,\n    statuses: PropTypes.array,\n    types: PropTypes.array,\n    clusters: PropTypes.array,\n    templates: PropTypes.array,\n    sortables: PropTypes.array,\n    dateRanges: PropTypes.array,\n    onDelete: PropTypes.func,\n    passedFilters: PropTypes.object,\n    handleFilters: PropTypes.func\n};\n\nexport default FilterableToolbar;\n","/*eslint camelcase: [\"error\", {allow: [\"setStart_Date\",\"setEnd_Date\",\"cluster_id\",\"org_id\",\"job_type\",\"template_id\",\"quick_date_range\",\"sort_by\"]}]*/\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport { formatQueryStrings } from '../../Utilities/formatQueryStrings';\n\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoResults from '../../Components/NoResults';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport {\n    preflightRequest,\n    readJobExplorer,\n    readJobExplorerOptions\n} from '../../Api';\nimport { jobExplorer } from '../../Utilities/constants';\nimport { Paths } from '../../paths';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardHeader as PFCardHeader,\n    Pagination as PFPagination,\n    PaginationVariant\n} from '@patternfly/react-core';\n\nimport JobExplorerList from '../../Components/JobExplorerList';\nimport FilterableToolbar from '../../Components/Toolbar';\n\nconst CardHeader = styled(PFCardHeader)`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n`;\n\nconst CompactPagination = styled(PFPagination)`\n  display: flex;\n  align-items: flex-start;\n  margin: 0;\n`;\n\nconst Pagination = styled(PFPagination)`\n  margin-top: 20px;\n`;\n\nconst perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '15', value: 15 },\n    { title: '20', value: 20 },\n    { title: '25', value: 25 }\n];\n\nconst initialQueryParams = {\n    ...jobExplorer.defaultParams,\n    attributes: jobExplorer.attributes\n};\n\nconst initialOptionsParams = {\n    attributes: jobExplorer.attributes\n};\n\nconst JobExplorer = props => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [ apiError, setApiError ] = useState(null);\n    const [ jobExplorerData, setJobExplorerData ] = useState([]);\n    const [ firstRender, setFirstRender ] = useState(true);\n    const [ isLoading, setIsLoading ] = useState(true);\n    const [ meta, setMeta ] = useState({});\n    const [ currPage, setCurrPage ] = useState(1);\n    const [ orgIds, setOrgIds ] = useState([]);\n    const [ clusterIds, setClusterIds ] = useState([]);\n    const [ templateIds, setTemplateIds ] = useState([]);\n    const [ sortBy, setSortBy ] = useState(null);\n    const [ statuses, setStatuses ] = useState([]);\n    const [ jobTypes, setJobTypes ] = useState([]);\n    const [ quickDateRanges, setQuickDateRanges ] = useState([]);\n\n    const { parse } = formatQueryStrings({});\n    const {\n        location: { search }\n    } = props;\n    let initialSearchParams = parse(search, { arrayFormat: 'bracket' });\n    let combined = { ...initialQueryParams, ...initialSearchParams };\n    const {\n        queryParams,\n        setLimit,\n        setOffset,\n        setJobType,\n        setOrg,\n        setStatus,\n        setCluster,\n        setTemplate,\n        setSortBy2,\n        setQuickDateRange,\n        setRootWorkflowsAndJobs,\n        setStart_Date,\n        setEnd_Date\n    } = useQueryParams(combined);\n    const { queryParams: optionsQueryParams } = useQueryParams(\n        initialOptionsParams\n    );\n\n    const formattedArray = datum => {\n        if (Array.isArray(datum)) {\n            return [ ...datum ];\n        } else {\n            return datum.split();\n        }\n    };\n\n    const [ filters, setFilters ] = useState({\n        status: queryParams.status\n            ? formattedArray(queryParams.status)\n            : [ 'successful', 'failed' ],\n        type: queryParams.job_type\n            ? formattedArray(queryParams.job_type)\n            : [ 'job', 'workflowjob' ],\n        org: queryParams.org_id ? formattedArray(queryParams.org_id) : [],\n        cluster: queryParams.cluster_id ? formattedArray(queryParams.cluster_id) : [],\n        template: queryParams.template_id ? formattedArray(queryParams.template_id) : [],\n        sortby: queryParams.sort_by ? queryParams.sort_by : null,\n        startDate: queryParams.start_date ? queryParams.start_date : null,\n        endDate: queryParams.end_date ? queryParams.end_date : null,\n        date: queryParams.quick_date_range ? queryParams.quick_date_range : 'last_30_days',\n        showRootWorkflows: queryParams.only_root_workflows_and_standalone_jobs === 'true' ? true : false\n    });\n    const updateURL = () => {\n        const { jobExplorer } = Paths;\n        const { strings, stringify } = formatQueryStrings(queryParams);\n        const search = stringify(strings);\n        props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    useEffect(() => {\n        insights.chrome.appNavClick({ id: 'job-explorer', secondaryNav: true });\n        updateURL();\n    }, []);\n\n    useEffect(() => {\n        if (firstRender) {\n            return;\n        }\n\n        const getData = () => {\n            return Promise.all([ readJobExplorer({ params: queryParams }) ]);\n        };\n\n        const update = async () => {\n            setApiError(null);\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            getData().then(([{ items: jobExplorerData = [], meta }]) => {\n                setJobExplorerData(jobExplorerData);\n                setMeta(meta);\n            }).catch(e => setApiError(e.error)\n            ).finally(() => setIsLoading(false));\n        };\n\n        update();\n        updateURL();\n    }, [ queryParams ]);\n\n    useEffect(() => {\n        if (firstRender) {\n            return;\n        }\n\n        if (filters.type) {\n            setJobType(filters.type);\n        }\n\n        if (filters.status) {\n            setStatus(filters.status);\n        }\n\n        if (filters.org) {\n            setOrg(filters.org);\n        }\n\n        if (filters.cluster) {\n            setCluster(filters.cluster);\n        }\n\n        if (filters.template) {\n            setTemplate(filters.template);\n        }\n\n        // The filter can change back to null too.\n        setSortBy2(filters.sortby);\n\n        setRootWorkflowsAndJobs(filters.showRootWorkflows);\n\n        setQuickDateRange(filters.date);\n\n        if (filters.date !== 'custom') {\n            setStart_Date(null);\n            setEnd_Date(null);\n        } else {\n            setStart_Date(filters.startDate);\n            setEnd_Date(filters.endDate);\n        }\n    }, [ filters ]);\n\n    useEffect(() => {\n        let ignore = false;\n\n        const fetchEndpoints = () => {\n            return Promise.all(\n                [\n                    readJobExplorer({ params: queryParams }),\n                    readJobExplorerOptions({ params: optionsQueryParams })\n                ].map(p => p.catch(() => []))\n            );\n        };\n\n        async function initializeWithPreflight() {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            await preflightRequest().catch(error => {\n                setPreFlightError({ preflightError: error });\n            });\n            fetchEndpoints().then(\n                ([\n                    { items: jobExplorerData = [], meta },\n                    {\n                        cluster_id,\n                        org_id,\n                        job_type,\n                        status,\n                        template_id,\n                        quick_date_range,\n                        sort_by\n                    }\n                ]) => {\n                    if (!ignore) {\n                        setJobExplorerData(jobExplorerData);\n                        setMeta(meta);\n                        setClusterIds(cluster_id);\n                        setOrgIds(org_id);\n                        setTemplateIds(template_id);\n                        setSortBy(sort_by);\n                        setStatuses(status);\n                        setJobTypes(job_type);\n                        setQuickDateRanges(quick_date_range);\n                        setFirstRender(false);\n                        setIsLoading(false);\n                    }\n                }\n            );\n        }\n\n        initializeWithPreflight();\n        updateURL();\n\n        return () => (ignore = true);\n    }, []);\n\n    const onDelete = (type, val) => {\n        let filtered;\n        Number.isInteger(val) ? (val = parseInt(val)) : val;\n\n        if (type === 'Status') {\n            filtered = statuses.filter(status => status.value === val);\n        }\n\n        if (type === 'Type') {\n            filtered = jobTypes.filter(job => job.value === val);\n        }\n\n        if (type === 'Org') {\n            filtered = orgIds.filter(org => org.value === val);\n        }\n\n        if (type === 'Cluster') {\n            filtered = clusterIds.filter(cluster => cluster.value === val);\n        }\n\n        if (type === 'Template') {\n            filtered = templateIds.filter(template => template.value === val);\n        }\n\n        if (type) {\n            if (type === 'Date') {\n                setFilters({\n                    ...filters,\n                    date: null,\n                    startDate: null,\n                    endDate: null\n                });\n            } else if (type === 'SortBy') {\n                setFilters({\n                    ...filters,\n                    sortby: null\n                });\n            } else {\n                setFilters({\n                    ...filters,\n                    [type.toLowerCase()]: filters[type.toLowerCase()].filter(\n                        value => value !== filtered[0].key.toString()\n                    )\n                });\n            }\n        } else {\n            setFilters({\n                status: [],\n                type: [],\n                org: [],\n                cluster: [],\n                template: [],\n                sortby: null,\n                date: null,\n                startDate: null,\n                endDate: null,\n                showRootWorkflows: false\n            });\n        }\n    };\n\n    const returnOffsetVal = page => {\n        let offsetVal = (page - 1) * queryParams.limit;\n        return offsetVal;\n    };\n\n    const title = (\n        <span>\n      Automation Analytics\n            <span style={ { fontSize: '16px' } }>\n                { ' ' }\n                <span style={ { margin: '0 10px' } }>|</span> Jobs explorer\n            </span>\n        </span>\n    );\n\n    const handleSetPage = page => {\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    const handlePerPageSelect = (perPage, page) => {\n        setLimit(perPage);\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={ title } />\n            </PageHeader>\n\n            { preflightError && (\n                <Main>\n                    <EmptyState { ...preflightError } />\n                </Main>\n            ) }\n\n            { !preflightError && (\n        <>\n          <Main>\n              <Card>\n                  <CardHeader>\n                  </CardHeader>\n                  <CardBody>\n                      <FilterableToolbar\n                          orgs={ orgIds }\n                          statuses={ statuses }\n                          clusters={ clusterIds }\n                          templates={ templateIds }\n                          types={ jobTypes }\n                          sortables={ sortBy }\n                          dateRanges={ quickDateRanges }\n                          onDelete={ onDelete }\n                          passedFilters={ filters }\n                          handleFilters={ setFilters }\n                      />\n                      <CompactPagination\n                          itemCount={ meta.count ? meta.count : 0 }\n                          widgetId=\"pagination-options-menu-top\"\n                          perPageOptions={ perPageOptions }\n                          perPage={ queryParams.limit }\n                          page={ currPage }\n                          variant={ PaginationVariant.bottom }\n                          dropDirection={ 'up' }\n                          onPerPageSelect={ (_event, perPage, page) => {\n                              handlePerPageSelect(perPage, page);\n                          } }\n                          onSetPage={ (_event, pageNumber) => {\n                              handleSetPage(pageNumber);\n                          } }\n                          isCompact\n                      />\n                      { apiError && <ApiErrorState message={ apiError } /> }\n                      { !apiError && isLoading && <LoadingState /> }\n                      { !apiError && !isLoading && jobExplorerData.length <= 0 && <NoResults /> }\n                      { !apiError && !isLoading && jobExplorerData.length > 0 && (\n                  <>\n                    <JobExplorerList jobs={ jobExplorerData } />\n                    <Pagination\n                        itemCount={ meta.count ? meta.count : 0 }\n                        widgetId=\"pagination-options-menu-bottom\"\n                        perPageOptions={ perPageOptions }\n                        perPage={ queryParams.limit }\n                        page={ currPage }\n                        variant={ PaginationVariant.bottom }\n                        dropDirection={ 'up' }\n                        onPerPageSelect={ (_event, perPage, page) => {\n                            handlePerPageSelect(perPage, page);\n                        } }\n                        onSetPage={ (_event, pageNumber) => {\n                            handleSetPage(pageNumber);\n                        } }\n                        style={ { marginTop: '20px' } }\n                    />\n                  </>\n                      ) }\n                  </CardBody>\n              </Card>\n          </Main>\n        </>\n            ) }\n        </React.Fragment>\n    );\n};\n\nJobExplorer.propTypes = {\n    location: PropTypes.object,\n    history: PropTypes.object\n};\n\nexport default JobExplorer;\n\n","import * as d3 from 'd3';\n\nclass Tooltip {\n    constructor(opts) {\n        this.svg = opts.svg;\n        this.colors = opts.colors;\n        this.draw();\n    }\n\n    draw() {\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 145;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -41)\n        .attr('rx', 2)\n        .attr('height', 110)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.circleGreen = this.toolTipBase\n        .append('circle')\n        .attr('cx', 26)\n        .attr('cy', 0)\n        .attr('r', 7)\n        .attr('stroke', 'white')\n        .attr('fill', this.colors(1));\n        this.circleRed = this.toolTipBase\n        .append('circle')\n        .attr('cx', 26)\n        .attr('cy', 26)\n        .attr('r', 7)\n        .attr('stroke', 'white')\n        .attr('fill', this.colors(0));\n        this.successText = this.toolTipBase\n        .append('text')\n        .attr('x', 43)\n        .attr('y', 4)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Successful');\n        this.failText = this.toolTipBase\n        .append('text')\n        .attr('x', 43)\n        .attr('y', 28)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Failed');\n        this.icon = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('stroke', 'white')\n        .attr('x', 24)\n        .attr('y', 30)\n        .attr('font-size', 12)\n        .text('!');\n        this.jobs = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 137)\n        .attr('y', -21)\n        .attr('font-size', 12)\n        .attr('text-anchor', 'end')\n        .text('No jobs');\n        this.successful = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 122)\n        .attr('y', 4)\n        .text('0');\n        this.failed = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 122)\n        .attr('y', 28)\n        .text('0');\n        this.date = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('stroke', 'white')\n        .attr('x', 20)\n        .attr('y', -21)\n        .attr('font-size', 12)\n        .text('Never');\n        this.clickMore = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 20)\n        .attr('y', 55)\n        .attr('font-size', 12)\n        .text('Click for details');\n    }\n\n    handleMouseOver = (d) => {\n        let success = 0;\n        let fail = 0;\n        let total = 0;\n        const x =\n            d3.event.pageX -\n            d3\n            .select(this.svg)\n            .node()\n            .getBoundingClientRect().x +\n            10;\n        const y =\n            d3.event.pageY -\n            d3\n            .select(this.svg)\n            .node()\n            .getBoundingClientRect().y -\n            10;\n        const formatTooltipDate = d3.timeFormat('%m/%d');\n        if (!d) {\n            return;\n        }\n\n        const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n        const chartWidth = d3\n        .select(this.svg + '> svg')\n        .node()\n        .getBoundingClientRect().width;\n        const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n        const flipped = overflow < (x / chartWidth) * 100;\n        if (d) {\n            success = d.RAN || 0;\n            fail = d.FAIL || 0;\n            total = d.TOTAL || 0;\n            this.date.text(formatTooltipDate(d.DATE || null));\n        }\n\n        if (d && d.data) {\n            success = d.data.RAN || 0;\n            fail = d.data.FAIL || 0;\n            total = d.data.TOTAL || 0;\n            this.date.text(formatTooltipDate(d.data.DATE || null));\n        }\n\n        this.jobs.text('' + total + ' jobs');\n        this.jobsWidth = this.jobs.node().getComputedTextLength();\n        this.failed.text('' + fail);\n        this.successful.text('' + success);\n        this.successTextWidth = this.successful.node().getComputedTextLength();\n        this.failTextWidth = this.failed.node().getComputedTextLength();\n\n        const maxTextPerc = this.jobsWidth / this.boxWidth * 100;\n        const threshold = 40;\n        const overage = maxTextPerc / threshold;\n        let adjustedWidth;\n        if (maxTextPerc > threshold) {\n            adjustedWidth = this.boxWidth * overage;\n        } else {\n            adjustedWidth = this.boxWidth;\n        }\n\n        this.boundingBox.attr('width', adjustedWidth);\n        this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n        if (flipped) {\n            this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n            this.boundingBox.attr('x', -adjustedWidth - 20);\n            this.circleGreen.attr('cx', -adjustedWidth);\n            this.circleRed.attr('cx', -adjustedWidth);\n            this.icon.attr('x', -adjustedWidth - 2);\n            this.successText.attr('x', -adjustedWidth + 17);\n            this.failText.attr('x', -adjustedWidth + 17);\n            this.successful.attr('x', -this.successTextWidth - 20 - 12);\n            this.failed.attr('x', -this.failTextWidth - 20 - 12);\n            this.date.attr('x', -adjustedWidth - 5);\n            this.jobs.attr('x', -this.jobsWidth / 2 - 7);\n            this.clickMore.attr('x', -adjustedWidth);\n        } else {\n            this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n            this.boundingBox.attr('x', 10);\n            this.circleGreen.attr('cx', 26);\n            this.circleRed.attr('cx', 26);\n            this.icon.attr('x', 24);\n            this.successText.attr('x', 43);\n            this.failText.attr('x', 43);\n            this.successful.attr('x', (adjustedWidth - this.successTextWidth));\n            this.failed.attr('x', (adjustedWidth - this.failTextWidth));\n            this.date.attr('x', 20);\n            this.jobs.attr('x', (adjustedWidth));\n            this.clickMore.attr('x', 20);\n        }\n\n        this.toolTipBase.style('opacity', 1);\n        this.toolTipBase.interrupt();\n    }\n\n    handleMouseOut = () => {\n        this.toolTipBase\n        .transition()\n        .delay(15)\n        .style('opacity', 0)\n        .style('pointer-events', 'none');\n    }\n}\n\nexport default Tooltip;\n","/*eslint camelcase: [\"error\", {properties: \"never\"}]*/\nimport React, { Component } from 'react';\nimport {\n    withRouter\n} from 'react-router-dom';\n\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { formatQueryStrings } from '../Utilities/formatQueryStrings';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\n\nclass BarChart extends Component {\n    constructor(props) {\n        super(props);\n        this.draw = this.draw.bind(this);\n        this.init = this.init.bind(this);\n        this.resize = this.resize.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.state = {\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    redirectToJobExplorer({ data: { DATE: date }}) {\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const initialQueryParams = {\n            start_date: formattedDate,\n            end_date: formattedDate,\n            quick_date_range: 'custom',\n            status: [ 'failed', 'successful' ]\n        };\n        const { strings, stringify } = formatQueryStrings(initialQueryParams);\n        const search = stringify(strings);\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => { this.init(); }, 500)\n        });\n    }\n\n    init() {\n        this.draw();\n    }\n\n    // Methods\n    draw() {\n        // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const parseTime = d3.timeParse('%Y-%m-%d');\n        let { data: unformattedData, value } = this.props;\n        const data = unformattedData.reduce((formatted, { created, successful, failed }) => {\n            let DATE = parseTime(created) || new Date();\n            let RAN = +successful || 0;\n            let FAIL = +failed || 0;\n            let TOTAL = +successful + failed || 0;\n            return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n        }, []);\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n        const x = d3\n        .scaleBand()\n        .rangeRound([ 0, width ])\n        .padding(0.35); // percentage\n        const y = d3.scaleLinear().range([ height, 0 ]);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n                this.props.margin.left +\n                ',' +\n                this.props.margin.top +\n                ')'\n        );\n        //[fail, success]\n        let colors = d3.scaleOrdinal([ '#6EC664', '#A30000' ]);\n\n        const barTooltip = new Tooltip({\n            svg: '#' + this.props.id,\n            colors\n        });\n        const status = [ 'FAIL', 'RAN' ];\n\n        // stack our data\n        const stack = d3\n        .stack()\n        .keys(status)\n        .order(d3.stackOrderNone)\n        .offset(d3.stackOffsetNone);\n\n        const layers = stack(data);\n        // Scale the range of the data\n        x.domain(layers[0].map(d => d.data.DATE));\n        y.domain([ 0, d3.max(layers[layers.length - 1], d => d[1] * 1.15) || 8 ]);\n        // Add the Y Axis\n        svg\n        .append('g')\n        .attr('class', 'y-axis')\n        .call(\n            d3\n            .axisLeft(y)\n            .tickSize(-width, 0, 0)\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.y-axis .tick text').attr('x', -5);\n        // text label for the y axis\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Jobs across all clusters');\n        // Add the X Axis\n        let ticks;\n        const maxTicks = Math.round(data.length / (value / 2));\n        ticks = data.map(d => d.DATE);\n        if (value === 31) {\n            ticks = data.map((d, i) =>\n                i % maxTicks === 0 ? d.DATE : undefined).filter(item => item);\n        }\n\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(\n            d3\n            .axisBottom(x)\n            .tickValues(ticks)\n            .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.x-axis .tick text')\n        .attr('y', 10);\n\n        // text label for the x axis\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' +\n                width / 2 +\n                ' ,' +\n                (height + this.props.margin.top + 20) +\n                ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n\n        const layer = svg\n        .selectAll('layer')\n        .data(layers)\n        .enter()\n        .append('g')\n        .attr('class', 'layer')\n        .style('fill', (_d, i) => colors(i));\n        layer\n        .selectAll('rect')\n        .data(d => d)\n        .enter()\n        .append('rect')\n        .attr('x', d => x(d.data.DATE))\n        .attr('y', d => y(d[0]))\n        .attr('height', 0)\n        .attr('width', x.bandwidth() - 1)\n        .transition()\n        .duration(550)\n        .ease(d3.easeCubic)\n        .attr('y', d => y(d[1]))\n        .attr('height', d => y(d[0]) - y(d[1]));\n        layer\n        .selectAll('rect')\n        .on('mouseover', barTooltip.handleMouseOver)\n        .on('mousemove', barTooltip.handleMouseOver)\n        .on('mouseout', barTooltip.handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.value !== this.props.value) {\n            this.init();\n        }\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        return <div id={ this.props.id } />;\n    }\n}\n\nBarChart.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    value: PropTypes.number,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    history: PropTypes.object\n};\n\nexport default initializeChart(withRouter(BarChart));\n","/*eslint camelcase: [\"error\", {properties: \"never\"}]*/\nimport React, { Component } from 'react';\nimport {\n    withRouter\n} from 'react-router-dom';\nimport initializeChart from './BaseChart';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\nimport { formatQueryStrings } from '../Utilities/formatQueryStrings';\nimport * as d3 from 'd3';\n\nclass LineChart extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.updateCluster = this.updateCluster.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.state = {\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    redirectToJobExplorer({ DATE: date }) {\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const { clusterId } = this.props;\n        const initialQueryParams = {\n            start_date: formattedDate,\n            end_date: formattedDate,\n            quick_date_range: 'custom',\n            status: [ 'failed', 'successful' ],\n            cluster_id: clusterId\n        };\n        const { strings, stringify } = formatQueryStrings(initialQueryParams);\n        const search = stringify(strings);\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => { this.init(); }, 500)\n        });\n    }\n\n    getTickCount() {\n        const { value } = this.props;\n        if (value > 20) {\n            return (value / 2);\n        } else {\n            return value;\n        }\n    }\n    updateCluster() {\n        this.init();\n    }\n    init() {\n        this.draw();\n    }\n    // Methods\n    draw() {\n    // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n\n        function transition(path) {\n            path\n            .transition()\n            .duration(1000)\n            .attrTween('stroke-dasharray', tweenDash);\n        }\n\n        function tweenDash() {\n            const l = this.getTotalLength();\n            const i = d3.interpolateString('0,' + l, l + ',' + l);\n            return function(t) {\n                return i(t);\n            };\n        }\n\n        const x = d3.scaleTime().rangeRound([ 0, width ]);\n        const y = d3.scaleLinear().range([ height, 0 ]);\n\n        //[success, fail, total]\n        let colors = d3.scaleOrdinal([ '#6EC664', '#A30000', '#06C' ]);\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n        .attr('z', 100)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n        // Tooltip\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id,\n            colors\n        });\n        const { data: unformattedData, value } = this.props;\n        const parseTime = d3.timeParse('%Y-%m-%d');\n\n        const data = unformattedData.reduce((formatted, { created, successful, failed }) => {\n            let DATE = parseTime(created) || new Date();\n            let RAN = +successful || 0;\n            let FAIL = +failed || 0;\n            let TOTAL = +successful + failed || 0;\n            return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n        }, []);\n        // Scale the range of the data\n        x.domain(\n            d3.extent(data, function(d) {\n                return d.DATE;\n            })\n        );\n        y.domain([\n            0,\n            d3.max(data, function(d) {\n                return d.TOTAL * 1.15 || 8;\n            })\n        ]);\n\n        const successLine = d3\n        .line()\n        .curve(d3.curveMonotoneX)\n        .x(function(d) {\n            return x(d.DATE);\n        })\n        .y(function(d) {\n            return y(d.RAN);\n        });\n\n        const failLine = d3\n        .line()\n        .defined(d => !isNaN(d.FAIL))\n        .curve(d3.curveMonotoneX)\n        .x(function(d) {\n            return x(d.DATE);\n        })\n        .y(function(d) {\n            return y(d.FAIL);\n        });\n        // Add the Y Axis\n        svg\n        .append('g')\n        .attr('class', 'y-axis')\n        .call(\n            d3\n            .axisLeft(y)\n            .ticks(10)\n            .tickSize(-width)\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.y-axis .tick text').attr('x', -5);\n\n        // text label for the y axis\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Job runs');\n        // Add the X Axis\n        let ticks;\n        const maxTicks = Math.round(data.length / (value / 2));\n        ticks = data.map(d => d.DATE);\n        if (value === 31) {\n            ticks = data.map((d, i) =>\n                i % maxTicks === 0 ? d.DATE : undefined).filter(item => item);\n        }\n\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(\n            d3\n            .axisBottom(x)\n            .tickValues(ticks)\n            .tickSize(-height)\n            .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n        ) // \"Jan-01\"\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n        // text label for the x axis\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' +\n                width / 2 +\n                ' ,' +\n                (height + this.props.margin.top + 20) +\n                ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n        const vertical = svg\n        .append('path')\n        .attr('class', 'mouse-line')\n        .style('stroke', 'black')\n        .style('stroke-width', '3px')\n        .style('stroke-dasharray', ('3, 3'))\n        .style('opacity', '0');\n\n        const handleMouseOver = function(d) {\n            tooltip.handleMouseOver(d);\n            // show vertical line\n            vertical.transition().style('opacity', '1');\n        };\n\n        const handleMouseMove = function() {\n            let intersectX = this.cx.baseVal.value;\n            vertical\n            .attr('d', function () {\n                let d = 'M' + intersectX + ',' + height;\n                d += ' ' + intersectX + ',' + 0;\n                return d;\n            });\n        };\n\n        const handleMouseOut = function() {\n            // hide tooltip\n            tooltip.handleMouseOut();\n            // hide vertical line\n            vertical.transition().style('opacity', 0);\n        };\n\n        // Add the successLine path.\n        svg\n        .append('path')\n        .data([ data ])\n        .attr('class', 'line')\n        .style('fill', 'none')\n        .style('stroke', () => colors(1))\n        .attr('stroke-width', 2)\n        .attr('d', successLine)\n        .call(transition);\n\n        // Add the failLine path.\n        svg\n        .append('path')\n        .data([ data ])\n        .attr('class', 'line')\n        .style('fill', 'none')\n        .style('stroke', () => colors(0))\n        .attr('stroke-width', 2)\n        .attr('d', failLine)\n        .call(transition);\n        svg\n        .selectAll('dot')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('r', 3)\n        .style('stroke', () => colors(1))\n        .style('fill', () => colors(1))\n        .attr('cx', function(d) {\n            return x(d.DATE);\n        })\n        .attr('cy', function(d) {\n            return y(d.RAN);\n        })\n\n        .on('mouseover', handleMouseOver)\n        .on('mousemove', handleMouseMove)\n        .on('mouseout', handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n        // create our failLine circles\n        svg\n        .selectAll('dot')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('r', 3)\n        .style('stroke', () => colors(0))\n        .style('fill', () => colors(0))\n        .attr('cx', function(d) {\n            return x(d.DATE);\n        })\n        .attr('cy', function(d) {\n            return y(d.FAIL);\n        })\n        .on('mouseover', handleMouseOver)\n        .on('mousemove', handleMouseMove)\n        .on('mouseout', handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n    }\n\n    componentDidMount() {\n        this.updateCluster();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.value !== this.props.value) {\n            this.updateCluster();\n        }\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        return <div id={ this.props.id } />;\n    }\n}\n\nLineChart.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    value: PropTypes.number,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    history: PropTypes.object,\n    clusterId: PropTypes.number\n};\n\nexport default initializeChart(withRouter(LineChart));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { trimStr } from '../Utilities/helpers';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n    Badge,\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell\n} from '@patternfly/react-core';\n\nconst DataListCell = styled(PFDataListCell)`\n    --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst ModulesList = ({ modules, isLoading }) => (\n    <DataList aria-label=\"Top Modules\" style={ {\n        maxHeight: '400px',\n        overflow: 'auto',\n        height: '400px',\n        background: 'white'\n    } }>\n        <DataListItem aria-labelledby=\"top-modules-header\">\n            <DataListCell>\n                <h3>Top modules</h3>\n            </DataListCell>\n            <DataCellEnd>\n                <h3>Usage</h3>\n            </DataCellEnd>\n        </DataListItem>\n        { isLoading && (\n            <PFDataListItem\n                aria-labelledby=\"modules-loading\"\n                key={ isLoading }\n                style={ { border: 'none' } }\n            >\n                <PFDataListCell>\n                    <LoadingState />\n                </PFDataListCell>\n            </PFDataListItem>\n        ) }\n        { !isLoading && modules.length <= 0 && (\n            <PFDataListItem\n                aria-labelledby=\"modules-no-data\"\n                key={ isLoading }\n                style={ { border: 'none' } }\n            >\n                <PFDataListCell>\n                    <NoData />\n\n                </PFDataListCell>\n            </PFDataListItem>\n        ) }\n        { !isLoading && modules.filter(module => module.module !== null).map(({ module, count }, index) => (\n            <DataListItem aria-labelledby=\"top-modules-detail\" key={ index }>\n                <DataListCell>\n                    <span>{ trimStr(module) }</span>\n                </DataListCell>\n                <DataCellEnd>\n                    <Badge isRead>{ count }</Badge>\n                </DataCellEnd>\n            </DataListItem>\n        )) }\n    </DataList>\n);\n\nModulesList.propTypes = {\n    modules: PropTypes.array,\n    isLoading: PropTypes.bool\n};\n\nexport default ModulesList;\n","/*eslint camelcase: [\"error\", {allow: [\"template_id\", \"job_type\", \"cluster_id\", \"start_date\", \"end_date\", \"quick_date_range\"]}]*/\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { formatDateTime, formatSeconds, formatPercentage } from '../Utilities/helpers';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\nimport { Paths } from '../paths';\nimport { formatQueryStrings } from '../Utilities/formatQueryStrings';\n\nimport {\n    Badge,\n    Button,\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell,\n    Modal,\n    Label\n} from '@patternfly/react-core';\n\nimport { CircleIcon } from '@patternfly/react-icons';\n\nimport { readTemplateJobs } from '../Api';\n\nconst success = (\n    <CircleIcon\n        size=\"sm\"\n        key=\"5\"\n        style={ { color: 'rgb(110, 198, 100)', marginRight: '5px' } }\n    />\n);\nconst fail = (\n  <>\n    <CircleIcon\n        size=\"sm\"\n        key=\"5\"\n        style={ { color: 'rgb(163, 0, 0)', marginRight: '5px' } }\n    />\n    <span id=\"fail-icon\">!</span>\n  </>\n);\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst PFDataListItemNoBorder = styled(PFDataListItem)`\n    border-bottom: none;\n    margin-bottom: -20px;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataListItemCompact = styled(DataListItem)`\n  padding: 0;\n  > .pf-c-data-list__cell {\n    font-weight: 600;\n  }\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst DataListCellCompact = styled(DataListCell)`\n    padding: 7px;\n`;\n\nconst DataListFocus = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, auto);\n    grid-gap: 10px;\n    padding: var(--pf-global--spacer--lg);\n    background: #ebebeb;\n    border: 1px solid #ccc;\n    border-top: none;\n    margin-bottom: 20px;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst DataCellEndCompact = styled(DataCellEnd)`\n    padding: 7px !important;\n`;\n\nconst formatTopFailedTask = data => {\n    if (!data) {\n        return;\n    }\n\n    if (data && data[0]) {\n        const percentage = formatPercentage(data[0].fail_rate);\n        return `${data[0].task_name} ${percentage}`;\n    }\n\n    return `Unavailable`;\n};\n\nconst TemplatesList = ({ history, clusterId, templates, isLoading, queryParams }) => {\n    const [ isModalOpen, setIsModalOpen ] = useState(false);\n    const [ selectedId, setSelectedId ] = useState(null);\n    const [ selectedTemplate, setSelectedTemplate ] = useState([]);\n    const [ relatedJobs, setRelatedJobs ] = useState([]);\n\n    useEffect(() => {\n        const fetchTemplateDetails = () => {\n            return readTemplateJobs(selectedId, { params: queryParams });\n        };\n\n        const update = async () => {\n            await window.insights.chrome.auth.getUser();\n            fetchTemplateDetails().then(data => {\n                setSelectedTemplate(data);\n                setRelatedJobs(data.related_jobs);\n            });\n        };\n\n        if (selectedId) {\n            update();\n        }\n\n    }, [ selectedId ]);\n\n    const redirectToJobExplorer = () => {\n        const { jobExplorer } = Paths;\n        const initialQueryParams = {\n            template_id: selectedId,\n            status: [ 'successful', 'failed', 'new', 'pending', 'waiting', 'error', 'canceled', 'running' ],\n            job_type: [ 'job' ],\n            start_date: queryParams.startDate,\n            end_date: queryParams.endDate,\n            quick_date_range: 'custom',\n            cluster_id: clusterId\n        };\n\n        const { strings, stringify } = formatQueryStrings(initialQueryParams);\n        const search = stringify(strings);\n        history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    return (\n    <>\n      <DataList aria-label=\"Top Templates\" style={ {\n          maxHeight: '400px',\n          overflow: 'auto',\n          height: '400px',\n          background: 'white'\n      } }>\n          <DataListItem aria-labelledby=\"top-templates-header\">\n              <DataListCell>\n                  <h3>Top templates</h3>\n              </DataListCell>\n              <DataCellEnd>\n                  <h3>Usage</h3>\n              </DataCellEnd>\n          </DataListItem>\n          { isLoading && (\n              <PFDataListItem\n                  aria-labelledby=\"templates-loading\"\n                  key={ isLoading }\n                  style={ { border: 'none' } }\n\n              >\n                  <PFDataListCell>\n                      <LoadingState />\n                  </PFDataListCell>\n              </PFDataListItem>\n          ) }\n          { !isLoading && templates.length <= 0 && (\n              <PFDataListItem\n                  aria-labelledby=\"templates-no-data\"\n                  key={ isLoading }\n                  style={ { border: 'none' } }\n              >\n                  <PFDataListCell>\n                      <NoData />\n                  </PFDataListCell>\n              </PFDataListItem>\n          ) }\n          { !isLoading && templates.map(({ name, count, id }, index) => (\n              <DataListItem aria-labelledby=\"top-templates-detail\" key={ index }>\n                  <DataListCell>\n                      <a\n                          onClick={ () => {\n                              setIsModalOpen(true);\n                              setSelectedId(id);\n                          } }\n                      >\n                          { name }\n                      </a>\n                  </DataListCell>\n                  <DataCellEnd>\n                      <Badge isRead>{ count }</Badge>\n                  </DataCellEnd>\n              </DataListItem>\n          )) }\n      </DataList>\n      { selectedTemplate && selectedTemplate !== [] && (\n          <Modal\n              width={ '80%' }\n              title={ selectedTemplate.name ? selectedTemplate.name : 'no-template-name' }\n              isOpen={ isModalOpen }\n              onClose={ () => {\n                  setIsModalOpen(false);\n                  setSelectedTemplate([]);\n                  setRelatedJobs([]);\n                  setSelectedId(null);\n              } }\n              actions={ [\n                  <Button\n                      key=\"cancel\"\n                      variant=\"secondary\"\n                      onClick={ () => {\n                          setIsModalOpen(false);\n                          setSelectedTemplate([]);\n                          setRelatedJobs([]);\n                          setSelectedId(null);\n                      } }\n                  >\n              Close\n                  </Button>\n              ] }\n          >\n              <DataList aria-label=\"Selected Template Details\">\n                  <PFDataListItemNoBorder\n                      aria-labelledby=\"Selected Template Statistics\"\n                  >\n                      <DataListFocus>\n                          <div aria-labelledby=\"job runs\">\n                              <b style={ { marginRight: '10px' } }>Number of runs</b>\n                              { selectedTemplate.total_run_count ?\n                                  selectedTemplate.total_run_count : 'Unavailable' }\n                          </div>\n                          <div aria-labelledby=\"total time\">\n                              <b style={ { marginRight: '10px' } }>Total time</b>\n                              { selectedTemplate.total_run ?\n                                  selectedTemplate.total_run : 'Unavailable' }\n                          </div>\n                          <div aria-labelledby=\"Avg Time\">\n                              <b style={ { marginRight: '10px' } }>Avg time</b>\n                              { selectedTemplate.average_run ?\n                                  selectedTemplate.average_run : 'Unavailable' }\n                          </div>\n                          <div aria-labelledby=\"success rate\">\n                              <b style={ { marginRight: '10px' } }>Success rate</b>\n                              { !isNaN(selectedTemplate.success_rate) ?\n                                  formatPercentage(selectedTemplate.success_rate) : 'Unavailable' }\n                          </div>\n                          <div aria-labelledby=\"most failed task\">\n                              <b style={ { marginRight: '10px' } }>Most failed task</b>\n                              { selectedTemplate.most_failed_tasks ?\n                                  formatTopFailedTask(selectedTemplate.most_failed_tasks) : 'Unavailable' }\n                          </div>\n                      </DataListFocus>\n                  </PFDataListItemNoBorder>\n                  <DataListItemCompact>\n                      <DataListCellCompact key=\"last5jobs\">\n                          <Label variant=\"outline\">Last 5 jobs</Label>\n                      </DataListCellCompact>,\n                      <DataCellEndCompact>\n                          <Button component=\"a\" onClick={ redirectToJobExplorer } variant=\"link\">\n                              View all jobs\n                          </Button>\n                      </DataCellEndCompact>\n                  </DataListItemCompact>\n                  <DataListItemCompact aria-labelledby=\"datalist header\">\n                      <PFDataListCell key=\"job heading\">Id/Name</PFDataListCell>\n                      <PFDataListCell key=\"cluster heading\">Cluster</PFDataListCell>\n                      <PFDataListCell key=\"start time heading\">Start Time</PFDataListCell>\n                      <PFDataListCell key=\"total time heading\">Total Time</PFDataListCell>\n                  </DataListItemCompact>\n                  { relatedJobs.length <= 0 && <LoadingState /> }\n                  { relatedJobs.length > 0 &&\n              relatedJobs.map((job, index) => (\n                  <DataListItem\n                      style={ { padding: '10px 0' } }\n                      key={ `job-details-${index}` }\n                      aria-labelledby=\"job details\"\n                  >\n                      <PFDataListCell key=\"job name\">\n                          { job.status === 'successful' ? success : fail }{ ' ' }\n                          { job.job_id } - { job.job_name }\n                      </PFDataListCell>\n                      <PFDataListCell key=\"job cluster\">\n                          { job.cluster_label || job.install_uuid }\n                      </PFDataListCell>\n                      <PFDataListCell key=\"start time\">\n                          { formatDateTime(job.start_time) }\n                      </PFDataListCell>\n                      <PFDataListCell key=\"total time\">\n                          { formatSeconds(job.total_time) }\n                      </PFDataListCell>\n                  </DataListItem>\n              )) }\n              </DataList>\n          </Modal>\n      ) }\n    </>\n    );\n};\n\nTemplatesList.propTypes = {\n    templates: PropTypes.array,\n    isLoading: PropTypes.bool,\n    queryParams: PropTypes.object\n};\n\nexport default TemplatesList;\n","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport {\n    preflightRequest,\n    readChart30,\n    readClusters,\n    readModules,\n    readTemplates\n} from '../../Api';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle,\n    FormSelect,\n    FormSelectOption\n} from '@patternfly/react-core';\n\nimport { FilterIcon } from '@patternfly/react-icons';\n\nimport BarChart from '../../Charts/BarChart';\nimport LineChart from '../../Charts/LineChart';\nimport ModulesList from '../../Components/ModulesList';\nimport TemplatesList from '../../Components/TemplatesList';\n\nconst CardTitle = styled(PFCardTitle)`\n  border-bottom: 2px solid #ebebeb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &&& {\n    min-height: 60px;\n    --pf-c-card--first-child--PaddingTop: 10px;\n    --pf-c-card__header--not-last-child--PaddingBottom: 10px;\n\n    h3 {\n      font-size: 0.875em;\n    }\n  }\n`;\nconst title = (\n    <span style={ { fontWeight: 400 } }>\n    Automation Analytics\n        <span style={ { fontSize: '16px', fontWeight: 400 } }>\n            { ' ' }\n            <span style={ { margin: '0 10px' } }>|</span> Clusters\n        </span>\n    </span>\n);\n\nconst timeFrameOptions = [\n    { value: 'please choose', label: 'Select date range', disabled: true },\n    { value: 7, label: 'Past week', disabled: false },\n    { value: 14, label: 'Past 2 weeks', disabled: false },\n    { value: 31, label: 'Past month', disabled: false }\n];\n\nfunction formatClusterName(data) {\n    const defaultClusterOptions = [\n        { value: 'please choose', label: 'Select cluster', disabled: true },\n        { value: 'all', label: 'All clusters', disabled: false }\n    ];\n    return data.reduce(\n        (formatted, { label, cluster_id: id, install_uuid: uuid }) => {\n            if (label.length === 0) {\n                formatted.push({ value: id, label: uuid, disabled: false });\n            } else {\n                formatted.push({ value: id, label, disabled: false });\n            }\n\n            return formatted;\n        },\n        defaultClusterOptions\n    );\n}\n\nconst initialQueryParams = {\n    startDate: moment()\n    .subtract(1, 'month')\n    .format('YYYY-MM-DD'),\n    endDate: moment().format('YYYY-MM-DD')\n};\n\nconst Clusters = ({ history }) => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [ barChartData, setBarChartData ] = useState([]);\n    const [ lineChartData, setLineChartData ] = useState([]);\n    const [ templatesData, setTemplatesData ] = useState([]);\n    const [ modulesData, setModulesData ] = useState([]);\n    const [ clusterOptions, setClusterOptions ] = useState([]);\n    const [ clusterTimeFrame, setClusterTimeFrame ] = useState(31);\n    const [ selectedCluster, setSelectedCluster ] = useState('all');\n    const [ isLoading, setIsLoading ] = useState(true);\n    const { queryParams, setEndDate, setStartDate, setId } = useQueryParams(\n        initialQueryParams\n    );\n\n    useEffect(() => {\n        setIsLoading(true);\n        window.insights.chrome.auth.getUser().then(() =>\n            preflightRequest().then(() =>\n                readClusters().then(({ templates: clustersData = []}) => {\n                    const clusterOptions = formatClusterName(clustersData);\n                    setClusterOptions(clusterOptions);\n                    setIsLoading(false);\n                })\n            ).catch((error) => {\n                setPreFlightError({ preflightError: error });\n            })\n        );\n    }, []);\n\n    // Get and update the data\n    useEffect(() => {\n        setIsLoading(true);\n        window.insights.chrome.auth.getUser().then(() =>\n            Promise.all([\n                readChart30({ params: queryParams }),\n                readModules({ params: queryParams }),\n                readTemplates({ params: queryParams })\n            ]).then(([\n                { data: chartData = []},\n                { modules: modulesData = []},\n                { templates: templatesData = []}\n            ]) => {\n                queryParams.id ? setLineChartData(chartData) : setBarChartData(chartData);\n                setModulesData(modulesData);\n                setTemplatesData(templatesData);\n                setIsLoading(false);\n            }).catch(() => [])\n        );\n    }, [ queryParams ]);\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={ title } />\n            </PageHeader>\n            { preflightError && (\n                <Main>\n                    <EmptyState { ...preflightError } />\n                </Main>\n            ) }\n            { !preflightError && (\n        <>\n          <Main style={ { paddingBottom: '0' } }>\n              <Card>\n                  <CardTitle style={ { paddingBottom: '0', paddingTop: '0' } }>\n                      <h2>\n                          <FilterIcon style={ { marginRight: '10px' } } />\n                  Filter\n                      </h2>\n                      <div style={ { display: 'flex', justifyContent: 'flex-end' } }>\n                          <FormSelect\n                              name=\"selectedCluster\"\n                              value={ selectedCluster }\n                              onChange={ value => {\n                                  setSelectedCluster(value);\n                                  setId(value);\n                              } }\n                              aria-label=\"Select Cluster\"\n                              style={ { margin: '2px 10px' } }\n                          >\n                              { clusterOptions.map(({ value, label, disabled }, index) => (\n                                  <FormSelectOption\n                                      isDisabled={ disabled }\n                                      key={ index }\n                                      value={ value }\n                                      label={ label }\n                                  />\n                              )) }\n                          </FormSelect>\n                          <FormSelect\n                              name=\"clusterTimeFrame\"\n                              value={ clusterTimeFrame }\n                              onChange={ value => {\n                                  setClusterTimeFrame(+value);\n                                  setEndDate();\n                                  setStartDate(+value);\n                              } }\n                              aria-label=\"Select Date Range\"\n                              style={ { margin: '2px 10px' } }\n                          >\n                              { timeFrameOptions.map((option, index) => (\n                                  <FormSelectOption\n                                      isDisabled={ option.disabled }\n                                      key={ index }\n                                      value={ option.value }\n                                      label={ option.label }\n                                  />\n                              )) }\n                          </FormSelect>\n                      </div>\n                  </CardTitle>\n              </Card>\n          </Main>\n          <Main>\n              <Card>\n                  <PFCardTitle>\n                      <h2>Job status</h2>\n                  </PFCardTitle>\n                  <CardBody>\n                      { isLoading && !preflightError && <LoadingState /> }\n                      { selectedCluster === 'all' &&\n                  barChartData.length > 0 &&\n                  !isLoading && (\n                          <BarChart\n                              margin={ { top: 20, right: 20, bottom: 50, left: 70 } }\n                              id=\"d3-bar-chart-root\"\n                              data={ barChartData }\n                              value={ clusterTimeFrame }\n                          />\n                      ) }\n                      { selectedCluster !== 'all' &&\n                  lineChartData.length > 0 &&\n                  !isLoading && (\n                          <LineChart\n                              margin={ { top: 20, right: 20, bottom: 50, left: 70 } }\n                              id=\"d3-line-chart-root\"\n                              data={ lineChartData }\n                              value={ clusterTimeFrame }\n                              clusterId={ queryParams.id }\n                          />\n                      ) }\n                  </CardBody>\n              </Card>\n              <div\n                  className=\"dataCard\"\n                  style={ { display: 'flex', marginTop: '20px' } }\n              >\n                  <TemplatesList\n                      history={ history }\n                      queryParams={ queryParams }\n                      clusterId={ queryParams.id }\n                      templates={ templatesData.slice(0, 10) }\n                      isLoading={ isLoading }\n                  />\n                  <ModulesList\n                      modules={ modulesData.slice(0, 10) }\n                      isLoading={ isLoading }\n                  />\n              </div>\n          </Main>\n        </>\n            ) }\n        </React.Fragment>\n    );\n};\n\nexport default Clusters;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Switch as PFSwitch } from '@patternfly/react-core';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  overflow: auto;\n  width: 100%;\n  height: ${props => props.height};\n`;\n\nconst LegendDetail = styled.div`\n  display: flex;\n  padding: 5px 10px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  overflow: auto;\n`;\n\nconst Color = styled.div.attrs(props => ({\n    color: props.color || 'black'\n}))`\n  min-width: 12px;\n  height: 12px;\n  background: ${props => props.color};\n  margin-right: 20px;\n`;\n\nconst Title = styled.span`\n  font-size: 12px;\n  display: inline-block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n`;\n\nconst SubTitle = styled.span`\n    font-size: 12px;\n    margin-left: 20px;\n`;\n\nconst Switch = styled(PFSwitch)`\n  margin-left: 20px;\n\n  svg {\n    display: none;\n  }\n`;\n\nclass Legend extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(_isChecked, { target: { value }}) {\n        const { onToggle } = this.props;\n        const selectedId = parseFloat(value);\n        onToggle(selectedId);\n    };\n    render() {\n        const { data, selected, height } = this.props;\n        return (\n            <Container height={ height }>\n                { data.map(\n                    ({ name, value, id, count }, index) => (\n                        <LegendDetail key={ index }>\n                            <Wrapper>\n                                <Color color={ value } />\n                                <Title>{ name }</Title>\n                            </Wrapper>\n                            { count && (\n                                <SubTitle>{ count }</SubTitle>\n                            ) }\n                            { selected && (\n                                <Switch\n                                    isChecked={ selected.some(selection => selection === id) }\n                                    onChange={ this.handleChange }\n                                    aria-label={ name }\n                                    value={ id }\n                                    id={ `${name}-${id}` }\n                                />\n                            ) }\n                        </LegendDetail>\n                    )) }\n            </Container>\n        );\n    }\n}\n\nLegend.propTypes = {\n    data: PropTypes.array,\n    selected: PropTypes.array,\n    onToggle: PropTypes.func,\n    height: PropTypes.string\n};\n\nexport default Legend;\n","const pfmulti = [\n    '#06C',\n    '#4CB140',\n    '#009596',\n    '#5752D1',\n    '#F4C145',\n    '#EC7A08',\n    '#8BC1F7',\n    '#23511E',\n    '#A2D9D9',\n    '#2A265F',\n    '#F9E0A2',\n    '#8F4700',\n    '#002F5D'\n];\n\nexport { pfmulti };\n","/* eslint-disable camelcase */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport {\n    withRouter\n} from 'react-router-dom';\n\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport Legend from '../Utilities/Legend';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\nimport { formatQueryStrings } from '../Utilities/formatQueryStrings';\nimport { pfmulti } from '../Utilities/colors';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nconst color = d3.scaleOrdinal(pfmulti);\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        this.draw();\n    }\n\n    draw() {\n        this.width = 125;\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 125;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', 68)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.date = this.toolTipBase\n        .append('text')\n        .attr('x', 20)\n        .attr('y', 14)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Date');\n        this.jobs = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 72)\n        .attr('y', 14)\n        .text('0 Jobs');\n        this.orgName = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', -1)\n        .attr('font-size', 12)\n        .text('Org');\n        this.clickMore = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 20)\n        .attr('y', 30)\n        .attr('font-size', 12)\n        .text('Click for details');\n    }\n\n  handleMouseOver = d => {\n      let date;\n      let orgName;\n      let jobs;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      if (!d) {\n          return;\n      } else {\n          const maxLength = 16;\n          date = d.date;\n          orgName = d.org_name;\n          jobs = d.value;\n          if (d.org_name.length > maxLength) {\n              orgName = d.org_name.slice(0, maxLength).concat('...');\n          }\n      }\n\n      const formatTooltipDate = d3.timeFormat('%m/%d');\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n\n      this.date.text('' + formatTooltipDate(date));\n      this.orgName.text('' + orgName);\n      this.jobs.text('' + jobs + ' Jobs');\n      this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n      const maxTextPerc = this.jobsWidth / this.boxWidth * 100;\n      const threshold = 45;\n      const overage = maxTextPerc / threshold;\n      let adjustedWidth;\n      if (maxTextPerc > threshold) {\n          adjustedWidth = this.boxWidth * overage;\n      } else {\n          adjustedWidth = this.boxWidth;\n      }\n\n      this.boundingBox.attr('width', adjustedWidth);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n          this.boundingBox.attr('x', -adjustedWidth - 20);\n          this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n          this.orgName.attr('x', -adjustedWidth - 7);\n          this.clickMore.attr('x', -adjustedWidth - 7);\n          this.date.attr('x', -adjustedWidth - 7);\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n          this.boundingBox.attr('x', 10);\n          this.orgName.attr('x', 20);\n          this.clickMore.attr('x', 20);\n          this.jobs.attr('x', adjustedWidth / 2);\n          this.date.attr('x', 20);\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass GroupedBarChart extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.handleToggle = this.handleToggle.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.orgsList = props.data[0].orgs;\n        this.selection = [];\n        this.state = {\n            colors: [],\n            selected: [],\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    // Methods\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => { this.init(); }, 500)\n        });\n    }\n\n    redirectToJobExplorer({ date, id }) {\n        let org_id;\n        if (id === -1) {\n            // disable clicking on \"others\" block\n            return;\n        }\n\n        org_id = id;\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const initialQueryParams = {\n            start_date: formattedDate,\n            end_date: formattedDate,\n            status: [ 'successful', 'failed', 'new', 'pending', 'waiting', 'error', 'canceled', 'running' ],\n            quick_date_range: 'custom',\n            org_id\n        };\n        const { strings, stringify } = formatQueryStrings(initialQueryParams);\n        const search = stringify(strings);\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    handleToggle(selectedId) {\n        if (this.selection.indexOf(selectedId) === -1) {\n            this.selection = [ ...this.selection, selectedId ];\n        } else if (this.selection.includes(selectedId)) {\n            this.selection = [ ...this.selection ].filter(s => s !== selectedId);\n        }\n\n        this.setState({ selected: this.selection });\n        this.draw();\n    }\n\n    init() {\n        // create the first 8 selected data points\n        if (this.selection.length === 0) {\n            this.orgsList.forEach((org, index) => {\n                if (index <= 7) {\n                    this.handleToggle(org.id);\n                }\n            });\n        }\n\n        // create our colors array to send to the Legend component\n        const colors = this.orgsList.reduce((colors, org) => {\n            colors.push({\n                name: org.org_name,\n                value: color(org.org_name),\n                id: org.id\n            });\n            return colors;\n        }, []);\n        this.setState({ colors });\n        this.draw();\n    }\n\n    draw() {\n        // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        let { data: unformattedData, timeFrame } = this.props;\n        const selected = this.selection;\n        const parseTime = d3.timeParse('%Y-%m-%d');\n        const data = unformattedData.reduce((formatted, { date, orgs: orgsList }) => {\n            date = parseTime(date);\n            const selectedOrgs = orgsList.filter(({ id }) => selected.includes(id));\n            selectedOrgs.map(org => {\n                org.date = date;\n            });\n            return formatted.concat({ date, selectedOrgs });\n        }, []);\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n        // x scale of entire chart\n        const x0 = d3\n        .scaleBand()\n        .range([ 0, width ])\n        .padding(0.35);\n        // x scale of individual grouped bars\n        const x1 = d3.scaleBand();\n        const y = d3.scaleLinear().range([ height, 0 ]);\n        // format our X Axis ticks\n        let ticks;\n        const maxTicks = Math.round(data.length / (timeFrame / 2));\n        ticks = data.map(d => d.date);\n        if (timeFrame === 31) {\n            ticks = data.map((d, i) =>\n                i % maxTicks === 0 ? d.date : undefined).filter(item => item);\n        }\n\n        const xAxis = d3\n        .axisBottom(x0)\n        .tickValues(ticks)\n        .tickFormat(d3.timeFormat('%-m/%-d'));\n\n        const yAxis = d3\n        .axisLeft(y)\n        .ticks(8)\n        .tickSize(-width, 0, 0);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n\n        const dates = data.map(d => d.date);\n        const selectedOrgNames = data[0].selectedOrgs.map(d => d.org_name);\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id\n        });\n        x0.domain(dates);\n        x1.domain(selectedOrgNames).range([ 0, x0.bandwidth() ]); // unsorted\n        y.domain([\n            0,\n            d3.max(data, date => d3.max(date.selectedOrgs, d => d.value * 1.15)) || 8\n        ]);\n\n        // add y axis\n        svg\n        .append('g')\n        .attr('class', 'y axis')\n        .call(yAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7')\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 6)\n        .attr('dy', '.71em')\n        .style('text-anchor', 'end')\n        .style('font-weight', 'bold')\n        .text('Value');\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Jobs across orgs');\n\n        // add x axis\n        svg\n        .append('g')\n        .attr('class', 'x axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(xAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' + width / 2 + ' ,' + (height + this.props.margin.top + 25) + ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n        // add the groups\n        let slice = svg.selectAll('.slice').data(data);\n        slice.exit().remove();\n\n        const enter = slice\n        .enter()\n        .append('g')\n        .attr('class', 'g foo')\n        .attr('transform', d => 'translate(' + x0(d.date) + ',0)');\n        slice = slice.merge(enter);\n        // add the individual bars\n        let bars = slice.selectAll('rect').data(function(d) {\n            return d.selectedOrgs;\n        });\n        bars.exit().remove();\n\n        const subEnter = bars\n        .enter()\n        .append('rect')\n        .attr('width', x1.bandwidth())\n        .attr('x', function(d) {\n            return x1(d.org_name);\n        }) // unsorted\n        .style('fill', function(d) {\n            return color(d.org_name);\n        })\n        .attr('y', function(d) {\n            return y(d.value);\n        })\n        .attr('height', function(d) {\n            return height - y(d.value);\n        })\n        .on('mouseover', function(d) {\n            d3.select(this).style('fill', d3.rgb(color(d.org_name)).darker(1));\n            tooltip.handleMouseOver();\n        })\n        .on('mousemove', tooltip.handleMouseOver)\n        .on('mouseout', function(d) {\n            d3.select(this).style('fill', color(d.org_name));\n            tooltip.handleMouseOut();\n        })\n        .on('click', this.redirectToJobExplorer);\n        bars = bars.merge(subEnter);\n    };\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        const { colors, selected } = this.state;\n        return (\n            <Wrapper>\n                <div id={ this.props.id } />\n                { colors.length > 0 && (\n                    <Legend\n                        id=\"d3-grouped-bar-legend\"\n                        data={ colors }\n                        selected={ selected }\n                        onToggle={ this.handleToggle }\n                        height=\"350px\"\n                    />\n                ) }\n            </Wrapper>\n        );\n    }\n}\n\nGroupedBarChart.propTypes = {\n    id: PropTypes.string,\n    isAccessible: PropTypes.bool,\n    data: PropTypes.array,\n    value: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    timeFrame: PropTypes.number,\n    history: PropTypes.object\n};\n\nexport default initializeChart(withRouter(GroupedBarChart));\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport { getTotal } from '../Utilities/helpers';\nimport Legend from '../Utilities/Legend';\nimport { pfmulti } from '../Utilities/colors';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        // defer drawing until we know the data shape\n        this.drawn = false;\n        // show the success rate or not\n        this.showSuccess = false;\n    }\n\n    draw(d) {\n        // chart1 has success rate data and chart2 does not ...\n        this.showSuccess = (d && d.data && 'success_rate' in d.data) ? true : false;\n        const boundingHeight = (this.showSuccess) ? 70 : 52;\n        const boundingWidth = (this.showSuccess) ? 120 : 108;\n\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBOx = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', boundingHeight)\n        .attr('width', boundingWidth)\n        .attr('fill', '#393f44');\n        this.orgName = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 0)\n        .text('Organization');\n        this.percentageTotal = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 16)\n        .text('0');\n        this.percentageSuccess = null;\n        if (this.showSuccess) {\n            this.percentageSuccess = this.toolTipBase\n            .append('text')\n            .attr('fill', 'white')\n            .attr('font-size', 12)\n            .attr('font-weight', 800)\n            .attr('x', 20)\n            .attr('y', 30)\n            .text('');\n        }\n    }\n\n  handleMouseOver = d => {\n      // treat draw() as a singleton to avoid a painted window effect\n      if (this.drawn !== true) {\n          this.draw(d);\n          this.drawn = true;\n      }\n\n      let perc;\n      let percSuccess;\n      let orgName;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      if (!d) {\n          return;\n      }\n\n      if (d && d.data) {\n          const maxLength = 16;\n          perc = d.data.percent;\n          percSuccess = d.data.success_rate;\n          orgName = d.data.name;\n          if (d.data.name.length > maxLength) {\n              orgName = d.data.name.slice(0, maxLength - 3).concat('...');\n          }\n      }\n\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n\n      this.percentageTotal.text('' + perc + '%');\n      if (percSuccess && this.percentageSuccess) {\n          this.percentageSuccess.text('(' + percSuccess + '% successful)');\n      }\n\n      this.orgName.text(' ' + orgName);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, -10) rotate(45)');\n          this.boundingBOx.attr('x', -125);\n          this.orgName.attr('x', -112);\n          this.percentageTotal.attr('x', -112);\n          if (this.showSuccess) {\n              this.percentageSuccess.attr('x', -112);\n          }\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, -10) rotate(45)');\n          this.boundingBOx.attr('x', 10);\n          this.orgName.attr('x', 20);\n          this.percentageTotal.attr('x', 20);\n          if (this.showSuccess) {\n              this.percentageSuccess.attr('x', 20);\n          }\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass PieChart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            colors: [],\n            timeout: null\n        };\n        this.draw = this.draw.bind(this);\n        this.init = this.init.bind(this);\n        this.resize = this.resize.bind(this);\n    }\n    // Methods\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => { this.init(); }, 500)\n        });\n    }\n    sortDescending(data) {\n    // descending\n        data.sort((a, b) =>\n            d3.descending(parseFloat(a.count), parseFloat(b.count))\n        );\n    }\n    init() {\n        const { data } = this.props;\n        const color = d3.scaleOrdinal(pfmulti);\n        // create our colors array to send to the Legend component\n        const colors = data.reduce((colors, org) => {\n            // format complement slice as \"Others\"\n            if (org.id === -1) {\n                colors.push({\n                    name: 'Others',\n                    value: color(org.name),\n                    count: Math.round(org.count)\n                });\n            } else {\n                colors.push({\n                    name: org.name,\n                    value: color(org.name),\n                    count: Math.round(org.count)\n                });\n            }\n\n            return colors;\n        }, []);\n        this.setState({ colors });\n        this.draw();\n    }\n    draw() {\n        const color = d3.scaleOrdinal(pfmulti);\n\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.bottom)\n        .append('g');\n\n        svg.append('g').attr('class', 'slices');\n        svg.append('g').attr('class', 'labels');\n        svg.append('g').attr('class', 'lines');\n        const radius = Math.min(width, height) / 2;\n        let { data: unfilteredData } = this.props;\n        const data = unfilteredData.filter(datum => datum.id !== -1);\n        const total = getTotal(data);\n        data.forEach(function(d) {\n            d.count = +d.count;\n            d.percent = +Math.round((d.count / total) * 100);\n        });\n        const donutTooltip = new Tooltip({\n            svg: '#' + this.props.id\n        });\n        const pie = d3\n        .pie()\n        .sort(null)\n        .value(d => d.count);\n        const arc = d3\n        .arc()\n        .outerRadius(radius - 10) // controls top positioning of chart\n        .innerRadius(0);\n\n        svg.attr(\n            'transform',\n            'translate(' +\n        (width + this.props.margin.left + this.props.margin.right) / 2 +\n        ',' +\n        (height + this.props.margin.top + this.props.margin.bottom) / 2 +\n        ')'\n        );\n\n        svg\n        .selectAll('path')\n        .data(pie(data))\n        .enter()\n        .append('path')\n        .attr('d', arc)\n        .attr('fill', (d, i) => color(i));\n\n        svg\n        .selectAll('path')\n        .on('mouseover', function(d, i) {\n            d3.select(this).style('fill', d3.rgb(color(i)).darker(1));\n            donutTooltip.handleMouseOver(d);\n        })\n        .on('mouseout', function(d, i) {\n            d3.select(this).style('fill', color(i));\n            donutTooltip.handleMouseOut();\n        })\n        .on('mousemove', donutTooltip.handleMouseOver);\n\n        svg.append('g').classed('labels', true);\n        svg.append('g').classed('lines', true);\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.data !== this.props.data) {\n            this.init();\n        }\n    }\n\n    render() {\n        const { colors } = this.state;\n        return (\n            <Wrapper>\n                <div id={ this.props.id } />\n                { colors.length > 0 && (\n                    <Legend\n                        id=\"d3-grouped-bar-legend\"\n                        data={ colors }\n                        selected={ null }\n                        onToggle={ null }\n                        height=\"300px\"\n                    />\n                ) }\n            </Wrapper>\n        );\n    }\n}\n\nPieChart.propTypes = {\n    id: PropTypes.string,\n    isAccessible: PropTypes.bool,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    timeFrame: PropTypes.number\n};\n\nexport default initializeChart(PieChart);\n","/*eslint camelcase: [\"error\", {properties: \"never\"}]*/\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport {\n    preflightRequest,\n    readJobsByDateAndOrg,\n    readJobRunsByOrg,\n    readJobEventsByOrg\n} from '../../Api';\n\nimport { Main, PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle,\n    FormSelect,\n    FormSelectOption\n} from '@patternfly/react-core';\n\nimport { FilterIcon } from '@patternfly/react-icons';\n\nimport GroupedBarChart from '../../Charts/GroupedBarChart';\nimport PieChart from '../../Charts/PieChart';\n\nconst CardTitle = styled(PFCardTitle)`\n  border-bottom: 2px solid #ebebeb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &&& {\n    min-height: 60px;\n    --pf-c-card--first-child--PaddingTop: 10px;\n    --pf-c-card__header--not-last-child--PaddingBottom: 10px;\n\n    h3 {\n      font-size: 0.875em;\n    }\n  }\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  overflow: hidden;\n\n  .pf-c-card {\n    width: 50%;\n    margin-top: 20px;\n    overflow: auto;\n  }\n\n  .pf-c-card:first-of-type {\n    margin-right: 20px;\n  }\n`;\n\nconst TopCard = styled(Card)`\n  min-height: 500px;\n`;\n\nconst title = (\n    <span style={ { fontWeight: 400 } }>\n    Automation Analytics\n        <span style={ { fontSize: '16px', fontWeight: 400 } }>\n            { ' ' }\n            <span style={ { margin: '0 10px' } }>|</span> Organization Statistics\n        </span>\n    </span>\n);\n\nconst timeFrameOptions = [\n    { value: 'please choose', label: 'Select Date Range', disabled: true },\n    { value: 7, label: 'Past Week', disabled: false },\n    { value: 14, label: 'Past 2 Weeks', disabled: false },\n    { value: 31, label: 'Past Month', disabled: false }\n];\n\nconst sortOptions = [\n    { value: 'please choose', label: 'Order By', disabled: true },\n    { value: 'count:desc', label: 'Top 5 Orgs', disabled: false },\n    { value: 'count:asc', label: 'Bottom 5 Orgs', disabled: false },\n    { value: 'all', label: 'All Orgs', disabled: false }\n];\n\nconst initialQueryParams = {\n    startDate: moment().subtract(1, 'month').format('YYYY-MM-DD'),\n    endDate: moment().format('YYYY-MM-DD'),\n    sort_by: 'count:desc',\n    limit: 5\n};\n\nconst OrganizationStatistics = () => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [ pieChart1Data, setPieChart1Data ] = useState([]);\n    const [ pieChart2Data, setPieChart2Data ] = useState([]);\n    const [ groupedBarChartData, setGroupedBarChartData ] = useState([]);\n    const [ timeframe, setTimeframe ] = useState(31);\n    const [ sortOrder, setSortOrder ] = useState('count:desc');\n    const [ firstRender, setFirstRender ] = useState(true);\n    const [ isLoading, setIsLoading ] = useState(true);\n    const {\n        queryParams,\n        setEndDate,\n        setStartDate,\n        setSortBy,\n        setLimit\n    } = useQueryParams(initialQueryParams);\n\n    const setLimitValue = (val) => {\n        let limit;\n        if (val === 'count:asc' || val === 'count:desc') {\n            limit = 5;\n        } else {\n            limit = 200;\n        }\n\n        return setLimit(limit);\n    };\n\n    useEffect(() => {\n        let ignore = false;\n        const fetchEndpoints = () => {\n            return Promise.all(\n                [\n                    readJobsByDateAndOrg({ params: queryParams }),\n                    readJobRunsByOrg({ params: queryParams }),\n                    readJobEventsByOrg({ params: queryParams })\n                ].map((p) => p.catch(() => []))\n            );\n        };\n\n        const update = async () => {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            fetchEndpoints().then(\n                ([\n                    { dates: groupedBarChartData = []},\n                    { usages: pieChart1Data = []},\n                    { usages: pieChart2Data = []}\n                ]) => {\n                    setGroupedBarChartData(groupedBarChartData);\n                    setPieChart1Data(pieChart1Data);\n                    setPieChart2Data(pieChart2Data);\n                    setIsLoading(false);\n                }\n            );\n        };\n\n        async function initializeWithPreflight() {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            await preflightRequest().catch((error) => {\n                setPreFlightError({ preflightError: error });\n            });\n            fetchEndpoints().then(\n                ([\n                    { dates: groupedBarChartData = []},\n                    { usages: pieChart1Data = []},\n                    { usages: pieChart2Data = []}\n                ]) => {\n                    if (!ignore) {\n                        setGroupedBarChartData(groupedBarChartData);\n                        setPieChart1Data(pieChart1Data);\n                        setPieChart2Data(pieChart2Data);\n                        setFirstRender(false);\n                        setIsLoading(false);\n                    }\n                }\n            );\n        }\n\n        if (firstRender) {\n            initializeWithPreflight();\n            return () => (ignore = true);\n        } else {\n            update();\n        }\n    }, [ queryParams ]);\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={ title } />\n            </PageHeader>\n            { preflightError && (\n                <Main>\n                    <EmptyState { ...preflightError } />\n                </Main>\n            ) }\n            { !preflightError && (\n        <>\n          <Main style={ { paddingBottom: '0' } }>\n              <Card>\n                  <CardTitle style={ { paddingBottom: '0', paddingTop: '0' } }>\n                      <h2>\n                          <FilterIcon style={ { marginRight: '10px' } } />\n                  Filter\n                      </h2>\n                      <div style={ { display: 'flex', justifyContent: 'flex-end' } }>\n                          <FormSelect\n                              name=\"sortOrder\"\n                              value={ sortOrder }\n                              onChange={ (value) => {\n                                  setSortOrder(value);\n                                  setSortBy(value);\n                                  setLimitValue(value);\n                              } }\n                              aria-label=\"Select Cluster\"\n                              style={ { margin: '2px 10px' } }\n                          >\n                              { sortOptions.map(({ value, label, disabled }, index) => (\n                                  <FormSelectOption\n                                      isDisabled={ disabled }\n                                      key={ index }\n                                      value={ value }\n                                      label={ label }\n                                  />\n                              )) }\n                          </FormSelect>\n                          <FormSelect\n                              name=\"timeframe\"\n                              value={ timeframe }\n                              onChange={ (value) => {\n                                  setTimeframe(+value);\n                                  setEndDate();\n                                  setStartDate(+value);\n                              } }\n                              aria-label=\"Select Date Range\"\n                              style={ { margin: '2px 10px' } }\n                          >\n                              { timeFrameOptions.map((option, index) => (\n                                  <FormSelectOption\n                                      isDisabled={ option.disabled }\n                                      key={ index }\n                                      value={ option.value }\n                                      label={ option.label }\n                                  />\n                              )) }\n                          </FormSelect>\n                      </div>\n                  </CardTitle>\n              </Card>\n          </Main>\n          <Main>\n              <TopCard>\n                  <CardTitle>\n                      <h2>Organization Status</h2>\n                  </CardTitle>\n                  <CardBody>\n                      { isLoading && <LoadingState /> }\n                      { !isLoading && groupedBarChartData.length <= 0 && <NoData /> }\n                      { !isLoading && groupedBarChartData.length > 0 && (\n                          <GroupedBarChart\n                              margin={ { top: 20, right: 20, bottom: 50, left: 50 } }\n                              id=\"d3-grouped-bar-chart-root\"\n                              data={ groupedBarChartData }\n                              timeFrame={ timeframe }\n                          />\n                      ) }\n                  </CardBody>\n              </TopCard>\n              <CardContainer>\n                  <Card>\n                      <CardBody style={ { padding: 0 } }>\n                          <CardTitle style={ { padding: 0 } }>\n                              <h2 style={ { marginLeft: '20px' } }>\n                      Job Runs by Organization\n                              </h2>\n                          </CardTitle>\n                          { isLoading && <LoadingState /> }\n                          { !isLoading && pieChart1Data.length <= 0 && <NoData /> }\n                          { !isLoading && pieChart1Data.length > 0 && (\n                              <PieChart\n                                  margin={ { top: 20, right: 20, bottom: 0, left: 20 } }\n                                  id=\"d3-donut-1-chart-root\"\n                                  data={ pieChart1Data }\n                                  timeFrame={ timeframe }\n                              />\n                          ) }\n                      </CardBody>\n                  </Card>\n                  <Card>\n                      <CardBody style={ { padding: 0 } }>\n                          <CardTitle style={ { padding: 0 } }>\n                              <h2 style={ { marginLeft: '20px' } }>\n                      Usage by Organization (Tasks)\n                              </h2>\n                          </CardTitle>\n                          { isLoading && <LoadingState /> }\n                          { !isLoading && pieChart2Data.length <= 0 && <NoData /> }\n                          { !isLoading && pieChart2Data.length > 0 && (\n                              <PieChart\n                                  margin={ { top: 20, right: 20, bottom: 0, left: 20 } }\n                                  id=\"d3-donut-2-chart-root\"\n                                  data={ pieChart2Data }\n                                  timeFrame={ timeframe }\n                              />\n                          ) }\n                      </CardBody>\n                  </Card>\n              </CardContainer>\n          </Main>\n        </>\n            ) }\n        </React.Fragment>\n    );\n};\n\nexport default OrganizationStatistics;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        this.draw();\n    }\n\n    formatDollars(amount) {\n        return parseFloat(amount).toFixed(2).toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    };\n\n    draw() {\n        this.width = 125;\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 125;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, 0) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', 92)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.name = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', -2)\n        .text('Template name');\n        this.savings = this.toolTipBase\n        .append('text')\n        .attr('x', 20)\n        .attr('y', 52)\n        .attr('font-size', 12)\n        .attr('font-weight', 'bold')\n        .attr('fill', 'white')\n        .text('Total savings $0');\n        this.manualCost = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', 16)\n        .text('Manual cost $0');\n        this.automationCost = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', 34)\n        .text('Automation cost $0');\n    }\n\n    handleMouseOver = d => {\n        let name;\n        let savings;\n        let manualCost;\n        let automationCost;\n        const scrollLeftOffset = d3.select('#d3-roi-chart-root').node().scrollLeft;\n        const x =\n            d3.event.pageX -\n            d3\n            .select(this.svg)\n            .node()\n            .getBoundingClientRect().x +\n            10 + scrollLeftOffset;\n        const y =\n            d3.event.pageY -\n            d3\n            .select(this.svg)\n            .node()\n            .getBoundingClientRect().y -\n            30;\n        if (!d) {\n            return;\n        } else {\n            savings = this.formatDollars(d.delta);\n            name = d.name;\n            manualCost = this.formatDollars(d.calculations[0].cost);\n            automationCost = this.formatDollars(d.calculations[1].cost);\n        }\n\n        const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n        const chartWidth = d3\n        .select(this.svg + '> svg')\n        .node()\n        .getBoundingClientRect().width;\n        const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n        const flipped = overflow < (x / chartWidth) * 100;\n        this.name.text('' + name);\n        this.savings.text('Total savings $' + savings);\n        this.manualCost.text('Manual Cost $' + manualCost);\n        this.automationCost.text('Automation Cost $' + automationCost);\n        this.nameWidth = this.name.node().getComputedTextLength();\n        this.savingsWidth = this.savings.node().getComputedTextLength();\n        this.manualCostWidth = this.manualCost.node().getComputedTextLength();\n        this.automationCostWidth = this.automationCost.node().getComputedTextLength();\n        this.widestTextElem = d3.max([ this.nameWidth, this.savingsWidth, this.automationCostWidth, this.manualCostWidth ]);\n\n        const maxTextPerc = this.widestTextElem / this.boxWidth * 100;\n        const threshold = 85;\n        const overage = maxTextPerc / threshold;\n        let adjustedWidth;\n        if (maxTextPerc > threshold) {\n            adjustedWidth = this.boxWidth * overage;\n        } else {\n            adjustedWidth = this.boxWidth;\n        }\n\n        this.boundingBox.attr('width', adjustedWidth);\n        this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n        if (flipped) {\n            this.toolTipPoint.attr('transform', 'translate(-20, 15) rotate(45)');\n            this.boundingBox.attr('x', -adjustedWidth - 20);\n            this.name.attr('x', -(toolTipWidth - 7));\n            this.savings.attr('x', -(toolTipWidth - 7));\n            this.manualCost.attr('x', -(toolTipWidth - 7));\n            this.automationCost.attr('x', -(toolTipWidth - 7));\n        } else {\n            this.toolTipPoint.attr('transform', 'translate(10, 15) rotate(45)');\n            this.boundingBox.attr('x', 10);\n            this.name.attr('x', 20);\n            this.savings.attr('x', 20);\n            this.manualCost.attr('x', 20);\n            this.automationCost.attr('x', 20);\n        }\n\n        this.toolTipBase.style('opacity', 1);\n        this.toolTipBase.interrupt();\n    };\n\n    handleMouseOut = () => {\n        this.toolTipBase\n        .transition()\n        .delay(15)\n        .style('opacity', 0)\n        .style('pointer-events', 'none');\n    };\n}\n\nclass TopTemplatesSavings extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.state = {\n            timeout: null\n        };\n    }\n\n    // Methods\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => {\n                this.init();\n            }, 500)\n        });\n    }\n\n    init() {\n        this.draw();\n    }\n\n    draw() {\n        // Use PF chart color\n        const color = d3.scaleOrdinal([ '#0066CC' ]); //blue\n        // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        let { data: unfiltered, selected } = this.props;\n        const data = unfiltered.filter(({ id }) => !selected.includes(id));\n        data.forEach(datum => {\n            datum.calculations.forEach(row => {\n                row.name = datum.name;\n            });\n        });\n        let width;\n        // adjust chart width to support larger datasets\n        if (data.length >= 15) {\n            const containerWidth = d3.select('.automation-wrapper').node();\n            width = containerWidth.getBoundingClientRect().width - this.props.margin.left - this.props.margin.right;\n        } else {\n            width = this.props.getWidth();\n        }\n\n        const height = this.props.getHeight();\n        const x = d3\n        .scaleBand()\n        .rangeRound([ 0, width ])\n        .padding(0.45);\n        const y = d3.scaleLinear().range([ height, 0 ]);\n        // format our X Axis ticks\n        let ticks;\n        ticks = data.map(d => d.name);\n        const formatYAxisValue = d3.format('.2s');\n        const xAxis = d3.axisBottom(x).tickValues(ticks);\n\n        const yAxis = d3\n        .axisLeft(y)\n        .ticks(8)\n        .tickFormat(d => formatYAxisValue(d).replace('G', 'B'))\n        .tickSize(-width, 0, 0);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n\n        const taskNames = data.map(d => d.name);\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id\n        });\n        x.domain(taskNames);\n        y.domain([\n            0,\n            d3.max(data, d => d.delta * 1.15) || 8\n        ]);\n\n        // add y axis\n        svg\n        .append('g')\n        .attr('class', 'y axis')\n        .call(yAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7')\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 6)\n        .attr('dy', '.71em')\n        .style('text-anchor', 'end')\n        .style('font-weight', 'bold')\n        .text('Value');\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Savings per template ($)');\n\n        // add x axis\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(xAxis)\n        .selectAll('text')\n        .style('text-anchor', 'start')\n        .attr('dx', '0.75em')\n        .attr('dy', -x.bandwidth() / 1.45 - 5)\n        .attr('transform', 'rotate(-90)');\n\n        svg.selectAll('.x-axis line').attr('stroke', 'transparent');\n\n        svg.selectAll('.bar')\n        .data(data)\n        .enter().append('rect')\n        .attr('x', d => x(d.name))\n        .attr('width', x.bandwidth())\n        .attr('y', d => y(d.delta))\n        .style('fill', d => color(d.type))\n        .attr('height', d => height - y(d.delta))\n        .on('mouseover', function(d) {\n            d3.select(this).style('fill', d3.rgb(color(d.type)).darker(1));\n            tooltip.handleMouseOver(d);\n        })\n        .on('mousemove', tooltip.handleMouseOver)\n        .on('mouseout', function(d) {\n            d3.select(this).style('fill', color(d.type));\n            tooltip.handleMouseOut();\n        });\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate() {\n        this.init();\n    }\n\n    render() {\n        return <div id={ this.props.id } />;\n    }\n}\n\nTopTemplatesSavings.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    selected: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func\n};\n\nexport default initializeChart(TopTemplatesSavings);\n","/* eslint-disable camelcase */\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport styled from 'styled-components';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport { preflightRequest, readROI } from '../../Api';\nimport { Paths } from '../../paths';\nimport { formatQueryStrings } from '../../Utilities/formatQueryStrings';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Button,\n    Card,\n    CardBody,\n    CardTitle,\n    FormSelect,\n    FormSelectOption,\n    InputGroup,\n    InputGroupText,\n    TextInput,\n    Title,\n    Tooltip,\n    TooltipPosition\n} from '@patternfly/react-core';\n\nimport {\n    DollarSignIcon,\n    FilterIcon,\n    InfoCircleIcon,\n    ToggleOnIcon,\n    ToggleOffIcon\n} from '@patternfly/react-icons';\n\nimport TopTemplatesSavings from '../../Charts/ROITopTemplates';\n\nimport {\n    calculateDelta,\n    convertSecondsToMins,\n    convertMinsToSeconds,\n    convertSecondsToHours,\n    convertWithCommas,\n    formatPercentage\n} from '../../Utilities/helpers';\n\nconst FilterCardTitle = styled(CardTitle)`\n  border-bottom: 2px solid #ebebeb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &&& {\n    min-height: 60px;\n    --pf-c-card--first-child--PaddingTop: 10px;\n    --pf-c-card__header--not-last-child--PaddingBottom: 10px;\n\n    h3 {\n      font-size: 0.875em;\n    }\n  }\n`;\n\nconst defaultAvgRunVal = 3600; // 1 hr in seconds\nconst defaultCostAutomation = 20;\nconst defaultCostManual = 50;\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst TemplateDetail = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  div,\n  em {\n    padding-right: 5px;\n  }\n\n  @media (max-width: 1490px) {\n    display: block;\n\n    em {\n      padding: 10px 0;\n      display: block;\n    }\n  }\n`;\n\nconst TemplateDetailSubTitle = styled.em`\n  color: var(--pf-global--Color--dark-200);\n`;\n\nconst TooltipWrapper = styled.div`\n  p {\n    text-align: left;\n  }\n`;\n\nconst IconGroup = styled.div`\n  & svg {\n    fill: var(--pf-global--Color--dark-200);\n\n    :hover {\n      cursor: pointer;\n    }\n\n    :first-of-type {\n      margin-right: 10px;\n      margin-left: 10px;\n\n      @media (max-width: 1350px) {\n        margin-left: 0;\n      }\n    }\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 5fr 2fr;\n  height: 100%;\n`;\n\nconst WrapperLeft = styled.div`\n  flex: 5;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n`;\n\nconst WrapperRight = styled.div`\n  flex: 2;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst title = (\n    <span style={ { fontWeight: 400 } }>\n    Automation Analytics\n        <span style={ { fontSize: '16px', fontWeight: 400 } }>\n            { ' ' }\n            <span style={ { margin: '0 10px' } }>|</span> Automation calculator\n        </span>\n    </span>\n);\n\n/* helper variables for further date ranges */\nconst pastYear = moment().subtract(1, 'year');\nconst pastYTD = moment().startOf('year');\nconst pastQuarter = moment().startOf('quarter');\nconst pastMonth = moment().subtract(1, 'month');\n\n/* these are the buckets of time the user's are able to select ... */\nconst timeFrameOptions = [\n    { value: 'please choose', label: 'Select date range', disabled: true },\n    { value: pastYear.format('YYYY-MM-DD'), label: 'Past year', disabled: false },\n    { value: pastYTD.format('YYYY-MM-DD'), label: 'Past year to date', disabled: false },\n    { value: pastQuarter.format('YYYY-MM-DD'), label: 'Past quarter', disabled: false },\n    { value: pastMonth.format('YYYY-MM-DD'), label: 'Past month', disabled: false }\n];\n\n/* set the default bucket to 365 days */\nconst initialQueryParams = {\n    startDate: pastYear.format('YYYY-MM-DD'),\n    endDate: moment().format('YYYY-MM-DD')\n};\n\n// create our array to feed to D3\nexport const formatData = (response, defaults) => {\n    return response.reduce(\n        (\n            formatted,\n            {\n                name,\n                template_id: id,\n                successful_run_count,\n                successful_elapsed_sum,\n                successful_host_run_count_avg,\n                successful_host_run_count,\n                elapsed_sum,\n                failed_elapsed_sum,\n                orgs,\n                clusters,\n                template_automation_percentage\n            }\n        ) => {\n            formatted.push({\n                name,\n                id,\n                run_count: successful_run_count,\n                host_count: successful_host_run_count_avg || 0,\n                successful_host_run_count,\n                delta: 0,\n                isActive: true,\n                calculations: [\n                    {\n                        type: 'Manual',\n                        avg_run: defaults.defaultAvgRunVal,\n                        cost: 0\n                    },\n                    {\n                        type: 'Automated',\n                        avg_run: successful_elapsed_sum || 0,\n                        cost: 0\n                    }\n                ],\n                orgs,\n                clusters,\n                elapsed_sum,\n                failed_elapsed_sum,\n                successful_elapsed_sum,\n                template_automation_percentage\n            });\n            return formatted;\n        },\n        []\n    );\n};\n\nexport const updateData = (seconds, id, data) => {\n    let updatedData = [ ...data ];\n    updatedData.map((datum) => {\n        if (datum.id === id) {\n            // Update manual calculations\n            datum.calculations[0].avg_run = seconds;\n            datum.calculations[0].total = seconds * datum.successful_host_run_count;\n        }\n    });\n    return updatedData;\n};\n\nexport const handleManualTimeChange = (minutes) => {\n    const seconds = convertMinsToSeconds(minutes);\n    return seconds;\n};\n\nexport const formatSelectedIds = (arr, id) => {\n    let selected;\n    if (arr.includes(id)) {\n        selected = [ ...arr ].filter((s) => s !== id);\n    } else {\n        selected = [ ...arr, id ];\n    }\n\n    return selected;\n};\n\nexport const handleToggle = (id, selected) => {\n    const currentSelection = [ ...selected ];\n    const newSelection = formatSelectedIds(currentSelection, id);\n    return newSelection;\n};\n\nexport const computeTotalSavings = (formattedData, costAutomation, costManual) => {\n    let data = [ ...formattedData ];\n    let total = 0;\n    let costAutomationPerHour;\n    let costManualPerHour;\n\n    data.forEach((datum) => {\n        costAutomationPerHour =\n            convertSecondsToHours(datum.successful_elapsed_sum) * costAutomation;\n        costManualPerHour =\n            convertSecondsToHours(datum.calculations[0].avg_run) *\n            datum.successful_host_run_count *\n            costManual;\n        total += calculateDelta(costAutomationPerHour, costManualPerHour);\n        datum.delta = calculateDelta(costAutomationPerHour, costManualPerHour);\n        datum.calculations[0].cost = costManualPerHour;\n        datum.calculations[1].cost = costAutomationPerHour;\n    });\n\n    return total;\n};\n\nexport const floatToStringWithCommas = (total) => {\n    return total\n    .toFixed(2)\n    .toString()\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n\nexport const filterDataBySelectedIds = (unfilteredData, selectedIds) => {\n    const filteredData = unfilteredData.filter(\n        ({ id }) => {\n            return !selectedIds.includes(id);\n        }\n    );\n    return filteredData;\n};\n\nexport const setTemplatesIsActive = (templatesList, selectedIds) => {\n    templatesList.map((l) => {\n        if (selectedIds.includes(l.id)) {\n            l.isActive = false;\n        } else {\n            l.isActive = true;\n        }\n    });\n    return templatesList;\n};\n\nconst AutomationCalculator = ({ history }) => {\n\n    const [ isLoading, setIsLoading ] = useState(true);\n    const [ costManual, setCostManual ] = useState(defaultCostManual);\n    const [ costAutomation, setCostAutomation ] = useState(defaultCostAutomation);\n    const [ totalSavings, setTotalSavings ] = useState(0);\n    const [ unfilteredData, setUnfilteredData ] = useState([]);\n    const [ formattedData, setFormattedData ] = useState([]);\n    const [ templatesList, setTemplatesList ] = useState([]);\n    const [ selectedIds, setSelectedIds ] = useState([]);\n    const [ preflightError, setPreFlightError ] = useState(null);\n\n    // default to the past year (n - 365 days)\n    const [ roiTimeFrame, setRoiTimeFrame ] = useState(timeFrameOptions[1].value);\n    const { queryParams, setStartDateAsString } = useQueryParams(\n        initialQueryParams\n    );\n\n    const handleOnChange = (value) => {\n        setStartDateAsString(value);\n        setRoiTimeFrame(value);\n    };\n\n    useEffect(() => {\n        const total = computeTotalSavings(formattedData, costAutomation, costManual);\n        const totalWithCommas = floatToStringWithCommas(total);\n        setTotalSavings('$' + totalWithCommas);\n    }, [ formattedData, costAutomation, costManual ]);\n\n    useEffect(() => {\n        const filteredData = filterDataBySelectedIds(unfilteredData, selectedIds);\n        setTemplatesIsActive(templatesList, selectedIds);\n        setFormattedData(filteredData);\n    }, [ selectedIds ]);\n\n    useEffect(() => {\n        let ignore = false;\n        const getData = () => {\n            const result = readROI({ params: queryParams }).catch(() => []);\n            return result;\n        };\n\n        async function initializeWithPreflight() {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            await preflightRequest().catch((error) => {\n                setPreFlightError({ preflightError: error });\n            });\n            getData().then(({ templates: roiData = []}) => {\n                if (!ignore) {\n                    const formatted = formatData(roiData, {\n                        defaultAvgRunVal,\n                        defaultCostAutomation,\n                        defaultCostManual\n                    });\n                    setUnfilteredData(formatted);\n                    setFormattedData(formatted);\n                    setTemplatesList(formatted);\n                    setIsLoading(false);\n                }\n            });\n        }\n\n        initializeWithPreflight();\n        return () => (ignore = true);\n    }, [ queryParams ]);\n\n    const redirectToJobExplorer = (templateId) => {\n        const { jobExplorer } = Paths;\n        const initialQueryParams = {\n            template_id: templateId,\n            status: [ 'successful' ],\n            job_type: [ 'job' ],\n            quick_date_range: 'last_30_days'\n        };\n\n        const { strings, stringify } = formatQueryStrings(initialQueryParams);\n        const search = stringify(strings);\n        history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    return (\n    <>\n      <PageHeader style={ { flex: '0' } }>\n          <PageHeaderTitle title={ title } />\n      </PageHeader>\n      { preflightError && (\n          <Main>\n              <Card>\n                  <CardBody>\n                      <EmptyState { ...preflightError } />\n                  </CardBody>\n              </Card>\n          </Main>\n      ) }\n      { !preflightError && (\n        <>\n          <Main style={ { paddingBottom: '0' } }>\n              <Card>\n                  <FilterCardTitle style={ { paddingBottom: '0', paddingTop: '0' } }>\n                      <h2>\n                          <FilterIcon style={ { marginRight: '10px' } } />\n                  Filter\n                      </h2>\n                      <div style={ { display: 'flex', justifyContent: 'flex-end' } }>\n                          <FormSelect\n                              name=\"roiTimeFrame\"\n                              value={ roiTimeFrame }\n                              onChange={ handleOnChange }\n                              aria-label=\"Select Date Range\"\n                              style={ { margin: '2px 10px' } }\n                          >\n                              { timeFrameOptions.map((option, index) => (\n                                  <FormSelectOption\n                                      isDisabled={ option.disabled }\n                                      key={ index }\n                                      value={ option.value }\n                                      label={ option.label }\n                                  />\n                              )) }\n                          </FormSelect>\n                      </div>\n                  </FilterCardTitle>\n              </Card>\n          </Main>\n          <Wrapper className=\"automation-wrapper\">\n              <WrapperLeft>\n                  <Main style={ { paddingBottom: '0' } }>\n                      <Card>\n                          <CardTitle>Automation savings</CardTitle>\n                          <CardBody>\n                              { isLoading && !preflightError && <LoadingState /> }\n                              { !isLoading && formattedData.length <= 0 && <NoData /> }\n                              { formattedData.length > 0 && !isLoading && (\n                      <>\n                        <TopTemplatesSavings\n                            margin={ { top: 20, right: 20, bottom: 20, left: 70 } }\n                            id=\"d3-roi-chart-root\"\n                            data={ formattedData }\n                            selected={ selectedIds }\n                        />\n                        <p style={ { textAlign: 'center' } }>Templates</p>\n                      </>\n                              ) }\n                          </CardBody>\n                      </Card>\n                  </Main>\n                  <Main>\n                      <Card style={ { height: '100%' } }>\n                          <CardTitle>Automation formula</CardTitle>\n                          <CardBody>\n                              <p>\n                                  <b>Manual cost for template x</b> =\n                                  <em>\n                        (time for a manual run on one host * (sum of all hosts\n                        across all job runs) ) * cost per hour\n                                  </em>\n                              </p>\n                              <p>\n                                  <b>Automation cost for template x</b> =\n                                  <em>\n                        cost of automation per hour * sum of total elapsed hours\n                        for a template\n                                  </em>\n                              </p>\n                              <p>\n                                  <b>Savings</b> =\n                                  <em>\n                        Sum of (manual cost - automation cost) across all\n                        templates\n                                  </em>\n                              </p>\n                          </CardBody>\n                      </Card>\n                  </Main>\n              </WrapperLeft>\n              <WrapperRight>\n                  <Main style={ { paddingBottom: '0', paddingLeft: '0' } }>\n                      <Card>\n                          <CardTitle style={ { paddingBottom: '0' } }>\n                    Total savings\n                          </CardTitle>\n                          <CardBody>\n                              <Title\n                                  headingLevel=\"h3\"\n                                  size=\"3xl\"\n                                  style={ { color: 'var(--pf-global--success-color--200)' } }\n                              >\n                                  { totalSavings }\n                              </Title>\n                          </CardBody>\n                      </Card>\n                  </Main>\n                  <Main style={ { paddingBottom: '0', paddingLeft: '0' } }>\n                      <Card>\n                          <CardTitle style={ { paddingBottom: '10px' } }>\n                    Calculate your automation\n                          </CardTitle>\n                          <CardBody>\n                              <InputAndText>\n\n                                  <p>Manual cost of automation</p>\n                                  <em\n                                      style={ { color: 'var(--pf-global--Color--dark-200)' } }\n                                  >\n                        (e.g. average salary of mid-level SE)\n\n                                  </em>\n                                  <InputGroup style={ { width: '50%' } }>\n                                      <InputGroupText>\n                                          <DollarSignIcon />\n                                      </InputGroupText>\n                                      <TextInput\n                                          id=\"manual-cost\"\n                                          type=\"number\"\n                                          step=\"any\"\n                                          min=\"0\"\n                                          aria-label=\"manual-cost\"\n                                          value={ parseFloat(costManual) }\n                                          onChange={ (e) => setCostManual(e) }\n                                      />\n                                      <InputGroupText>/hr</InputGroupText>\n                                  </InputGroup>\n                              </InputAndText>\n                              <InputAndText style={ { paddingTop: '10px' } }>\n                                  <p>Automated process cost</p>\n                                  <InputGroup style={ { width: '50%' } }>\n                                      <InputGroupText>\n                                          <DollarSignIcon />\n                                      </InputGroupText>\n                                      <TextInput\n                                          id=\"automation-cost\"\n                                          type=\"number\"\n                                          step=\"any\"\n                                          min=\"0\"\n                                          aria-label=\"automation-cost\"\n                                          value={ parseFloat(costAutomation) }\n                                          onChange={ (e) => setCostAutomation(e) }\n                                      />\n                                      <InputGroupText>/hr</InputGroupText>\n                                  </InputGroup>\n                              </InputAndText>\n                          </CardBody>\n                      </Card>\n                  </Main>\n                  <Main\n                      style={ {\n                          display: 'flex',\n                          flexDirection: 'column',\n                          flex: '1 1 0',\n                          paddingLeft: '0'\n                      } }\n                  >\n                      <Card style={ { overflow: 'auto', flex: '1 1 0' } }>\n                          <CardTitle>Top templates</CardTitle>\n                          <CardBody>\n                              <p>\n                      Enter the time it takes to manually perform the tasks that\n                      the following templates automate.\n                              </p>\n                              { templatesList.map((data) => (\n                                  <div key={ data.id }>\n                                      <Tooltip content={ 'Click for list of jobs in the past month' } >\n                                          <Button\n                                              style={ { padding: '15px 0 10px' } }\n                                              component=\"a\"\n                                              onClick={ () => redirectToJobExplorer(data.id) }\n                                              variant=\"link\"\n                                          >\n                                              { data.name }\n                                          </Button>\n                                      </Tooltip>\n                                      <TemplateDetail>\n                                          <InputAndText key={ data.id }>\n                                              <InputGroup>\n                                                  <TextInput\n                                                      id={ data.id }\n                                                      type=\"number\"\n                                                      aria-label=\"time run manually\"\n                                                      value={ convertSecondsToMins(\n                                                          data.calculations[0].avg_run\n                                                      ) }\n                                                      onChange={ (e) => {\n                                                          const seconds = handleManualTimeChange(e);\n                                                          const updated = updateData(\n                                                              seconds,\n                                                              data.id,\n                                                              formattedData\n                                                          );\n                                                          setFormattedData(updated);\n                                                      } }\n                                                      isDisabled={ !data.isActive }\n                                                  />\n                                                  <InputGroupText>min</InputGroupText>\n                                              </InputGroup>\n                                          </InputAndText>\n                                          <TemplateDetailSubTitle>\n                            x { data.run_count } runs, { data.host_count } hosts\n                                          </TemplateDetailSubTitle>\n                                          <IconGroup>\n                                              <Tooltip\n                                                  position={ TooltipPosition.top }\n                                                  entryDelay={ 50 }\n                                                  exitDelay={ 50 }\n                                                  content={\n                                                      <TooltipWrapper>\n                                                          <p>\n                                                              <b>Total elapsed sum</b>:{ ' ' }\n                                                              { data.elapsed_sum.toFixed(2) }s\n                                                          </p>\n                                                          <p>\n                                                              <b>Success elapsed sum</b>:{ ' ' }\n                                                              { data.successful_elapsed_sum.toFixed(2) }s\n                                                          </p>\n                                                          <p>\n                                                              <b>Failed elapsed sum</b>:{ ' ' }\n                                                              { data.failed_elapsed_sum.toFixed(2) }s\n                                                          </p>\n                                                          <p>\n                                                              <b>Automation percentage</b>:{ ' ' }\n                                                              { formatPercentage(\n                                                                  data.template_automation_percentage.toFixed(\n                                                                      2\n                                                                  )\n                                                              ) }\n                                                          </p>\n                                                          <p>\n                                                              <b>Associated organizations</b>:{ ' ' }\n                                                              <span key={ data.id }>\n                                                                  { convertWithCommas(data.orgs, 'org_name') }\n                                                              </span>\n                                                          </p>\n                                                          <p>\n                                                              <b>Associated clusters</b>:{ ' ' }\n                                                              <span key={ data.id }>\n                                                                  { convertWithCommas(\n                                                                      data.clusters,\n                                                                      'cluster_name'\n                                                                  ) }\n                                                              </span>\n                                                          </p>\n                                                      </TooltipWrapper>\n                                                  }\n                                              >\n                                                  <InfoCircleIcon />\n                                              </Tooltip>\n                                              { data.isActive === true && (\n                                                  <ToggleOnIcon\n                                                      onClick={ () => {\n                                                          const selected = handleToggle(\n                                                              data.id,\n                                                              selectedIds\n                                                          );\n                                                          setSelectedIds(selected);\n                                                      } }\n                                                  />\n                                              ) }\n                                              { data.isActive === false && (\n                                                  <ToggleOffIcon\n                                                      onClick={ () => {\n                                                          const selected = handleToggle(\n                                                              data.id,\n                                                              selectedIds\n                                                          );\n                                                          setSelectedIds(selected);\n                                                      } }\n                                                  />\n                                              ) }\n                                          </IconGroup>\n                                      </TemplateDetail>\n                                      <p style={ { color: '#486B00' } }>\n                          ${ data.delta.toFixed(2) }\n                                      </p>\n                                  </div>\n                              )) }\n                          </CardBody>\n                      </Card>\n                  </Main>\n              </WrapperRight>\n          </Wrapper>\n        </>\n      ) }\n    </>\n    );\n};\n\nexport default AutomationCalculator;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n    Alert,\n    AlertGroup,\n    AlertVariant\n} from '@patternfly/react-core';\nimport { ArrowIcon as PFArrowIcon } from '@patternfly/react-icons';\nimport LoadingState from '../Components/LoadingState';\nimport { capitalize } from '../Utilities/helpers';\n\nconst ArrowIcon = styled(PFArrowIcon)`\n  margin-left: 7px;\n`;\n\nconst AllNotificationTemplate = ({ notifications }) =>\n    notifications.map(\n        ({ date, message, label, notification_id: id, tower_url: url }) => {\n            if (label === '' || label === 'notice') {\n                return (\n                    <Alert\n                        title={ capitalize(label) }\n                        variant={ AlertVariant.default }\n                        isInline\n                        key={ date + '-' + id }\n                        style={ { marginTop: 'var(--pf-c-alert-group__item--MarginTop)' } }\n                    >\n                        { message }{ ' ' }\n                        { url ? (\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                                <ArrowIcon />\n                            </a>\n                        ) : null }\n                    </Alert>\n                );\n            }\n\n            if (label === 'error') {\n                return (\n                    <Alert\n                        title={ capitalize(label) }\n                        variant={ AlertVariant.danger }\n                        isInline\n                        key={ date + '-' + id }\n                        style={ { marginTop: 'var(--pf-c-alert-group__item--MarginTop)' } }\n                    >\n                        { message }{ ' ' }\n                        { url ? (\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                                <ArrowIcon />\n                            </a>\n                        ) : null }\n                    </Alert>\n                );\n            }\n\n            if (label === 'warning') {\n                return (\n                    <Alert\n                        title={ capitalize(label) }\n                        variant={ AlertVariant.warning }\n                        isInline\n                        key={ date + '-' + id }\n                        style={ { marginTop: 'var(--pf-c-alert-group__item--MarginTop)' } }\n                    >\n                        { message }{ ' ' }\n                        { url ? (\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                                <ArrowIcon />\n                            </a>\n                        ) : null }\n                    </Alert>\n                );\n            }\n        }\n    );\n\nconst ErrorNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'error')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <Alert\n            title={ capitalize(label) }\n            variant={ AlertVariant.danger }\n            isInline\n            key={ date + '-' + id }\n            style={ { marginTop: 'var(--pf-c-alert-group__item--MarginTop)' } }\n        >\n            { message }{ ' ' }\n            { url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                    <ArrowIcon />\n                </a>\n            ) : null }\n        </Alert>\n    ));\n\nconst NoticeNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'notice')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <Alert\n            title={ capitalize(label) }\n            variant={ AlertVariant.default }\n            isInline\n            key={ date + '-' + id }\n            style={ { marginTop: 'var(--pf-c-alert-group__item--MarginTop)' } }\n        >\n            { message }{ ' ' }\n            { url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                    <ArrowIcon />\n                </a>\n            ) : null }\n        </Alert>\n    ));\n\nconst WarningNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'warning')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <Alert\n            title={ capitalize(label) }\n            variant={ AlertVariant.warning }\n            isInline\n            key={ date + '-' + id }\n            style={ { marginTop: 'var(--pf-c-alert-group__item--MarginTop)' } }\n        >\n            { message }{ ' ' }\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                <ArrowIcon />\n            </a>\n        </Alert>\n    ));\n\nconst NotificationsList = ({ filterBy, notifications }) => (\n  <>\n    <AlertGroup>\n        { notifications.length <= 0 && <LoadingState /> }\n        { filterBy === '' && (\n            <AllNotificationTemplate notifications={ notifications } />\n        ) }\n        { filterBy === 'notice' && (\n            <NoticeNotificationTemplate notifications={ notifications } />\n        ) }\n        { filterBy === 'error' && (\n            <ErrorNotificationTemplate notifications={ notifications } />\n        ) }\n        { filterBy === 'warning' && (\n            <WarningNotificationTemplate notifications={ notifications } />\n        ) }\n    </AlertGroup>\n  </>\n);\n\nAllNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nErrorNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nWarningNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nNotificationsList.propTypes = {\n    notifications: PropTypes.array,\n    filterBy: PropTypes.string\n};\n\nexport default NotificationsList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoData from '../../Components/NoData';\nimport { preflightRequest, readClusters, readNotifications } from '../../Api';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle,\n    FormSelect,\n    FormSelectOption,\n    Badge,\n    Pagination,\n    PaginationVariant\n} from '@patternfly/react-core';\n\nimport NotificationsList from '../../Components/NotificationsList';\n\nconst CardTitle = styled(PFCardTitle)`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n`;\n\nconst TitleWithBadge = styled.div`\n  display: flex;\n  align-items: center;\n\n  h2 {\n    margin-right: 10px;\n  }\n`;\n\nconst DropdownGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-end;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n\n  select {\n    margin: 0 10px;\n    width: 150px;\n\n    @media screen and (max-width: 1035px) {\n      margin: 10px 10px 0 0;\n    }\n\n    @media screen and (max-width: 865px) {\n      width: 100%;\n    }\n  }\n`;\n\nconst title = (\n    <span style={ { fontWeight: 400 } }>\n    Automation Analytics\n        <span style={ { fontSize: '16px', fontWeight: 400 } }>\n            { ' ' }\n            <span style={ { margin: '0 10px' } }>|</span> Notifications\n        </span>\n    </span>\n);\n\nconst notificationOptions = [\n    {\n        value: 'please choose',\n        label: 'Select Notification Severity',\n        disabled: true\n    },\n    { value: 'error', label: 'View Critical', disabled: false },\n    { value: 'warning', label: 'View Warning', disabled: false },\n    { value: 'notice', label: 'View Notice', disabled: false },\n    { value: '', label: 'View All', disabled: false }\n];\n\nconst perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 }\n];\n\nfunction formatClusterName(data) {\n    const defaultClusterOptions = [\n        { value: 'please choose', label: 'Select cluster', disabled: true },\n        { value: '', label: 'All Clusters', disabled: false },\n        { value: -1, label: 'Unassociated', disabled: false }\n    ];\n    return data.reduce(\n        (formatted, { label, cluster_id: id, install_uuid: uuid }) => {\n            if (label.length === 0) {\n                formatted.push({ value: id, label: uuid, disabled: false });\n            } else {\n                formatted.push({ value: id, label, disabled: false });\n            }\n\n            return formatted;\n        },\n        defaultClusterOptions\n    );\n}\n\nconst initialQueryParams = {\n    limit: 5,\n    offset: 0\n};\n\nconst Notifications = () => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [ notificationsData, setNotificationsData ] = useState([]);\n    const [ clusterOptions, setClusterOptions ] = useState([]);\n    const [ selectedCluster, setSelectedCluster ] = useState('');\n    const [ firstRender, setFirstRender ] = useState(true);\n    const [ isLoading, setIsLoading ] = useState(true);\n    const [ meta, setMeta ] = useState({});\n    const [ currPage, setCurrPage ] = useState(1);\n    const {\n        queryParams,\n        setId,\n        setLimit,\n        setOffset,\n        setSeverity\n    } = useQueryParams(initialQueryParams);\n\n    useEffect(() => {\n        if (firstRender) {\n            return;\n        }\n\n        const getData = () => {\n            return readNotifications({ params: queryParams });\n        };\n\n        const update = async () => {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            getData().then(\n                ({ notifications: notificationsData = [], meta }) => {\n                    setNotificationsData(notificationsData);\n                    setMeta(meta);\n                    setIsLoading(false);\n                }\n            );\n        };\n\n        update();\n    }, [ queryParams ]);\n\n    useEffect(() => {\n        let ignore = false;\n        const fetchEndpoints = () => {\n            return Promise.all(\n                [ readClusters(), readNotifications({ params: queryParams }) ].map(p =>\n                    p.catch(() => [])\n                )\n            );\n        };\n\n        async function initializeWithPreflight() {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            await preflightRequest().catch(error => {\n                setPreFlightError({ preflightError: error });\n            });\n            fetchEndpoints().then(\n                ([\n                    { templates: clustersData = []},\n                    { notifications: notificationsData = [], meta }\n                ]) => {\n                    if (!ignore) {\n                        const clusterOptions = formatClusterName(clustersData);\n                        setClusterOptions(clusterOptions);\n                        setNotificationsData(notificationsData);\n                        setMeta(meta);\n                        setFirstRender(false);\n                        setIsLoading(false);\n                    }\n                }\n            );\n        }\n\n        initializeWithPreflight();\n        return () => (ignore = true);\n    }, []);\n\n    const returnOffsetVal = page => {\n        let offsetVal = (page - 1) * queryParams.limit;\n        return offsetVal;\n    };\n\n    const handleSetPage = page => {\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    const handlePerPageSelect = (perPage, page) => {\n        setLimit(perPage);\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={ title } />\n            </PageHeader>\n            { preflightError && (\n                <Main>\n                    <EmptyState { ...preflightError } />\n                </Main>\n            ) }\n            { !preflightError && (\n        <>\n          <Main>\n              <Card>\n                  <CardTitle>\n                      <TitleWithBadge>\n                          <h2>\n                              <strong>Notifications</strong>\n                          </h2>\n                          <Badge isRead>{ meta.count ? meta.count : 0 }</Badge>\n                      </TitleWithBadge>\n                      <DropdownGroup>\n                          <FormSelect\n                              name=\"selectedCluster\"\n                              value={ selectedCluster }\n                              onChange={ value => {\n                                  setSelectedCluster(value);\n                                  setId(value);\n                                  setOffset(0);\n                                  setCurrPage(1);\n                              } }\n                              aria-label=\"Select Cluster\"\n                          >\n                              { clusterOptions.map(({ value, label, disabled }, index) => (\n                                  <FormSelectOption\n                                      isDisabled={ disabled }\n                                      key={ index }\n                                      value={ value }\n                                      label={ label }\n                                  />\n                              )) }\n                          </FormSelect>\n                          <FormSelect\n                              name=\"selectedNotification\"\n                              value={ queryParams.severity || '' }\n                              onChange={ value => {\n                                  setSeverity(value);\n                                  setOffset(0);\n                                  setCurrPage(1);\n                              } }\n                              aria-label=\"Select Notification Type\"\n                          >\n                              { notificationOptions.map(\n                                  ({ disabled, value, label }, index) => (\n                                      <FormSelectOption\n                                          isDisabled={ disabled }\n                                          key={ index }\n                                          value={ value }\n                                          label={ label }\n                                      />\n                                  )\n                              ) }\n                          </FormSelect>\n                      </DropdownGroup>\n                  </CardTitle>\n                  <CardBody>\n                      { isLoading && <LoadingState /> }\n                      { !isLoading && notificationsData.length <= 0 && <NoData /> }\n                      { !isLoading && notificationsData.length > 0 && (\n                  <>\n                    <NotificationsList\n                        filterBy={ queryParams.severity || '' }\n                        options={ notificationOptions }\n                        notifications={ notificationsData }\n                    />\n                    <Pagination\n                        itemCount={ meta.count ? meta.count : 0 }\n                        widgetId=\"pagination-options-menu-bottom\"\n                        perPageOptions={ perPageOptions }\n                        perPage={ queryParams.limit }\n                        page={ currPage }\n                        variant={ PaginationVariant.bottom }\n                        dropDirection={ 'up' }\n                        onPerPageSelect={ (_event, perPage, page) => {\n                            handlePerPageSelect(perPage, page);\n                        } }\n                        onSetPage={ (_event, pageNumber) => {\n                            handleSetPage(pageNumber);\n                        } }\n                        style={ { marginTop: '20px' } }\n                    />\n                  </>\n                      ) }\n                  </CardBody>\n              </Card>\n          </Main>\n        </>\n            ) }\n        </React.Fragment>\n    );\n};\n\nexport default Notifications;\n","import moment from 'moment';\n\n/*\n * isNumeric - return true if input is a real number\n */\nexport function isNumeric(val) {\n    if (val === 0 || val === '0') {\n        return true;\n    }\n\n    if (parseInt(val)) {\n        return true;\n    }\n\n    if (parseFloat(val)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function trimStr(str) {\n    return str.toString().replace(/['\"]+/g, '');\n}\n\nexport function formatDateTime(dateTime) {\n    return moment(new Date(dateTime).toISOString()).format('M/D/YYYY h:mm:ssa');\n}\n\nexport function formatDate(date) {\n    return moment(date).format('YYYY-MM-DD');\n}\n\nexport function formatSeconds(seconds) {\n    return moment().startOf('day')\n    .seconds(seconds)\n    .format('H:mm:ss');\n}\n\nexport function getTotal(data) {\n    if (!data) {\n        return;\n    } else {\n        let total = 0;\n        data.forEach(datum => {\n            total += parseInt(datum.count);\n        });\n        return total;\n    }\n}\n\nexport function formatPercentage(val) {\n    if (isNaN(val)) {\n        return;\n    }\n\n    return `${val}%`;\n}\n\nexport const capitalize = (s) => {\n    if (typeof s !== 'string') {return '';}\n\n    return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport function calculateDelta(a, b) {\n    if (!isNumeric(a) || !isNumeric(b)) {\n        return 0;\n    }\n\n    // never return less than zero ...\n    if ((b - a) < 0) {\n        return 0;\n    }\n\n    return b - a;\n}\n\nexport function convertMinsToMs(mins) {\n    if (!parseInt(mins)) {\n        return 0;\n    }\n\n    return mins * 60000;\n}\n\nexport function convertMsToMins(ms) {\n    if (!parseInt(ms)) {\n        return 0;\n    }\n\n    return ms / 60000;\n}\n\nexport function convertSecondsToMins(seconds) {\n    if (!parseInt(seconds)) {\n        return 0;\n    }\n\n    return seconds / 60;\n}\n\nexport function convertMinsToSeconds(mins) {\n    if (!parseInt(mins) || parseInt(mins) < 0) {\n        return 0;\n    }\n\n    return +parseInt(mins) * 60;\n}\n\nexport function convertSecondsToHours(seconds) {\n    if (!parseInt(seconds)) {\n        return 0;\n    }\n\n    return seconds / 3600;\n}\n\nexport function convertWithCommas(arr, key) {\n    const split = arr.reduce((strs, datum) => { strs.push(datum[key]); return strs; }, []);\n    return split.join(', ');\n}\n\nexport function formatJobType(type) {\n    return (type === 'job' ? 'Playbook run' : 'Workflow job');\n}\n\nexport function formatJobStatus(status) {\n    return (status === 'successful' ? 'Success' : 'Failed');\n}\n\nexport function formatJobDetailsURL(baseURL, jobId) {\n    const subDirectory1 = 'job';\n    const subDirectory2 = 'details';\n    return `${baseURL}/#/${subDirectory1}/${jobId}/${subDirectory2}/`;\n}\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst DefaultLoadingState = () => (\n    <EmptyState variant={ EmptyStateVariant.full }>\n        <EmptyStateIcon icon={ CubesIcon } />\n        <Title headingLevel=\"h5\" size=\"lg\">\n            Loading...\n        </Title>\n        <EmptyStateBody>\n            Please wait.\n        </EmptyStateBody>\n    </EmptyState>\n);\n\nexport default DefaultLoadingState;\n","/* eslint-disable camelcase */\n/*eslint camelcase: [\"error\", {properties: \"never\", ignoreDestructuring: true}]*/\n/*eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"[iI]gnored\" }]*/\nimport { parse } from 'query-string';\n\nexport const formatQueryStrings = ({\n    attributes,\n    end_date,\n    start_date,\n    limit,\n    offset,\n    job_type,\n    status,\n    org_id,\n    cluster_id,\n    template_id,\n    sort_by,\n    only_root_workflows_and_standalone_jobs,\n    quick_date_range\n}) => {\n    let strings = {};\n    const parseAttrs = attrs => {\n        if (Array.isArray(attrs)) {\n            return attrs\n            .map(attr => {\n                return `attributes[]=${encodeURIComponent(attr)}`;\n            })\n            .join('&');\n        } else {\n            return `attributes[]=${encodeURIComponent(attrs)}`;\n        }\n    };\n\n    const parseStatuses = statuses => {\n        if (Array.isArray(statuses)) {\n            return statuses\n            .map(status => {\n                return `status[]=${encodeURIComponent(status)}`;\n            })\n            .join('&');\n        } else {\n            return `status[]=${encodeURIComponent(statuses)}`;\n        }\n    };\n\n    const parseJobType = jobTypes => {\n        if (Array.isArray(jobTypes)) {\n            return jobTypes\n            .map(jobType => {\n                return `job_type[]=${encodeURIComponent(jobType)}`;\n            })\n            .join('&');\n        } else {\n            return `job_type[]=${encodeURIComponent(jobTypes)}`;\n        }\n    };\n\n    const parseOrganization = orgs => {\n        if (Array.isArray(orgs)) {\n            return orgs\n            .map(orgId => {\n                return `org_id[]=${encodeURIComponent(orgId)}`;\n            })\n            .join('&');\n        } else {\n            return `org_id[]=${encodeURIComponent(orgs)}`;\n        }\n    };\n\n    const parseCluster = clusters => {\n        if (Array.isArray(clusters)) {\n            return clusters\n            .map(clusterId => {\n                return `cluster_id[]=${encodeURIComponent(clusterId)}`;\n            })\n            .join('&');\n        } else {\n            return `cluster_id[]=${encodeURIComponent(clusters)}`;\n        }\n    };\n\n    const parseTemplate = templates => {\n        if (Array.isArray(templates)) {\n            return templates\n            .map(templateId => {\n                return `template_id[]=${encodeURIComponent(templateId)}`;\n            })\n            .join('&');\n        } else {\n            return `template_id[]=${encodeURIComponent(templates)}`;\n        }\n    };\n\n    const parseSortBy = sortBy => {\n        if (Array.isArray(sortBy)) {\n            return sortBy\n            .map(attr => {\n                return `sort_by=${encodeURIComponent(attr)}`;\n            })\n            .join('&');\n        } else {\n            return `sort_by=${encodeURIComponent(sortBy)}`;\n        }\n    };\n\n    const parseStartDate = date => `start_date=${encodeURIComponent(date)}`;\n    const parseEndDate = date => `end_date=${encodeURIComponent(date)}`;\n    const parseLimit = limit => `limit=${encodeURIComponent(limit)}`;\n    const parseOffset = offset => `offset=${encodeURIComponent(offset)}`;\n\n    const parseRootWorkflowsAndJobs = bool => `only_root_workflows_and_standalone_jobs=${encodeURIComponent(bool)}`;\n    const parseQuickDateRange = quickDate => `quick_date_range=${encodeURIComponent(quickDate)}`;\n\n    if (attributes) {\n        strings.attributes = parseAttrs(attributes);\n    }\n\n    if (start_date) {\n        strings.start_date = parseStartDate(start_date);\n    }\n\n    if (end_date) {\n        strings.end_date = parseEndDate(end_date);\n    }\n\n    if (limit) {\n        strings.limit = parseLimit(limit);\n    }\n\n    if (offset >= 0) {\n        strings.offset = parseOffset(offset);\n    }\n\n    if (job_type) {\n        strings.job_type = parseJobType(job_type);\n    }\n\n    if (status) {\n        strings.status = parseStatuses(status);\n    }\n\n    if (org_id) {\n        strings.org_id = parseOrganization(org_id);\n    }\n\n    if (cluster_id) {\n        strings.cluster_id = parseCluster(cluster_id);\n    }\n\n    if (template_id) {\n        strings.template_id = parseTemplate(template_id);\n    }\n\n    if (sort_by) {\n        strings.sort_by = parseSortBy(sort_by);\n    }\n\n    if (only_root_workflows_and_standalone_jobs !== undefined) {\n        strings.only_root_workflows_and_standalone_jobs = parseRootWorkflowsAndJobs(only_root_workflows_and_standalone_jobs);\n    }\n\n    if (quick_date_range) {\n        strings.quick_date_range = parseQuickDateRange(quick_date_range);\n    }\n\n    return {\n        strings,\n        stringify: strings => {\n            return Object.keys(strings).map(key => strings[key]).join('&');\n        },\n        parse,\n        parseStatuses,\n        parseJobType,\n        parseOrganization,\n        parseCluster,\n        parseTemplate,\n        parseEndDate,\n        parseStartDate,\n        parseQuickDateRange,\n        parseSortBy,\n        parseAttrs,\n        parseLimit,\n        parseOffset,\n        parseRootWorkflowsAndJobs\n    };\n\n};\n","/* eslint-disable camelcase */\n/* eslint-disable max-len */\n/*eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"[iI]gnored\" }]*/\n/*eslint max-len: [\"error\", { \"ignoreTemplateLiterals\": true }]*/\n/*eslint max-len: [\"error\", { \"ignoreStrings\": true }]*/\n/*eslint camelcase: [\"error\", {properties: \"never\", ignoreDestructuring: true}]*/\n\nimport { formatQueryStrings } from './Utilities/formatQueryStrings';\n\nconst apiVersion = 'v0';\nconst barChartEndpoint = `/api/tower-analytics/${apiVersion}/chart30/`;\nconst clustersEndpoint = `/api/tower-analytics/${apiVersion}/clusters/`;\nconst groupedBarChartEndpoint = `/api/tower-analytics/${apiVersion}/jobs_by_date_and_org_30/`;\nconst modulesEndpoint = `/api/tower-analytics/${apiVersion}/modules/`;\nconst notificationsEndPoint = `/api/tower-analytics/${apiVersion}/notifications/`;\nconst pieChart1Endpoint = `/api/tower-analytics/${apiVersion}/job_runs_by_org_30/`;\nconst pieChart2Endpoint = `/api/tower-analytics/${apiVersion}/job_events_by_org_30/`;\nconst preflightEndpoint = `/api/tower-analytics/${apiVersion}/authorized/`;\nconst templateJobsEndpoint = `/api/tower-analytics/${apiVersion}/template_jobs/`;\nconst templatesEndPoint = `/api/tower-analytics/${apiVersion}/templates/`;\nconst roiEndpoint = `/api/tower-analytics/${apiVersion}/roi_templates/`;\nconst jobExplorerEndpoint = '/api/tower-analytics/v1/job_explorer/';\nconst jobExplorerOptionsEndpoint =\n  '/api/tower-analytics/v1/job_explorer_options/';\n\nfunction getAbsoluteUrl() {\n    const url = window.location.href;\n    let arr = url.split('/');\n    arr.pop();\n    return arr.join('/');\n}\n\nfunction handleResponse(response) {\n    return response.json().then(json => {\n        if (response.ok) {\n            return json;\n        }\n\n        if (response.status === 404 || response.status === 401) {\n            return Promise.reject({\n                status: response.status,\n                message: json\n            });\n        } else {\n            return Promise.reject(json);\n        }\n    });\n}\n\nexport const readTemplateJobs = (id, { params = {}}) => {\n    if (!id) {\n        return;\n    }\n\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(templateJobsEndpoint + id + '/', formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const preflightRequest = () => {\n    return fetch(preflightEndpoint).then(handleResponse);\n};\n\nexport const readClusters = () => {\n    return fetch(clustersEndpoint).then(handleResponse);\n};\n\nexport const readChart30 = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(barChartEndpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readJobsByDateAndOrg = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(groupedBarChartEndpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readModules = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(modulesEndpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readTemplates = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(templatesEndPoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readNotifications = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(notificationsEndPoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readJobExplorerOptions = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(jobExplorerOptionsEndpoint, formattedUrl);\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readJobExplorer = ({ params = {}}) => {\n    const { limit, offset, sort_by } = params;\n    const paginationParams = {\n        limit,\n        offset,\n        sort_by\n    };\n    const { strings, stringify } = formatQueryStrings(paginationParams);\n    const qs = stringify(strings);\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(jobExplorerEndpoint, formattedUrl);\n    url.search = qs;\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readJobRunsByOrg = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(pieChart1Endpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readJobEventsByOrg = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(pieChart2Endpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readROI = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(roiEndpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n","/*eslint camelcase: [\"error\", {properties: \"never\", ignoreDestructuring: true}]*/\n/*eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"[iI]gnored\" }]*/\n\nimport { useReducer } from 'react';\nimport moment from 'moment';\n\nimport { formatDate } from '../Utilities/helpers';\n\nexport const useQueryParams = initial => {\n    const paramsReducer = (state, action) => {\n        switch (action.type) {\n            case 'SET_STARTDATE':\n                return { ...state, startDate: action.startDate };\n            case 'SET_ENDDATE':\n                return { ...state, endDate: action.endDate };\n            case 'SET_ID':\n                if (!parseInt(action.id)) {\n                    const { id: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, id: parseInt(action.id) };\n            case 'SET_SORT_BY':\n                if (action.sort === 'count:asc' || action.sort === 'count:desc') {\n                    return { ...state, sort_by: action.sort };\n                } else {\n                    const { sort_by: ignored, ...rest } = state;\n                    return rest;\n                }\n\n            case 'SET_LIMIT':\n                if (!parseInt(action.limit)) {\n                    const { limit: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, limit: parseInt(action.limit) };\n            case 'SET_OFFSET':\n                return { ...state, offset: action.offset };\n            case 'SET_SEVERITY':\n                if (action.severity.length <= 0) {\n                    const { severity: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, severity: action.severity };\n            case 'SET_ATTRIBUTES':\n                return { ...state, attributes: [ ...action.attributes ]};\n            case 'SET_JOB_TYPE':\n                if (action.jobType.length <= 0) {\n                    const { job_type: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, job_type: [ ...action.jobType ]};\n\n            case 'SET_STATUS':\n                if (action.status.length <= 0) {\n                    const { status: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, status: [ ...action.status ]};\n            case 'SET_ORG':\n                if (action.org.length <= 0) {\n                    const { org_id: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, org_id: [ ...action.org ]};\n            case 'SET_CLUSTER':\n                if (action.cluster.length <= 0) {\n                    const { cluster_id: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, cluster_id: [ ...action.cluster ]};\n            case 'SET_TEMPLATE':\n                if (action.template.length <= 0) {\n                    const { template_id: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, template_id: [ ...action.template ]};\n            case 'SET_SORTBY':\n                if (action.sortBy === null) {\n                    const { sort_by: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, sort_by: action.sortBy };\n            case 'SET_ROOT_WORKFLOWS_AND_JOBS':\n                return { ...state, only_root_workflows_and_standalone_jobs: action.bool };\n            case 'SET_QUICK_DATE_RANGE':\n                if (action.quickDate === null) {\n                    const { quick_date_range: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, quick_date_range: action.quickDate };\n            case 'SET_START_DATE':\n                if (action.date === null) {\n                    const { start_date: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, start_date: formatDate(action.date) };\n            case 'SET_END_DATE':\n                if (action.date === null) {\n                    const { end_date: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, end_date: formatDate(action.date) };\n            default:\n                throw new Error();\n        }\n    };\n\n    const [ queryParams, dispatch ] = useReducer(paramsReducer, { ...initial });\n\n    return {\n        queryParams,\n        dispatch,\n        setEndDate: () => {\n            const endDate = moment().format('YYYY-MM-DD');\n            dispatch({ type: 'SET_ENDDATE', endDate });\n        },\n        setId: id => dispatch({ type: 'SET_ID', id }),\n        setStartDate: days => {\n            let startDate;\n            if (days === 7) {\n                startDate = moment()\n                .subtract(1, 'week')\n                .format('YYYY-MM-DD');\n            }\n\n            if (days === 14) {\n                startDate = moment()\n                .subtract(2, 'weeks')\n                .format('YYYY-MM-DD');\n            }\n\n            if (days === 31) {\n                startDate = moment()\n                .subtract(1, 'month')\n                .format('YYYY-MM-DD');\n            } else {\n                startDate = moment()\n                .subtract(days, 'days')\n                .format('YYYY-MM-DD');\n            }\n\n            dispatch({ type: 'SET_STARTDATE', startDate });\n        },\n        setStartDateAsString: startDate => dispatch({ type: 'SET_STARTDATE', startDate }),\n        setSortBy: sort => dispatch({ type: 'SET_SORT_BY', sort }),\n        setLimit: limit => dispatch({ type: 'SET_LIMIT', limit }),\n        setOffset: offset => dispatch({ type: 'SET_OFFSET', offset }),\n        setSeverity: severity => dispatch({ type: 'SET_SEVERITY', severity }),\n        setAttributes: attributes => dispatch({ type: 'SET_ATTRIBUTES', attributes }),\n        setJobType: jobType => dispatch({ type: 'SET_JOB_TYPE', jobType }),\n        setStatus: status => dispatch({ type: 'SET_STATUS', status }),\n        setOrg: org => dispatch({ type: 'SET_ORG', org }),\n        setCluster: cluster => dispatch({ type: 'SET_CLUSTER', cluster }),\n        setTemplate: template => dispatch({ type: 'SET_TEMPLATE', template }),\n        setSortBy2: sortBy => dispatch({ type: 'SET_SORTBY', sortBy }),\n        setRootWorkflowsAndJobs: bool => dispatch({ type: 'SET_ROOT_WORKFLOWS_AND_JOBS', bool }),\n        setQuickDateRange: quickDate => dispatch({ type: 'SET_QUICK_DATE_RANGE', quickDate }),\n        setStart_Date: date => dispatch({ type: 'SET_START_DATE', date }),\n        setEnd_Date: date => dispatch({ type: 'SET_END_DATE', date })\n    };\n};\n","/*eslint max-len: [\"error\", { \"ignoreStrings\": true }]*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Button,\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { WrenchIcon } from '@patternfly/react-icons';\n\nconst DefaultEmptyState = ({ preflightError: error }) => (\n    <EmptyState variant={ EmptyStateVariant.full }>\n        <EmptyStateIcon icon={ WrenchIcon } />\n        { error.status === 404 && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    No data found\n                </Title>\n                <EmptyStateBody>\n                    Please visit <a href='https://docs.ansible.com/ansible-tower/latest/html/administration/usability_data_collection.html#automation-analytics' target='_blank' rel='noopener noreferrer'>here</a> to learn how to enable Automation Analytics.\n                </EmptyStateBody>\n            </>\n        ) }\n        { error.status === 401 && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    Not authorized\n                </Title>\n                <EmptyStateBody>\n                    You do not have the correct permissions to view this page.\n                </EmptyStateBody>\n            </>\n        ) }\n        { !error.status && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    Something went wrong, please try reloading the page\n                </Title>\n                <Button variant=\"primary\" onClick={ () => window.location.reload() }>Reload</Button>\n            </>\n        ) }\n\n    </EmptyState>\n);\n\nDefaultEmptyState.propTypes = {\n    preflightError: PropTypes.object\n};\n\nexport default DefaultEmptyState;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nconst initializeChart = Chart => {\n    const BaseChart = (props) => {\n        const { id, margin } = props;\n\n        const getWidth = () => {\n            let width;\n            width =\n            parseInt(d3.select('#' + id).style('width')) -\n                margin.left - margin.right || 700;\n            return width;\n        };\n\n        const getHeight = () => {\n            let height;\n            height =\n            parseInt(d3.select('#' + id).style('height')) -\n                margin.top - margin.bottom || 450;\n            return height;\n        };\n\n        return (\n            <Chart\n                { ...props }\n                getWidth={ getWidth }\n                getHeight={ getHeight }\n            />\n        );\n    };\n\n    BaseChart.propTypes = {\n        id: PropTypes.string,\n        margin: PropTypes.object\n    };\n\n    return BaseChart;\n};\n\ninitializeChart.propTypes = {\n    Chart: PropTypes.element\n};\n\nexport default initializeChart;\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst NoData = () => (\n    <EmptyState variant={ EmptyStateVariant.full }>\n        <EmptyStateIcon icon={ CubesIcon } />\n        <Title headingLevel=\"h5\" size=\"lg\">\n            No Data\n        </Title>\n    </EmptyState>\n);\n\nexport default NoData;\n"],"sourceRoot":""}