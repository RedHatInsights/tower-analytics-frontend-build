{"version":3,"sources":["webpack:///./src/Components/LoadingState.js","webpack:///./src/Api.js","webpack:///./src/Utilities/useQueryParams.js","webpack:///./src/Components/EmptyState.js","webpack:///./src/Utilities/useApi.js","webpack:///./src/Charts/BaseChart.js","webpack:///./src/Components/NoData.js","webpack:///./src/Components/ApiErrorState.js","webpack:///./src/Components/Toolbar/constants.js","webpack:///./src/Components/Toolbar/CustomFormElements/CategoryDropdown.js","webpack:///./src/Components/Toolbar/CustomFormElements/ToolbarFilterItem.js","webpack:///./src/Components/Toolbar/helpers.js","webpack:///./src/Components/Toolbar/Groups/FiltersCategoriesGroup.js","webpack:///./src/Components/Toolbar/CustomFormElements/CustomDateSelector.js","webpack:///./src/Components/Toolbar/Groups/QuickDateGroup.js","webpack:///./src/Components/Toolbar/Groups/SortByGroup.js","webpack:///./src/Components/Toolbar/Groups/SettingsPanel.js","webpack:///./src/Components/Toolbar/Toolbar.js","webpack:///./src/Components/Toolbar/index.js","webpack:///./src/Utilities/useRedirect.js","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/Utilities/Legend.js","webpack:///./src/Charts/GroupedBarChart/GroupedBarChart.js","webpack:///./src/Charts/GroupedBarChart/OrgsTooltip.js","webpack:///./src/Charts/GroupedBarChart/HostsTooltip.js","webpack:///./src/Charts/PieChart.js","webpack:///./src/Containers/OrganizationStatistics/OrganizationStatistics.js","webpack:///./src/Utilities/colors.ts","webpack:///./src/Utilities/Tooltip.js","webpack:///./src/Charts/BarChart.js","webpack:///./src/Charts/LineChart.js","webpack:///./src/Components/ModulesList.js","webpack:///./src/Components/ModalContents.js","webpack:///./src/Components/TemplatesList.js","webpack:///./src/Containers/Clusters/Clusters.js","webpack:///./src/Charts/ROITopTemplates.js","webpack:///./src/Containers/AutomationCalculator/helpers.js","webpack:///./src/Containers/AutomationCalculator/TotalSavings.js","webpack:///./src/Containers/AutomationCalculator/CalculationCost.js","webpack:///./src/Containers/AutomationCalculator/AutomationFormula.js","webpack:///./src/Containers/AutomationCalculator/TopTemplates.js","webpack:///./src/Containers/AutomationCalculator/AutomationCalculator.js","webpack:///./src/Components/NoResults.js","webpack:///./src/Components/JobStatus.js","webpack:///./src/Components/JobExplorerList.js","webpack:///./src/Containers/JobExplorer/JobExplorer.js","webpack:///./src/Components/NotificationsList.js","webpack:///./src/Containers/Notifications/Notifications.js","webpack:///./src/Containers/SavingsPlanner/PlanCard.js","webpack:///./src/Containers/SavingsPlanner/SavingsPlanner.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Utilities/constants.js"],"names":["DefaultLoadingState","variant","EmptyStateVariant","full","icon","CubesIcon","headingLevel","size","handleResponse","response","json","then","ok","status","Promise","reject","message","error","authenticatedFetch","endpoint","options","window","insights","chrome","auth","getUser","fetch","preflightRequest","readJobExplorer","params","paginationParams","limit","offset","sort_by","qs","stringify","url","URL","location","origin","search","method","body","JSON","readEventExplorer","readROI","readHostExplorer","readPlans","readClustersOptions","readOrgOptions","readROIOptions","readPlanOptions","readClusters","readNotifications","Object","keys","forEach","key","searchParams","append","readJobExplorerOptions","useQueryParams","initial","initialWithCalculatedParams","sort_options","sort_order","useReducer","state","type","value","startDate","endDate","parseInt","id","severity","newState","start_date","end_date","newValues","entries","formatDate","Error","queryParams","dispatch","actionMapper","quick_date_range","job_type","org_id","cluster_id","template_id","automation_status","category","frequency_period","name","only_root_workflows_and_standalone_jobs","setLimit","setOffset","setFromToolbar","varName","setSeverity","setEndDate","moment","format","setId","setStartDate","days","subtract","setStartDateAsString","DefaultEmptyState","preflightError","WrenchIcon","href","target","rel","onClick","reload","propTypes","PropTypes","object","dataFetchReducer","action","isLoading","isSuccess","data","payload","useApi","initialData","postprocess","d","useState","request","setRequest","useEffect","didCancel","e","setData","initializeChart","Chart","BaseChart","props","margin","getWidth","d3","style","left","right","getHeight","top","bottom","string","element","NoData","ApiErrorState","small","ExclamationCircleIcon","color","globalDangerColor200","optionsForCategories","isSingle","placeholder","CategoryDropdown","selected","setSelected","categories","isExpanded","setIsExpanded","ToolbarItem","Select","isOpen","aria-label","onToggle","onSelect","_event","selection","selections","placeholderText","map","SelectOption","array","func","styled","PFSelectOption","renderValues","values","description","marginLeft","ToolbarFilterItem","item","comparator","categoryKey","filter","isVisible","hasChips","setFilter","expanded","setExpanded","searchVal","setSearchVal","handleOnClick","handleInputChange","ToolbarFilter","data-cy","showToolbarItem","chips","categoryName","deleteChip","InputGroup","TextInput","onChange","Button","val","i","undefined","handleSingleChips","reduce","acc","Number","isInteger","cmpItem","push","valueToDelete","keyToDelete","find","filteredArr","event","includes","hasInlineFilter","onFilter","textInput","toLowerCase","maxHeight","isRequired","any","bool","FilterCategoriesGroup","filterCategories","filters","setFilters","currentCategory","setCurrentCategory","ToolbarGroup","el","CustomDateSelector","onInputChange","QuickDateGroup","SortByGroup","SettingsPanel","settingsExpanded","setSettingsExpanded","Card","isFlat","backgroundColor","CardHeader","CardActions","CardTitle","CardBody","Switch","label","labelOff","isChecked","Tooltip","position","content","FilterableToolbar","pagination","hasSettings","restCategories","obj","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarContent","length","isActive","visibility","default","lg","useRedirect","history","path","query","arrayFormat","pathname","Paths","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","resolve","module","exports","Container","div","height","LegendDetail","Wrapper","Color","attrs","Title","span","SubTitle","Legend","index","count","some","date","pieces","split","GroupedBarChart","TooltipClass","legend","colors","colorFunc","slice","selectedIds","setSelectedIds","timeout","draw","remove","formatted","selectedOrgs","items","concat","width","x0","range","padding","x1","y","maxTicksOneMonth","Math","round","maxTicksTwoMonths","ticks","xAxis","tickValues","tickFormat","yAxis","tickSize","svg","attr","dates","tooltip","domain","bandwidth","call","selectAll","text","yLabel","exit","enter","bars","merge","subEnter","on","this","darker","handleMouseOver","handleMouseOut","resize","clearTimeout","setTimeout","addEventListener","removeEventListener","OrgsTooltip","orgName","jobs","x","pageX","node","getBoundingClientRect","pageY","formatTooltipDate","toolTipWidth","toolTipBase","chartWidth","flipped","jobsWidth","getComputedTextLength","adjustedWidth","maxTextPerc","boxWidth","overage","boundingBox","toolTipPoint","clickMore","interrupt","transition","delay","textWidthThreshold","HostsTooltip","perc","percSuccess","drawn","percent","success_rate","maxLength","percentageTotal","percentageSuccess","boundingBOx","showSuccess","boundingHeight","boundingWidth","PieChart","sort","a","b","radius","min","filteredData","total","getTotal","donutTooltip","pie","arc","outerRadius","innerRadius","classed","PFCardTitle","CardContainer","TopCard","scaleOrdinal","optionsMapper","inventory_id","pieChartMapper","attrName","chartMapper","api","toJobExplorer","rest","formattedDate","dateForJobExplorer","initialQueryParams","OrganizationStatistics","preflight","setPreflight","activeTabKey","setActiveTabKey","meta","orgs","setOrgs","setJobs","tasks","setTasks","setOptions","constants","defaultParams","jobEventsByOrgParams","attributes","group_by","include_others","jobRunsByOrgParams","jobsByDateAndOrgParams","group_by_time","hostAcrossOrgParams","appNavClick","secondaryNav","readJobsOrHosts","NotAuthorized","notAuthorizedParams","Fragment","PageHeader","PageHeaderTitle","title","Main","EmptyState","Tabs","activeKey","_","tabIndex","Tab","eventKey","LoadingState","opts","success","fail","RAN","FAIL","TOTAL","DATE","failed","successful","successTextWidth","failTextWidth","circleSuccess","circleFail","failedIcon","successIcon","successText","failText","BarChart","bind","init","redirectToJobExplorer","formattedData","jobExplorer","orgId","templateId","setState","parseTime","created_date","successful_count","failed_count","Date","rangeRound","barTooltip","layers","order","stack","maxTicks","layer","_d","duration","ease","prevProps","Component","withRouter","LineChart","updateCluster","clusterId","attrTween","tweenDash","l","getTotalLength","t","unformattedData","successLine","curve","failLine","defined","isNaN","vertical","handleMouseMove","intersectX","cx","baseVal","DataListCell","PFDataListCell","DataListItem","PFDataListItem","DataCellEnd","ModulesList","modules","DataList","overflow","background","aria-labelledby","border","host_task_count","trimStr","marginRight","PFDataListItemNoBorder","DataListItemCompact","DataListCellCompact","DataListFocus","DataCellEndCompact","ModalContents","successCount","totalCount","elapsed","selectedId","handleModal","qp","jobType","handleCloseBtn","relatedJobs","setRelatedJobs","stats","setStats","useHistory","relatedTemplateJobsParams","agreggateTemplateParams","Modal","onClose","actions","total_count","toISOString","substr","ceil","formatAvgRun","most_failed_tasks","percentage","total_failed_count","task_name","formatTopFailedTask","most_failed_steps","template_name","formatTopFailedStep","Label","component","job","cluster_name","formatDateTime","started","formatSeconds","number","TemplatesList","templates","setSelectedId","isModalOpen","setIsModalOpen","initialTopTemplateParams","initialTopWorkflowParams","initialModuleParams","Clusters","setPreFlightError","clusters","chartData","setTemplates","workflows","setWorkflows","setModules","groupBy","initialOptionsParams","optionsQueryParams","topTemplatesParams","topWorkflowParams","topModuleParams","initializeWithPreflight","className","display","marginTop","savings","manualCost","automationCost","scrollLeftOffset","scrollLeft","formatDollars","delta","automatedCost","nameWidth","savingsWidth","manualCostWidth","automationCostWidth","widestTextElem","amount","parseFloat","toFixed","toString","replace","TopTemplatesSavings","formatYAxisValue","taskNames","BorderedCardTitle","TotalSavings","totalSavings","borderTop","paddingBottom","InputAndText","validFloat","floatValue","CalculationCost","costManual","setCostManual","costAutomation","setCostAutomation","InputGroupText","paddingTop","AutomationFormula","TemplateDetail","TemplateDetailSubTitle","em","TooltipWrapper","IconGroup","QuestionIconTooltip","details","Popover","bodyContent","k","capitalize","join","TopTemplates","sortBy","setDataRunTime","setEnabled","flex","convertSecondsToMins","avgRunTime","minutes","convertMinsToSeconds","successful_hosts_total","trimmed","sortAttribute","showSortAttr","enabled","deselectedIds","setDeselectedIds","WrapperLeft","WrapperRight","filterDisabled","updateDeltaCost","convertSecondsToHours","successful_elapsed_total","calculateDelta","AutomationCalculator","fetchApi","setDataInApi","roiConst","seconds","updatedData","textAlign","paddingLeft","sum","curr","flexDirection","setUnfilteredData","NoResults","EmptyStateIcon","SearchIcon","EmptyStateBody","JobStatus","str","getColor","getIcon","charAt","toUpperCase","oneOf","headerLabels","ExternalLinkIcon","PFExternalLinkIcon","DataListCellHeader","DataListItemCells","PFDataListItemCells","DataListToggle","PFDataListToggle","buildListRow","ariaLabel","ariaLabelledBy","windowWidth","DataListItemRow","aria-controls","idx","indexOf","newExpanded","dataListCells","tower_link","fontWeight","org_name","formatJobType","DataListContent","isHidden","created","finished","AllJobsTemplate","innerWidth","setWindowWidth","onResize","JobExplorerList","labels","isCompact","perPageOptions","JobExplorer","currPage","setCurrPage","initialSearchParams","parse","parseBooleans","updateURL","returnOffsetVal","page","handleSetPage","nextOffset","handlePerPageSelect","perPage","Pagination","itemCount","widgetId","PaginationVariant","onPerPageSelect","onSetPage","pageNumber","ExternalLinkAltIcon","PFExternalLinkAltIcon","NotificationDrawerListItem","PFNotificationDrawerListItem","NotificationDrawerList","PFNotificationDrawerList","stringifyDate","day","now","utc","isAfter","diff","isSame","valueOf","AllNotificationTemplate","notifications","notification_id","tower_url","NotificationDrawerListItemHeader","NotificationDrawerListItemBody","timestamp","ErrorNotificationTemplate","notification","NoticeNotificationTemplate","WarningNotificationTemplate","NotificationsList","filterBy","DropdownGroup","notificationOptions","disabled","formatClusterName","uuid","install_uuid","Notifications","notificationsData","setNotificationsData","clusterOptions","setClusterOptions","selectedCluster","setSelectedCluster","firstRender","setFirstRender","setIsLoading","setMeta","ignore","fetchEndpoints","all","p","clustersData","FormSelect","FormSelectOption","isDisabled","NotificationDrawer","CardLabel","PlanCard","template","template_details","modified","isCardKebabOpen","setIsCardKebabOpen","kebabDropDownItems","DropdownItem","isHoverable","CardHeaderMain","Dropdown","toggle","KebabToggle","isPlain","dropdownItems","Checkbox","CardFooter","combined","savingsPlanner","SavingsPlanner","combinedOptions","Gallery","hasGutter","datum","isSticky","isNumeric","dateTime","startOf","s","mins","roi","organizationStatistics"],"mappings":"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","file":"js/automation_analytics.59be97e265f263882268.js","sourcesContent":["import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst DefaultLoadingState = () => (\n    <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={CubesIcon} />\n        <Title headingLevel=\"h5\" size=\"lg\">\n      Loading...\n        </Title>\n        <EmptyStateBody>Please wait.</EmptyStateBody>\n    </EmptyState>\n);\n\nexport default DefaultLoadingState;\n","import { stringify } from 'query-string';\n/* v0 endpoints */\nconst clustersEndpoint = `/api/tower-analytics/v0/clusters/`;\nconst notificationsEndpoint = `/api/tower-analytics/v0/notifications/`;\nconst preflightEndpoint = `/api/tower-analytics/v0/authorized/`;\n\n/* v1 endpoints */\nconst jobExplorerEndpoint = '/api/tower-analytics/v1/job_explorer/';\nconst hostExplorerEndpoint = '/api/tower-analytics/v1/host_explorer/';\nconst eventExplorerEndpoint = '/api/tower-analytics/v1/event_explorer/';\nconst ROIEndpoint = '/api/tower-analytics/v1/roi_templates/';\nconst plansEndpoint = '/api/tower-analytics/v1/plans/';\n\n/* page options endpoints */\nconst jobExplorerOptionsEndpoint =\n    '/api/tower-analytics/v1/job_explorer_options/';\nconst ROITemplatesOptionsEndpoint = '/api/tower-analytics/v1/roi_templates_options/';\nconst orgOptionsEndpoint = '/api/tower-analytics/v1/dashboard_organization_statistics_options/';\nconst clustersOptionsEndpoint = '/api/tower-analytics/v1/dashboard_clusters_options/';\nconst planOptionsEndpoint = '/api/tower-analytics/v1/plan_options/';\n\nfunction handleResponse(response) {\n    return response.json().then(json => {\n        if (response.ok) {\n            return json;\n        }\n\n        if (response.status === 404 || response.status === 401) {\n            return Promise.reject({\n                status: response.status,\n                message: json\n            });\n        } else if (response.status === 403) {\n            return Promise.reject({\n                status: response.status,\n                error: 'RBAC access denied'\n            });\n        } else {\n            return Promise.reject(json);\n        }\n    });\n}\n\nfunction authenticatedFetch(endpoint, options) {\n    return window.insights.chrome.auth.getUser().then(() => fetch(endpoint, options));\n}\n\nexport const preflightRequest = () => {\n    return authenticatedFetch(preflightEndpoint).then(handleResponse);\n};\n\nexport const readJobExplorer = ({ params = {}}) => {\n    const { limit, offset, sort_by } = params;\n    const paginationParams = {\n        limit,\n        offset,\n        sort_by\n    };\n    const qs = stringify(paginationParams);\n    let url = new URL(jobExplorerEndpoint, window.location.origin);\n    url.search = qs;\n    return authenticatedFetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readEventExplorer = ({ params = {}}) => {\n    const { limit, offset, sort_by } = params;\n    const paginationParams = {\n        limit,\n        offset,\n        sort_by\n    };\n    const qs = stringify(paginationParams);\n    let url = new URL(eventExplorerEndpoint, window.location.origin);\n    url.search = qs;\n    return authenticatedFetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readROI = ({ params = {}}) => {\n    const { limit, offset, sort_by } = params;\n    const paginationParams = {\n        limit,\n        offset,\n        sort_by\n    };\n    const qs = stringify(paginationParams);\n    let url = new URL(ROIEndpoint, window.location.origin);\n    url.search = qs;\n    return authenticatedFetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readHostExplorer = ({ params = {}}) => {\n    const { limit, offset, sort_by } = params;\n    const paginationParams = {\n        limit,\n        offset,\n        sort_by\n    };\n    const qs = stringify(paginationParams);\n    let url = new URL(hostExplorerEndpoint, window.location.origin);\n    url.search = qs;\n    return authenticatedFetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readPlans = ({ params = {}}) => {\n    const { limit, offset, sort_by } = params;\n    const paginationParams = {\n        limit,\n        offset,\n        sort_by\n    };\n    const qs = stringify(paginationParams);\n    let url = new URL(plansEndpoint, window.location.origin);\n    url.search = qs;\n    return authenticatedFetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readClustersOptions = ({ params = {}}) => {\n    let url = new URL(clustersOptionsEndpoint, window.location.origin);\n    return authenticatedFetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readOrgOptions = ({ params = {}}) => {\n    let url = new URL(orgOptionsEndpoint, window.location.origin);\n    return authenticatedFetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readROIOptions = ({ params = {}}) => {\n    let url = new URL(ROITemplatesOptionsEndpoint, window.location.origin);\n    return authenticatedFetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readPlanOptions = () => {\n    let url = new URL(planOptionsEndpoint, window.location.origin);\n    return authenticatedFetch(url, {\n        method: 'GET'\n    }).then(handleResponse);\n};\n\n// v0 endpoints used in Notifications.js\nexport const readClusters = () => {\n    return authenticatedFetch(clustersEndpoint).then(handleResponse);\n};\n\nexport const readNotifications = ({ params = {}}) => {\n    let url = new URL(notificationsEndpoint, window.location.origin);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return authenticatedFetch(url).then(handleResponse);\n};\n\nexport const readJobExplorerOptions = ({ params = {}}) => {\n    let url = new URL(jobExplorerOptionsEndpoint, window.location.origin);\n    return authenticatedFetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n","import { useReducer } from 'react';\nimport moment from 'moment';\n\nimport { formatDate } from '../Utilities/helpers';\n\nexport const useQueryParams = initial => {\n    const initialWithCalculatedParams = {\n        ...initial,\n        ...initial.sort_options && initial.sort_order && { sort_by: `${initial.sort_options}:${initial.sort_order}` }\n    };\n\n    const paramsReducer = (state, { type, value }) => {\n        switch (type) {\n            /* v0 api reducers */\n            case 'SET_STARTDATE':\n                return { ...state, startDate: value };\n            case 'SET_ENDDATE':\n                return { ...state, endDate: value };\n            case 'SET_ID':\n                if (!parseInt(value)) {\n                    const { id: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, id: parseInt(value) };\n            case 'SET_LIMIT':\n                if (!parseInt(value.limit)) {\n                    const { limit: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, limit: parseInt(value.limit) };\n            case 'SET_SEVERITY':\n                if (value.severity === '') {\n                    const { severity: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, ...value };\n\n            /* v1 api reducers */\n            case 'SET_OFFSET':\n            case 'SET_ATTRIBUTES':\n            case 'SET_JOB_TYPE':\n            case 'SET_STATUS':\n            case 'SET_ORG':\n            case 'SET_CLUSTER':\n            case 'SET_TEMPLATE':\n            case 'SET_AUTOMATION_STATUS':\n            case 'SET_CATEGORY':\n            case 'SET_FREQUENCY':\n            case 'SET_NAME':\n            case 'SET_ROOT_WORKFLOWS_AND_JOBS':\n                return { ...state, ...value };\n            case 'SET_QUICK_DATE_RANGE': {\n                let newState = { ...state };\n                if (value !== 'custom') {\n                    newState = { ...newState, start_date: null, end_date: null };\n                }\n\n                newState = { ...newState, ...value };\n                return newState;\n            }\n\n            case 'SET_START_DATE':\n            case 'SET_END_DATE': {\n                let newValues = {};\n                Object.entries(value).forEach(([ key, value ]) => {\n                    newValues[key] = formatDate(value);\n                });\n                return { ...state, ...newValues };\n            }\n\n            case 'SET_SORT_OPTIONS': {\n                return {\n                    ...state,\n                    sort_options: value.sort_options,\n                    ...state.sort_order && { sort_by: `${value.sort_options}:${state.sort_order}` } // Update sort by\n                };\n            }\n\n            case 'SET_SORT_ORDER': {\n                return {\n                    ...state,\n                    sort_order: value.sort_order,\n                    ...state.sort_options && { sort_by: `${state.sort_options}:${value.sort_order}` } // Update sort by\n                };\n            }\n\n            case 'REINITIALIZE':\n                return { ...value };\n            case 'RESET_FILTER':\n                return { ...initialWithCalculatedParams };\n            default:\n                throw new Error();\n        }\n    };\n\n    const [ queryParams, dispatch ] = useReducer(paramsReducer, { ...initialWithCalculatedParams });\n\n    const actionMapper = {\n        status: 'SET_STATUS',\n        quick_date_range: 'SET_QUICK_DATE_RANGE',\n        job_type: 'SET_JOB_TYPE',\n        org_id: 'SET_ORG',\n        cluster_id: 'SET_CLUSTER',\n        template_id: 'SET_TEMPLATE',\n        sort_order: 'SET_SORT_ORDER',\n        sort_options: `SET_SORT_OPTIONS`,\n        start_date: 'SET_START_DATE',\n        end_date: 'SET_END_DATE',\n        automation_status: 'SET_AUTOMATION_STATUS',\n        category: 'SET_CATEGORY',\n        frequency_period: 'SET_FREQUENCY',\n        name: 'SET_NAME',\n        only_root_workflows_and_standalone_jobs: 'SET_ROOT_WORKFLOWS_AND_JOBS'\n    };\n\n    return {\n        queryParams,\n        dispatch,\n        setLimit: limit => dispatch({ type: 'SET_LIMIT', value: { limit }}),\n        setOffset: offset => dispatch({ type: 'SET_OFFSET', value: { offset }}),\n        setFromToolbar: (varName, value = null) => {\n            if (!varName) {\n                dispatch({ type: 'RESET_FILTER' });\n            } else {\n                dispatch({ type: actionMapper[varName], value: { [varName]: value }});\n            }\n        },\n        /* v0 api usage after this line */\n        setSeverity: severity =>\n            dispatch({ type: 'SET_SEVERITY', value: { severity }}),\n        setEndDate: () => {\n            const endDate = moment().format('YYYY-MM-DD');\n            dispatch({ type: 'SET_ENDDATE', value: endDate });\n        },\n        setId: value => dispatch({ type: 'SET_ID', value }),\n        setStartDate: days => {\n            let startDate;\n            if (days === 7) {\n                startDate = moment()\n                .subtract(1, 'week')\n                .format('YYYY-MM-DD');\n            }\n\n            if (days === 14) {\n                startDate = moment()\n                .subtract(2, 'weeks')\n                .format('YYYY-MM-DD');\n            }\n\n            if (days === 31) {\n                startDate = moment()\n                .subtract(1, 'month')\n                .format('YYYY-MM-DD');\n            } else {\n                startDate = moment()\n                .subtract(days, 'days')\n                .format('YYYY-MM-DD');\n            }\n\n            dispatch({ type: 'SET_STARTDATE', value: startDate });\n        },\n        setStartDateAsString: value => dispatch({ type: 'SET_STARTDATE', value })\n    };\n};\n","/*eslint max-len: [\"error\", { \"ignoreStrings\": true }]*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Button,\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { WrenchIcon } from '@patternfly/react-icons';\n\nconst DefaultEmptyState = ({ preflightError: error }) => (\n    <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={WrenchIcon} />\n        {error.status === 404 && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n          No data found\n                </Title>\n                <EmptyStateBody>\n          Please visit{' '}\n                    <a\n                        href=\"https://docs.ansible.com/ansible-tower/latest/html/administration/usability_data_collection.html#automation-analytics\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n            here\n                    </a>{' '}\n          to learn how to enable Automation Analytics.\n                </EmptyStateBody>\n            </>\n        )}\n        {error.status === 401 && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n          Not authorized\n                </Title>\n                <EmptyStateBody>\n          You do not have the correct permissions to view this page.\n                </EmptyStateBody>\n            </>\n        )}\n        {!error.status && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n          Something went wrong, please try reloading the page\n                </Title>\n                <Button variant=\"primary\" onClick={() => window.location.reload()}>\n          Reload\n                </Button>\n            </>\n        )}\n    </EmptyState>\n);\n\nDefaultEmptyState.propTypes = {\n    preflightError: PropTypes.object\n};\n\nexport default DefaultEmptyState;\n","import { useState, useEffect, useReducer } from 'react';\n\nconst dataFetchReducer = (state, action) => {\n    switch (action.type) {\n        case 'FETCH_INIT':\n            return {\n                ...state,\n                isLoading: true,\n                isSuccess: false,\n                error: null\n            };\n        case 'FETCH_SUCCESS':\n            return {\n                ...state,\n                isLoading: false,\n                isSuccess: true,\n                error: null,\n                data: action.payload\n            };\n        case 'FETCH_FAILURE':\n            return {\n                ...state,\n                isLoading: false,\n                isSuccess: false,\n                error: action.payload\n            };\n        case 'UPDATE_DATA':\n            return {\n                ...state,\n                data: action.payload\n            };\n        default:\n            throw new Error();\n    }\n};\n\nconst useApi = (initialData, postprocess = d => d) => {\n    const [ request, setRequest ] = useState(null);\n\n    const [ state, dispatch ] = useReducer(dataFetchReducer, {\n        isLoading: false,\n        isSuccess: false,\n        error: null,\n        data: initialData\n    });\n\n    useEffect(() => {\n    // Prevent fetching nothing\n        if (!request) {\n            return;\n        }\n\n        // Initialize\n        let didCancel = false;\n        dispatch({ type: 'FETCH_INIT' });\n\n        // Fetching\n        request.then(data => {\n            if (!didCancel) {\n                dispatch({\n                    type: 'FETCH_SUCCESS',\n                    payload: postprocess(data)\n                });\n            }\n        }).catch(e => {\n            if (!didCancel) {\n                dispatch({ type: 'FETCH_FAILURE', payload: e });\n            }\n        });\n\n        return () => {\n            didCancel = true;\n        };\n    }, [ request ]);\n\n    const setData = data => {\n        dispatch({ type: 'UPDATE_DATA', payload: data });\n    };\n\n    return [ state, setRequest, setData ];\n};\n\nexport default useApi;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nconst initializeChart = Chart => {\n    const BaseChart = props => {\n        const { id, margin } = props;\n\n        const getWidth = () => {\n            let width;\n            width =\n        parseInt(d3.select('#' + id).style('width')) -\n          margin.left -\n          margin.right || 700;\n            return width;\n        };\n\n        const getHeight = () => {\n            let height;\n            height =\n        parseInt(d3.select('#' + id).style('height')) -\n          margin.top -\n          margin.bottom || 450;\n            return height;\n        };\n\n        return <Chart {...props} getWidth={getWidth} getHeight={getHeight} />;\n    };\n\n    BaseChart.propTypes = {\n        id: PropTypes.string,\n        margin: PropTypes.object\n    };\n\n    return BaseChart;\n};\n\ninitializeChart.propTypes = {\n    Chart: PropTypes.element\n};\n\nexport default initializeChart;\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst NoData = () => (\n    <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={CubesIcon} />\n        <Title headingLevel=\"h5\" size=\"lg\">\n      No Data\n        </Title>\n    </EmptyState>\n);\n\nexport default NoData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateIcon,\n    EmptyStateVariant,\n    Title\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { global_danger_color_200 as globalDangerColor200 } from '@patternfly/react-tokens';\n\nconst ApiErrorState = ({ message }) => (\n    <EmptyState variant={EmptyStateVariant.small}>\n        <EmptyStateIcon\n            icon={ExclamationCircleIcon}\n            color={globalDangerColor200.value}\n        />\n        <Title headingLevel=\"h2\" size=\"lg\">\n      Error\n        </Title>\n        <EmptyStateBody>{message}</EmptyStateBody>\n    </EmptyState>\n);\n\nApiErrorState.propTypes = {\n    message: PropTypes.string\n};\n\nexport default ApiErrorState;\n","export const optionsForCategories = {\n    status: {\n        isSingle: false,\n        name: 'Status',\n        placeholder: 'Filter by job status'\n    },\n    quick_date_range: {\n        isSingle: true,\n        name: 'Date',\n        placeholder: 'Filter by date'\n    },\n    job_type: {\n        isSingle: false,\n        name: 'Job',\n        placeholder: 'Filter by job type'\n    },\n    org_id: {\n        isSingle: false,\n        name: 'Organization',\n        placeholder: 'Filter by organization'\n    },\n    cluster_id: {\n        isSingle: false,\n        name: 'Cluster',\n        placeholder: 'Filter by cluster'\n    },\n    template_id: {\n        isSingle: false,\n        name: 'Template',\n        placeholder: 'Filter by template'\n    },\n    sort_options: {\n        isSingle: true,\n        name: 'Sort by',\n        placeholder: 'Sort by attribute'\n    },\n    automation_status: {\n        isSingle: false,\n        name: 'Automation status',\n        placeholder: 'Filter by automation status'\n    },\n    frequency_period: {\n        isSingle: false,\n        name: 'Frequency',\n        placeholder: 'Filter by frequency'\n    },\n    category: {\n        isSingle: false,\n        name: 'Category',\n        placeholder: 'Filter by category'\n    },\n    name: {\n        isSingle: true,\n        name: 'Name',\n        placeholder: 'Filter by name'\n    }\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarItem, Select, SelectOption } from '@patternfly/react-core';\n\nconst CategoryDropdown = ({\n    selected,\n    setSelected = () => {},\n    categories = []\n}) => {\n    const [ isExpanded, setIsExpanded ] = useState(false);\n\n    return (\n        <ToolbarItem>\n            <Select\n                isOpen={isExpanded}\n                variant={'single'}\n                aria-label={'Categories'}\n                onToggle={() => setIsExpanded(!isExpanded)}\n                onSelect={(_event, selection) => {\n                    setSelected(selection);\n                    setIsExpanded(false);\n                }}\n                selections={selected}\n                placeholderText={'Filter by'}\n            >\n                {categories.map(({ key, name }) => (\n                    <SelectOption key={key} value={key}>\n                        {name}\n                    </SelectOption>\n                ))}\n            </Select>\n        </ToolbarItem>\n    );\n};\n\nCategoryDropdown.propTypes = {\n    categories: PropTypes.array,\n    selected: PropTypes.string,\n    setSelected: PropTypes.func\n};\n\nexport default CategoryDropdown;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ToolbarFilter,\n    Select,\n    SelectOption as PFSelectOption,\n    TextInput,\n    InputGroup,\n    ToolbarItem,\n    Button\n} from '@patternfly/react-core';\n\nimport {\n    SearchIcon\n} from '@patternfly/react-icons';\n\nimport {\n    handleCheckboxChips,\n    handleSingleChips\n} from '../helpers';\nimport { optionsForCategories } from '../constants';\nimport styled from 'styled-components';\n\nconst SelectOption = styled(PFSelectOption)`\n    display: block;\n    overflow-x: hidden;\n    text-overflow: ellipsis;\n    max-width: 300px;\n`;\n\nconst renderValues = values =>\n    values && values.map(({ key, value, description }) => (\n        <SelectOption key={ key } value={ key } description={ description }>\n            <span style={{ marginLeft: 5 }}>{ value } </span>\n        </SelectOption>\n    ));\n\nconst ToolbarFilterItem = ({\n    categoryKey,\n    filter = null,\n    values = [],\n    isVisible = true,\n    hasChips = true,\n    setFilter\n}) => {\n    const [ expanded, setExpanded ] = useState(false);\n    const [ searchVal, setSearchVal ] = useState('');\n    const options = optionsForCategories[categoryKey];\n\n    const onDelete = (name, valueToDelete) => {\n        const single = optionsForCategories[categoryKey].isSingle;\n\n        if (single) {\n            setFilter(null);\n        } else {\n            const keyToDelete = values.find(({ value }) => value === valueToDelete)\n            .key;\n            const filteredArr = filter.filter(value => value !== keyToDelete);\n            setFilter(filteredArr);\n        }\n    };\n\n    const onFilter = (_event, textInput) => {\n        if (textInput === '') {\n            return renderValues(values);\n        } else {\n            return renderValues(\n                values.filter(({ value }) =>\n                    value.toLowerCase().includes(textInput.toLowerCase())\n                )\n            );\n        }\n    };\n\n    const handleChips = () => {\n        if (options.isSingle) {\n            return handleSingleChips(filter, values);\n        } else {\n            return handleCheckboxChips(filter, values);\n        }\n    };\n\n    const onSelect = (event, selection) => {\n        if (options.isSingle) {\n            setFilter(selection);\n            setExpanded(false);\n        } else {\n            setFilter(!filter.includes(selection)\n                ? [ ...filter, selection ]\n                : filter.filter(value => value !== selection)\n            );\n        }\n    };\n\n    const handleOnClick = () => {\n        setFilter(searchVal);\n        setSearchVal(searchVal);\n    };\n\n    const handleInputChange = e => {\n        setSearchVal(e);\n    };\n\n    const renderSearch = () => {\n        return (\n            <ToolbarItem>\n                <InputGroup>\n                    <TextInput name=\"textInput1\" id=\"textInput1\" type=\"search\" aria-label=\"search input\" onChange={handleInputChange} />\n                    <Button variant='control' aria-label=\"search button for search input\">\n                        <SearchIcon onClick={handleOnClick} />\n                    </Button>\n                </InputGroup>\n            </ToolbarItem>\n        );\n    };\n\n    if (categoryKey === 'name') {\n        return (\n            <ToolbarFilter\n                data-cy={categoryKey}\n                key={categoryKey}\n                showToolbarItem={isVisible}\n                chips={[]}\n                categoryName={options.name}\n                deleteChip={null}\n            >\n                { renderSearch() }\n            </ToolbarFilter>\n        );\n    } else {\n        return (\n            <ToolbarFilter\n                data-cy={categoryKey}\n                key={categoryKey}\n                showToolbarItem={isVisible}\n                chips={hasChips ? handleChips() : []}\n                categoryName={options.name}\n                deleteChip={hasChips ? onDelete : null}\n            >\n                <Select\n                    variant={options.isSingle ? 'single' : 'checkbox'}\n                    aria-label={categoryKey}\n                    onToggle={() => setExpanded(!expanded)}\n                    onSelect={onSelect}\n                    selections={filter}\n                    isOpen={expanded}\n                    hasInlineFilter\n                    placeholderText={options.placeholder}\n                    onFilter={onFilter}\n                    maxHeight={'1000%'}\n                >\n                    { renderValues(values)}\n                </Select>\n            </ToolbarFilter>\n        );\n    }\n};\n\nToolbarFilterItem.propTypes = {\n    categoryKey: PropTypes.string.isRequired,\n    filter: PropTypes.any,\n    values: PropTypes.array,\n    isVisible: PropTypes.bool,\n    hasChips: PropTypes.bool,\n    setFilter: PropTypes.func.isRequired\n};\n\nexport default ToolbarFilterItem;\n","/**\n * Get comparator values if their key is in the item list\n */\nexport const handleCheckboxChips = (item, comparator) => {\n    if (item && comparator) {\n        return item.reduce((acc, i) => {\n            Number.isInteger(parseInt(i)) ? (i = parseInt(i)) : i;\n\n            comparator.forEach(cmpItem => {\n                if (cmpItem.key === i) {\n                    acc.push(cmpItem.value);\n                }\n            });\n\n            return acc;\n        }, []);\n    }\n\n    return [];\n};\n\n/**\n * Convert a list of objects to a list of the last value if defined\n */\nexport const handleSingleChips = (item, comparator) => {\n    if (item && typeof item === 'string' && comparator) {\n        let val;\n        comparator.forEach(i => {\n            if (i.key === item) {\n                val = i.value;\n            }\n        });\n\n        if (val !== undefined) {\n            return [ val ];\n        }\n    }\n\n    return [];\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ToolbarGroup\n} from '@patternfly/react-core';\n\nimport CategoryDropdown from '../CustomFormElements/CategoryDropdown';\nimport ToolbarFilterItem from '../CustomFormElements/ToolbarFilterItem';\nimport { optionsForCategories } from '../constants';\n\nconst FilterCategoriesGroup = ({\n    filterCategories,\n    filters,\n    setFilters\n}) => {\n    const [ currentCategory, setCurrentCategory ] = useState(\n        Object.keys(filterCategories)[0]\n    );\n\n    return (\n        <ToolbarGroup variant=\"filter-group\">\n            <CategoryDropdown\n                selected={currentCategory}\n                setSelected={setCurrentCategory}\n                categories={Object.keys(filterCategories).map(el => ({\n                    key: el,\n                    name: optionsForCategories[el].name\n                }))}\n            />\n            {Object.keys(filterCategories).map(key => (\n                <ToolbarFilterItem\n                    key={key}\n                    categoryKey={key}\n                    filter={filters[key]}\n                    values={filterCategories[key]}\n                    isVisible={currentCategory === key}\n                    setFilter={value => setFilters(key, value)}\n                />\n            ))}\n        </ToolbarGroup>\n    );\n};\n\nFilterCategoriesGroup.propTypes = {\n    filterCategories: PropTypes.object.isRequired,\n    filters: PropTypes.object.isRequired,\n    setFilters: PropTypes.func.isRequired\n};\n\nexport default FilterCategoriesGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, TextInput } from '@patternfly/react-core';\n\nconst CustomDateSelector = ({\n    onInputChange = () => {},\n    startDate = '',\n    endDate = ''\n}) => {\n    return (\n        <>\n            <InputGroup>\n                <TextInput\n                    name=\"startDate\"\n                    id=\"startDate\"\n                    type=\"date\"\n                    aria-label=\"Start Date\"\n                    value={startDate}\n                    onChange={e => onInputChange('start_date', e)}\n                />\n            </InputGroup>\n            <InputGroup>\n                <TextInput\n                    name=\"endDate\"\n                    id=\"endDate\"\n                    type=\"date\"\n                    aria-label=\"End Date\"\n                    value={endDate}\n                    onChange={e => onInputChange('end_date', e)}\n                />\n            </InputGroup>\n        </>\n    );\n};\n\nCustomDateSelector.propTypes = {\n    startDate: PropTypes.string,\n    endDate: PropTypes.string,\n    onInputChange: PropTypes.func\n};\n\nexport default CustomDateSelector;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ToolbarGroup\n} from '@patternfly/react-core';\n\nimport ToolbarFilterItem from '../CustomFormElements/ToolbarFilterItem';\nimport CustomDateSelector from '../CustomFormElements/CustomDateSelector';\n\nconst QuickDateGroup = ({\n    filters,\n    setFilters,\n    values\n}) => (\n    <ToolbarGroup variant=\"filter-group\">\n        <ToolbarFilterItem\n            categoryKey=\"quick_date_range\"\n            filter={filters.quick_date_range}\n            values={values}\n            setFilter={value => setFilters('quick_date_range', value)}\n            hasChips={false}\n        />\n        {filters.quick_date_range &&\n         filters.quick_date_range.includes('custom') && (\n            <CustomDateSelector\n                startDate={filters.start_date ? filters.start_date : ''}\n                endDate={filters.end_date ? filters.end_date : ''}\n                onInputChange={setFilters}\n            />\n        )}\n    </ToolbarGroup>\n);\n\nQuickDateGroup.propTypes = {\n    filters: PropTypes.object.isRequired,\n    setFilters: PropTypes.func.isRequired,\n    values: PropTypes.array.isRequired\n};\n\nexport default QuickDateGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ToolbarGroup,\n    Button\n} from '@patternfly/react-core';\nimport {\n    SortAmountDownIcon,\n    SortAmountUpIcon\n} from '@patternfly/react-icons';\n\nimport ToolbarFilterItem from '../CustomFormElements/ToolbarFilterItem';\n\nconst SortByGroup = ({\n    filters,\n    setFilters,\n    sort_options\n}) => (\n    <ToolbarGroup variant=\"filter-group\">\n        <ToolbarFilterItem\n            categoryKey=\"sort_options\"\n            filter={filters.sort_options}\n            values={sort_options}\n            setFilter={value =>\n                setFilters('sort_options', value)\n            }\n            hasChips={false}\n        />\n        <Button variant=\"control\"\n            onClick={() => setFilters(\n                'sort_order',\n                filters.sort_order === 'asc' ? 'desc' : 'asc'\n            )}\n        >\n            {filters.sort_order === 'asc' && (<SortAmountUpIcon />)}\n            {filters.sort_order === 'desc' && (<SortAmountDownIcon />)}\n        </Button>\n    </ToolbarGroup>\n);\n\nSortByGroup.propTypes = {\n    filters: PropTypes.object.isRequired,\n    setFilters: PropTypes.func.isRequired,\n    sort_options: PropTypes.array.isRequired\n};\n\nexport default SortByGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Button,\n    Tooltip,\n    Switch\n} from '@patternfly/react-core';\nimport {\n    Card,\n    CardTitle,\n    CardBody,\n    CardActions,\n    CardHeader\n} from '@patternfly/react-core';\nimport {\n    QuestionCircleIcon,\n    TimesIcon\n} from '@patternfly/react-icons';\n\n/* TODO: For future work: make settings more modular for different pages */\nconst SettingsPanel = ({\n    filters,\n    setFilters,\n    settingsExpanded,\n    setSettingsExpanded\n}) => (\n    <Card isFlat style={{ backgroundColor: '#EEEEEE' }}>\n        <CardHeader>\n            <CardActions>\n                <Button\n                    variant=\"plain\"\n                    onClick={() => setSettingsExpanded(!settingsExpanded)}\n                >\n                    <TimesIcon />\n                </Button>\n            </CardActions>\n            <CardTitle>Settings</CardTitle>\n        </CardHeader>\n        <CardBody>\n            <Switch\n                id=\"showRootWorkflowJobs\"\n                label=\"Ignore nested workflows and jobs\"\n                labelOff=\"Ignore nested workflows and jobs\"\n                isChecked={filters.only_root_workflows_and_standalone_jobs}\n                onChange={val => {\n                    setFilters('only_root_workflows_and_standalone_jobs', val);\n                }}\n            />\n            <Tooltip\n                position={'top'}\n                content={\n                    <div>\n                        {' '}\n            If enabled, nested workflows and jobs will not be included in the\n            overall totals. Enable this option to filter out duplicate\n            entries.\n                    </div>\n                }\n            >\n                <QuestionCircleIcon />\n            </Tooltip>\n        </CardBody>\n    </Card>\n);\n\nSettingsPanel.propTypes = {\n    filters: PropTypes.object.isRequired,\n    setFilters: PropTypes.func.isRequired,\n    settingsExpanded: PropTypes.bool.isRequired,\n    setSettingsExpanded: PropTypes.func.isRequired\n};\n\nexport default SettingsPanel;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Toolbar,\n    ToolbarContent,\n    Button,\n    ToolbarItem\n} from '@patternfly/react-core';\nimport {\n    FilterIcon,\n    CogIcon\n} from '@patternfly/react-icons';\n\nimport { optionsForCategories } from './constants';\nimport FilterCategoriesGroup from './Groups/FiltersCategoriesGroup';\nimport QuickDateGroup from './Groups/QuickDateGroup';\nimport SortByGroup from './Groups/SortByGroup';\nimport SettingsPanel from './Groups/SettingsPanel';\n\nconst FilterableToolbar = ({\n    categories,\n    filters,\n    setFilters,\n    pagination = null,\n    hasSettings = false\n}) => {\n    const [ settingsExpanded, setSettingsExpanded ] = useState(false);\n    const { quick_date_range, sort_options, ...restCategories } = categories;\n\n    // Filter out elements which are not in the option object.\n    const filterCategories = Object.keys(restCategories)\n    .filter(key => Object.keys(optionsForCategories).includes(key))\n    .reduce((obj, key) => {\n        obj[key] = restCategories[key];\n        return obj;\n    }, {});\n\n    return (\n        <>\n            <Toolbar\n                id=\"filterable-toolbar-with-chip-groups\"\n                clearAllFilters={() => {\n                    setFilters(null, null);\n                }}\n                collapseListedFiltersBreakpoint=\"xl\"\n            >\n                <ToolbarContent>\n                    <Button variant=\"control\">\n                        <FilterIcon />\n                    </Button>\n                    {Object.keys(filterCategories).length > 0 && (\n                        <FilterCategoriesGroup\n                            filterCategories={filterCategories}\n                            filters={filters}\n                            setFilters={setFilters}\n                        />\n                    )}\n                    {quick_date_range &&\n                        <QuickDateGroup\n                            filters={filters}\n                            setFilters={setFilters}\n                            values={quick_date_range}\n                        />}\n                    {sort_options &&\n                        <SortByGroup\n                            filters={filters}\n                            setFilters={setFilters}\n                            sort_options={sort_options}\n                        />}\n                    {hasSettings && (\n                        <ToolbarItem>\n                            <Button\n                                variant=\"plain\"\n                                onClick={() => setSettingsExpanded(!settingsExpanded)}\n                                aria-label=\"settings\"\n                                isActive={settingsExpanded}\n                            >\n                                <CogIcon />\n                            </Button>\n                        </ToolbarItem>\n                    )}\n                    {pagination && (\n                        <ToolbarItem\n                            variant=\"pagination\"\n                            visibility={{ default: 'hidden', lg: 'visible' }}\n                        >\n                            {pagination}\n                        </ToolbarItem>\n                    )}\n                </ToolbarContent>\n                {settingsExpanded &&\n                    <SettingsPanel\n                        filters={filters}\n                        setFilters={setFilters}\n                        settingsExpanded={settingsExpanded}\n                        setSettingsExpanded={setSettingsExpanded}\n                    />}\n            </Toolbar>\n        </>\n    );\n};\n\nFilterableToolbar.propTypes = {\n    categories: PropTypes.object.isRequired,\n    filters: PropTypes.object.isRequired,\n    setFilters: PropTypes.func.isRequired,\n    pagination: PropTypes.object,\n    hasSettings: PropTypes.bool\n};\n\nexport default FilterableToolbar;\n","import Toolbar from './Toolbar';\n\nexport default Toolbar;\n","import { Paths } from '../paths';\nimport { stringify } from 'query-string';\n\nconst useRedirect = (history, path) => query => {\n    const search = stringify(query, { arrayFormat: 'bracket' });\n    history.push({\n        pathname: Paths[path],\n        search\n    });\n};\n\nexport default useRedirect;\n","var map = {\n\t\"./af\": 237,\n\t\"./af.js\": 237,\n\t\"./ar\": 238,\n\t\"./ar-dz\": 239,\n\t\"./ar-dz.js\": 239,\n\t\"./ar-kw\": 240,\n\t\"./ar-kw.js\": 240,\n\t\"./ar-ly\": 241,\n\t\"./ar-ly.js\": 241,\n\t\"./ar-ma\": 242,\n\t\"./ar-ma.js\": 242,\n\t\"./ar-sa\": 243,\n\t\"./ar-sa.js\": 243,\n\t\"./ar-tn\": 244,\n\t\"./ar-tn.js\": 244,\n\t\"./ar.js\": 238,\n\t\"./az\": 245,\n\t\"./az.js\": 245,\n\t\"./be\": 246,\n\t\"./be.js\": 246,\n\t\"./bg\": 247,\n\t\"./bg.js\": 247,\n\t\"./bm\": 248,\n\t\"./bm.js\": 248,\n\t\"./bn\": 249,\n\t\"./bn-bd\": 250,\n\t\"./bn-bd.js\": 250,\n\t\"./bn.js\": 249,\n\t\"./bo\": 251,\n\t\"./bo.js\": 251,\n\t\"./br\": 252,\n\t\"./br.js\": 252,\n\t\"./bs\": 253,\n\t\"./bs.js\": 253,\n\t\"./ca\": 254,\n\t\"./ca.js\": 254,\n\t\"./cs\": 255,\n\t\"./cs.js\": 255,\n\t\"./cv\": 256,\n\t\"./cv.js\": 256,\n\t\"./cy\": 257,\n\t\"./cy.js\": 257,\n\t\"./da\": 258,\n\t\"./da.js\": 258,\n\t\"./de\": 259,\n\t\"./de-at\": 260,\n\t\"./de-at.js\": 260,\n\t\"./de-ch\": 261,\n\t\"./de-ch.js\": 261,\n\t\"./de.js\": 259,\n\t\"./dv\": 262,\n\t\"./dv.js\": 262,\n\t\"./el\": 263,\n\t\"./el.js\": 263,\n\t\"./en-au\": 264,\n\t\"./en-au.js\": 264,\n\t\"./en-ca\": 265,\n\t\"./en-ca.js\": 265,\n\t\"./en-gb\": 266,\n\t\"./en-gb.js\": 266,\n\t\"./en-ie\": 267,\n\t\"./en-ie.js\": 267,\n\t\"./en-il\": 268,\n\t\"./en-il.js\": 268,\n\t\"./en-in\": 269,\n\t\"./en-in.js\": 269,\n\t\"./en-nz\": 270,\n\t\"./en-nz.js\": 270,\n\t\"./en-sg\": 271,\n\t\"./en-sg.js\": 271,\n\t\"./eo\": 272,\n\t\"./eo.js\": 272,\n\t\"./es\": 273,\n\t\"./es-do\": 274,\n\t\"./es-do.js\": 274,\n\t\"./es-mx\": 275,\n\t\"./es-mx.js\": 275,\n\t\"./es-us\": 276,\n\t\"./es-us.js\": 276,\n\t\"./es.js\": 273,\n\t\"./et\": 277,\n\t\"./et.js\": 277,\n\t\"./eu\": 278,\n\t\"./eu.js\": 278,\n\t\"./fa\": 279,\n\t\"./fa.js\": 279,\n\t\"./fi\": 280,\n\t\"./fi.js\": 280,\n\t\"./fil\": 281,\n\t\"./fil.js\": 281,\n\t\"./fo\": 282,\n\t\"./fo.js\": 282,\n\t\"./fr\": 283,\n\t\"./fr-ca\": 284,\n\t\"./fr-ca.js\": 284,\n\t\"./fr-ch\": 285,\n\t\"./fr-ch.js\": 285,\n\t\"./fr.js\": 283,\n\t\"./fy\": 286,\n\t\"./fy.js\": 286,\n\t\"./ga\": 287,\n\t\"./ga.js\": 287,\n\t\"./gd\": 288,\n\t\"./gd.js\": 288,\n\t\"./gl\": 289,\n\t\"./gl.js\": 289,\n\t\"./gom-deva\": 290,\n\t\"./gom-deva.js\": 290,\n\t\"./gom-latn\": 291,\n\t\"./gom-latn.js\": 291,\n\t\"./gu\": 292,\n\t\"./gu.js\": 292,\n\t\"./he\": 293,\n\t\"./he.js\": 293,\n\t\"./hi\": 294,\n\t\"./hi.js\": 294,\n\t\"./hr\": 295,\n\t\"./hr.js\": 295,\n\t\"./hu\": 296,\n\t\"./hu.js\": 296,\n\t\"./hy-am\": 297,\n\t\"./hy-am.js\": 297,\n\t\"./id\": 298,\n\t\"./id.js\": 298,\n\t\"./is\": 299,\n\t\"./is.js\": 299,\n\t\"./it\": 300,\n\t\"./it-ch\": 301,\n\t\"./it-ch.js\": 301,\n\t\"./it.js\": 300,\n\t\"./ja\": 302,\n\t\"./ja.js\": 302,\n\t\"./jv\": 303,\n\t\"./jv.js\": 303,\n\t\"./ka\": 304,\n\t\"./ka.js\": 304,\n\t\"./kk\": 305,\n\t\"./kk.js\": 305,\n\t\"./km\": 306,\n\t\"./km.js\": 306,\n\t\"./kn\": 307,\n\t\"./kn.js\": 307,\n\t\"./ko\": 308,\n\t\"./ko.js\": 308,\n\t\"./ku\": 309,\n\t\"./ku.js\": 309,\n\t\"./ky\": 310,\n\t\"./ky.js\": 310,\n\t\"./lb\": 311,\n\t\"./lb.js\": 311,\n\t\"./lo\": 312,\n\t\"./lo.js\": 312,\n\t\"./lt\": 313,\n\t\"./lt.js\": 313,\n\t\"./lv\": 314,\n\t\"./lv.js\": 314,\n\t\"./me\": 315,\n\t\"./me.js\": 315,\n\t\"./mi\": 316,\n\t\"./mi.js\": 316,\n\t\"./mk\": 317,\n\t\"./mk.js\": 317,\n\t\"./ml\": 318,\n\t\"./ml.js\": 318,\n\t\"./mn\": 319,\n\t\"./mn.js\": 319,\n\t\"./mr\": 320,\n\t\"./mr.js\": 320,\n\t\"./ms\": 321,\n\t\"./ms-my\": 322,\n\t\"./ms-my.js\": 322,\n\t\"./ms.js\": 321,\n\t\"./mt\": 323,\n\t\"./mt.js\": 323,\n\t\"./my\": 324,\n\t\"./my.js\": 324,\n\t\"./nb\": 325,\n\t\"./nb.js\": 325,\n\t\"./ne\": 326,\n\t\"./ne.js\": 326,\n\t\"./nl\": 327,\n\t\"./nl-be\": 328,\n\t\"./nl-be.js\": 328,\n\t\"./nl.js\": 327,\n\t\"./nn\": 329,\n\t\"./nn.js\": 329,\n\t\"./oc-lnc\": 330,\n\t\"./oc-lnc.js\": 330,\n\t\"./pa-in\": 331,\n\t\"./pa-in.js\": 331,\n\t\"./pl\": 332,\n\t\"./pl.js\": 332,\n\t\"./pt\": 333,\n\t\"./pt-br\": 334,\n\t\"./pt-br.js\": 334,\n\t\"./pt.js\": 333,\n\t\"./ro\": 335,\n\t\"./ro.js\": 335,\n\t\"./ru\": 336,\n\t\"./ru.js\": 336,\n\t\"./sd\": 337,\n\t\"./sd.js\": 337,\n\t\"./se\": 338,\n\t\"./se.js\": 338,\n\t\"./si\": 339,\n\t\"./si.js\": 339,\n\t\"./sk\": 340,\n\t\"./sk.js\": 340,\n\t\"./sl\": 341,\n\t\"./sl.js\": 341,\n\t\"./sq\": 342,\n\t\"./sq.js\": 342,\n\t\"./sr\": 343,\n\t\"./sr-cyrl\": 344,\n\t\"./sr-cyrl.js\": 344,\n\t\"./sr.js\": 343,\n\t\"./ss\": 345,\n\t\"./ss.js\": 345,\n\t\"./sv\": 346,\n\t\"./sv.js\": 346,\n\t\"./sw\": 347,\n\t\"./sw.js\": 347,\n\t\"./ta\": 348,\n\t\"./ta.js\": 348,\n\t\"./te\": 349,\n\t\"./te.js\": 349,\n\t\"./tet\": 350,\n\t\"./tet.js\": 350,\n\t\"./tg\": 351,\n\t\"./tg.js\": 351,\n\t\"./th\": 352,\n\t\"./th.js\": 352,\n\t\"./tk\": 353,\n\t\"./tk.js\": 353,\n\t\"./tl-ph\": 354,\n\t\"./tl-ph.js\": 354,\n\t\"./tlh\": 355,\n\t\"./tlh.js\": 355,\n\t\"./tr\": 356,\n\t\"./tr.js\": 356,\n\t\"./tzl\": 357,\n\t\"./tzl.js\": 357,\n\t\"./tzm\": 358,\n\t\"./tzm-latn\": 359,\n\t\"./tzm-latn.js\": 359,\n\t\"./tzm.js\": 358,\n\t\"./ug-cn\": 360,\n\t\"./ug-cn.js\": 360,\n\t\"./uk\": 361,\n\t\"./uk.js\": 361,\n\t\"./ur\": 362,\n\t\"./ur.js\": 362,\n\t\"./uz\": 363,\n\t\"./uz-latn\": 364,\n\t\"./uz-latn.js\": 364,\n\t\"./uz.js\": 363,\n\t\"./vi\": 365,\n\t\"./vi.js\": 365,\n\t\"./x-pseudo\": 366,\n\t\"./x-pseudo.js\": 366,\n\t\"./yo\": 367,\n\t\"./yo.js\": 367,\n\t\"./zh-cn\": 368,\n\t\"./zh-cn.js\": 368,\n\t\"./zh-hk\": 369,\n\t\"./zh-hk.js\": 369,\n\t\"./zh-mo\": 370,\n\t\"./zh-mo.js\": 370,\n\t\"./zh-tw\": 371,\n\t\"./zh-tw.js\": 371\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 466;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Switch } from '@patternfly/react-core';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  overflow: auto;\n  width: 100%;\n  height: ${props => props.height};\n`;\n\nconst LegendDetail = styled.div`\n  display: flex;\n  padding: 7.5px 15px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  overflow: auto;\n`;\n\nconst Color = styled.div.attrs(props => ({\n    color: props.color || 'black'\n}))`\n  min-width: 12px;\n  height: 12px;\n  background: ${props => props.color};\n  margin-right: 20px;\n`;\n\nconst Title = styled.span`\n  font-size: 15px;\n  display: inline-block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n`;\n\nconst SubTitle = styled.span`\n  font-size: 15px;\n  margin-left: auto;\n  margin-right: 0;\n  padding-right: 10px;\n`;\n\nconst Legend = ({\n    data,\n    selected,\n    height,\n    onToggle\n}) => {\n    return (\n        <Container height={ height }>\n            { data.map(\n                ({ name, value, id, count }, index) => (\n                    <LegendDetail key={ index }>\n                        <Wrapper>\n                            <Color color={ value } />\n                            <Title>{ name }</Title>\n                        </Wrapper>\n                        {count && (\n                            <SubTitle>{count}</SubTitle>\n                        )}\n                        {selected && (\n                            <Switch\n                                isChecked={selected.some(selection => selection === id)}\n                                onChange={() => onToggle(id)}\n                                aria-label={name}\n                                value={id}\n                                key={index}\n                                id={id}\n                            />\n                        )}\n                    </LegendDetail>\n                )) }\n        </Container>\n    );\n};\n\nLegend.propTypes = {\n    data: PropTypes.array,\n    selected: PropTypes.array,\n    onToggle: PropTypes.func,\n    height: PropTypes.string\n};\n\nexport default Legend;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport styled from 'styled-components';\n\nimport initializeChart from '.././BaseChart';\nimport Legend from '../../Utilities/Legend';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nconst formatDate = date => {\n    const pieces = date.split('-');\n    return `${pieces[1]}/${pieces[2]}`;\n};\n\nconst GroupedBarChart = ({\n    onClick = null,\n    TooltipClass,\n    legend,\n    ...props\n}) => {\n    const colors = legend.map(({ id, name }) => {\n        return {\n            name,\n            value: props.colorFunc(id),\n            id\n        };\n    });\n    const [ selectedIds, setSelectedIds ] = useState(\n        legend.map(({ id }) => id).slice(0, 8)\n    );\n    let timeout = null;\n\n    const handleToggle = id => {\n        if (selectedIds.includes(id)) {\n            setSelectedIds(selectedIds.filter(el => el !== id));\n        } else {\n            setSelectedIds([ ...selectedIds, id ]);\n        }\n    };\n\n    const draw = () => {\n        // Clear our chart container element first\n        d3.selectAll('#' + props.id + ' > *').remove();\n        let { data: unformattedData } = props;\n        const data = unformattedData.reduce((formatted, { date, items }) => {\n            const selectedOrgs = items.filter(({ id }) => selectedIds.includes(id));\n            return formatted.concat({ date, selectedOrgs });\n        }, []);\n        const width = props.getWidth();\n        const height = props.getHeight();\n        // x scale of entire chart\n        const x0 = d3\n        .scaleBand()\n        .range([ 0, width ])\n        .padding(0.35);\n        // x scale of individual grouped bars\n        const x1 = d3.scaleBand();\n        const y = d3.scaleLinear().range([ height, 0 ]);\n        // format our X Axis ticks\n        const maxTicksOneMonth = Math.round(data.length / (data.length / 2));\n        const maxTicksTwoMonths = Math.round(data.length / (data.length / 4));\n        let ticks = data.map(d => d.date);\n        if (data.length > 14) {\n            ticks = data\n            .map((d, i) => (i % (data.length > 31 ? maxTicksTwoMonths : maxTicksOneMonth) === 0 ? d.date : undefined))\n            .filter(item => item);\n        }\n\n        const xAxis = d3\n        .axisBottom(x0)\n        .tickValues(ticks)\n        .tickFormat(formatDate);\n\n        const yAxis = d3\n        .axisLeft(y)\n        .ticks(8)\n        .tickSize(-width, 0, 0);\n\n        const svg = d3\n        .select('#' + props.id)\n        .append('svg')\n        .attr('width', width + props.margin.left + props.margin.right)\n        .attr('height', height + props.margin.bottom + props.margin.top)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          props.margin.left +\n          ',' +\n          props.margin.top +\n          ')'\n        );\n\n        const dates = data.map(d => d.date);\n        const tooltip = new TooltipClass({\n            svg: '#' + props.id\n        });\n        x0.domain(dates);\n        x1.domain(selectedIds).range([ 0, x0.bandwidth() ]);\n        y.domain([\n            0,\n            d3.max(data, date => d3.max(date.selectedOrgs, d => d.value * 1.15)) || 8\n        ]);\n\n        // add y axis\n        svg\n        .append('g')\n        .attr('class', 'y axis')\n        .call(yAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7')\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 6)\n        .attr('dy', '.71em')\n        .style('text-anchor', 'end')\n        .style('font-weight', 'bold')\n        .text('Value');\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text(props.yLabel);\n\n        // add x axis\n        svg\n        .append('g')\n        .attr('class', 'x axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(xAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' + width / 2 + ' ,' + (height + props.margin.top + 25) + ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n        // add the groups\n        let slice = svg.selectAll('.slice').data(data);\n        slice.exit().remove();\n\n        const enter = slice\n        .enter()\n        .append('g')\n        .attr('class', 'g foo')\n        .attr('transform', d => 'translate(' + x0(d.date) + ',0)');\n        slice = slice.merge(enter);\n        // add the individual bars\n        let bars = slice.selectAll('rect').data(function(d) {\n            return d.selectedOrgs;\n        });\n        bars.exit().remove();\n\n        const color = props.colorFunc;\n        const subEnter = bars\n        .enter()\n        .append('rect')\n        .attr('width', x1.bandwidth())\n        .attr('x', function(d) {\n            return x1(d.id);\n        }) // unsorted\n        .style('fill', function(d) {\n            return color(d.id);\n        })\n        .attr('y', function(d) {\n            return y(d.value);\n        })\n        .attr('height', function(d) {\n            return height - y(d.value);\n        })\n        .on('mouseover', function(d) {\n            d3.select(this).style('cursor', onClick ? 'pointer' : 'default');\n            d3.select(this).style('fill', d3.rgb(color(d.id)).darker(1));\n            tooltip.handleMouseOver();\n        })\n        .on('mousemove', tooltip.handleMouseOver)\n        .on('mouseout', function(d) {\n            d3.select(this).style('fill', color(d.id));\n            tooltip.handleMouseOut();\n        })\n        .on('click', onClick);\n        bars = bars.merge(subEnter);\n    };\n\n    const init = () => {\n        draw();\n    };\n\n    const resize = () => {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => { draw(); }, 500);\n    };\n\n    useEffect(() => {\n        init();\n        window.addEventListener('resize', resize);\n\n        return () => {\n            clearTimeout(timeout);\n            window.removeEventListener('resize', resize);\n        };\n    }, []);\n\n    useEffect(() => { draw(); }, [ props.data, selectedIds ]);\n\n    return (\n        <Wrapper>\n            <div id={ props.id } />\n            { colors.length > 0 && (\n                <Legend\n                    id={ `${props.id}-legend` }\n                    data={ colors }\n                    selected={ selectedIds }\n                    onToggle={ handleToggle }\n                    height=\"350px\"\n                />\n            ) }\n        </Wrapper>\n    );\n};\n\nGroupedBarChart.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    legend: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    colorFunc: PropTypes.func,\n    yLabel: PropTypes.string,\n    onClick: PropTypes.func,\n    TooltipClass: PropTypes.any.isRequired\n};\n\nexport default initializeChart(GroupedBarChart);\n","import * as d3 from 'd3';\n\nconst formatDate = date => {\n    const pieces = date.split('-');\n    return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class OrgsTooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        this.draw();\n    }\n\n    draw() {\n        this.width = 125;\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 125;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', 68)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.date = this.toolTipBase\n        .append('text')\n        .attr('x', 20)\n        .attr('y', 14)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Date');\n        this.jobs = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 72)\n        .attr('y', 14)\n        .text('0 Jobs');\n        this.orgName = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', -1)\n        .attr('font-size', 12)\n        .text('Org');\n        this.clickMore = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 20)\n        .attr('y', 30)\n        .attr('font-size', 12)\n        .text('Click for details');\n    }\n\n  handleMouseOver = d => {\n      let date;\n      let orgName;\n      let jobs;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      if (!d) {\n          return;\n      } else {\n          const maxLength = 16;\n          date = d.date;\n          orgName = d.name;\n          jobs = d.value;\n          if (d.name.length > maxLength) {\n              orgName = d.name.slice(0, maxLength).concat('...');\n          }\n      }\n\n      const formatTooltipDate = formatDate;\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n\n      this.date.text('' + formatTooltipDate(date));\n      this.orgName.text('' + orgName);\n      this.jobs.text('' + jobs + ' Jobs');\n      this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n      const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n      const threshold = 45;\n      const overage = maxTextPerc / threshold;\n      let adjustedWidth;\n      if (maxTextPerc > threshold) {\n          adjustedWidth = this.boxWidth * overage;\n      } else {\n          adjustedWidth = this.boxWidth;\n      }\n\n      this.boundingBox.attr('width', adjustedWidth);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n          this.boundingBox.attr('x', -adjustedWidth - 20);\n          this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n          this.orgName.attr('x', -adjustedWidth - 7);\n          this.clickMore.attr('x', -adjustedWidth - 7);\n          this.date.attr('x', -adjustedWidth - 7);\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n          this.boundingBox.attr('x', 10);\n          this.orgName.attr('x', 20);\n          this.clickMore.attr('x', 20);\n          this.jobs.attr('x', adjustedWidth / 2);\n          this.date.attr('x', 20);\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import * as d3 from 'd3';\n\nconst formatDate = date => {\n    const pieces = date.split('-');\n    return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class HostsTooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        this.draw();\n    }\n\n    draw() {\n        this.width = 125;\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 125;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', 68)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.date = this.toolTipBase\n        .append('text')\n        .attr('x', 20)\n        .attr('y', 14)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Date');\n        this.jobs = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 72)\n        .attr('y', 14)\n        .text('0 Jobs');\n        this.orgName = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', -1)\n        .attr('font-size', 12)\n        .text('Org');\n        this.clickMore = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 20)\n        .attr('y', 30)\n        .attr('font-size', 12)\n        .text('Click for details');\n    }\n\n  handleMouseOver = d => {\n      let date;\n      let orgName;\n      let jobs;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      if (!d) {\n          return;\n      } else {\n          const maxLength = 16;\n          date = d.date;\n          orgName = d.name;\n          jobs = d.value;\n          if (d.name.length > maxLength) {\n              orgName = d.name.slice(0, maxLength).concat('...');\n          }\n      }\n\n      const formatTooltipDate = formatDate;\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n\n      this.date.text('' + formatTooltipDate(date));\n      this.orgName.text('' + orgName);\n      this.jobs.text('' + jobs + ' Hosts');\n      this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n      const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n      const threshold = 45;\n      const overage = maxTextPerc / threshold;\n      let adjustedWidth;\n      if (maxTextPerc > threshold) {\n          adjustedWidth = this.boxWidth * overage;\n      } else {\n          adjustedWidth = this.boxWidth;\n      }\n\n      this.boundingBox.attr('width', adjustedWidth);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n          this.boundingBox.attr('x', -adjustedWidth - 20);\n          this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n          this.orgName.attr('x', -adjustedWidth - 7);\n          this.clickMore.attr('x', -adjustedWidth - 7);\n          this.date.attr('x', -adjustedWidth - 7);\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n          this.boundingBox.attr('x', 10);\n          this.orgName.attr('x', 20);\n          this.clickMore.attr('x', 20);\n          this.jobs.attr('x', adjustedWidth / 2);\n          this.date.attr('x', 20);\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport { getTotal } from '../Utilities/helpers';\nimport Legend from '../Utilities/Legend';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        // defer drawing until we know the data shape\n        this.drawn = false;\n        // show the success rate or not\n        this.showSuccess = false;\n    }\n\n    draw(d) {\n    // chart1 has success rate data and chart2 does not ...\n        this.showSuccess = d && d.data && 'success_rate' in d.data ? true : false;\n        const boundingHeight = this.showSuccess ? 70 : 52;\n        const boundingWidth = this.showSuccess ? 120 : 108;\n\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBOx = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', boundingHeight)\n        .attr('width', boundingWidth)\n        .attr('fill', '#393f44');\n        this.orgName = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 0)\n        .text('Organization');\n        this.percentageTotal = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 16)\n        .text('0');\n        this.percentageSuccess = null;\n        if (this.showSuccess) {\n            this.percentageSuccess = this.toolTipBase\n            .append('text')\n            .attr('fill', 'white')\n            .attr('font-size', 12)\n            .attr('font-weight', 800)\n            .attr('x', 20)\n            .attr('y', 30)\n            .text('');\n        }\n    }\n\n  handleMouseOver = d => {\n      // treat draw() as a singleton to avoid a painted window effect\n      if (this.drawn !== true) {\n          this.draw(d);\n          this.drawn = true;\n      }\n\n      let perc;\n      let percSuccess;\n      let orgName;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      if (!d) {\n          return;\n      }\n\n      if (d && d.data) {\n          const maxLength = 16;\n          perc = d.data.percent;\n          percSuccess = d.data.success_rate;\n          orgName = d.data.name;\n          if (d.data.name.length > maxLength) {\n              orgName = d.data.name.slice(0, maxLength - 3).concat('...');\n          }\n      }\n\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n\n      this.percentageTotal.text('' + perc + '%');\n      if (percSuccess && this.percentageSuccess) {\n          this.percentageSuccess.text('(' + percSuccess + '% successful)');\n      }\n\n      this.orgName.text(' ' + orgName);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, -10) rotate(45)');\n          this.boundingBOx.attr('x', -125);\n          this.orgName.attr('x', -112);\n          this.percentageTotal.attr('x', -112);\n          if (this.showSuccess) {\n              this.percentageSuccess.attr('x', -112);\n          }\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, -10) rotate(45)');\n          this.boundingBOx.attr('x', 10);\n          this.orgName.attr('x', 20);\n          this.percentageTotal.attr('x', 20);\n          if (this.showSuccess) {\n              this.percentageSuccess.attr('x', 20);\n          }\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nconst PieChart = ({\n    data,\n    id,\n    colorFunc: color,\n    margin,\n    getWidth,\n    getHeight\n}) => {\n    const colors = data.map(({ id, name, count }) => {\n        return {\n            id,\n            name,\n            value: color(id),\n            count: Math.round(count)\n        };\n    }).sort((a, b) => (a.count > b.count) ? 1 : ((b.count > a.count) ? -1 : 0));\n\n    const [ selectedIds, setSelectedIds ] = useState(\n        data.map(({ id }) => id).slice(0, 8));\n\n    let timeout = null;\n\n    const handleToggle = id => {\n        if (selectedIds.includes(id)) {\n            setSelectedIds(selectedIds.filter(el => el !== id));\n        } else {\n            setSelectedIds([ ...selectedIds, id ]);\n        }\n    };\n\n    const draw = () => {\n        d3.selectAll('#' + id + ' > *').remove();\n        const width = getWidth();\n        const height = getHeight();\n        const svg = d3\n        .select('#' + id)\n        .append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.bottom)\n        .append('g');\n\n        svg.append('g').attr('class', 'slices');\n        svg.append('g').attr('class', 'labels');\n        svg.append('g').attr('class', 'lines');\n        const radius = Math.min(width, height) / 2;\n        const filteredData = data.filter(({ id }) => selectedIds.includes(id));\n        const total = getTotal(filteredData);\n        filteredData.forEach(function(d) {\n            d.count = +d.count;\n            d.percent = +Math.round((d.count / total) * 100);\n        });\n        const donutTooltip = new Tooltip({\n            svg: '#' + id\n        });\n        const pie = d3\n        .pie()\n        .sort(null)\n        .value(d => d.count);\n        const arc = d3\n        .arc()\n        .outerRadius(radius - 10) // controls top positioning of chart\n        .innerRadius(0);\n\n        svg.attr(\n            'transform',\n            'translate(' +\n        (width + margin.left + margin.right) / 2 +\n        ',' +\n        (height + margin.top + margin.bottom) / 2 +\n        ')'\n        );\n\n        svg\n        .selectAll('path')\n        .data(pie(filteredData))\n        .enter()\n        .append('path')\n        .attr('d', arc)\n        .attr('fill', d => color(d.data.id));\n\n        svg\n        .selectAll('path')\n        .on('mouseover', function(d) {\n            d3.select(this).style('fill', d3.rgb(color(d.data.id)).darker(1));\n            donutTooltip.handleMouseOver(d);\n        })\n        .on('mouseout', function(d) {\n            d3.select(this).style('fill', color(d.data.id));\n            donutTooltip.handleMouseOut();\n        })\n        .on('mousemove', donutTooltip.handleMouseOver);\n\n        svg.append('g').classed('labels', true);\n        svg.append('g').classed('lines', true);\n    };\n\n    const init = () => {\n        draw();\n    };\n\n    const resize = () => {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => { draw(); }, 500);\n    };\n\n    useEffect(() => {\n        init();\n        window.addEventListener('resize', resize);\n\n        return () => {\n            clearTimeout(timeout);\n            window.removeEventListener('resize', resize);\n        };\n    }, []);\n\n    useEffect(() => { draw(); }, [ data, selectedIds ]);\n\n    return (\n        <Wrapper>\n            <div id={ id } />\n            { colors.length > 0 && (\n                <Legend\n                    id={ `${id}-legend` }\n                    data={ colors }\n                    selected={ selectedIds }\n                    onToggle={ handleToggle }\n                    height=\"300px\"\n                />\n            ) }\n        </Wrapper>\n    );\n};\n\nPieChart.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    colorFunc: PropTypes.func\n};\n\nexport default initializeChart(PieChart);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { formatDate as dateForJobExplorer } from '../../Utilities/helpers';\n\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport {\n    preflightRequest,\n    readJobExplorer,\n    readHostExplorer,\n    readOrgOptions\n} from '../../Api';\n\nimport {\n    Main,\n    NotAuthorized,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle,\n    Tabs,\n    Tab\n} from '@patternfly/react-core';\n\nimport {\n    GroupedBarChart,\n    OrgsTooltip,\n    HostsTooltip\n} from '../../Charts/GroupedBarChart/';\nimport PieChart from '../../Charts/PieChart';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport { organizationStatistics as constants } from '../../Utilities/constants';\n\n// For chart colors\nimport { pfmulti } from '../../Utilities/colors';\nimport { scaleOrdinal } from 'd3';\n\nconst CardTitle = styled(PFCardTitle)`\n  border-bottom: 2px solid #ebebeb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &&& {\n    min-height: 60px;\n    --pf-c-card--first-child--PaddingTop: 10px;\n    --pf-c-card__header--not-last-child--PaddingBottom: 10px;\n\n    h3 {\n      font-size: 0.875em;\n    }\n  }\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  overflow: hidden;\n\n  .pf-c-card {\n    width: 50%;\n    margin-top: 20px;\n    overflow: auto;\n  }\n\n  .pf-c-card:first-of-type {\n    margin-right: 20px;\n  }\n`;\n\nconst TopCard = styled(Card)`\n  min-height: 500px;\n`;\n\nconst colorFunc = scaleOrdinal(pfmulti);\n\nconst optionsMapper = options => {\n    const { inventory_id, ...rest } = options;\n    return { ...rest };\n};\n\nconst orgsChartMapper = attrName => ({ dates: data = [], meta }) => ({\n    data: data.map(({ date, items }) => ({\n        date,\n        items: items.map(({ id, [attrName]: value, name }) => ({\n            id,\n            date,\n            value,\n            name: name || 'No organization'\n        }))\n    })),\n    legend: meta.legend\n});\n\nconst pieChartMapper = attrName => ({ items = []}) =>\n    items.map(({ id, [attrName]: count, name }) => ({\n        id,\n        count,\n        name: name || 'No organization'\n    }));\n\nconst redirectToJobExplorer = (toJobExplorer, queryParams) => ({ date, id }) => {\n    if (id === -1) {\n        // disable clicking on \"others\" block\n        return;\n    }\n\n    const { sort_by, ...rest } = queryParams;\n    const formattedDate = dateForJobExplorer(date);\n    const initialQueryParams = {\n        ...rest,\n        quick_date_range: 'custom',\n        start_date: formattedDate,\n        end_date: formattedDate,\n        status: [\n            'successful',\n            'failed',\n            'new',\n            'pending',\n            'waiting',\n            'error',\n            'canceled',\n            'running'\n        ],\n        org_id: [ id ]\n    };\n\n    toJobExplorer(initialQueryParams);\n};\n\nconst chartMapper = [\n    {\n        api: readJobExplorer,\n        attr: 'total_count',\n        label: 'Jobs across organizations',\n        onClick: redirectToJobExplorer,\n        tooltip: OrgsTooltip\n    },\n    {\n        api: readHostExplorer,\n        attr: 'total_unique_host_count',\n        label: 'Hosts across organizations',\n        onClick: () => null,\n        tooltip: HostsTooltip\n    }\n];\n\nconst OrganizationStatistics = ({ history }) => {\n    const toJobExplorer = useRedirect(history, 'jobExplorer');\n    const [ preflight, setPreflight ] = useApi(null);\n    const [ activeTabKey, setActiveTabKey ] = useState(0);\n    const [ orgs, setOrgs ] = useApi([], orgsChartMapper(chartMapper[activeTabKey].attr));\n    const [ jobs, setJobs ] = useApi([], pieChartMapper('total_count'));\n    const [ tasks, setTasks ] = useApi([], pieChartMapper('host_task_count'));\n    const [ options, setOptions ] = useApi({}, optionsMapper);\n    const { queryParams, setFromToolbar } = useQueryParams(\n        constants.defaultParams\n    );\n\n    const jobEventsByOrgParams = {\n        ...queryParams,\n        attributes: [ 'host_task_count' ],\n        group_by: 'org',\n        include_others: true,\n        sort_by: `host_task_count:desc`\n    };\n\n    const jobRunsByOrgParams = {\n        ...queryParams,\n        attributes: [ 'total_count' ],\n        group_by: 'org',\n        include_others: true,\n        sort_by: `total_count:desc`\n    };\n\n    const jobsByDateAndOrgParams = {\n        ...queryParams,\n        attributes: [ 'total_count' ],\n        group_by: 'org',\n        group_by_time: true,\n        sort_by: `total_count:desc`\n    };\n\n    const hostAcrossOrgParams = {\n        ...queryParams,\n        attributes: [ 'total_unique_host_count' ],\n        group_by: 'org',\n        group_by_time: true,\n        sort_by: `host_task_count:desc`\n    };\n\n    const handleTabClick = (_, tabIndex) => { setActiveTabKey(tabIndex); };\n\n    useEffect(() => {\n        insights.chrome.appNavClick({\n            id: 'organization-statistics',\n            secondaryNav: true\n        });\n        setPreflight(preflightRequest());\n        setOptions(readOrgOptions({ params: queryParams }));\n    }, []);\n\n    useEffect(() => {\n        const { api: readJobsOrHosts } = chartMapper[activeTabKey];\n        const params = activeTabKey === 0 ? jobsByDateAndOrgParams : hostAcrossOrgParams;\n        setOrgs(readJobsOrHosts({ params }));\n    }, [ queryParams, activeTabKey ]);\n\n    useEffect(() => {\n        setJobs(readJobExplorer({ params: jobRunsByOrgParams }));\n        setTasks(readJobExplorer({ params: jobEventsByOrgParams }));\n    }, [ queryParams ]);\n\n    if (preflight?.error?.status === 403) {\n        return <NotAuthorized { ...notAuthorizedParams } />;\n    }\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={'Organization Statistics'} />\n                <FilterableToolbar\n                    categories={options.data}\n                    filters={queryParams}\n                    setFilters={setFromToolbar}\n                />\n            </PageHeader>\n            {preflight.error && (\n                <Main>\n                    <EmptyState preflightError={preflight.error} />\n                </Main>\n            )}\n            {preflight.isSuccess && (\n                <React.Fragment>\n                    <Main>\n                        <TopCard>\n                            <Tabs activeKey={ activeTabKey } onSelect={ handleTabClick }>\n                                <Tab eventKey={ 0 } title={ 'Jobs' }/>\n                                <Tab eventKey={ 1 } title={ 'Hosts' }/>\n                            </Tabs>\n                            <CardBody>\n                                {orgs.isLoading && <LoadingState />}\n                                {orgs.error && <ApiErrorState message={orgs.error.error} />}\n                                {orgs.isSuccess && orgs.data?.data.length <= 0 && <NoData />}\n                                {orgs.isSuccess && orgs.data?.data.length > 0 && (\n                                    <GroupedBarChart\n                                        margin={{ top: 20, right: 20, bottom: 50, left: 50 }}\n                                        id=\"d3-grouped-bar-chart-root\"\n                                        data={ orgs.data.data }\n                                        legend={ orgs.data.legend }\n                                        history={ history }\n                                        colorFunc={ colorFunc }\n                                        yLabel={ chartMapper[activeTabKey].label }\n                                        onClick={ chartMapper[activeTabKey].onClick(toJobExplorer, queryParams) }\n                                        TooltipClass={ chartMapper[activeTabKey].tooltip }\n                                    />\n                                )}\n                            </CardBody>\n                        </TopCard>\n                        <CardContainer>\n                            <Card>\n                                <CardBody style={{ padding: 0 }}>\n                                    <CardTitle style={{ padding: 0 }}>\n                                        <h2 style={{ marginLeft: '20px' }}>\n                                            Job Runs by Organization\n                                        </h2>\n                                    </CardTitle>\n                                    {jobs.isLoading && <LoadingState />}\n                                    {jobs.error && <ApiErrorState message={jobs.error.error} />}\n                                    {jobs.isSuccess && jobs.data.length <= 0 && <NoData />}\n                                    {jobs.isSuccess && jobs.data.length > 0 && (\n                                        <PieChart\n                                            margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                                            id=\"d3-donut-1-chart-root\"\n                                            data={jobs.data}\n                                            colorFunc={colorFunc}\n                                        />\n                                    )}\n                                </CardBody>\n                            </Card>\n                            <Card>\n                                <CardBody style={{ padding: 0 }}>\n                                    <CardTitle style={{ padding: 0 }}>\n                                        <h2 style={{ marginLeft: '20px' }}>\n                                            Usage by Organization (Tasks)\n                                        </h2>\n                                    </CardTitle>\n                                    {tasks.isLoading && <LoadingState />}\n                                    {tasks.error && <ApiErrorState message={tasks.error.error} />}\n                                    {tasks.isSuccess && tasks.data.length <= 0 && <NoData />}\n                                    {tasks.isSuccess && tasks.data.length > 0 && (\n                                        <PieChart\n                                            margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                                            id=\"d3-donut-2-chart-root\"\n                                            data={tasks.data}\n                                            colorFunc={colorFunc}\n                                        />\n                                    )}\n                                </CardBody>\n                            </Card>\n                        </CardContainer>\n                    </Main>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n};\n\nOrganizationStatistics.propTypes = {\n    history: PropTypes.object\n};\n\nexport default OrganizationStatistics;\n","var pfmulti = [\n    '#06C',\n    '#4CB140',\n    '#009596',\n    '#5752D1',\n    '#F4C145',\n    '#EC7A08',\n    '#8BC1F7',\n    '#23511E',\n    '#A2D9D9',\n    '#2A265F',\n    '#F9E0A2',\n    '#8F4700',\n    '#002F5D'\n];\nexport { pfmulti };\n","import * as d3 from 'd3';\n\nclass Tooltip {\n    constructor(opts) {\n        this.svg = opts.svg;\n        this.colors = opts.colors;\n        this.draw();\n    }\n\n    draw() {\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 145;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -41)\n        .attr('rx', 2)\n        .attr('height', 110)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.circleSuccess = this.toolTipBase\n        .append('circle')\n        .attr('cx', 26)\n        .attr('cy', 0)\n        .attr('r', 8)\n        .attr('stroke', 'white')\n        .attr('fill', 'white');\n        this.circleFail = this.toolTipBase\n        .append('circle')\n        .attr('cx', 26)\n        .attr('cy', 26)\n        .attr('r', 8)\n        .attr('stroke', 'white')\n        .attr('fill', 'white');\n        this.successText = this.toolTipBase\n        .append('text')\n        .attr('x', 43)\n        .attr('y', 4)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Successful');\n        this.failText = this.toolTipBase\n        .append('text')\n        .attr('x', 43)\n        .attr('y', 28)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Failed');\n        this.successIcon = this.toolTipBase\n        .append('text')\n        .attr('class', 'fas fa-sm')\n        .attr('fill', this.colors(1))\n        .attr('x', 19)\n        .attr('y', 5)\n        .text('\\uf058');\n        this.failedIcon = this.toolTipBase\n        .append('text')\n        .attr('class', 'fas fa-sm')\n        .attr('fill', this.colors(0))\n        .attr('x', 20)\n        .attr('y', 31)\n        .text('\\uf06a');\n        this.jobs = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 137)\n        .attr('y', -21)\n        .attr('font-size', 12)\n        .attr('text-anchor', 'end')\n        .text('No jobs');\n        this.successful = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 122)\n        .attr('y', 4)\n        .text('0');\n        this.failed = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 122)\n        .attr('y', 28)\n        .text('0');\n        this.date = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('stroke', 'white')\n        .attr('x', 20)\n        .attr('y', -21)\n        .attr('font-size', 12)\n        .text('Never');\n        this.clickMore = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 20)\n        .attr('y', 55)\n        .attr('font-size', 12)\n        .text('Click for details');\n    }\n\n  handleMouseOver = d => {\n      let success = 0;\n      let fail = 0;\n      let total = 0;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      const formatTooltipDate = d3.timeFormat('%m/%d');\n      if (!d) {\n          return;\n      }\n\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n      if (d) {\n          success = d.RAN || 0;\n          fail = d.FAIL || 0;\n          total = d.TOTAL || 0;\n          this.date.text(formatTooltipDate(d.DATE || null));\n      }\n\n      if (d && d.data) {\n          success = d.data.RAN || 0;\n          fail = d.data.FAIL || 0;\n          total = d.data.TOTAL || 0;\n          this.date.text(formatTooltipDate(d.data.DATE || null));\n      }\n\n      this.jobs.text('' + total + ' jobs');\n      this.jobsWidth = this.jobs.node().getComputedTextLength();\n      this.failed.text('' + fail);\n      this.successful.text('' + success);\n      this.successTextWidth = this.successful.node().getComputedTextLength();\n      this.failTextWidth = this.failed.node().getComputedTextLength();\n\n      const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n      const threshold = 40;\n      const overage = maxTextPerc / threshold;\n      let adjustedWidth;\n      if (maxTextPerc > threshold) {\n          adjustedWidth = this.boxWidth * overage;\n      } else {\n          adjustedWidth = this.boxWidth;\n      }\n\n      this.boundingBox.attr('width', adjustedWidth);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n          this.boundingBox.attr('x', -adjustedWidth - 20);\n          this.circleSuccess.attr('cx', -adjustedWidth);\n          this.circleFail.attr('cx', -adjustedWidth);\n          this.failedIcon.attr('x', -adjustedWidth - 7);\n          this.successIcon.attr('x', -adjustedWidth - 7);\n          this.successText.attr('x', -adjustedWidth + 17);\n          this.failText.attr('x', -adjustedWidth + 17);\n          this.successful.attr('x', -this.successTextWidth - 20 - 12);\n          this.failed.attr('x', -this.failTextWidth - 20 - 12);\n          this.date.attr('x', -adjustedWidth - 5);\n          this.jobs.attr('x', -this.jobsWidth / 2 - 7);\n          this.clickMore.attr('x', -adjustedWidth);\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n          this.boundingBox.attr('x', 10);\n          this.circleSuccess.attr('cx', 26);\n          this.circleFail.attr('cx', 26);\n          this.failedIcon.attr('x', 19);\n          this.successIcon.attr('x', 19);\n          this.successText.attr('x', 43);\n          this.failText.attr('x', 43);\n          this.successful.attr('x', adjustedWidth - this.successTextWidth);\n          this.failed.attr('x', adjustedWidth - this.failTextWidth);\n          this.date.attr('x', 20);\n          this.jobs.attr('x', adjustedWidth);\n          this.clickMore.attr('x', 20);\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nexport default Tooltip;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { stringify } from 'query-string';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\n\nclass BarChart extends Component {\n    constructor(props) {\n        super(props);\n        this.draw = this.draw.bind(this);\n        this.init = this.init.bind(this);\n        this.resize = this.resize.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.state = {\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    redirectToJobExplorer({ data: { DATE: date }}) {\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const { orgId, templateId } = this.props;\n        const initialQueryParams = {\n            start_date: formattedDate,\n            end_date: formattedDate,\n            quick_date_range: 'custom',\n            status: [ 'failed', 'successful' ],\n            template_id: templateId,\n            org_id: orgId\n        };\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    }\n\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => {\n                this.init();\n            }, 500)\n        });\n    }\n\n    init() {\n        this.draw();\n    }\n\n    // Methods\n    draw() {\n    // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const parseTime = d3.timeParse('%Y-%m-%d');\n        let { data: unformattedData } = this.props;\n        const data = unformattedData.reduce(\n            (formatted, { created_date, successful_count, failed_count }) => {\n                let DATE = parseTime(created_date) || new Date();\n                let RAN = +successful_count || 0;\n                let FAIL = +failed_count || 0;\n                let TOTAL = +successful_count + failed_count || 0;\n                return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n            },\n            []\n        );\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n        const x = d3\n        .scaleBand()\n        .rangeRound([ 0, width ])\n        .padding(0.35); // percentage\n        const y = d3.scaleLinear().range([ height, 0 ]);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n        //[fail, success]\n        let colors = d3.scaleOrdinal([ '#6EC664', '#A30000' ]);\n\n        const barTooltip = new Tooltip({\n            svg: '#' + this.props.id,\n            colors\n        });\n        const status = [ 'FAIL', 'RAN' ];\n\n        // stack our data\n        const stack = d3\n        .stack()\n        .keys(status)\n        .order(d3.stackOrderNone)\n        .offset(d3.stackOffsetNone);\n\n        const layers = stack(data);\n        // Scale the range of the data\n        x.domain(layers[0].map(d => d.data.DATE));\n        y.domain([ 0, d3.max(layers[layers.length - 1], d => d[1] * 1.15) || 8 ]);\n        // Add the Y Axis\n        svg\n        .append('g')\n        .attr('class', 'y-axis')\n        .call(d3.axisLeft(y).tickSize(-width, 0, 0))\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.y-axis .tick text').attr('x', -5);\n        // text label for the y axis\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Jobs across all clusters');\n        // Add the X Axis\n        let ticks;\n        const maxTicks = Math.round(data.length / (data.length / 2));\n        ticks = data.map(d => d.DATE);\n        if (data.length > 14) {\n            ticks = data\n            .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n            .filter(item => item);\n        }\n\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(\n            d3\n            .axisBottom(x)\n            .tickValues(ticks)\n            .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n        // text label for the x axis\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n\n        const layer = svg\n        .selectAll('layer')\n        .data(layers)\n        .enter()\n        .append('g')\n        .attr('class', 'layer')\n        .style('fill', (_d, i) => colors(i));\n        layer\n        .selectAll('rect')\n        .data(d => d)\n        .enter()\n        .append('rect')\n        .attr('x', d => x(d.data.DATE))\n        .attr('y', d => y(d[0]))\n        .attr('height', 0)\n        .attr('width', x.bandwidth() - 1)\n        .transition()\n        .duration(550)\n        .ease(d3.easeCubic)\n        .attr('y', d => y(d[1]))\n        .attr('height', d => y(d[0]) - y(d[1]));\n        layer\n        .selectAll('rect')\n        .on('mouseover', barTooltip.handleMouseOver)\n        .on('mousemove', barTooltip.handleMouseOver)\n        .on('mouseout', barTooltip.handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.data !== this.props.data) {\n            this.init();\n        }\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        return <div id={this.props.id} />;\n    }\n}\n\nBarChart.propTypes = {\n    id: PropTypes.string,\n    templateId: PropTypes.array,\n    orgId: PropTypes.array,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    history: PropTypes.object\n};\n\nexport default initializeChart(withRouter(BarChart));\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport initializeChart from './BaseChart';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\nimport { stringify } from 'query-string';\nimport * as d3 from 'd3';\n\nclass LineChart extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.updateCluster = this.updateCluster.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.state = {\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    redirectToJobExplorer({ DATE: date }) {\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const { clusterId, templateId, orgId } = this.props;\n        const initialQueryParams = {\n            start_date: formattedDate,\n            end_date: formattedDate,\n            quick_date_range: 'custom',\n            status: [ 'failed', 'successful' ],\n            cluster_id: clusterId,\n            org_id: orgId,\n            template_id: templateId\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    }\n\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => {\n                this.init();\n            }, 500)\n        });\n    }\n\n    updateCluster() {\n        this.init();\n    }\n    init() {\n        this.draw();\n    }\n    // Methods\n    draw() {\n    // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n\n        function transition(path) {\n            path\n            .transition()\n            .duration(1000)\n            .attrTween('stroke-dasharray', tweenDash);\n        }\n\n        function tweenDash() {\n            const l = this.getTotalLength();\n            const i = d3.interpolateString('0,' + l, l + ',' + l);\n            return function(t) {\n                return i(t);\n            };\n        }\n\n        const x = d3.scaleTime().rangeRound([ 0, width ]);\n        const y = d3.scaleLinear().range([ height, 0 ]);\n\n        //[success, fail, total]\n        let colors = d3.scaleOrdinal([ '#6EC664', '#A30000', '#06C' ]);\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n        .attr('z', 100)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n        // Tooltip\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id,\n            colors\n        });\n        const { data: unformattedData } = this.props;\n        const parseTime = d3.timeParse('%Y-%m-%d');\n\n        const data = unformattedData.reduce(\n            (formatted, { created_date, successful_count, failed_count }) => {\n                let DATE = parseTime(created_date) || new Date();\n                let RAN = +successful_count || 0;\n                let FAIL = +failed_count || 0;\n                let TOTAL = +successful_count + failed_count || 0;\n                return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n            },\n            []\n        );\n        // Scale the range of the data\n        x.domain(\n            d3.extent(data, function(d) {\n                return d.DATE;\n            })\n        );\n        y.domain([\n            0,\n            d3.max(data, function(d) {\n                return d.TOTAL * 1.15 || 8;\n            })\n        ]);\n\n        const successLine = d3\n        .line()\n        .curve(d3.curveMonotoneX)\n        .x(function(d) {\n            return x(d.DATE);\n        })\n        .y(function(d) {\n            return y(d.RAN);\n        });\n\n        const failLine = d3\n        .line()\n        .defined(d => !isNaN(d.FAIL))\n        .curve(d3.curveMonotoneX)\n        .x(function(d) {\n            return x(d.DATE);\n        })\n        .y(function(d) {\n            return y(d.FAIL);\n        });\n        // Add the Y Axis\n        svg\n        .append('g')\n        .attr('class', 'y-axis')\n        .call(\n            d3\n            .axisLeft(y)\n            .ticks(10)\n            .tickSize(-width)\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.y-axis .tick text').attr('x', -5);\n\n        // text label for the y axis\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Job runs');\n        // Add the X Axis\n        let ticks;\n        const maxTicks = Math.round(data.length / (data.length / 2));\n        ticks = data.map(d => d.DATE);\n        if (data.length > 14) {\n            ticks = data\n            .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n            .filter(item => item);\n        }\n\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(\n            d3\n            .axisBottom(x)\n            .tickValues(ticks)\n            .tickSize(-height)\n            .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n        ) // \"Jan-01\"\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n        // text label for the x axis\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n        const vertical = svg\n        .append('path')\n        .attr('class', 'mouse-line')\n        .style('stroke', 'black')\n        .style('stroke-width', '3px')\n        .style('stroke-dasharray', '3, 3')\n        .style('opacity', '0');\n\n        const handleMouseOver = function(d) {\n            tooltip.handleMouseOver(d);\n            // show vertical line\n            vertical.transition().style('opacity', '1');\n        };\n\n        const handleMouseMove = function() {\n            let intersectX = this.cx.baseVal.value;\n            vertical.attr('d', function() {\n                let d = 'M' + intersectX + ',' + height;\n                d += ' ' + intersectX + ',' + 0;\n                return d;\n            });\n        };\n\n        const handleMouseOut = function() {\n            // hide tooltip\n            tooltip.handleMouseOut();\n            // hide vertical line\n            vertical.transition().style('opacity', 0);\n        };\n\n        // Add the successLine path.\n        svg\n        .append('path')\n        .data([ data ])\n        .attr('class', 'line')\n        .style('fill', 'none')\n        .style('stroke', () => colors(1))\n        .attr('stroke-width', 2)\n        .attr('d', successLine)\n        .call(transition);\n\n        // Add the failLine path.\n        svg\n        .append('path')\n        .data([ data ])\n        .attr('class', 'line')\n        .style('fill', 'none')\n        .style('stroke', () => colors(0))\n        .attr('stroke-width', 2)\n        .attr('d', failLine)\n        .call(transition);\n        svg\n        .selectAll('dot')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('r', 3)\n        .style('stroke', () => colors(1))\n        .style('fill', () => colors(1))\n        .attr('cx', function(d) {\n            return x(d.DATE);\n        })\n        .attr('cy', function(d) {\n            return y(d.RAN);\n        })\n\n        .on('mouseover', handleMouseOver)\n        .on('mousemove', handleMouseMove)\n        .on('mouseout', handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n        // create our failLine circles\n        svg\n        .selectAll('dot')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('r', 3)\n        .style('stroke', () => colors(0))\n        .style('fill', () => colors(0))\n        .attr('cx', function(d) {\n            return x(d.DATE);\n        })\n        .attr('cy', function(d) {\n            return y(d.FAIL);\n        })\n        .on('mouseover', handleMouseOver)\n        .on('mousemove', handleMouseMove)\n        .on('mouseout', handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n    }\n\n    componentDidMount() {\n        this.updateCluster();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.data !== this.props.data) {\n            this.updateCluster();\n        }\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        return <div id={this.props.id} />;\n    }\n}\n\nLineChart.propTypes = {\n    id: PropTypes.string,\n    clusterId: PropTypes.array,\n    templateId: PropTypes.array,\n    orgId: PropTypes.array,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    history: PropTypes.object\n};\n\nexport default initializeChart(withRouter(LineChart));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { trimStr } from '../Utilities/helpers';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell\n} from '@patternfly/react-core';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst ModulesList = ({ modules, isLoading }) => (\n    <DataList\n        aria-label=\"Top Modules\"\n        style={{\n            maxHeight: '400px',\n            overflow: 'auto',\n            height: '400px',\n            background: 'white'\n        }}\n    >\n        <DataListItem aria-labelledby=\"top-modules-header\">\n            <DataListCell>\n                <h3>Top modules</h3>\n            </DataListCell>\n            <DataCellEnd>\n                <h3>Usage</h3>\n            </DataCellEnd>\n        </DataListItem>\n        {isLoading && (\n            <PFDataListItem\n                aria-labelledby=\"modules-loading\"\n                key={isLoading}\n                style={{ border: 'none' }}\n            >\n                <PFDataListCell>\n                    <LoadingState />\n                </PFDataListCell>\n            </PFDataListItem>\n        )}\n        {!isLoading && modules.length <= 0 && (\n            <PFDataListItem\n                aria-labelledby=\"modules-no-data\"\n                key={isLoading}\n                style={{ border: 'none' }}\n            >\n                <PFDataListCell>\n                    <NoData />\n                </PFDataListCell>\n            </PFDataListItem>\n        )}\n        {!isLoading &&\n      modules\n      .filter(module => module.name !== null)\n      .map(({ name, host_task_count }, index) => (\n          <DataListItem aria-labelledby=\"top-modules-detail\" key={index}>\n              <DataListCell>\n                  <span>{trimStr(name)}</span>\n              </DataListCell>\n              <DataCellEnd>{host_task_count}</DataCellEnd>\n          </DataListItem>\n      ))}\n    </DataList>\n);\n\nModulesList.propTypes = {\n    modules: PropTypes.array,\n    isLoading: PropTypes.bool\n};\n\nexport default ModulesList;\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport { Paths } from '../paths';\nimport { stringify } from 'query-string';\nimport useApi from '../Utilities/useApi';\nimport { formatDateTime, formatSeconds } from '../Utilities/helpers';\nimport { readJobExplorer } from '../Api';\n\nimport {\n    Button,\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell,\n    Label,\n    Modal\n} from '@patternfly/react-core';\n\nimport { CircleIcon } from '@patternfly/react-icons';\n\nconst success = (\n    <CircleIcon\n        size=\"sm\"\n        key=\"5\"\n        style={{ color: 'rgb(110, 198, 100)', marginRight: '5px' }}\n    />\n);\nconst fail = (\n    <>\n        <CircleIcon\n            size=\"sm\"\n            key=\"5\"\n            style={{ color: 'rgb(163, 0, 0)', marginRight: '5px' }}\n        />\n        <span id=\"fail-icon\">!</span>\n    </>\n);\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\nconst PFDataListItemNoBorder = styled(PFDataListItem)`\n  border-bottom: none;\n  margin-bottom: -20px;\n`;\nconst DataListItemCompact = styled(DataListItem)`\n  padding: 0;\n  > .pf-c-data-list__cell {\n    font-weight: 600;\n  }\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst DataListCellCompact = styled(DataListCell)`\n  padding: 7px;\n`;\n\nconst DataListFocus = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-gap: 10px;\n  padding: var(--pf-global--spacer--lg);\n  background: #ebebeb;\n  border: 1px solid #ccc;\n  border-top: none;\n  margin-bottom: 20px;\n`;\nconst DataCellEndCompact = styled(DataCellEnd)`\n  padding: 7px !important;\n`;\n\nconst formatTopFailedTask = data => {\n    if (!data) {\n        return;\n    }\n\n    if (data && data[0]) {\n        const percentage = Math.ceil(\n            (data[0].failed_count / data[0].total_failed_count) * 100\n        );\n        return `${data[0].task_name} ${percentage}%`;\n    }\n\n    return `Unavailable`;\n};\n\nconst formatTopFailedStep = data => {\n    if (!data) {\n        return;\n    }\n\n    if (data && data[0]) {\n        const percentage = Math.ceil(\n            (data[0].failed_count / data[0].total_failed_count) * 100\n        );\n        return `${data[0].template_name} ${percentage}%`;\n    }\n\n    return `Unavailable`;\n};\n\nconst formatSuccessRate = (successCount, totalCount) =>\n    Math.ceil((successCount / totalCount) * 100) + '%';\nconst formatAvgRun = (elapsed, totalCount) =>\n    new Date(Math.ceil(elapsed / totalCount) * 1000).toISOString().substr(11, 8);\nconst formatTotalTime = elapsed =>\n    new Date(elapsed * 1000).toISOString().substr(11, 8);\n\nconst ModalContents = ({\n    selectedId,\n    isOpen,\n    handleModal,\n    qp,\n    jobType,\n    handleCloseBtn\n}) => {\n    const [\n        {\n            data: { items: relatedJobs = []}\n        },\n        setRelatedJobs\n    ] = useApi({ items: []});\n    const [\n        {\n            data: {\n                items: [ stats = 0 ]\n            }\n        },\n        setStats\n    ] = useApi({ items: []});\n\n    let history = useHistory();\n\n    const redirectToJobExplorer = () => {\n        const { jobExplorer } = Paths;\n        const initialQueryParams = {\n            template_id: [ selectedId ],\n            status: [\n                'successful',\n                'failed',\n                'new',\n                'pending',\n                'waiting',\n                'error',\n                'canceled',\n                'running'\n            ],\n            job_type: [ jobType ],\n            quick_date_range: 'last_30_days'\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    const relatedTemplateJobsParams = {\n        ...qp,\n        template_id: [ selectedId ],\n        attributes: [\n            'id',\n            'status',\n            'job_type',\n            'started',\n            'finished',\n            'elapsed',\n            'created',\n            'cluster_name',\n            'org_name'\n        ],\n        group_by_time: false,\n        limit: 5,\n        sort_by: 'created:desc',\n        quick_date_range: qp.quick_date_range\n            ? qp.quick_date_range\n            : 'last_30_days',\n        job_type: [ jobType ]\n    };\n\n    const agreggateTemplateParams = {\n        group_by: 'template',\n        template_id: [ selectedId ],\n        attributes: [\n            'elapsed',\n            'job_type',\n            'successful_count',\n            'failed_count',\n            'total_count',\n            jobType === 'job' ? 'most_failed_tasks' : 'most_failed_steps'\n        ],\n        status: qp.status,\n        quick_date_range: qp.quick_date_range\n            ? qp.quick_date_range\n            : 'last_30_days',\n        job_type: [ jobType ]\n    };\n\n    useEffect(() => {\n        if (selectedId) {\n            setStats(readJobExplorer({ params: agreggateTemplateParams }));\n            setRelatedJobs(readJobExplorer({ params: relatedTemplateJobsParams }));\n        }\n    }, [ selectedId ]);\n\n    return (\n        <Modal\n            aria-label=\"modal\"\n            width={'80%'}\n            title={stats.name ? stats.name : 'no-template-name'}\n            isOpen={isOpen}\n            onClose={() => {\n                handleModal(false);\n                handleCloseBtn(null);\n            }}\n            actions={[\n                <Button\n                    key=\"cancel\"\n                    variant=\"secondary\"\n                    onClick={() => {\n                        handleModal(false);\n                        handleCloseBtn(null);\n                    }}\n                >\n          Close\n                </Button>\n            ]}\n        >\n            <DataList aria-label=\"Selected Template Details\">\n                <PFDataListItemNoBorder aria-labelledby=\"Selected Template Statistics\">\n                    <DataListFocus>\n                        <div aria-labelledby=\"job runs\">\n                            <b style={{ marginRight: '10px' }}>Number of runs</b>\n                            {stats.total_count ? stats.total_count : 'Unavailable'}\n                        </div>\n                        <div aria-labelledby=\"total time\">\n                            <b style={{ marginRight: '10px' }}>Total time</b>\n                            {stats.elapsed ? formatTotalTime(stats.elapsed) : 'Unavailable'}\n                        </div>\n                        <div aria-labelledby=\"Avg Time\">\n                            <b style={{ marginRight: '10px' }}>Avg time</b>\n                            {stats.elapsed\n                                ? formatAvgRun(stats.elapsed, stats.total_count)\n                                : 'Unavailable'}\n                        </div>\n                        <div aria-labelledby=\"success rate\">\n                            <b style={{ marginRight: '10px' }}>Success rate</b>\n                            {!isNaN(stats.successful_count)\n                                ? formatSuccessRate(stats.successful_count, stats.total_count)\n                                : 'Unavailable'}\n                        </div>\n                        {stats.most_failed_tasks && (\n                            <div aria-labelledby=\"most failed task\">\n                                <b style={{ marginRight: '10px' }}>Most failed task</b>\n                                {stats.most_failed_tasks\n                                    ? formatTopFailedTask(stats.most_failed_tasks)\n                                    : 'Unavailable'}\n                            </div>\n                        )}\n                        {stats.most_failed_steps && (\n                            <div aria-labelledby=\"most failed step\">\n                                <b style={{ marginRight: '10px' }}>Most failed step</b>\n                                {stats.most_failed_steps\n                                    ? formatTopFailedStep(stats.most_failed_steps)\n                                    : 'Unavailable'}\n                            </div>\n                        )}\n                    </DataListFocus>\n                </PFDataListItemNoBorder>\n                <DataListItemCompact>\n                    <DataListCellCompact key=\"last5jobs\">\n                        <Label variant=\"outline\">Last 5 jobs</Label>\n                    </DataListCellCompact>\n          ,\n                    <DataCellEndCompact>\n                        <Button\n                            component=\"a\"\n                            onClick={redirectToJobExplorer}\n                            variant=\"link\"\n                        >\n              View all jobs\n                        </Button>\n                    </DataCellEndCompact>\n                </DataListItemCompact>\n                <DataListItemCompact aria-labelledby=\"datalist header\">\n                    <PFDataListCell key=\"job heading\">Id/Name</PFDataListCell>\n                    <PFDataListCell key=\"cluster heading\">Cluster</PFDataListCell>\n                    <PFDataListCell key=\"start time heading\">Start Time</PFDataListCell>\n                    <PFDataListCell key=\"total time heading\">Total Time</PFDataListCell>\n                </DataListItemCompact>\n                {relatedJobs.length <= 0 && <LoadingState />}\n                {relatedJobs.length > 0 &&\n          relatedJobs.map((job, index) => (\n              <DataListItem\n                  style={{ padding: '10px 0' }}\n                  key={`job-details-${index}`}\n                  aria-labelledby=\"job details\"\n              >\n                  <PFDataListCell key=\"job name\">\n                      {job.status === 'successful' ? success : fail} {job.id.id} -{' '}\n                      {job.id.template_name}\n                  </PFDataListCell>\n                  <PFDataListCell key=\"job cluster\">\n                      {job.cluster_name}\n                  </PFDataListCell>\n                  <PFDataListCell key=\"start time\">\n                      {formatDateTime(job.started)}\n                  </PFDataListCell>\n                  <PFDataListCell key=\"total time\">\n                      {formatSeconds(job.elapsed)}\n                  </PFDataListCell>\n              </DataListItem>\n          ))}\n            </DataList>\n        </Modal>\n    );\n};\n\nModalContents.propTypes = {\n    selectedId: PropTypes.number,\n    qp: PropTypes.object,\n    jobType: PropTypes.string,\n    handleCloseBtn: PropTypes.func,\n    isOpen: PropTypes.bool,\n    handleModal: PropTypes.func\n};\n\nexport default ModalContents;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell\n} from '@patternfly/react-core';\n\nimport ModalContents from './ModalContents';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst TemplatesList = ({ templates, isLoading, qp, title, jobType }) => {\n    const [ selectedId, setSelectedId ] = useState(null);\n    const [ isModalOpen, setIsModalOpen ] = useState(false);\n\n    return (\n        <>\n            <DataList\n                aria-label=\"Top Templates\"\n                style={{\n                    maxHeight: '400px',\n                    overflow: 'auto',\n                    height: '400px',\n                    background: 'white'\n                }}\n            >\n                <DataListItem aria-labelledby=\"top-templates-header\">\n                    <DataListCell>\n                        <h3>{title}</h3>\n                    </DataListCell>\n                    <DataCellEnd>\n                        <h3>Usage</h3>\n                    </DataCellEnd>\n                </DataListItem>\n                {isLoading && (\n                    <PFDataListItem\n                        aria-labelledby=\"templates-loading\"\n                        key={isLoading}\n                        style={{ border: 'none' }}\n                    >\n                        <PFDataListCell>\n                            <LoadingState />\n                        </PFDataListCell>\n                    </PFDataListItem>\n                )}\n                {!isLoading && templates.length <= 0 && (\n                    <PFDataListItem\n                        aria-labelledby=\"templates-no-data\"\n                        key={isLoading}\n                        style={{ border: 'none' }}\n                    >\n                        <PFDataListCell>\n                            <NoData />\n                        </PFDataListCell>\n                    </PFDataListItem>\n                )}\n                {!isLoading &&\n          templates.map(({ name, total_count, id }, index) => (\n              <DataListItem aria-labelledby=\"top-templates-detail\" key={index}>\n                  <DataListCell>\n                      <a\n                          onClick={() => {\n                              setIsModalOpen(true);\n                              setSelectedId(id);\n                          }}\n                      >\n                          {name}\n                      </a>\n                  </DataListCell>\n                  <DataCellEnd>{total_count}</DataCellEnd>\n              </DataListItem>\n          ))}\n            </DataList>\n            <ModalContents\n                isOpen={isModalOpen}\n                handleModal={setIsModalOpen}\n                selectedId={selectedId}\n                qp={qp}\n                jobType={jobType}\n                handleCloseBtn={setSelectedId}\n            />\n        </>\n    );\n};\n\nTemplatesList.propTypes = {\n    templates: PropTypes.array,\n    isLoading: PropTypes.bool,\n    queryParams: PropTypes.object,\n    title: PropTypes.string,\n    qp: PropTypes.object,\n    jobType: PropTypes.string\n};\n\nexport default TemplatesList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport {\n    preflightRequest,\n    readClustersOptions,\n    readJobExplorer,\n    readEventExplorer\n} from '../../Api';\n\nimport { jobExplorer } from '../../Utilities/constants';\nimport useApi from '../../Utilities/useApi';\n\nimport {\n    Main,\n    NotAuthorized,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle\n} from '@patternfly/react-core';\n\nimport BarChart from '../../Charts/BarChart';\nimport LineChart from '../../Charts/LineChart';\nimport ModulesList from '../../Components/ModulesList';\nimport TemplatesList from '../../Components/TemplatesList';\nimport FilterableToolbar from '../../Components/Toolbar';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport { clusters } from '../../Utilities/constants';\n\nconst initialTopTemplateParams = {\n    group_by: 'template',\n    limit: 10,\n    job_type: [ 'job' ],\n    group_by_time: false,\n    status: [ 'successful', 'failed' ]\n};\n\nconst initialTopWorkflowParams = {\n    group_by: 'template',\n    limit: 10,\n    job_type: [ 'workflowjob' ],\n    group_by_time: false,\n    status: [ 'successful', 'failed' ]\n};\n\nconst initialModuleParams = {\n    group_by: 'module',\n    sort_by: 'host_task_count:desc',\n    limit: 10\n};\n\nconst Clusters = () => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n\n    const optionsMapper = options => {\n        const { groupBy, attributes, ...rest } = options;\n        return rest;\n    };\n\n    const { queryParams, setFromToolbar } = useQueryParams({\n        ...clusters.defaultParams\n    });\n\n    const [\n        {\n            isLoading,\n            isSuccess,\n            error,\n            data: { items: chartData = []}\n        },\n        setData\n    ] = useApi({ items: []});\n\n    const [\n        {\n            data: { items: templates = []}\n        },\n        setTemplates\n    ] = useApi({ items: []});\n    const [\n        {\n            data: { items: workflows = []}\n        },\n        setWorkflows\n    ] = useApi({ items: []});\n    const [\n        {\n            data: { items: modules = []}\n        },\n        setModules\n    ] = useApi({ items: []});\n    const [{ data: options = []}, setOptions ] = useApi({}, optionsMapper);\n\n    const initialOptionsParams = {\n        attributes: jobExplorer.attributes\n    };\n\n    const { queryParams: optionsQueryParams } = useQueryParams(\n        initialOptionsParams\n    );\n\n    const {\n        cluster_id,\n        org_id,\n        template_id,\n        quick_date_range,\n        start_date,\n        end_date\n    } = queryParams;\n\n    const topTemplatesParams = {\n        cluster_id,\n        org_id,\n        template_id,\n        quick_date_range,\n        start_date,\n        end_date,\n        ...initialTopTemplateParams\n    };\n\n    const topWorkflowParams = {\n        cluster_id,\n        org_id,\n        template_id,\n        quick_date_range,\n        start_date,\n        end_date,\n        ...initialTopWorkflowParams\n    };\n\n    const topModuleParams = {\n        cluster_id,\n        org_id,\n        template_id,\n        quick_date_range,\n        start_date,\n        end_date,\n        ...initialModuleParams\n    };\n\n    useEffect(() => {\n        async function initializeWithPreflight() {\n            await preflightRequest().catch(error => {\n                setPreFlightError({ preflightError: error });\n            });\n            setOptions(readClustersOptions({ params: optionsQueryParams }));\n        }\n\n        initializeWithPreflight();\n    }, []);\n\n    // Get and update the data\n    useEffect(() => {\n        const fetchEndpoints = () => {\n            setData(readJobExplorer({ params: queryParams }));\n            setTemplates(readJobExplorer({ params: topTemplatesParams }));\n            setWorkflows(readJobExplorer({ params: topWorkflowParams }));\n            setModules(readEventExplorer({ params: topModuleParams }));\n        };\n\n        fetchEndpoints();\n    }, [ queryParams ]);\n\n    if (preflightError?.preflightError?.status === 403) {\n        return <NotAuthorized { ...notAuthorizedParams } />;\n    }\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={'Clusters'} />\n                <FilterableToolbar\n                    categories={options}\n                    filters={queryParams}\n                    setFilters={setFromToolbar}\n                />\n            </PageHeader>\n            {preflightError && (\n                <Main>\n                    <EmptyState {...preflightError} />\n                </Main>\n            )}\n            {error && (\n                <Main>\n                    <ApiErrorState message={error.error} />\n                </Main>\n            )}\n            {!preflightError && !error && (\n                <>\n                    <Main>\n                        <Card>\n                            <PFCardTitle>\n                                <h2>Job status</h2>\n                            </PFCardTitle>\n                            <CardBody>\n                                {isLoading && <LoadingState />}\n                                {queryParams.cluster_id.length <= 0 && isSuccess && (\n                                    <BarChart\n                                        margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                                        id=\"d3-bar-chart-root\"\n                                        data={chartData}\n                                        templateId={queryParams.template_id}\n                                        orgId={queryParams.org_id}\n                                    />\n                                )}\n                                {queryParams.cluster_id.length > 0 && isSuccess && (\n                                    <LineChart\n                                        margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                                        id=\"d3-line-chart-root\"\n                                        data={chartData}\n                                        clusterId={queryParams.cluster_id}\n                                        templateId={queryParams.template_id}\n                                        orgId={queryParams.org_id}\n                                    />\n                                )}\n                            </CardBody>\n                        </Card>\n                        <div\n                            className=\"dataCard\"\n                            style={{ display: 'flex', marginTop: '20px' }}\n                        >\n                            <TemplatesList\n                                qp={queryParams}\n                                templates={workflows}\n                                isLoading={isLoading}\n                                title={'Top workflows'}\n                                jobType={'workflowjob'}\n                            />\n                            <TemplatesList\n                                qp={queryParams}\n                                templates={templates}\n                                isLoading={isLoading}\n                                title={'Top templates'}\n                                jobType={'job'}\n                            />\n                            <ModulesList modules={modules} isLoading={isLoading} />\n                        </div>\n                    </Main>\n                </>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default Clusters;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        this.draw();\n    }\n\n    formatDollars(amount) {\n        return parseFloat(amount)\n        .toFixed(2)\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    }\n\n    draw() {\n        this.width = 125;\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip-base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 125;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, 0) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', 92)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.name = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', -2)\n        .text('Template name');\n        this.savings = this.toolTipBase\n        .append('text')\n        .attr('x', 20)\n        .attr('y', 52)\n        .attr('font-size', 12)\n        .attr('font-weight', 'bold')\n        .attr('fill', 'white')\n        .text('Total savings $0');\n        this.manualCost = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', 16)\n        .text('Manual cost $0');\n        this.automationCost = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', 34)\n        .text('Automation cost $0');\n    }\n\n  handleMouseOver = d => {\n      let name;\n      let savings;\n      let manualCost;\n      let automationCost;\n      const scrollLeftOffset = d3.select('#d3-roi-chart-root').node().scrollLeft;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10 +\n      scrollLeftOffset;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      30;\n      if (!d) {\n          return;\n      } else {\n          savings = this.formatDollars(d.delta);\n          name = d.name;\n          manualCost = this.formatDollars(d.manualCost);\n          automationCost = this.formatDollars(d.automatedCost);\n      }\n\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n      this.name.text('' + name);\n      this.savings.text('Total savings $' + savings);\n      this.manualCost.text('Manual Cost $' + manualCost);\n      this.automationCost.text('Automation Cost $' + automationCost);\n      this.nameWidth = this.name.node().getComputedTextLength();\n      this.savingsWidth = this.savings.node().getComputedTextLength();\n      this.manualCostWidth = this.manualCost.node().getComputedTextLength();\n      this.automationCostWidth = this.automationCost\n      .node()\n      .getComputedTextLength();\n      this.widestTextElem = d3.max([\n          this.nameWidth,\n          this.savingsWidth,\n          this.automationCostWidth,\n          this.manualCostWidth\n      ]);\n\n      const maxTextPerc = (this.widestTextElem / this.boxWidth) * 100;\n      const threshold = 85;\n      const overage = maxTextPerc / threshold;\n      let adjustedWidth;\n      if (maxTextPerc > threshold) {\n          adjustedWidth = this.boxWidth * overage;\n      } else {\n          adjustedWidth = this.boxWidth;\n      }\n\n      this.boundingBox.attr('width', adjustedWidth);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, 15) rotate(45)');\n          this.boundingBox.attr('x', -adjustedWidth - 20);\n          this.name.attr('x', -(toolTipWidth - 7));\n          this.savings.attr('x', -(toolTipWidth - 7));\n          this.manualCost.attr('x', -(toolTipWidth - 7));\n          this.automationCost.attr('x', -(toolTipWidth - 7));\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, 15) rotate(45)');\n          this.boundingBox.attr('x', 10);\n          this.name.attr('x', 20);\n          this.savings.attr('x', 20);\n          this.manualCost.attr('x', 20);\n          this.automationCost.attr('x', 20);\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass TopTemplatesSavings extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.state = {\n            timeout: null\n        };\n    }\n\n    // Methods\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => {\n                this.init();\n            }, 500)\n        });\n    }\n\n    init() {\n        this.draw();\n    }\n\n    draw() {\n    // Use PF chart color\n        const color = '#0066CC'; //blue\n        // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const { data } = this.props;\n        let width;\n        // adjust chart width to support larger datasets\n        if (data.length >= 15) {\n            const containerWidth = d3.select('.automation-wrapper').node();\n            width =\n        containerWidth.getBoundingClientRect().width -\n        this.props.margin.left -\n        this.props.margin.right;\n        } else {\n            width = this.props.getWidth();\n        }\n\n        const height = this.props.getHeight();\n        const x = d3\n        .scaleBand()\n        .rangeRound([ 0, width ])\n        .padding(0.45);\n        const y = d3.scaleLinear().range([ height, 0 ]);\n        // format our X Axis ticks\n        let ticks;\n        ticks = data.map(d => d.name);\n        const formatYAxisValue = d3.format('.2s');\n        const xAxis = d3.axisBottom(x).tickValues(ticks);\n\n        const yAxis = d3\n        .axisLeft(y)\n        .ticks(8)\n        .tickFormat(d => formatYAxisValue(d).replace('G', 'B'))\n        .tickSize(-width, 0, 0);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n\n        const taskNames = data.map(d => d.name);\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id\n        });\n        x.domain(taskNames);\n        y.domain([ 0, d3.max(data, d => d.delta * 1.15) || 8 ]);\n\n        // add y axis\n        svg\n        .append('g')\n        .attr('class', 'y axis')\n        .call(yAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7')\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 6)\n        .attr('dy', '.71em')\n        .style('text-anchor', 'end')\n        .style('font-weight', 'bold')\n        .text('Value');\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Savings per template ($)');\n\n        // add x axis\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(xAxis)\n        .selectAll('text')\n        .style('text-anchor', 'start')\n        .attr('dx', '0.75em')\n        .attr('dy', -x.bandwidth() / 1.45 - 8)\n        .attr('transform', 'rotate(-90)');\n\n        svg.selectAll('.x-axis line').attr('stroke', 'transparent');\n\n        svg\n        .selectAll('.bar')\n        .data(data)\n        .enter()\n        .append('rect')\n        .attr('x', d => x(d.name))\n        .attr('width', x.bandwidth())\n        .attr('y', d => y(d.delta))\n        .style('fill', () => color)\n        .attr('height', d => height - y(d.delta))\n        .on('mouseover', function(d) {\n            d3.select(this).style('fill', d3.rgb(color).darker(1));\n            tooltip.handleMouseOver(d);\n        })\n        .on('mousemove', tooltip.handleMouseOver)\n        .on('mouseout', function() {\n            d3.select(this).style('fill', color);\n            tooltip.handleMouseOut();\n        });\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate() {\n        this.init();\n    }\n\n    render() {\n        return <div id={this.props.id} />;\n    }\n}\n\nTopTemplatesSavings.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func\n};\n\nexport default initializeChart(TopTemplatesSavings);\n","import styled from 'styled-components';\nimport { CardTitle } from '@patternfly/react-core';\n\nexport const BorderedCardTitle = styled(CardTitle)`\n  border-bottom: 1px solid #d7d7d7;\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle, Title } from '@patternfly/react-core';\n\nconst floatToStringWithCommas = total =>\n    total\n    .toFixed(2)\n    .toString()\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\nconst TotalSavings = ({ totalSavings = 0 }) => (\n    <Card style={{ borderTop: '3px solid #2B9AF3' }}>\n        <CardTitle style={{ paddingBottom: '0' }}>Total savings</CardTitle>\n        <CardBody>\n            <Title\n                headingLevel=\"h3\"\n                size=\"4xl\"\n                style={{ color: 'var(--pf-global--success-color--200)' }}\n            >\n                {floatToStringWithCommas(totalSavings)}\n            </Title>\n        </CardBody>\n    </Card>\n);\n\nTotalSavings.propTypes = {\n    totalSavings: PropTypes.number\n};\n\nexport default TotalSavings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    Card,\n    CardBody,\n    InputGroup,\n    InputGroupText,\n    TextInput\n} from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst validFloat = value => {\n    const floatValue = parseFloat(value);\n    return floatValue && floatValue >= 0 ? value : '';\n};\n\nconst CalculationCost = ({\n    costManual = '0',\n    setCostManual = () => {},\n    costAutomation = '0',\n    setCostAutomation = () => {}\n}) => (\n    <Card>\n        <CardTitle>Calculate your automation</CardTitle>\n        <CardBody>\n            <InputAndText>\n                <p>Manual cost of automation</p>\n                <em style={{ color: 'var(--pf-global--Color--dark-200)' }}>\n          (e.g. average salary of mid-level Software Engineer)\n                </em>\n                <InputGroup style={{ width: '50%' }}>\n                    <InputGroupText>\n                        <DollarSignIcon />\n                    </InputGroupText>\n                    <TextInput\n                        id=\"manual-cost\"\n                        type=\"number\"\n                        aria-label=\"manual-cost\"\n                        value={costManual}\n                        onChange={e => setCostManual(validFloat(e))}\n                    />\n                    <InputGroupText>/hr</InputGroupText>\n                </InputGroup>\n            </InputAndText>\n            <InputAndText style={{ paddingTop: '10px' }}>\n                <p>Automated process cost</p>\n                <InputGroup style={{ width: '50%' }}>\n                    <InputGroupText>\n                        <DollarSignIcon />\n                    </InputGroupText>\n                    <TextInput\n                        id=\"automation-cost\"\n                        type=\"number\"\n                        aria-label=\"automation-cost\"\n                        value={costAutomation}\n                        onChange={e => setCostAutomation(validFloat(e))}\n                    />\n                    <InputGroupText>/hr</InputGroupText>\n                </InputGroup>\n            </InputAndText>\n        </CardBody>\n    </Card>\n);\n\nCalculationCost.propTypes = {\n    costManual: PropTypes.string,\n    setCostManual: PropTypes.func,\n    costAutomation: PropTypes.string,\n    setCostAutomation: PropTypes.func\n};\n\nexport default CalculationCost;\n","import React from 'react';\n\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst AutomationFormula = () => (\n    <Card style={{ height: '100%' }}>\n        <CardTitle>Automation formula</CardTitle>\n        <CardBody>\n            <p>\n                <b>Manual cost for template x</b> =\n                <em>\n          (time for a manual run on one host in hours * (sum of all hosts across\n          all job runs) ) * cost per hour\n                </em>\n            </p>\n            <p>\n                <b>Automation cost for template x</b> =\n                <em>\n          cost of automation per hour * sum of total elapsed hours for a\n          template\n                </em>\n            </p>\n            <p>\n                <b>Savings</b> =\n                <em>Sum of (manual cost - automation cost) across all templates</em>\n            </p>\n        </CardBody>\n    </Card>\n);\n\nexport default AutomationFormula;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    Button,\n    Card,\n    CardBody,\n    InputGroup,\n    InputGroupText,\n    TextInput,\n    Tooltip,\n    Popover\n} from '@patternfly/react-core';\nimport {\n    InfoCircleIcon,\n    ToggleOnIcon,\n    ToggleOffIcon\n} from '@patternfly/react-icons';\n\nimport {\n    convertSecondsToMins,\n    convertMinsToSeconds,\n    capitalize\n} from '../../Utilities/helpers';\n\nconst TemplateDetail = styled.div`\n  em {\n    display: block;\n    padding: 5px 0;\n  }\n\n  @media (max-width: 1490px) {\n    display: block;\n\n    em {\n      padding: 10px 0;\n      display: block;\n    }\n  }\n`;\n\nconst TemplateDetailSubTitle = styled.em`\n  color: var(--pf-global--Color--dark-200);\n`;\n\nconst TooltipWrapper = styled.div`\n  p {\n    text-align: left;\n  }\n`;\n\nconst IconGroup = styled.div`\n  & svg {\n    fill: var(--pf-global--Color--dark-200);\n\n    :hover {\n      cursor: pointer;\n    }\n\n    :first-of-type {\n      margin-right: 10px;\n      margin-left: 10px;\n\n      @media (max-width: 1350px) {\n        margin-left: 0;\n      }\n    }\n  }\n`;\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst showSortAttr = (details, sortBy) => {\n    const trimmed = sortBy.split(':')[0];\n    const sortAttribute = Object.keys(details).map(k =>\n        k === trimmed ? `${details[k]}` : null\n    );\n\n    return (\n        <TemplateDetailSubTitle>\n            {capitalize(trimmed.split('_').join(' '))}: {sortAttribute}\n        </TemplateDetailSubTitle>\n    );\n};\n\nconst QuestionIconTooltip = ({ details }) => (\n    <Popover\n        aria-label=\"template detail popover\"\n        position=\"left\"\n        bodyContent={\n            <TooltipWrapper>\n                {Object.keys(details).map((k, i) => (\n                    <p key={i}>\n                        <b>{capitalize(k.split('_').join(' '))}</b>: {details[k]}\n                    </p>\n                ))}\n            </TooltipWrapper>\n        }\n    >\n        <InfoCircleIcon />\n    </Popover>\n);\n\nQuestionIconTooltip.propTypes = {\n    details: PropTypes.object\n};\n\nconst TopTemplates = ({\n    data = [],\n    sortBy = '',\n    setDataRunTime = () => {},\n    setEnabled = () => {},\n    redirectToJobExplorer = () => {}\n}) => (\n    <Card style={{ overflow: 'auto', flex: '1 1 0' }} className=\"top-templates\">\n        <CardBody>\n            <p>Enter the time it takes to run the following templates manually.</p>\n            {data.map(d => (\n                <div key={d.id}>\n                    <Tooltip content={'List of jobs for this template for past 30 days'}>\n                        <Button\n                            style={{ padding: '15px 0 10px' }}\n                            component=\"a\"\n                            onClick={() => redirectToJobExplorer(d.id)}\n                            variant=\"link\"\n                        >\n                            {d.name}\n                        </Button>\n                    </Tooltip>\n                    <TemplateDetail>\n                        <InputAndText key={d.id}>\n                            <InputGroup>\n                                <TextInput\n                                    id={d.id}\n                                    type=\"number\"\n                                    aria-label=\"time run manually\"\n                                    value={convertSecondsToMins(d.avgRunTime)}\n                                    onChange={minutes =>\n                                        setDataRunTime(convertMinsToSeconds(minutes), d.id)\n                                    }\n                                />\n                                <InputGroupText>min</InputGroupText>\n                            </InputGroup>\n                        </InputAndText>\n                        <TemplateDetailSubTitle>\n                            x {d.successful_hosts_total} host runs\n                        </TemplateDetailSubTitle>\n                        {showSortAttr(d, sortBy)}\n                        <IconGroup>\n                            <QuestionIconTooltip\n                                details={d}\n                            />\n                            { !d.enabled && <ToggleOffIcon onClick={ () => setEnabled(d.id)(true) } /> }\n                            { d.enabled && <ToggleOnIcon onClick={ () => setEnabled(d.id)(false) } /> }\n                        </IconGroup>\n                    </TemplateDetail>\n                    <p style={{ color: '#486B00' }}>${d.delta.toFixed(2)}</p>\n                </div>\n            ))}\n        </CardBody>\n    </Card>\n);\n\nTopTemplates.propTypes = {\n    data: PropTypes.array,\n    setDataRunTime: PropTypes.func,\n    redirectToJobExplorer: PropTypes.func,\n    deselectedIds: PropTypes.array,\n    setDeselectedIds: PropTypes.func,\n    setEnabled: PropTypes.func,\n    sortBy: PropTypes.string\n};\n\nexport default TopTemplates;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n    Main,\n    NotAuthorized,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\n// Imports from custom components\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\n// Imports from API\nimport { preflightRequest, readROI, readROIOptions } from '../../Api';\n\n// Imports from utilities\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { roi as roiConst } from '../../Utilities/constants';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { calculateDelta, convertSecondsToHours } from '../../Utilities/helpers';\n\n// Chart\nimport TopTemplatesSavings from '../../Charts/ROITopTemplates';\n\n// Local imports\nimport { BorderedCardTitle } from './helpers';\nimport TotalSavings from './TotalSavings';\nimport CalculationCost from './CalculationCost';\nimport AutomationFormula from './AutomationFormula';\nimport TopTemplates from './TopTemplates';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 5fr 2fr;\n  height: 100%;\n`;\n\nconst WrapperLeft = styled.div`\n  flex: 5;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n`;\n\nconst WrapperRight = styled.div`\n  flex: 2;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst mapApi = ({ items = []}) =>\n    items.map(el => ({\n        ...el,\n        delta: 0,\n        avgRunTime: 3600,\n        manualCost: 0,\n        automatedCost: 0,\n        enabled: true\n    }));\n\nconst filterDisabled = data => data.filter(({ enabled }) => enabled);\n\nconst updateDeltaCost = (data, costAutomation, costManual) =>\n    data.map(el => {\n        const manualCost =\n      convertSecondsToHours(el.avgRunTime) *\n      el.successful_hosts_total *\n      parseFloat(costManual);\n        const automatedCost =\n      convertSecondsToHours(el.successful_elapsed_total) *\n      parseFloat(costAutomation);\n        const delta = calculateDelta(automatedCost, manualCost);\n\n        return { ...el, delta, manualCost, automatedCost };\n    });\n\nconst computeTotalSavings = data =>\n    data.reduce((sum, curr) => sum + curr.delta, 0);\n\nconst AutomationCalculator = ({ history }) => {\n    const toJobExplorer = useRedirect(history, 'jobExplorer');\n    const [ costManual, setCostManual ] = useState('50');\n    const [ costAutomation, setCostAutomation ] = useState('20');\n\n    const [ preflight, setPreflight ] = useApi(null);\n    const [ options, setOptions ] = useApi({});\n    const [ api, fetchApi, setDataInApi ] = useApi([], data =>\n        updateDeltaCost(mapApi(data), costAutomation, costManual)\n    );\n\n    const { queryParams, setFromToolbar } = useQueryParams(\n        roiConst.defaultParams\n    );\n\n    /**\n   * Modifies one elements avgRunTime in the unfilteredData\n   * and updates all calculated fields.\n   * Used in top templates.\n   */\n    const setDataRunTime = (seconds, id) => {\n        const updatedData = api.data.map(el => {\n            if (el.id === id) {\n                el.avgRunTime = seconds;\n                const updatedDelta = updateDeltaCost(\n                    [ el ],\n                    costAutomation,\n                    costManual\n                )[0];\n                return updatedDelta;\n            } else {\n                return el;\n            }\n        });\n\n        setDataInApi(updatedData);\n    };\n\n    const setEnabled = id => value => {\n        setDataInApi(api.data.map(el =>\n            el.id === id\n                ? { ...el, enabled: value }\n                : el\n        ));\n    };\n\n    useEffect(() => {\n        setPreflight(preflightRequest());\n        setOptions(readROIOptions({ params: queryParams }));\n    }, []);\n\n    /**\n   * Recalculates the delta and costs in the data after the cost is changed.\n   */\n    useEffect(() => {\n        setDataInApi(updateDeltaCost(api.data, costAutomation, costManual));\n    }, [ costAutomation, costManual ]);\n\n    /**\n   * Get data from API depending on the queryParam.\n   */\n    useEffect(() => {\n        fetchApi(readROI({ params: queryParams }));\n    }, [ queryParams ]);\n\n    /**\n   * Function to redirect to the job explorer page\n   * with the same filters as is used here.\n   */\n    const redirectToJobExplorer = templateId => {\n        const initialQueryParams = {\n            quick_date_range: 'last_30_days',\n            template_id: [ templateId ]\n        };\n        toJobExplorer(initialQueryParams);\n    };\n\n    const renderLeft = () => (\n        <WrapperLeft>\n            <Main style={{ paddingBottom: '0' }}>\n                <Card>\n                    <BorderedCardTitle>Automation savings</BorderedCardTitle>\n                    <CardBody>\n                        {api.isLoading && <LoadingState />}\n                        {api.error && <ApiErrorState message={api.error.error} />}\n                        {api.isSuccess && api.data.length <= 0 && <NoData />}\n                        {api.isSuccess && api.data.length > 0 && (\n                            <React.Fragment>\n                                <TopTemplatesSavings\n                                    margin={{ top: 20, right: 20, bottom: 20, left: 70 }}\n                                    id=\"d3-roi-chart-root\"\n                                    data={filterDisabled(api.data)}\n                                />\n                                <p style={{ textAlign: 'center' }}>Templates</p>\n                            </React.Fragment>\n                        )}\n                    </CardBody>\n                </Card>\n            </Main>\n            <Main>\n                <AutomationFormula />\n            </Main>\n        </WrapperLeft>\n    );\n\n    const renderRight = () => (\n        <WrapperRight>\n            <Main style={{ paddingBottom: '0', paddingLeft: '0' }}>\n                <TotalSavings totalSavings={computeTotalSavings(filterDisabled(api.data))} />\n            </Main>\n            <Main\n                style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    flex: '1 1 0',\n                    paddingLeft: '0'\n                }}\n            >\n                <CalculationCost\n                    costManual={costManual}\n                    setCostManual={setCostManual}\n                    costAutomation={costAutomation}\n                    setCostAutomation={setCostAutomation}\n                />\n                <TopTemplates\n                    redirectToJobExplorer={redirectToJobExplorer}\n                    data={api.data}\n                    setDataRunTime={setDataRunTime}\n                    setUnfilteredData={api.data}\n                    setEnabled={setEnabled}\n                    sortBy={queryParams.sort_by}\n                />\n            </Main>\n        </WrapperRight>\n    );\n\n    if (preflight?.error?.status === 403) {\n        return <NotAuthorized { ...notAuthorizedParams } />;\n    }\n\n    return (\n        <React.Fragment>\n            <PageHeader style={{ flex: '0' }}>\n                <PageHeaderTitle title={'Automation Calculator'} />\n                <FilterableToolbar\n                    categories={options.data}\n                    filters={queryParams}\n                    setFilters={setFromToolbar}\n                />\n            </PageHeader>\n            {preflight.error && (\n                <Main>\n                    <EmptyState preflightError={preflight.error} />\n                </Main>\n            )}\n            {preflight.isSuccess && (\n                <React.Fragment>\n                    <Wrapper className=\"automation-wrapper\">\n                        {renderLeft()}\n                        {renderRight()}\n                    </Wrapper>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n};\n\nAutomationCalculator.propTypes = {\n    history: PropTypes.object\n};\n\nexport default AutomationCalculator;\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst NoResults = () => {\n    return (\n        <EmptyState variant={EmptyStateVariant.full}>\n            <EmptyStateIcon icon={SearchIcon} />\n            <Title size=\"lg\" headingLevel=\"h4\">\n        No results found\n            </Title>\n            <EmptyStateBody>\n        No results match the filter criteria. Remove all filters or clear all\n        filters to show results.\n            </EmptyStateBody>\n        </EmptyState>\n    );\n};\n\nexport default NoResults;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from '@patternfly/react-core';\nimport {\n    CheckCircleIcon,\n    ExclamationCircleIcon,\n    ClockIcon,\n    SyncAltIcon,\n    ExclamationTriangleIcon\n} from '@patternfly/react-icons';\n\nconst JobStatus = ({ status }) => {\n    const capitalized = str => str.charAt(0).toUpperCase() + str.slice(1);\n\n    const getColor = () => {\n        switch (status) {\n            case 'successful':\n                return 'green';\n            case 'failed':\n            case 'error':\n                return 'red';\n            case 'running':\n            case 'pending':\n                return 'blue';\n            case 'canceled':\n                return 'orange';\n                // case new, waiting\n            default:\n                return 'grey';\n        }\n    };\n\n    const getIcon = () => {\n        switch (status) {\n            case 'successful':\n                return <CheckCircleIcon />;\n            case 'failed':\n            case 'error':\n                return <ExclamationCircleIcon />;\n            case 'running':\n                return <SyncAltIcon />;\n            case 'canceled':\n                return <ExclamationTriangleIcon />;\n                // case new, waiting, pending\n            default:\n                return <ClockIcon />;\n        }\n    };\n\n    return (\n        <Label variant=\"outline\" color={getColor()} icon={getIcon()}>\n            {capitalized(status)}\n        </Label>\n    );\n};\n\nJobStatus.propTypes = {\n    status: PropTypes.oneOf([\n        'successful',\n        'failed',\n        'error',\n        'running',\n        'new',\n        'waiting',\n        'pending',\n        'canceled'\n    ])\n};\n\nexport default JobStatus;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    DataListCell as PFDataListCell,\n    DataListContent,\n    DataList,\n    DataListItem,\n    DataListItemRow,\n    DataListItemCells as PFDataListItemCells,\n    DataListToggle as PFDataListToggle,\n    Tooltip\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkIcon } from '@patternfly/react-icons';\n\nimport LoadingState from '../Components/LoadingState';\nimport { formatDateTime, formatJobType } from '../Utilities/helpers';\nimport JobStatus from './JobStatus';\n\nconst headerLabels = [ 'Id/Name', 'Status', 'Cluster', 'Organization', 'Type' ];\n\nconst ExternalLinkIcon = styled(PFExternalLinkIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n`;\n\nconst DataListCell = styled(PFDataListCell)`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  text-align: center;\n`;\n\nconst DataListCellHeader = styled(DataListCell)`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  font-weight: bold;\n`;\n\nconst DataListItemCells = styled(PFDataListItemCells)`\n  align-items: center;\n`;\n\nconst DataListToggle = styled(PFDataListToggle)`\n  align-items: center;\n`;\n\nconst mobileBreakpoint = 765;\n\nconst buildHeader = labels => (\n    <DataListItem>\n        <DataListItemRow style={{ paddingLeft: '80px' }}>\n            <DataListItemCells\n                dataListCells={labels.map(label => (\n                    <DataListCellHeader key={label}>\n                        {label}\n                        {label === 'Id/Name' && <ExternalLinkIcon />}\n                    </DataListCellHeader>\n                ))}\n            />\n        </DataListItemRow>\n    </DataListItem>\n);\n\nconst buildListRow = (items, ariaLabel, ariaLabelledBy, windowWidth) => {\n    const [ isExpanded, setIsExpanded ] = useState([]);\n\n    return (\n        <>\n            {items.map((item, count) => {\n                const toggle = id => {\n                    const expanded = isExpanded;\n                    const idx = expanded.indexOf(id);\n                    const newExpanded =\n            idx >= 0\n                ? [\n                    ...expanded.slice(0, idx),\n                    ...expanded.slice(idx + 1, expanded.length)\n                ]\n                : [ ...expanded, id ];\n                    setIsExpanded(newExpanded);\n                };\n\n                return (\n                    <DataListItem\n                        key={item.id.id}\n                        aria-labelledby={ariaLabelledBy}\n                        isExpanded={isExpanded.includes(`${item.id.id}-toggle`)}\n                    >\n                        <DataListItemRow key={item.id.id}>\n                            <DataListToggle\n                                id={`${item.id.id}-toggle`}\n                                aria-controls={`${item.id.id}-expand`}\n                                onClick={() => toggle(`${item.id.id}-toggle`)}\n                                isExpanded={isExpanded.includes(`${item.id.id}-toggle`)}\n                            />\n                            <DataListItemCells\n                                dataListCells={[\n                                    <DataListCell key={count++}>\n                                        <a\n                                            href={item.id.tower_link}\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                        >\n                                            {windowWidth < mobileBreakpoint && (\n                                                <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                          Id/Name\n                                                    <ExternalLinkIcon />:\n                                                </span>\n                                            )}\n                      &nbsp;\n                                            {`${item.id.id} - ${item.id.template_name}`}\n                                        </a>\n                                    </DataListCell>,\n                                    <DataListCell key={count++}>\n                                        {windowWidth <= mobileBreakpoint && (\n                                            <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Status:\n                                            </span>\n                                        )}\n                    &nbsp;\n                                        <JobStatus status={item.status} />\n                                    </DataListCell>,\n                                    <Tooltip key={count++} content={<p>{item.cluster_name}</p>}>\n                                        <DataListCell>\n                                            {windowWidth <= mobileBreakpoint && (\n                                                <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                          Cluster:\n                                                </span>\n                                            )}\n                      &nbsp;\n                                            {item.cluster_name}\n                                        </DataListCell>\n                                    </Tooltip>,\n                                    <DataListCell key={count++}>\n                                        {windowWidth <= mobileBreakpoint && (\n                                            <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Organization:\n                                            </span>\n                                        )}\n                    &nbsp;\n                                        {item.org_name}\n                                    </DataListCell>,\n                                    <DataListCell key={count++}>\n                                        {windowWidth <= mobileBreakpoint && (\n                                            <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Type:\n                                            </span>\n                                        )}\n                    &nbsp;\n                                        {formatJobType(item.job_type)}\n                                    </DataListCell>\n                                ]}\n                            />\n                        </DataListItemRow>\n                        <DataListContent\n                            aria-label={`${item.id.id}-details`}\n                            id={'${item.id.id}'}\n                            isHidden={!isExpanded.includes(`${item.id.id}-toggle`)}\n                        >\n                            <DataListItemCells\n                                dataListCells={[\n                                    <DataListCell key={count++}>\n                    Created: {formatDateTime(item.created)}\n                                    </DataListCell>,\n                                    <DataListCell key={count++}>\n                    Started: {formatDateTime(item.started)}\n                                    </DataListCell>,\n                                    <DataListCell key={count++}>\n                    Finished: {formatDateTime(item.finished)}\n                                    </DataListCell>\n                                ]}\n                            />\n                        </DataListContent>\n                    </DataListItem>\n                );\n            })}\n        </>\n    );\n};\n\nconst AllJobsTemplate = ({ jobs }) => {\n    const [ windowWidth, setWindowWidth ] = useState(window.innerWidth);\n\n    const onResize = () => setWindowWidth(window.innerWidth);\n\n    useEffect(() => {\n        window.addEventListener('resize', onResize);\n        return () => window.removeEventListener('resize', onResize);\n    }, []);\n\n    return buildListRow(jobs, 'All jobs view', 'all-jobs', windowWidth);\n};\n\nconst JobExplorerList = ({ jobs }) => {\n    const [ windowWidth, setWindowWidth ] = useState(window.innerWidth);\n\n    const onResize = () => setWindowWidth(window.innerWidth);\n\n    useEffect(() => {\n        window.addEventListener('resize', onResize);\n        return () => window.removeEventListener('resize', onResize);\n    }, []);\n\n    return (\n        <>\n            {jobs.length <= 0 && <LoadingState />}\n            <DataList isCompact>\n                {windowWidth >= mobileBreakpoint && buildHeader(headerLabels)}\n                <AllJobsTemplate jobs={jobs} windowWidth={windowWidth} />\n            </DataList>\n        </>\n    );\n};\n\nJobExplorerList.propTypes = {\n    jobs: PropTypes.array,\n    windowWidth: PropTypes.number\n};\n\nAllJobsTemplate.propTypes = {\n    jobs: PropTypes.array,\n    windowWidth: PropTypes.number\n};\n\nexport default JobExplorerList;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { parse, stringify } from 'query-string';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { Paths } from '../../paths';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoResults from '../../Components/NoResults';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport {\n    preflightRequest,\n    readJobExplorer,\n    readJobExplorerOptions\n} from '../../Api';\nimport { jobExplorer } from '../../Utilities/constants';\n\nimport {\n    Main,\n    NotAuthorized,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n    Card,\n    CardBody,\n    Pagination,\n    PaginationVariant\n} from '@patternfly/react-core';\n\nimport JobExplorerList from '../../Components/JobExplorerList';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\nconst perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '15', value: 15 },\n    { title: '20', value: 20 },\n    { title: '25', value: 25 }\n];\n\nconst initialQueryParams = {\n    ...jobExplorer.defaultParams,\n    attributes: jobExplorer.attributes\n};\n\nconst optionsMapper = options => {\n    const { groupBy, attributes, ...rest } = options;\n    return rest;\n};\n\nconst JobExplorer = ({ location: { search }, history }) => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [\n        {\n            isLoading,\n            isSuccess,\n            error,\n            data: { meta = {}, items: data = []}\n        },\n        setData\n    ] = useApi({ meta: {}, items: []});\n    const [ currPage, setCurrPage ] = useState(1);\n    const [ options, setOptions ] = useApi({}, optionsMapper);\n\n    const {\n        queryParams,\n        setLimit,\n        setOffset,\n        setFromToolbar,\n        dispatch\n    } = useQueryParams(initialQueryParams);\n\n    const updateURL = () => {\n        const { jobExplorer } = Paths;\n        const search = stringify(queryParams, { arrayFormat: 'bracket' });\n        history.replace({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    useEffect(() => {\n        insights.chrome.appNavClick({ id: 'job-explorer', secondaryNav: true });\n\n        preflightRequest().catch(error => {\n            setPreFlightError({ preflightError: error });\n        });\n\n        const initialSearchParams = parse(search, {\n            arrayFormat: 'bracket',\n            parseBooleans: true\n        });\n\n        dispatch({ type: 'REINITIALIZE', value: {\n            ...initialQueryParams,\n            ...initialSearchParams\n        }});\n    }, []);\n\n    useEffect(() => {\n        setData(readJobExplorer({ params: queryParams }));\n        setOptions(readJobExplorerOptions({ params: queryParams }));\n        updateURL();\n    }, [ queryParams ]);\n\n    const returnOffsetVal = page => (page - 1) * queryParams.limit;\n\n    const handleSetPage = page => {\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    const handlePerPageSelect = (perPage, page) => {\n        setLimit(perPage);\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    if (preflightError?.preflightError?.status === 403) {\n        return <NotAuthorized { ...notAuthorizedParams } />;\n    }\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={'Job Explorer'} />\n            </PageHeader>\n\n            {preflightError && (\n                <Main>\n                    <EmptyState {...preflightError} />\n                </Main>\n            )}\n\n            {!preflightError && (\n                <Main>\n                    <Card>\n                        <CardBody>\n                            <FilterableToolbar\n                                categories={options.data}\n                                filters={queryParams}\n                                setFilters={setFromToolbar}\n                                pagination={\n                                    <Pagination\n                                        itemCount={meta && meta.count ? meta.count : 0}\n                                        widgetId=\"pagination-options-menu-top\"\n                                        perPageOptions={perPageOptions}\n                                        perPage={queryParams.limit}\n                                        page={currPage}\n                                        variant={PaginationVariant.top}\n                                        onPerPageSelect={(_event, perPage, page) => {\n                                            handlePerPageSelect(perPage, page);\n                                        }}\n                                        onSetPage={(_event, pageNumber) => {\n                                            handleSetPage(pageNumber);\n                                        }}\n                                        isCompact\n                                    />\n                                }\n                                hasSettings\n                            />\n                            {error && <ApiErrorState message={error.error} />}\n                            {isLoading && <LoadingState />}\n                            {isSuccess && data.length <= 0 && <NoResults />}\n                            {isSuccess && data.length > 0 && <JobExplorerList jobs={data} />}\n                            <Pagination\n                                itemCount={meta && meta.count ? meta.count : 0}\n                                widgetId=\"pagination-options-menu-bottom\"\n                                perPageOptions={perPageOptions}\n                                perPage={queryParams.limit}\n                                page={currPage}\n                                variant={PaginationVariant.bottom}\n                                onPerPageSelect={(_event, perPage, page) => {\n                                    handlePerPageSelect(perPage, page);\n                                }}\n                                onSetPage={(_event, pageNumber) => {\n                                    handleSetPage(pageNumber);\n                                }}\n                                style={{ marginTop: '20px' }}\n                            />\n                        </CardBody>\n                    </Card>\n                </Main>\n            )}\n        </React.Fragment>\n    );\n};\n\nJobExplorer.propTypes = {\n    location: PropTypes.object,\n    history: PropTypes.object\n};\n\nexport default JobExplorer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nimport {\n    NotificationDrawerList as PFNotificationDrawerList,\n    NotificationDrawerListItem as PFNotificationDrawerListItem,\n    NotificationDrawerListItemBody,\n    NotificationDrawerListItemHeader\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkAltIcon } from '@patternfly/react-icons';\nimport LoadingState from '../Components/LoadingState';\nimport { capitalize } from '../Utilities/helpers';\n\nconst ExternalLinkAltIcon = styled(PFExternalLinkAltIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n  font-size: 14px;\n`;\n\nconst NotificationDrawerListItem = styled(PFNotificationDrawerListItem)`\n  border-top: 1px solid var(--pf-global--BorderColor--light-100\n    );\n  border-bottom::nth-child(odd): 1px solid var(--pf-global--BorderColor--light-100\n    );\n  box-shadow: none;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst NotificationDrawerList = styled(PFNotificationDrawerList)`\n  &:last-child {\n    border-bottom: 1px solid var(--pf-global--BorderColor--light-100);\n  }\n`;\n\nconst stringifyDate = date => {\n    const day = moment(date);\n    const oneHour = 60 * 60 * 1000;\n    const now = moment().utc();\n\n    if (now.isAfter(day)) {\n        return `${now.diff(day, 'days')} day(s) ago.`;\n    }\n\n    if (day.isSame(now, 'day')) {\n        if (day.valueOf() > oneHour) {\n            return `${day.diff(now, 'hours')} hour(s) ago.`;\n        }\n\n        return `${now.diff(day, 'minutes')} minute(s) ago.`;\n    }\n};\n\nconst AllNotificationTemplate = ({ notifications }) =>\n    notifications.map(\n        ({ date, message, label, notification_id: id, tower_url: url }) => {\n            if (label === '' || label === 'notice') {\n                return (\n                    <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n                        <NotificationDrawerListItemHeader\n                            variant=\"info\"\n                            title={\n                                <>\n                                    {url ? (\n                                        <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                            {capitalize(label)}\n                                            <ExternalLinkAltIcon />\n                                        </a>\n                                    ) : (\n                                        capitalize(label)\n                                    )}\n                                </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody>\n                            {message}{' '}\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n\n            if (label === 'error') {\n                return (\n                    <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n                        <NotificationDrawerListItemHeader\n                            variant=\"danger\"\n                            title={\n                                <>\n                                    {url ? (\n                                        <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                            {capitalize(label)}\n                                            <ExternalLinkAltIcon />\n                                        </a>\n                                    ) : (\n                                        capitalize(label)\n                                    )}\n                                </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                            {message}{' '}\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n\n            if (label === 'warning') {\n                return (\n                    <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n                        <NotificationDrawerListItemHeader\n                            variant=\"warning\"\n                            title={\n                                <>\n                                    {url ? (\n                                        <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                            {capitalize(label)}\n                                            <ExternalLinkAltIcon />\n                                        </a>\n                                    ) : (\n                                        capitalize(label)\n                                    )}\n                                </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                            {message}{' '}\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n        }\n    );\n\nconst ErrorNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'error')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n                variant=\"danger\"\n                title={\n                    <>\n                        {url ? (\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                {capitalize(label)}\n                                <ExternalLinkAltIcon />\n                            </a>\n                        ) : (\n                            capitalize(label)\n                        )}\n                    </>\n                }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                {message}{' '}\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst NoticeNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'notice')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n                variant=\"info\"\n                title={\n                    <>\n                        {url ? (\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                {capitalize(label)}\n                                <ExternalLinkAltIcon />\n                            </a>\n                        ) : (\n                            capitalize(label)\n                        )}\n                    </>\n                }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                {message}{' '}\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst WarningNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'warning')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n                variant=\"warning\"\n                title={\n                    <>\n                        {url ? (\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                {capitalize(label)}\n                                <ExternalLinkAltIcon />\n                            </a>\n                        ) : (\n                            capitalize(label)\n                        )}\n                    </>\n                }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                {message}{' '}\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst NotificationsList = ({ filterBy, notifications }) => (\n    <>\n        <NotificationDrawerList>\n            {notifications.length <= 0 && <LoadingState />}\n            {filterBy === '' && (\n                <AllNotificationTemplate notifications={notifications} />\n            )}\n            {filterBy === 'notice' && (\n                <NoticeNotificationTemplate notifications={notifications} />\n            )}\n            {filterBy === 'error' && (\n                <ErrorNotificationTemplate notifications={notifications} />\n            )}\n            {filterBy === 'warning' && (\n                <WarningNotificationTemplate notifications={notifications} />\n            )}\n        </NotificationDrawerList>\n    </>\n);\n\nAllNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nErrorNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nWarningNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nNotificationsList.propTypes = {\n    notifications: PropTypes.array,\n    filterBy: PropTypes.string\n};\n\nexport default NotificationsList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoData from '../../Components/NoData';\nimport { preflightRequest, readClusters, readNotifications } from '../../Api';\n\nimport {\n    Main,\n    NotAuthorized,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle,\n    FormSelect,\n    FormSelectOption,\n    Pagination,\n    PaginationVariant,\n    NotificationDrawer\n} from '@patternfly/react-core';\n\nimport NotificationsList from '../../Components/NotificationsList';\n\nconst CardTitle = styled(PFCardTitle)`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n`;\n\nconst DropdownGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-end;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n\n  select {\n    margin: 0 10px;\n    width: 150px;\n\n    @media screen and (max-width: 1035px) {\n      margin: 10px 10px 0 0;\n    }\n\n    @media screen and (max-width: 865px) {\n      width: 100%;\n    }\n  }\n`;\n\nconst notificationOptions = [\n    {\n        value: 'please choose',\n        label: 'Select Notification Severity',\n        disabled: true\n    },\n    { value: 'error', label: 'View Critical', disabled: false },\n    { value: 'warning', label: 'View Warning', disabled: false },\n    { value: 'notice', label: 'View Notice', disabled: false },\n    { value: '', label: 'View All', disabled: false }\n];\n\nconst perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 }\n];\n\nfunction formatClusterName(data) {\n    const defaultClusterOptions = [\n        { value: 'please choose', label: 'Select cluster', disabled: true },\n        { value: '', label: 'All Clusters', disabled: false },\n        { value: -1, label: 'Unassociated', disabled: false }\n    ];\n    return data.reduce(\n        (formatted, { label, cluster_id: id, install_uuid: uuid }) => {\n            if (label.length === 0) {\n                formatted.push({ value: id, label: uuid, disabled: false });\n            } else {\n                formatted.push({ value: id, label, disabled: false });\n            }\n\n            return formatted;\n        },\n        defaultClusterOptions\n    );\n}\n\nconst initialQueryParams = {\n    limit: 5,\n    offset: 0\n};\n\nconst Notifications = () => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [ notificationsData, setNotificationsData ] = useState([]);\n    const [ clusterOptions, setClusterOptions ] = useState([]);\n    const [ selectedCluster, setSelectedCluster ] = useState('');\n    const [ firstRender, setFirstRender ] = useState(true);\n    const [ isLoading, setIsLoading ] = useState(true);\n    const [ meta, setMeta ] = useState({});\n    const [ currPage, setCurrPage ] = useState(1);\n    const {\n        queryParams,\n        setId,\n        setLimit,\n        setOffset,\n        setSeverity\n    } = useQueryParams(initialQueryParams);\n\n    useEffect(() => {\n        if (firstRender) {\n            return;\n        }\n\n        const getData = () => {\n            return readNotifications({ params: queryParams });\n        };\n\n        const update = () => {\n            setIsLoading(true);\n            getData().then(({ notifications: notificationsData = [], meta }) => {\n                setNotificationsData(notificationsData);\n                setMeta(meta);\n                setIsLoading(false);\n            });\n        };\n\n        update();\n    }, [ queryParams ]);\n\n    useEffect(() => {\n        insights.chrome.appNavClick({ id: 'notifications', secondaryNav: true });\n\n        let ignore = false;\n        const fetchEndpoints = () => {\n            return Promise.all(\n                [ readClusters(), readNotifications({ params: queryParams }) ].map(p =>\n                    p.catch(() => [])\n                )\n            );\n        };\n\n        async function initializeWithPreflight() {\n            setIsLoading(true);\n            await preflightRequest().catch(error => {\n                setPreFlightError({ preflightError: error });\n            });\n            fetchEndpoints().then(\n                ([\n                    { templates: clustersData = []},\n                    { notifications: notificationsData = [], meta }\n                ]) => {\n                    if (!ignore) {\n                        const clusterOptions = formatClusterName(clustersData);\n                        setClusterOptions(clusterOptions);\n                        setNotificationsData(notificationsData);\n                        setMeta(meta);\n                        setFirstRender(false);\n                        setIsLoading(false);\n                    }\n                }\n            );\n        }\n\n        initializeWithPreflight();\n        return () => (ignore = true);\n    }, []);\n\n    const returnOffsetVal = page => {\n        let offsetVal = (page - 1) * queryParams.limit;\n        return offsetVal;\n    };\n\n    const handleSetPage = page => {\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    const handlePerPageSelect = (perPage, page) => {\n        setLimit(perPage);\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    if (preflightError?.preflightError?.status === 403) {\n        return <NotAuthorized { ...notAuthorizedParams } />;\n    }\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={'Notifications'} />\n            </PageHeader>\n            {preflightError && (\n                <Main>\n                    <EmptyState {...preflightError} />\n                </Main>\n            )}\n            {!preflightError && (\n                <>\n                    <Main>\n                        <Card>\n                            <CardTitle>\n                                <DropdownGroup>\n                                    <FormSelect\n                                        name=\"selectedCluster\"\n                                        value={selectedCluster}\n                                        onChange={value => {\n                                            setSelectedCluster(value);\n                                            setId(value);\n                                            setOffset(0);\n                                            setCurrPage(1);\n                                        }}\n                                        aria-label=\"Select Cluster\"\n                                    >\n                                        {clusterOptions.map(({ value, label, disabled }, index) => (\n                                            <FormSelectOption\n                                                isDisabled={disabled}\n                                                key={index}\n                                                value={value}\n                                                label={label}\n                                            />\n                                        ))}\n                                    </FormSelect>\n                                    <FormSelect\n                                        name=\"selectedNotification\"\n                                        value={queryParams.severity || ''}\n                                        onChange={value => {\n                                            setSeverity(value);\n                                            setOffset(0);\n                                            setCurrPage(1);\n                                        }}\n                                        aria-label=\"Select Notification Type\"\n                                    >\n                                        {notificationOptions.map(\n                                            ({ disabled, value, label }, index) => (\n                                                <FormSelectOption\n                                                    isDisabled={disabled}\n                                                    key={index}\n                                                    value={value}\n                                                    label={label}\n                                                />\n                                            )\n                                        )}\n                                    </FormSelect>\n                                </DropdownGroup>\n                                <Pagination\n                                    itemCount={meta && meta.count ? meta.count : 0}\n                                    widgetId=\"pagination-options-menu-top\"\n                                    perPageOptions={perPageOptions}\n                                    perPage={queryParams.limit}\n                                    page={currPage}\n                                    variant={PaginationVariant.top}\n                                    onPerPageSelect={(_event, perPage, page) => {\n                                        handlePerPageSelect(perPage, page);\n                                    }}\n                                    onSetPage={(_event, pageNumber) => {\n                                        handleSetPage(pageNumber);\n                                    }}\n                                    isCompact\n                                />\n                            </CardTitle>\n                            <CardBody>\n                                {isLoading && <LoadingState />}\n                                {!isLoading && notificationsData.length <= 0 && <NoData />}\n                                {!isLoading && notificationsData.length > 0 && (\n                                    <NotificationDrawer>\n                                        <NotificationsList\n                                            filterBy={queryParams.severity || ''}\n                                            options={notificationOptions}\n                                            notifications={notificationsData}\n                                        />\n                                    </NotificationDrawer>\n                                )}\n                                <Pagination\n                                    itemCount={meta && meta.count ? meta.count : 0}\n                                    widgetId=\"pagination-options-menu-bottom\"\n                                    perPageOptions={perPageOptions}\n                                    perPage={queryParams.limit}\n                                    page={currPage}\n                                    variant={PaginationVariant.bottom}\n                                    onPerPageSelect={(_event, perPage, page) => {\n                                        handlePerPageSelect(perPage, page);\n                                    }}\n                                    onSetPage={(_event, pageNumber) => {\n                                        handleSetPage(pageNumber);\n                                    }}\n                                    style={{ marginTop: '20px' }}\n                                />\n                            </CardBody>\n                        </Card>\n                    </Main>\n                </>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default Notifications;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { Paths } from '../../paths';\n\nimport { formatDateTime } from '../../Utilities/helpers';\n\nimport {\n    Card,\n    CardHeader,\n    CardHeaderMain,\n    CardActions,\n    CardTitle,\n    CardBody,\n    CardFooter,\n    Checkbox,\n    Dropdown,\n    DropdownItem,\n    KebabToggle,\n    Label\n} from '@patternfly/react-core';\n\nimport { CheckCircleIcon, ExclamationCircleIcon } from '@patternfly/react-icons';\nimport styled from 'styled-components';\nimport { stringify } from 'query-string';\n\nconst CardLabel = styled.span`\n  margin-right: 5px;\n`;\n\nconst PlanCard = (\n    {\n        name,\n        id = null,\n        description = '',\n        frequency_period = '',\n        template_details = {},\n        automation_status = {},\n        modified = '',\n        category = '',\n        isSuccess\n    }) => {\n    const [ isCardKebabOpen, setIsCardKebabOpen ] = useState(false);\n\n    let history = useHistory();\n\n    const redirectToJobExplorer = templateId => {\n        const { jobExplorer } = Paths;\n        const initialQueryParams = {\n            quick_date_range: 'last_30_days',\n            status: [ 'failed', 'successful' ],\n            template_id: [ templateId ]\n        };\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    const renderTemplateLink = template => {\n        return (template && isSuccess ? <a onClick={() => redirectToJobExplorer(template.id)}>{template.name}</a> : null);\n    };\n\n    const kebabDropDownItems = [\n        <React.Fragment key={id}>\n            <DropdownItem key=\"edit\" onClick={() => { }} position=\"right\">\n                Edit\n            </DropdownItem>\n            <DropdownItem key=\"link\" onClick={() => { }} position=\"right\">\n                Link template\n            </DropdownItem>\n        </React.Fragment>\n    ];\n\n    return (\n        <Card isHoverable isCompact>\n            <CardHeader>\n                <CardHeaderMain>\n                    <CardTitle>{name}</CardTitle>\n                </CardHeaderMain>\n                <CardActions>\n                    <Dropdown\n                        onSelect={() => { }}\n                        toggle={<KebabToggle onToggle={() => setIsCardKebabOpen(!isCardKebabOpen)} />}\n                        isOpen={isCardKebabOpen}\n                        isPlain\n                        dropdownItems={kebabDropDownItems}\n                        position={'right'}\n                    />\n                    <Checkbox\n                        isChecked={false}\n                        onChange={() => { }}\n                        aria-label=\"card checkbox\"\n                        id=\"check-1\"\n                        name=\"check1\"\n                    />\n                </CardActions>\n            </CardHeader>\n            <CardBody>\n                {description ? (<p>{description}</p>) : null}\n                <div>\n                    <CardLabel>Frequency</CardLabel> {frequency_period ? frequency_period : (<em>None</em>)}\n                </div>\n                <div>\n                    <CardLabel>Template</CardLabel> {template_details ? renderTemplateLink(template_details) : (<em>None</em>)}\n                </div>\n                <div>\n                    <CardLabel>Automation status</CardLabel>\n                    {automation_status.status === 'successful' ? (\n                        <Label variant=\"outline\" color=\"green\" icon={<CheckCircleIcon />}>\n                            Running\n                        </Label>\n                    ) : (\n                        <Label variant=\"outline\" color=\"red\" icon={<ExclamationCircleIcon />}>\n                            Not Running\n                        </Label>\n                    )}\n                </div>\n                <div>\n                    <CardLabel>Last updated</CardLabel> <em>{formatDateTime(modified)}</em>\n                </div>\n            </CardBody>\n            <CardFooter>\n                <Label>{category}</Label>\n            </CardFooter>\n        </Card>\n    );\n};\n\nPlanCard.propTypes = {\n    isSuccess: PropTypes.bool.isRequired,\n    name: PropTypes.string.isRequired,\n    id: PropTypes.number,\n    description: PropTypes.string,\n    frequency_period: PropTypes.string,\n    template_details: PropTypes.object,\n    modified: PropTypes.string,\n    category: PropTypes.string,\n    automation_status: PropTypes.object\n};\n\nexport default PlanCard;\n","import React, { useEffect, useState } from 'react';\n\nimport {\n    preflightRequest,\n    readPlanOptions,\n    readPlans\n} from '../../Api';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport PlanCard from './PlanCard';\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { savingsPlanner } from '../../Utilities/constants';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle,\n    NotAuthorized\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Gallery,\n    Pagination,\n    PaginationVariant\n} from '@patternfly/react-core';\n\nconst perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '15', value: 15 },\n    { title: '20', value: 20 },\n    { title: '25', value: 25 }\n];\n\nconst qp = {\n    limit: 5,\n    sort_options: 'modified',\n    sort_order: 'desc'\n};\n\nconst combined = {\n    ...savingsPlanner.defaultParams,\n    ...qp\n};\n\nconst SavingsPlanner = () => {\n    const {\n        queryParams,\n        setLimit,\n        setOffset,\n        setFromToolbar\n    } = useQueryParams(combined);\n    const [\n        {\n            isLoading,\n            isSuccess,\n            error,\n            data: { meta = {}, items: data = []}\n        },\n        setData\n    ] = useApi({ meta: {}, items: []});\n    const [ options, setOptions ] = useApi({});\n    const [ currPage, setCurrPage ] = useState(1);\n    const [ preflightError, setPreFlightError ] = useState(null);\n\n    const combinedOptions = {\n        ...options.data,\n        name: [{ key: 'name', value: null }]\n    };\n\n    const returnOffsetVal = page => (page - 1) * queryParams.limit;\n\n    const handleSetPage = page => {\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    const handlePerPageSelect = (perPage, page) => {\n        setLimit(perPage);\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    useEffect(() => {\n        const fetchEndpoints = () => {\n            preflightRequest().catch(error => {\n                setPreFlightError({ preflightError: error });\n            });\n            setData(readPlans({ params: queryParams }));\n            setOptions(readPlanOptions());\n        };\n\n        fetchEndpoints();\n    }, [ queryParams ]);\n\n    if (preflightError?.preflightError?.status === 403) {\n        return <NotAuthorized {...notAuthorizedParams} />;\n    }\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={'Savings Planner'} />\n                <FilterableToolbar\n                    categories={combinedOptions}\n                    filters={queryParams}\n                    setFilters={setFromToolbar}\n                    pagination={\n                        <Pagination\n                            itemCount={meta && meta.total_count ? meta.total_count : 0}\n                            widgetId=\"pagination-options-menu-top\"\n                            perPageOptions={perPageOptions}\n                            perPage={queryParams.limit}\n                            page={currPage}\n                            variant={PaginationVariant.top}\n                            onPerPageSelect={(_event, perPage, page) => {\n                                handlePerPageSelect(perPage, page);\n                            }}\n                            onSetPage={(_event, pageNumber) => {\n                                handleSetPage(pageNumber);\n                            }}\n                            isCompact\n                        />\n                    }\n                />\n            </PageHeader>\n            {preflightError && (\n                <Main>\n                    <EmptyState {...preflightError} />\n                </Main>\n            )}\n            {error && (\n                <Main style={{ height: '100vh' }}>\n                    <ApiErrorState message={error.error} />\n                </Main>\n            )}\n            {isLoading && (\n                <Main style={{ height: '100vh' }}>\n                    <LoadingState />\n                </Main>\n            )}\n            {isSuccess && (\n                <Main style={{ height: '100vh' }}>\n                    <Gallery hasGutter>\n                        {options.isSuccess && data.map(datum => (\n                            <PlanCard\n                                key={datum.id}\n                                isSuccess={options.isSuccess}\n                                {...datum}\n                            />\n                        ))}\n                    </Gallery>\n                </Main>\n            )}\n            <Pagination\n                itemCount={meta && meta.total_count ? meta.total_count : 0}\n                widgetId=\"pagination-options-menu-top\"\n                perPageOptions={perPageOptions}\n                perPage={queryParams.limit}\n                page={currPage}\n                variant={PaginationVariant.bottom}\n                onPerPageSelect={(_event, perPage, page) => {\n                    handlePerPageSelect(perPage, page);\n                }}\n                onSetPage={(_event, pageNumber) => {\n                    handleSetPage(pageNumber);\n                }}\n                isSticky\n            />\n        </React.Fragment>\n    );\n};\n\nexport default SavingsPlanner;\n","import moment from 'moment';\n\n/*\n * isNumeric - return true if input is a real number\n */\nexport function isNumeric(val) {\n    if (val === 0 || val === '0') {\n        return true;\n    }\n\n    if (parseInt(val)) {\n        return true;\n    }\n\n    if (parseFloat(val)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function trimStr(str) {\n    return str.toString().replace(/['\"]+/g, '');\n}\n\nexport function formatDateTime(dateTime) {\n    return moment(new Date(dateTime).toISOString()).format('M/D/YYYY h:mm:ssa');\n}\n\nexport function formatDate(date) {\n    return moment(date).format('YYYY-MM-DD');\n}\n\nexport function formatSeconds(seconds) {\n    return moment()\n    .startOf('day')\n    .seconds(seconds)\n    .format('H:mm:ss');\n}\n\nexport function getTotal(data) {\n    if (!data) {\n        return;\n    } else {\n        let total = 0;\n        data.forEach(datum => {\n            total += parseInt(datum.count);\n        });\n        return total;\n    }\n}\n\nexport function formatPercentage(val) {\n    if (isNaN(val)) {\n        return;\n    }\n\n    return `${val}%`;\n}\n\nexport const capitalize = s => {\n    if (typeof s !== 'string') {\n        return '';\n    }\n\n    return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport function calculateDelta(a, b) {\n    if (!isNumeric(a) || !isNumeric(b)) {\n        return 0;\n    }\n\n    // never return less than zero ...\n    if (b - a < 0) {\n        return 0;\n    }\n\n    return b - a;\n}\n\nexport function convertMinsToMs(mins) {\n    if (!parseInt(mins)) {\n        return 0;\n    }\n\n    return mins * 60000;\n}\n\nexport function convertMsToMins(ms) {\n    if (!parseInt(ms)) {\n        return 0;\n    }\n\n    return ms / 60000;\n}\n\nexport function convertSecondsToMins(seconds) {\n    if (!parseInt(seconds)) {\n        return 0;\n    }\n\n    return seconds / 60;\n}\n\nexport function convertMinsToSeconds(mins) {\n    if (!parseInt(mins) || parseInt(mins) < 0) {\n        return 0;\n    }\n\n    return +parseInt(mins) * 60;\n}\n\nexport function convertSecondsToHours(seconds) {\n    if (!parseInt(seconds)) {\n        return 0;\n    }\n\n    return seconds / 3600;\n}\n\nexport function convertWithCommas(arr, key) {\n    const split = arr.reduce((strs, datum) => {\n        strs.push(datum[key]);\n        return strs;\n    }, []);\n    return split.join(', ');\n}\n\nexport function formatJobType(type) {\n    return type === 'job' ? 'Playbook run' : 'Workflow job';\n}\n\nexport function formatJobStatus(status) {\n    return status === 'successful' ? 'Success' : 'Failed';\n}\n\nexport function formatJobDetailsURL(baseURL, jobId) {\n    const subDirectory1 = 'job';\n    const subDirectory2 = 'details';\n    return `${baseURL}/#/${subDirectory1}/${jobId}/${subDirectory2}/`;\n}\n","export const jobExplorer = {\n    attributes: [\n        'id',\n        'status',\n        'job_type',\n        'started',\n        'finished',\n        'elapsed',\n        'created',\n        'cluster_name',\n        'org_name',\n        'most_failed_tasks'\n    ],\n    defaultParams: {\n        status: [ 'successful', 'failed' ],\n        quick_date_range: 'last_30_days',\n        job_type: [ 'workflowjob', 'job' ],\n        org_id: [],\n        cluster_id: [],\n        template_id: [],\n        sort_options: 'created',\n        sort_order: 'desc',\n        only_root_workflows_and_standalone_jobs: false,\n        limit: 5\n    }\n};\n\nexport const roi = {\n    defaultParams: {\n        status: [ 'successful' ],\n        org_id: [],\n        cluster_id: [],\n        template_id: [],\n        quick_date_range: 'roi_last_year',\n        job_type: [ 'job' ],\n        sort_options: 'template_productivity_score',\n        sort_order: 'desc',\n        start_date: null,\n        end_date: null,\n        limit: 25,\n        only_root_workflows_and_standalone_jobs: true,\n        attributes: [\n            'successful_hosts_total',\n            'successful_elapsed_total',\n            'total_org_count',\n            'total_cluster_count'\n        ],\n        group_by: 'template',\n        group_by_time: false\n    }\n};\n\nexport const organizationStatistics = {\n    defaultParams: {\n        status: [],\n        org_id: [],\n        quick_date_range: 'last_30_days',\n        limit: 5,\n        job_type: [ 'workflowjob', 'job' ],\n        cluster_id: [],\n        template_id: [],\n        start_date: null,\n        end_date: null\n    }\n};\n\nexport const clusters = {\n    defaultParams: {\n        status: [ 'successful', 'failed' ],\n        quick_date_range: 'last_30_days',\n        job_type: [ 'workflowjob', 'job' ],\n        group_by_time: true,\n        org_id: [],\n        cluster_id: [],\n        template_id: [],\n        only_root_workflows_and_standalone_jobs: false\n    }\n};\n\nexport const savingsPlanner = {\n    defaultParams: {\n        template_id: [],\n        automation_status: [],\n        category: [],\n        frequency_period: [],\n        name: ''\n    }\n};\n\nexport const notAuthorizedParams = {\n    title: 'RBAC Access Denied',\n    description: 'User does not have privileges to perform this action. Contact your organization adminstrator(s) for more information.'\n};\n"],"sourceRoot":""}