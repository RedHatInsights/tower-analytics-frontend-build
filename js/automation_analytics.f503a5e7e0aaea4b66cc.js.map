{"version":3,"sources":["webpack:///./src/Components/EmptyState.js","webpack:///./src/Charts/BaseChart.js","webpack:///./src/Components/NoData.js","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/Utilities/useApi.js","webpack:///./src/Components/NoResults.js","webpack:///./src/Components/ApiErrorState.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Components/JobStatus.js","webpack:///./src/Components/JobExplorerList.js","webpack:///./src/Components/Toolbar/CategoryDropdown.js","webpack:///./src/Components/Toolbar/CustomDateSelector.js","webpack:///./src/Components/Toolbar/constants.js","webpack:///./src/Components/Toolbar/ToolbarFilterItem.js","webpack:///./src/Components/Toolbar/helpers.js","webpack:///./src/Components/Toolbar/Toolbar.js","webpack:///./src/Components/Toolbar/index.js","webpack:///./src/Containers/JobExplorer/JobExplorer.js","webpack:///./src/Utilities/Tooltip.js","webpack:///./src/Charts/BarChart.js","webpack:///./src/Charts/LineChart.js","webpack:///./src/Components/ModulesList.js","webpack:///./src/Components/TemplatesList.js","webpack:///./src/Containers/Clusters/Clusters.js","webpack:///./src/Utilities/Legend.js","webpack:///./src/Utilities/colors.js","webpack:///./src/Charts/GroupedBarChart.js","webpack:///./src/Charts/PieChart.js","webpack:///./src/Containers/OrganizationStatistics/OrganizationStatistics.js","webpack:///./src/Charts/ROITopTemplates.js","webpack:///./src/Containers/AutomationCalculator/AutomationCalculator.js","webpack:///./src/Components/NotificationsList.js","webpack:///./src/Containers/Notifications/Notifications.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Components/LoadingState.js","webpack:///./src/Api.js","webpack:///./src/Utilities/useQueryParams.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_patternfly_react_core_dist_js_components_Button_Button_js__WEBPACK_IMPORTED_MODULE_2__","_patternfly_react_core_dist_js_components_Title_Title_js__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_core_dist_js_components_EmptyState_EmptyState_js__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateIcon_js__WEBPACK_IMPORTED_MODULE_5__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateBody_js__WEBPACK_IMPORTED_MODULE_6__","_patternfly_react_icons_dist_js_icons_wrench_icon__WEBPACK_IMPORTED_MODULE_7__","_patternfly_react_icons_dist_js_icons_wrench_icon__WEBPACK_IMPORTED_MODULE_7___default","DefaultEmptyState","_ref","error","preflightError","a","createElement","variant","full","icon","status","Fragment","headingLevel","size","href","target","rel","onClick","window","location","reload","propTypes","object","__webpack_exports__","initializeChart","Chart","BaseChart","props","id","margin","react__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","getWidth","parseInt","d3__WEBPACK_IMPORTED_MODULE_3__","style","left","right","getHeight","top","bottom","prop_types__WEBPACK_IMPORTED_MODULE_2___default","string","element","_patternfly_react_core_dist_js_components_Title_Title_js__WEBPACK_IMPORTED_MODULE_1__","_patternfly_react_core_dist_js_components_EmptyState_EmptyState_js__WEBPACK_IMPORTED_MODULE_2__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateIcon_js__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_4___default","map","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","e","Error","code","keys","Object","resolve","module","exports","useApi_dataFetchReducer","state","action","type","objectSpread_default","isLoading","isSuccess","data","payload","Utilities_useApi","initialData","postprocess","arguments","length","undefined","d","_useState","react","_useState2","slicedToArray_default","request","setRequest","_useReducer","_useReducer2","dispatch","didCancel","insights","chrome","auth","getUser","then","catch","Components_NoResults","react_default","EmptyState_EmptyState","EmptyStateIcon","search_icon_default","Title","EmptyStateBody","ApiErrorState_ApiErrorState","message","small","exclamation_circle_icon_default","color","global_danger_color_200","value","prop_types_default","Components_ApiErrorState","constants_jobExplorer","attributes","defaultParams","quick_date_range","job_type","org_id","cluster_id","template_id","sort_by","start_date","end_date","only_root_workflows_and_standalone_jobs","limit","JobStatus_JobStatus","Label","getColor","check_circle_icon_default","sync_alt_icon_default","exclamation_triangle_icon_default","clock_icon_default","getIcon","str","charAt","toUpperCase","slice","capitalized","oneOf","Components_JobStatus","headerLabels","ExternalLinkIcon","styled_components_browser_esm","external_link_alt_icon_default","_templateObject","JobExplorerList_DataListCell","DataListCell","_templateObject2","DataListCellHeader","_templateObject3","JobExplorerList_DataListItemCells","DataListItemCells","_templateObject4","JobExplorerList_DataListToggle","DataListToggle","_templateObject5","JobExplorerList_buildListRow","items","ariaLabel","ariaLabelledBy","windowWidth","isExpanded","setIsExpanded","item","count","DataListItem","key","aria-labelledby","includes","concat","DataListItemRow","aria-controls","expanded","idx","indexOf","newExpanded","toConsumableArray_default","toggle","dataListCells","tower_link","fontWeight","template_name","Tooltip","content","cluster_name","org_name","helpers","DataListContent","aria-label","isHidden","created","started","finished","JobExplorerList_AllJobsTemplate","jobs","_useState3","innerWidth","_useState4","setWindowWidth","onResize","addEventListener","removeEventListener","JobExplorerList_JobExplorerList","_ref2","_useState5","_useState6","LoadingState","DataList","isCompact","labels","paddingLeft","label","JobExplorerList_buildHeader","array","number","Components_JobExplorerList","CategoryDropdown_CategoryDropdown","selected","_ref$setSelected","setSelected","_ref$categories","categories","ToolbarItem","Select","isOpen","onToggle","onSelect","_event","selection","selections","placeholderText","name","SelectOption","func","Toolbar_CategoryDropdown","CustomDateSelector_CustomDateSelector","_ref$onInputChange","onInputChange","_ref$startDate","startDate","_ref$endDate","endDate","InputGroup","TextInput","onChange","Toolbar_CustomDateSelector","optionsForCategories","isSingle","placeholder","ToolbarFilterItem_ToolbarFilterItem","categoryKey","_ref$filter","filter","_ref$values","values","_ref$isVisible","isVisible","_ref$hasChips","hasChips","setFilter","setExpanded","options","ToolbarFilter","showToolbarItem","chips","comparator","val","forEach","i","handleSingleChips","reduce","acc","Number","isInteger","cmpItem","push","handleCheckboxChips","categoryName","deleteChip","valueToDelete","keyToDelete","find","filteredArr","event","checked","_ref3","description","isRequired","any","bool","Toolbar_ToolbarFilterItem","Toolbar_FilterableToolbar","filters","setFilters","_ref$pagination","pagination","_ref$hasSettings","hasSettings","settingsExpanded","setSettingsExpanded","restCategories","objectWithoutProperties_default","filterCategories","obj","currentCategory","setCurrentCategory","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarContent","Button","filter_icon_default","ToolbarGroup","el","sort_amount_down_icon_default","isActive","cog_icon_default","visibility","default","lg","Card","isFlat","backgroundColor","CardHeader","CardActions","times_icon_default","CardTitle","CardBody","Switch","labelOff","isChecked","position","question_circle_icon_default","Components_Toolbar","perPageOptions","title","initialQueryParams","JobExplorer_optionsMapper","groupBy","JobExplorer_JobExplorer","search","history","setPreFlightError","_useApi","meta","_useApi2","_useApi2$","_useApi2$$data","_useApi2$$data$meta","_useApi2$$data$items","setData","currPage","setCurrPage","_useApi3","_useApi4","setOptions","initialSearchParams","query_string","arrayFormat","parseBooleans","combined","_useQueryParams","useQueryParams","queryParams","setLimit","setOffset","setFromToolbar","appNavClick","secondaryNav","Api","params","jobExplorer","paths","replace","pathname","updateURL","returnOffsetVal","page","handleSetPage","nextOffset","handlePerPageSelect","perPage","PageHeader","Main","EmptyState","Pagination","itemCount","widgetId","onPerPageSelect","onSetPage","pageNumber","marginTop","Utilities_Tooltip","opts","_this","this","classCallCheck_default","defineProperty_default","success","fail","total","x","d3","pageX","svg","node","getBoundingClientRect","y","pageY","formatTooltipDate","toolTipWidth","toolTipBase","width","chartWidth","flipped","RAN","FAIL","TOTAL","date","text","DATE","jobsWidth","getComputedTextLength","failed","successful","successTextWidth","failTextWidth","adjustedWidth","maxTextPerc","boxWidth","overage","boundingBox","attr","toolTipPoint","circleSuccess","circleFail","failedIcon","successIcon","successText","failText","clickMore","interrupt","transition","delay","colors","draw","append","textWidthThreshold","BarChart_BarChart","BarChart","possibleConstructorReturn_default","getPrototypeOf_default","call","bind","assertThisInitialized_default","init","resize","redirectToJobExplorer","formattedData","timeout","formattedDate","_this2","clearTimeout","setState","setTimeout","remove","ticks","parseTime","_this$props","unformattedData","formatted","Date","height","rangeRound","padding","range","barTooltip","layers","order","offset","stack","domain","tickSize","selectAll","maxTicks","Math","round","tickValues","tickFormat","layer","enter","_d","bandwidth","duration","ease","on","handleMouseOver","handleMouseOut","prevProps","Charts_BarChart","withRouter","LineChart_LineChart","LineChart","updateCluster","clusterId","path","attrTween","tweenDash","l","getTotalLength","t","tooltip","successLine","curve","failLine","defined","isNaN","vertical","handleMouseMove","intersectX","cx","baseVal","Charts_LineChart","ModulesList_DataListCell","ModulesList_DataListItem","DataCellEnd","ModulesList_ModulesList","modules","maxHeight","overflow","background","border","NoData","index","Components_ModulesList","TemplatesList_success","circle_icon_default","marginRight","TemplatesList_fail","TemplatesList_DataListCell","TemplatesList_templateObject","PFDataListItemNoBorder","TemplatesList_templateObject2","TemplatesList_DataListItem","TemplatesList_templateObject3","DataListItemCompact","DataListCellCompact","DataListFocus","div","_templateObject6","TemplatesList_DataCellEnd","_templateObject7","DataCellEndCompact","_templateObject8","TemplatesList_TemplatesList","templates","isModalOpen","setIsModalOpen","selectedId","setSelectedId","selectedTemplate","setSelectedTemplate","_useState7","_useState8","relatedJobs","setRelatedJobs","asyncToGenerator_default","regenerator_default","mark","_callee","wrap","_context","prev","next","related_jobs","stop","apply","update","Modal","onClose","actions","total_run_count","total_run","average_run","success_rate","most_failed_tasks","percentage","fail_rate","task_name","TemplatesList_formatTopFailedTask","component","job","job_id","job_name","cluster_label","install_uuid","start_time","total_time","Components_TemplatesList","Clusters_CardTitle","Clusters_templateObject","timeFrameOptions","disabled","Clusters_initialQueryParams","moment_default","subtract","format","barChartData","setBarChartData","lineChartData","setLineChartData","templatesData","setTemplatesData","_useState9","_useState10","modulesData","setModulesData","_useState11","_useState12","clusterOptions","setClusterOptions","_useState13","_useState14","clusterTimeFrame","setClusterTimeFrame","_useState15","_useState16","selectedCluster","setSelectedCluster","_useState17","_useState18","setIsLoading","setEndDate","setStartDate","setId","_ref3$templates","uuid","formatClusterName","Promise","all","_ref4","_ref5","_ref5$0$data","chartData","_ref5$1$modules","_ref5$2$templates","paddingBottom","paddingTop","display","justifyContent","FormSelect","_ref6","FormSelectOption","isDisabled","option","className","Container","LegendDetail","Wrapper","Color","attrs","span","SubTitle","Legend_Switch","Legend_Legend","Legend","handleChange","_isChecked","parseFloat","some","Utilities_Legend","pfmulti","GroupedBarChart_Wrapper","GroupedBarChart_templateObject","GroupedBarChart_color","GroupedBarChart_Tooltip","orgName","GroupedBarChart_GroupedBarChart","GroupedBarChart","handleToggle","orgsList","orgs","_this3","s","_this4","org","timeFrame","selectedOrgs","x0","x1","xAxis","yAxis","dates","selectedOrgNames","exit","bars","merge","subEnter","darker","_this$state","isAccessible","Charts_GroupedBarChart","PieChart_Wrapper","PieChart_templateObject","PieChart_Tooltip","perc","percSuccess","drawn","percent","maxLength","percentageTotal","percentageSuccess","boundingBOx","showSuccess","boundingHeight","boundingWidth","PieChart_PieChart","PieChart","sort","b","radius","min","datum","donutTooltip","pie","arc","outerRadius","innerRadius","classed","Charts_PieChart","OrganizationStatistics_CardTitle","OrganizationStatistics_templateObject","CardContainer","OrganizationStatistics_templateObject2","TopCard","OrganizationStatistics_templateObject3","sortOptions","OrganizationStatistics_initialQueryParams","pieChart1Data","setPieChart1Data","pieChart2Data","setPieChart2Data","groupedBarChartData","setGroupedBarChartData","timeframe","setTimeframe","sortOrder","setSortOrder","firstRender","setFirstRender","setSortBy","ignore","fetchEndpoints","p","_ref3$0$dates","_ref3$1$usages","usages","_ref3$2$usages","_initializeWithPreflight","_callee2","_context2","_ref5$0$dates","_ref5$1$usages","_ref5$2$usages","initializeWithPreflight","setLimitValue","marginLeft","ROITopTemplates_Tooltip","savings","manualCost","automationCost","scrollLeftOffset","scrollLeft","formatDollars","delta","calculations","cost","nameWidth","savingsWidth","manualCostWidth","automationCostWidth","widestTextElem","amount","toFixed","toString","ROITopTemplates_TopTemplatesSavings","TopTemplatesSavings","unfiltered","row","formatYAxisValue","taskNames","ROITopTemplates","FilterCardTitle","defaultAvgRunVal","defaultCostAutomation","defaultCostManual","InputAndText","TemplateDetail","TemplateDetailSubTitle","em","TooltipWrapper","IconGroup","WrapperLeft","WrapperRight","_templateObject9","AutomationCalculator_CardTitle","_templateObject10","AutomationCalculator_CardBody","_templateObject11","pastYear","pastYTD","startOf","pastQuarter","pastMonth","AutomationCalculator_initialQueryParams","formatData","response","defaults","successful_run_count","successful_elapsed_sum","successful_host_run_count_avg","successful_host_run_count","elapsed_sum","failed_elapsed_sum","clusters","template_automation_percentage","run_count","host_count","avg_run","AutomationCalculator_updateData","seconds","updatedData","AutomationCalculator_handleManualTimeChange","minutes","AutomationCalculator_formatSelectedIds","arr","AutomationCalculator_handleToggle","currentSelection","AutomationCalculator_computeTotalSavings","costAutomation","costManual","costAutomationPerHour","costManualPerHour","floatToStringWithCommas","filterDataBySelectedIds","unfilteredData","selectedIds","setTemplatesIsActive","templatesList","setCostManual","setCostAutomation","totalSavings","setTotalSavings","setUnfilteredData","setFormattedData","setTemplatesList","_useState19","_useState20","roiTimeFrame","setRoiTimeFrame","setStartDateAsString","totalWithCommas","filteredData","getData","_ref4$templates","flex","textAlign","borderTop","fontSize","flexDirection","InputGroupText","dollar_sign_icon_default","step","Tooltip_Tooltip","templateId","updated","Popover","bodyContent","info_circle_icon_default","ExternalLinkAltIcon","NotificationsList_NotificationDrawerListItem","NotificationDrawerListItem","NotificationsList_NotificationDrawerList","NotificationDrawerList","NotificationsList_stringifyDate","now","utc","isAfter","diff","isSame","valueOf","NotificationsList_AllNotificationTemplate","notifications","notification_id","url","tower_url","NotificationDrawerListItemHeader","NotificationDrawerListItemBody","timestamp","NotificationsList_ErrorNotificationTemplate","notification","NotificationsList_NoticeNotificationTemplate","NotificationsList_WarningNotificationTemplate","_ref7","_ref8","NotificationsList_NotificationsList","_ref9","filterBy","Components_NotificationsList","Notifications_CardTitle","Notifications_templateObject","DropdownGroup","Notifications_templateObject2","notificationOptions","notificationsData","setNotificationsData","setMeta","setSeverity","_ref3$notifications","_ref5$0$templates","clustersData","_ref5$","_ref5$$notifications","severity","NotificationDrawer","trimStr","formatDateTime","formatDate","formatSeconds","getTotal","formatPercentage","capitalize","calculateDelta","convertSecondsToMins","convertMinsToSeconds","convertSecondsToHours","convertWithCommas","formatJobType","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","isNumeric","dateTime","toISOString","mins","strs","join","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateBody_js__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_5__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_5___default","readTemplateJobs","preflightRequest","readClusters","readChart30","readJobsByDateAndOrg","readModules","readTemplates","readNotifications","readJobExplorerOptions","readJobExplorer","readJobRunsByOrg","readJobEventsByOrg","readROI","query_string__WEBPACK_IMPORTED_MODULE_0__","barChartEndpoint","clustersEndpoint","groupedBarChartEndpoint","modulesEndpoint","notificationsEndPoint","pieChart1Endpoint","pieChart2Endpoint","preflightEndpoint","templateJobsEndpoint","templatesEndPoint","roiEndpoint","getAbsoluteUrl","split","pop","handleResponse","json","ok","reject","_ref$params","formattedUrl","URL","searchParams","fetch","_ref2$params","_ref3$params","_ref4$params","_ref5$params","_ref6$params","_ref7$params","method","body","JSON","stringify","_ref8$params","paginationParams","qs","_ref9$params","_ref10","_ref10$params","_ref11","_ref11$params","initial","react__WEBPACK_IMPORTED_MODULE_4__","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2___default","newState","newValues","entries","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default","_Utilities_helpers__WEBPACK_IMPORTED_MODULE_6__","actionMapper","varName","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default","moment__WEBPACK_IMPORTED_MODULE_5___default","days"],"mappings":"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AAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,O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","file":"js/automation_analytics.f503a5e7e0aaea4b66cc.js","sourcesContent":["/*eslint max-len: [\"error\", { \"ignoreStrings\": true }]*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Button,\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { WrenchIcon } from '@patternfly/react-icons';\n\nconst DefaultEmptyState = ({ preflightError: error }) => (\n    <EmptyState variant={ EmptyStateVariant.full }>\n        <EmptyStateIcon icon={ WrenchIcon } />\n        { error.status === 404 && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    No data found\n                </Title>\n                <EmptyStateBody>\n                    Please visit <a href='https://docs.ansible.com/ansible-tower/latest/html/administration/usability_data_collection.html#automation-analytics' target='_blank' rel='noopener noreferrer'>here</a> to learn how to enable Automation Analytics.\n                </EmptyStateBody>\n            </>\n        ) }\n        { error.status === 401 && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    Not authorized\n                </Title>\n                <EmptyStateBody>\n                    You do not have the correct permissions to view this page.\n                </EmptyStateBody>\n            </>\n        ) }\n        { !error.status && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    Something went wrong, please try reloading the page\n                </Title>\n                <Button variant=\"primary\" onClick={ () => window.location.reload() }>Reload</Button>\n            </>\n        ) }\n\n    </EmptyState>\n);\n\nDefaultEmptyState.propTypes = {\n    preflightError: PropTypes.object\n};\n\nexport default DefaultEmptyState;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nconst initializeChart = Chart => {\n    const BaseChart = (props) => {\n        const { id, margin } = props;\n\n        const getWidth = () => {\n            let width;\n            width =\n            parseInt(d3.select('#' + id).style('width')) -\n                margin.left - margin.right || 700;\n            return width;\n        };\n\n        const getHeight = () => {\n            let height;\n            height =\n            parseInt(d3.select('#' + id).style('height')) -\n                margin.top - margin.bottom || 450;\n            return height;\n        };\n\n        return (\n            <Chart\n                { ...props }\n                getWidth={ getWidth }\n                getHeight={ getHeight }\n            />\n        );\n    };\n\n    BaseChart.propTypes = {\n        id: PropTypes.string,\n        margin: PropTypes.object\n    };\n\n    return BaseChart;\n};\n\ninitializeChart.propTypes = {\n    Chart: PropTypes.element\n};\n\nexport default initializeChart;\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst NoData = () => (\n    <EmptyState variant={ EmptyStateVariant.full }>\n        <EmptyStateIcon icon={ CubesIcon } />\n        <Title headingLevel=\"h5\" size=\"lg\">\n            No Data\n        </Title>\n    </EmptyState>\n);\n\nexport default NoData;\n","var map = {\n\t\"./af\": 177,\n\t\"./af.js\": 177,\n\t\"./ar\": 178,\n\t\"./ar-dz\": 179,\n\t\"./ar-dz.js\": 179,\n\t\"./ar-kw\": 180,\n\t\"./ar-kw.js\": 180,\n\t\"./ar-ly\": 181,\n\t\"./ar-ly.js\": 181,\n\t\"./ar-ma\": 182,\n\t\"./ar-ma.js\": 182,\n\t\"./ar-sa\": 183,\n\t\"./ar-sa.js\": 183,\n\t\"./ar-tn\": 184,\n\t\"./ar-tn.js\": 184,\n\t\"./ar.js\": 178,\n\t\"./az\": 185,\n\t\"./az.js\": 185,\n\t\"./be\": 186,\n\t\"./be.js\": 186,\n\t\"./bg\": 187,\n\t\"./bg.js\": 187,\n\t\"./bm\": 188,\n\t\"./bm.js\": 188,\n\t\"./bn\": 189,\n\t\"./bn.js\": 189,\n\t\"./bo\": 190,\n\t\"./bo.js\": 190,\n\t\"./br\": 191,\n\t\"./br.js\": 191,\n\t\"./bs\": 192,\n\t\"./bs.js\": 192,\n\t\"./ca\": 193,\n\t\"./ca.js\": 193,\n\t\"./cs\": 194,\n\t\"./cs.js\": 194,\n\t\"./cv\": 195,\n\t\"./cv.js\": 195,\n\t\"./cy\": 196,\n\t\"./cy.js\": 196,\n\t\"./da\": 197,\n\t\"./da.js\": 197,\n\t\"./de\": 198,\n\t\"./de-at\": 199,\n\t\"./de-at.js\": 199,\n\t\"./de-ch\": 200,\n\t\"./de-ch.js\": 200,\n\t\"./de.js\": 198,\n\t\"./dv\": 201,\n\t\"./dv.js\": 201,\n\t\"./el\": 202,\n\t\"./el.js\": 202,\n\t\"./en-SG\": 203,\n\t\"./en-SG.js\": 203,\n\t\"./en-au\": 204,\n\t\"./en-au.js\": 204,\n\t\"./en-ca\": 205,\n\t\"./en-ca.js\": 205,\n\t\"./en-gb\": 206,\n\t\"./en-gb.js\": 206,\n\t\"./en-ie\": 207,\n\t\"./en-ie.js\": 207,\n\t\"./en-il\": 208,\n\t\"./en-il.js\": 208,\n\t\"./en-nz\": 209,\n\t\"./en-nz.js\": 209,\n\t\"./eo\": 210,\n\t\"./eo.js\": 210,\n\t\"./es\": 211,\n\t\"./es-do\": 212,\n\t\"./es-do.js\": 212,\n\t\"./es-us\": 213,\n\t\"./es-us.js\": 213,\n\t\"./es.js\": 211,\n\t\"./et\": 214,\n\t\"./et.js\": 214,\n\t\"./eu\": 215,\n\t\"./eu.js\": 215,\n\t\"./fa\": 216,\n\t\"./fa.js\": 216,\n\t\"./fi\": 217,\n\t\"./fi.js\": 217,\n\t\"./fo\": 218,\n\t\"./fo.js\": 218,\n\t\"./fr\": 219,\n\t\"./fr-ca\": 220,\n\t\"./fr-ca.js\": 220,\n\t\"./fr-ch\": 221,\n\t\"./fr-ch.js\": 221,\n\t\"./fr.js\": 219,\n\t\"./fy\": 222,\n\t\"./fy.js\": 222,\n\t\"./ga\": 223,\n\t\"./ga.js\": 223,\n\t\"./gd\": 224,\n\t\"./gd.js\": 224,\n\t\"./gl\": 225,\n\t\"./gl.js\": 225,\n\t\"./gom-latn\": 226,\n\t\"./gom-latn.js\": 226,\n\t\"./gu\": 227,\n\t\"./gu.js\": 227,\n\t\"./he\": 228,\n\t\"./he.js\": 228,\n\t\"./hi\": 229,\n\t\"./hi.js\": 229,\n\t\"./hr\": 230,\n\t\"./hr.js\": 230,\n\t\"./hu\": 231,\n\t\"./hu.js\": 231,\n\t\"./hy-am\": 232,\n\t\"./hy-am.js\": 232,\n\t\"./id\": 233,\n\t\"./id.js\": 233,\n\t\"./is\": 234,\n\t\"./is.js\": 234,\n\t\"./it\": 235,\n\t\"./it-ch\": 236,\n\t\"./it-ch.js\": 236,\n\t\"./it.js\": 235,\n\t\"./ja\": 237,\n\t\"./ja.js\": 237,\n\t\"./jv\": 238,\n\t\"./jv.js\": 238,\n\t\"./ka\": 239,\n\t\"./ka.js\": 239,\n\t\"./kk\": 240,\n\t\"./kk.js\": 240,\n\t\"./km\": 241,\n\t\"./km.js\": 241,\n\t\"./kn\": 242,\n\t\"./kn.js\": 242,\n\t\"./ko\": 243,\n\t\"./ko.js\": 243,\n\t\"./ku\": 244,\n\t\"./ku.js\": 244,\n\t\"./ky\": 245,\n\t\"./ky.js\": 245,\n\t\"./lb\": 246,\n\t\"./lb.js\": 246,\n\t\"./lo\": 247,\n\t\"./lo.js\": 247,\n\t\"./lt\": 248,\n\t\"./lt.js\": 248,\n\t\"./lv\": 249,\n\t\"./lv.js\": 249,\n\t\"./me\": 250,\n\t\"./me.js\": 250,\n\t\"./mi\": 251,\n\t\"./mi.js\": 251,\n\t\"./mk\": 252,\n\t\"./mk.js\": 252,\n\t\"./ml\": 253,\n\t\"./ml.js\": 253,\n\t\"./mn\": 254,\n\t\"./mn.js\": 254,\n\t\"./mr\": 255,\n\t\"./mr.js\": 255,\n\t\"./ms\": 256,\n\t\"./ms-my\": 257,\n\t\"./ms-my.js\": 257,\n\t\"./ms.js\": 256,\n\t\"./mt\": 258,\n\t\"./mt.js\": 258,\n\t\"./my\": 259,\n\t\"./my.js\": 259,\n\t\"./nb\": 260,\n\t\"./nb.js\": 260,\n\t\"./ne\": 261,\n\t\"./ne.js\": 261,\n\t\"./nl\": 262,\n\t\"./nl-be\": 263,\n\t\"./nl-be.js\": 263,\n\t\"./nl.js\": 262,\n\t\"./nn\": 264,\n\t\"./nn.js\": 264,\n\t\"./pa-in\": 265,\n\t\"./pa-in.js\": 265,\n\t\"./pl\": 266,\n\t\"./pl.js\": 266,\n\t\"./pt\": 267,\n\t\"./pt-br\": 268,\n\t\"./pt-br.js\": 268,\n\t\"./pt.js\": 267,\n\t\"./ro\": 269,\n\t\"./ro.js\": 269,\n\t\"./ru\": 270,\n\t\"./ru.js\": 270,\n\t\"./sd\": 271,\n\t\"./sd.js\": 271,\n\t\"./se\": 272,\n\t\"./se.js\": 272,\n\t\"./si\": 273,\n\t\"./si.js\": 273,\n\t\"./sk\": 274,\n\t\"./sk.js\": 274,\n\t\"./sl\": 275,\n\t\"./sl.js\": 275,\n\t\"./sq\": 276,\n\t\"./sq.js\": 276,\n\t\"./sr\": 277,\n\t\"./sr-cyrl\": 278,\n\t\"./sr-cyrl.js\": 278,\n\t\"./sr.js\": 277,\n\t\"./ss\": 279,\n\t\"./ss.js\": 279,\n\t\"./sv\": 280,\n\t\"./sv.js\": 280,\n\t\"./sw\": 281,\n\t\"./sw.js\": 281,\n\t\"./ta\": 282,\n\t\"./ta.js\": 282,\n\t\"./te\": 283,\n\t\"./te.js\": 283,\n\t\"./tet\": 284,\n\t\"./tet.js\": 284,\n\t\"./tg\": 285,\n\t\"./tg.js\": 285,\n\t\"./th\": 286,\n\t\"./th.js\": 286,\n\t\"./tl-ph\": 287,\n\t\"./tl-ph.js\": 287,\n\t\"./tlh\": 288,\n\t\"./tlh.js\": 288,\n\t\"./tr\": 289,\n\t\"./tr.js\": 289,\n\t\"./tzl\": 290,\n\t\"./tzl.js\": 290,\n\t\"./tzm\": 291,\n\t\"./tzm-latn\": 292,\n\t\"./tzm-latn.js\": 292,\n\t\"./tzm.js\": 291,\n\t\"./ug-cn\": 293,\n\t\"./ug-cn.js\": 293,\n\t\"./uk\": 294,\n\t\"./uk.js\": 294,\n\t\"./ur\": 295,\n\t\"./ur.js\": 295,\n\t\"./uz\": 296,\n\t\"./uz-latn\": 297,\n\t\"./uz-latn.js\": 297,\n\t\"./uz.js\": 296,\n\t\"./vi\": 298,\n\t\"./vi.js\": 298,\n\t\"./x-pseudo\": 299,\n\t\"./x-pseudo.js\": 299,\n\t\"./yo\": 300,\n\t\"./yo.js\": 300,\n\t\"./zh-cn\": 301,\n\t\"./zh-cn.js\": 301,\n\t\"./zh-hk\": 302,\n\t\"./zh-hk.js\": 302,\n\t\"./zh-tw\": 303,\n\t\"./zh-tw.js\": 303\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 336;","import { useState, useEffect, useReducer } from 'react';\n\nconst dataFetchReducer = (state, action) => {\n    switch (action.type) {\n        case 'FETCH_INIT':\n            return {\n                ...state,\n                isLoading: true,\n                isSuccess: false,\n                error: null\n            };\n        case 'FETCH_SUCCESS':\n            return {\n                ...state,\n                isLoading: false,\n                isSuccess: true,\n                error: null,\n                data: action.payload\n            };\n        case 'FETCH_FAILURE':\n            return {\n                ...state,\n                isLoading: false,\n                isSuccess: false,\n                error: action.payload\n            };\n        default:\n            throw new Error();\n    }\n};\n\nconst useApi = (initialData, postprocess = d => d) => {\n    const [ request, setRequest ] = useState(null);\n\n    const [ state, dispatch ] = useReducer(dataFetchReducer, {\n        isLoading: false,\n        isSuccess: false,\n        error: null,\n        data: initialData\n    });\n\n    useEffect(() => {\n        // Prevent fetching nothing\n        if (!request) {\n            return;\n        }\n\n        // Initialize\n        let didCancel = false;\n        dispatch({ type: 'FETCH_INIT' });\n\n        // Fetching\n        window.insights.chrome.auth.getUser().then(() => request.then(data => {\n            if (!didCancel) {\n                dispatch({\n                    type: 'FETCH_SUCCESS',\n                    payload: postprocess(data)\n                });\n            }\n        }).catch(e => {\n            if (!didCancel) {\n                dispatch({ type: 'FETCH_FAILURE', payload: e });\n            }\n        }));\n\n        return () => { didCancel = true; };\n    }, [ request ]);\n\n    return [ state, setRequest ];\n};\n\nexport default useApi;\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst NoResults = () => {\n    return (\n        <EmptyState variant={ EmptyStateVariant.full }>\n            <EmptyStateIcon icon={ SearchIcon } />\n            <Title size=\"lg\" headingLevel=\"h4\">\n                No results found\n            </Title>\n            <EmptyStateBody>\n                No results match the filter criteria. Remove all filters or clear all filters to show results.\n            </EmptyStateBody>\n        </EmptyState>\n    );\n};\n\nexport default NoResults;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateIcon,\n    EmptyStateVariant,\n    Title\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { global_danger_color_200 as globalDangerColor200 } from '@patternfly/react-tokens';\n\nconst ApiErrorState = ({ message }) => (\n    <EmptyState variant={ EmptyStateVariant.small }>\n        <EmptyStateIcon icon={ ExclamationCircleIcon } color={ globalDangerColor200.value } />\n        <Title headingLevel=\"h2\" size=\"lg\">Error</Title>\n        <EmptyStateBody>\n            { message }\n        </EmptyStateBody>\n    </EmptyState>\n);\n\nApiErrorState.propTypes = {\n    message: PropTypes.string\n};\n\nexport default ApiErrorState;\n","export const jobExplorer = {\n    attributes: [\n        'id',\n        'status',\n        'job_type',\n        'started',\n        'finished',\n        'elapsed',\n        'created',\n        'cluster_name',\n        'org_name',\n        'most_failed_tasks'\n    ],\n    defaultParams: {\n        status: [ 'successful', 'failed' ],\n        quick_date_range: 'last_30_days',\n        job_type: [ 'workflowjob', 'job' ],\n        org_id: [],\n        cluster_id: [],\n        template_id: [],\n        sort_by: 'created:desc',\n        start_date: null,\n        end_date: null,\n        only_root_workflows_and_standalone_jobs: false,\n        limit: 5\n    }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from '@patternfly/react-core';\nimport {\n    CheckCircleIcon,\n    ExclamationCircleIcon,\n    ClockIcon,\n    SyncAltIcon,\n    ExclamationTriangleIcon\n} from '@patternfly/react-icons';\n\nconst JobStatus = ({ status }) => {\n    const capitalized = (str) => str.charAt(0).toUpperCase() + str.slice(1);\n\n    const getColor = () => {\n        switch (status) {\n            case 'successful':\n                return 'green';\n            case 'failed':\n            case 'error':\n                return 'red';\n            case 'running':\n            case 'pending':\n                return 'blue';\n            case 'canceled':\n                return 'orange';\n            // case new, waiting\n            default: return 'grey';\n        }\n    };\n\n    const getIcon = () => {\n        switch (status) {\n            case 'successful':\n                return <CheckCircleIcon />;\n            case 'failed':\n            case 'error':\n                return <ExclamationCircleIcon />;\n            case 'running':\n                return <SyncAltIcon />;\n            case 'canceled':\n                return <ExclamationTriangleIcon />;\n            // case new, waiting, pending\n            default: return <ClockIcon />;\n        }\n    };\n\n    return (\n        <Label variant=\"outline\" color={ getColor() } icon={ getIcon() }>{ capitalized(status) }</Label>\n    );\n};\n\nJobStatus.propTypes = {\n    status: PropTypes.oneOf([\n        'successful',\n        'failed', 'error',\n        'running',\n        'new', 'waiting', 'pending', 'canceled'\n    ])\n};\n\nexport default JobStatus;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    DataListCell as PFDataListCell,\n    DataListContent,\n    DataList,\n    DataListItem,\n    DataListItemRow,\n    DataListItemCells as PFDataListItemCells,\n    DataListToggle as PFDataListToggle,\n    Tooltip\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkIcon } from '@patternfly/react-icons';\n\nimport LoadingState from '../Components/LoadingState';\nimport { formatDateTime, formatJobType } from '../Utilities/helpers';\nimport JobStatus from './JobStatus';\n\nconst headerLabels = [\n    'Id/Name',\n    'Status',\n    'Cluster',\n    'Organization',\n    'Type'\n];\n\nconst ExternalLinkIcon = styled(PFExternalLinkIcon)`\n    margin-left: 7px;\n    color: var(--pf-global--Color--400);\n`;\n\nconst DataListCell = styled(PFDataListCell)`\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    text-align: center;\n`;\n\nconst DataListCellHeader = styled(DataListCell)`\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    font-weight: bold;\n`;\n\nconst DataListItemCells = styled(PFDataListItemCells)`\n    align-items: center;\n`;\n\nconst DataListToggle = styled(PFDataListToggle)`\n    align-items: center;\n`;\n\nconst mobileBreakpoint = 765;\n\nconst buildHeader = labels => (\n    <DataListItem>\n        <DataListItemRow style={ { paddingLeft: '80px' } }>\n            <DataListItemCells\n                dataListCells={ labels.map(label => (\n                    <DataListCellHeader key={ label }>\n                        { label }\n                        { label === 'Id/Name' &&\n                              <ExternalLinkIcon />\n                        }\n                    </DataListCellHeader>\n                ))\n                }\n            />\n        </DataListItemRow>\n    </DataListItem>\n);\n\nconst buildListRow = (items, ariaLabel, ariaLabelledBy, windowWidth) => {\n    const [ isExpanded, setIsExpanded ] = useState([]);\n\n    return (\n        <>\n            { items.map((item, count) => {\n                const toggle = id => {\n                    const expanded = isExpanded;\n                    const idx = expanded.indexOf(id);\n                    const newExpanded =\n            idx >= 0\n                ? [\n                    ...expanded.slice(0, idx),\n                    ...expanded.slice(idx + 1, expanded.length)\n                ]\n                : [ ...expanded, id ];\n                    setIsExpanded(newExpanded);\n                };\n\n                return (\n                    <DataListItem key={ item.id.id } aria-labelledby={ ariaLabelledBy } isExpanded={ isExpanded.includes(`${item.id.id}-toggle`) } >\n                        <DataListItemRow key={ item.id.id }>\n                            <DataListToggle\n                                id={ `${item.id.id}-toggle` }\n                                aria-controls={ `${item.id.id}-expand` }\n                                onClick={ () => toggle(`${item.id.id}-toggle`) }\n                                isExpanded={ isExpanded.includes(`${item.id.id}-toggle`) }\n                            />\n                            <DataListItemCells\n                                dataListCells={ [\n                                    <DataListCell key={ count++ }>\n                                        <a href={ item.id.tower_link } target='_blank' rel='noopener noreferrer'>\n                                            { windowWidth < mobileBreakpoint &&\n                                             <span style={ { color: 'initial', fontWeight: 'bold' } }>\n                                                 Id/Name<ExternalLinkIcon />:\n                                             </span>\n                                            }\n                                            &nbsp;\n                                            { `${item.id.id} - ${item.id.template_name}` }\n                                        </a>\n                                    </DataListCell>,\n                                    <DataListCell key={ count++ }>\n\n                                        { windowWidth <= mobileBreakpoint &&\n                                            <span style={ { color: 'initial', fontWeight: 'bold' } }>Status:</span>\n                                        }\n                                            &nbsp;\n                                        <JobStatus status={ item.status } />\n                                    </DataListCell>,\n                                    <Tooltip key={ count++ } content={ <p>{ item.cluster_name }</p> }>\n                                        <DataListCell>\n                                            { windowWidth <= mobileBreakpoint &&\n                                            <span style={ { color: 'initial', fontWeight: 'bold' } }>Cluster:</span>\n                                            }\n                                            &nbsp;\n                                            { item.cluster_name }\n                                        </DataListCell>\n                                    </Tooltip>,\n                                    <DataListCell key={ count++ }>\n                                        { windowWidth <= mobileBreakpoint &&\n                                         <span style={ { color: 'initial', fontWeight: 'bold' } }>Organization:</span>\n                                        }\n                                        &nbsp;\n                                        { item.org_name }\n                                    </DataListCell>,\n                                    <DataListCell key={ count++ }>\n                                        { windowWidth <= mobileBreakpoint &&\n                                         <span style={ { color: 'initial', fontWeight: 'bold' } }>Type:</span>\n                                        }\n                                         &nbsp;\n                                        { formatJobType(item.job_type) }\n                                    </DataListCell>\n                                ] }\n                            />\n                        </DataListItemRow>\n                        <DataListContent\n                            aria-label={ `${item.id.id}-details` }\n                            id={ '${item.id.id}' }\n                            isHidden={ !isExpanded.includes(`${item.id.id}-toggle`) }\n                        >\n                            <DataListItemCells\n                                dataListCells={ [\n                                    <DataListCell key={ count++ }>\n                                        Created: { formatDateTime(item.created) }\n                                    </DataListCell>,\n                                    <DataListCell key={ count++ }>\n                                        Started: { formatDateTime(item.started) }\n                                    </DataListCell>,\n                                    <DataListCell key={ count++ }>\n                                        Finished: { formatDateTime(item.finished) }\n                                    </DataListCell>\n                                ] }\n                            />\n                        </DataListContent>\n                    </DataListItem>\n                );\n            }) }\n        </>\n    );\n};\n\nconst AllJobsTemplate = ({ jobs }) => {\n    const [ windowWidth, setWindowWidth ] = useState(window.innerWidth);\n\n    const onResize = () => setWindowWidth(window.innerWidth);\n\n    useEffect(() => {\n        window.addEventListener('resize', onResize);\n        return () => window.removeEventListener('resize', onResize);\n    }, []);\n\n    return buildListRow(jobs, 'All jobs view', 'all-jobs', windowWidth);\n};\n\nconst JobExplorerList = ({ jobs }) => {\n    const [ windowWidth, setWindowWidth ] = useState(window.innerWidth);\n\n    const onResize = () => setWindowWidth(window.innerWidth);\n\n    useEffect(() => {\n        window.addEventListener('resize', onResize);\n        return () => window.removeEventListener('resize', onResize);\n    }, []);\n\n    return (\n        <>\n            {jobs.length <= 0 && <LoadingState />}\n            <DataList isCompact>\n                { windowWidth >= mobileBreakpoint && buildHeader(headerLabels) }\n                <AllJobsTemplate jobs={ jobs } windowWidth={ windowWidth }/>\n            </DataList>\n        </>\n    );\n};\n\nJobExplorerList.propTypes = {\n    jobs: PropTypes.array,\n    windowWidth: PropTypes.number\n};\n\nAllJobsTemplate.propTypes = {\n    jobs: PropTypes.array,\n    windowWidth: PropTypes.number\n};\n\nexport default JobExplorerList;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ToolbarItem,\n    Select,\n    SelectOption\n} from '@patternfly/react-core';\n\nconst CategoryDropdown = ({\n    selected,\n    setSelected = () => {},\n    categories = []\n}) => {\n    const [ isExpanded, setIsExpanded ] = useState(false);\n\n    return (\n        <ToolbarItem>\n            <Select\n                isOpen={ isExpanded }\n                variant={ 'single' }\n                aria-label={ 'Categories' }\n                onToggle={ () => setIsExpanded(!isExpanded) }\n                onSelect={ (_event, selection) => {\n                    setSelected(selection);\n                    setIsExpanded(false);\n                } }\n                selections={ selected }\n                placeholderText={ 'Filter by' }\n            >\n                {\n                    categories.map(({ key, name }) => (\n                        <SelectOption key={ key } value={ key }>\n                            { name }\n                        </SelectOption>\n                    ))\n                }\n            </Select>\n        </ToolbarItem>\n    );\n};\n\nCategoryDropdown.propTypes = {\n    categories: PropTypes.array,\n    selected: PropTypes.string,\n    setSelected: PropTypes.func\n};\n\nexport default CategoryDropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    InputGroup,\n    TextInput\n} from '@patternfly/react-core';\n\nconst CustomDateSelector = ({\n    onInputChange = () => {},\n    startDate = '',\n    endDate = ''\n}) => {\n    return (\n        <>\n          <InputGroup>\n              <TextInput\n                  name=\"startDate\"\n                  id=\"startDate\"\n                  type=\"date\"\n                  aria-label=\"Start Date\"\n                  value={ startDate }\n                  onChange={ e => onInputChange('start_date', e) }\n              />\n          </InputGroup>\n          <InputGroup>\n              <TextInput\n                  name=\"endDate\"\n                  id=\"endDate\"\n                  type=\"date\"\n                  aria-label=\"End Date\"\n                  value={ endDate }\n                  onChange={ e => onInputChange('end_date', e) }\n              />\n          </InputGroup>\n        </>\n    );\n};\n\nCustomDateSelector.propTypes = {\n    startDate: PropTypes.string,\n    endDate: PropTypes.string,\n    onInputChange: PropTypes.func\n};\n\nexport default CustomDateSelector;\n","export const optionsForCategories = {\n    status: {\n        isSingle: false,\n        name: 'Status',\n        placeholder: 'Filter by job status'\n    },\n    quick_date_range: {\n        isSingle: true,\n        name: 'Date',\n        placeholder: 'Filter by date'\n    },\n    job_type: {\n        isSingle: false,\n        name: 'Job',\n        placeholder: 'Filter by job type'\n    },\n    org_id: {\n        isSingle: false,\n        name: 'Organization',\n        placeholder: 'Filter by organization'\n    },\n    cluster_id: {\n        isSingle: false,\n        name: 'Cluster',\n        placeholder: 'Filter by cluster'\n    },\n    template_id: {\n        isSingle: false,\n        name: 'Template',\n        placeholder: 'Filter by template'\n    },\n    sort_by: {\n        isSingle: true,\n        name: 'Sort by',\n        placeholder: 'Sort by attribute'\n    }\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ToolbarFilter,\n    Select,\n    SelectOption\n} from '@patternfly/react-core';\nimport {\n    handleCheckboxChips,\n    handleSingleChips\n} from './helpers';\nimport { optionsForCategories } from './constants';\n\nconst ToolbarFilterItem = ({\n    categoryKey,\n    filter = null,\n    values = [],\n    isVisible = true,\n    hasChips = true,\n    setFilter\n}) => {\n    const [ expanded, setExpanded ] = useState(false);\n    const options = optionsForCategories[categoryKey];\n\n    const onDelete = (name, valueToDelete) => {\n        const single = optionsForCategories[categoryKey].isSingle;\n\n        if (single) {\n            setFilter(null);\n        } else {\n            const keyToDelete = values.find(({ value }) => value === valueToDelete).key;\n            const filteredArr = filter.filter(value => value !== keyToDelete);\n            setFilter(filteredArr);\n        }\n    };\n\n    const handleChips = () => {\n        if (options.isSingle) {\n            return handleSingleChips(filter, values);\n        } else {\n            return handleCheckboxChips(filter, values);\n        }\n    };\n\n    const onSelect = (event, selection) => {\n        if (options.isSingle) {\n            setFilter(selection);\n            setExpanded(false);\n        } else {\n            setFilter(event.target.checked\n                ? [ ...filter, selection ]\n                : filter.filter(value => value !== selection)\n            );\n        }\n    };\n\n    return (\n        <ToolbarFilter\n            key = { categoryKey }\n            showToolbarItem={ isVisible }\n            chips={ hasChips ? handleChips() : [] }\n            categoryName={ options.name }\n            deleteChip={ hasChips ? onDelete : null }\n        >\n            <Select\n                variant={ options.isSingle ? 'single' : 'checkbox' }\n                aria-label={ categoryKey }\n                onToggle={ () => setExpanded(!expanded) }\n                onSelect={ onSelect }\n                selections={ filter }\n                isOpen={ expanded }\n                placeholderText={ options.placeholder }\n            >\n                {\n                    values && values.map(({ key, value, description }) => (\n                        <SelectOption key={ key } value={ key } description={ description }>\n                            { value }\n                        </SelectOption>\n                    ))\n                }\n            </Select>\n        </ToolbarFilter>\n    );\n};\n\nToolbarFilterItem.propTypes = {\n    categoryKey: PropTypes.string.isRequired,\n    filter: PropTypes.any,\n    values: PropTypes.array,\n    isVisible: PropTypes.bool,\n    hasChips: PropTypes.bool,\n    setFilter: PropTypes.func.isRequired\n};\n\nexport default ToolbarFilterItem;\n","/**\n * Get comparator values if their key is in the item list\n */\nexport const handleCheckboxChips = (item, comparator) => {\n    if (item && comparator) {\n        return item.reduce((acc, i) => {\n            Number.isInteger(parseInt(i)) ? (i = parseInt(i)) : i;\n\n            comparator.forEach(cmpItem => {\n                if (cmpItem.key === i) {\n                    acc.push(cmpItem.value);\n                }\n            });\n\n            return acc;\n        }, []);\n    }\n\n    return [];\n};\n\n/**\n * Convert a list of objects to a list of the last value if defined\n */\nexport const handleSingleChips = (item, comparator) => {\n    if (item && typeof item === 'string' && comparator) {\n        let val;\n        comparator.forEach(i => {\n            if (i.key === item) {\n                val = i.value;\n            }\n        });\n\n        if (val !== undefined) {\n            return [ val ];\n        }\n    }\n\n    return [];\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Toolbar,\n    ToolbarContent,\n    ToolbarGroup,\n    Button,\n    ToolbarItem,\n    Tooltip,\n    Switch\n} from '@patternfly/react-core';\nimport { Card, CardTitle, CardBody, CardActions, CardHeader } from '@patternfly/react-core';\nimport {\n    FilterIcon,\n    SortAmountDownIcon,\n    CogIcon,\n    QuestionCircleIcon,\n    TimesIcon\n} from '@patternfly/react-icons';\n\nimport CategoryDropdown from './CategoryDropdown';\nimport CustomDateSelector from './CustomDateSelector';\nimport { optionsForCategories } from './constants';\nimport ToolbarFilterItem from './ToolbarFilterItem';\n\nconst FilterableToolbar = ({\n    categories,\n    filters,\n    setFilters,\n    pagination = null,\n    hasSettings = false\n}) => {\n    const [ settingsExpanded, setSettingsExpanded ] = useState(false);\n    const { quick_date_range, sort_by, ...restCategories } = categories;\n\n    // Filter out elements which are not in the option object.\n    const filterCategories = Object.keys(restCategories)\n    .filter(key => Object.keys(optionsForCategories).includes(key))\n    .reduce((obj, key) => {\n        obj[key] = restCategories[key];\n        return obj;\n    }, {});\n\n    const [ currentCategory, setCurrentCategory ] = useState(\n        Object.keys(filterCategories)[0]\n    );\n\n    const onInputChange = (type, value) => {\n        setFilters(type, value);\n    };\n\n    const FilterCategoriesGroup = () => (\n        <ToolbarGroup variant=\"filter-group\">\n            <CategoryDropdown\n                selected={ currentCategory }\n                setSelected={ setCurrentCategory }\n                categories={\n                    Object.keys(filterCategories).map(el => ({\n                        key: el,\n                        name: optionsForCategories[el].name\n                    }))\n                }\n            />\n            { Object.keys(filterCategories).map(key =>\n                <ToolbarFilterItem\n                    key={ key }\n                    categoryKey={ key }\n                    filter={ filters[key] }\n                    values={ categories[key] }\n                    isVisible={ currentCategory === key }\n                    setFilter={ value => setFilters(key, value) }\n                />\n            ) }\n        </ToolbarGroup>\n    );\n\n    const QuickDateGroup = () => (\n        <ToolbarGroup variant=\"filter-group\">\n            <ToolbarFilterItem\n                categoryKey='quick_date_range'\n                filter={ filters.quick_date_range }\n                values={ quick_date_range }\n                setFilter={ value => setFilters('quick_date_range', value) }\n                hasChips={ false }\n            />\n            { filters.quick_date_range === 'custom' && (\n                <CustomDateSelector\n                    startDate={ filters.start_date ? filters.start_date : '' }\n                    endDate={ filters.end_date ? filters.end_date : '' }\n                    onInputChange={ onInputChange }\n                />\n            ) }\n        </ToolbarGroup>\n    );\n\n    const SortByGroup = () => (\n        <ToolbarGroup variant=\"filter-group\">\n            <ToolbarFilterItem\n                categoryKey='sort_by'\n                filter={ filters.sort_by }\n                values={ sort_by }\n                setFilter={ value => setFilters('sort_by', value) }\n                hasChips={ false }\n            />\n            <Button variant=\"control\">\n                <SortAmountDownIcon />\n            </Button>\n        </ToolbarGroup>\n    );\n\n    /* TODO: For future work: make settings more modular for different pages */\n    const Settings = () => (\n        <Card isFlat style={ { backgroundColor: '#EEEEEE' } }>\n            <CardHeader>\n                <CardActions>\n                    <Button\n                        variant='plain'\n                        onClick={ () => setSettingsExpanded(!settingsExpanded) }\n                    >\n                        <TimesIcon />\n                    </Button>\n                </CardActions>\n                <CardTitle>Settings</CardTitle>\n            </CardHeader>\n            <CardBody>\n                <Switch\n                    id=\"showRootWorkflowJobs\"\n                    label=\"Ignore nested workflows and jobs\"\n                    labelOff=\"Ignore nested workflows and jobs\"\n                    isChecked={ filters.only_root_workflows_and_standalone_jobs }\n                    onChange={ val => {\n                        setFilters('only_root_workflows_and_standalone_jobs', val);\n                    } }\n                />\n                <Tooltip\n                    position={ 'top' }\n                    content={\n                        <div>\n                            { ' ' }\n                              If enabled, nested workflows and jobs will not be included in\n                              the overall totals. Enable this option to filter out duplicate\n                              entries.\n                        </div>\n                    }\n                >\n                    <QuestionCircleIcon />\n                </Tooltip>\n            </CardBody>\n        </Card>\n    );\n\n    return (\n        <>\n            <Toolbar\n                id=\"filterable-toolbar-with-chip-groups\"\n                clearAllFilters={ () => { setFilters(null, null); } }\n                collapseListedFiltersBreakpoint=\"xl\"\n            >\n                <ToolbarContent>\n                    <Button variant=\"control\">\n                        <FilterIcon />\n                    </Button>\n                    { Object.keys(filterCategories).length > 0 && <FilterCategoriesGroup /> }\n                    { quick_date_range && <QuickDateGroup /> }\n                    { sort_by && <SortByGroup /> }\n                    {\n                        hasSettings &&\n                        <ToolbarItem>\n                            <Button\n                                variant=\"plain\"\n                                onClick={ () => setSettingsExpanded(!settingsExpanded) }\n                                aria-label=\"settings\"\n                                isActive={ settingsExpanded }\n                            >\n                                <CogIcon />\n                            </Button>\n                        </ToolbarItem>\n                    }\n                    {\n                        pagination &&\n                        <ToolbarItem variant=\"pagination\" visibility={ { default: 'hidden', lg: 'visible' } }>\n                            { pagination }\n                        </ToolbarItem>\n                    }\n                </ToolbarContent>\n                { settingsExpanded && <Settings /> }\n            </Toolbar>\n        </>\n    );\n};\n\nFilterableToolbar.propTypes = {\n    categories: PropTypes.object.isRequired,\n    filters: PropTypes.object.isRequired,\n    setFilters: PropTypes.func.isRequired,\n    pagination: PropTypes.object,\n    hasSettings: PropTypes.bool\n};\n\nexport default FilterableToolbar;\n","import Toolbar from './Toolbar';\n\nexport default Toolbar;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { parse, stringify } from 'query-string';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { Paths } from '../../paths';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoResults from '../../Components/NoResults';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport {\n    preflightRequest,\n    readJobExplorer,\n    readJobExplorerOptions\n} from '../../Api';\nimport { jobExplorer } from '../../Utilities/constants';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    Pagination,\n    PaginationVariant\n} from '@patternfly/react-core';\n\nimport JobExplorerList from '../../Components/JobExplorerList';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\nconst perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '15', value: 15 },\n    { title: '20', value: 20 },\n    { title: '25', value: 25 }\n];\n\nconst initialQueryParams = {\n    ...jobExplorer.defaultParams,\n    attributes: jobExplorer.attributes\n};\n\nconst optionsMapper = options => {\n    const { groupBy, attributes, ...rest } = options;\n    return rest;\n};\n\nconst JobExplorer = ({\n    location: { search },\n    history\n}) => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [{\n        isLoading,\n        isSuccess,\n        error,\n        data: { meta = {}, items: data = []}\n    }, setData ] = useApi({ meta: {}, items: []});\n    const [ currPage, setCurrPage ] = useState(1);\n    const [ options, setOptions ] = useApi({}, optionsMapper);\n\n    let initialSearchParams = parse(search, { arrayFormat: 'bracket', parseBooleans: true });\n    let combined = { ...initialQueryParams, ...initialSearchParams };\n    const {\n        queryParams,\n        setLimit,\n        setOffset,\n        setFromToolbar\n    } = useQueryParams(combined);\n\n    const updateURL = () => {\n        const { jobExplorer } = Paths;\n        const search = stringify(queryParams, { arrayFormat: 'bracket' });\n        history.replace({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    useEffect(() => {\n        insights.chrome.appNavClick({ id: 'job-explorer', secondaryNav: true });\n\n        window.insights.chrome.auth.getUser()\n        .then(() =>\n            preflightRequest()\n            .catch((error) => { setPreFlightError({ preflightError: error }); })\n            // Loading is set false when the data also loaded\n        );\n    }, []);\n\n    useEffect(() => {\n        setData(readJobExplorer({ params: queryParams }),);\n        setOptions(readJobExplorerOptions({ params: queryParams }));\n        updateURL();\n    }, [ queryParams ]);\n\n    const returnOffsetVal = page => (page - 1) * queryParams.limit;\n\n    const handleSetPage = page => {\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    const handlePerPageSelect = (perPage, page) => {\n        setLimit(perPage);\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={ 'Job Explorer' } />\n            </PageHeader>\n\n            { preflightError && (\n                <Main>\n                    <EmptyState { ...preflightError } />\n                </Main>\n            ) }\n\n            { !preflightError && (\n                <Main>\n                    <Card>\n                        <CardBody>\n                            <FilterableToolbar\n                                categories={ options.data }\n                                filters={ queryParams }\n                                setFilters={ setFromToolbar }\n                                pagination={\n                                    <Pagination\n                                        itemCount={ meta && meta.count ? meta.count : 0 }\n                                        widgetId=\"pagination-options-menu-top\"\n                                        perPageOptions={ perPageOptions }\n                                        perPage={ queryParams.limit }\n                                        page={ currPage }\n                                        variant={ PaginationVariant.top }\n                                        onPerPageSelect={ (_event, perPage, page) => {\n                                            handlePerPageSelect(perPage, page);\n                                        } }\n                                        onSetPage={ (_event, pageNumber) => {\n                                            handleSetPage(pageNumber);\n                                        } }\n                                        isCompact\n                                    />\n                                }\n                                hasSettings\n                            />\n                            { error && <ApiErrorState message={ error.error } /> }\n                            { isLoading && <LoadingState /> }\n                            { isSuccess && data.length <= 0 && <NoResults /> }\n                            { isSuccess && data.length > 0 && <JobExplorerList jobs={ data } /> }\n                            <Pagination\n                                itemCount={ meta && meta.count ? meta.count : 0 }\n                                widgetId=\"pagination-options-menu-bottom\"\n                                perPageOptions={ perPageOptions }\n                                perPage={ queryParams.limit }\n                                page={ currPage }\n                                variant={ PaginationVariant.bottom }\n                                onPerPageSelect={ (_event, perPage, page) => {\n                                    handlePerPageSelect(perPage, page);\n                                } }\n                                onSetPage={ (_event, pageNumber) => {\n                                    handleSetPage(pageNumber);\n                                } }\n                                style={ { marginTop: '20px' } }\n                            />\n                        </CardBody>\n                    </Card>\n                </Main>\n            ) }\n        </React.Fragment>\n    );\n};\n\nJobExplorer.propTypes = {\n    location: PropTypes.object,\n    history: PropTypes.object\n};\n\nexport default JobExplorer;\n","import * as d3 from 'd3';\n\nclass Tooltip {\n    constructor(opts) {\n        this.svg = opts.svg;\n        this.colors = opts.colors;\n        this.draw();\n    }\n\n    draw() {\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 145;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -41)\n        .attr('rx', 2)\n        .attr('height', 110)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.circleSuccess = this.toolTipBase\n        .append('circle')\n        .attr('cx', 26)\n        .attr('cy', 0)\n        .attr('r', 8)\n        .attr('stroke', 'white')\n        .attr('fill', 'white');\n        this.circleFail = this.toolTipBase\n        .append('circle')\n        .attr('cx', 26)\n        .attr('cy', 26)\n        .attr('r', 8)\n        .attr('stroke', 'white')\n        .attr('fill', 'white');\n        this.successText = this.toolTipBase\n        .append('text')\n        .attr('x', 43)\n        .attr('y', 4)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Successful');\n        this.failText = this.toolTipBase\n        .append('text')\n        .attr('x', 43)\n        .attr('y', 28)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Failed');\n        this.successIcon = this.toolTipBase\n        .append('text')\n        .attr('class', 'fas fa-sm')\n        .attr('fill', this.colors(1))\n        .attr('x', 19)\n        .attr('y', 5)\n        .text('\\uf058');\n        this.failedIcon = this.toolTipBase\n        .append('text')\n        .attr('class', 'fas fa-sm')\n        .attr('fill', this.colors(0))\n        .attr('x', 20)\n        .attr('y', 31)\n        .text('\\uf06a');\n        this.jobs = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 137)\n        .attr('y', -21)\n        .attr('font-size', 12)\n        .attr('text-anchor', 'end')\n        .text('No jobs');\n        this.successful = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 122)\n        .attr('y', 4)\n        .text('0');\n        this.failed = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 122)\n        .attr('y', 28)\n        .text('0');\n        this.date = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('stroke', 'white')\n        .attr('x', 20)\n        .attr('y', -21)\n        .attr('font-size', 12)\n        .text('Never');\n        this.clickMore = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 20)\n        .attr('y', 55)\n        .attr('font-size', 12)\n        .text('Click for details');\n    }\n\n    handleMouseOver = (d) => {\n        let success = 0;\n        let fail = 0;\n        let total = 0;\n        const x =\n            d3.event.pageX -\n            d3\n            .select(this.svg)\n            .node()\n            .getBoundingClientRect().x +\n            10;\n        const y =\n            d3.event.pageY -\n            d3\n            .select(this.svg)\n            .node()\n            .getBoundingClientRect().y -\n            10;\n        const formatTooltipDate = d3.timeFormat('%m/%d');\n        if (!d) {\n            return;\n        }\n\n        const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n        const chartWidth = d3\n        .select(this.svg + '> svg')\n        .node()\n        .getBoundingClientRect().width;\n        const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n        const flipped = overflow < (x / chartWidth) * 100;\n        if (d) {\n            success = d.RAN || 0;\n            fail = d.FAIL || 0;\n            total = d.TOTAL || 0;\n            this.date.text(formatTooltipDate(d.DATE || null));\n        }\n\n        if (d && d.data) {\n            success = d.data.RAN || 0;\n            fail = d.data.FAIL || 0;\n            total = d.data.TOTAL || 0;\n            this.date.text(formatTooltipDate(d.data.DATE || null));\n        }\n\n        this.jobs.text('' + total + ' jobs');\n        this.jobsWidth = this.jobs.node().getComputedTextLength();\n        this.failed.text('' + fail);\n        this.successful.text('' + success);\n        this.successTextWidth = this.successful.node().getComputedTextLength();\n        this.failTextWidth = this.failed.node().getComputedTextLength();\n\n        const maxTextPerc = this.jobsWidth / this.boxWidth * 100;\n        const threshold = 40;\n        const overage = maxTextPerc / threshold;\n        let adjustedWidth;\n        if (maxTextPerc > threshold) {\n            adjustedWidth = this.boxWidth * overage;\n        } else {\n            adjustedWidth = this.boxWidth;\n        }\n\n        this.boundingBox.attr('width', adjustedWidth);\n        this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n        if (flipped) {\n            this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n            this.boundingBox.attr('x', -adjustedWidth - 20);\n            this.circleSuccess.attr('cx', -adjustedWidth);\n            this.circleFail.attr('cx', -adjustedWidth);\n            this.failedIcon.attr('x', -adjustedWidth - 7);\n            this.successIcon.attr('x', -adjustedWidth - 7);\n            this.successText.attr('x', -adjustedWidth + 17);\n            this.failText.attr('x', -adjustedWidth + 17);\n            this.successful.attr('x', -this.successTextWidth - 20 - 12);\n            this.failed.attr('x', -this.failTextWidth - 20 - 12);\n            this.date.attr('x', -adjustedWidth - 5);\n            this.jobs.attr('x', -this.jobsWidth / 2 - 7);\n            this.clickMore.attr('x', -adjustedWidth);\n        } else {\n            this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n            this.boundingBox.attr('x', 10);\n            this.circleSuccess.attr('cx', 26);\n            this.circleFail.attr('cx', 26);\n            this.failedIcon.attr('x', 19);\n            this.successIcon.attr('x', 19);\n            this.successText.attr('x', 43);\n            this.failText.attr('x', 43);\n            this.successful.attr('x', (adjustedWidth - this.successTextWidth));\n            this.failed.attr('x', (adjustedWidth - this.failTextWidth));\n            this.date.attr('x', 20);\n            this.jobs.attr('x', (adjustedWidth));\n            this.clickMore.attr('x', 20);\n        }\n\n        this.toolTipBase.style('opacity', 1);\n        this.toolTipBase.interrupt();\n    }\n\n    handleMouseOut = () => {\n        this.toolTipBase\n        .transition()\n        .delay(15)\n        .style('opacity', 0)\n        .style('pointer-events', 'none');\n    }\n}\n\nexport default Tooltip;\n","import React, { Component } from 'react';\nimport {\n    withRouter\n} from 'react-router-dom';\n\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { stringify } from 'query-string';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\n\nclass BarChart extends Component {\n    constructor(props) {\n        super(props);\n        this.draw = this.draw.bind(this);\n        this.init = this.init.bind(this);\n        this.resize = this.resize.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.state = {\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    redirectToJobExplorer({ data: { DATE: date }}) {\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const initialQueryParams = {\n            start_date: formattedDate,\n            end_date: formattedDate,\n            quick_date_range: 'custom',\n            status: [ 'failed', 'successful' ]\n        };\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => { this.init(); }, 500)\n        });\n    }\n\n    init() {\n        this.draw();\n    }\n\n    // Methods\n    draw() {\n        // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const parseTime = d3.timeParse('%Y-%m-%d');\n        let { data: unformattedData, value } = this.props;\n        const data = unformattedData.reduce((formatted, { created, successful, failed }) => {\n            let DATE = parseTime(created) || new Date();\n            let RAN = +successful || 0;\n            let FAIL = +failed || 0;\n            let TOTAL = +successful + failed || 0;\n            return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n        }, []);\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n        const x = d3\n        .scaleBand()\n        .rangeRound([ 0, width ])\n        .padding(0.35); // percentage\n        const y = d3.scaleLinear().range([ height, 0 ]);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n                this.props.margin.left +\n                ',' +\n                this.props.margin.top +\n                ')'\n        );\n        //[fail, success]\n        let colors = d3.scaleOrdinal([ '#6EC664', '#A30000' ]);\n\n        const barTooltip = new Tooltip({\n            svg: '#' + this.props.id,\n            colors\n        });\n        const status = [ 'FAIL', 'RAN' ];\n\n        // stack our data\n        const stack = d3\n        .stack()\n        .keys(status)\n        .order(d3.stackOrderNone)\n        .offset(d3.stackOffsetNone);\n\n        const layers = stack(data);\n        // Scale the range of the data\n        x.domain(layers[0].map(d => d.data.DATE));\n        y.domain([ 0, d3.max(layers[layers.length - 1], d => d[1] * 1.15) || 8 ]);\n        // Add the Y Axis\n        svg\n        .append('g')\n        .attr('class', 'y-axis')\n        .call(\n            d3\n            .axisLeft(y)\n            .tickSize(-width, 0, 0)\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.y-axis .tick text').attr('x', -5);\n        // text label for the y axis\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Jobs across all clusters');\n        // Add the X Axis\n        let ticks;\n        const maxTicks = Math.round(data.length / (value / 2));\n        ticks = data.map(d => d.DATE);\n        if (value === 31) {\n            ticks = data.map((d, i) =>\n                i % maxTicks === 0 ? d.DATE : undefined).filter(item => item);\n        }\n\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(\n            d3\n            .axisBottom(x)\n            .tickValues(ticks)\n            .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.x-axis .tick text')\n        .attr('y', 10);\n\n        // text label for the x axis\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' +\n                width / 2 +\n                ' ,' +\n                (height + this.props.margin.top + 20) +\n                ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n\n        const layer = svg\n        .selectAll('layer')\n        .data(layers)\n        .enter()\n        .append('g')\n        .attr('class', 'layer')\n        .style('fill', (_d, i) => colors(i));\n        layer\n        .selectAll('rect')\n        .data(d => d)\n        .enter()\n        .append('rect')\n        .attr('x', d => x(d.data.DATE))\n        .attr('y', d => y(d[0]))\n        .attr('height', 0)\n        .attr('width', x.bandwidth() - 1)\n        .transition()\n        .duration(550)\n        .ease(d3.easeCubic)\n        .attr('y', d => y(d[1]))\n        .attr('height', d => y(d[0]) - y(d[1]));\n        layer\n        .selectAll('rect')\n        .on('mouseover', barTooltip.handleMouseOver)\n        .on('mousemove', barTooltip.handleMouseOver)\n        .on('mouseout', barTooltip.handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.value !== this.props.value) {\n            this.init();\n        }\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        return <div id={ this.props.id } />;\n    }\n}\n\nBarChart.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    value: PropTypes.number,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    history: PropTypes.object\n};\n\nexport default initializeChart(withRouter(BarChart));\n","import React, { Component } from 'react';\nimport {\n    withRouter\n} from 'react-router-dom';\nimport initializeChart from './BaseChart';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\nimport { stringify } from 'query-string';\nimport * as d3 from 'd3';\n\nclass LineChart extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.updateCluster = this.updateCluster.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.state = {\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    redirectToJobExplorer({ DATE: date }) {\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const { clusterId } = this.props;\n        const initialQueryParams = {\n            start_date: formattedDate,\n            end_date: formattedDate,\n            quick_date_range: 'custom',\n            status: [ 'failed', 'successful' ],\n            cluster_id: [ clusterId ]\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => { this.init(); }, 500)\n        });\n    }\n\n    getTickCount() {\n        const { value } = this.props;\n        if (value > 20) {\n            return (value / 2);\n        } else {\n            return value;\n        }\n    }\n    updateCluster() {\n        this.init();\n    }\n    init() {\n        this.draw();\n    }\n    // Methods\n    draw() {\n    // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n\n        function transition(path) {\n            path\n            .transition()\n            .duration(1000)\n            .attrTween('stroke-dasharray', tweenDash);\n        }\n\n        function tweenDash() {\n            const l = this.getTotalLength();\n            const i = d3.interpolateString('0,' + l, l + ',' + l);\n            return function(t) {\n                return i(t);\n            };\n        }\n\n        const x = d3.scaleTime().rangeRound([ 0, width ]);\n        const y = d3.scaleLinear().range([ height, 0 ]);\n\n        //[success, fail, total]\n        let colors = d3.scaleOrdinal([ '#6EC664', '#A30000', '#06C' ]);\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n        .attr('z', 100)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n        // Tooltip\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id,\n            colors\n        });\n        const { data: unformattedData, value } = this.props;\n        const parseTime = d3.timeParse('%Y-%m-%d');\n\n        const data = unformattedData.reduce((formatted, { created, successful, failed }) => {\n            let DATE = parseTime(created) || new Date();\n            let RAN = +successful || 0;\n            let FAIL = +failed || 0;\n            let TOTAL = +successful + failed || 0;\n            return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n        }, []);\n        // Scale the range of the data\n        x.domain(\n            d3.extent(data, function(d) {\n                return d.DATE;\n            })\n        );\n        y.domain([\n            0,\n            d3.max(data, function(d) {\n                return d.TOTAL * 1.15 || 8;\n            })\n        ]);\n\n        const successLine = d3\n        .line()\n        .curve(d3.curveMonotoneX)\n        .x(function(d) {\n            return x(d.DATE);\n        })\n        .y(function(d) {\n            return y(d.RAN);\n        });\n\n        const failLine = d3\n        .line()\n        .defined(d => !isNaN(d.FAIL))\n        .curve(d3.curveMonotoneX)\n        .x(function(d) {\n            return x(d.DATE);\n        })\n        .y(function(d) {\n            return y(d.FAIL);\n        });\n        // Add the Y Axis\n        svg\n        .append('g')\n        .attr('class', 'y-axis')\n        .call(\n            d3\n            .axisLeft(y)\n            .ticks(10)\n            .tickSize(-width)\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.y-axis .tick text').attr('x', -5);\n\n        // text label for the y axis\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Job runs');\n        // Add the X Axis\n        let ticks;\n        const maxTicks = Math.round(data.length / (value / 2));\n        ticks = data.map(d => d.DATE);\n        if (value === 31) {\n            ticks = data.map((d, i) =>\n                i % maxTicks === 0 ? d.DATE : undefined).filter(item => item);\n        }\n\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(\n            d3\n            .axisBottom(x)\n            .tickValues(ticks)\n            .tickSize(-height)\n            .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n        ) // \"Jan-01\"\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n        // text label for the x axis\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' +\n                width / 2 +\n                ' ,' +\n                (height + this.props.margin.top + 20) +\n                ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n        const vertical = svg\n        .append('path')\n        .attr('class', 'mouse-line')\n        .style('stroke', 'black')\n        .style('stroke-width', '3px')\n        .style('stroke-dasharray', ('3, 3'))\n        .style('opacity', '0');\n\n        const handleMouseOver = function(d) {\n            tooltip.handleMouseOver(d);\n            // show vertical line\n            vertical.transition().style('opacity', '1');\n        };\n\n        const handleMouseMove = function() {\n            let intersectX = this.cx.baseVal.value;\n            vertical\n            .attr('d', function () {\n                let d = 'M' + intersectX + ',' + height;\n                d += ' ' + intersectX + ',' + 0;\n                return d;\n            });\n        };\n\n        const handleMouseOut = function() {\n            // hide tooltip\n            tooltip.handleMouseOut();\n            // hide vertical line\n            vertical.transition().style('opacity', 0);\n        };\n\n        // Add the successLine path.\n        svg\n        .append('path')\n        .data([ data ])\n        .attr('class', 'line')\n        .style('fill', 'none')\n        .style('stroke', () => colors(1))\n        .attr('stroke-width', 2)\n        .attr('d', successLine)\n        .call(transition);\n\n        // Add the failLine path.\n        svg\n        .append('path')\n        .data([ data ])\n        .attr('class', 'line')\n        .style('fill', 'none')\n        .style('stroke', () => colors(0))\n        .attr('stroke-width', 2)\n        .attr('d', failLine)\n        .call(transition);\n        svg\n        .selectAll('dot')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('r', 3)\n        .style('stroke', () => colors(1))\n        .style('fill', () => colors(1))\n        .attr('cx', function(d) {\n            return x(d.DATE);\n        })\n        .attr('cy', function(d) {\n            return y(d.RAN);\n        })\n\n        .on('mouseover', handleMouseOver)\n        .on('mousemove', handleMouseMove)\n        .on('mouseout', handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n        // create our failLine circles\n        svg\n        .selectAll('dot')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('r', 3)\n        .style('stroke', () => colors(0))\n        .style('fill', () => colors(0))\n        .attr('cx', function(d) {\n            return x(d.DATE);\n        })\n        .attr('cy', function(d) {\n            return y(d.FAIL);\n        })\n        .on('mouseover', handleMouseOver)\n        .on('mousemove', handleMouseMove)\n        .on('mouseout', handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n    }\n\n    componentDidMount() {\n        this.updateCluster();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.value !== this.props.value) {\n            this.updateCluster();\n        }\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        return <div id={ this.props.id } />;\n    }\n}\n\nLineChart.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    value: PropTypes.number,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    history: PropTypes.object,\n    clusterId: PropTypes.number\n};\n\nexport default initializeChart(withRouter(LineChart));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { trimStr } from '../Utilities/helpers';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell\n} from '@patternfly/react-core';\n\nconst DataListCell = styled(PFDataListCell)`\n    --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst ModulesList = ({ modules, isLoading }) => (\n    <DataList aria-label=\"Top Modules\" style={ {\n        maxHeight: '400px',\n        overflow: 'auto',\n        height: '400px',\n        background: 'white'\n    } }>\n        <DataListItem aria-labelledby=\"top-modules-header\">\n            <DataListCell>\n                <h3>Top modules</h3>\n            </DataListCell>\n            <DataCellEnd>\n                <h3>Usage</h3>\n            </DataCellEnd>\n        </DataListItem>\n        { isLoading && (\n            <PFDataListItem\n                aria-labelledby=\"modules-loading\"\n                key={ isLoading }\n                style={ { border: 'none' } }\n            >\n                <PFDataListCell>\n                    <LoadingState />\n                </PFDataListCell>\n            </PFDataListItem>\n        ) }\n        { !isLoading && modules.length <= 0 && (\n            <PFDataListItem\n                aria-labelledby=\"modules-no-data\"\n                key={ isLoading }\n                style={ { border: 'none' } }\n            >\n                <PFDataListCell>\n                    <NoData />\n                </PFDataListCell>\n            </PFDataListItem>\n        ) }\n        { !isLoading && modules.filter(module => module.module !== null).map(({ module, count }, index) => (\n            <DataListItem aria-labelledby=\"top-modules-detail\" key={ index }>\n                <DataListCell>\n                    <span>{ trimStr(module) }</span>\n                </DataListCell>\n                <DataCellEnd>\n                    { count }\n                </DataCellEnd>\n            </DataListItem>\n        )) }\n    </DataList>\n);\n\nModulesList.propTypes = {\n    modules: PropTypes.array,\n    isLoading: PropTypes.bool\n};\n\nexport default ModulesList;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { formatDateTime, formatSeconds, formatPercentage } from '../Utilities/helpers';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\nimport { Paths } from '../paths';\nimport { stringify } from 'query-string';\n\nimport {\n    Button,\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell,\n    Modal,\n    Label\n} from '@patternfly/react-core';\n\nimport { CircleIcon } from '@patternfly/react-icons';\n\nimport { readTemplateJobs } from '../Api';\n\nconst success = (\n    <CircleIcon\n        size=\"sm\"\n        key=\"5\"\n        style={ { color: 'rgb(110, 198, 100)', marginRight: '5px' } }\n    />\n);\nconst fail = (\n  <>\n    <CircleIcon\n        size=\"sm\"\n        key=\"5\"\n        style={ { color: 'rgb(163, 0, 0)', marginRight: '5px' } }\n    />\n    <span id=\"fail-icon\">!</span>\n  </>\n);\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst PFDataListItemNoBorder = styled(PFDataListItem)`\n    border-bottom: none;\n    margin-bottom: -20px;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataListItemCompact = styled(DataListItem)`\n  padding: 0;\n  > .pf-c-data-list__cell {\n    font-weight: 600;\n  }\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst DataListCellCompact = styled(DataListCell)`\n    padding: 7px;\n`;\n\nconst DataListFocus = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, auto);\n    grid-gap: 10px;\n    padding: var(--pf-global--spacer--lg);\n    background: #ebebeb;\n    border: 1px solid #ccc;\n    border-top: none;\n    margin-bottom: 20px;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst DataCellEndCompact = styled(DataCellEnd)`\n    padding: 7px !important;\n`;\n\nconst formatTopFailedTask = data => {\n    if (!data) {\n        return;\n    }\n\n    if (data && data[0]) {\n        const percentage = formatPercentage(data[0].fail_rate);\n        return `${data[0].task_name} ${percentage}`;\n    }\n\n    return `Unavailable`;\n};\n\nconst TemplatesList = ({ history, clusterId, templates, isLoading, queryParams }) => {\n    const [ isModalOpen, setIsModalOpen ] = useState(false);\n    const [ selectedId, setSelectedId ] = useState(null);\n    const [ selectedTemplate, setSelectedTemplate ] = useState([]);\n    const [ relatedJobs, setRelatedJobs ] = useState([]);\n\n    useEffect(() => {\n        const fetchTemplateDetails = () => {\n            return readTemplateJobs(selectedId, { params: queryParams });\n        };\n\n        const update = async () => {\n            await window.insights.chrome.auth.getUser();\n            fetchTemplateDetails().then(data => {\n                setSelectedTemplate(data);\n                setRelatedJobs(data.related_jobs);\n            });\n        };\n\n        if (selectedId) {\n            update();\n        }\n\n    }, [ selectedId ]);\n\n    const redirectToJobExplorer = () => {\n        const { jobExplorer } = Paths;\n        const initialQueryParams = {\n            template_id: [ selectedId ],\n            status: [ 'successful', 'failed', 'new', 'pending', 'waiting', 'error', 'canceled', 'running' ],\n            job_type: [ 'job' ],\n            start_date: queryParams.startDate,\n            end_date: queryParams.endDate,\n            quick_date_range: 'custom',\n            cluster_id: [ clusterId ]\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    return (\n    <>\n      <DataList aria-label=\"Top Templates\" style={ {\n          maxHeight: '400px',\n          overflow: 'auto',\n          height: '400px',\n          background: 'white'\n      } }>\n          <DataListItem aria-labelledby=\"top-templates-header\">\n              <DataListCell>\n                  <h3>Top templates</h3>\n              </DataListCell>\n              <DataCellEnd>\n                  <h3>Usage</h3>\n              </DataCellEnd>\n          </DataListItem>\n          { isLoading && (\n              <PFDataListItem\n                  aria-labelledby=\"templates-loading\"\n                  key={ isLoading }\n                  style={ { border: 'none' } }\n\n              >\n                  <PFDataListCell>\n                      <LoadingState />\n                  </PFDataListCell>\n              </PFDataListItem>\n          ) }\n          { !isLoading && templates.length <= 0 && (\n              <PFDataListItem\n                  aria-labelledby=\"templates-no-data\"\n                  key={ isLoading }\n                  style={ { border: 'none' } }\n              >\n                  <PFDataListCell>\n                      <NoData />\n                  </PFDataListCell>\n              </PFDataListItem>\n          ) }\n          { !isLoading && templates.map(({ name, count, id }, index) => (\n              <DataListItem aria-labelledby=\"top-templates-detail\" key={ index }>\n                  <DataListCell>\n                      <a\n                          onClick={ () => {\n                              setIsModalOpen(true);\n                              setSelectedId(id);\n                          } }\n                      >\n                          { name }\n                      </a>\n                  </DataListCell>\n                  <DataCellEnd>\n                      { count }\n                  </DataCellEnd>\n              </DataListItem>\n          )) }\n      </DataList>\n      { selectedTemplate && selectedTemplate !== [] && (\n          <Modal\n              width={ '80%' }\n              title={ selectedTemplate.name ? selectedTemplate.name : 'no-template-name' }\n              isOpen={ isModalOpen }\n              onClose={ () => {\n                  setIsModalOpen(false);\n                  setSelectedTemplate([]);\n                  setRelatedJobs([]);\n                  setSelectedId(null);\n              } }\n              actions={ [\n                  <Button\n                      key=\"cancel\"\n                      variant=\"secondary\"\n                      onClick={ () => {\n                          setIsModalOpen(false);\n                          setSelectedTemplate([]);\n                          setRelatedJobs([]);\n                          setSelectedId(null);\n                      } }\n                  >\n              Close\n                  </Button>\n              ] }\n          >\n              <DataList aria-label=\"Selected Template Details\">\n                  <PFDataListItemNoBorder\n                      aria-labelledby=\"Selected Template Statistics\"\n                  >\n                      <DataListFocus>\n                          <div aria-labelledby=\"job runs\">\n                              <b style={ { marginRight: '10px' } }>Number of runs</b>\n                              { selectedTemplate.total_run_count ?\n                                  selectedTemplate.total_run_count : 'Unavailable' }\n                          </div>\n                          <div aria-labelledby=\"total time\">\n                              <b style={ { marginRight: '10px' } }>Total time</b>\n                              { selectedTemplate.total_run ?\n                                  selectedTemplate.total_run : 'Unavailable' }\n                          </div>\n                          <div aria-labelledby=\"Avg Time\">\n                              <b style={ { marginRight: '10px' } }>Avg time</b>\n                              { selectedTemplate.average_run ?\n                                  selectedTemplate.average_run : 'Unavailable' }\n                          </div>\n                          <div aria-labelledby=\"success rate\">\n                              <b style={ { marginRight: '10px' } }>Success rate</b>\n                              { !isNaN(selectedTemplate.success_rate) ?\n                                  formatPercentage(selectedTemplate.success_rate) : 'Unavailable' }\n                          </div>\n                          <div aria-labelledby=\"most failed task\">\n                              <b style={ { marginRight: '10px' } }>Most failed task</b>\n                              { selectedTemplate.most_failed_tasks ?\n                                  formatTopFailedTask(selectedTemplate.most_failed_tasks) : 'Unavailable' }\n                          </div>\n                      </DataListFocus>\n                  </PFDataListItemNoBorder>\n                  <DataListItemCompact>\n                      <DataListCellCompact key=\"last5jobs\">\n                          <Label variant=\"outline\">Last 5 jobs</Label>\n                      </DataListCellCompact>,\n                      <DataCellEndCompact>\n                          <Button component=\"a\" onClick={ redirectToJobExplorer } variant=\"link\">\n                              View all jobs\n                          </Button>\n                      </DataCellEndCompact>\n                  </DataListItemCompact>\n                  <DataListItemCompact aria-labelledby=\"datalist header\">\n                      <PFDataListCell key=\"job heading\">Id/Name</PFDataListCell>\n                      <PFDataListCell key=\"cluster heading\">Cluster</PFDataListCell>\n                      <PFDataListCell key=\"start time heading\">Start Time</PFDataListCell>\n                      <PFDataListCell key=\"total time heading\">Total Time</PFDataListCell>\n                  </DataListItemCompact>\n                  { relatedJobs.length <= 0 && <LoadingState /> }\n                  { relatedJobs.length > 0 &&\n              relatedJobs.map((job, index) => (\n                  <DataListItem\n                      style={ { padding: '10px 0' } }\n                      key={ `job-details-${index}` }\n                      aria-labelledby=\"job details\"\n                  >\n                      <PFDataListCell key=\"job name\">\n                          { job.status === 'successful' ? success : fail }{ ' ' }\n                          { job.job_id } - { job.job_name }\n                      </PFDataListCell>\n                      <PFDataListCell key=\"job cluster\">\n                          { job.cluster_label || job.install_uuid }\n                      </PFDataListCell>\n                      <PFDataListCell key=\"start time\">\n                          { formatDateTime(job.start_time) }\n                      </PFDataListCell>\n                      <PFDataListCell key=\"total time\">\n                          { formatSeconds(job.total_time) }\n                      </PFDataListCell>\n                  </DataListItem>\n              )) }\n              </DataList>\n          </Modal>\n      ) }\n    </>\n    );\n};\n\nTemplatesList.propTypes = {\n    templates: PropTypes.array,\n    isLoading: PropTypes.bool,\n    queryParams: PropTypes.object\n};\n\nexport default TemplatesList;\n","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport {\n    preflightRequest,\n    readChart30,\n    readClusters,\n    readModules,\n    readTemplates\n} from '../../Api';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle,\n    FormSelect,\n    FormSelectOption\n} from '@patternfly/react-core';\n\nimport { FilterIcon } from '@patternfly/react-icons';\n\nimport BarChart from '../../Charts/BarChart';\nimport LineChart from '../../Charts/LineChart';\nimport ModulesList from '../../Components/ModulesList';\nimport TemplatesList from '../../Components/TemplatesList';\n\nconst CardTitle = styled(PFCardTitle)`\n  border-bottom: 2px solid #ebebeb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &&& {\n    min-height: 60px;\n    --pf-c-card--first-child--PaddingTop: 10px;\n    --pf-c-card__header--not-last-child--PaddingBottom: 10px;\n\n    h3 {\n      font-size: 0.875em;\n    }\n  }\n`;\n\nconst timeFrameOptions = [\n    { value: 'please choose', label: 'Select date range', disabled: true },\n    { value: 7, label: 'Past week', disabled: false },\n    { value: 14, label: 'Past 2 weeks', disabled: false },\n    { value: 31, label: 'Past month', disabled: false }\n];\n\nfunction formatClusterName(data) {\n    const defaultClusterOptions = [\n        { value: 'please choose', label: 'Select cluster', disabled: true },\n        { value: 'all', label: 'All clusters', disabled: false }\n    ];\n    return data.reduce(\n        (formatted, { label, cluster_id: id, install_uuid: uuid }) => {\n            if (label.length === 0) {\n                formatted.push({ value: id, label: uuid, disabled: false });\n            } else {\n                formatted.push({ value: id, label, disabled: false });\n            }\n\n            return formatted;\n        },\n        defaultClusterOptions\n    );\n}\n\nconst initialQueryParams = {\n    startDate: moment()\n    .subtract(1, 'month')\n    .format('YYYY-MM-DD'),\n    endDate: moment().format('YYYY-MM-DD')\n};\n\nconst Clusters = ({ history }) => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [ barChartData, setBarChartData ] = useState([]);\n    const [ lineChartData, setLineChartData ] = useState([]);\n    const [ templatesData, setTemplatesData ] = useState([]);\n    const [ modulesData, setModulesData ] = useState([]);\n    const [ clusterOptions, setClusterOptions ] = useState([]);\n    const [ clusterTimeFrame, setClusterTimeFrame ] = useState(31);\n    const [ selectedCluster, setSelectedCluster ] = useState('all');\n    const [ isLoading, setIsLoading ] = useState(true);\n    const { queryParams, setEndDate, setStartDate, setId } = useQueryParams(\n        initialQueryParams\n    );\n\n    useEffect(() => {\n        insights.chrome.appNavClick({ id: 'clusters', secondaryNav: true });\n\n        setIsLoading(true);\n        window.insights.chrome.auth.getUser().then(() =>\n            preflightRequest().then(() =>\n                readClusters().then(({ templates: clustersData = []}) => {\n                    const clusterOptions = formatClusterName(clustersData);\n                    setClusterOptions(clusterOptions);\n                    setIsLoading(false);\n                })\n            ).catch((error) => {\n                setPreFlightError({ preflightError: error });\n            })\n        );\n    }, []);\n\n    // Get and update the data\n    useEffect(() => {\n        setIsLoading(true);\n        window.insights.chrome.auth.getUser().then(() =>\n            Promise.all([\n                readChart30({ params: queryParams }),\n                readModules({ params: queryParams }),\n                readTemplates({ params: queryParams })\n            ]).then(([\n                { data: chartData = []},\n                { modules: modulesData = []},\n                { templates: templatesData = []}\n            ]) => {\n                queryParams.id ? setLineChartData(chartData) : setBarChartData(chartData);\n                setModulesData(modulesData);\n                setTemplatesData(templatesData);\n                setIsLoading(false);\n            }).catch(() => [])\n        );\n    }, [ queryParams ]);\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={ 'Clusters' } />\n            </PageHeader>\n            { preflightError && (\n                <Main>\n                    <EmptyState { ...preflightError } />\n                </Main>\n            ) }\n            { !preflightError && (\n        <>\n          <Main style={ { paddingBottom: '0' } }>\n              <Card>\n                  <CardTitle style={ { paddingBottom: '0', paddingTop: '0' } }>\n                      <h2>\n                          <FilterIcon style={ { marginRight: '10px' } } />\n                  Filter\n                      </h2>\n                      <div style={ { display: 'flex', justifyContent: 'flex-end' } }>\n                          <FormSelect\n                              name=\"selectedCluster\"\n                              value={ selectedCluster }\n                              onChange={ value => {\n                                  setSelectedCluster(value);\n                                  setId(value);\n                              } }\n                              aria-label=\"Select Cluster\"\n                              style={ { margin: '2px 10px' } }\n                          >\n                              { clusterOptions.map(({ value, label, disabled }, index) => (\n                                  <FormSelectOption\n                                      isDisabled={ disabled }\n                                      key={ index }\n                                      value={ value }\n                                      label={ label }\n                                  />\n                              )) }\n                          </FormSelect>\n                          <FormSelect\n                              name=\"clusterTimeFrame\"\n                              value={ clusterTimeFrame }\n                              onChange={ value => {\n                                  setClusterTimeFrame(+value);\n                                  setEndDate();\n                                  setStartDate(+value);\n                              } }\n                              aria-label=\"Select Date Range\"\n                              style={ { margin: '2px 10px' } }\n                          >\n                              { timeFrameOptions.map((option, index) => (\n                                  <FormSelectOption\n                                      isDisabled={ option.disabled }\n                                      key={ index }\n                                      value={ option.value }\n                                      label={ option.label }\n                                  />\n                              )) }\n                          </FormSelect>\n                      </div>\n                  </CardTitle>\n              </Card>\n          </Main>\n          <Main>\n              <Card>\n                  <PFCardTitle>\n                      <h2>Job status</h2>\n                  </PFCardTitle>\n                  <CardBody>\n                      { isLoading && !preflightError && <LoadingState /> }\n                      { selectedCluster === 'all' &&\n                  barChartData.length > 0 &&\n                  !isLoading && (\n                          <BarChart\n                              margin={ { top: 20, right: 20, bottom: 50, left: 70 } }\n                              id=\"d3-bar-chart-root\"\n                              data={ barChartData }\n                              value={ clusterTimeFrame }\n                          />\n                      ) }\n                      { selectedCluster !== 'all' &&\n                  lineChartData.length > 0 &&\n                  !isLoading && (\n                          <LineChart\n                              margin={ { top: 20, right: 20, bottom: 50, left: 70 } }\n                              id=\"d3-line-chart-root\"\n                              data={ lineChartData }\n                              value={ clusterTimeFrame }\n                              clusterId={ queryParams.id }\n                          />\n                      ) }\n                  </CardBody>\n              </Card>\n              <div\n                  className=\"dataCard\"\n                  style={ { display: 'flex', marginTop: '20px' } }\n              >\n                  <TemplatesList\n                      history={ history }\n                      queryParams={ queryParams }\n                      clusterId={ queryParams.id }\n                      templates={ templatesData.slice(0, 10) }\n                      isLoading={ isLoading }\n                  />\n                  <ModulesList\n                      modules={ modulesData.slice(0, 10) }\n                      isLoading={ isLoading }\n                  />\n              </div>\n          </Main>\n        </>\n            ) }\n        </React.Fragment>\n    );\n};\n\nexport default Clusters;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Switch as PFSwitch } from '@patternfly/react-core';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  overflow: auto;\n  width: 100%;\n  height: ${props => props.height};\n`;\n\nconst LegendDetail = styled.div`\n  display: flex;\n  padding: 7.5px 15px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  overflow: auto;\n`;\n\nconst Color = styled.div.attrs(props => ({\n    color: props.color || 'black'\n}))`\n  min-width: 12px;\n  height: 12px;\n  background: ${props => props.color};\n  margin-right: 20px;\n`;\n\nconst Title = styled.span`\n  font-size: 15px;\n  display: inline-block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n`;\n\nconst SubTitle = styled.span`\n    font-size: 15px;\n    margin-left: 20px;\n`;\n\nconst Switch = styled(PFSwitch)`\n  margin-left: 20px;\n\n  svg {\n    display: none;\n  }\n`;\n\nclass Legend extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(_isChecked, { target: { value }}) {\n        const { onToggle } = this.props;\n        const selectedId = parseFloat(value);\n        onToggle(selectedId);\n    };\n    render() {\n        const { data, selected, height } = this.props;\n        return (\n            <Container height={ height }>\n                { data.map(\n                    ({ name, value, id, count }, index) => (\n                        <LegendDetail key={ index }>\n                            <Wrapper>\n                                <Color color={ value } />\n                                <Title>{ name }</Title>\n                            </Wrapper>\n                            { count && (\n                                <SubTitle>{ count }</SubTitle>\n                            ) }\n                            { selected && (\n                                <Switch\n                                    isChecked={ selected.some(selection => selection === id) }\n                                    onChange={ this.handleChange }\n                                    aria-label={ name }\n                                    value={ id }\n                                    id={ `${name}-${id}` }\n                                />\n                            ) }\n                        </LegendDetail>\n                    )) }\n            </Container>\n        );\n    }\n}\n\nLegend.propTypes = {\n    data: PropTypes.array,\n    selected: PropTypes.array,\n    onToggle: PropTypes.func,\n    height: PropTypes.string\n};\n\nexport default Legend;\n","const pfmulti = [\n    '#06C',\n    '#4CB140',\n    '#009596',\n    '#5752D1',\n    '#F4C145',\n    '#EC7A08',\n    '#8BC1F7',\n    '#23511E',\n    '#A2D9D9',\n    '#2A265F',\n    '#F9E0A2',\n    '#8F4700',\n    '#002F5D'\n];\n\nexport { pfmulti };\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport {\n    withRouter\n} from 'react-router-dom';\n\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport Legend from '../Utilities/Legend';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\nimport { stringify } from 'query-string';\nimport { pfmulti } from '../Utilities/colors';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nconst color = d3.scaleOrdinal(pfmulti);\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        this.draw();\n    }\n\n    draw() {\n        this.width = 125;\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 125;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', 68)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.date = this.toolTipBase\n        .append('text')\n        .attr('x', 20)\n        .attr('y', 14)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Date');\n        this.jobs = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 72)\n        .attr('y', 14)\n        .text('0 Jobs');\n        this.orgName = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', -1)\n        .attr('font-size', 12)\n        .text('Org');\n        this.clickMore = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 20)\n        .attr('y', 30)\n        .attr('font-size', 12)\n        .text('Click for details');\n    }\n\n  handleMouseOver = d => {\n      let date;\n      let orgName;\n      let jobs;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      if (!d) {\n          return;\n      } else {\n          const maxLength = 16;\n          date = d.date;\n          orgName = d.org_name;\n          jobs = d.value;\n          if (d.org_name.length > maxLength) {\n              orgName = d.org_name.slice(0, maxLength).concat('...');\n          }\n      }\n\n      const formatTooltipDate = d3.timeFormat('%m/%d');\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n\n      this.date.text('' + formatTooltipDate(date));\n      this.orgName.text('' + orgName);\n      this.jobs.text('' + jobs + ' Jobs');\n      this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n      const maxTextPerc = this.jobsWidth / this.boxWidth * 100;\n      const threshold = 45;\n      const overage = maxTextPerc / threshold;\n      let adjustedWidth;\n      if (maxTextPerc > threshold) {\n          adjustedWidth = this.boxWidth * overage;\n      } else {\n          adjustedWidth = this.boxWidth;\n      }\n\n      this.boundingBox.attr('width', adjustedWidth);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n          this.boundingBox.attr('x', -adjustedWidth - 20);\n          this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n          this.orgName.attr('x', -adjustedWidth - 7);\n          this.clickMore.attr('x', -adjustedWidth - 7);\n          this.date.attr('x', -adjustedWidth - 7);\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n          this.boundingBox.attr('x', 10);\n          this.orgName.attr('x', 20);\n          this.clickMore.attr('x', 20);\n          this.jobs.attr('x', adjustedWidth / 2);\n          this.date.attr('x', 20);\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass GroupedBarChart extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.handleToggle = this.handleToggle.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.orgsList = props.data[0].orgs;\n        this.selection = [];\n        this.state = {\n            colors: [],\n            selected: [],\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    // Methods\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => { this.init(); }, 500)\n        });\n    }\n\n    redirectToJobExplorer({ date, id }) {\n        if (id === -1) {\n            // disable clicking on \"others\" block\n            return;\n        }\n\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const initialQueryParams = {\n            quick_date_range: 'custom',\n            start_date: formattedDate,\n            end_date: formattedDate,\n            status: [ 'successful', 'failed', 'new', 'pending', 'waiting', 'error', 'canceled', 'running' ],\n            org_id: [ id ]\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    handleToggle(selectedId) {\n        if (this.selection.indexOf(selectedId) === -1) {\n            this.selection = [ ...this.selection, selectedId ];\n        } else if (this.selection.includes(selectedId)) {\n            this.selection = [ ...this.selection ].filter(s => s !== selectedId);\n        }\n\n        this.setState({ selected: this.selection });\n        this.draw();\n    }\n\n    init() {\n        // create the first 8 selected data points\n        if (this.selection.length === 0) {\n            this.orgsList.forEach((org, index) => {\n                if (index <= 7) {\n                    this.handleToggle(org.id);\n                }\n            });\n        }\n\n        // create our colors array to send to the Legend component\n        const colors = this.orgsList.reduce((colors, org) => {\n            colors.push({\n                name: org.org_name,\n                value: color(org.org_name),\n                id: org.id\n            });\n            return colors;\n        }, []);\n        this.setState({ colors });\n        this.draw();\n    }\n\n    draw() {\n        // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        let { data: unformattedData, timeFrame } = this.props;\n        const selected = this.selection;\n        const parseTime = d3.timeParse('%Y-%m-%d');\n        const data = unformattedData.reduce((formatted, { date, orgs: orgsList }) => {\n            date = parseTime(date);\n            const selectedOrgs = orgsList.filter(({ id }) => selected.includes(id));\n            selectedOrgs.map(org => {\n                org.date = date;\n            });\n            return formatted.concat({ date, selectedOrgs });\n        }, []);\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n        // x scale of entire chart\n        const x0 = d3\n        .scaleBand()\n        .range([ 0, width ])\n        .padding(0.35);\n        // x scale of individual grouped bars\n        const x1 = d3.scaleBand();\n        const y = d3.scaleLinear().range([ height, 0 ]);\n        // format our X Axis ticks\n        let ticks;\n        const maxTicks = Math.round(data.length / (timeFrame / 2));\n        ticks = data.map(d => d.date);\n        if (timeFrame === 31) {\n            ticks = data.map((d, i) =>\n                i % maxTicks === 0 ? d.date : undefined).filter(item => item);\n        }\n\n        const xAxis = d3\n        .axisBottom(x0)\n        .tickValues(ticks)\n        .tickFormat(d3.timeFormat('%-m/%-d'));\n\n        const yAxis = d3\n        .axisLeft(y)\n        .ticks(8)\n        .tickSize(-width, 0, 0);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n\n        const dates = data.map(d => d.date);\n        const selectedOrgNames = data[0].selectedOrgs.map(d => d.org_name);\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id\n        });\n        x0.domain(dates);\n        x1.domain(selectedOrgNames).range([ 0, x0.bandwidth() ]); // unsorted\n        y.domain([\n            0,\n            d3.max(data, date => d3.max(date.selectedOrgs, d => d.value * 1.15)) || 8\n        ]);\n\n        // add y axis\n        svg\n        .append('g')\n        .attr('class', 'y axis')\n        .call(yAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7')\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 6)\n        .attr('dy', '.71em')\n        .style('text-anchor', 'end')\n        .style('font-weight', 'bold')\n        .text('Value');\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Jobs across orgs');\n\n        // add x axis\n        svg\n        .append('g')\n        .attr('class', 'x axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(xAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' + width / 2 + ' ,' + (height + this.props.margin.top + 25) + ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n        // add the groups\n        let slice = svg.selectAll('.slice').data(data);\n        slice.exit().remove();\n\n        const enter = slice\n        .enter()\n        .append('g')\n        .attr('class', 'g foo')\n        .attr('transform', d => 'translate(' + x0(d.date) + ',0)');\n        slice = slice.merge(enter);\n        // add the individual bars\n        let bars = slice.selectAll('rect').data(function(d) {\n            return d.selectedOrgs;\n        });\n        bars.exit().remove();\n\n        const subEnter = bars\n        .enter()\n        .append('rect')\n        .attr('width', x1.bandwidth())\n        .attr('x', function(d) {\n            return x1(d.org_name);\n        }) // unsorted\n        .style('fill', function(d) {\n            return color(d.org_name);\n        })\n        .attr('y', function(d) {\n            return y(d.value);\n        })\n        .attr('height', function(d) {\n            return height - y(d.value);\n        })\n        .on('mouseover', function(d) {\n            d3.select(this).style('fill', d3.rgb(color(d.org_name)).darker(1));\n            tooltip.handleMouseOver();\n        })\n        .on('mousemove', tooltip.handleMouseOver)\n        .on('mouseout', function(d) {\n            d3.select(this).style('fill', color(d.org_name));\n            tooltip.handleMouseOut();\n        })\n        .on('click', this.redirectToJobExplorer);\n        bars = bars.merge(subEnter);\n    };\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        const { colors, selected } = this.state;\n        return (\n            <Wrapper>\n                <div id={ this.props.id } />\n                { colors.length > 0 && (\n                    <Legend\n                        id=\"d3-grouped-bar-legend\"\n                        data={ colors }\n                        selected={ selected }\n                        onToggle={ this.handleToggle }\n                        height=\"350px\"\n                    />\n                ) }\n            </Wrapper>\n        );\n    }\n}\n\nGroupedBarChart.propTypes = {\n    id: PropTypes.string,\n    isAccessible: PropTypes.bool,\n    data: PropTypes.array,\n    value: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    timeFrame: PropTypes.number,\n    history: PropTypes.object\n};\n\nexport default initializeChart(withRouter(GroupedBarChart));\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport { getTotal } from '../Utilities/helpers';\nimport Legend from '../Utilities/Legend';\nimport { pfmulti } from '../Utilities/colors';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        // defer drawing until we know the data shape\n        this.drawn = false;\n        // show the success rate or not\n        this.showSuccess = false;\n    }\n\n    draw(d) {\n        // chart1 has success rate data and chart2 does not ...\n        this.showSuccess = (d && d.data && 'success_rate' in d.data) ? true : false;\n        const boundingHeight = (this.showSuccess) ? 70 : 52;\n        const boundingWidth = (this.showSuccess) ? 120 : 108;\n\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBOx = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', boundingHeight)\n        .attr('width', boundingWidth)\n        .attr('fill', '#393f44');\n        this.orgName = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 0)\n        .text('Organization');\n        this.percentageTotal = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 16)\n        .text('0');\n        this.percentageSuccess = null;\n        if (this.showSuccess) {\n            this.percentageSuccess = this.toolTipBase\n            .append('text')\n            .attr('fill', 'white')\n            .attr('font-size', 12)\n            .attr('font-weight', 800)\n            .attr('x', 20)\n            .attr('y', 30)\n            .text('');\n        }\n    }\n\n  handleMouseOver = d => {\n      // treat draw() as a singleton to avoid a painted window effect\n      if (this.drawn !== true) {\n          this.draw(d);\n          this.drawn = true;\n      }\n\n      let perc;\n      let percSuccess;\n      let orgName;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      if (!d) {\n          return;\n      }\n\n      if (d && d.data) {\n          const maxLength = 16;\n          perc = d.data.percent;\n          percSuccess = d.data.success_rate;\n          orgName = d.data.name;\n          if (d.data.name.length > maxLength) {\n              orgName = d.data.name.slice(0, maxLength - 3).concat('...');\n          }\n      }\n\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n\n      this.percentageTotal.text('' + perc + '%');\n      if (percSuccess && this.percentageSuccess) {\n          this.percentageSuccess.text('(' + percSuccess + '% successful)');\n      }\n\n      this.orgName.text(' ' + orgName);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, -10) rotate(45)');\n          this.boundingBOx.attr('x', -125);\n          this.orgName.attr('x', -112);\n          this.percentageTotal.attr('x', -112);\n          if (this.showSuccess) {\n              this.percentageSuccess.attr('x', -112);\n          }\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, -10) rotate(45)');\n          this.boundingBOx.attr('x', 10);\n          this.orgName.attr('x', 20);\n          this.percentageTotal.attr('x', 20);\n          if (this.showSuccess) {\n              this.percentageSuccess.attr('x', 20);\n          }\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass PieChart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            colors: [],\n            timeout: null\n        };\n        this.draw = this.draw.bind(this);\n        this.init = this.init.bind(this);\n        this.resize = this.resize.bind(this);\n    }\n    // Methods\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => { this.init(); }, 500)\n        });\n    }\n    sortDescending(data) {\n    // descending\n        data.sort((a, b) =>\n            d3.descending(parseFloat(a.count), parseFloat(b.count))\n        );\n    }\n    init() {\n        const { data } = this.props;\n        const color = d3.scaleOrdinal(pfmulti);\n        // create our colors array to send to the Legend component\n        const colors = data.reduce((colors, org) => {\n            // format complement slice as \"Others\"\n            if (org.id === -1) {\n                colors.push({\n                    name: 'Others',\n                    value: color(org.name),\n                    count: Math.round(org.count)\n                });\n            } else {\n                colors.push({\n                    name: org.name,\n                    value: color(org.name),\n                    count: Math.round(org.count)\n                });\n            }\n\n            return colors;\n        }, []);\n        this.setState({ colors });\n        this.draw();\n    }\n    draw() {\n        const color = d3.scaleOrdinal(pfmulti);\n\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.bottom)\n        .append('g');\n\n        svg.append('g').attr('class', 'slices');\n        svg.append('g').attr('class', 'labels');\n        svg.append('g').attr('class', 'lines');\n        const radius = Math.min(width, height) / 2;\n        let { data: unfilteredData } = this.props;\n        const data = unfilteredData.filter(datum => datum.id !== -1);\n        const total = getTotal(data);\n        data.forEach(function(d) {\n            d.count = +d.count;\n            d.percent = +Math.round((d.count / total) * 100);\n        });\n        const donutTooltip = new Tooltip({\n            svg: '#' + this.props.id\n        });\n        const pie = d3\n        .pie()\n        .sort(null)\n        .value(d => d.count);\n        const arc = d3\n        .arc()\n        .outerRadius(radius - 10) // controls top positioning of chart\n        .innerRadius(0);\n\n        svg.attr(\n            'transform',\n            'translate(' +\n        (width + this.props.margin.left + this.props.margin.right) / 2 +\n        ',' +\n        (height + this.props.margin.top + this.props.margin.bottom) / 2 +\n        ')'\n        );\n\n        svg\n        .selectAll('path')\n        .data(pie(data))\n        .enter()\n        .append('path')\n        .attr('d', arc)\n        .attr('fill', (d, i) => color(i));\n\n        svg\n        .selectAll('path')\n        .on('mouseover', function(d, i) {\n            d3.select(this).style('fill', d3.rgb(color(i)).darker(1));\n            donutTooltip.handleMouseOver(d);\n        })\n        .on('mouseout', function(d, i) {\n            d3.select(this).style('fill', color(i));\n            donutTooltip.handleMouseOut();\n        })\n        .on('mousemove', donutTooltip.handleMouseOver);\n\n        svg.append('g').classed('labels', true);\n        svg.append('g').classed('lines', true);\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.data !== this.props.data) {\n            this.init();\n        }\n    }\n\n    render() {\n        const { colors } = this.state;\n        return (\n            <Wrapper>\n                <div id={ this.props.id } />\n                { colors.length > 0 && (\n                    <Legend\n                        id=\"d3-grouped-bar-legend\"\n                        data={ colors }\n                        selected={ null }\n                        onToggle={ null }\n                        height=\"300px\"\n                    />\n                ) }\n            </Wrapper>\n        );\n    }\n}\n\nPieChart.propTypes = {\n    id: PropTypes.string,\n    isAccessible: PropTypes.bool,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    timeFrame: PropTypes.number\n};\n\nexport default initializeChart(PieChart);\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport {\n    preflightRequest,\n    readJobsByDateAndOrg,\n    readJobRunsByOrg,\n    readJobEventsByOrg\n} from '../../Api';\n\nimport { Main, PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle,\n    FormSelect,\n    FormSelectOption\n} from '@patternfly/react-core';\n\nimport { FilterIcon } from '@patternfly/react-icons';\n\nimport GroupedBarChart from '../../Charts/GroupedBarChart';\nimport PieChart from '../../Charts/PieChart';\n\nconst CardTitle = styled(PFCardTitle)`\n  border-bottom: 2px solid #ebebeb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &&& {\n    min-height: 60px;\n    --pf-c-card--first-child--PaddingTop: 10px;\n    --pf-c-card__header--not-last-child--PaddingBottom: 10px;\n\n    h3 {\n      font-size: 0.875em;\n    }\n  }\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  overflow: hidden;\n\n  .pf-c-card {\n    width: 50%;\n    margin-top: 20px;\n    overflow: auto;\n  }\n\n  .pf-c-card:first-of-type {\n    margin-right: 20px;\n  }\n`;\n\nconst TopCard = styled(Card)`\n  min-height: 500px;\n`;\n\nconst timeFrameOptions = [\n    { value: 'please choose', label: 'Select Date Range', disabled: true },\n    { value: 7, label: 'Past Week', disabled: false },\n    { value: 14, label: 'Past 2 Weeks', disabled: false },\n    { value: 31, label: 'Past Month', disabled: false }\n];\n\nconst sortOptions = [\n    { value: 'please choose', label: 'Order By', disabled: true },\n    { value: 'count:desc', label: 'Top 5 Orgs', disabled: false },\n    { value: 'count:asc', label: 'Bottom 5 Orgs', disabled: false },\n    { value: 'all', label: 'All Orgs', disabled: false }\n];\n\nconst initialQueryParams = {\n    startDate: moment().subtract(1, 'month').format('YYYY-MM-DD'),\n    endDate: moment().format('YYYY-MM-DD'),\n    sort_by: 'count:desc',\n    limit: 5\n};\n\nconst OrganizationStatistics = () => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [ pieChart1Data, setPieChart1Data ] = useState([]);\n    const [ pieChart2Data, setPieChart2Data ] = useState([]);\n    const [ groupedBarChartData, setGroupedBarChartData ] = useState([]);\n    const [ timeframe, setTimeframe ] = useState(31);\n    const [ sortOrder, setSortOrder ] = useState('count:desc');\n    const [ firstRender, setFirstRender ] = useState(true);\n    const [ isLoading, setIsLoading ] = useState(true);\n    const {\n        queryParams,\n        setEndDate,\n        setStartDate,\n        setSortBy,\n        setLimit\n    } = useQueryParams(initialQueryParams);\n\n    const setLimitValue = (val) => {\n        let limit;\n        if (val === 'count:asc' || val === 'count:desc') {\n            limit = 5;\n        } else {\n            limit = 200;\n        }\n\n        return setLimit(limit);\n    };\n\n    useEffect(() => {\n        insights.chrome.appNavClick({ id: 'organization-statistics', secondaryNav: true });\n    }, []);\n\n    useEffect(() => {\n        let ignore = false;\n        const fetchEndpoints = () => {\n            return Promise.all(\n                [\n                    readJobsByDateAndOrg({ params: queryParams }),\n                    readJobRunsByOrg({ params: queryParams }),\n                    readJobEventsByOrg({ params: queryParams })\n                ].map((p) => p.catch(() => []))\n            );\n        };\n\n        const update = async () => {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            fetchEndpoints().then(\n                ([\n                    { dates: groupedBarChartData = []},\n                    { usages: pieChart1Data = []},\n                    { usages: pieChart2Data = []}\n                ]) => {\n                    setGroupedBarChartData(groupedBarChartData);\n                    setPieChart1Data(pieChart1Data);\n                    setPieChart2Data(pieChart2Data);\n                    setIsLoading(false);\n                }\n            );\n        };\n\n        async function initializeWithPreflight() {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            await preflightRequest().catch((error) => {\n                setPreFlightError({ preflightError: error });\n            });\n            fetchEndpoints().then(\n                ([\n                    { dates: groupedBarChartData = []},\n                    { usages: pieChart1Data = []},\n                    { usages: pieChart2Data = []}\n                ]) => {\n                    if (!ignore) {\n                        setGroupedBarChartData(groupedBarChartData);\n                        setPieChart1Data(pieChart1Data);\n                        setPieChart2Data(pieChart2Data);\n                        setFirstRender(false);\n                        setIsLoading(false);\n                    }\n                }\n            );\n        }\n\n        if (firstRender) {\n            initializeWithPreflight();\n            return () => (ignore = true);\n        } else {\n            update();\n        }\n    }, [ queryParams ]);\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={ 'Organization Statistics' } />\n            </PageHeader>\n            { preflightError && (\n                <Main>\n                    <EmptyState { ...preflightError } />\n                </Main>\n            ) }\n            { !preflightError && (\n        <>\n          <Main style={ { paddingBottom: '0' } }>\n              <Card>\n                  <CardTitle style={ { paddingBottom: '0', paddingTop: '0' } }>\n                      <h2>\n                          <FilterIcon style={ { marginRight: '10px' } } />\n                  Filter\n                      </h2>\n                      <div style={ { display: 'flex', justifyContent: 'flex-end' } }>\n                          <FormSelect\n                              name=\"sortOrder\"\n                              value={ sortOrder }\n                              onChange={ (value) => {\n                                  setSortOrder(value);\n                                  setSortBy(value);\n                                  setLimitValue(value);\n                              } }\n                              aria-label=\"Select Cluster\"\n                              style={ { margin: '2px 10px' } }\n                          >\n                              { sortOptions.map(({ value, label, disabled }, index) => (\n                                  <FormSelectOption\n                                      isDisabled={ disabled }\n                                      key={ index }\n                                      value={ value }\n                                      label={ label }\n                                  />\n                              )) }\n                          </FormSelect>\n                          <FormSelect\n                              name=\"timeframe\"\n                              value={ timeframe }\n                              onChange={ (value) => {\n                                  setTimeframe(+value);\n                                  setEndDate();\n                                  setStartDate(+value);\n                              } }\n                              aria-label=\"Select Date Range\"\n                              style={ { margin: '2px 10px' } }\n                          >\n                              { timeFrameOptions.map((option, index) => (\n                                  <FormSelectOption\n                                      isDisabled={ option.disabled }\n                                      key={ index }\n                                      value={ option.value }\n                                      label={ option.label }\n                                  />\n                              )) }\n                          </FormSelect>\n                      </div>\n                  </CardTitle>\n              </Card>\n          </Main>\n          <Main>\n              <TopCard>\n                  <CardTitle>\n                      <h2>Organization Status</h2>\n                  </CardTitle>\n                  <CardBody>\n                      { isLoading && <LoadingState /> }\n                      { !isLoading && groupedBarChartData.length <= 0 && <NoData /> }\n                      { !isLoading && groupedBarChartData.length > 0 && (\n                          <GroupedBarChart\n                              margin={ { top: 20, right: 20, bottom: 50, left: 50 } }\n                              id=\"d3-grouped-bar-chart-root\"\n                              data={ groupedBarChartData }\n                              timeFrame={ timeframe }\n                          />\n                      ) }\n                  </CardBody>\n              </TopCard>\n              <CardContainer>\n                  <Card>\n                      <CardBody style={ { padding: 0 } }>\n                          <CardTitle style={ { padding: 0 } }>\n                              <h2 style={ { marginLeft: '20px' } }>\n                      Job Runs by Organization\n                              </h2>\n                          </CardTitle>\n                          { isLoading && <LoadingState /> }\n                          { !isLoading && pieChart1Data.length <= 0 && <NoData /> }\n                          { !isLoading && pieChart1Data.length > 0 && (\n                              <PieChart\n                                  margin={ { top: 20, right: 20, bottom: 0, left: 20 } }\n                                  id=\"d3-donut-1-chart-root\"\n                                  data={ pieChart1Data }\n                                  timeFrame={ timeframe }\n                              />\n                          ) }\n                      </CardBody>\n                  </Card>\n                  <Card>\n                      <CardBody style={ { padding: 0 } }>\n                          <CardTitle style={ { padding: 0 } }>\n                              <h2 style={ { marginLeft: '20px' } }>\n                      Usage by Organization (Tasks)\n                              </h2>\n                          </CardTitle>\n                          { isLoading && <LoadingState /> }\n                          { !isLoading && pieChart2Data.length <= 0 && <NoData /> }\n                          { !isLoading && pieChart2Data.length > 0 && (\n                              <PieChart\n                                  margin={ { top: 20, right: 20, bottom: 0, left: 20 } }\n                                  id=\"d3-donut-2-chart-root\"\n                                  data={ pieChart2Data }\n                                  timeFrame={ timeframe }\n                              />\n                          ) }\n                      </CardBody>\n                  </Card>\n              </CardContainer>\n          </Main>\n        </>\n            ) }\n        </React.Fragment>\n    );\n};\n\nexport default OrganizationStatistics;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        this.draw();\n    }\n\n    formatDollars(amount) {\n        return parseFloat(amount).toFixed(2).toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    };\n\n    draw() {\n        this.width = 125;\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 125;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, 0) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', 92)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.name = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', -2)\n        .text('Template name');\n        this.savings = this.toolTipBase\n        .append('text')\n        .attr('x', 20)\n        .attr('y', 52)\n        .attr('font-size', 12)\n        .attr('font-weight', 'bold')\n        .attr('fill', 'white')\n        .text('Total savings $0');\n        this.manualCost = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', 16)\n        .text('Manual cost $0');\n        this.automationCost = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', 34)\n        .text('Automation cost $0');\n    }\n\n    handleMouseOver = d => {\n        let name;\n        let savings;\n        let manualCost;\n        let automationCost;\n        const scrollLeftOffset = d3.select('#d3-roi-chart-root').node().scrollLeft;\n        const x =\n            d3.event.pageX -\n            d3\n            .select(this.svg)\n            .node()\n            .getBoundingClientRect().x +\n            10 + scrollLeftOffset;\n        const y =\n            d3.event.pageY -\n            d3\n            .select(this.svg)\n            .node()\n            .getBoundingClientRect().y -\n            30;\n        if (!d) {\n            return;\n        } else {\n            savings = this.formatDollars(d.delta);\n            name = d.name;\n            manualCost = this.formatDollars(d.calculations[0].cost);\n            automationCost = this.formatDollars(d.calculations[1].cost);\n        }\n\n        const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n        const chartWidth = d3\n        .select(this.svg + '> svg')\n        .node()\n        .getBoundingClientRect().width;\n        const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n        const flipped = overflow < (x / chartWidth) * 100;\n        this.name.text('' + name);\n        this.savings.text('Total savings $' + savings);\n        this.manualCost.text('Manual Cost $' + manualCost);\n        this.automationCost.text('Automation Cost $' + automationCost);\n        this.nameWidth = this.name.node().getComputedTextLength();\n        this.savingsWidth = this.savings.node().getComputedTextLength();\n        this.manualCostWidth = this.manualCost.node().getComputedTextLength();\n        this.automationCostWidth = this.automationCost.node().getComputedTextLength();\n        this.widestTextElem = d3.max([ this.nameWidth, this.savingsWidth, this.automationCostWidth, this.manualCostWidth ]);\n\n        const maxTextPerc = this.widestTextElem / this.boxWidth * 100;\n        const threshold = 85;\n        const overage = maxTextPerc / threshold;\n        let adjustedWidth;\n        if (maxTextPerc > threshold) {\n            adjustedWidth = this.boxWidth * overage;\n        } else {\n            adjustedWidth = this.boxWidth;\n        }\n\n        this.boundingBox.attr('width', adjustedWidth);\n        this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n        if (flipped) {\n            this.toolTipPoint.attr('transform', 'translate(-20, 15) rotate(45)');\n            this.boundingBox.attr('x', -adjustedWidth - 20);\n            this.name.attr('x', -(toolTipWidth - 7));\n            this.savings.attr('x', -(toolTipWidth - 7));\n            this.manualCost.attr('x', -(toolTipWidth - 7));\n            this.automationCost.attr('x', -(toolTipWidth - 7));\n        } else {\n            this.toolTipPoint.attr('transform', 'translate(10, 15) rotate(45)');\n            this.boundingBox.attr('x', 10);\n            this.name.attr('x', 20);\n            this.savings.attr('x', 20);\n            this.manualCost.attr('x', 20);\n            this.automationCost.attr('x', 20);\n        }\n\n        this.toolTipBase.style('opacity', 1);\n        this.toolTipBase.interrupt();\n    };\n\n    handleMouseOut = () => {\n        this.toolTipBase\n        .transition()\n        .delay(15)\n        .style('opacity', 0)\n        .style('pointer-events', 'none');\n    };\n}\n\nclass TopTemplatesSavings extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.state = {\n            timeout: null\n        };\n    }\n\n    // Methods\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => {\n                this.init();\n            }, 500)\n        });\n    }\n\n    init() {\n        this.draw();\n    }\n\n    draw() {\n        // Use PF chart color\n        const color = d3.scaleOrdinal([ '#0066CC' ]); //blue\n        // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        let { data: unfiltered, selected } = this.props;\n        const data = unfiltered.filter(({ id }) => !selected.includes(id));\n        data.forEach(datum => {\n            datum.calculations.forEach(row => {\n                row.name = datum.name;\n            });\n        });\n        let width;\n        // adjust chart width to support larger datasets\n        if (data.length >= 15) {\n            const containerWidth = d3.select('.automation-wrapper').node();\n            width = containerWidth.getBoundingClientRect().width - this.props.margin.left - this.props.margin.right;\n        } else {\n            width = this.props.getWidth();\n        }\n\n        const height = this.props.getHeight();\n        const x = d3\n        .scaleBand()\n        .rangeRound([ 0, width ])\n        .padding(0.45);\n        const y = d3.scaleLinear().range([ height, 0 ]);\n        // format our X Axis ticks\n        let ticks;\n        ticks = data.map(d => d.name);\n        const formatYAxisValue = d3.format('.2s');\n        const xAxis = d3.axisBottom(x).tickValues(ticks);\n\n        const yAxis = d3\n        .axisLeft(y)\n        .ticks(8)\n        .tickFormat(d => formatYAxisValue(d).replace('G', 'B'))\n        .tickSize(-width, 0, 0);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n\n        const taskNames = data.map(d => d.name);\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id\n        });\n        x.domain(taskNames);\n        y.domain([\n            0,\n            d3.max(data, d => d.delta * 1.15) || 8\n        ]);\n\n        // add y axis\n        svg\n        .append('g')\n        .attr('class', 'y axis')\n        .call(yAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7')\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 6)\n        .attr('dy', '.71em')\n        .style('text-anchor', 'end')\n        .style('font-weight', 'bold')\n        .text('Value');\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Savings per template ($)');\n\n        // add x axis\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(xAxis)\n        .selectAll('text')\n        .style('text-anchor', 'start')\n        .attr('dx', '0.75em')\n        .attr('dy', -x.bandwidth() / 1.45 - 8)\n        .attr('transform', 'rotate(-90)');\n\n        svg.selectAll('.x-axis line').attr('stroke', 'transparent');\n\n        svg.selectAll('.bar')\n        .data(data)\n        .enter().append('rect')\n        .attr('x', d => x(d.name))\n        .attr('width', x.bandwidth())\n        .attr('y', d => y(d.delta))\n        .style('fill', d => color(d.type))\n        .attr('height', d => height - y(d.delta))\n        .on('mouseover', function(d) {\n            d3.select(this).style('fill', d3.rgb(color(d.type)).darker(1));\n            tooltip.handleMouseOver(d);\n        })\n        .on('mousemove', tooltip.handleMouseOver)\n        .on('mouseout', function(d) {\n            d3.select(this).style('fill', color(d.type));\n            tooltip.handleMouseOut();\n        });\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate() {\n        this.init();\n    }\n\n    render() {\n        return <div id={ this.props.id } />;\n    }\n}\n\nTopTemplatesSavings.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    selected: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func\n};\n\nexport default initializeChart(TopTemplatesSavings);\n","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport styled from 'styled-components';\nimport { stringify } from 'query-string';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport { preflightRequest, readROI } from '../../Api';\nimport { Paths } from '../../paths';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Button,\n    Card,\n    CardBody as PFCardBody,\n    CardTitle as PFCardTitle,\n    FormSelect,\n    FormSelectOption,\n    InputGroup,\n    InputGroupText,\n    TextInput,\n    Title,\n    Tooltip,\n    Popover\n} from '@patternfly/react-core';\n\nimport {\n    DollarSignIcon,\n    FilterIcon,\n    InfoCircleIcon\n} from '@patternfly/react-icons';\n\nimport TopTemplatesSavings from '../../Charts/ROITopTemplates';\n\nimport {\n    calculateDelta,\n    convertSecondsToMins,\n    convertMinsToSeconds,\n    convertSecondsToHours,\n    convertWithCommas,\n    formatPercentage\n} from '../../Utilities/helpers';\n\nconst FilterCardTitle = styled(PFCardTitle)`\n  border-bottom: 2px solid #ebebeb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &&& {\n    min-height: 60px;\n    --pf-c-card--first-child--PaddingTop: 10px;\n    --pf-c-card__header--not-last-child--PaddingBottom: 10px;\n\n    h3 {\n      font-size: 0.875em;\n    }\n  }\n`;\n\nconst defaultAvgRunVal = 3600; // 1 hr in seconds\nconst defaultCostAutomation = 20;\nconst defaultCostManual = 50;\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst TemplateDetail = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  div,\n  em {\n    padding-right: 5px;\n  }\n\n  @media (max-width: 1490px) {\n    display: block;\n\n    em {\n      padding: 10px 0;\n      display: block;\n    }\n  }\n`;\n\nconst TemplateDetailSubTitle = styled.em`\n  color: var(--pf-global--Color--dark-200);\n`;\n\nconst TooltipWrapper = styled.div`\n  p {\n    text-align: left;\n  }\n`;\n\nconst IconGroup = styled.div`\n  & svg {\n    fill: var(--pf-global--Color--dark-200);\n\n    :hover {\n      cursor: pointer;\n    }\n\n    :first-of-type {\n      margin-right: 10px;\n      margin-left: 10px;\n\n      @media (max-width: 1350px) {\n        margin-left: 0;\n      }\n    }\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 5fr 2fr;\n  height: 100%;\n`;\n\nconst WrapperLeft = styled.div`\n  flex: 5;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n`;\n\nconst WrapperRight = styled.div`\n  flex: 2;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst CardTitle = styled(PFCardTitle)`\n  border-bottom: 1px solid #d7d7d7;\n  margin-bottom: 10px;\n`;\n\nconst CardBody = styled(PFCardBody)`\n  overflow: auto;\n`;\n\n/* helper variables for further date ranges */\nconst pastYear = moment().subtract(1, 'year');\nconst pastYTD = moment().startOf('year');\nconst pastQuarter = moment().startOf('quarter');\nconst pastMonth = moment().subtract(1, 'month');\n\n/* these are the buckets of time the user's are able to select ... */\nconst timeFrameOptions = [\n    { value: 'please choose', label: 'Select date range', disabled: true },\n    { value: pastYear.format('YYYY-MM-DD'), label: 'Past year', disabled: false },\n    { value: pastYTD.format('YYYY-MM-DD'), label: 'Past year to date', disabled: false },\n    { value: pastQuarter.format('YYYY-MM-DD'), label: 'Past quarter', disabled: false },\n    { value: pastMonth.format('YYYY-MM-DD'), label: 'Past month', disabled: false }\n];\n\n/* set the default bucket to 365 days */\nconst initialQueryParams = {\n    startDate: pastYear.format('YYYY-MM-DD'),\n    endDate: moment().format('YYYY-MM-DD')\n};\n\n// create our array to feed to D3\nexport const formatData = (response, defaults) => {\n    return response.reduce(\n        (\n            formatted,\n            {\n                name,\n                template_id: id,\n                successful_run_count,\n                successful_elapsed_sum,\n                successful_host_run_count_avg,\n                successful_host_run_count,\n                elapsed_sum,\n                failed_elapsed_sum,\n                orgs,\n                clusters,\n                template_automation_percentage\n            }\n        ) => {\n            formatted.push({\n                name,\n                id,\n                run_count: successful_run_count,\n                host_count: successful_host_run_count_avg || 0,\n                successful_host_run_count,\n                delta: 0,\n                isActive: true,\n                calculations: [\n                    {\n                        type: 'Manual',\n                        avg_run: defaults.defaultAvgRunVal,\n                        cost: 0\n                    },\n                    {\n                        type: 'Automated',\n                        avg_run: successful_elapsed_sum || 0,\n                        cost: 0\n                    }\n                ],\n                orgs,\n                clusters,\n                elapsed_sum,\n                failed_elapsed_sum,\n                successful_elapsed_sum,\n                template_automation_percentage\n            });\n            return formatted;\n        },\n        []\n    );\n};\n\nexport const updateData = (seconds, id, data) => {\n    let updatedData = [ ...data ];\n    updatedData.map((datum) => {\n        if (datum.id === id) {\n            // Update manual calculations\n            datum.calculations[0].avg_run = seconds;\n            datum.calculations[0].total = seconds * datum.successful_host_run_count;\n        }\n    });\n    return updatedData;\n};\n\nexport const handleManualTimeChange = (minutes) => {\n    const seconds = convertMinsToSeconds(minutes);\n    return seconds;\n};\n\nexport const formatSelectedIds = (arr, id) => {\n    let selected;\n    if (arr.includes(id)) {\n        selected = [ ...arr ].filter((s) => s !== id);\n    } else {\n        selected = [ ...arr, id ];\n    }\n\n    return selected;\n};\n\nexport const handleToggle = (id, selected) => {\n    const currentSelection = [ ...selected ];\n    const newSelection = formatSelectedIds(currentSelection, id);\n    return newSelection;\n};\n\nexport const computeTotalSavings = (formattedData, costAutomation, costManual) => {\n    let data = [ ...formattedData ];\n    let total = 0;\n    let costAutomationPerHour;\n    let costManualPerHour;\n\n    data.forEach((datum) => {\n        costAutomationPerHour =\n            convertSecondsToHours(datum.successful_elapsed_sum) * costAutomation;\n        costManualPerHour =\n            convertSecondsToHours(datum.calculations[0].avg_run) *\n            datum.successful_host_run_count *\n            costManual;\n        total += calculateDelta(costAutomationPerHour, costManualPerHour);\n        datum.delta = calculateDelta(costAutomationPerHour, costManualPerHour);\n        datum.calculations[0].cost = costManualPerHour;\n        datum.calculations[1].cost = costAutomationPerHour;\n    });\n\n    return total;\n};\n\nexport const floatToStringWithCommas = (total) => {\n    return total\n    .toFixed(2)\n    .toString()\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n\nexport const filterDataBySelectedIds = (unfilteredData, selectedIds) => {\n    const filteredData = unfilteredData.filter(\n        ({ id }) => {\n            return !selectedIds.includes(id);\n        }\n    );\n    return filteredData;\n};\n\nexport const setTemplatesIsActive = (templatesList, selectedIds) => {\n    templatesList.map((l) => {\n        if (selectedIds.includes(l.id)) {\n            l.isActive = false;\n        } else {\n            l.isActive = true;\n        }\n    });\n    return templatesList;\n};\n\nconst AutomationCalculator = ({ history }) => {\n    const [ isLoading, setIsLoading ] = useState(true);\n    const [ costManual, setCostManual ] = useState(defaultCostManual);\n    const [ costAutomation, setCostAutomation ] = useState(defaultCostAutomation);\n    const [ totalSavings, setTotalSavings ] = useState(0);\n    const [ unfilteredData, setUnfilteredData ] = useState([]);\n    const [ formattedData, setFormattedData ] = useState([]);\n    const [ templatesList, setTemplatesList ] = useState([]);\n    const [ selectedIds ] = useState([]);\n    const [ preflightError, setPreFlightError ] = useState(null);\n\n    // default to the past year (n - 365 days)\n    const [ roiTimeFrame, setRoiTimeFrame ] = useState(timeFrameOptions[1].value);\n    const { queryParams, setStartDateAsString } = useQueryParams(\n        initialQueryParams\n    );\n\n    const handleOnChange = (value) => {\n        setStartDateAsString(value);\n        setRoiTimeFrame(value);\n    };\n\n    useEffect(() => {\n        insights.chrome.appNavClick({ id: 'automation-calculator', secondaryNav: true });\n    }, []);\n\n    useEffect(() => {\n        const total = computeTotalSavings(formattedData, costAutomation, costManual);\n        const totalWithCommas = floatToStringWithCommas(total);\n        setTotalSavings('$' + totalWithCommas);\n    }, [ formattedData, costAutomation, costManual ]);\n\n    useEffect(() => {\n        const filteredData = filterDataBySelectedIds(unfilteredData, selectedIds);\n        setTemplatesIsActive(templatesList, selectedIds);\n        setFormattedData(filteredData);\n    }, [ selectedIds ]);\n\n    useEffect(() => {\n        let ignore = false;\n        const getData = () => {\n            const result = readROI({ params: queryParams }).catch(() => []);\n            return result;\n        };\n\n        async function initializeWithPreflight() {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            await preflightRequest().catch((error) => {\n                setPreFlightError({ preflightError: error });\n            });\n            getData().then(({ templates: roiData = []}) => {\n                if (!ignore) {\n                    const formatted = formatData(roiData, {\n                        defaultAvgRunVal,\n                        defaultCostAutomation,\n                        defaultCostManual\n                    });\n                    setUnfilteredData(formatted);\n                    setFormattedData(formatted);\n                    setTemplatesList(formatted);\n                    setIsLoading(false);\n                }\n            });\n        }\n\n        initializeWithPreflight();\n        return () => (ignore = true);\n    }, [ queryParams ]);\n\n    const redirectToJobExplorer = (templateId) => {\n        const { jobExplorer } = Paths;\n        const initialQueryParams = {\n            template_id: [ templateId ],\n            status: [ 'successful' ],\n            job_type: [ 'job' ],\n            quick_date_range: 'last_30_days'\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    return (\n    <>\n      <PageHeader style={ { flex: '0' } }>\n          <PageHeaderTitle title={ 'Automation Calculator' } />\n      </PageHeader>\n      { preflightError && (\n          <Main>\n              <Card>\n                  <CardBody>\n                      <EmptyState { ...preflightError } />\n                  </CardBody>\n              </Card>\n          </Main>\n      ) }\n      { !preflightError && (\n        <>\n          <Main style={ { paddingBottom: '0' } }>\n              <Card>\n                  <FilterCardTitle style={ { paddingBottom: '0', paddingTop: '0' } }>\n                      <h2>\n                          <FilterIcon style={ { marginRight: '10px' } } />\n                  Filter\n                      </h2>\n                      <div style={ { display: 'flex', justifyContent: 'flex-end' } }>\n                          <FormSelect\n                              name=\"roiTimeFrame\"\n                              value={ roiTimeFrame }\n                              onChange={ handleOnChange }\n                              aria-label=\"Select Date Range\"\n                              style={ { margin: '2px 10px' } }\n                          >\n                              { timeFrameOptions.map((option, index) => (\n                                  <FormSelectOption\n                                      isDisabled={ option.disabled }\n                                      key={ index }\n                                      value={ option.value }\n                                      label={ option.label }\n                                  />\n                              )) }\n                          </FormSelect>\n                      </div>\n                  </FilterCardTitle>\n              </Card>\n          </Main>\n          <Wrapper className=\"automation-wrapper\">\n              <WrapperLeft>\n                  <Main style={ { paddingBottom: '0' } }>\n                      <Card>\n                          <CardTitle>Automation savings</CardTitle>\n                          <PFCardBody>\n                              { isLoading && !preflightError && <LoadingState /> }\n                              { !isLoading && formattedData.length <= 0 && <NoData /> }\n                              { formattedData.length > 0 && !isLoading && (\n                      <>\n                        <TopTemplatesSavings\n                            margin={ { top: 20, right: 20, bottom: 20, left: 70 } }\n                            id=\"d3-roi-chart-root\"\n                            data={ formattedData }\n                            selected={ selectedIds }\n                        />\n                        <p style={ { textAlign: 'center' } }>Templates</p>\n                      </>\n                              ) }\n                          </PFCardBody>\n                      </Card>\n                  </Main>\n                  <Main style={ { height: 0 } }>\n                      <Card style={ { height: '100%' } }>\n                          <CardTitle>Automation formula</CardTitle>\n                          <CardBody>\n                              <p>\n                                  <b>Manual cost for template x</b> =\n                                  <em>\n                        (time for a manual run on one host * (sum of all hosts\n                        across all job runs) ) * cost per hour\n                                  </em>\n                              </p>\n                              <p>\n                                  <b>Automation cost for template x</b> =\n                                  <em>\n                        cost of automation per hour * sum of total elapsed hours\n                        for a template\n                                  </em>\n                              </p>\n                              <p>\n                                  <b>Savings</b> =\n                                  <em>\n                        Sum of (manual cost - automation cost) across all\n                        templates\n                                  </em>\n                              </p>\n                          </CardBody>\n                      </Card>\n                  </Main>\n              </WrapperLeft>\n              <WrapperRight>\n                  <Main style={ { paddingBottom: '0', paddingLeft: '0' } }>\n                      <Card>\n                          <PFCardTitle style={ { paddingBottom: '0', borderTop: '3px solid #2B9AF3' } }>\n                    Total savings\n                          </PFCardTitle>\n                          <PFCardBody>\n                              <Title\n                                  headingLevel=\"h3\"\n                                  style={ { color: 'var(--pf-global--success-color--200)', fontSize: '2.5em' } }\n                              >\n                                  { totalSavings }\n                              </Title>\n                          </PFCardBody>\n                      </Card>\n                  </Main>\n                  <Main\n                      style={ {\n                          paddingLeft: '0',\n                          display: 'flex',\n                          flexDirection: 'column',\n                          flex: '1 1 0'\n                      } }\n                  >\n                      <Card style={ { height: '100%' } }>\n                          <CardTitle style={ { paddingBottom: '10px' } }>\n                    Calculate your automation\n                          </CardTitle>\n                          <CardBody style={ { flex: '1 1 0' } }>\n                              <InputAndText>\n                                  <p>Manual cost of automation</p>\n                                  <em\n                                      style={ { color: 'var(--pf-global--Color--dark-200)' } }\n                                  >\n                        (e.g. average salary of mid-level Software Engineer)\n\n                                  </em>\n                                  <InputGroup style={ { width: '50%', marginTop: '10px' } }>\n                                      <InputGroupText>\n                                          <DollarSignIcon />\n                                      </InputGroupText>\n                                      <TextInput\n                                          id=\"manual-cost\"\n                                          type=\"number\"\n                                          step=\"any\"\n                                          min=\"0\"\n                                          aria-label=\"manual-cost\"\n                                          value={ parseFloat(costManual) }\n                                          onChange={ (e) => setCostManual(e) }\n                                      />\n                                      <InputGroupText>/hr</InputGroupText>\n                                  </InputGroup>\n                              </InputAndText>\n                              <InputAndText style={ { paddingTop: '10px' } }>\n                                  <p>Automated process cost</p>\n                                  <InputGroup style={ { width: '50%' } }>\n                                      <InputGroupText>\n                                          <DollarSignIcon />\n                                      </InputGroupText>\n                                      <TextInput\n                                          id=\"automation-cost\"\n                                          type=\"number\"\n                                          step=\"any\"\n                                          min=\"0\"\n                                          aria-label=\"automation-cost\"\n                                          value={ parseFloat(costAutomation) }\n                                          onChange={ (e) => setCostAutomation(e) }\n                                      />\n                                      <InputGroupText>/hr</InputGroupText>\n                                  </InputGroup>\n                              </InputAndText>\n                              <p style={ { marginTop: 15 } }>\n                      Enter the time it takes to run the following templates manually.\n                              </p>\n                              { templatesList.map((data) => (\n                                  <div key={ data.id }>\n                                      <Tooltip content={ 'Click for list of jobs in the past month' } >\n                                          <Button\n                                              style={ { padding: '15px 0 10px' } }\n                                              component=\"a\"\n                                              onClick={ () => redirectToJobExplorer(data.id) }\n                                              variant=\"link\"\n                                          >\n                                              { data.name }\n                                          </Button>\n                                      </Tooltip>\n                                      <TemplateDetail>\n                                          <InputAndText key={ data.id }>\n                                              <InputGroup>\n                                                  <TextInput\n                                                      id={ data.id }\n                                                      type=\"number\"\n                                                      aria-label=\"time run manually\"\n                                                      value={ convertSecondsToMins(\n                                                          data.calculations[0].avg_run\n                                                      ) }\n                                                      onChange={ (e) => {\n                                                          const seconds = handleManualTimeChange(e);\n                                                          const updated = updateData(\n                                                              seconds,\n                                                              data.id,\n                                                              formattedData\n                                                          );\n                                                          setFormattedData(updated);\n                                                      } }\n                                                      isDisabled={ !data.isActive }\n                                                  />\n                                                  <InputGroupText>min</InputGroupText>\n                                              </InputGroup>\n                                          </InputAndText>\n                                          <TemplateDetailSubTitle>\n                            x { data.run_count } runs, { data.host_count } hosts\n                                          </TemplateDetailSubTitle>\n                                          <IconGroup>\n                                              <Popover\n                                                  aria-label=\"template detail popover\"\n                                                  position=\"left\"\n                                                  bodyContent={\n                                                      <TooltipWrapper>\n                                                          <p>\n                                                              <b>Total elapsed sum</b>:{ ' ' }\n                                                              { data.elapsed_sum.toFixed(2) }s\n                                                          </p>\n                                                          <p>\n                                                              <b>Success elapsed sum</b>:{ ' ' }\n                                                              { data.successful_elapsed_sum.toFixed(2) }s\n                                                          </p>\n                                                          <p>\n                                                              <b>Failed elapsed sum</b>:{ ' ' }\n                                                              { data.failed_elapsed_sum.toFixed(2) }s\n                                                          </p>\n                                                          <p>\n                                                              <b>Automation percentage</b>:{ ' ' }\n                                                              { formatPercentage(\n                                                                  data.template_automation_percentage.toFixed(\n                                                                      2\n                                                                  )\n                                                              ) }\n                                                          </p>\n                                                          <p>\n                                                              <b>Associated organizations</b>:{ ' ' }\n                                                              <span key={ data.id }>\n                                                                  { convertWithCommas(data.orgs, 'org_name') }\n                                                              </span>\n                                                          </p>\n                                                          <p>\n                                                              <b>Associated clusters</b>:{ ' ' }\n                                                              <span key={ data.id }>\n                                                                  { convertWithCommas(\n                                                                      data.clusters,\n                                                                      'cluster_name'\n                                                                  ) }\n                                                              </span>\n                                                          </p>\n                                                      </TooltipWrapper>\n                                                  }\n                                              >\n                                                  <InfoCircleIcon />\n                                              </Popover>\n                                          </IconGroup>\n                                      </TemplateDetail>\n                                      <p style={ { color: '#486B00' } }>\n                          ${ data.delta.toFixed(2) }\n                                      </p>\n                                  </div>\n                              )) }\n                          </CardBody>\n                      </Card>\n                  </Main>\n              </WrapperRight>\n          </Wrapper>\n        </>\n      ) }\n    </>\n    );\n};\n\nexport default AutomationCalculator;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nimport {\n    NotificationDrawerList as PFNotificationDrawerList,\n    NotificationDrawerListItem as PFNotificationDrawerListItem,\n    NotificationDrawerListItemBody,\n    NotificationDrawerListItemHeader\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkAltIcon } from '@patternfly/react-icons';\nimport LoadingState from '../Components/LoadingState';\nimport { capitalize } from '../Utilities/helpers';\nimport { stringify } from 'query-string';\n\nconst ExternalLinkAltIcon = styled(PFExternalLinkAltIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n  font-size: 14px;\n`;\n\nconst NotificationDrawerListItem = styled(PFNotificationDrawerListItem)`\n  border-top: 1px solid var(--pf-global--BorderColor--light-100\n    );\n  border-bottom::nth-child(odd): 1px solid var(--pf-global--BorderColor--light-100\n    );\n  box-shadow: none;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst NotificationDrawerList = styled(PFNotificationDrawerList)`\n    &:last-child {\n      border-bottom: 1px solid var(--pf-global--BorderColor--light-100\n        );\n    }\n`;\n\nconst stringifyDate = (date) => {\n    const oneHour = 60 * 60 * 1000;\n    const now = moment().utc();\n\n    if (now.isAfter(moment(date))) {\n        return `${now.diff(moment(date), 'days')} day(s) ago.`;\n    }\n\n    if (moment(date).isSame(now, 'day')) {\n        if (moment(date).valueOf() > oneHour) {\n            return  `${now.diff(moment(date), 'hours')} hour(s) ago.`;\n        }\n\n        return `${now.diff(moment(date), 'minutes')} minute(s) ago.`;\n    }\n};\n\nconst AllNotificationTemplate = ({ notifications }) =>\n    notifications.map(\n        ({ date, message, label, notification_id: id, tower_url: url }) => {\n            if (label === '' || label === 'notice') {\n                return (\n                    <NotificationDrawerListItem\n                        variant=\"info\"\n                        key={ date + '-' + id }\n                    >\n                        <NotificationDrawerListItemHeader\n                            variant=\"info\"\n                            title={\n                            <>\n                              { url ? (\n                                  <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                                      { capitalize(label) }\n                                      <ExternalLinkAltIcon />\n                                  </a>\n                              ) : capitalize(label) }\n                            </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody>\n                            { message }{ ' ' }\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n\n            if (label === 'error') {\n                return (\n                    <NotificationDrawerListItem\n                        variant=\"danger\"\n                        key={ date + '-' + id }\n                    >\n                        <NotificationDrawerListItemHeader\n                            variant=\"danger\"\n                            title={\n                            <>\n                              { url ? (\n                                  <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                                      { capitalize(label) }\n                                      <ExternalLinkAltIcon />\n                                  </a>\n                              ) : capitalize(label) }\n                            </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody timestamp={ stringifyDate(date) }>\n                            { message }{ ' ' }\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n\n            if (label === 'warning') {\n                return (\n                    <NotificationDrawerListItem\n                        variant=\"warning\"\n                        key={ date + '-' + id }\n                    >\n                        <NotificationDrawerListItemHeader\n                            variant=\"warning\"\n                            title={\n                            <>\n                              { url ? (\n                                  <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                                      { capitalize(label) }\n                                      <ExternalLinkAltIcon />\n                                  </a>\n                              ) : capitalize(label) }\n                            </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody timestamp={ stringifyDate(date) }>\n                            { message }{ ' ' }\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n        }\n    );\n\nconst ErrorNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'error')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem\n            variant=\"danger\"\n            key={ date + '-' + id }\n        >\n            <NotificationDrawerListItemHeader\n                variant=\"danger\"\n                title={\n                <>\n                  { url ? (\n                      <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                          { capitalize(label) }\n                          <ExternalLinkAltIcon />\n                      </a>\n                  ) : capitalize(label) }\n                </>\n                }\n            >\n            </NotificationDrawerListItemHeader>\n            <NotificationDrawerListItemBody timestamp={ stringify(date) }>\n                { message }{ ' ' }\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst NoticeNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'notice')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem\n            variant=\"info\"\n            key={ date + '-' + id }\n        >\n            <NotificationDrawerListItemHeader\n                variant=\"info\"\n                title={\n                <>\n                  { url ? (\n                      <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                          { capitalize(label) }\n                          <ExternalLinkAltIcon />\n                      </a>\n                  ) : capitalize(label) }\n                </>\n                }\n            >\n            </NotificationDrawerListItemHeader>\n            <NotificationDrawerListItemBody>\n                { message }{ ' ' }\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst WarningNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'warning')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem\n            variant=\"warning\"\n            key={ date + '-' + id }\n        >\n            <NotificationDrawerListItemHeader\n                variant=\"warning\"\n                title={\n                <>\n                  { url ? (\n                      <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                          { capitalize(label) }\n                          <ExternalLinkAltIcon />\n                      </a>\n                  ) : capitalize(label) }\n                </>\n                }\n            >\n            </NotificationDrawerListItemHeader>\n            <NotificationDrawerListItemBody>\n                { message }{ ' ' }\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst NotificationsList = ({ filterBy, notifications }) => (\n  <>\n    <NotificationDrawerList>\n        { notifications.length <= 0 && <LoadingState /> }\n        { filterBy === '' && (\n            <AllNotificationTemplate notifications={ notifications } />\n        ) }\n        { filterBy === 'notice' && (\n            <NoticeNotificationTemplate notifications={ notifications } />\n        ) }\n        { filterBy === 'error' && (\n            <ErrorNotificationTemplate notifications={ notifications } />\n        ) }\n        { filterBy === 'warning' && (\n            <WarningNotificationTemplate notifications={ notifications } />\n        ) }\n    </NotificationDrawerList>\n  </>\n);\n\nAllNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nErrorNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nWarningNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nNotificationsList.propTypes = {\n    notifications: PropTypes.array,\n    filterBy: PropTypes.string\n};\n\nexport default NotificationsList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoData from '../../Components/NoData';\nimport { preflightRequest, readClusters, readNotifications } from '../../Api';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle,\n    FormSelect,\n    FormSelectOption,\n    Pagination,\n    PaginationVariant,\n    NotificationDrawer\n} from '@patternfly/react-core';\n\nimport NotificationsList from '../../Components/NotificationsList';\n\nconst CardTitle = styled(PFCardTitle)`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n`;\n\nconst DropdownGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-end;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n\n  select {\n    margin: 0 10px;\n    width: 150px;\n\n    @media screen and (max-width: 1035px) {\n      margin: 10px 10px 0 0;\n    }\n\n    @media screen and (max-width: 865px) {\n      width: 100%;\n    }\n  }\n`;\n\nconst notificationOptions = [\n    {\n        value: 'please choose',\n        label: 'Select Notification Severity',\n        disabled: true\n    },\n    { value: 'error', label: 'View Critical', disabled: false },\n    { value: 'warning', label: 'View Warning', disabled: false },\n    { value: 'notice', label: 'View Notice', disabled: false },\n    { value: '', label: 'View All', disabled: false }\n];\n\nconst perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 }\n];\n\nfunction formatClusterName(data) {\n    const defaultClusterOptions = [\n        { value: 'please choose', label: 'Select cluster', disabled: true },\n        { value: '', label: 'All Clusters', disabled: false },\n        { value: -1, label: 'Unassociated', disabled: false }\n    ];\n    return data.reduce(\n        (formatted, { label, cluster_id: id, install_uuid: uuid }) => {\n            if (label.length === 0) {\n                formatted.push({ value: id, label: uuid, disabled: false });\n            } else {\n                formatted.push({ value: id, label, disabled: false });\n            }\n\n            return formatted;\n        },\n        defaultClusterOptions\n    );\n}\n\nconst initialQueryParams = {\n    limit: 5,\n    offset: 0\n};\n\nconst Notifications = () => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [ notificationsData, setNotificationsData ] = useState([]);\n    const [ clusterOptions, setClusterOptions ] = useState([]);\n    const [ selectedCluster, setSelectedCluster ] = useState('');\n    const [ firstRender, setFirstRender ] = useState(true);\n    const [ isLoading, setIsLoading ] = useState(true);\n    const [ meta, setMeta ] = useState({});\n    const [ currPage, setCurrPage ] = useState(1);\n    const {\n        queryParams,\n        setId,\n        setLimit,\n        setOffset,\n        setSeverity\n    } = useQueryParams(initialQueryParams);\n\n    useEffect(() => {\n        if (firstRender) {\n            return;\n        }\n\n        const getData = () => {\n            return readNotifications({ params: queryParams });\n        };\n\n        const update = async () => {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            getData().then(\n                ({ notifications: notificationsData = [], meta }) => {\n                    setNotificationsData(notificationsData);\n                    setMeta(meta);\n                    setIsLoading(false);\n                }\n            );\n        };\n\n        update();\n    }, [ queryParams ]);\n\n    useEffect(() => {\n        insights.chrome.appNavClick({ id: 'notifications', secondaryNav: true });\n\n        let ignore = false;\n        const fetchEndpoints = () => {\n            return Promise.all(\n                [ readClusters(), readNotifications({ params: queryParams }) ].map(p =>\n                    p.catch(() => [])\n                )\n            );\n        };\n\n        async function initializeWithPreflight() {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            await preflightRequest().catch(error => {\n                setPreFlightError({ preflightError: error });\n            });\n            fetchEndpoints().then(\n                ([\n                    { templates: clustersData = []},\n                    { notifications: notificationsData = [], meta }\n                ]) => {\n                    if (!ignore) {\n                        const clusterOptions = formatClusterName(clustersData);\n                        setClusterOptions(clusterOptions);\n                        setNotificationsData(notificationsData);\n                        setMeta(meta);\n                        setFirstRender(false);\n                        setIsLoading(false);\n                    }\n                }\n            );\n        }\n\n        initializeWithPreflight();\n        return () => (ignore = true);\n    }, []);\n\n    const returnOffsetVal = page => {\n        let offsetVal = (page - 1) * queryParams.limit;\n        return offsetVal;\n    };\n\n    const handleSetPage = page => {\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    const handlePerPageSelect = (perPage, page) => {\n        setLimit(perPage);\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={ 'Notifications' } />\n            </PageHeader>\n            { preflightError && (\n                <Main>\n                    <EmptyState { ...preflightError } />\n                </Main>\n            ) }\n            { !preflightError && (\n        <>\n          <Main>\n              <Card>\n                  <CardTitle>\n                      <DropdownGroup>\n                          <FormSelect\n                              name=\"selectedCluster\"\n                              value={ selectedCluster }\n                              onChange={ value => {\n                                  setSelectedCluster(value);\n                                  setId(value);\n                                  setOffset(0);\n                                  setCurrPage(1);\n                              } }\n                              aria-label=\"Select Cluster\"\n                          >\n                              { clusterOptions.map(({ value, label, disabled }, index) => (\n                                  <FormSelectOption\n                                      isDisabled={ disabled }\n                                      key={ index }\n                                      value={ value }\n                                      label={ label }\n                                  />\n                              )) }\n                          </FormSelect>\n                          <FormSelect\n                              name=\"selectedNotification\"\n                              value={ queryParams.severity || '' }\n                              onChange={ value => {\n                                  setSeverity(value);\n                                  setOffset(0);\n                                  setCurrPage(1);\n                              } }\n                              aria-label=\"Select Notification Type\"\n                          >\n                              { notificationOptions.map(\n                                  ({ disabled, value, label }, index) => (\n                                      <FormSelectOption\n                                          isDisabled={ disabled }\n                                          key={ index }\n                                          value={ value }\n                                          label={ label }\n                                      />\n                                  )\n                              ) }\n                          </FormSelect>\n                      </DropdownGroup>\n                      <Pagination\n                          itemCount={ meta && meta.count ? meta.count : 0 }\n                          widgetId=\"pagination-options-menu-top\"\n                          perPageOptions={ perPageOptions }\n                          perPage={ queryParams.limit }\n                          page={ currPage }\n                          variant={ PaginationVariant.top }\n                          onPerPageSelect={ (_event, perPage, page) => {\n                              handlePerPageSelect(perPage, page);\n                          } }\n                          onSetPage={ (_event, pageNumber) => {\n                              handleSetPage(pageNumber);\n                          } }\n                          isCompact\n                      />\n                  </CardTitle>\n                  <CardBody>\n                      { isLoading && <LoadingState /> }\n                      { !isLoading && notificationsData.length <= 0 && <NoData /> }\n                      { !isLoading && notificationsData.length > 0 && (\n                          <NotificationDrawer>\n                              <NotificationsList\n                                  filterBy={ queryParams.severity || '' }\n                                  options={ notificationOptions }\n                                  notifications={ notificationsData }\n                              />\n                          </NotificationDrawer>\n                      ) }\n                      <Pagination\n                          itemCount={ meta && meta.count ? meta.count : 0 }\n                          widgetId=\"pagination-options-menu-bottom\"\n                          perPageOptions={ perPageOptions }\n                          perPage={ queryParams.limit }\n                          page={ currPage }\n                          variant={ PaginationVariant.bottom }\n                          onPerPageSelect={ (_event, perPage, page) => {\n                              handlePerPageSelect(perPage, page);\n                          } }\n                          onSetPage={ (_event, pageNumber) => {\n                              handleSetPage(pageNumber);\n                          } }\n                          style={ { marginTop: '20px' } }\n                      />\n                  </CardBody>\n              </Card>\n          </Main>\n        </>\n            ) }\n        </React.Fragment>\n    );\n};\n\nexport default Notifications;\n","import moment from 'moment';\n\n/*\n * isNumeric - return true if input is a real number\n */\nexport function isNumeric(val) {\n    if (val === 0 || val === '0') {\n        return true;\n    }\n\n    if (parseInt(val)) {\n        return true;\n    }\n\n    if (parseFloat(val)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function trimStr(str) {\n    return str.toString().replace(/['\"]+/g, '');\n}\n\nexport function formatDateTime(dateTime) {\n    return moment(new Date(dateTime).toISOString()).format('M/D/YYYY h:mm:ssa');\n}\n\nexport function formatDate(date) {\n    return moment(date).format('YYYY-MM-DD');\n}\n\nexport function formatSeconds(seconds) {\n    return moment().startOf('day')\n    .seconds(seconds)\n    .format('H:mm:ss');\n}\n\nexport function getTotal(data) {\n    if (!data) {\n        return;\n    } else {\n        let total = 0;\n        data.forEach(datum => {\n            total += parseInt(datum.count);\n        });\n        return total;\n    }\n}\n\nexport function formatPercentage(val) {\n    if (isNaN(val)) {\n        return;\n    }\n\n    return `${val}%`;\n}\n\nexport const capitalize = (s) => {\n    if (typeof s !== 'string') {return '';}\n\n    return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport function calculateDelta(a, b) {\n    if (!isNumeric(a) || !isNumeric(b)) {\n        return 0;\n    }\n\n    // never return less than zero ...\n    if ((b - a) < 0) {\n        return 0;\n    }\n\n    return b - a;\n}\n\nexport function convertMinsToMs(mins) {\n    if (!parseInt(mins)) {\n        return 0;\n    }\n\n    return mins * 60000;\n}\n\nexport function convertMsToMins(ms) {\n    if (!parseInt(ms)) {\n        return 0;\n    }\n\n    return ms / 60000;\n}\n\nexport function convertSecondsToMins(seconds) {\n    if (!parseInt(seconds)) {\n        return 0;\n    }\n\n    return seconds / 60;\n}\n\nexport function convertMinsToSeconds(mins) {\n    if (!parseInt(mins) || parseInt(mins) < 0) {\n        return 0;\n    }\n\n    return +parseInt(mins) * 60;\n}\n\nexport function convertSecondsToHours(seconds) {\n    if (!parseInt(seconds)) {\n        return 0;\n    }\n\n    return seconds / 3600;\n}\n\nexport function convertWithCommas(arr, key) {\n    const split = arr.reduce((strs, datum) => { strs.push(datum[key]); return strs; }, []);\n    return split.join(', ');\n}\n\nexport function formatJobType(type) {\n    return (type === 'job' ? 'Playbook run' : 'Workflow job');\n}\n\nexport function formatJobStatus(status) {\n    return (status === 'successful' ? 'Success' : 'Failed');\n}\n\nexport function formatJobDetailsURL(baseURL, jobId) {\n    const subDirectory1 = 'job';\n    const subDirectory2 = 'details';\n    return `${baseURL}/#/${subDirectory1}/${jobId}/${subDirectory2}/`;\n}\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst DefaultLoadingState = () => (\n    <EmptyState variant={ EmptyStateVariant.full }>\n        <EmptyStateIcon icon={ CubesIcon } />\n        <Title headingLevel=\"h5\" size=\"lg\">\n            Loading...\n        </Title>\n        <EmptyStateBody>\n            Please wait.\n        </EmptyStateBody>\n    </EmptyState>\n);\n\nexport default DefaultLoadingState;\n","/*eslint-disable max-len */\n/*eslint max-len: [\"error\", { \"ignoreTemplateLiterals\": true }]*/\n/*eslint max-len: [\"error\", { \"ignoreStrings\": true }]*/\nimport { stringify } from 'query-string';\n\nconst apiVersion = 'v0';\nconst barChartEndpoint = `/api/tower-analytics/${apiVersion}/chart30/`;\nconst clustersEndpoint = `/api/tower-analytics/${apiVersion}/clusters/`;\nconst groupedBarChartEndpoint = `/api/tower-analytics/${apiVersion}/jobs_by_date_and_org_30/`;\nconst modulesEndpoint = `/api/tower-analytics/${apiVersion}/modules/`;\nconst notificationsEndPoint = `/api/tower-analytics/${apiVersion}/notifications/`;\nconst pieChart1Endpoint = `/api/tower-analytics/${apiVersion}/job_runs_by_org_30/`;\nconst pieChart2Endpoint = `/api/tower-analytics/${apiVersion}/job_events_by_org_30/`;\nconst preflightEndpoint = `/api/tower-analytics/${apiVersion}/authorized/`;\nconst templateJobsEndpoint = `/api/tower-analytics/${apiVersion}/template_jobs/`;\nconst templatesEndPoint = `/api/tower-analytics/${apiVersion}/templates/`;\nconst roiEndpoint = `/api/tower-analytics/${apiVersion}/roi_templates/`;\nconst jobExplorerEndpoint = '/api/tower-analytics/v1/job_explorer/';\nconst jobExplorerOptionsEndpoint =\n  '/api/tower-analytics/v1/job_explorer_options/';\n\nfunction getAbsoluteUrl() {\n    const url = window.location.href;\n    let arr = url.split('/');\n    arr.pop();\n    return arr.join('/');\n}\n\nfunction handleResponse(response) {\n    return response.json().then(json => {\n        if (response.ok) {\n            return json;\n        }\n\n        if (response.status === 404 || response.status === 401) {\n            return Promise.reject({\n                status: response.status,\n                message: json\n            });\n        } else {\n            return Promise.reject(json);\n        }\n    });\n}\n\nexport const readTemplateJobs = (id, { params = {}}) => {\n    if (!id) {\n        return;\n    }\n\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(templateJobsEndpoint + id + '/', formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const preflightRequest = () => {\n    return fetch(preflightEndpoint).then(handleResponse);\n};\n\nexport const readClusters = () => {\n    return fetch(clustersEndpoint).then(handleResponse);\n};\n\nexport const readChart30 = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(barChartEndpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readJobsByDateAndOrg = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(groupedBarChartEndpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readModules = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(modulesEndpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readTemplates = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(templatesEndPoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readNotifications = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(notificationsEndPoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readJobExplorerOptions = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(jobExplorerOptionsEndpoint, formattedUrl);\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readJobExplorer = ({ params = {}}) => {\n    const { limit, offset, sort_by } = params;\n    const paginationParams = {\n        limit,\n        offset,\n        sort_by\n    };\n    const qs = stringify(paginationParams);\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(jobExplorerEndpoint, formattedUrl);\n    url.search = qs;\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readJobRunsByOrg = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(pieChart1Endpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readJobEventsByOrg = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(pieChart2Endpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readROI = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(roiEndpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n","import { useReducer } from 'react';\nimport moment from 'moment';\n\nimport { formatDate } from '../Utilities/helpers';\n\nexport const useQueryParams = initial => {\n    const paramsReducer = (state, { type, value }) => {\n        switch (type) {\n            /* v0 api reducers */\n            case 'SET_STARTDATE':\n                return { ...state, startDate: value };\n            case 'SET_ENDDATE':\n                return { ...state, endDate: value };\n            case 'SET_ID':\n                if (!parseInt(value)) {\n                    const { id: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, id: parseInt(value) };\n            case 'SET_LIMIT':\n                if (!parseInt(value.limit)) {\n                    const { limit: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, limit: parseInt(value.limit) };\n            /* v1 api reducers */\n            case 'SET_OFFSET':\n            case 'SET_ATTRIBUTES':\n            case 'SET_JOB_TYPE':\n            case 'SET_STATUS':\n            case 'SET_ORG':\n            case 'SET_CLUSTER':\n            case 'SET_TEMPLATE':\n            case 'SET_SORTBY':\n            case 'SET_ROOT_WORKFLOWS_AND_JOBS':\n                return { ...state, ...value };\n            case 'SET_QUICK_DATE_RANGE': {\n                let newState = { ...state };\n                if (value !== 'custom') {\n                    newState = { ...newState, start_date: null, end_date: null };\n                }\n\n                newState = { ...newState, ...value };\n                return newState;\n            }\n\n            case 'SET_SEVERITY':\n                if (value.severity === '') {\n                    const { severity: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, ...value };\n            case 'SET_START_DATE':\n            case 'SET_END_DATE': {\n                let newValues = {};\n                Object.entries(value).forEach(([ key, value ]) => {\n                    newValues[key] = formatDate(value);\n                });\n                return { ...state, ...newValues };\n            }\n\n            case 'RESET_FILTER':\n                return { ...state,\n                    status: [],\n                    quick_date_range: '',\n                    job_type: [],\n                    org_id: [],\n                    cluster_id: [],\n                    template_id: [],\n                    sort_by: '',\n                    start_date: '',\n                    end_date: '',\n                    only_root_workflows_and_standalone_jobs: false\n                };\n            default:\n                throw new Error();\n        }\n    };\n\n    const [ queryParams, dispatch ] = useReducer(paramsReducer, { ...initial });\n\n    const actionMapper = {\n        status: 'SET_STATUS',\n        quick_date_range: 'SET_QUICK_DATE_RANGE',\n        job_type: 'SET_JOB_TYPE',\n        org_id: 'SET_ORG',\n        cluster_id: 'SET_CLUSTER',\n        template_id: 'SET_TEMPLATE',\n        sort_by: 'SET_SORTBY',\n        start_date: 'SET_START_DATE',\n        end_date: 'SET_END_DATE',\n        only_root_workflows_and_standalone_jobs: 'SET_ROOT_WORKFLOWS_AND_JOBS'\n    };\n\n    return {\n        queryParams,\n        dispatch,\n        setLimit: limit => dispatch({ type: 'SET_LIMIT', value: { limit }}),\n        setOffset: offset => dispatch({ type: 'SET_OFFSET', value: { offset }}),\n        setSeverity: severity => dispatch({ type: 'SET_SEVERITY', value: { severity }}),\n        setFromToolbar: (varName, value = null) => {\n            if (!varName) {\n                dispatch({ type: 'RESET_FILTER' });\n            } else {\n                dispatch({ type: actionMapper[varName], value: { [varName]: value }});\n            }\n        },\n        /* v0 api usage after this line */\n        setEndDate: () => {\n            const endDate = moment().format('YYYY-MM-DD');\n            dispatch({ type: 'SET_ENDDATE', value: endDate });\n        },\n        setId: value => dispatch({ type: 'SET_ID', value }),\n        setStartDate: days => {\n            let startDate;\n            if (days === 7) {\n                startDate = moment()\n                .subtract(1, 'week')\n                .format('YYYY-MM-DD');\n            }\n\n            if (days === 14) {\n                startDate = moment()\n                .subtract(2, 'weeks')\n                .format('YYYY-MM-DD');\n            }\n\n            if (days === 31) {\n                startDate = moment()\n                .subtract(1, 'month')\n                .format('YYYY-MM-DD');\n            } else {\n                startDate = moment()\n                .subtract(days, 'days')\n                .format('YYYY-MM-DD');\n            }\n\n            dispatch({ type: 'SET_STARTDATE', value: startDate });\n        },\n        setStartDateAsString: value => dispatch({ type: 'SET_STARTDATE', value })\n    };\n};\n"],"sourceRoot":""}