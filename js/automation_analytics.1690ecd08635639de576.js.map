{"version":3,"sources":["webpack:///./src/Components/EmptyState.js","webpack:///./src/Charts/BaseChart.js","webpack:///./src/Components/NoData.js","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/Components/NoResults.js","webpack:///./src/Components/ApiErrorState.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Components/JobStatus.js","webpack:///./src/Components/JobExplorerList.js","webpack:///./src/Components/Toolbar/CategoryDropdown.js","webpack:///./src/Components/Toolbar/CustomDateSelector.js","webpack:///./src/Components/Toolbar/constants.js","webpack:///./src/Components/Toolbar/ToolbarFilterItem.js","webpack:///./src/Components/Toolbar/helpers.js","webpack:///./src/Components/Toolbar/Toolbar.js","webpack:///./src/Components/Toolbar/index.js","webpack:///./src/Containers/JobExplorer/JobExplorer.js","webpack:///./src/Utilities/Tooltip.js","webpack:///./src/Charts/BarChart.js","webpack:///./src/Charts/LineChart.js","webpack:///./src/Components/ModulesList.js","webpack:///./src/Components/TemplatesList.js","webpack:///./src/Containers/Clusters/Clusters.js","webpack:///./src/Utilities/Legend.js","webpack:///./src/Utilities/colors.js","webpack:///./src/Charts/GroupedBarChart.js","webpack:///./src/Charts/PieChart.js","webpack:///./src/Containers/OrganizationStatistics/OrganizationStatistics.js","webpack:///./src/Charts/ROITopTemplates.js","webpack:///./src/Containers/AutomationCalculator/AutomationCalculator.js","webpack:///./src/Components/NotificationsList.js","webpack:///./src/Containers/Notifications/Notifications.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Components/LoadingState.js","webpack:///./src/Api.js","webpack:///./src/Utilities/useQueryParams.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_patternfly_react_core_dist_js_components_Button_Button_js__WEBPACK_IMPORTED_MODULE_2__","_patternfly_react_core_dist_js_components_Title_Title_js__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_core_dist_js_components_EmptyState_EmptyState_js__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateIcon_js__WEBPACK_IMPORTED_MODULE_5__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateBody_js__WEBPACK_IMPORTED_MODULE_6__","_patternfly_react_icons_dist_js_icons_wrench_icon__WEBPACK_IMPORTED_MODULE_7__","_patternfly_react_icons_dist_js_icons_wrench_icon__WEBPACK_IMPORTED_MODULE_7___default","DefaultEmptyState","_ref","error","preflightError","a","createElement","variant","full","icon","status","Fragment","headingLevel","size","href","target","rel","onClick","window","location","reload","propTypes","object","__webpack_exports__","initializeChart","Chart","BaseChart","props","id","margin","react__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","getWidth","parseInt","d3__WEBPACK_IMPORTED_MODULE_3__","style","left","right","getHeight","top","bottom","prop_types__WEBPACK_IMPORTED_MODULE_2___default","string","element","_patternfly_react_core_dist_js_components_Title_Title_js__WEBPACK_IMPORTED_MODULE_1__","_patternfly_react_core_dist_js_components_EmptyState_EmptyState_js__WEBPACK_IMPORTED_MODULE_2__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateIcon_js__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_4___default","map","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","e","Error","code","keys","Object","resolve","module","exports","Components_NoResults","react_default","EmptyState_EmptyState","EmptyStateIcon","search_icon_default","Title","EmptyStateBody","ApiErrorState_ApiErrorState","message","small","exclamation_circle_icon_default","color","global_danger_color_200","value","prop_types_default","Components_ApiErrorState","constants_jobExplorer","attributes","defaultParams","quickDateRange","jobType","orgId","clusterId","templateId","sortBy","startDate","endDate","onlyRootWorkflowsAndStandaloneJobs","limit","JobStatus_JobStatus","Label","getColor","check_circle_icon_default","sync_alt_icon_default","exclamation_triangle_icon_default","clock_icon_default","getIcon","str","charAt","toUpperCase","slice","capitalized","oneOf","Components_JobStatus","headerLabels","ExternalLinkIcon","styled_components_browser_esm","external_link_alt_icon_default","_templateObject","JobExplorerList_DataListCell","DataListCell","_templateObject2","DataListCellHeader","_templateObject3","JobExplorerList_DataListItemCells","DataListItemCells","_templateObject4","JobExplorerList_DataListToggle","DataListToggle","_templateObject5","JobExplorerList_buildListRow","items","ariaLabel","ariaLabelledBy","windowWidth","_useState","react","_useState2","slicedToArray_default","isExpanded","setIsExpanded","item","count","DataListItem","key","aria-labelledby","includes","concat","DataListItemRow","aria-controls","expanded","idx","indexOf","newExpanded","toConsumableArray_default","length","toggle","dataListCells","tower_link","fontWeight","template_name","Tooltip","content","cluster_name","org_name","helpers","job_type","DataListContent","aria-label","isHidden","created","started","finished","JobExplorerList_AllJobsTemplate","jobs","_useState3","innerWidth","_useState4","setWindowWidth","onResize","addEventListener","removeEventListener","JobExplorerList_JobExplorerList","_ref2","_useState5","_useState6","LoadingState","DataList","isCompact","labels","paddingLeft","label","JobExplorerList_buildHeader","array","number","Components_JobExplorerList","CategoryDropdown_CategoryDropdown","selected","_ref$setSelected","setSelected","_ref$categories","categories","ToolbarItem","Select","isOpen","onToggle","onSelect","_event","selection","selections","placeholderText","name","SelectOption","func","Toolbar_CategoryDropdown","CustomDateSelector_CustomDateSelector","_ref$onInputChange","onInputChange","_ref$startDate","_ref$endDate","InputGroup","TextInput","type","onChange","Toolbar_CustomDateSelector","optionsForCategories","isSingle","placeholder","ToolbarFilterItem_ToolbarFilterItem","categoryKey","_ref$filter","filter","_ref$values","values","_ref$isVisible","isVisible","_ref$hasChips","hasChips","setFilter","setExpanded","options","ToolbarFilter","showToolbarItem","chips","comparator","val","forEach","i","undefined","handleSingleChips","reduce","acc","Number","isInteger","cmpItem","push","handleCheckboxChips","categoryName","deleteChip","valueToDelete","keyToDelete","find","filteredArr","event","checked","_ref3","description","isRequired","any","bool","Toolbar_ToolbarFilterItem","Toolbar_ToolbarGroup","ToolbarGroup","Toolbar_templateObject","Toolbar_ToolbarContent","ToolbarContent","Toolbar_templateObject2","Toolbar_FilterableToolbar","filters","setFilters","pagination","_ref$hasSettings","hasSettings","currentCategory","setCurrentCategory","settingsExpanded","setSettingsExpanded","filterCategories","objectWithoutProperties_default","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarToggleGroup","toggleIcon","filter_icon_default","breakpoint","Button","el","sort_amount_down_icon_default","isActive","cog_icon_default","varian","visibility","default","lg","Card","isFlat","backgroundColor","CardHeader","CardActions","times_icon_default","CardTitle","CardBody","Switch","labelOff","isChecked","position","question_circle_icon_default","Components_Toolbar","JobExplorer_CardHeader","JobExplorer_templateObject","CompactPagination","Pagination","JobExplorer_templateObject2","JobExplorer_Pagination","JobExplorer_templateObject3","perPageOptions","title","initialQueryParams","objectSpread_default","initialOptionsParams","JobExplorer_JobExplorer","search","history","setPreFlightError","apiError","setApiError","jobExplorerData","setJobExplorerData","_useState7","_useState8","isLoading","setIsLoading","_useState9","_useState10","meta","setMeta","_useState11","_useState12","currPage","setCurrPage","_useState13","_useState14","orgIds","setOrgIds","_useState15","_useState16","clusterIds","setClusterIds","_useState17","_useState18","templateIds","setTemplateIds","_useState19","_useState20","setSortBy","_useState21","_useState22","statuses","setStatuses","_useState23","_useState24","jobTypes","setJobTypes","_useState25","_useState26","quickDateRanges","setQuickDateRanges","initialSearchParams","query_string","arrayFormat","combined","_useQueryParams","useQueryParams","queryParams","urlMappedQueryParams","setLimit","setOffset","setFromToolbar","optionsQueryParams","updateURL","jobExplorer","paths","pathname","_initializeWithPreflight","asyncToGenerator_default","regenerator_default","mark","_callee","wrap","_context","prev","next","insights","chrome","auth","getUser","Api","catch","params","then","cluster_id","org_id","template_id","quick_date_range","sort_by","finally","stop","apply","this","arguments","appNavClick","secondaryNav","initializeWithPreflight","_callee2","_context2","_ref4","_ref4$items","update","returnOffsetVal","page","handleSetPage","nextOffset","handlePerPageSelect","perPage","PageHeader","Main","EmptyState","itemCount","widgetId","dropDirection","onPerPageSelect","onSetPage","pageNumber","marginTop","Utilities_Tooltip","opts","_this","classCallCheck_default","defineProperty_default","d","success","fail","total","x","d3","pageX","svg","node","getBoundingClientRect","y","pageY","formatTooltipDate","toolTipWidth","toolTipBase","width","chartWidth","flipped","RAN","FAIL","TOTAL","date","text","DATE","data","jobsWidth","getComputedTextLength","failed","successful","successTextWidth","failTextWidth","adjustedWidth","maxTextPerc","boxWidth","overage","boundingBox","attr","toolTipPoint","circleSuccess","circleFail","failedIcon","successIcon","successText","failText","clickMore","interrupt","transition","delay","colors","draw","append","textWidthThreshold","BarChart_BarChart","BarChart","possibleConstructorReturn_default","getPrototypeOf_default","call","bind","assertThisInitialized_default","init","resize","redirectToJobExplorer","state","formattedData","timeout","formattedDate","start_date","end_date","_this2","clearTimeout","setState","setTimeout","remove","ticks","parseTime","_this$props","unformattedData","formatted","Date","height","rangeRound","padding","range","barTooltip","layers","order","offset","stack","domain","tickSize","selectAll","maxTicks","Math","round","tickValues","tickFormat","layer","enter","_d","bandwidth","duration","ease","on","handleMouseOver","handleMouseOut","prevProps","Charts_BarChart","withRouter","LineChart_LineChart","LineChart","updateCluster","path","attrTween","tweenDash","l","getTotalLength","t","tooltip","successLine","curve","failLine","defined","isNaN","vertical","handleMouseMove","intersectX","cx","baseVal","Charts_LineChart","ModulesList_DataListCell","ModulesList_DataListItem","DataCellEnd","ModulesList_ModulesList","modules","maxHeight","overflow","background","border","NoData","index","Components_ModulesList","TemplatesList_success","circle_icon_default","marginRight","TemplatesList_fail","TemplatesList_DataListCell","TemplatesList_templateObject","PFDataListItemNoBorder","TemplatesList_templateObject2","TemplatesList_DataListItem","TemplatesList_templateObject3","DataListItemCompact","DataListCellCompact","DataListFocus","div","_templateObject6","TemplatesList_DataCellEnd","_templateObject7","DataCellEndCompact","_templateObject8","TemplatesList_TemplatesList","templates","isModalOpen","setIsModalOpen","selectedId","setSelectedId","selectedTemplate","setSelectedTemplate","relatedJobs","setRelatedJobs","related_jobs","Modal","onClose","actions","total_run_count","total_run","average_run","success_rate","most_failed_tasks","percentage","fail_rate","task_name","TemplatesList_formatTopFailedTask","component","job","job_id","job_name","cluster_label","install_uuid","start_time","total_time","Components_TemplatesList","Clusters_CardTitle","Clusters_templateObject","timeFrameOptions","disabled","Clusters_initialQueryParams","moment_default","subtract","format","barChartData","setBarChartData","lineChartData","setLineChartData","templatesData","setTemplatesData","modulesData","setModulesData","clusterOptions","setClusterOptions","clusterTimeFrame","setClusterTimeFrame","selectedCluster","setSelectedCluster","setEndDate","setStartDate","setId","_ref3$templates","uuid","formatClusterName","Promise","all","_ref5","_ref5$0$data","chartData","_ref5$1$modules","_ref5$2$templates","paddingBottom","paddingTop","display","justifyContent","FormSelect","_ref6","FormSelectOption","isDisabled","option","className","Container","LegendDetail","Wrapper","Color","attrs","span","SubTitle","Legend_Switch","Legend_Legend","Legend","handleChange","_isChecked","parseFloat","some","Utilities_Legend","pfmulti","GroupedBarChart_Wrapper","GroupedBarChart_templateObject","GroupedBarChart_color","GroupedBarChart_Tooltip","orgName","GroupedBarChart_GroupedBarChart","GroupedBarChart","handleToggle","orgsList","orgs","_this3","s","_this4","org","timeFrame","selectedOrgs","x0","x1","xAxis","yAxis","dates","selectedOrgNames","exit","bars","merge","subEnter","darker","_this$state","isAccessible","Charts_GroupedBarChart","PieChart_Wrapper","PieChart_templateObject","PieChart_Tooltip","perc","percSuccess","drawn","percent","maxLength","percentageTotal","percentageSuccess","boundingBOx","showSuccess","boundingHeight","boundingWidth","PieChart_PieChart","PieChart","sort","b","radius","min","datum","donutTooltip","pie","arc","outerRadius","innerRadius","classed","Charts_PieChart","OrganizationStatistics_CardTitle","OrganizationStatistics_templateObject","CardContainer","OrganizationStatistics_templateObject2","TopCard","OrganizationStatistics_templateObject3","sortOptions","OrganizationStatistics_initialQueryParams","pieChart1Data","setPieChart1Data","pieChart2Data","setPieChart2Data","groupedBarChartData","setGroupedBarChartData","timeframe","setTimeframe","sortOrder","setSortOrder","firstRender","setFirstRender","ignore","fetchEndpoints","p","_ref3$0$dates","_ref3$1$usages","usages","_ref3$2$usages","_ref5$0$dates","_ref5$1$usages","_ref5$2$usages","setLimitValue","marginLeft","ROITopTemplates_Tooltip","savings","manualCost","automationCost","scrollLeftOffset","scrollLeft","formatDollars","delta","calculations","cost","nameWidth","savingsWidth","manualCostWidth","automationCostWidth","widestTextElem","amount","toFixed","toString","replace","ROITopTemplates_TopTemplatesSavings","TopTemplatesSavings","unfiltered","row","formatYAxisValue","taskNames","ROITopTemplates","FilterCardTitle","defaultAvgRunVal","defaultCostAutomation","defaultCostManual","InputAndText","TemplateDetail","TemplateDetailSubTitle","em","TooltipWrapper","IconGroup","WrapperLeft","WrapperRight","_templateObject9","pastYear","pastYTD","startOf","pastQuarter","pastMonth","AutomationCalculator_initialQueryParams","formatData","response","defaults","successful_run_count","successful_elapsed_sum","successful_host_run_count_avg","successful_host_run_count","elapsed_sum","failed_elapsed_sum","clusters","template_automation_percentage","run_count","host_count","avg_run","AutomationCalculator_updateData","seconds","updatedData","AutomationCalculator_handleManualTimeChange","minutes","AutomationCalculator_formatSelectedIds","arr","AutomationCalculator_handleToggle","currentSelection","AutomationCalculator_computeTotalSavings","costAutomation","costManual","costAutomationPerHour","costManualPerHour","floatToStringWithCommas","filterDataBySelectedIds","unfilteredData","selectedIds","setTemplatesIsActive","templatesList","setCostManual","setCostAutomation","totalSavings","setTotalSavings","setUnfilteredData","setFormattedData","setTemplatesList","setSelectedIds","roiTimeFrame","setRoiTimeFrame","setStartDateAsString","totalWithCommas","filteredData","getData","_ref4$templates","flex","textAlign","InputGroupText","dollar_sign_icon_default","step","flexDirection","Tooltip_Tooltip","updated","entryDelay","exitDelay","info_circle_icon_default","toggle_on_icon_default","toggle_off_icon_default","ArrowIcon","arrow_icon_default","NotificationsList_AllNotificationTemplate","notifications","notification_id","url","tower_url","Alert","isInline","danger","warning","NotificationsList_ErrorNotificationTemplate","notification","NotificationsList_NoticeNotificationTemplate","NotificationsList_WarningNotificationTemplate","_ref7","_ref8","NotificationsList_NotificationsList","_ref9","filterBy","AlertGroup","Components_NotificationsList","Notifications_CardTitle","Notifications_templateObject","TitleWithBadge","DropdownGroup","notificationOptions","notificationsData","setNotificationsData","setSeverity","_ref3$notifications","_ref5$0$templates","clustersData","_ref5$","_ref5$$notifications","Badge","isRead","severity","trimStr","formatDateTime","formatDate","formatSeconds","getTotal","formatPercentage","capitalize","calculateDelta","convertSecondsToMins","convertMinsToSeconds","convertSecondsToHours","convertWithCommas","formatJobType","keysToCamel","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","isNumeric","dateTime","toISOString","mins","strs","join","o","Array","isArray","isObject","k","$1","toCamelCase","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateBody_js__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_5__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_5___default","readTemplateJobs","preflightRequest","readClusters","readChart30","readJobsByDateAndOrg","readModules","readTemplates","readNotifications","readJobExplorerOptions","readJobExplorer","readJobRunsByOrg","readJobEventsByOrg","readROI","query_string__WEBPACK_IMPORTED_MODULE_0__","barChartEndpoint","clustersEndpoint","groupedBarChartEndpoint","modulesEndpoint","notificationsEndPoint","pieChart1Endpoint","pieChart2Endpoint","preflightEndpoint","templateJobsEndpoint","templatesEndPoint","roiEndpoint","getAbsoluteUrl","split","pop","handleResponse","json","ok","reject","_ref$params","formattedUrl","URL","searchParams","fetch","_ref2$params","_ref3$params","_ref4$params","_ref5$params","_ref6$params","_ref7$params","method","body","JSON","stringify","_ref8$params","paginationParams","qs","_ref9$params","_ref10","_ref10$params","_ref11","_ref11$params","initial","_useReducer","react__WEBPACK_IMPORTED_MODULE_4__","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2___default","newState","newValues","entries","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default","_Utilities_helpers__WEBPACK_IMPORTED_MODULE_6__","_useReducer2","dispatch","actionMapper","urlFormatted","letter","toLowerCase","camelToSnakeCase","varName","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default","moment__WEBPACK_IMPORTED_MODULE_5___default","days"],"mappings":"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AAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,O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","file":"js/automation_analytics.1690ecd08635639de576.js","sourcesContent":["/*eslint max-len: [\"error\", { \"ignoreStrings\": true }]*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Button,\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { WrenchIcon } from '@patternfly/react-icons';\n\nconst DefaultEmptyState = ({ preflightError: error }) => (\n    <EmptyState variant={ EmptyStateVariant.full }>\n        <EmptyStateIcon icon={ WrenchIcon } />\n        { error.status === 404 && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    No data found\n                </Title>\n                <EmptyStateBody>\n                    Please visit <a href='https://docs.ansible.com/ansible-tower/latest/html/administration/usability_data_collection.html#automation-analytics' target='_blank' rel='noopener noreferrer'>here</a> to learn how to enable Automation Analytics.\n                </EmptyStateBody>\n            </>\n        ) }\n        { error.status === 401 && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    Not authorized\n                </Title>\n                <EmptyStateBody>\n                    You do not have the correct permissions to view this page.\n                </EmptyStateBody>\n            </>\n        ) }\n        { !error.status && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    Something went wrong, please try reloading the page\n                </Title>\n                <Button variant=\"primary\" onClick={ () => window.location.reload() }>Reload</Button>\n            </>\n        ) }\n\n    </EmptyState>\n);\n\nDefaultEmptyState.propTypes = {\n    preflightError: PropTypes.object\n};\n\nexport default DefaultEmptyState;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nconst initializeChart = Chart => {\n    const BaseChart = (props) => {\n        const { id, margin } = props;\n\n        const getWidth = () => {\n            let width;\n            width =\n            parseInt(d3.select('#' + id).style('width')) -\n                margin.left - margin.right || 700;\n            return width;\n        };\n\n        const getHeight = () => {\n            let height;\n            height =\n            parseInt(d3.select('#' + id).style('height')) -\n                margin.top - margin.bottom || 450;\n            return height;\n        };\n\n        return (\n            <Chart\n                { ...props }\n                getWidth={ getWidth }\n                getHeight={ getHeight }\n            />\n        );\n    };\n\n    BaseChart.propTypes = {\n        id: PropTypes.string,\n        margin: PropTypes.object\n    };\n\n    return BaseChart;\n};\n\ninitializeChart.propTypes = {\n    Chart: PropTypes.element\n};\n\nexport default initializeChart;\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst NoData = () => (\n    <EmptyState variant={ EmptyStateVariant.full }>\n        <EmptyStateIcon icon={ CubesIcon } />\n        <Title headingLevel=\"h5\" size=\"lg\">\n            No Data\n        </Title>\n    </EmptyState>\n);\n\nexport default NoData;\n","var map = {\n\t\"./af\": 174,\n\t\"./af.js\": 174,\n\t\"./ar\": 175,\n\t\"./ar-dz\": 176,\n\t\"./ar-dz.js\": 176,\n\t\"./ar-kw\": 177,\n\t\"./ar-kw.js\": 177,\n\t\"./ar-ly\": 178,\n\t\"./ar-ly.js\": 178,\n\t\"./ar-ma\": 179,\n\t\"./ar-ma.js\": 179,\n\t\"./ar-sa\": 180,\n\t\"./ar-sa.js\": 180,\n\t\"./ar-tn\": 181,\n\t\"./ar-tn.js\": 181,\n\t\"./ar.js\": 175,\n\t\"./az\": 182,\n\t\"./az.js\": 182,\n\t\"./be\": 183,\n\t\"./be.js\": 183,\n\t\"./bg\": 184,\n\t\"./bg.js\": 184,\n\t\"./bm\": 185,\n\t\"./bm.js\": 185,\n\t\"./bn\": 186,\n\t\"./bn.js\": 186,\n\t\"./bo\": 187,\n\t\"./bo.js\": 187,\n\t\"./br\": 188,\n\t\"./br.js\": 188,\n\t\"./bs\": 189,\n\t\"./bs.js\": 189,\n\t\"./ca\": 190,\n\t\"./ca.js\": 190,\n\t\"./cs\": 191,\n\t\"./cs.js\": 191,\n\t\"./cv\": 192,\n\t\"./cv.js\": 192,\n\t\"./cy\": 193,\n\t\"./cy.js\": 193,\n\t\"./da\": 194,\n\t\"./da.js\": 194,\n\t\"./de\": 195,\n\t\"./de-at\": 196,\n\t\"./de-at.js\": 196,\n\t\"./de-ch\": 197,\n\t\"./de-ch.js\": 197,\n\t\"./de.js\": 195,\n\t\"./dv\": 198,\n\t\"./dv.js\": 198,\n\t\"./el\": 199,\n\t\"./el.js\": 199,\n\t\"./en-SG\": 200,\n\t\"./en-SG.js\": 200,\n\t\"./en-au\": 201,\n\t\"./en-au.js\": 201,\n\t\"./en-ca\": 202,\n\t\"./en-ca.js\": 202,\n\t\"./en-gb\": 203,\n\t\"./en-gb.js\": 203,\n\t\"./en-ie\": 204,\n\t\"./en-ie.js\": 204,\n\t\"./en-il\": 205,\n\t\"./en-il.js\": 205,\n\t\"./en-nz\": 206,\n\t\"./en-nz.js\": 206,\n\t\"./eo\": 207,\n\t\"./eo.js\": 207,\n\t\"./es\": 208,\n\t\"./es-do\": 209,\n\t\"./es-do.js\": 209,\n\t\"./es-us\": 210,\n\t\"./es-us.js\": 210,\n\t\"./es.js\": 208,\n\t\"./et\": 211,\n\t\"./et.js\": 211,\n\t\"./eu\": 212,\n\t\"./eu.js\": 212,\n\t\"./fa\": 213,\n\t\"./fa.js\": 213,\n\t\"./fi\": 214,\n\t\"./fi.js\": 214,\n\t\"./fo\": 215,\n\t\"./fo.js\": 215,\n\t\"./fr\": 216,\n\t\"./fr-ca\": 217,\n\t\"./fr-ca.js\": 217,\n\t\"./fr-ch\": 218,\n\t\"./fr-ch.js\": 218,\n\t\"./fr.js\": 216,\n\t\"./fy\": 219,\n\t\"./fy.js\": 219,\n\t\"./ga\": 220,\n\t\"./ga.js\": 220,\n\t\"./gd\": 221,\n\t\"./gd.js\": 221,\n\t\"./gl\": 222,\n\t\"./gl.js\": 222,\n\t\"./gom-latn\": 223,\n\t\"./gom-latn.js\": 223,\n\t\"./gu\": 224,\n\t\"./gu.js\": 224,\n\t\"./he\": 225,\n\t\"./he.js\": 225,\n\t\"./hi\": 226,\n\t\"./hi.js\": 226,\n\t\"./hr\": 227,\n\t\"./hr.js\": 227,\n\t\"./hu\": 228,\n\t\"./hu.js\": 228,\n\t\"./hy-am\": 229,\n\t\"./hy-am.js\": 229,\n\t\"./id\": 230,\n\t\"./id.js\": 230,\n\t\"./is\": 231,\n\t\"./is.js\": 231,\n\t\"./it\": 232,\n\t\"./it-ch\": 233,\n\t\"./it-ch.js\": 233,\n\t\"./it.js\": 232,\n\t\"./ja\": 234,\n\t\"./ja.js\": 234,\n\t\"./jv\": 235,\n\t\"./jv.js\": 235,\n\t\"./ka\": 236,\n\t\"./ka.js\": 236,\n\t\"./kk\": 237,\n\t\"./kk.js\": 237,\n\t\"./km\": 238,\n\t\"./km.js\": 238,\n\t\"./kn\": 239,\n\t\"./kn.js\": 239,\n\t\"./ko\": 240,\n\t\"./ko.js\": 240,\n\t\"./ku\": 241,\n\t\"./ku.js\": 241,\n\t\"./ky\": 242,\n\t\"./ky.js\": 242,\n\t\"./lb\": 243,\n\t\"./lb.js\": 243,\n\t\"./lo\": 244,\n\t\"./lo.js\": 244,\n\t\"./lt\": 245,\n\t\"./lt.js\": 245,\n\t\"./lv\": 246,\n\t\"./lv.js\": 246,\n\t\"./me\": 247,\n\t\"./me.js\": 247,\n\t\"./mi\": 248,\n\t\"./mi.js\": 248,\n\t\"./mk\": 249,\n\t\"./mk.js\": 249,\n\t\"./ml\": 250,\n\t\"./ml.js\": 250,\n\t\"./mn\": 251,\n\t\"./mn.js\": 251,\n\t\"./mr\": 252,\n\t\"./mr.js\": 252,\n\t\"./ms\": 253,\n\t\"./ms-my\": 254,\n\t\"./ms-my.js\": 254,\n\t\"./ms.js\": 253,\n\t\"./mt\": 255,\n\t\"./mt.js\": 255,\n\t\"./my\": 256,\n\t\"./my.js\": 256,\n\t\"./nb\": 257,\n\t\"./nb.js\": 257,\n\t\"./ne\": 258,\n\t\"./ne.js\": 258,\n\t\"./nl\": 259,\n\t\"./nl-be\": 260,\n\t\"./nl-be.js\": 260,\n\t\"./nl.js\": 259,\n\t\"./nn\": 261,\n\t\"./nn.js\": 261,\n\t\"./pa-in\": 262,\n\t\"./pa-in.js\": 262,\n\t\"./pl\": 263,\n\t\"./pl.js\": 263,\n\t\"./pt\": 264,\n\t\"./pt-br\": 265,\n\t\"./pt-br.js\": 265,\n\t\"./pt.js\": 264,\n\t\"./ro\": 266,\n\t\"./ro.js\": 266,\n\t\"./ru\": 267,\n\t\"./ru.js\": 267,\n\t\"./sd\": 268,\n\t\"./sd.js\": 268,\n\t\"./se\": 269,\n\t\"./se.js\": 269,\n\t\"./si\": 270,\n\t\"./si.js\": 270,\n\t\"./sk\": 271,\n\t\"./sk.js\": 271,\n\t\"./sl\": 272,\n\t\"./sl.js\": 272,\n\t\"./sq\": 273,\n\t\"./sq.js\": 273,\n\t\"./sr\": 274,\n\t\"./sr-cyrl\": 275,\n\t\"./sr-cyrl.js\": 275,\n\t\"./sr.js\": 274,\n\t\"./ss\": 276,\n\t\"./ss.js\": 276,\n\t\"./sv\": 277,\n\t\"./sv.js\": 277,\n\t\"./sw\": 278,\n\t\"./sw.js\": 278,\n\t\"./ta\": 279,\n\t\"./ta.js\": 279,\n\t\"./te\": 280,\n\t\"./te.js\": 280,\n\t\"./tet\": 281,\n\t\"./tet.js\": 281,\n\t\"./tg\": 282,\n\t\"./tg.js\": 282,\n\t\"./th\": 283,\n\t\"./th.js\": 283,\n\t\"./tl-ph\": 284,\n\t\"./tl-ph.js\": 284,\n\t\"./tlh\": 285,\n\t\"./tlh.js\": 285,\n\t\"./tr\": 286,\n\t\"./tr.js\": 286,\n\t\"./tzl\": 287,\n\t\"./tzl.js\": 287,\n\t\"./tzm\": 288,\n\t\"./tzm-latn\": 289,\n\t\"./tzm-latn.js\": 289,\n\t\"./tzm.js\": 288,\n\t\"./ug-cn\": 290,\n\t\"./ug-cn.js\": 290,\n\t\"./uk\": 291,\n\t\"./uk.js\": 291,\n\t\"./ur\": 292,\n\t\"./ur.js\": 292,\n\t\"./uz\": 293,\n\t\"./uz-latn\": 294,\n\t\"./uz-latn.js\": 294,\n\t\"./uz.js\": 293,\n\t\"./vi\": 295,\n\t\"./vi.js\": 295,\n\t\"./x-pseudo\": 296,\n\t\"./x-pseudo.js\": 296,\n\t\"./yo\": 297,\n\t\"./yo.js\": 297,\n\t\"./zh-cn\": 298,\n\t\"./zh-cn.js\": 298,\n\t\"./zh-hk\": 299,\n\t\"./zh-hk.js\": 299,\n\t\"./zh-tw\": 300,\n\t\"./zh-tw.js\": 300\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 337;","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst NoResults = () => {\n    return (\n        <EmptyState variant={ EmptyStateVariant.full }>\n            <EmptyStateIcon icon={ SearchIcon } />\n            <Title size=\"lg\" headingLevel=\"h4\">\n                No results found\n            </Title>\n            <EmptyStateBody>\n                No results match the filter criteria. Remove all filters or clear all filters to show results.\n            </EmptyStateBody>\n        </EmptyState>\n    );\n};\n\nexport default NoResults;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateIcon,\n    EmptyStateVariant,\n    Title\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { global_danger_color_200 as globalDangerColor200 } from '@patternfly/react-tokens';\n\nconst ApiErrorState = ({ message }) => (\n    <EmptyState variant={ EmptyStateVariant.small }>\n        <EmptyStateIcon icon={ ExclamationCircleIcon } color={ globalDangerColor200.value } />\n        <Title headingLevel=\"h2\" size=\"lg\">Error</Title>\n        <EmptyStateBody>\n            { message }\n        </EmptyStateBody>\n    </EmptyState>\n);\n\nApiErrorState.propTypes = {\n    message: PropTypes.string\n};\n\nexport default ApiErrorState;\n","/* eslint-disable camelcase */\n\nexport const jobExplorer = {\n    attributes: [\n        'id',\n        'status',\n        'job_type',\n        'started',\n        'finished',\n        'elapsed',\n        'created',\n        'cluster_name',\n        'org_name',\n        'most_failed_tasks'\n    ],\n    defaultParams: {\n        status: [ 'successful', 'failed' ],\n        quickDateRange: 'last_30_days',\n        jobType: [ 'workflowjob', 'job' ],\n        orgId: [],\n        clusterId: [],\n        templateId: [],\n        sortBy: 'created:desc',\n        startDate: '',\n        endDate: '',\n        onlyRootWorkflowsAndStandaloneJobs: false,\n        limit: 5\n    }\n};\n\nexport const toolbarCategories = [\n    { name: 'Status', id: 1 },\n    { name: 'Date', id: 2 },\n    { name: 'Job', id: 3 },\n    { name: 'Organization', id: 4 },\n    { name: 'Cluster', id: 5 },\n    { name: 'Template', id: 6 },\n    { name: 'Sort by', id: 7 }\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from '@patternfly/react-core';\nimport {\n    CheckCircleIcon,\n    ExclamationCircleIcon,\n    ClockIcon,\n    SyncAltIcon,\n    ExclamationTriangleIcon\n} from '@patternfly/react-icons';\n\nconst JobStatus = ({ status }) => {\n    const capitalized = (str) => str.charAt(0).toUpperCase() + str.slice(1);\n\n    const getColor = () => {\n        switch (status) {\n            case 'successful':\n                return 'green';\n            case 'failed':\n            case 'error':\n                return 'red';\n            case 'running':\n            case 'pending':\n                return 'blue';\n            case 'canceled':\n                return 'orange';\n            // case new, waiting\n            default: return 'grey';\n        }\n    };\n\n    const getIcon = () => {\n        switch (status) {\n            case 'successful':\n                return <CheckCircleIcon />;\n            case 'failed':\n            case 'error':\n                return <ExclamationCircleIcon />;\n            case 'running':\n                return <SyncAltIcon />;\n            case 'canceled':\n                return <ExclamationTriangleIcon />;\n            // case new, waiting, pending\n            default: return <ClockIcon />;\n        }\n    };\n\n    return (\n        <Label variant=\"outline\" color={ getColor() } icon={ getIcon() }>{ capitalized(status) }</Label>\n    );\n};\n\nJobStatus.propTypes = {\n    status: PropTypes.oneOf([\n        'successful',\n        'failed', 'error',\n        'running',\n        'new', 'waiting', 'pending', 'canceled'\n    ])\n};\n\nexport default JobStatus;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    DataListCell as PFDataListCell,\n    DataListContent,\n    DataList,\n    DataListItem,\n    DataListItemRow,\n    DataListItemCells as PFDataListItemCells,\n    DataListToggle as PFDataListToggle,\n    Tooltip\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkIcon } from '@patternfly/react-icons';\n\nimport LoadingState from '../Components/LoadingState';\nimport { formatDateTime, formatJobType } from '../Utilities/helpers';\nimport JobStatus from './JobStatus';\n\nconst headerLabels = [\n    'Id/Name',\n    'Status',\n    'Cluster',\n    'Organization',\n    'Type'\n];\n\nconst ExternalLinkIcon = styled(PFExternalLinkIcon)`\n    margin-left: 7px;\n    color: var(--pf-global--Color--400);\n`;\n\nconst DataListCell = styled(PFDataListCell)`\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    text-align: center;\n`;\n\nconst DataListCellHeader = styled(DataListCell)`\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    font-weight: bold;\n`;\n\nconst DataListItemCells = styled(PFDataListItemCells)`\n    align-items: center;\n`;\n\nconst DataListToggle = styled(PFDataListToggle)`\n    align-items: center;\n`;\n\nconst mobileBreakpoint = 765;\n\nconst buildHeader = labels => (\n    <DataListItem>\n        <DataListItemRow style={ { paddingLeft: '80px' } }>\n            <DataListItemCells\n                dataListCells={ labels.map(label => (\n                    <DataListCellHeader key={ label }>\n                        { label }\n                        { label === 'Id/Name' &&\n                              <ExternalLinkIcon />\n                        }\n                    </DataListCellHeader>\n                ))\n                }\n            />\n        </DataListItemRow>\n    </DataListItem>\n);\n\nconst buildListRow = (items, ariaLabel, ariaLabelledBy, windowWidth) => {\n    const [ isExpanded, setIsExpanded ] = useState([]);\n\n    return (\n        <>\n            { items.map((item, count) => {\n                const toggle = id => {\n                    const expanded = isExpanded;\n                    const idx = expanded.indexOf(id);\n                    const newExpanded =\n            idx >= 0\n                ? [\n                    ...expanded.slice(0, idx),\n                    ...expanded.slice(idx + 1, expanded.length)\n                ]\n                : [ ...expanded, id ];\n                    setIsExpanded(newExpanded);\n                };\n\n                return (\n                    <DataListItem key={ item.id.id } aria-labelledby={ ariaLabelledBy } isExpanded={ isExpanded.includes(`${item.id.id}-toggle`) } >\n                        <DataListItemRow key={ item.id.id }>\n                            <DataListToggle\n                                id={ `${item.id.id}-toggle` }\n                                aria-controls={ `${item.id.id}-expand` }\n                                onClick={ () => toggle(`${item.id.id}-toggle`) }\n                                isExpanded={ isExpanded.includes(`${item.id.id}-toggle`) }\n                            />\n                            <DataListItemCells\n                                dataListCells={ [\n                                    <DataListCell key={ count++ }>\n                                        <a href={ item.id.tower_link } target='_blank' rel='noopener noreferrer'>\n                                            { windowWidth < mobileBreakpoint &&\n                                             <span style={ { color: 'initial', fontWeight: 'bold' } }>\n                                                 Id/Name<ExternalLinkIcon />:\n                                             </span>\n                                            }\n                                            &nbsp;\n                                            { `${item.id.id} - ${item.id.template_name}` }\n                                        </a>\n                                    </DataListCell>,\n                                    <DataListCell key={ count++ }>\n\n                                        { windowWidth <= mobileBreakpoint &&\n                                            <span style={ { color: 'initial', fontWeight: 'bold' } }>Status:</span>\n                                        }\n                                            &nbsp;\n                                        <JobStatus status={ item.status } />\n                                    </DataListCell>,\n                                    <Tooltip key={ count++ } content={ <p>{ item.cluster_name }</p> }>\n                                        <DataListCell>\n                                            { windowWidth <= mobileBreakpoint &&\n                                            <span style={ { color: 'initial', fontWeight: 'bold' } }>Cluster:</span>\n                                            }\n                                            &nbsp;\n                                            { item.cluster_name }\n                                        </DataListCell>\n                                    </Tooltip>,\n                                    <DataListCell key={ count++ }>\n                                        { windowWidth <= mobileBreakpoint &&\n                                         <span style={ { color: 'initial', fontWeight: 'bold' } }>Organization:</span>\n                                        }\n                                        &nbsp;\n                                        { item.org_name }\n                                    </DataListCell>,\n                                    <DataListCell key={ count++ }>\n                                        { windowWidth <= mobileBreakpoint &&\n                                         <span style={ { color: 'initial', fontWeight: 'bold' } }>Type:</span>\n                                        }\n                                         &nbsp;\n                                        { formatJobType(item.job_type) }\n                                    </DataListCell>\n                                ] }\n                            />\n                        </DataListItemRow>\n                        <DataListContent\n                            aria-label={ `${item.id.id}-details` }\n                            id={ '${item.id.id}' }\n                            isHidden={ !isExpanded.includes(`${item.id.id}-toggle`) }\n                        >\n                            <DataListItemCells\n                                dataListCells={ [\n                                    <DataListCell key={ count++ }>\n                                        Created: { formatDateTime(item.created) }\n                                    </DataListCell>,\n                                    <DataListCell key={ count++ }>\n                                        Started: { formatDateTime(item.started) }\n                                    </DataListCell>,\n                                    <DataListCell key={ count++ }>\n                                        Finished: { formatDateTime(item.finished) }\n                                    </DataListCell>\n                                ] }\n                            />\n                        </DataListContent>\n                    </DataListItem>\n                );\n            }) }\n        </>\n    );\n};\n\nconst AllJobsTemplate = ({ jobs }) => {\n    const [ windowWidth, setWindowWidth ] = useState(window.innerWidth);\n\n    const onResize = () => setWindowWidth(window.innerWidth);\n\n    useEffect(() => {\n        window.addEventListener('resize', onResize);\n        return () => window.removeEventListener('resize', onResize);\n    }, []);\n\n    return buildListRow(jobs, 'All jobs view', 'all-jobs', windowWidth);\n};\n\nconst JobExplorerList = ({ jobs }) => {\n    const [ windowWidth, setWindowWidth ] = useState(window.innerWidth);\n\n    const onResize = () => setWindowWidth(window.innerWidth);\n\n    useEffect(() => {\n        window.addEventListener('resize', onResize);\n        return () => window.removeEventListener('resize', onResize);\n    }, []);\n\n    return (\n        <>\n            {jobs.length <= 0 && <LoadingState />}\n            <DataList isCompact>\n                { windowWidth >= mobileBreakpoint && buildHeader(headerLabels) }\n                <AllJobsTemplate jobs={ jobs } windowWidth={ windowWidth }/>\n            </DataList>\n        </>\n    );\n};\n\nJobExplorerList.propTypes = {\n    jobs: PropTypes.array,\n    windowWidth: PropTypes.number\n};\n\nAllJobsTemplate.propTypes = {\n    jobs: PropTypes.array,\n    windowWidth: PropTypes.number\n};\n\nexport default JobExplorerList;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ToolbarItem,\n    Select,\n    SelectOption\n} from '@patternfly/react-core';\n\nconst CategoryDropdown = ({\n    selected,\n    setSelected = () => {},\n    categories = []\n}) => {\n    const [ isExpanded, setIsExpanded ] = useState(false);\n\n    return (\n        <ToolbarItem>\n            <Select\n                isOpen={ isExpanded }\n                variant={ 'single' }\n                aria-label={ 'Categories' }\n                onToggle={ () => setIsExpanded(!isExpanded) }\n                onSelect={ (_event, selection) => {\n                    setSelected(selection);\n                    setIsExpanded(false);\n                } }\n                selections={ selected }\n                placeholderText={ 'Filter by' }\n            >\n                {\n                    categories.map(({ key, name }) => (\n                        <SelectOption key={ key } value={ key }>\n                            { name }\n                        </SelectOption>\n                    ))\n                }\n            </Select>\n        </ToolbarItem>\n    );\n};\n\nCategoryDropdown.propTypes = {\n    categories: PropTypes.array,\n    selected: PropTypes.string,\n    setSelected: PropTypes.func\n};\n\nexport default CategoryDropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    InputGroup,\n    TextInput\n} from '@patternfly/react-core';\n\nconst CustomDateSelector = ({\n    onInputChange = () => {},\n    startDate = '',\n    endDate = ''\n}) => {\n    return (\n        <>\n          <InputGroup>\n              <TextInput\n                  name=\"startDate\"\n                  id=\"startDate\"\n                  type=\"date\"\n                  aria-label=\"Start Date\"\n                  value={ startDate }\n                  onChange={ e => onInputChange('startDate', e) }\n              />\n          </InputGroup>\n          <InputGroup>\n              <TextInput\n                  name=\"endDate\"\n                  id=\"endDate\"\n                  type=\"date\"\n                  aria-label=\"End Date\"\n                  value={ endDate }\n                  onChange={ e => onInputChange('endDate', e) }\n              />\n          </InputGroup>\n        </>\n    );\n};\n\nCustomDateSelector.propTypes = {\n    startDate: PropTypes.string,\n    endDate: PropTypes.string,\n    onInputChange: PropTypes.func\n};\n\nexport default CustomDateSelector;\n","export const optionsForCategories = {\n    status: {\n        isSingle: false,\n        name: 'Status',\n        placeholder: 'Filter by job status'\n    },\n    quickDateRange: {\n        isSingle: true,\n        name: 'Date',\n        placeholder: 'Filter by date'\n    },\n    jobType: {\n        isSingle: false,\n        name: 'Job',\n        placeholder: 'Filter by job type'\n    },\n    orgId: {\n        isSingle: false,\n        name: 'Organization',\n        placeholder: 'Filter by organization'\n    },\n    clusterId: {\n        isSingle: false,\n        name: 'Cluster',\n        placeholder: 'Filter by cluster'\n    },\n    templateId: {\n        isSingle: false,\n        name: 'Template',\n        placeholder: 'Filter by template'\n    },\n    sortBy: {\n        isSingle: true,\n        name: 'Sort by',\n        placeholder: 'Sort by attribute'\n    }\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ToolbarFilter,\n    Select,\n    SelectOption\n} from '@patternfly/react-core';\nimport {\n    handleCheckboxChips,\n    handleSingleChips\n} from './helpers';\nimport { optionsForCategories } from './constants';\n\nconst ToolbarFilterItem = ({\n    categoryKey,\n    filter = null,\n    values = [],\n    isVisible = true,\n    hasChips = true,\n    setFilter\n}) => {\n    const [ expanded, setExpanded ] = useState(false);\n    const options = optionsForCategories[categoryKey];\n\n    const onDelete = (name, valueToDelete) => {\n        const single = optionsForCategories[categoryKey].isSingle;\n\n        if (single) {\n            setFilter(null);\n        } else {\n            const keyToDelete = values.find(({ value }) => value === valueToDelete).key;\n            const filteredArr = filter.filter(value => value !== keyToDelete);\n            setFilter(filteredArr);\n        }\n    };\n\n    const handleChips = () => {\n        if (options.isSingle) {\n            return handleSingleChips(filter, values);\n        } else {\n            return handleCheckboxChips(filter, values);\n        }\n    };\n\n    const onSelect = (event, selection) => {\n        if (options.isSingle) {\n            setFilter(selection);\n            setExpanded(false);\n        } else {\n            setFilter(event.target.checked\n                ? [ ...filter, selection ]\n                : filter.filter(value => value !== selection)\n            );\n        }\n    };\n\n    return (\n        <ToolbarFilter\n            key = { categoryKey }\n            showToolbarItem={ isVisible }\n            chips={ hasChips ? handleChips() : [] }\n            categoryName={ options.name }\n            deleteChip={ hasChips ? onDelete : null }\n        >\n            <Select\n                variant={ options.isSingle ? 'single' : 'checkbox' }\n                aria-label={ categoryKey }\n                onToggle={ () => setExpanded(!expanded) }\n                onSelect={ onSelect }\n                selections={ filter }\n                isOpen={ expanded }\n                placeholderText={ options.placeholder }\n            >\n                {\n                    values && values.map(({ key, value, description }) => (\n                        <SelectOption key={ key } value={ key } description={ description }>\n                            { value }\n                        </SelectOption>\n                    ))\n                }\n            </Select>\n        </ToolbarFilter>\n    );\n};\n\nToolbarFilterItem.propTypes = {\n    categoryKey: PropTypes.string.isRequired,\n    filter: PropTypes.any,\n    values: PropTypes.array,\n    isVisible: PropTypes.bool,\n    hasChips: PropTypes.bool,\n    setFilter: PropTypes.func.isRequired\n};\n\nexport default ToolbarFilterItem;\n","/**\n * Get comparator values if their key is in the item list\n */\nexport const handleCheckboxChips = (item, comparator) => {\n    if (item && comparator) {\n        return item.reduce((acc, i) => {\n            Number.isInteger(parseInt(i)) ? (i = parseInt(i)) : i;\n\n            comparator.forEach(cmpItem => {\n                if (cmpItem.key === i) {\n                    acc.push(cmpItem.value);\n                }\n            });\n\n            return acc;\n        }, []);\n    }\n\n    return [];\n};\n\n/**\n * Convert a list of objects to a list of the last value if defined\n */\nexport const handleSingleChips = (item, comparator) => {\n    if (item && typeof item === 'string' && comparator) {\n        let val;\n        comparator.forEach(i => {\n            if (i.key === item) {\n                val = i.value;\n            }\n        });\n\n        if (val !== undefined) {\n            return [ val ];\n        }\n    }\n\n    return [];\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n    Toolbar,\n    ToolbarContent as PFToolbarContent,\n    ToolbarToggleGroup,\n    ToolbarGroup as PFToolbarGroup,\n    Button,\n    ToolbarItem,\n    Tooltip,\n    Switch\n} from '@patternfly/react-core';\nimport { Card, CardTitle, CardBody, CardActions, CardHeader } from '@patternfly/react-core';\nimport {\n    FilterIcon,\n    SortAmountDownIcon,\n    CogIcon,\n    QuestionCircleIcon,\n    TimesIcon\n} from '@patternfly/react-icons';\n\nimport CategoryDropdown from './CategoryDropdown';\nimport CustomDateSelector from './CustomDateSelector';\nimport { optionsForCategories } from './constants';\nimport ToolbarFilterItem from './ToolbarFilterItem';\n\nconst ToolbarGroup = styled(PFToolbarGroup)`\n  button {\n    .pf-c-select__toggle-wrapper {\n      flex-wrap: nowrap;\n    }\n  }\n`;\n\nconst ToolbarContent = styled(PFToolbarContent)`\n  .pf-c-toolbar__content-section {\n    justify-content: space-between;\n  }\n`;\n\nconst FilterableToolbar = ({\n    categories,\n    filters,\n    setFilters,\n    pagination,\n    hasSettings = false\n}) => {\n    const [ currentCategory, setCurrentCategory ] = useState(\n        Object.keys(categories)[0]\n    );\n    const [ settingsExpanded, setSettingsExpanded ] = useState(false);\n\n    const { quickDateRange, sortBy, ...filterCategories } = categories;\n\n    const onInputChange = (type, value) => {\n        setFilters(type, value);\n    };\n\n    const FilterCategoriesGroup = () => (\n        <ToolbarGroup variant=\"filter-group\">\n            <CategoryDropdown\n                selected={ currentCategory }\n                setSelected={ setCurrentCategory }\n                categories={\n                    Object.keys(filterCategories).map(el => ({\n                        key: el,\n                        name: optionsForCategories[el].name\n                    }))\n                }\n            />\n            { Object.keys(filterCategories).map(key =>\n                <ToolbarFilterItem\n                    key={ key }\n                    categoryKey={ key }\n                    filter={ filters[key] }\n                    values={ categories[key] }\n                    isVisible={ currentCategory === key }\n                    setFilter={ value => setFilters(key, value) }\n                />\n            ) }\n        </ToolbarGroup>\n    );\n\n    const QuickDateGroup = () => (\n        <ToolbarGroup variant=\"filter-group\">\n            <ToolbarFilterItem\n                categoryKey='quickDateRange'\n                filter={ filters.quickDateRange }\n                values={ quickDateRange }\n                setFilter={ value => setFilters('quickDateRange', value) }\n                hasChips={ false }\n            />\n            { filters.quickDateRange === 'custom' && (\n                <CustomDateSelector\n                    startDate={ filters.startDate }\n                    endDate={ filters.endDate }\n                    onInputChange={ onInputChange }\n                />\n            ) }\n        </ToolbarGroup>\n    );\n\n    const SortByGroup = () => (\n        <ToolbarGroup variant=\"filter-group\">\n            <ToolbarFilterItem\n                categoryKey='sortBy'\n                filter={ filters.sortBy }\n                values={ sortBy }\n                setFilter={ value => setFilters('sortBy', value) }\n                hasChips={ false }\n            />\n            <Button variant=\"control\">\n                <SortAmountDownIcon />\n            </Button>\n        </ToolbarGroup>\n    );\n\n    /* TODO: For future work: make settings more modular for different pages */\n    const Settings = () => (\n        <Card isFlat style={ { backgroundColor: '#EEEEEE' } }>\n            <CardHeader>\n                <CardActions>\n                    <Button variant='plain'>\n                        <TimesIcon />\n                    </Button>\n                </CardActions>\n                <CardTitle>Settings</CardTitle>\n            </CardHeader>\n            <CardBody>\n                <Switch\n                    id=\"showRootWorkflowJobs\"\n                    label=\"Ignore nested workflows and jobs\"\n                    labelOff=\"Ignore nested workflows and jobs\"\n                    isChecked={ filters.onlyRootWorkflowsAndStandaloneJobs }\n                    onChange={ val => {\n                        setFilters('onlyRootWorkflowsAndStandaloneJobs', val);\n                    } }\n                />\n                <Tooltip\n                    position={ 'top' }\n                    content={\n                        <div>\n                            { ' ' }\n                              If enabled, nested workflows and jobs will not be included in\n                              the overall totals. Enable this option to filter out duplicate\n                              entries.\n                        </div>\n                    }\n                >\n                    <QuestionCircleIcon />\n                </Tooltip>\n            </CardBody>\n        </Card>\n    );\n\n    return (\n        <>\n            <Toolbar\n                id=\"filterable-toolbar-with-chip-groups\"\n                clearAllFilters={ () => { setFilters(null, null); } }\n                collapseListedFiltersBreakpoint=\"xl\"\n            >\n                <ToolbarContent>\n                    <ToolbarToggleGroup toggleIcon={ <FilterIcon /> } breakpoint=\"xl\">\n                        <Button variant=\"control\">\n                            <FilterIcon />\n                        </Button>\n                        { Object.keys(filterCategories).length > 0 && <FilterCategoriesGroup /> }\n                        { quickDateRange && <QuickDateGroup /> }\n                        { sortBy && <SortByGroup /> }\n                        {\n                            hasSettings &&\n                            <ToolbarItem>\n                                <Button\n                                    variant=\"plain\"\n                                    onClick={ () => setSettingsExpanded(!settingsExpanded) }\n                                    aria-label=\"settings\"\n                                    isActive={ settingsExpanded }\n                                >\n                                    <CogIcon />\n                                </Button>\n                            </ToolbarItem>\n                        }\n                    </ToolbarToggleGroup>\n                    {\n                        pagination &&\n                        <ToolbarItem varian=\"pagination\" visibility={ { default: 'hidden', lg: 'visible' } }>\n                            { pagination }\n                        </ToolbarItem>\n                    }\n                </ToolbarContent>\n                { settingsExpanded && <Settings /> }\n            </Toolbar>\n        </>\n    );\n};\n\nFilterableToolbar.propTypes = {\n    categories: PropTypes.object,\n    filters: PropTypes.object,\n    setFilters: PropTypes.func,\n    pagination: PropTypes.object,\n    hasSettings: PropTypes.bool\n};\n\nexport default FilterableToolbar;\n","import Toolbar from './Toolbar';\n\nexport default Toolbar;\n","/*eslint camelcase: [\"error\", {allow: [\"setStart_Date\",\"setEnd_Date\",\"cluster_id\",\"org_id\",\"job_type\",\"template_id\",\"quick_date_range\",\"sort_by\"]}]*/\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { parse, stringify } from 'query-string';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport { keysToCamel } from '../../Utilities/helpers';\n\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoResults from '../../Components/NoResults';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport {\n    preflightRequest,\n    readJobExplorer,\n    readJobExplorerOptions\n} from '../../Api';\nimport { jobExplorer } from '../../Utilities/constants';\nimport { Paths } from '../../paths';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardHeader as PFCardHeader,\n    Pagination as PFPagination,\n    PaginationVariant\n} from '@patternfly/react-core';\n\nimport JobExplorerList from '../../Components/JobExplorerList';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\nconst CardHeader = styled(PFCardHeader)`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n`;\n\nconst CompactPagination = styled(PFPagination)`\n  display: flex;\n  align-items: flex-start;\n  margin: 0;\n`;\n\nconst Pagination = styled(PFPagination)`\n  margin-top: 20px;\n`;\n\nconst perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '15', value: 15 },\n    { title: '20', value: 20 },\n    { title: '25', value: 25 }\n];\n\nconst initialQueryParams = {\n    ...jobExplorer.defaultParams,\n    attributes: jobExplorer.attributes\n};\n\nconst initialOptionsParams = {\n    attributes: jobExplorer.attributes\n};\n\nconst JobExplorer = ({\n    location: { search },\n    history\n}) => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [ apiError, setApiError ] = useState(null);\n    const [ jobExplorerData, setJobExplorerData ] = useState([]);\n    const [ isLoading, setIsLoading ] = useState(true);\n    const [ meta, setMeta ] = useState({});\n    const [ currPage, setCurrPage ] = useState(1);\n    const [ orgIds, setOrgIds ] = useState([]);\n    const [ clusterIds, setClusterIds ] = useState([]);\n    const [ templateIds, setTemplateIds ] = useState([]);\n    const [ sortBy, setSortBy ] = useState(null);\n    const [ statuses, setStatuses ] = useState([]);\n    const [ jobTypes, setJobTypes ] = useState([]);\n    const [ quickDateRanges, setQuickDateRanges ] = useState([]);\n\n    let initialSearchParams = keysToCamel(\n        parse(search, { arrayFormat: 'bracket' })\n    );\n    let combined = { ...initialQueryParams, ...initialSearchParams };\n    const {\n        queryParams,\n        urlMappedQueryParams,\n        setLimit,\n        setOffset,\n        setFromToolbar\n    } = useQueryParams(combined);\n    const { queryParams: optionsQueryParams } = useQueryParams(\n        initialOptionsParams\n    );\n\n    const updateURL = () => {\n        const { jobExplorer } = Paths;\n        const search = stringify(urlMappedQueryParams, { arrayFormat: 'bracket' });\n        history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    useEffect(() => {\n        // Click on the nav -> this causes the page rerender if already not clicked\n        insights.chrome.appNavClick({ id: 'job-explorer', secondaryNav: true });\n        updateURL();\n\n        async function initializeWithPreflight() {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            await preflightRequest().catch(error => {\n                setPreFlightError({ preflightError: error });\n            });\n            readJobExplorerOptions({ params: optionsQueryParams })\n            .then(\n                ({\n                    cluster_id,\n                    org_id,\n                    job_type,\n                    status,\n                    template_id,\n                    quick_date_range,\n                    sort_by\n                }) => {\n                    setClusterIds(cluster_id);\n                    setOrgIds(org_id);\n                    setTemplateIds(template_id);\n                    setSortBy(sort_by);\n                    setStatuses(status);\n                    setJobTypes(job_type);\n                    setQuickDateRanges(quick_date_range);\n                })\n            .catch(e => setApiError(e.error))\n            .finally(() => setIsLoading(false));\n        }\n\n        initializeWithPreflight();\n        updateURL();\n    }, []);\n\n    useEffect(() => {\n        const update = async () => {\n            setApiError(null);\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            readJobExplorer({ params: urlMappedQueryParams })\n            .then(({ items: jobExplorerData = [], meta }) => {\n                setJobExplorerData(jobExplorerData);\n                setMeta(meta);\n            }).catch(e => setApiError(e.error)\n            ).finally(() => setIsLoading(false));\n        };\n\n        update();\n        updateURL();\n    }, [ queryParams ]);\n\n    const returnOffsetVal = page => {\n        let offsetVal = (page - 1) * queryParams.limit;\n        return offsetVal;\n    };\n\n    const handleSetPage = page => {\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    const handlePerPageSelect = (perPage, page) => {\n        setLimit(perPage);\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={ 'Job Explorer' } />\n            </PageHeader>\n\n            { preflightError && (\n                <Main>\n                    <EmptyState { ...preflightError } />\n                </Main>\n            ) }\n\n            { !preflightError && (\n        <>\n          <Main>\n              <Card>\n                  <CardHeader>\n                  </CardHeader>\n                  <CardBody>\n                      <FilterableToolbar\n                          categories={ {\n                              status: statuses,\n                              quickDateRange: quickDateRanges,\n                              jobType: jobTypes,\n                              orgId: orgIds,\n                              clusterId: clusterIds,\n                              templateId: templateIds,\n                              sortBy\n                          } }\n                          filters={ queryParams }\n                          setFilters={ setFromToolbar }\n                          pagination={\n                              <CompactPagination\n                                  itemCount={ meta.count ? meta.count : 0 }\n                                  widgetId=\"pagination-options-menu-top\"\n                                  perPageOptions={ perPageOptions }\n                                  perPage={ queryParams.limit }\n                                  page={ currPage }\n                                  variant={ PaginationVariant.bottom }\n                                  dropDirection={ 'up' }\n                                  onPerPageSelect={ (_event, perPage, page) => {\n                                      handlePerPageSelect(perPage, page);\n                                  } }\n                                  onSetPage={ (_event, pageNumber) => {\n                                      handleSetPage(pageNumber);\n                                  } }\n                                  isCompact\n                              />\n                          }\n                          hasSettings\n                      />\n                      { apiError && <ApiErrorState message={ apiError } /> }\n                      { !apiError && isLoading && <LoadingState /> }\n                      { !apiError && !isLoading && jobExplorerData.length <= 0 && <NoResults /> }\n                      { !apiError && !isLoading && jobExplorerData.length > 0 && (\n                  <>\n                    <JobExplorerList jobs={ jobExplorerData } />\n                    <Pagination\n                        itemCount={ meta.count ? meta.count : 0 }\n                        widgetId=\"pagination-options-menu-bottom\"\n                        perPageOptions={ perPageOptions }\n                        perPage={ queryParams.limit }\n                        page={ currPage }\n                        variant={ PaginationVariant.bottom }\n                        dropDirection={ 'up' }\n                        onPerPageSelect={ (_event, perPage, page) => {\n                            handlePerPageSelect(perPage, page);\n                        } }\n                        onSetPage={ (_event, pageNumber) => {\n                            handleSetPage(pageNumber);\n                        } }\n                        style={ { marginTop: '20px' } }\n                    />\n                  </>\n                      ) }\n                  </CardBody>\n              </Card>\n          </Main>\n        </>\n            ) }\n        </React.Fragment>\n    );\n};\n\nJobExplorer.propTypes = {\n    location: PropTypes.object,\n    history: PropTypes.object\n};\n\nexport default JobExplorer;\n","import * as d3 from 'd3';\n\nclass Tooltip {\n    constructor(opts) {\n        this.svg = opts.svg;\n        this.colors = opts.colors;\n        this.draw();\n    }\n\n    draw() {\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 145;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -41)\n        .attr('rx', 2)\n        .attr('height', 110)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.circleSuccess = this.toolTipBase\n        .append('circle')\n        .attr('cx', 26)\n        .attr('cy', 0)\n        .attr('r', 8)\n        .attr('stroke', 'white')\n        .attr('fill', 'white');\n        this.circleFail = this.toolTipBase\n        .append('circle')\n        .attr('cx', 26)\n        .attr('cy', 26)\n        .attr('r', 8)\n        .attr('stroke', 'white')\n        .attr('fill', 'white');\n        this.successText = this.toolTipBase\n        .append('text')\n        .attr('x', 43)\n        .attr('y', 4)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Successful');\n        this.failText = this.toolTipBase\n        .append('text')\n        .attr('x', 43)\n        .attr('y', 28)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Failed');\n        this.successIcon = this.toolTipBase\n        .append('text')\n        .attr('class', 'fas fa-sm')\n        .attr('fill', this.colors(1))\n        .attr('x', 19)\n        .attr('y', 5)\n        .text('\\uf058');\n        this.failedIcon = this.toolTipBase\n        .append('text')\n        .attr('class', 'fas fa-sm')\n        .attr('fill', this.colors(0))\n        .attr('x', 20)\n        .attr('y', 31)\n        .text('\\uf06a');\n        this.jobs = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 137)\n        .attr('y', -21)\n        .attr('font-size', 12)\n        .attr('text-anchor', 'end')\n        .text('No jobs');\n        this.successful = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 122)\n        .attr('y', 4)\n        .text('0');\n        this.failed = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 122)\n        .attr('y', 28)\n        .text('0');\n        this.date = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('stroke', 'white')\n        .attr('x', 20)\n        .attr('y', -21)\n        .attr('font-size', 12)\n        .text('Never');\n        this.clickMore = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 20)\n        .attr('y', 55)\n        .attr('font-size', 12)\n        .text('Click for details');\n    }\n\n    handleMouseOver = (d) => {\n        let success = 0;\n        let fail = 0;\n        let total = 0;\n        const x =\n            d3.event.pageX -\n            d3\n            .select(this.svg)\n            .node()\n            .getBoundingClientRect().x +\n            10;\n        const y =\n            d3.event.pageY -\n            d3\n            .select(this.svg)\n            .node()\n            .getBoundingClientRect().y -\n            10;\n        const formatTooltipDate = d3.timeFormat('%m/%d');\n        if (!d) {\n            return;\n        }\n\n        const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n        const chartWidth = d3\n        .select(this.svg + '> svg')\n        .node()\n        .getBoundingClientRect().width;\n        const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n        const flipped = overflow < (x / chartWidth) * 100;\n        if (d) {\n            success = d.RAN || 0;\n            fail = d.FAIL || 0;\n            total = d.TOTAL || 0;\n            this.date.text(formatTooltipDate(d.DATE || null));\n        }\n\n        if (d && d.data) {\n            success = d.data.RAN || 0;\n            fail = d.data.FAIL || 0;\n            total = d.data.TOTAL || 0;\n            this.date.text(formatTooltipDate(d.data.DATE || null));\n        }\n\n        this.jobs.text('' + total + ' jobs');\n        this.jobsWidth = this.jobs.node().getComputedTextLength();\n        this.failed.text('' + fail);\n        this.successful.text('' + success);\n        this.successTextWidth = this.successful.node().getComputedTextLength();\n        this.failTextWidth = this.failed.node().getComputedTextLength();\n\n        const maxTextPerc = this.jobsWidth / this.boxWidth * 100;\n        const threshold = 40;\n        const overage = maxTextPerc / threshold;\n        let adjustedWidth;\n        if (maxTextPerc > threshold) {\n            adjustedWidth = this.boxWidth * overage;\n        } else {\n            adjustedWidth = this.boxWidth;\n        }\n\n        this.boundingBox.attr('width', adjustedWidth);\n        this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n        if (flipped) {\n            this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n            this.boundingBox.attr('x', -adjustedWidth - 20);\n            this.circleSuccess.attr('cx', -adjustedWidth);\n            this.circleFail.attr('cx', -adjustedWidth);\n            this.failedIcon.attr('x', -adjustedWidth - 7);\n            this.successIcon.attr('x', -adjustedWidth - 7);\n            this.successText.attr('x', -adjustedWidth + 17);\n            this.failText.attr('x', -adjustedWidth + 17);\n            this.successful.attr('x', -this.successTextWidth - 20 - 12);\n            this.failed.attr('x', -this.failTextWidth - 20 - 12);\n            this.date.attr('x', -adjustedWidth - 5);\n            this.jobs.attr('x', -this.jobsWidth / 2 - 7);\n            this.clickMore.attr('x', -adjustedWidth);\n        } else {\n            this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n            this.boundingBox.attr('x', 10);\n            this.circleSuccess.attr('cx', 26);\n            this.circleFail.attr('cx', 26);\n            this.failedIcon.attr('x', 19);\n            this.successIcon.attr('x', 19);\n            this.successText.attr('x', 43);\n            this.failText.attr('x', 43);\n            this.successful.attr('x', (adjustedWidth - this.successTextWidth));\n            this.failed.attr('x', (adjustedWidth - this.failTextWidth));\n            this.date.attr('x', 20);\n            this.jobs.attr('x', (adjustedWidth));\n            this.clickMore.attr('x', 20);\n        }\n\n        this.toolTipBase.style('opacity', 1);\n        this.toolTipBase.interrupt();\n    }\n\n    handleMouseOut = () => {\n        this.toolTipBase\n        .transition()\n        .delay(15)\n        .style('opacity', 0)\n        .style('pointer-events', 'none');\n    }\n}\n\nexport default Tooltip;\n","/*eslint camelcase: [\"error\", {properties: \"never\"}]*/\nimport React, { Component } from 'react';\nimport {\n    withRouter\n} from 'react-router-dom';\n\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { stringify } from 'query-string';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\n\nclass BarChart extends Component {\n    constructor(props) {\n        super(props);\n        this.draw = this.draw.bind(this);\n        this.init = this.init.bind(this);\n        this.resize = this.resize.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.state = {\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    redirectToJobExplorer({ data: { DATE: date }}) {\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const initialQueryParams = {\n            start_date: formattedDate,\n            end_date: formattedDate,\n            quick_date_range: 'custom',\n            status: [ 'failed', 'successful' ]\n        };\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => { this.init(); }, 500)\n        });\n    }\n\n    init() {\n        this.draw();\n    }\n\n    // Methods\n    draw() {\n        // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const parseTime = d3.timeParse('%Y-%m-%d');\n        let { data: unformattedData, value } = this.props;\n        const data = unformattedData.reduce((formatted, { created, successful, failed }) => {\n            let DATE = parseTime(created) || new Date();\n            let RAN = +successful || 0;\n            let FAIL = +failed || 0;\n            let TOTAL = +successful + failed || 0;\n            return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n        }, []);\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n        const x = d3\n        .scaleBand()\n        .rangeRound([ 0, width ])\n        .padding(0.35); // percentage\n        const y = d3.scaleLinear().range([ height, 0 ]);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n                this.props.margin.left +\n                ',' +\n                this.props.margin.top +\n                ')'\n        );\n        //[fail, success]\n        let colors = d3.scaleOrdinal([ '#6EC664', '#A30000' ]);\n\n        const barTooltip = new Tooltip({\n            svg: '#' + this.props.id,\n            colors\n        });\n        const status = [ 'FAIL', 'RAN' ];\n\n        // stack our data\n        const stack = d3\n        .stack()\n        .keys(status)\n        .order(d3.stackOrderNone)\n        .offset(d3.stackOffsetNone);\n\n        const layers = stack(data);\n        // Scale the range of the data\n        x.domain(layers[0].map(d => d.data.DATE));\n        y.domain([ 0, d3.max(layers[layers.length - 1], d => d[1] * 1.15) || 8 ]);\n        // Add the Y Axis\n        svg\n        .append('g')\n        .attr('class', 'y-axis')\n        .call(\n            d3\n            .axisLeft(y)\n            .tickSize(-width, 0, 0)\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.y-axis .tick text').attr('x', -5);\n        // text label for the y axis\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Jobs across all clusters');\n        // Add the X Axis\n        let ticks;\n        const maxTicks = Math.round(data.length / (value / 2));\n        ticks = data.map(d => d.DATE);\n        if (value === 31) {\n            ticks = data.map((d, i) =>\n                i % maxTicks === 0 ? d.DATE : undefined).filter(item => item);\n        }\n\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(\n            d3\n            .axisBottom(x)\n            .tickValues(ticks)\n            .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.x-axis .tick text')\n        .attr('y', 10);\n\n        // text label for the x axis\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' +\n                width / 2 +\n                ' ,' +\n                (height + this.props.margin.top + 20) +\n                ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n\n        const layer = svg\n        .selectAll('layer')\n        .data(layers)\n        .enter()\n        .append('g')\n        .attr('class', 'layer')\n        .style('fill', (_d, i) => colors(i));\n        layer\n        .selectAll('rect')\n        .data(d => d)\n        .enter()\n        .append('rect')\n        .attr('x', d => x(d.data.DATE))\n        .attr('y', d => y(d[0]))\n        .attr('height', 0)\n        .attr('width', x.bandwidth() - 1)\n        .transition()\n        .duration(550)\n        .ease(d3.easeCubic)\n        .attr('y', d => y(d[1]))\n        .attr('height', d => y(d[0]) - y(d[1]));\n        layer\n        .selectAll('rect')\n        .on('mouseover', barTooltip.handleMouseOver)\n        .on('mousemove', barTooltip.handleMouseOver)\n        .on('mouseout', barTooltip.handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.value !== this.props.value) {\n            this.init();\n        }\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        return <div id={ this.props.id } />;\n    }\n}\n\nBarChart.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    value: PropTypes.number,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    history: PropTypes.object\n};\n\nexport default initializeChart(withRouter(BarChart));\n","/*eslint camelcase: [\"error\", {properties: \"never\"}]*/\nimport React, { Component } from 'react';\nimport {\n    withRouter\n} from 'react-router-dom';\nimport initializeChart from './BaseChart';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\nimport { stringify } from 'query-string';\nimport * as d3 from 'd3';\n\nclass LineChart extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.updateCluster = this.updateCluster.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.state = {\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    redirectToJobExplorer({ DATE: date }) {\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const { clusterId } = this.props;\n        const initialQueryParams = {\n            start_date: formattedDate,\n            end_date: formattedDate,\n            quick_date_range: 'custom',\n            status: [ 'failed', 'successful' ],\n            cluster_id: clusterId\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => { this.init(); }, 500)\n        });\n    }\n\n    getTickCount() {\n        const { value } = this.props;\n        if (value > 20) {\n            return (value / 2);\n        } else {\n            return value;\n        }\n    }\n    updateCluster() {\n        this.init();\n    }\n    init() {\n        this.draw();\n    }\n    // Methods\n    draw() {\n    // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n\n        function transition(path) {\n            path\n            .transition()\n            .duration(1000)\n            .attrTween('stroke-dasharray', tweenDash);\n        }\n\n        function tweenDash() {\n            const l = this.getTotalLength();\n            const i = d3.interpolateString('0,' + l, l + ',' + l);\n            return function(t) {\n                return i(t);\n            };\n        }\n\n        const x = d3.scaleTime().rangeRound([ 0, width ]);\n        const y = d3.scaleLinear().range([ height, 0 ]);\n\n        //[success, fail, total]\n        let colors = d3.scaleOrdinal([ '#6EC664', '#A30000', '#06C' ]);\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n        .attr('z', 100)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n        // Tooltip\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id,\n            colors\n        });\n        const { data: unformattedData, value } = this.props;\n        const parseTime = d3.timeParse('%Y-%m-%d');\n\n        const data = unformattedData.reduce((formatted, { created, successful, failed }) => {\n            let DATE = parseTime(created) || new Date();\n            let RAN = +successful || 0;\n            let FAIL = +failed || 0;\n            let TOTAL = +successful + failed || 0;\n            return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n        }, []);\n        // Scale the range of the data\n        x.domain(\n            d3.extent(data, function(d) {\n                return d.DATE;\n            })\n        );\n        y.domain([\n            0,\n            d3.max(data, function(d) {\n                return d.TOTAL * 1.15 || 8;\n            })\n        ]);\n\n        const successLine = d3\n        .line()\n        .curve(d3.curveMonotoneX)\n        .x(function(d) {\n            return x(d.DATE);\n        })\n        .y(function(d) {\n            return y(d.RAN);\n        });\n\n        const failLine = d3\n        .line()\n        .defined(d => !isNaN(d.FAIL))\n        .curve(d3.curveMonotoneX)\n        .x(function(d) {\n            return x(d.DATE);\n        })\n        .y(function(d) {\n            return y(d.FAIL);\n        });\n        // Add the Y Axis\n        svg\n        .append('g')\n        .attr('class', 'y-axis')\n        .call(\n            d3\n            .axisLeft(y)\n            .ticks(10)\n            .tickSize(-width)\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.y-axis .tick text').attr('x', -5);\n\n        // text label for the y axis\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Job runs');\n        // Add the X Axis\n        let ticks;\n        const maxTicks = Math.round(data.length / (value / 2));\n        ticks = data.map(d => d.DATE);\n        if (value === 31) {\n            ticks = data.map((d, i) =>\n                i % maxTicks === 0 ? d.DATE : undefined).filter(item => item);\n        }\n\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(\n            d3\n            .axisBottom(x)\n            .tickValues(ticks)\n            .tickSize(-height)\n            .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n        ) // \"Jan-01\"\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n        // text label for the x axis\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' +\n                width / 2 +\n                ' ,' +\n                (height + this.props.margin.top + 20) +\n                ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n        const vertical = svg\n        .append('path')\n        .attr('class', 'mouse-line')\n        .style('stroke', 'black')\n        .style('stroke-width', '3px')\n        .style('stroke-dasharray', ('3, 3'))\n        .style('opacity', '0');\n\n        const handleMouseOver = function(d) {\n            tooltip.handleMouseOver(d);\n            // show vertical line\n            vertical.transition().style('opacity', '1');\n        };\n\n        const handleMouseMove = function() {\n            let intersectX = this.cx.baseVal.value;\n            vertical\n            .attr('d', function () {\n                let d = 'M' + intersectX + ',' + height;\n                d += ' ' + intersectX + ',' + 0;\n                return d;\n            });\n        };\n\n        const handleMouseOut = function() {\n            // hide tooltip\n            tooltip.handleMouseOut();\n            // hide vertical line\n            vertical.transition().style('opacity', 0);\n        };\n\n        // Add the successLine path.\n        svg\n        .append('path')\n        .data([ data ])\n        .attr('class', 'line')\n        .style('fill', 'none')\n        .style('stroke', () => colors(1))\n        .attr('stroke-width', 2)\n        .attr('d', successLine)\n        .call(transition);\n\n        // Add the failLine path.\n        svg\n        .append('path')\n        .data([ data ])\n        .attr('class', 'line')\n        .style('fill', 'none')\n        .style('stroke', () => colors(0))\n        .attr('stroke-width', 2)\n        .attr('d', failLine)\n        .call(transition);\n        svg\n        .selectAll('dot')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('r', 3)\n        .style('stroke', () => colors(1))\n        .style('fill', () => colors(1))\n        .attr('cx', function(d) {\n            return x(d.DATE);\n        })\n        .attr('cy', function(d) {\n            return y(d.RAN);\n        })\n\n        .on('mouseover', handleMouseOver)\n        .on('mousemove', handleMouseMove)\n        .on('mouseout', handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n        // create our failLine circles\n        svg\n        .selectAll('dot')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('r', 3)\n        .style('stroke', () => colors(0))\n        .style('fill', () => colors(0))\n        .attr('cx', function(d) {\n            return x(d.DATE);\n        })\n        .attr('cy', function(d) {\n            return y(d.FAIL);\n        })\n        .on('mouseover', handleMouseOver)\n        .on('mousemove', handleMouseMove)\n        .on('mouseout', handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n    }\n\n    componentDidMount() {\n        this.updateCluster();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.value !== this.props.value) {\n            this.updateCluster();\n        }\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        return <div id={ this.props.id } />;\n    }\n}\n\nLineChart.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    value: PropTypes.number,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    history: PropTypes.object,\n    clusterId: PropTypes.number\n};\n\nexport default initializeChart(withRouter(LineChart));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { trimStr } from '../Utilities/helpers';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell\n} from '@patternfly/react-core';\n\nconst DataListCell = styled(PFDataListCell)`\n    --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst ModulesList = ({ modules, isLoading }) => (\n    <DataList aria-label=\"Top Modules\" style={ {\n        maxHeight: '400px',\n        overflow: 'auto',\n        height: '400px',\n        background: 'white'\n    } }>\n        <DataListItem aria-labelledby=\"top-modules-header\">\n            <DataListCell>\n                <h3>Top modules</h3>\n            </DataListCell>\n            <DataCellEnd>\n                <h3>Usage</h3>\n            </DataCellEnd>\n        </DataListItem>\n        { isLoading && (\n            <PFDataListItem\n                aria-labelledby=\"modules-loading\"\n                key={ isLoading }\n                style={ { border: 'none' } }\n            >\n                <PFDataListCell>\n                    <LoadingState />\n                </PFDataListCell>\n            </PFDataListItem>\n        ) }\n        { !isLoading && modules.length <= 0 && (\n            <PFDataListItem\n                aria-labelledby=\"modules-no-data\"\n                key={ isLoading }\n                style={ { border: 'none' } }\n            >\n                <PFDataListCell>\n                    <NoData />\n                </PFDataListCell>\n            </PFDataListItem>\n        ) }\n        { !isLoading && modules.filter(module => module.module !== null).map(({ module, count }, index) => (\n            <DataListItem aria-labelledby=\"top-modules-detail\" key={ index }>\n                <DataListCell>\n                    <span>{ trimStr(module) }</span>\n                </DataListCell>\n                <DataCellEnd>\n                    { count }\n                </DataCellEnd>\n            </DataListItem>\n        )) }\n    </DataList>\n);\n\nModulesList.propTypes = {\n    modules: PropTypes.array,\n    isLoading: PropTypes.bool\n};\n\nexport default ModulesList;\n","/*eslint camelcase: [\"error\", {allow: [\"template_id\", \"job_type\", \"cluster_id\", \"start_date\", \"end_date\", \"quick_date_range\"]}]*/\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { formatDateTime, formatSeconds, formatPercentage } from '../Utilities/helpers';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\nimport { Paths } from '../paths';\nimport { stringify } from 'query-string';\n\nimport {\n    Button,\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell,\n    Modal,\n    Label\n} from '@patternfly/react-core';\n\nimport { CircleIcon } from '@patternfly/react-icons';\n\nimport { readTemplateJobs } from '../Api';\n\nconst success = (\n    <CircleIcon\n        size=\"sm\"\n        key=\"5\"\n        style={ { color: 'rgb(110, 198, 100)', marginRight: '5px' } }\n    />\n);\nconst fail = (\n  <>\n    <CircleIcon\n        size=\"sm\"\n        key=\"5\"\n        style={ { color: 'rgb(163, 0, 0)', marginRight: '5px' } }\n    />\n    <span id=\"fail-icon\">!</span>\n  </>\n);\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst PFDataListItemNoBorder = styled(PFDataListItem)`\n    border-bottom: none;\n    margin-bottom: -20px;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataListItemCompact = styled(DataListItem)`\n  padding: 0;\n  > .pf-c-data-list__cell {\n    font-weight: 600;\n  }\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst DataListCellCompact = styled(DataListCell)`\n    padding: 7px;\n`;\n\nconst DataListFocus = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, auto);\n    grid-gap: 10px;\n    padding: var(--pf-global--spacer--lg);\n    background: #ebebeb;\n    border: 1px solid #ccc;\n    border-top: none;\n    margin-bottom: 20px;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst DataCellEndCompact = styled(DataCellEnd)`\n    padding: 7px !important;\n`;\n\nconst formatTopFailedTask = data => {\n    if (!data) {\n        return;\n    }\n\n    if (data && data[0]) {\n        const percentage = formatPercentage(data[0].fail_rate);\n        return `${data[0].task_name} ${percentage}`;\n    }\n\n    return `Unavailable`;\n};\n\nconst TemplatesList = ({ history, clusterId, templates, isLoading, queryParams }) => {\n    const [ isModalOpen, setIsModalOpen ] = useState(false);\n    const [ selectedId, setSelectedId ] = useState(null);\n    const [ selectedTemplate, setSelectedTemplate ] = useState([]);\n    const [ relatedJobs, setRelatedJobs ] = useState([]);\n\n    useEffect(() => {\n        const fetchTemplateDetails = () => {\n            return readTemplateJobs(selectedId, { params: queryParams });\n        };\n\n        const update = async () => {\n            await window.insights.chrome.auth.getUser();\n            fetchTemplateDetails().then(data => {\n                setSelectedTemplate(data);\n                setRelatedJobs(data.related_jobs);\n            });\n        };\n\n        if (selectedId) {\n            update();\n        }\n\n    }, [ selectedId ]);\n\n    const redirectToJobExplorer = () => {\n        const { jobExplorer } = Paths;\n        const initialQueryParams = {\n            template_id: selectedId,\n            status: [ 'successful', 'failed', 'new', 'pending', 'waiting', 'error', 'canceled', 'running' ],\n            job_type: [ 'job' ],\n            start_date: queryParams.startDate,\n            end_date: queryParams.endDate,\n            quick_date_range: 'custom',\n            cluster_id: clusterId\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    return (\n    <>\n      <DataList aria-label=\"Top Templates\" style={ {\n          maxHeight: '400px',\n          overflow: 'auto',\n          height: '400px',\n          background: 'white'\n      } }>\n          <DataListItem aria-labelledby=\"top-templates-header\">\n              <DataListCell>\n                  <h3>Top templates</h3>\n              </DataListCell>\n              <DataCellEnd>\n                  <h3>Usage</h3>\n              </DataCellEnd>\n          </DataListItem>\n          { isLoading && (\n              <PFDataListItem\n                  aria-labelledby=\"templates-loading\"\n                  key={ isLoading }\n                  style={ { border: 'none' } }\n\n              >\n                  <PFDataListCell>\n                      <LoadingState />\n                  </PFDataListCell>\n              </PFDataListItem>\n          ) }\n          { !isLoading && templates.length <= 0 && (\n              <PFDataListItem\n                  aria-labelledby=\"templates-no-data\"\n                  key={ isLoading }\n                  style={ { border: 'none' } }\n              >\n                  <PFDataListCell>\n                      <NoData />\n                  </PFDataListCell>\n              </PFDataListItem>\n          ) }\n          { !isLoading && templates.map(({ name, count, id }, index) => (\n              <DataListItem aria-labelledby=\"top-templates-detail\" key={ index }>\n                  <DataListCell>\n                      <a\n                          onClick={ () => {\n                              setIsModalOpen(true);\n                              setSelectedId(id);\n                          } }\n                      >\n                          { name }\n                      </a>\n                  </DataListCell>\n                  <DataCellEnd>\n                      { count }\n                  </DataCellEnd>\n              </DataListItem>\n          )) }\n      </DataList>\n      { selectedTemplate && selectedTemplate !== [] && (\n          <Modal\n              width={ '80%' }\n              title={ selectedTemplate.name ? selectedTemplate.name : 'no-template-name' }\n              isOpen={ isModalOpen }\n              onClose={ () => {\n                  setIsModalOpen(false);\n                  setSelectedTemplate([]);\n                  setRelatedJobs([]);\n                  setSelectedId(null);\n              } }\n              actions={ [\n                  <Button\n                      key=\"cancel\"\n                      variant=\"secondary\"\n                      onClick={ () => {\n                          setIsModalOpen(false);\n                          setSelectedTemplate([]);\n                          setRelatedJobs([]);\n                          setSelectedId(null);\n                      } }\n                  >\n              Close\n                  </Button>\n              ] }\n          >\n              <DataList aria-label=\"Selected Template Details\">\n                  <PFDataListItemNoBorder\n                      aria-labelledby=\"Selected Template Statistics\"\n                  >\n                      <DataListFocus>\n                          <div aria-labelledby=\"job runs\">\n                              <b style={ { marginRight: '10px' } }>Number of runs</b>\n                              { selectedTemplate.total_run_count ?\n                                  selectedTemplate.total_run_count : 'Unavailable' }\n                          </div>\n                          <div aria-labelledby=\"total time\">\n                              <b style={ { marginRight: '10px' } }>Total time</b>\n                              { selectedTemplate.total_run ?\n                                  selectedTemplate.total_run : 'Unavailable' }\n                          </div>\n                          <div aria-labelledby=\"Avg Time\">\n                              <b style={ { marginRight: '10px' } }>Avg time</b>\n                              { selectedTemplate.average_run ?\n                                  selectedTemplate.average_run : 'Unavailable' }\n                          </div>\n                          <div aria-labelledby=\"success rate\">\n                              <b style={ { marginRight: '10px' } }>Success rate</b>\n                              { !isNaN(selectedTemplate.success_rate) ?\n                                  formatPercentage(selectedTemplate.success_rate) : 'Unavailable' }\n                          </div>\n                          <div aria-labelledby=\"most failed task\">\n                              <b style={ { marginRight: '10px' } }>Most failed task</b>\n                              { selectedTemplate.most_failed_tasks ?\n                                  formatTopFailedTask(selectedTemplate.most_failed_tasks) : 'Unavailable' }\n                          </div>\n                      </DataListFocus>\n                  </PFDataListItemNoBorder>\n                  <DataListItemCompact>\n                      <DataListCellCompact key=\"last5jobs\">\n                          <Label variant=\"outline\">Last 5 jobs</Label>\n                      </DataListCellCompact>,\n                      <DataCellEndCompact>\n                          <Button component=\"a\" onClick={ redirectToJobExplorer } variant=\"link\">\n                              View all jobs\n                          </Button>\n                      </DataCellEndCompact>\n                  </DataListItemCompact>\n                  <DataListItemCompact aria-labelledby=\"datalist header\">\n                      <PFDataListCell key=\"job heading\">Id/Name</PFDataListCell>\n                      <PFDataListCell key=\"cluster heading\">Cluster</PFDataListCell>\n                      <PFDataListCell key=\"start time heading\">Start Time</PFDataListCell>\n                      <PFDataListCell key=\"total time heading\">Total Time</PFDataListCell>\n                  </DataListItemCompact>\n                  { relatedJobs.length <= 0 && <LoadingState /> }\n                  { relatedJobs.length > 0 &&\n              relatedJobs.map((job, index) => (\n                  <DataListItem\n                      style={ { padding: '10px 0' } }\n                      key={ `job-details-${index}` }\n                      aria-labelledby=\"job details\"\n                  >\n                      <PFDataListCell key=\"job name\">\n                          { job.status === 'successful' ? success : fail }{ ' ' }\n                          { job.job_id } - { job.job_name }\n                      </PFDataListCell>\n                      <PFDataListCell key=\"job cluster\">\n                          { job.cluster_label || job.install_uuid }\n                      </PFDataListCell>\n                      <PFDataListCell key=\"start time\">\n                          { formatDateTime(job.start_time) }\n                      </PFDataListCell>\n                      <PFDataListCell key=\"total time\">\n                          { formatSeconds(job.total_time) }\n                      </PFDataListCell>\n                  </DataListItem>\n              )) }\n              </DataList>\n          </Modal>\n      ) }\n    </>\n    );\n};\n\nTemplatesList.propTypes = {\n    templates: PropTypes.array,\n    isLoading: PropTypes.bool,\n    queryParams: PropTypes.object\n};\n\nexport default TemplatesList;\n","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport {\n    preflightRequest,\n    readChart30,\n    readClusters,\n    readModules,\n    readTemplates\n} from '../../Api';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle,\n    FormSelect,\n    FormSelectOption\n} from '@patternfly/react-core';\n\nimport { FilterIcon } from '@patternfly/react-icons';\n\nimport BarChart from '../../Charts/BarChart';\nimport LineChart from '../../Charts/LineChart';\nimport ModulesList from '../../Components/ModulesList';\nimport TemplatesList from '../../Components/TemplatesList';\n\nconst CardTitle = styled(PFCardTitle)`\n  border-bottom: 2px solid #ebebeb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &&& {\n    min-height: 60px;\n    --pf-c-card--first-child--PaddingTop: 10px;\n    --pf-c-card__header--not-last-child--PaddingBottom: 10px;\n\n    h3 {\n      font-size: 0.875em;\n    }\n  }\n`;\n\nconst timeFrameOptions = [\n    { value: 'please choose', label: 'Select date range', disabled: true },\n    { value: 7, label: 'Past week', disabled: false },\n    { value: 14, label: 'Past 2 weeks', disabled: false },\n    { value: 31, label: 'Past month', disabled: false }\n];\n\nfunction formatClusterName(data) {\n    const defaultClusterOptions = [\n        { value: 'please choose', label: 'Select cluster', disabled: true },\n        { value: 'all', label: 'All clusters', disabled: false }\n    ];\n    return data.reduce(\n        (formatted, { label, cluster_id: id, install_uuid: uuid }) => {\n            if (label.length === 0) {\n                formatted.push({ value: id, label: uuid, disabled: false });\n            } else {\n                formatted.push({ value: id, label, disabled: false });\n            }\n\n            return formatted;\n        },\n        defaultClusterOptions\n    );\n}\n\nconst initialQueryParams = {\n    startDate: moment()\n    .subtract(1, 'month')\n    .format('YYYY-MM-DD'),\n    endDate: moment().format('YYYY-MM-DD')\n};\n\nconst Clusters = ({ history }) => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [ barChartData, setBarChartData ] = useState([]);\n    const [ lineChartData, setLineChartData ] = useState([]);\n    const [ templatesData, setTemplatesData ] = useState([]);\n    const [ modulesData, setModulesData ] = useState([]);\n    const [ clusterOptions, setClusterOptions ] = useState([]);\n    const [ clusterTimeFrame, setClusterTimeFrame ] = useState(31);\n    const [ selectedCluster, setSelectedCluster ] = useState('all');\n    const [ isLoading, setIsLoading ] = useState(true);\n    const { queryParams, setEndDate, setStartDate, setId } = useQueryParams(\n        initialQueryParams\n    );\n\n    useEffect(() => {\n        setIsLoading(true);\n        window.insights.chrome.auth.getUser().then(() =>\n            preflightRequest().then(() =>\n                readClusters().then(({ templates: clustersData = []}) => {\n                    const clusterOptions = formatClusterName(clustersData);\n                    setClusterOptions(clusterOptions);\n                    setIsLoading(false);\n                })\n            ).catch((error) => {\n                setPreFlightError({ preflightError: error });\n            })\n        );\n    }, []);\n\n    // Get and update the data\n    useEffect(() => {\n        setIsLoading(true);\n        window.insights.chrome.auth.getUser().then(() =>\n            Promise.all([\n                readChart30({ params: queryParams }),\n                readModules({ params: queryParams }),\n                readTemplates({ params: queryParams })\n            ]).then(([\n                { data: chartData = []},\n                { modules: modulesData = []},\n                { templates: templatesData = []}\n            ]) => {\n                queryParams.id ? setLineChartData(chartData) : setBarChartData(chartData);\n                setModulesData(modulesData);\n                setTemplatesData(templatesData);\n                setIsLoading(false);\n            }).catch(() => [])\n        );\n    }, [ queryParams ]);\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={ 'Clusters' } />\n            </PageHeader>\n            { preflightError && (\n                <Main>\n                    <EmptyState { ...preflightError } />\n                </Main>\n            ) }\n            { !preflightError && (\n        <>\n          <Main style={ { paddingBottom: '0' } }>\n              <Card>\n                  <CardTitle style={ { paddingBottom: '0', paddingTop: '0' } }>\n                      <h2>\n                          <FilterIcon style={ { marginRight: '10px' } } />\n                  Filter\n                      </h2>\n                      <div style={ { display: 'flex', justifyContent: 'flex-end' } }>\n                          <FormSelect\n                              name=\"selectedCluster\"\n                              value={ selectedCluster }\n                              onChange={ value => {\n                                  setSelectedCluster(value);\n                                  setId(value);\n                              } }\n                              aria-label=\"Select Cluster\"\n                              style={ { margin: '2px 10px' } }\n                          >\n                              { clusterOptions.map(({ value, label, disabled }, index) => (\n                                  <FormSelectOption\n                                      isDisabled={ disabled }\n                                      key={ index }\n                                      value={ value }\n                                      label={ label }\n                                  />\n                              )) }\n                          </FormSelect>\n                          <FormSelect\n                              name=\"clusterTimeFrame\"\n                              value={ clusterTimeFrame }\n                              onChange={ value => {\n                                  setClusterTimeFrame(+value);\n                                  setEndDate();\n                                  setStartDate(+value);\n                              } }\n                              aria-label=\"Select Date Range\"\n                              style={ { margin: '2px 10px' } }\n                          >\n                              { timeFrameOptions.map((option, index) => (\n                                  <FormSelectOption\n                                      isDisabled={ option.disabled }\n                                      key={ index }\n                                      value={ option.value }\n                                      label={ option.label }\n                                  />\n                              )) }\n                          </FormSelect>\n                      </div>\n                  </CardTitle>\n              </Card>\n          </Main>\n          <Main>\n              <Card>\n                  <PFCardTitle>\n                      <h2>Job status</h2>\n                  </PFCardTitle>\n                  <CardBody>\n                      { isLoading && !preflightError && <LoadingState /> }\n                      { selectedCluster === 'all' &&\n                  barChartData.length > 0 &&\n                  !isLoading && (\n                          <BarChart\n                              margin={ { top: 20, right: 20, bottom: 50, left: 70 } }\n                              id=\"d3-bar-chart-root\"\n                              data={ barChartData }\n                              value={ clusterTimeFrame }\n                          />\n                      ) }\n                      { selectedCluster !== 'all' &&\n                  lineChartData.length > 0 &&\n                  !isLoading && (\n                          <LineChart\n                              margin={ { top: 20, right: 20, bottom: 50, left: 70 } }\n                              id=\"d3-line-chart-root\"\n                              data={ lineChartData }\n                              value={ clusterTimeFrame }\n                              clusterId={ queryParams.id }\n                          />\n                      ) }\n                  </CardBody>\n              </Card>\n              <div\n                  className=\"dataCard\"\n                  style={ { display: 'flex', marginTop: '20px' } }\n              >\n                  <TemplatesList\n                      history={ history }\n                      queryParams={ queryParams }\n                      clusterId={ queryParams.id }\n                      templates={ templatesData.slice(0, 10) }\n                      isLoading={ isLoading }\n                  />\n                  <ModulesList\n                      modules={ modulesData.slice(0, 10) }\n                      isLoading={ isLoading }\n                  />\n              </div>\n          </Main>\n        </>\n            ) }\n        </React.Fragment>\n    );\n};\n\nexport default Clusters;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Switch as PFSwitch } from '@patternfly/react-core';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  overflow: auto;\n  width: 100%;\n  height: ${props => props.height};\n`;\n\nconst LegendDetail = styled.div`\n  display: flex;\n  padding: 7.5px 15px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  overflow: auto;\n`;\n\nconst Color = styled.div.attrs(props => ({\n    color: props.color || 'black'\n}))`\n  min-width: 12px;\n  height: 12px;\n  background: ${props => props.color};\n  margin-right: 20px;\n`;\n\nconst Title = styled.span`\n  font-size: 12px;\n  display: inline-block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n`;\n\nconst SubTitle = styled.span`\n    font-size: 15px;\n    margin-left: 20px;\n`;\n\nconst Switch = styled(PFSwitch)`\n  margin-left: 20px;\n\n  svg {\n    display: none;\n  }\n`;\n\nclass Legend extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(_isChecked, { target: { value }}) {\n        const { onToggle } = this.props;\n        const selectedId = parseFloat(value);\n        onToggle(selectedId);\n    };\n    render() {\n        const { data, selected, height } = this.props;\n        return (\n            <Container height={ height }>\n                { data.map(\n                    ({ name, value, id, count }, index) => (\n                        <LegendDetail key={ index }>\n                            <Wrapper>\n                                <Color color={ value } />\n                                <Title>{ name }</Title>\n                            </Wrapper>\n                            { count && (\n                                <SubTitle>{ count }%</SubTitle>\n                            ) }\n                            { selected && (\n                                <Switch\n                                    isChecked={ selected.some(selection => selection === id) }\n                                    onChange={ this.handleChange }\n                                    aria-label={ name }\n                                    value={ id }\n                                    id={ `${name}-${id}` }\n                                />\n                            ) }\n                        </LegendDetail>\n                    )) }\n            </Container>\n        );\n    }\n}\n\nLegend.propTypes = {\n    data: PropTypes.array,\n    selected: PropTypes.array,\n    onToggle: PropTypes.func,\n    height: PropTypes.string\n};\n\nexport default Legend;\n","const pfmulti = [\n    '#06C',\n    '#4CB140',\n    '#009596',\n    '#5752D1',\n    '#F4C145',\n    '#EC7A08',\n    '#8BC1F7',\n    '#23511E',\n    '#A2D9D9',\n    '#2A265F',\n    '#F9E0A2',\n    '#8F4700',\n    '#002F5D'\n];\n\nexport { pfmulti };\n","/* eslint-disable camelcase */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport {\n    withRouter\n} from 'react-router-dom';\n\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport Legend from '../Utilities/Legend';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\nimport { stringify } from 'query-string';\nimport { pfmulti } from '../Utilities/colors';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nconst color = d3.scaleOrdinal(pfmulti);\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        this.draw();\n    }\n\n    draw() {\n        this.width = 125;\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 125;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', 68)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.date = this.toolTipBase\n        .append('text')\n        .attr('x', 20)\n        .attr('y', 14)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Date');\n        this.jobs = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 72)\n        .attr('y', 14)\n        .text('0 Jobs');\n        this.orgName = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', -1)\n        .attr('font-size', 12)\n        .text('Org');\n        this.clickMore = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 20)\n        .attr('y', 30)\n        .attr('font-size', 12)\n        .text('Click for details');\n    }\n\n  handleMouseOver = d => {\n      let date;\n      let orgName;\n      let jobs;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      if (!d) {\n          return;\n      } else {\n          const maxLength = 16;\n          date = d.date;\n          orgName = d.org_name;\n          jobs = d.value;\n          if (d.org_name.length > maxLength) {\n              orgName = d.org_name.slice(0, maxLength).concat('...');\n          }\n      }\n\n      const formatTooltipDate = d3.timeFormat('%m/%d');\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n\n      this.date.text('' + formatTooltipDate(date));\n      this.orgName.text('' + orgName);\n      this.jobs.text('' + jobs + ' Jobs');\n      this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n      const maxTextPerc = this.jobsWidth / this.boxWidth * 100;\n      const threshold = 45;\n      const overage = maxTextPerc / threshold;\n      let adjustedWidth;\n      if (maxTextPerc > threshold) {\n          adjustedWidth = this.boxWidth * overage;\n      } else {\n          adjustedWidth = this.boxWidth;\n      }\n\n      this.boundingBox.attr('width', adjustedWidth);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n          this.boundingBox.attr('x', -adjustedWidth - 20);\n          this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n          this.orgName.attr('x', -adjustedWidth - 7);\n          this.clickMore.attr('x', -adjustedWidth - 7);\n          this.date.attr('x', -adjustedWidth - 7);\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n          this.boundingBox.attr('x', 10);\n          this.orgName.attr('x', 20);\n          this.clickMore.attr('x', 20);\n          this.jobs.attr('x', adjustedWidth / 2);\n          this.date.attr('x', 20);\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass GroupedBarChart extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.handleToggle = this.handleToggle.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.orgsList = props.data[0].orgs;\n        this.selection = [];\n        this.state = {\n            colors: [],\n            selected: [],\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    // Methods\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => { this.init(); }, 500)\n        });\n    }\n\n    redirectToJobExplorer({ date, id }) {\n        let org_id;\n        if (id === -1) {\n            // disable clicking on \"others\" block\n            return;\n        }\n\n        org_id = id;\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const initialQueryParams = {\n            start_date: formattedDate,\n            end_date: formattedDate,\n            status: [ 'successful', 'failed', 'new', 'pending', 'waiting', 'error', 'canceled', 'running' ],\n            quick_date_range: 'custom',\n            org_id\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    handleToggle(selectedId) {\n        if (this.selection.indexOf(selectedId) === -1) {\n            this.selection = [ ...this.selection, selectedId ];\n        } else if (this.selection.includes(selectedId)) {\n            this.selection = [ ...this.selection ].filter(s => s !== selectedId);\n        }\n\n        this.setState({ selected: this.selection });\n        this.draw();\n    }\n\n    init() {\n        // create the first 8 selected data points\n        if (this.selection.length === 0) {\n            this.orgsList.forEach((org, index) => {\n                if (index <= 7) {\n                    this.handleToggle(org.id);\n                }\n            });\n        }\n\n        // create our colors array to send to the Legend component\n        const colors = this.orgsList.reduce((colors, org) => {\n            colors.push({\n                name: org.org_name,\n                value: color(org.org_name),\n                id: org.id\n            });\n            return colors;\n        }, []);\n        this.setState({ colors });\n        this.draw();\n    }\n\n    draw() {\n        // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        let { data: unformattedData, timeFrame } = this.props;\n        const selected = this.selection;\n        const parseTime = d3.timeParse('%Y-%m-%d');\n        const data = unformattedData.reduce((formatted, { date, orgs: orgsList }) => {\n            date = parseTime(date);\n            const selectedOrgs = orgsList.filter(({ id }) => selected.includes(id));\n            selectedOrgs.map(org => {\n                org.date = date;\n            });\n            return formatted.concat({ date, selectedOrgs });\n        }, []);\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n        // x scale of entire chart\n        const x0 = d3\n        .scaleBand()\n        .range([ 0, width ])\n        .padding(0.35);\n        // x scale of individual grouped bars\n        const x1 = d3.scaleBand();\n        const y = d3.scaleLinear().range([ height, 0 ]);\n        // format our X Axis ticks\n        let ticks;\n        const maxTicks = Math.round(data.length / (timeFrame / 2));\n        ticks = data.map(d => d.date);\n        if (timeFrame === 31) {\n            ticks = data.map((d, i) =>\n                i % maxTicks === 0 ? d.date : undefined).filter(item => item);\n        }\n\n        const xAxis = d3\n        .axisBottom(x0)\n        .tickValues(ticks)\n        .tickFormat(d3.timeFormat('%-m/%-d'));\n\n        const yAxis = d3\n        .axisLeft(y)\n        .ticks(8)\n        .tickSize(-width, 0, 0);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n\n        const dates = data.map(d => d.date);\n        const selectedOrgNames = data[0].selectedOrgs.map(d => d.org_name);\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id\n        });\n        x0.domain(dates);\n        x1.domain(selectedOrgNames).range([ 0, x0.bandwidth() ]); // unsorted\n        y.domain([\n            0,\n            d3.max(data, date => d3.max(date.selectedOrgs, d => d.value * 1.15)) || 8\n        ]);\n\n        // add y axis\n        svg\n        .append('g')\n        .attr('class', 'y axis')\n        .call(yAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7')\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 6)\n        .attr('dy', '.71em')\n        .style('text-anchor', 'end')\n        .style('font-weight', 'bold')\n        .text('Value');\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Jobs across orgs');\n\n        // add x axis\n        svg\n        .append('g')\n        .attr('class', 'x axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(xAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' + width / 2 + ' ,' + (height + this.props.margin.top + 25) + ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n        // add the groups\n        let slice = svg.selectAll('.slice').data(data);\n        slice.exit().remove();\n\n        const enter = slice\n        .enter()\n        .append('g')\n        .attr('class', 'g foo')\n        .attr('transform', d => 'translate(' + x0(d.date) + ',0)');\n        slice = slice.merge(enter);\n        // add the individual bars\n        let bars = slice.selectAll('rect').data(function(d) {\n            return d.selectedOrgs;\n        });\n        bars.exit().remove();\n\n        const subEnter = bars\n        .enter()\n        .append('rect')\n        .attr('width', x1.bandwidth())\n        .attr('x', function(d) {\n            return x1(d.org_name);\n        }) // unsorted\n        .style('fill', function(d) {\n            return color(d.org_name);\n        })\n        .attr('y', function(d) {\n            return y(d.value);\n        })\n        .attr('height', function(d) {\n            return height - y(d.value);\n        })\n        .on('mouseover', function(d) {\n            d3.select(this).style('fill', d3.rgb(color(d.org_name)).darker(1));\n            tooltip.handleMouseOver();\n        })\n        .on('mousemove', tooltip.handleMouseOver)\n        .on('mouseout', function(d) {\n            d3.select(this).style('fill', color(d.org_name));\n            tooltip.handleMouseOut();\n        })\n        .on('click', this.redirectToJobExplorer);\n        bars = bars.merge(subEnter);\n    };\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        const { colors, selected } = this.state;\n        return (\n            <Wrapper>\n                <div id={ this.props.id } />\n                { colors.length > 0 && (\n                    <Legend\n                        id=\"d3-grouped-bar-legend\"\n                        data={ colors }\n                        selected={ selected }\n                        onToggle={ this.handleToggle }\n                        height=\"350px\"\n                    />\n                ) }\n            </Wrapper>\n        );\n    }\n}\n\nGroupedBarChart.propTypes = {\n    id: PropTypes.string,\n    isAccessible: PropTypes.bool,\n    data: PropTypes.array,\n    value: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    timeFrame: PropTypes.number,\n    history: PropTypes.object\n};\n\nexport default initializeChart(withRouter(GroupedBarChart));\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport { getTotal } from '../Utilities/helpers';\nimport Legend from '../Utilities/Legend';\nimport { pfmulti } from '../Utilities/colors';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        // defer drawing until we know the data shape\n        this.drawn = false;\n        // show the success rate or not\n        this.showSuccess = false;\n    }\n\n    draw(d) {\n        // chart1 has success rate data and chart2 does not ...\n        this.showSuccess = (d && d.data && 'success_rate' in d.data) ? true : false;\n        const boundingHeight = (this.showSuccess) ? 70 : 52;\n        const boundingWidth = (this.showSuccess) ? 120 : 108;\n\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBOx = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', boundingHeight)\n        .attr('width', boundingWidth)\n        .attr('fill', '#393f44');\n        this.orgName = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 0)\n        .text('Organization');\n        this.percentageTotal = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 16)\n        .text('0');\n        this.percentageSuccess = null;\n        if (this.showSuccess) {\n            this.percentageSuccess = this.toolTipBase\n            .append('text')\n            .attr('fill', 'white')\n            .attr('font-size', 12)\n            .attr('font-weight', 800)\n            .attr('x', 20)\n            .attr('y', 30)\n            .text('');\n        }\n    }\n\n  handleMouseOver = d => {\n      // treat draw() as a singleton to avoid a painted window effect\n      if (this.drawn !== true) {\n          this.draw(d);\n          this.drawn = true;\n      }\n\n      let perc;\n      let percSuccess;\n      let orgName;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      if (!d) {\n          return;\n      }\n\n      if (d && d.data) {\n          const maxLength = 16;\n          perc = d.data.percent;\n          percSuccess = d.data.success_rate;\n          orgName = d.data.name;\n          if (d.data.name.length > maxLength) {\n              orgName = d.data.name.slice(0, maxLength - 3).concat('...');\n          }\n      }\n\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n\n      this.percentageTotal.text('' + perc + '%');\n      if (percSuccess && this.percentageSuccess) {\n          this.percentageSuccess.text('(' + percSuccess + '% successful)');\n      }\n\n      this.orgName.text(' ' + orgName);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, -10) rotate(45)');\n          this.boundingBOx.attr('x', -125);\n          this.orgName.attr('x', -112);\n          this.percentageTotal.attr('x', -112);\n          if (this.showSuccess) {\n              this.percentageSuccess.attr('x', -112);\n          }\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, -10) rotate(45)');\n          this.boundingBOx.attr('x', 10);\n          this.orgName.attr('x', 20);\n          this.percentageTotal.attr('x', 20);\n          if (this.showSuccess) {\n              this.percentageSuccess.attr('x', 20);\n          }\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass PieChart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            colors: [],\n            timeout: null\n        };\n        this.draw = this.draw.bind(this);\n        this.init = this.init.bind(this);\n        this.resize = this.resize.bind(this);\n    }\n    // Methods\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => { this.init(); }, 500)\n        });\n    }\n    sortDescending(data) {\n    // descending\n        data.sort((a, b) =>\n            d3.descending(parseFloat(a.count), parseFloat(b.count))\n        );\n    }\n    init() {\n        const { data } = this.props;\n        const color = d3.scaleOrdinal(pfmulti);\n        // create our colors array to send to the Legend component\n        const colors = data.reduce((colors, org) => {\n            // format complement slice as \"Others\"\n            if (org.id === -1) {\n                colors.push({\n                    name: 'Others',\n                    value: color(org.name),\n                    count: Math.round(org.count)\n                });\n            } else {\n                colors.push({\n                    name: org.name,\n                    value: color(org.name),\n                    count: Math.round(org.count)\n                });\n            }\n\n            return colors;\n        }, []);\n        this.setState({ colors });\n        this.draw();\n    }\n    draw() {\n        const color = d3.scaleOrdinal(pfmulti);\n\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.bottom)\n        .append('g');\n\n        svg.append('g').attr('class', 'slices');\n        svg.append('g').attr('class', 'labels');\n        svg.append('g').attr('class', 'lines');\n        const radius = Math.min(width, height) / 2;\n        let { data: unfilteredData } = this.props;\n        const data = unfilteredData.filter(datum => datum.id !== -1);\n        const total = getTotal(data);\n        data.forEach(function(d) {\n            d.count = +d.count;\n            d.percent = +Math.round((d.count / total) * 100);\n        });\n        const donutTooltip = new Tooltip({\n            svg: '#' + this.props.id\n        });\n        const pie = d3\n        .pie()\n        .sort(null)\n        .value(d => d.count);\n        const arc = d3\n        .arc()\n        .outerRadius(radius - 10) // controls top positioning of chart\n        .innerRadius(0);\n\n        svg.attr(\n            'transform',\n            'translate(' +\n        (width + this.props.margin.left + this.props.margin.right) / 2 +\n        ',' +\n        (height + this.props.margin.top + this.props.margin.bottom) / 2 +\n        ')'\n        );\n\n        svg\n        .selectAll('path')\n        .data(pie(data))\n        .enter()\n        .append('path')\n        .attr('d', arc)\n        .attr('fill', (d, i) => color(i));\n\n        svg\n        .selectAll('path')\n        .on('mouseover', function(d, i) {\n            d3.select(this).style('fill', d3.rgb(color(i)).darker(1));\n            donutTooltip.handleMouseOver(d);\n        })\n        .on('mouseout', function(d, i) {\n            d3.select(this).style('fill', color(i));\n            donutTooltip.handleMouseOut();\n        })\n        .on('mousemove', donutTooltip.handleMouseOver);\n\n        svg.append('g').classed('labels', true);\n        svg.append('g').classed('lines', true);\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.data !== this.props.data) {\n            this.init();\n        }\n    }\n\n    render() {\n        const { colors } = this.state;\n        return (\n            <Wrapper>\n                <div id={ this.props.id } />\n                { colors.length > 0 && (\n                    <Legend\n                        id=\"d3-grouped-bar-legend\"\n                        data={ colors }\n                        selected={ null }\n                        onToggle={ null }\n                        height=\"300px\"\n                    />\n                ) }\n            </Wrapper>\n        );\n    }\n}\n\nPieChart.propTypes = {\n    id: PropTypes.string,\n    isAccessible: PropTypes.bool,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    timeFrame: PropTypes.number\n};\n\nexport default initializeChart(PieChart);\n","/*eslint camelcase: [\"error\", {properties: \"never\"}]*/\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport {\n    preflightRequest,\n    readJobsByDateAndOrg,\n    readJobRunsByOrg,\n    readJobEventsByOrg\n} from '../../Api';\n\nimport { Main, PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle,\n    FormSelect,\n    FormSelectOption\n} from '@patternfly/react-core';\n\nimport { FilterIcon } from '@patternfly/react-icons';\n\nimport GroupedBarChart from '../../Charts/GroupedBarChart';\nimport PieChart from '../../Charts/PieChart';\n\nconst CardTitle = styled(PFCardTitle)`\n  border-bottom: 2px solid #ebebeb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &&& {\n    min-height: 60px;\n    --pf-c-card--first-child--PaddingTop: 10px;\n    --pf-c-card__header--not-last-child--PaddingBottom: 10px;\n\n    h3 {\n      font-size: 0.875em;\n    }\n  }\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  overflow: hidden;\n\n  .pf-c-card {\n    width: 50%;\n    margin-top: 20px;\n    overflow: auto;\n  }\n\n  .pf-c-card:first-of-type {\n    margin-right: 20px;\n  }\n`;\n\nconst TopCard = styled(Card)`\n  min-height: 500px;\n`;\n\nconst timeFrameOptions = [\n    { value: 'please choose', label: 'Select Date Range', disabled: true },\n    { value: 7, label: 'Past Week', disabled: false },\n    { value: 14, label: 'Past 2 Weeks', disabled: false },\n    { value: 31, label: 'Past Month', disabled: false }\n];\n\nconst sortOptions = [\n    { value: 'please choose', label: 'Order By', disabled: true },\n    { value: 'count:desc', label: 'Top 5 Orgs', disabled: false },\n    { value: 'count:asc', label: 'Bottom 5 Orgs', disabled: false },\n    { value: 'all', label: 'All Orgs', disabled: false }\n];\n\nconst initialQueryParams = {\n    startDate: moment().subtract(1, 'month').format('YYYY-MM-DD'),\n    endDate: moment().format('YYYY-MM-DD'),\n    sort_by: 'count:desc',\n    limit: 5\n};\n\nconst OrganizationStatistics = () => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [ pieChart1Data, setPieChart1Data ] = useState([]);\n    const [ pieChart2Data, setPieChart2Data ] = useState([]);\n    const [ groupedBarChartData, setGroupedBarChartData ] = useState([]);\n    const [ timeframe, setTimeframe ] = useState(31);\n    const [ sortOrder, setSortOrder ] = useState('count:desc');\n    const [ firstRender, setFirstRender ] = useState(true);\n    const [ isLoading, setIsLoading ] = useState(true);\n    const {\n        queryParams,\n        setEndDate,\n        setStartDate,\n        setSortBy,\n        setLimit\n    } = useQueryParams(initialQueryParams);\n\n    const setLimitValue = (val) => {\n        let limit;\n        if (val === 'count:asc' || val === 'count:desc') {\n            limit = 5;\n        } else {\n            limit = 200;\n        }\n\n        return setLimit(limit);\n    };\n\n    useEffect(() => {\n        let ignore = false;\n        const fetchEndpoints = () => {\n            return Promise.all(\n                [\n                    readJobsByDateAndOrg({ params: queryParams }),\n                    readJobRunsByOrg({ params: queryParams }),\n                    readJobEventsByOrg({ params: queryParams })\n                ].map((p) => p.catch(() => []))\n            );\n        };\n\n        const update = async () => {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            fetchEndpoints().then(\n                ([\n                    { dates: groupedBarChartData = []},\n                    { usages: pieChart1Data = []},\n                    { usages: pieChart2Data = []}\n                ]) => {\n                    setGroupedBarChartData(groupedBarChartData);\n                    setPieChart1Data(pieChart1Data);\n                    setPieChart2Data(pieChart2Data);\n                    setIsLoading(false);\n                }\n            );\n        };\n\n        async function initializeWithPreflight() {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            await preflightRequest().catch((error) => {\n                setPreFlightError({ preflightError: error });\n            });\n            fetchEndpoints().then(\n                ([\n                    { dates: groupedBarChartData = []},\n                    { usages: pieChart1Data = []},\n                    { usages: pieChart2Data = []}\n                ]) => {\n                    if (!ignore) {\n                        setGroupedBarChartData(groupedBarChartData);\n                        setPieChart1Data(pieChart1Data);\n                        setPieChart2Data(pieChart2Data);\n                        setFirstRender(false);\n                        setIsLoading(false);\n                    }\n                }\n            );\n        }\n\n        if (firstRender) {\n            initializeWithPreflight();\n            return () => (ignore = true);\n        } else {\n            update();\n        }\n    }, [ queryParams ]);\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={ 'Organization Statistics' } />\n            </PageHeader>\n            { preflightError && (\n                <Main>\n                    <EmptyState { ...preflightError } />\n                </Main>\n            ) }\n            { !preflightError && (\n        <>\n          <Main style={ { paddingBottom: '0' } }>\n              <Card>\n                  <CardTitle style={ { paddingBottom: '0', paddingTop: '0' } }>\n                      <h2>\n                          <FilterIcon style={ { marginRight: '10px' } } />\n                  Filter\n                      </h2>\n                      <div style={ { display: 'flex', justifyContent: 'flex-end' } }>\n                          <FormSelect\n                              name=\"sortOrder\"\n                              value={ sortOrder }\n                              onChange={ (value) => {\n                                  setSortOrder(value);\n                                  setSortBy(value);\n                                  setLimitValue(value);\n                              } }\n                              aria-label=\"Select Cluster\"\n                              style={ { margin: '2px 10px' } }\n                          >\n                              { sortOptions.map(({ value, label, disabled }, index) => (\n                                  <FormSelectOption\n                                      isDisabled={ disabled }\n                                      key={ index }\n                                      value={ value }\n                                      label={ label }\n                                  />\n                              )) }\n                          </FormSelect>\n                          <FormSelect\n                              name=\"timeframe\"\n                              value={ timeframe }\n                              onChange={ (value) => {\n                                  setTimeframe(+value);\n                                  setEndDate();\n                                  setStartDate(+value);\n                              } }\n                              aria-label=\"Select Date Range\"\n                              style={ { margin: '2px 10px' } }\n                          >\n                              { timeFrameOptions.map((option, index) => (\n                                  <FormSelectOption\n                                      isDisabled={ option.disabled }\n                                      key={ index }\n                                      value={ option.value }\n                                      label={ option.label }\n                                  />\n                              )) }\n                          </FormSelect>\n                      </div>\n                  </CardTitle>\n              </Card>\n          </Main>\n          <Main>\n              <TopCard>\n                  <CardTitle>\n                      <h2>Organization Status</h2>\n                  </CardTitle>\n                  <CardBody>\n                      { isLoading && <LoadingState /> }\n                      { !isLoading && groupedBarChartData.length <= 0 && <NoData /> }\n                      { !isLoading && groupedBarChartData.length > 0 && (\n                          <GroupedBarChart\n                              margin={ { top: 20, right: 20, bottom: 50, left: 50 } }\n                              id=\"d3-grouped-bar-chart-root\"\n                              data={ groupedBarChartData }\n                              timeFrame={ timeframe }\n                          />\n                      ) }\n                  </CardBody>\n              </TopCard>\n              <CardContainer>\n                  <Card>\n                      <CardBody style={ { padding: 0 } }>\n                          <CardTitle style={ { padding: 0 } }>\n                              <h2 style={ { marginLeft: '20px' } }>\n                      Job Runs by Organization\n                              </h2>\n                          </CardTitle>\n                          { isLoading && <LoadingState /> }\n                          { !isLoading && pieChart1Data.length <= 0 && <NoData /> }\n                          { !isLoading && pieChart1Data.length > 0 && (\n                              <PieChart\n                                  margin={ { top: 20, right: 20, bottom: 0, left: 20 } }\n                                  id=\"d3-donut-1-chart-root\"\n                                  data={ pieChart1Data }\n                                  timeFrame={ timeframe }\n                              />\n                          ) }\n                      </CardBody>\n                  </Card>\n                  <Card>\n                      <CardBody style={ { padding: 0 } }>\n                          <CardTitle style={ { padding: 0 } }>\n                              <h2 style={ { marginLeft: '20px' } }>\n                      Usage by Organization (Tasks)\n                              </h2>\n                          </CardTitle>\n                          { isLoading && <LoadingState /> }\n                          { !isLoading && pieChart2Data.length <= 0 && <NoData /> }\n                          { !isLoading && pieChart2Data.length > 0 && (\n                              <PieChart\n                                  margin={ { top: 20, right: 20, bottom: 0, left: 20 } }\n                                  id=\"d3-donut-2-chart-root\"\n                                  data={ pieChart2Data }\n                                  timeFrame={ timeframe }\n                              />\n                          ) }\n                      </CardBody>\n                  </Card>\n              </CardContainer>\n          </Main>\n        </>\n            ) }\n        </React.Fragment>\n    );\n};\n\nexport default OrganizationStatistics;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        this.draw();\n    }\n\n    formatDollars(amount) {\n        return parseFloat(amount).toFixed(2).toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    };\n\n    draw() {\n        this.width = 125;\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 125;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, 0) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', 92)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.name = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', -2)\n        .text('Template name');\n        this.savings = this.toolTipBase\n        .append('text')\n        .attr('x', 20)\n        .attr('y', 52)\n        .attr('font-size', 12)\n        .attr('font-weight', 'bold')\n        .attr('fill', 'white')\n        .text('Total savings $0');\n        this.manualCost = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', 16)\n        .text('Manual cost $0');\n        this.automationCost = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', 34)\n        .text('Automation cost $0');\n    }\n\n    handleMouseOver = d => {\n        let name;\n        let savings;\n        let manualCost;\n        let automationCost;\n        const scrollLeftOffset = d3.select('#d3-roi-chart-root').node().scrollLeft;\n        const x =\n            d3.event.pageX -\n            d3\n            .select(this.svg)\n            .node()\n            .getBoundingClientRect().x +\n            10 + scrollLeftOffset;\n        const y =\n            d3.event.pageY -\n            d3\n            .select(this.svg)\n            .node()\n            .getBoundingClientRect().y -\n            30;\n        if (!d) {\n            return;\n        } else {\n            savings = this.formatDollars(d.delta);\n            name = d.name;\n            manualCost = this.formatDollars(d.calculations[0].cost);\n            automationCost = this.formatDollars(d.calculations[1].cost);\n        }\n\n        const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n        const chartWidth = d3\n        .select(this.svg + '> svg')\n        .node()\n        .getBoundingClientRect().width;\n        const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n        const flipped = overflow < (x / chartWidth) * 100;\n        this.name.text('' + name);\n        this.savings.text('Total savings $' + savings);\n        this.manualCost.text('Manual Cost $' + manualCost);\n        this.automationCost.text('Automation Cost $' + automationCost);\n        this.nameWidth = this.name.node().getComputedTextLength();\n        this.savingsWidth = this.savings.node().getComputedTextLength();\n        this.manualCostWidth = this.manualCost.node().getComputedTextLength();\n        this.automationCostWidth = this.automationCost.node().getComputedTextLength();\n        this.widestTextElem = d3.max([ this.nameWidth, this.savingsWidth, this.automationCostWidth, this.manualCostWidth ]);\n\n        const maxTextPerc = this.widestTextElem / this.boxWidth * 100;\n        const threshold = 85;\n        const overage = maxTextPerc / threshold;\n        let adjustedWidth;\n        if (maxTextPerc > threshold) {\n            adjustedWidth = this.boxWidth * overage;\n        } else {\n            adjustedWidth = this.boxWidth;\n        }\n\n        this.boundingBox.attr('width', adjustedWidth);\n        this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n        if (flipped) {\n            this.toolTipPoint.attr('transform', 'translate(-20, 15) rotate(45)');\n            this.boundingBox.attr('x', -adjustedWidth - 20);\n            this.name.attr('x', -(toolTipWidth - 7));\n            this.savings.attr('x', -(toolTipWidth - 7));\n            this.manualCost.attr('x', -(toolTipWidth - 7));\n            this.automationCost.attr('x', -(toolTipWidth - 7));\n        } else {\n            this.toolTipPoint.attr('transform', 'translate(10, 15) rotate(45)');\n            this.boundingBox.attr('x', 10);\n            this.name.attr('x', 20);\n            this.savings.attr('x', 20);\n            this.manualCost.attr('x', 20);\n            this.automationCost.attr('x', 20);\n        }\n\n        this.toolTipBase.style('opacity', 1);\n        this.toolTipBase.interrupt();\n    };\n\n    handleMouseOut = () => {\n        this.toolTipBase\n        .transition()\n        .delay(15)\n        .style('opacity', 0)\n        .style('pointer-events', 'none');\n    };\n}\n\nclass TopTemplatesSavings extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.state = {\n            timeout: null\n        };\n    }\n\n    // Methods\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => {\n                this.init();\n            }, 500)\n        });\n    }\n\n    init() {\n        this.draw();\n    }\n\n    draw() {\n        // Use PF chart color\n        const color = d3.scaleOrdinal([ '#0066CC' ]); //blue\n        // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        let { data: unfiltered, selected } = this.props;\n        const data = unfiltered.filter(({ id }) => !selected.includes(id));\n        data.forEach(datum => {\n            datum.calculations.forEach(row => {\n                row.name = datum.name;\n            });\n        });\n        let width;\n        // adjust chart width to support larger datasets\n        if (data.length >= 15) {\n            const containerWidth = d3.select('.automation-wrapper').node();\n            width = containerWidth.getBoundingClientRect().width - this.props.margin.left - this.props.margin.right;\n        } else {\n            width = this.props.getWidth();\n        }\n\n        const height = this.props.getHeight();\n        const x = d3\n        .scaleBand()\n        .rangeRound([ 0, width ])\n        .padding(0.45);\n        const y = d3.scaleLinear().range([ height, 0 ]);\n        // format our X Axis ticks\n        let ticks;\n        ticks = data.map(d => d.name);\n        const formatYAxisValue = d3.format('.2s');\n        const xAxis = d3.axisBottom(x).tickValues(ticks);\n\n        const yAxis = d3\n        .axisLeft(y)\n        .ticks(8)\n        .tickFormat(d => formatYAxisValue(d).replace('G', 'B'))\n        .tickSize(-width, 0, 0);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n\n        const taskNames = data.map(d => d.name);\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id\n        });\n        x.domain(taskNames);\n        y.domain([\n            0,\n            d3.max(data, d => d.delta * 1.15) || 8\n        ]);\n\n        // add y axis\n        svg\n        .append('g')\n        .attr('class', 'y axis')\n        .call(yAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7')\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 6)\n        .attr('dy', '.71em')\n        .style('text-anchor', 'end')\n        .style('font-weight', 'bold')\n        .text('Value');\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Savings per template ($)');\n\n        // add x axis\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(xAxis)\n        .selectAll('text')\n        .style('text-anchor', 'start')\n        .attr('dx', '0.75em')\n        .attr('dy', -x.bandwidth() / 1.45 - 8)\n        .attr('transform', 'rotate(-90)');\n\n        svg.selectAll('.x-axis line').attr('stroke', 'transparent');\n\n        svg.selectAll('.bar')\n        .data(data)\n        .enter().append('rect')\n        .attr('x', d => x(d.name))\n        .attr('width', x.bandwidth())\n        .attr('y', d => y(d.delta))\n        .style('fill', d => color(d.type))\n        .attr('height', d => height - y(d.delta))\n        .on('mouseover', function(d) {\n            d3.select(this).style('fill', d3.rgb(color(d.type)).darker(1));\n            tooltip.handleMouseOver(d);\n        })\n        .on('mousemove', tooltip.handleMouseOver)\n        .on('mouseout', function(d) {\n            d3.select(this).style('fill', color(d.type));\n            tooltip.handleMouseOut();\n        });\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate() {\n        this.init();\n    }\n\n    render() {\n        return <div id={ this.props.id } />;\n    }\n}\n\nTopTemplatesSavings.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    selected: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func\n};\n\nexport default initializeChart(TopTemplatesSavings);\n","/* eslint-disable camelcase */\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport styled from 'styled-components';\nimport { stringify } from 'query-string';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport { preflightRequest, readROI } from '../../Api';\nimport { Paths } from '../../paths';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Button,\n    Card,\n    CardBody,\n    CardTitle,\n    FormSelect,\n    FormSelectOption,\n    InputGroup,\n    InputGroupText,\n    TextInput,\n    Title,\n    Tooltip,\n    TooltipPosition\n} from '@patternfly/react-core';\n\nimport {\n    DollarSignIcon,\n    FilterIcon,\n    InfoCircleIcon,\n    ToggleOnIcon,\n    ToggleOffIcon\n} from '@patternfly/react-icons';\n\nimport TopTemplatesSavings from '../../Charts/ROITopTemplates';\n\nimport {\n    calculateDelta,\n    convertSecondsToMins,\n    convertMinsToSeconds,\n    convertSecondsToHours,\n    convertWithCommas,\n    formatPercentage\n} from '../../Utilities/helpers';\n\nconst FilterCardTitle = styled(CardTitle)`\n  border-bottom: 2px solid #ebebeb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &&& {\n    min-height: 60px;\n    --pf-c-card--first-child--PaddingTop: 10px;\n    --pf-c-card__header--not-last-child--PaddingBottom: 10px;\n\n    h3 {\n      font-size: 0.875em;\n    }\n  }\n`;\n\nconst defaultAvgRunVal = 3600; // 1 hr in seconds\nconst defaultCostAutomation = 20;\nconst defaultCostManual = 50;\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst TemplateDetail = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  div,\n  em {\n    padding-right: 5px;\n  }\n\n  @media (max-width: 1490px) {\n    display: block;\n\n    em {\n      padding: 10px 0;\n      display: block;\n    }\n  }\n`;\n\nconst TemplateDetailSubTitle = styled.em`\n  color: var(--pf-global--Color--dark-200);\n`;\n\nconst TooltipWrapper = styled.div`\n  p {\n    text-align: left;\n  }\n`;\n\nconst IconGroup = styled.div`\n  & svg {\n    fill: var(--pf-global--Color--dark-200);\n\n    :hover {\n      cursor: pointer;\n    }\n\n    :first-of-type {\n      margin-right: 10px;\n      margin-left: 10px;\n\n      @media (max-width: 1350px) {\n        margin-left: 0;\n      }\n    }\n  }\n`;\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 5fr 2fr;\n  height: 100%;\n`;\n\nconst WrapperLeft = styled.div`\n  flex: 5;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n`;\n\nconst WrapperRight = styled.div`\n  flex: 2;\n  display: flex;\n  flex-direction: column;\n`;\n\n/* helper variables for further date ranges */\nconst pastYear = moment().subtract(1, 'year');\nconst pastYTD = moment().startOf('year');\nconst pastQuarter = moment().startOf('quarter');\nconst pastMonth = moment().subtract(1, 'month');\n\n/* these are the buckets of time the user's are able to select ... */\nconst timeFrameOptions = [\n    { value: 'please choose', label: 'Select date range', disabled: true },\n    { value: pastYear.format('YYYY-MM-DD'), label: 'Past year', disabled: false },\n    { value: pastYTD.format('YYYY-MM-DD'), label: 'Past year to date', disabled: false },\n    { value: pastQuarter.format('YYYY-MM-DD'), label: 'Past quarter', disabled: false },\n    { value: pastMonth.format('YYYY-MM-DD'), label: 'Past month', disabled: false }\n];\n\n/* set the default bucket to 365 days */\nconst initialQueryParams = {\n    startDate: pastYear.format('YYYY-MM-DD'),\n    endDate: moment().format('YYYY-MM-DD')\n};\n\n// create our array to feed to D3\nexport const formatData = (response, defaults) => {\n    return response.reduce(\n        (\n            formatted,\n            {\n                name,\n                template_id: id,\n                successful_run_count,\n                successful_elapsed_sum,\n                successful_host_run_count_avg,\n                successful_host_run_count,\n                elapsed_sum,\n                failed_elapsed_sum,\n                orgs,\n                clusters,\n                template_automation_percentage\n            }\n        ) => {\n            formatted.push({\n                name,\n                id,\n                run_count: successful_run_count,\n                host_count: successful_host_run_count_avg || 0,\n                successful_host_run_count,\n                delta: 0,\n                isActive: true,\n                calculations: [\n                    {\n                        type: 'Manual',\n                        avg_run: defaults.defaultAvgRunVal,\n                        cost: 0\n                    },\n                    {\n                        type: 'Automated',\n                        avg_run: successful_elapsed_sum || 0,\n                        cost: 0\n                    }\n                ],\n                orgs,\n                clusters,\n                elapsed_sum,\n                failed_elapsed_sum,\n                successful_elapsed_sum,\n                template_automation_percentage\n            });\n            return formatted;\n        },\n        []\n    );\n};\n\nexport const updateData = (seconds, id, data) => {\n    let updatedData = [ ...data ];\n    updatedData.map((datum) => {\n        if (datum.id === id) {\n            // Update manual calculations\n            datum.calculations[0].avg_run = seconds;\n            datum.calculations[0].total = seconds * datum.successful_host_run_count;\n        }\n    });\n    return updatedData;\n};\n\nexport const handleManualTimeChange = (minutes) => {\n    const seconds = convertMinsToSeconds(minutes);\n    return seconds;\n};\n\nexport const formatSelectedIds = (arr, id) => {\n    let selected;\n    if (arr.includes(id)) {\n        selected = [ ...arr ].filter((s) => s !== id);\n    } else {\n        selected = [ ...arr, id ];\n    }\n\n    return selected;\n};\n\nexport const handleToggle = (id, selected) => {\n    const currentSelection = [ ...selected ];\n    const newSelection = formatSelectedIds(currentSelection, id);\n    return newSelection;\n};\n\nexport const computeTotalSavings = (formattedData, costAutomation, costManual) => {\n    let data = [ ...formattedData ];\n    let total = 0;\n    let costAutomationPerHour;\n    let costManualPerHour;\n\n    data.forEach((datum) => {\n        costAutomationPerHour =\n            convertSecondsToHours(datum.successful_elapsed_sum) * costAutomation;\n        costManualPerHour =\n            convertSecondsToHours(datum.calculations[0].avg_run) *\n            datum.successful_host_run_count *\n            costManual;\n        total += calculateDelta(costAutomationPerHour, costManualPerHour);\n        datum.delta = calculateDelta(costAutomationPerHour, costManualPerHour);\n        datum.calculations[0].cost = costManualPerHour;\n        datum.calculations[1].cost = costAutomationPerHour;\n    });\n\n    return total;\n};\n\nexport const floatToStringWithCommas = (total) => {\n    return total\n    .toFixed(2)\n    .toString()\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\n\nexport const filterDataBySelectedIds = (unfilteredData, selectedIds) => {\n    const filteredData = unfilteredData.filter(\n        ({ id }) => {\n            return !selectedIds.includes(id);\n        }\n    );\n    return filteredData;\n};\n\nexport const setTemplatesIsActive = (templatesList, selectedIds) => {\n    templatesList.map((l) => {\n        if (selectedIds.includes(l.id)) {\n            l.isActive = false;\n        } else {\n            l.isActive = true;\n        }\n    });\n    return templatesList;\n};\n\nconst AutomationCalculator = ({ history }) => {\n\n    const [ isLoading, setIsLoading ] = useState(true);\n    const [ costManual, setCostManual ] = useState(defaultCostManual);\n    const [ costAutomation, setCostAutomation ] = useState(defaultCostAutomation);\n    const [ totalSavings, setTotalSavings ] = useState(0);\n    const [ unfilteredData, setUnfilteredData ] = useState([]);\n    const [ formattedData, setFormattedData ] = useState([]);\n    const [ templatesList, setTemplatesList ] = useState([]);\n    const [ selectedIds, setSelectedIds ] = useState([]);\n    const [ preflightError, setPreFlightError ] = useState(null);\n\n    // default to the past year (n - 365 days)\n    const [ roiTimeFrame, setRoiTimeFrame ] = useState(timeFrameOptions[1].value);\n    const { queryParams, setStartDateAsString } = useQueryParams(\n        initialQueryParams\n    );\n\n    const handleOnChange = (value) => {\n        setStartDateAsString(value);\n        setRoiTimeFrame(value);\n    };\n\n    useEffect(() => {\n        const total = computeTotalSavings(formattedData, costAutomation, costManual);\n        const totalWithCommas = floatToStringWithCommas(total);\n        setTotalSavings('$' + totalWithCommas);\n    }, [ formattedData, costAutomation, costManual ]);\n\n    useEffect(() => {\n        const filteredData = filterDataBySelectedIds(unfilteredData, selectedIds);\n        setTemplatesIsActive(templatesList, selectedIds);\n        setFormattedData(filteredData);\n    }, [ selectedIds ]);\n\n    useEffect(() => {\n        let ignore = false;\n        const getData = () => {\n            const result = readROI({ params: queryParams }).catch(() => []);\n            return result;\n        };\n\n        async function initializeWithPreflight() {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            await preflightRequest().catch((error) => {\n                setPreFlightError({ preflightError: error });\n            });\n            getData().then(({ templates: roiData = []}) => {\n                if (!ignore) {\n                    const formatted = formatData(roiData, {\n                        defaultAvgRunVal,\n                        defaultCostAutomation,\n                        defaultCostManual\n                    });\n                    setUnfilteredData(formatted);\n                    setFormattedData(formatted);\n                    setTemplatesList(formatted);\n                    setIsLoading(false);\n                }\n            });\n        }\n\n        initializeWithPreflight();\n        return () => (ignore = true);\n    }, [ queryParams ]);\n\n    const redirectToJobExplorer = (templateId) => {\n        const { jobExplorer } = Paths;\n        const initialQueryParams = {\n            template_id: templateId,\n            status: [ 'successful' ],\n            job_type: [ 'job' ],\n            quick_date_range: 'last_30_days'\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    return (\n    <>\n      <PageHeader style={ { flex: '0' } }>\n          <PageHeaderTitle title={ 'Automation Calculator' } />\n      </PageHeader>\n      { preflightError && (\n          <Main>\n              <Card>\n                  <CardBody>\n                      <EmptyState { ...preflightError } />\n                  </CardBody>\n              </Card>\n          </Main>\n      ) }\n      { !preflightError && (\n        <>\n          <Main style={ { paddingBottom: '0' } }>\n              <Card>\n                  <FilterCardTitle style={ { paddingBottom: '0', paddingTop: '0' } }>\n                      <h2>\n                          <FilterIcon style={ { marginRight: '10px' } } />\n                  Filter\n                      </h2>\n                      <div style={ { display: 'flex', justifyContent: 'flex-end' } }>\n                          <FormSelect\n                              name=\"roiTimeFrame\"\n                              value={ roiTimeFrame }\n                              onChange={ handleOnChange }\n                              aria-label=\"Select Date Range\"\n                              style={ { margin: '2px 10px' } }\n                          >\n                              { timeFrameOptions.map((option, index) => (\n                                  <FormSelectOption\n                                      isDisabled={ option.disabled }\n                                      key={ index }\n                                      value={ option.value }\n                                      label={ option.label }\n                                  />\n                              )) }\n                          </FormSelect>\n                      </div>\n                  </FilterCardTitle>\n              </Card>\n          </Main>\n          <Wrapper className=\"automation-wrapper\">\n              <WrapperLeft>\n                  <Main style={ { paddingBottom: '0' } }>\n                      <Card>\n                          <CardTitle>Automation savings</CardTitle>\n                          <CardBody>\n                              { isLoading && !preflightError && <LoadingState /> }\n                              { !isLoading && formattedData.length <= 0 && <NoData /> }\n                              { formattedData.length > 0 && !isLoading && (\n                      <>\n                        <TopTemplatesSavings\n                            margin={ { top: 20, right: 20, bottom: 20, left: 70 } }\n                            id=\"d3-roi-chart-root\"\n                            data={ formattedData }\n                            selected={ selectedIds }\n                        />\n                        <p style={ { textAlign: 'center' } }>Templates</p>\n                      </>\n                              ) }\n                          </CardBody>\n                      </Card>\n                  </Main>\n                  <Main>\n                      <Card style={ { height: '100%' } }>\n                          <CardTitle>Automation formula</CardTitle>\n                          <CardBody>\n                              <p>\n                                  <b>Manual cost for template x</b> =\n                                  <em>\n                        (time for a manual run on one host * (sum of all hosts\n                        across all job runs) ) * cost per hour\n                                  </em>\n                              </p>\n                              <p>\n                                  <b>Automation cost for template x</b> =\n                                  <em>\n                        cost of automation per hour * sum of total elapsed hours\n                        for a template\n                                  </em>\n                              </p>\n                              <p>\n                                  <b>Savings</b> =\n                                  <em>\n                        Sum of (manual cost - automation cost) across all\n                        templates\n                                  </em>\n                              </p>\n                          </CardBody>\n                      </Card>\n                  </Main>\n              </WrapperLeft>\n              <WrapperRight>\n                  <Main style={ { paddingBottom: '0', paddingLeft: '0' } }>\n                      <Card>\n                          <CardTitle style={ { paddingBottom: '0' } }>\n                    Total savings\n                          </CardTitle>\n                          <CardBody>\n                              <Title\n                                  headingLevel=\"h3\"\n                                  size=\"3xl\"\n                                  style={ { color: 'var(--pf-global--success-color--200)' } }\n                              >\n                                  { totalSavings }\n                              </Title>\n                          </CardBody>\n                      </Card>\n                  </Main>\n                  <Main style={ { paddingBottom: '0', paddingLeft: '0' } }>\n                      <Card>\n                          <CardTitle style={ { paddingBottom: '10px' } }>\n                    Calculate your automation\n                          </CardTitle>\n                          <CardBody>\n                              <InputAndText>\n\n                                  <p>Manual cost of automation</p>\n                                  <em\n                                      style={ { color: 'var(--pf-global--Color--dark-200)' } }\n                                  >\n                        (e.g. average salary of mid-level SE)\n\n                                  </em>\n                                  <InputGroup style={ { width: '50%' } }>\n                                      <InputGroupText>\n                                          <DollarSignIcon />\n                                      </InputGroupText>\n                                      <TextInput\n                                          id=\"manual-cost\"\n                                          type=\"number\"\n                                          step=\"any\"\n                                          min=\"0\"\n                                          aria-label=\"manual-cost\"\n                                          value={ parseFloat(costManual) }\n                                          onChange={ (e) => setCostManual(e) }\n                                      />\n                                      <InputGroupText>/hr</InputGroupText>\n                                  </InputGroup>\n                              </InputAndText>\n                              <InputAndText style={ { paddingTop: '10px' } }>\n                                  <p>Automated process cost</p>\n                                  <InputGroup style={ { width: '50%' } }>\n                                      <InputGroupText>\n                                          <DollarSignIcon />\n                                      </InputGroupText>\n                                      <TextInput\n                                          id=\"automation-cost\"\n                                          type=\"number\"\n                                          step=\"any\"\n                                          min=\"0\"\n                                          aria-label=\"automation-cost\"\n                                          value={ parseFloat(costAutomation) }\n                                          onChange={ (e) => setCostAutomation(e) }\n                                      />\n                                      <InputGroupText>/hr</InputGroupText>\n                                  </InputGroup>\n                              </InputAndText>\n                          </CardBody>\n                      </Card>\n                  </Main>\n                  <Main\n                      style={ {\n                          display: 'flex',\n                          flexDirection: 'column',\n                          flex: '1 1 0',\n                          paddingLeft: '0'\n                      } }\n                  >\n                      <Card style={ { overflow: 'auto', flex: '1 1 0' } }>\n                          <CardTitle>Top templates</CardTitle>\n                          <CardBody>\n                              <p>\n                      Enter the time it takes to manually perform the tasks that\n                      the following templates automate.\n                              </p>\n                              { templatesList.map((data) => (\n                                  <div key={ data.id }>\n                                      <Tooltip content={ 'Click for list of jobs in the past month' } >\n                                          <Button\n                                              style={ { padding: '15px 0 10px' } }\n                                              component=\"a\"\n                                              onClick={ () => redirectToJobExplorer(data.id) }\n                                              variant=\"link\"\n                                          >\n                                              { data.name }\n                                          </Button>\n                                      </Tooltip>\n                                      <TemplateDetail>\n                                          <InputAndText key={ data.id }>\n                                              <InputGroup>\n                                                  <TextInput\n                                                      id={ data.id }\n                                                      type=\"number\"\n                                                      aria-label=\"time run manually\"\n                                                      value={ convertSecondsToMins(\n                                                          data.calculations[0].avg_run\n                                                      ) }\n                                                      onChange={ (e) => {\n                                                          const seconds = handleManualTimeChange(e);\n                                                          const updated = updateData(\n                                                              seconds,\n                                                              data.id,\n                                                              formattedData\n                                                          );\n                                                          setFormattedData(updated);\n                                                      } }\n                                                      isDisabled={ !data.isActive }\n                                                  />\n                                                  <InputGroupText>min</InputGroupText>\n                                              </InputGroup>\n                                          </InputAndText>\n                                          <TemplateDetailSubTitle>\n                            x { data.run_count } runs, { data.host_count } hosts\n                                          </TemplateDetailSubTitle>\n                                          <IconGroup>\n                                              <Tooltip\n                                                  position={ TooltipPosition.top }\n                                                  entryDelay={ 50 }\n                                                  exitDelay={ 50 }\n                                                  content={\n                                                      <TooltipWrapper>\n                                                          <p>\n                                                              <b>Total elapsed sum</b>:{ ' ' }\n                                                              { data.elapsed_sum.toFixed(2) }s\n                                                          </p>\n                                                          <p>\n                                                              <b>Success elapsed sum</b>:{ ' ' }\n                                                              { data.successful_elapsed_sum.toFixed(2) }s\n                                                          </p>\n                                                          <p>\n                                                              <b>Failed elapsed sum</b>:{ ' ' }\n                                                              { data.failed_elapsed_sum.toFixed(2) }s\n                                                          </p>\n                                                          <p>\n                                                              <b>Automation percentage</b>:{ ' ' }\n                                                              { formatPercentage(\n                                                                  data.template_automation_percentage.toFixed(\n                                                                      2\n                                                                  )\n                                                              ) }\n                                                          </p>\n                                                          <p>\n                                                              <b>Associated organizations</b>:{ ' ' }\n                                                              <span key={ data.id }>\n                                                                  { convertWithCommas(data.orgs, 'org_name') }\n                                                              </span>\n                                                          </p>\n                                                          <p>\n                                                              <b>Associated clusters</b>:{ ' ' }\n                                                              <span key={ data.id }>\n                                                                  { convertWithCommas(\n                                                                      data.clusters,\n                                                                      'cluster_name'\n                                                                  ) }\n                                                              </span>\n                                                          </p>\n                                                      </TooltipWrapper>\n                                                  }\n                                              >\n                                                  <InfoCircleIcon />\n                                              </Tooltip>\n                                              { data.isActive === true && (\n                                                  <ToggleOnIcon\n                                                      onClick={ () => {\n                                                          const selected = handleToggle(\n                                                              data.id,\n                                                              selectedIds\n                                                          );\n                                                          setSelectedIds(selected);\n                                                      } }\n                                                  />\n                                              ) }\n                                              { data.isActive === false && (\n                                                  <ToggleOffIcon\n                                                      onClick={ () => {\n                                                          const selected = handleToggle(\n                                                              data.id,\n                                                              selectedIds\n                                                          );\n                                                          setSelectedIds(selected);\n                                                      } }\n                                                  />\n                                              ) }\n                                          </IconGroup>\n                                      </TemplateDetail>\n                                      <p style={ { color: '#486B00' } }>\n                          ${ data.delta.toFixed(2) }\n                                      </p>\n                                  </div>\n                              )) }\n                          </CardBody>\n                      </Card>\n                  </Main>\n              </WrapperRight>\n          </Wrapper>\n        </>\n      ) }\n    </>\n    );\n};\n\nexport default AutomationCalculator;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n    Alert,\n    AlertGroup,\n    AlertVariant\n} from '@patternfly/react-core';\nimport { ArrowIcon as PFArrowIcon } from '@patternfly/react-icons';\nimport LoadingState from '../Components/LoadingState';\nimport { capitalize } from '../Utilities/helpers';\n\nconst ArrowIcon = styled(PFArrowIcon)`\n  margin-left: 7px;\n`;\n\nconst AllNotificationTemplate = ({ notifications }) =>\n    notifications.map(\n        ({ date, message, label, notification_id: id, tower_url: url }) => {\n            if (label === '' || label === 'notice') {\n                return (\n                    <Alert\n                        title={ capitalize(label) }\n                        variant={ AlertVariant.default }\n                        isInline\n                        key={ date + '-' + id }\n                        style={ { marginTop: 'var(--pf-c-alert-group__item--MarginTop)' } }\n                    >\n                        { message }{ ' ' }\n                        { url ? (\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                                <ArrowIcon />\n                            </a>\n                        ) : null }\n                    </Alert>\n                );\n            }\n\n            if (label === 'error') {\n                return (\n                    <Alert\n                        title={ capitalize(label) }\n                        variant={ AlertVariant.danger }\n                        isInline\n                        key={ date + '-' + id }\n                        style={ { marginTop: 'var(--pf-c-alert-group__item--MarginTop)' } }\n                    >\n                        { message }{ ' ' }\n                        { url ? (\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                                <ArrowIcon />\n                            </a>\n                        ) : null }\n                    </Alert>\n                );\n            }\n\n            if (label === 'warning') {\n                return (\n                    <Alert\n                        title={ capitalize(label) }\n                        variant={ AlertVariant.warning }\n                        isInline\n                        key={ date + '-' + id }\n                        style={ { marginTop: 'var(--pf-c-alert-group__item--MarginTop)' } }\n                    >\n                        { message }{ ' ' }\n                        { url ? (\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                                <ArrowIcon />\n                            </a>\n                        ) : null }\n                    </Alert>\n                );\n            }\n        }\n    );\n\nconst ErrorNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'error')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <Alert\n            title={ capitalize(label) }\n            variant={ AlertVariant.danger }\n            isInline\n            key={ date + '-' + id }\n            style={ { marginTop: 'var(--pf-c-alert-group__item--MarginTop)' } }\n        >\n            { message }{ ' ' }\n            { url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                    <ArrowIcon />\n                </a>\n            ) : null }\n        </Alert>\n    ));\n\nconst NoticeNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'notice')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <Alert\n            title={ capitalize(label) }\n            variant={ AlertVariant.default }\n            isInline\n            key={ date + '-' + id }\n            style={ { marginTop: 'var(--pf-c-alert-group__item--MarginTop)' } }\n        >\n            { message }{ ' ' }\n            { url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                    <ArrowIcon />\n                </a>\n            ) : null }\n        </Alert>\n    ));\n\nconst WarningNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'warning')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <Alert\n            title={ capitalize(label) }\n            variant={ AlertVariant.warning }\n            isInline\n            key={ date + '-' + id }\n            style={ { marginTop: 'var(--pf-c-alert-group__item--MarginTop)' } }\n        >\n            { message }{ ' ' }\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                <ArrowIcon />\n            </a>\n        </Alert>\n    ));\n\nconst NotificationsList = ({ filterBy, notifications }) => (\n  <>\n    <AlertGroup>\n        { notifications.length <= 0 && <LoadingState /> }\n        { filterBy === '' && (\n            <AllNotificationTemplate notifications={ notifications } />\n        ) }\n        { filterBy === 'notice' && (\n            <NoticeNotificationTemplate notifications={ notifications } />\n        ) }\n        { filterBy === 'error' && (\n            <ErrorNotificationTemplate notifications={ notifications } />\n        ) }\n        { filterBy === 'warning' && (\n            <WarningNotificationTemplate notifications={ notifications } />\n        ) }\n    </AlertGroup>\n  </>\n);\n\nAllNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nErrorNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nWarningNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nNotificationsList.propTypes = {\n    notifications: PropTypes.array,\n    filterBy: PropTypes.string\n};\n\nexport default NotificationsList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoData from '../../Components/NoData';\nimport { preflightRequest, readClusters, readNotifications } from '../../Api';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle,\n    FormSelect,\n    FormSelectOption,\n    Badge,\n    Pagination,\n    PaginationVariant\n} from '@patternfly/react-core';\n\nimport NotificationsList from '../../Components/NotificationsList';\n\nconst CardTitle = styled(PFCardTitle)`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n`;\n\nconst TitleWithBadge = styled.div`\n  display: flex;\n  align-items: center;\n\n  h2 {\n    margin-right: 10px;\n  }\n`;\n\nconst DropdownGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-end;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n\n  select {\n    margin: 0 10px;\n    width: 150px;\n\n    @media screen and (max-width: 1035px) {\n      margin: 10px 10px 0 0;\n    }\n\n    @media screen and (max-width: 865px) {\n      width: 100%;\n    }\n  }\n`;\n\nconst notificationOptions = [\n    {\n        value: 'please choose',\n        label: 'Select Notification Severity',\n        disabled: true\n    },\n    { value: 'error', label: 'View Critical', disabled: false },\n    { value: 'warning', label: 'View Warning', disabled: false },\n    { value: 'notice', label: 'View Notice', disabled: false },\n    { value: '', label: 'View All', disabled: false }\n];\n\nconst perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 }\n];\n\nfunction formatClusterName(data) {\n    const defaultClusterOptions = [\n        { value: 'please choose', label: 'Select cluster', disabled: true },\n        { value: '', label: 'All Clusters', disabled: false },\n        { value: -1, label: 'Unassociated', disabled: false }\n    ];\n    return data.reduce(\n        (formatted, { label, cluster_id: id, install_uuid: uuid }) => {\n            if (label.length === 0) {\n                formatted.push({ value: id, label: uuid, disabled: false });\n            } else {\n                formatted.push({ value: id, label, disabled: false });\n            }\n\n            return formatted;\n        },\n        defaultClusterOptions\n    );\n}\n\nconst initialQueryParams = {\n    limit: 5,\n    offset: 0\n};\n\nconst Notifications = () => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [ notificationsData, setNotificationsData ] = useState([]);\n    const [ clusterOptions, setClusterOptions ] = useState([]);\n    const [ selectedCluster, setSelectedCluster ] = useState('');\n    const [ firstRender, setFirstRender ] = useState(true);\n    const [ isLoading, setIsLoading ] = useState(true);\n    const [ meta, setMeta ] = useState({});\n    const [ currPage, setCurrPage ] = useState(1);\n    const {\n        queryParams,\n        setId,\n        setLimit,\n        setOffset,\n        setSeverity\n    } = useQueryParams(initialQueryParams);\n\n    useEffect(() => {\n        if (firstRender) {\n            return;\n        }\n\n        const getData = () => {\n            return readNotifications({ params: queryParams });\n        };\n\n        const update = async () => {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            getData().then(\n                ({ notifications: notificationsData = [], meta }) => {\n                    setNotificationsData(notificationsData);\n                    setMeta(meta);\n                    setIsLoading(false);\n                }\n            );\n        };\n\n        update();\n    }, [ queryParams ]);\n\n    useEffect(() => {\n        let ignore = false;\n        const fetchEndpoints = () => {\n            return Promise.all(\n                [ readClusters(), readNotifications({ params: queryParams }) ].map(p =>\n                    p.catch(() => [])\n                )\n            );\n        };\n\n        async function initializeWithPreflight() {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            await preflightRequest().catch(error => {\n                setPreFlightError({ preflightError: error });\n            });\n            fetchEndpoints().then(\n                ([\n                    { templates: clustersData = []},\n                    { notifications: notificationsData = [], meta }\n                ]) => {\n                    if (!ignore) {\n                        const clusterOptions = formatClusterName(clustersData);\n                        setClusterOptions(clusterOptions);\n                        setNotificationsData(notificationsData);\n                        setMeta(meta);\n                        setFirstRender(false);\n                        setIsLoading(false);\n                    }\n                }\n            );\n        }\n\n        initializeWithPreflight();\n        return () => (ignore = true);\n    }, []);\n\n    const returnOffsetVal = page => {\n        let offsetVal = (page - 1) * queryParams.limit;\n        return offsetVal;\n    };\n\n    const handleSetPage = page => {\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    const handlePerPageSelect = (perPage, page) => {\n        setLimit(perPage);\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={ 'Notifications' } />\n            </PageHeader>\n            { preflightError && (\n                <Main>\n                    <EmptyState { ...preflightError } />\n                </Main>\n            ) }\n            { !preflightError && (\n        <>\n          <Main>\n              <Card>\n                  <CardTitle>\n                      <TitleWithBadge>\n                          <h2>\n                              <strong>Notifications</strong>\n                          </h2>\n                          <Badge isRead>{ meta.count ? meta.count : 0 }</Badge>\n                      </TitleWithBadge>\n                      <DropdownGroup>\n                          <FormSelect\n                              name=\"selectedCluster\"\n                              value={ selectedCluster }\n                              onChange={ value => {\n                                  setSelectedCluster(value);\n                                  setId(value);\n                                  setOffset(0);\n                                  setCurrPage(1);\n                              } }\n                              aria-label=\"Select Cluster\"\n                          >\n                              { clusterOptions.map(({ value, label, disabled }, index) => (\n                                  <FormSelectOption\n                                      isDisabled={ disabled }\n                                      key={ index }\n                                      value={ value }\n                                      label={ label }\n                                  />\n                              )) }\n                          </FormSelect>\n                          <FormSelect\n                              name=\"selectedNotification\"\n                              value={ queryParams.severity || '' }\n                              onChange={ value => {\n                                  setSeverity(value);\n                                  setOffset(0);\n                                  setCurrPage(1);\n                              } }\n                              aria-label=\"Select Notification Type\"\n                          >\n                              { notificationOptions.map(\n                                  ({ disabled, value, label }, index) => (\n                                      <FormSelectOption\n                                          isDisabled={ disabled }\n                                          key={ index }\n                                          value={ value }\n                                          label={ label }\n                                      />\n                                  )\n                              ) }\n                          </FormSelect>\n                      </DropdownGroup>\n                  </CardTitle>\n                  <CardBody>\n                      { isLoading && <LoadingState /> }\n                      { !isLoading && notificationsData.length <= 0 && <NoData /> }\n                      { !isLoading && notificationsData.length > 0 && (\n                  <>\n                    <NotificationsList\n                        filterBy={ queryParams.severity || '' }\n                        options={ notificationOptions }\n                        notifications={ notificationsData }\n                    />\n                    <Pagination\n                        itemCount={ meta.count ? meta.count : 0 }\n                        widgetId=\"pagination-options-menu-bottom\"\n                        perPageOptions={ perPageOptions }\n                        perPage={ queryParams.limit }\n                        page={ currPage }\n                        variant={ PaginationVariant.bottom }\n                        dropDirection={ 'up' }\n                        onPerPageSelect={ (_event, perPage, page) => {\n                            handlePerPageSelect(perPage, page);\n                        } }\n                        onSetPage={ (_event, pageNumber) => {\n                            handleSetPage(pageNumber);\n                        } }\n                        style={ { marginTop: '20px' } }\n                    />\n                  </>\n                      ) }\n                  </CardBody>\n              </Card>\n          </Main>\n        </>\n            ) }\n        </React.Fragment>\n    );\n};\n\nexport default Notifications;\n","import moment from 'moment';\n\n/*\n * isNumeric - return true if input is a real number\n */\nexport function isNumeric(val) {\n    if (val === 0 || val === '0') {\n        return true;\n    }\n\n    if (parseInt(val)) {\n        return true;\n    }\n\n    if (parseFloat(val)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function trimStr(str) {\n    return str.toString().replace(/['\"]+/g, '');\n}\n\nexport function formatDateTime(dateTime) {\n    return moment(new Date(dateTime).toISOString()).format('M/D/YYYY h:mm:ssa');\n}\n\nexport function formatDate(date) {\n    return moment(date).format('YYYY-MM-DD');\n}\n\nexport function formatSeconds(seconds) {\n    return moment().startOf('day')\n    .seconds(seconds)\n    .format('H:mm:ss');\n}\n\nexport function getTotal(data) {\n    if (!data) {\n        return;\n    } else {\n        let total = 0;\n        data.forEach(datum => {\n            total += parseInt(datum.count);\n        });\n        return total;\n    }\n}\n\nexport function formatPercentage(val) {\n    if (isNaN(val)) {\n        return;\n    }\n\n    return `${val}%`;\n}\n\nexport const capitalize = (s) => {\n    if (typeof s !== 'string') {return '';}\n\n    return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport function calculateDelta(a, b) {\n    if (!isNumeric(a) || !isNumeric(b)) {\n        return 0;\n    }\n\n    // never return less than zero ...\n    if ((b - a) < 0) {\n        return 0;\n    }\n\n    return b - a;\n}\n\nexport function convertMinsToMs(mins) {\n    if (!parseInt(mins)) {\n        return 0;\n    }\n\n    return mins * 60000;\n}\n\nexport function convertMsToMins(ms) {\n    if (!parseInt(ms)) {\n        return 0;\n    }\n\n    return ms / 60000;\n}\n\nexport function convertSecondsToMins(seconds) {\n    if (!parseInt(seconds)) {\n        return 0;\n    }\n\n    return seconds / 60;\n}\n\nexport function convertMinsToSeconds(mins) {\n    if (!parseInt(mins) || parseInt(mins) < 0) {\n        return 0;\n    }\n\n    return +parseInt(mins) * 60;\n}\n\nexport function convertSecondsToHours(seconds) {\n    if (!parseInt(seconds)) {\n        return 0;\n    }\n\n    return seconds / 3600;\n}\n\nexport function convertWithCommas(arr, key) {\n    const split = arr.reduce((strs, datum) => { strs.push(datum[key]); return strs; }, []);\n    return split.join(', ');\n}\n\nexport function formatJobType(type) {\n    return (type === 'job' ? 'Playbook run' : 'Workflow job');\n}\n\nexport function formatJobStatus(status) {\n    return (status === 'successful' ? 'Success' : 'Failed');\n}\n\nexport function formatJobDetailsURL(baseURL, jobId) {\n    const subDirectory1 = 'job';\n    const subDirectory2 = 'details';\n    return `${baseURL}/#/${subDirectory1}/${jobId}/${subDirectory2}/`;\n}\n\n/**\n * Converts the string from kebab-case or snake_case to camelCase\n */\nexport const toCamelCase = s =>\n    s.replace(/([-_][a-z])/ig, ($1) => {\n        return $1.toUpperCase()\n        .replace('-', '')\n        .replace('_', '');\n    });\n\n/**\n * Converts all keys recursively in a object to camelCase\n */\nexport const keysToCamel = o => {\n    // Shadowing 'o'.\n    const isObject = o => {\n        return o === Object(o) && !Array.isArray(o) && typeof o !== 'function';\n    };\n\n    if (isObject(o)) {\n        const n = {};\n\n        Object.keys(o)\n        .forEach((k) => {\n            n[toCamelCase(k)] = keysToCamel(o[k]);\n        });\n\n        return n;\n    } else if (Array.isArray(o)) {\n        return o.map(el => {\n            return keysToCamel(el);\n        });\n    }\n\n    return o;\n};\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst DefaultLoadingState = () => (\n    <EmptyState variant={ EmptyStateVariant.full }>\n        <EmptyStateIcon icon={ CubesIcon } />\n        <Title headingLevel=\"h5\" size=\"lg\">\n            Loading...\n        </Title>\n        <EmptyStateBody>\n            Please wait.\n        </EmptyStateBody>\n    </EmptyState>\n);\n\nexport default DefaultLoadingState;\n","/* eslint-disable camelcase */\n/* eslint-disable max-len */\n/*eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"[iI]gnored\" }]*/\n/*eslint max-len: [\"error\", { \"ignoreTemplateLiterals\": true }]*/\n/*eslint max-len: [\"error\", { \"ignoreStrings\": true }]*/\n/*eslint camelcase: [\"error\", {properties: \"never\", ignoreDestructuring: true}]*/\nimport { stringify } from 'query-string';\n\nconst apiVersion = 'v0';\nconst barChartEndpoint = `/api/tower-analytics/${apiVersion}/chart30/`;\nconst clustersEndpoint = `/api/tower-analytics/${apiVersion}/clusters/`;\nconst groupedBarChartEndpoint = `/api/tower-analytics/${apiVersion}/jobs_by_date_and_org_30/`;\nconst modulesEndpoint = `/api/tower-analytics/${apiVersion}/modules/`;\nconst notificationsEndPoint = `/api/tower-analytics/${apiVersion}/notifications/`;\nconst pieChart1Endpoint = `/api/tower-analytics/${apiVersion}/job_runs_by_org_30/`;\nconst pieChart2Endpoint = `/api/tower-analytics/${apiVersion}/job_events_by_org_30/`;\nconst preflightEndpoint = `/api/tower-analytics/${apiVersion}/authorized/`;\nconst templateJobsEndpoint = `/api/tower-analytics/${apiVersion}/template_jobs/`;\nconst templatesEndPoint = `/api/tower-analytics/${apiVersion}/templates/`;\nconst roiEndpoint = `/api/tower-analytics/${apiVersion}/roi_templates/`;\nconst jobExplorerEndpoint = '/api/tower-analytics/v1/job_explorer/';\nconst jobExplorerOptionsEndpoint =\n  '/api/tower-analytics/v1/job_explorer_options/';\n\nfunction getAbsoluteUrl() {\n    const url = window.location.href;\n    let arr = url.split('/');\n    arr.pop();\n    return arr.join('/');\n}\n\nfunction handleResponse(response) {\n    return response.json().then(json => {\n        if (response.ok) {\n            return json;\n        }\n\n        if (response.status === 404 || response.status === 401) {\n            return Promise.reject({\n                status: response.status,\n                message: json\n            });\n        } else {\n            return Promise.reject(json);\n        }\n    });\n}\n\nexport const readTemplateJobs = (id, { params = {}}) => {\n    if (!id) {\n        return;\n    }\n\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(templateJobsEndpoint + id + '/', formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const preflightRequest = () => {\n    return fetch(preflightEndpoint).then(handleResponse);\n};\n\nexport const readClusters = () => {\n    return fetch(clustersEndpoint).then(handleResponse);\n};\n\nexport const readChart30 = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(barChartEndpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readJobsByDateAndOrg = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(groupedBarChartEndpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readModules = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(modulesEndpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readTemplates = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(templatesEndPoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readNotifications = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(notificationsEndPoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readJobExplorerOptions = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(jobExplorerOptionsEndpoint, formattedUrl);\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readJobExplorer = ({ params = {}}) => {\n    const { limit, offset, sort_by } = params;\n    const paginationParams = {\n        limit,\n        offset,\n        sort_by\n    };\n    const qs = stringify(paginationParams);\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(jobExplorerEndpoint, formattedUrl);\n    url.search = qs;\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readJobRunsByOrg = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(pieChart1Endpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readJobEventsByOrg = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(pieChart2Endpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readROI = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(roiEndpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n","/*eslint camelcase: [\"error\", {properties: \"never\", ignoreDestructuring: true}]*/\n/*eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"[iI]gnored\" }]*/\n\nimport { useReducer } from 'react';\nimport moment from 'moment';\n\nimport { formatDate } from '../Utilities/helpers';\n\nexport const useQueryParams = initial => {\n    const paramsReducer = (state, { type, value }) => {\n        switch (type) {\n            /* v0 api reducers */\n            case 'SET_STARTDATE':\n                return { ...state, startDate: value };\n            case 'SET_ENDDATE':\n                return { ...state, endDate: value };\n            case 'SET_ID':\n                if (!parseInt(value)) {\n                    const { id: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, id: parseInt(value) };\n            case 'SET_LIMIT':\n                if (!parseInt(value.limit)) {\n                    const { limit: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, limit: parseInt(value.limit) };\n            /* v1 api reducers */\n            case 'SET_OFFSET':\n            case 'SET_SEVERITY':\n            case 'SET_ATTRIBUTES':\n            case 'SET_JOB_TYPE':\n            case 'SET_STATUS':\n            case 'SET_ORG':\n            case 'SET_CLUSTER':\n            case 'SET_TEMPLATE':\n            case 'SET_SORTBY':\n            case 'SET_ROOT_WORKFLOWS_AND_JOBS':\n                return { ...state, ...value };\n            case 'SET_QUICK_DATE_RANGE': {\n                let newState = { ...state };\n                if (value !== 'custom') {\n                    newState = { ...newState, startDate: '', endDate: '' };\n                }\n\n                newState = { ...newState, ...value };\n                return newState;\n            }\n\n            case 'SET_START_DATE':\n            case 'SET_END_DATE': {\n                let newValues = {};\n                Object.entries(value).forEach(([ key, value ]) => {\n                    newValues[key] = formatDate(value);\n                });\n                return { ...state, ...newValues };\n            }\n\n            case 'RESET_FILTER':\n                return { ...state,\n                    status: [],\n                    quickDateRange: '',\n                    jobType: [],\n                    orgId: [],\n                    clusterId: [],\n                    templateId: [],\n                    sortBy: '',\n                    startDate: '',\n                    endDate: '',\n                    onlyRootWorkflowsAndStandaloneJobs: false\n                };\n            default:\n                throw new Error();\n        }\n    };\n\n    const [ queryParams, dispatch ] = useReducer(paramsReducer, { ...initial });\n\n    /**\n     * Converts queryParams object keys to snake case, which is accepted by the API\n     */\n    const urlMappedQueryParams = () => {\n        const camelToSnakeCase = str => str.replace(/[A-Z]/g, letter => `_${letter.toLowerCase()}`);\n        let urlFormatted = {};\n\n        Object.keys(queryParams).forEach((key) => {\n            // Filter out null and empty array elements\n            if (queryParams[key]) {\n                if (Array.isArray(queryParams[key])) {\n                    if (queryParams[key].length < 1) {\n                        return;\n                    }\n                }\n\n                urlFormatted[camelToSnakeCase(key)] = queryParams[key];\n            }\n        });\n\n        return urlFormatted;\n    };\n\n    const actionMapper = {\n        status: 'SET_STATUS',\n        quickDateRange: 'SET_QUICK_DATE_RANGE',\n        jobType: 'SET_JOB_TYPE',\n        orgId: 'SET_ORG',\n        clusterId: 'SET_CLUSTER',\n        templateId: 'SET_TEMPLATE',\n        sortBy: 'SET_SORTBY',\n        startDate: 'SET_START_DATE',\n        endDate: 'SET_END_DATE',\n        onlyRootWorkflowsAndStandaloneJobs: 'SET_ROOT_WORKFLOWS_AND_JOBS'\n    };\n\n    return {\n        queryParams,\n        urlMappedQueryParams: urlMappedQueryParams(),\n        dispatch,\n        setLimit: limit => dispatch({ type: 'SET_LIMIT', value: { limit }}),\n        setOffset: offset => dispatch({ type: 'SET_OFFSET', value: { offset }}),\n        setSeverity: severity => dispatch({ type: 'SET_SEVERITY', value: { severity }}),\n        setFromToolbar: (varName, value = null) => {\n            if (!varName) {\n                dispatch({ type: 'RESET_FILTER' });\n            } else {\n                dispatch({ type: actionMapper[varName], value: { [varName]: value }});\n            }\n        },\n        /* v0 api usage after this line */\n        setEndDate: () => {\n            const endDate = moment().format('YYYY-MM-DD');\n            dispatch({ type: 'SET_ENDDATE', value: endDate });\n        },\n        setId: value => dispatch({ type: 'SET_ID', value }),\n        setStartDate: days => {\n            let startDate;\n            if (days === 7) {\n                startDate = moment()\n                .subtract(1, 'week')\n                .format('YYYY-MM-DD');\n            }\n\n            if (days === 14) {\n                startDate = moment()\n                .subtract(2, 'weeks')\n                .format('YYYY-MM-DD');\n            }\n\n            if (days === 31) {\n                startDate = moment()\n                .subtract(1, 'month')\n                .format('YYYY-MM-DD');\n            } else {\n                startDate = moment()\n                .subtract(days, 'days')\n                .format('YYYY-MM-DD');\n            }\n\n            dispatch({ type: 'SET_STARTDATE', value: startDate });\n        },\n        setStartDateAsString: value => dispatch({ type: 'SET_STARTDATE', value })\n    };\n};\n"],"sourceRoot":""}