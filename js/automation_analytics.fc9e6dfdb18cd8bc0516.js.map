{"version":3,"sources":["webpack:///./src/Api.js","webpack:///./src/Utilities/useQueryParams.js","webpack:///./src/Components/EmptyState.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Utilities/useApi.js","webpack:///./src/Charts/BaseChart.js","webpack:///./src/Components/NoData.js","webpack:///./src/Components/ApiErrorState.js","webpack:///./src/Components/Toolbar/CategoryDropdown.js","webpack:///./src/Components/Toolbar/CustomDateSelector.js","webpack:///./src/Components/Toolbar/constants.js","webpack:///./src/Components/Toolbar/ToolbarFilterItem.js","webpack:///./src/Components/Toolbar/helpers.js","webpack:///./src/Components/Toolbar/Toolbar.js","webpack:///./src/Components/Toolbar/index.js","webpack:///./src/Utilities/useRedirect.js","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/Utilities/Legend.js","webpack:///./src/Charts/GroupedBarChart/GroupedBarChart.js","webpack:///./src/Charts/GroupedBarChart/OrgsTooltip.js","webpack:///./src/Charts/GroupedBarChart/HostsTooltip.js","webpack:///./src/Charts/PieChart.js","webpack:///./src/Containers/OrganizationStatistics/OrganizationStatistics.js","webpack:///./src/Utilities/colors.ts","webpack:///./src/Charts/ROITopTemplates.js","webpack:///./src/Containers/AutomationCalculator/helpers.js","webpack:///./src/Containers/AutomationCalculator/TotalSavings.js","webpack:///./src/Containers/AutomationCalculator/CalculationCost.js","webpack:///./src/Containers/AutomationCalculator/AutomationFormula.js","webpack:///./src/Containers/AutomationCalculator/TopTemplates.js","webpack:///./src/Containers/AutomationCalculator/AutomationCalculator.js","webpack:///./src/Utilities/Tooltip.js","webpack:///./src/Charts/BarChart.js","webpack:///./src/Charts/LineChart.js","webpack:///./src/Components/ModulesList.js","webpack:///./src/Components/ModalContents.js","webpack:///./src/Components/TemplatesList.js","webpack:///./src/Containers/Clusters/Clusters.js","webpack:///./src/Components/NoResults.js","webpack:///./src/Components/JobStatus.js","webpack:///./src/Components/JobExplorerList.js","webpack:///./src/Containers/JobExplorer/JobExplorer.js","webpack:///./src/Components/NotificationsList.js","webpack:///./src/Containers/Notifications/Notifications.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Components/LoadingState.js"],"names":["handleResponse","response","json","then","ok","status","Promise","reject","message","authenticatedFetch","endpoint","options","window","insights","chrome","auth","getUser","fetch","preflightRequest","readJobExplorer","params","paginationParams","limit","offset","sort_by","qs","stringify","url","URL","location","origin","search","method","body","JSON","readEventExplorer","readROI","readHostExplorer","readClustersOptions","readOrgOptions","readROIOptions","readClusters","readNotifications","Object","keys","forEach","key","searchParams","append","readJobExplorerOptions","useQueryParams","initial","initialWithCalculatedParams","sort_options","sort_order","useReducer","state","type","value","startDate","endDate","parseInt","id","severity","newState","start_date","end_date","newValues","entries","formatDate","Error","queryParams","dispatch","actionMapper","quick_date_range","job_type","org_id","cluster_id","template_id","only_root_workflows_and_standalone_jobs","setLimit","setOffset","setFromToolbar","varName","setSeverity","setEndDate","moment","format","setId","setStartDate","days","subtract","setStartDateAsString","DefaultEmptyState","error","preflightError","variant","EmptyStateVariant","full","icon","WrenchIcon","headingLevel","size","href","target","rel","onClick","reload","propTypes","PropTypes","object","jobExplorer","attributes","defaultParams","roi","group_by","group_by_time","organizationStatistics","clusters","dataFetchReducer","action","isLoading","isSuccess","data","payload","useApi","initialData","postprocess","d","useState","request","setRequest","useEffect","didCancel","e","setData","initializeChart","Chart","BaseChart","props","margin","getWidth","d3","style","left","right","getHeight","top","bottom","string","element","NoData","CubesIcon","ApiErrorState","small","ExclamationCircleIcon","color","globalDangerColor200","CategoryDropdown","selected","setSelected","categories","isExpanded","setIsExpanded","ToolbarItem","Select","isOpen","aria-label","onToggle","onSelect","_event","selection","selections","placeholderText","map","name","SelectOption","array","func","CustomDateSelector","onInputChange","InputGroup","TextInput","onChange","optionsForCategories","isSingle","placeholder","styled","PFSelectOption","renderValues","values","description","marginLeft","ToolbarFilterItem","item","comparator","categoryKey","filter","isVisible","hasChips","setFilter","expanded","setExpanded","ToolbarFilter","data-cy","showToolbarItem","chips","val","i","undefined","handleSingleChips","reduce","acc","Number","isInteger","cmpItem","push","categoryName","deleteChip","valueToDelete","keyToDelete","find","filteredArr","event","includes","hasInlineFilter","onFilter","textInput","toLowerCase","maxHeight","isRequired","any","bool","FilterableToolbar","filters","setFilters","pagination","hasSettings","settingsExpanded","setSettingsExpanded","restCategories","filterCategories","obj","currentCategory","setCurrentCategory","FilterCategoriesGroup","ToolbarGroup","el","QuickDateGroup","SortByGroup","Button","Settings","Card","isFlat","backgroundColor","CardHeader","CardActions","CardTitle","CardBody","Switch","label","labelOff","isChecked","Tooltip","position","content","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarContent","length","isActive","visibility","default","lg","useRedirect","history","path","query","arrayFormat","pathname","Paths","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","resolve","module","exports","Container","div","height","LegendDetail","Wrapper","Color","attrs","Title","span","SubTitle","PFSwitch","Legend","handleChange","_isChecked","parseFloat","index","count","some","date","pieces","split","GroupedBarChart","TooltipClass","orgsList","items","colors","org","colorFunc","slice","selectedIds","setSelectedIds","timeout","draw","remove","unformattedData","timeFrame","formatted","selectedOrgs","concat","width","x0","range","padding","x1","y","maxTicks","Math","round","ticks","xAxis","tickValues","tickFormat","yAxis","tickSize","svg","attr","dates","selectedOrgNames","tooltip","domain","bandwidth","call","selectAll","text","yLabel","exit","enter","bars","merge","subEnter","on","this","darker","handleMouseOver","handleMouseOut","resize","clearTimeout","setTimeout","addEventListener","removeEventListener","number","OrgsTooltip","orgName","jobs","x","pageX","node","getBoundingClientRect","pageY","formatTooltipDate","toolTipWidth","toolTipBase","chartWidth","flipped","jobsWidth","getComputedTextLength","adjustedWidth","maxTextPerc","boxWidth","overage","boundingBox","toolTipPoint","clickMore","interrupt","transition","delay","textWidthThreshold","HostsTooltip","perc","percSuccess","drawn","percent","success_rate","maxLength","percentageTotal","percentageSuccess","boundingBOx","showSuccess","boundingHeight","boundingWidth","PieChart","sort","a","b","radius","min","filteredData","total","getTotal","donutTooltip","pie","arc","outerRadius","innerRadius","classed","PFCardTitle","CardContainer","TopCard","scaleOrdinal","optionsMapper","inventory_id","pieChartMapper","attrName","chartMapper","api","toJobExplorer","rest","formattedDate","dateForJobExplorer","initialQueryParams","OrganizationStatistics","preflight","setPreflight","activeTabKey","setActiveTabKey","orgs","setOrgs","setJobs","tasks","setTasks","setOptions","constants","jobEventsByOrgParams","include_others","granularity","jobRunsByOrgParams","jobsByDateAndOrgParams","hostAcrossOrgParams","appNavClick","secondaryNav","readJobsOrHosts","Fragment","PageHeader","PageHeaderTitle","title","Main","EmptyState","Tabs","activeKey","_","tabIndex","Tab","eventKey","LoadingState","savings","manualCost","automationCost","scrollLeftOffset","scrollLeft","formatDollars","delta","automatedCost","nameWidth","savingsWidth","manualCostWidth","automationCostWidth","widestTextElem","amount","toFixed","toString","replace","TopTemplatesSavings","init","bind","setState","rangeRound","formatYAxisValue","taskNames","Component","BorderedCardTitle","TotalSavings","totalSavings","borderTop","paddingBottom","InputAndText","validFloat","floatValue","CalculationCost","costManual","setCostManual","costAutomation","setCostAutomation","InputGroupText","paddingTop","AutomationFormula","TemplateDetail","TemplateDetailSubTitle","em","TooltipWrapper","IconGroup","QuestionIconTooltip","details","Popover","bodyContent","k","capitalize","join","TopTemplates","sortBy","setDataRunTime","setEnabled","redirectToJobExplorer","overflow","flex","className","component","convertSecondsToMins","avgRunTime","minutes","convertMinsToSeconds","successful_hosts_total","trimmed","sortAttribute","showSortAttr","enabled","deselectedIds","setDeselectedIds","WrapperLeft","WrapperRight","filterDisabled","updateDeltaCost","convertSecondsToHours","successful_elapsed_total","calculateDelta","AutomationCalculator","fetchApi","setDataInApi","roiConst","seconds","updatedData","templateId","textAlign","paddingLeft","sum","curr","display","flexDirection","setUnfilteredData","opts","success","fail","RAN","FAIL","TOTAL","DATE","failed","successful","successTextWidth","failTextWidth","circleSuccess","circleFail","failedIcon","successIcon","successText","failText","BarChart","formattedData","orgId","parseTime","created_date","successful_count","failed_count","Date","barTooltip","layers","order","stack","layer","_d","duration","ease","prevProps","withRouter","LineChart","updateCluster","clusterId","attrTween","tweenDash","l","getTotalLength","t","successLine","curve","failLine","defined","isNaN","vertical","handleMouseMove","intersectX","cx","baseVal","DataListCell","PFDataListCell","DataListItem","PFDataListItem","DataCellEnd","ModulesList","modules","DataList","background","aria-labelledby","border","host_task_count","trimStr","marginRight","PFDataListItemNoBorder","DataListItemCompact","DataListCellCompact","DataListFocus","DataCellEndCompact","ModalContents","successCount","totalCount","elapsed","selectedId","handleModal","qp","jobType","handleCloseBtn","relatedJobs","setRelatedJobs","stats","setStats","useHistory","relatedTemplateJobsParams","agreggateTemplateParams","Modal","onClose","actions","total_count","toISOString","substr","ceil","formatAvgRun","most_failed_tasks","percentage","total_failed_count","task_name","formatTopFailedTask","most_failed_steps","template_name","formatTopFailedStep","Label","job","cluster_name","formatDateTime","started","formatSeconds","TemplatesList","templates","setSelectedId","isModalOpen","setIsModalOpen","initialTopTemplateParams","initialTopWorkflowParams","initialModuleParams","Clusters","setPreFlightError","chartData","setTemplates","workflows","setWorkflows","setModules","groupBy","initialOptionsParams","optionsQueryParams","topTemplatesParams","topWorkflowParams","topModuleParams","initializeWithPreflight","marginTop","NoResults","EmptyStateIcon","SearchIcon","EmptyStateBody","JobStatus","str","getColor","getIcon","charAt","toUpperCase","oneOf","headerLabels","ExternalLinkIcon","PFExternalLinkIcon","DataListCellHeader","DataListItemCells","PFDataListItemCells","DataListToggle","PFDataListToggle","buildListRow","ariaLabel","ariaLabelledBy","windowWidth","DataListItemRow","aria-controls","idx","indexOf","newExpanded","dataListCells","tower_link","fontWeight","org_name","formatJobType","DataListContent","isHidden","created","finished","AllJobsTemplate","innerWidth","setWindowWidth","onResize","JobExplorerList","labels","isCompact","perPageOptions","JobExplorer","meta","currPage","setCurrPage","initialSearchParams","parse","parseBooleans","updateURL","returnOffsetVal","page","handleSetPage","nextOffset","handlePerPageSelect","perPage","Pagination","itemCount","widgetId","PaginationVariant","onPerPageSelect","onSetPage","pageNumber","ExternalLinkAltIcon","PFExternalLinkAltIcon","NotificationDrawerListItem","PFNotificationDrawerListItem","NotificationDrawerList","PFNotificationDrawerList","stringifyDate","day","now","utc","isAfter","diff","isSame","valueOf","AllNotificationTemplate","notifications","notification_id","tower_url","NotificationDrawerListItemHeader","NotificationDrawerListItemBody","timestamp","ErrorNotificationTemplate","notification","NoticeNotificationTemplate","WarningNotificationTemplate","NotificationsList","filterBy","DropdownGroup","notificationOptions","disabled","formatClusterName","uuid","install_uuid","Notifications","notificationsData","setNotificationsData","clusterOptions","setClusterOptions","selectedCluster","setSelectedCluster","firstRender","setFirstRender","setIsLoading","setMeta","ignore","fetchEndpoints","all","p","clustersData","FormSelect","FormSelectOption","isDisabled","NotificationDrawer","isNumeric","dateTime","startOf","datum","s","mins","DefaultLoadingState"],"mappings":"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","file":"js/automation_analytics.fc9e6dfdb18cd8bc0516.js","sourcesContent":["import { stringify } from 'query-string';\n/* v0 endpoints */\nconst clustersEndpoint = `/api/tower-analytics/v0/clusters/`;\nconst notificationsEndpoint = `/api/tower-analytics/v0/notifications/`;\nconst preflightEndpoint = `/api/tower-analytics/v0/authorized/`;\n\n/* v1 endpoints */\nconst jobExplorerEndpoint = '/api/tower-analytics/v1/job_explorer/';\nconst hostExplorerEndpoint = '/api/tower-analytics/v1/host_explorer/';\nconst eventExplorerEndpoint = '/api/tower-analytics/v1/event_explorer/';\nconst ROIEndpoint = '/api/tower-analytics/v1/roi_templates/';\n\n/* page options endpoints */\nconst jobExplorerOptionsEndpoint =\n    '/api/tower-analytics/v1/job_explorer_options/';\nconst ROITemplatesOptionsEndpoint = '/api/tower-analytics/v1/roi_templates_options/';\nconst orgOptionsEndpoint = '/api/tower-analytics/v1/dashboard_organization_statistics_options/';\nconst clustersOptionsEndpoint = '/api/tower-analytics/v1/dashboard_clusters_options/';\n\nfunction handleResponse(response) {\n    return response.json().then(json => {\n        if (response.ok) {\n            return json;\n        }\n\n        if (response.status === 404 || response.status === 401) {\n            return Promise.reject({\n                status: response.status,\n                message: json\n            });\n        } else {\n            return Promise.reject(json);\n        }\n    });\n}\n\nfunction authenticatedFetch(endpoint, options) {\n    return window.insights.chrome.auth.getUser().then(() => fetch(endpoint, options));\n}\n\nexport const preflightRequest = () => {\n    return authenticatedFetch(preflightEndpoint).then(handleResponse);\n};\n\nexport const readJobExplorer = ({ params = {}}) => {\n    const { limit, offset, sort_by } = params;\n    const paginationParams = {\n        limit,\n        offset,\n        sort_by\n    };\n    const qs = stringify(paginationParams);\n    let url = new URL(jobExplorerEndpoint, window.location.origin);\n    url.search = qs;\n    return authenticatedFetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readEventExplorer = ({ params = {}}) => {\n    const { limit, offset, sort_by } = params;\n    const paginationParams = {\n        limit,\n        offset,\n        sort_by\n    };\n    const qs = stringify(paginationParams);\n    let url = new URL(eventExplorerEndpoint, window.location.origin);\n    url.search = qs;\n    return authenticatedFetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readROI = ({ params = {}}) => {\n    const { limit, offset, sort_by } = params;\n    const paginationParams = {\n        limit,\n        offset,\n        sort_by\n    };\n    const qs = stringify(paginationParams);\n    let url = new URL(ROIEndpoint, window.location.origin);\n    url.search = qs;\n    return authenticatedFetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readHostExplorer = ({ params = {}}) => {\n    const { limit, offset, sort_by } = params;\n    const paginationParams = {\n        limit,\n        offset,\n        sort_by\n    };\n    const qs = stringify(paginationParams);\n    let url = new URL(hostExplorerEndpoint, window.location.origin);\n    url.search = qs;\n    return authenticatedFetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readClustersOptions = ({ params = {}}) => {\n    let url = new URL(clustersOptionsEndpoint, window.location.origin);\n    return authenticatedFetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readOrgOptions = ({ params = {}}) => {\n    let url = new URL(orgOptionsEndpoint, window.location.origin);\n    return authenticatedFetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readROIOptions = ({ params = {}}) => {\n    let url = new URL(ROITemplatesOptionsEndpoint, window.location.origin);\n    return authenticatedFetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\n// v0 endpoints used in Notifications.js\nexport const readClusters = () => {\n    return authenticatedFetch(clustersEndpoint).then(handleResponse);\n};\n\nexport const readNotifications = ({ params = {}}) => {\n    let url = new URL(notificationsEndpoint, window.location.origin);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return authenticatedFetch(url).then(handleResponse);\n};\n\nexport const readJobExplorerOptions = ({ params = {}}) => {\n    let url = new URL(jobExplorerOptionsEndpoint, window.location.origin);\n    return authenticatedFetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n","import { useReducer } from 'react';\nimport moment from 'moment';\n\nimport { formatDate } from '../Utilities/helpers';\n\nexport const useQueryParams = initial => {\n    const initialWithCalculatedParams = {\n        ...initial,\n        ...initial.sort_options && initial.sort_order && { sort_by: `${initial.sort_options}:${initial.sort_order}` }\n    };\n\n    const paramsReducer = (state, { type, value }) => {\n        switch (type) {\n            /* v0 api reducers */\n            case 'SET_STARTDATE':\n                return { ...state, startDate: value };\n            case 'SET_ENDDATE':\n                return { ...state, endDate: value };\n            case 'SET_ID':\n                if (!parseInt(value)) {\n                    const { id: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, id: parseInt(value) };\n            case 'SET_LIMIT':\n                if (!parseInt(value.limit)) {\n                    const { limit: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, limit: parseInt(value.limit) };\n            case 'SET_SEVERITY':\n                if (value.severity === '') {\n                    const { severity: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, ...value };\n\n            /* v1 api reducers */\n            case 'SET_OFFSET':\n            case 'SET_ATTRIBUTES':\n            case 'SET_JOB_TYPE':\n            case 'SET_STATUS':\n            case 'SET_ORG':\n            case 'SET_CLUSTER':\n            case 'SET_TEMPLATE':\n            case 'SET_ROOT_WORKFLOWS_AND_JOBS':\n                return { ...state, ...value };\n            case 'SET_QUICK_DATE_RANGE': {\n                let newState = { ...state };\n                if (value !== 'custom') {\n                    newState = { ...newState, start_date: null, end_date: null };\n                }\n\n                newState = { ...newState, ...value };\n                return newState;\n            }\n\n            case 'SET_START_DATE':\n            case 'SET_END_DATE': {\n                let newValues = {};\n                Object.entries(value).forEach(([ key, value ]) => {\n                    newValues[key] = formatDate(value);\n                });\n                return { ...state, ...newValues };\n            }\n\n            case 'SET_SORT_OPTIONS': {\n                return {\n                    ...state,\n                    sort_options: value.sort_options,\n                    ...state.sort_order && { sort_by: `${value.sort_options}:${state.sort_order}` } // Update sort by\n                };\n            }\n\n            case 'SET_SORT_ORDER': {\n                return {\n                    ...state,\n                    sort_order: value.sort_order,\n                    ...state.sort_options && { sort_by: `${state.sort_options}:${value.sort_order}` } // Update sort by\n                };\n            }\n\n            case 'REINITIALIZE':\n                return { ...value };\n            case 'RESET_FILTER':\n                return { ...initialWithCalculatedParams };\n            default:\n                throw new Error();\n        }\n    };\n\n    const [ queryParams, dispatch ] = useReducer(paramsReducer, { ...initialWithCalculatedParams });\n\n    const actionMapper = {\n        status: 'SET_STATUS',\n        quick_date_range: 'SET_QUICK_DATE_RANGE',\n        job_type: 'SET_JOB_TYPE',\n        org_id: 'SET_ORG',\n        cluster_id: 'SET_CLUSTER',\n        template_id: 'SET_TEMPLATE',\n        sort_order: 'SET_SORT_ORDER',\n        sort_options: `SET_SORT_OPTIONS`,\n        start_date: 'SET_START_DATE',\n        end_date: 'SET_END_DATE',\n        only_root_workflows_and_standalone_jobs: 'SET_ROOT_WORKFLOWS_AND_JOBS'\n    };\n\n    return {\n        queryParams,\n        dispatch,\n        setLimit: limit => dispatch({ type: 'SET_LIMIT', value: { limit }}),\n        setOffset: offset => dispatch({ type: 'SET_OFFSET', value: { offset }}),\n        setFromToolbar: (varName, value = null) => {\n            if (!varName) {\n                dispatch({ type: 'RESET_FILTER' });\n            } else {\n                dispatch({ type: actionMapper[varName], value: { [varName]: value }});\n            }\n        },\n        /* v0 api usage after this line */\n        setSeverity: severity =>\n            dispatch({ type: 'SET_SEVERITY', value: { severity }}),\n        setEndDate: () => {\n            const endDate = moment().format('YYYY-MM-DD');\n            dispatch({ type: 'SET_ENDDATE', value: endDate });\n        },\n        setId: value => dispatch({ type: 'SET_ID', value }),\n        setStartDate: days => {\n            let startDate;\n            if (days === 7) {\n                startDate = moment()\n                .subtract(1, 'week')\n                .format('YYYY-MM-DD');\n            }\n\n            if (days === 14) {\n                startDate = moment()\n                .subtract(2, 'weeks')\n                .format('YYYY-MM-DD');\n            }\n\n            if (days === 31) {\n                startDate = moment()\n                .subtract(1, 'month')\n                .format('YYYY-MM-DD');\n            } else {\n                startDate = moment()\n                .subtract(days, 'days')\n                .format('YYYY-MM-DD');\n            }\n\n            dispatch({ type: 'SET_STARTDATE', value: startDate });\n        },\n        setStartDateAsString: value => dispatch({ type: 'SET_STARTDATE', value })\n    };\n};\n","/*eslint max-len: [\"error\", { \"ignoreStrings\": true }]*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Button,\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { WrenchIcon } from '@patternfly/react-icons';\n\nconst DefaultEmptyState = ({ preflightError: error }) => (\n    <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={WrenchIcon} />\n        {error.status === 404 && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n          No data found\n                </Title>\n                <EmptyStateBody>\n          Please visit{' '}\n                    <a\n                        href=\"https://docs.ansible.com/ansible-tower/latest/html/administration/usability_data_collection.html#automation-analytics\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n            here\n                    </a>{' '}\n          to learn how to enable Automation Analytics.\n                </EmptyStateBody>\n            </>\n        )}\n        {error.status === 401 && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n          Not authorized\n                </Title>\n                <EmptyStateBody>\n          You do not have the correct permissions to view this page.\n                </EmptyStateBody>\n            </>\n        )}\n        {!error.status && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n          Something went wrong, please try reloading the page\n                </Title>\n                <Button variant=\"primary\" onClick={() => window.location.reload()}>\n          Reload\n                </Button>\n            </>\n        )}\n    </EmptyState>\n);\n\nDefaultEmptyState.propTypes = {\n    preflightError: PropTypes.object\n};\n\nexport default DefaultEmptyState;\n","export const jobExplorer = {\n    attributes: [\n        'id',\n        'status',\n        'job_type',\n        'started',\n        'finished',\n        'elapsed',\n        'created',\n        'cluster_name',\n        'org_name',\n        'most_failed_tasks'\n    ],\n    defaultParams: {\n        status: [ 'successful', 'failed' ],\n        quick_date_range: 'last_30_days',\n        job_type: [ 'workflowjob', 'job' ],\n        org_id: [],\n        cluster_id: [],\n        template_id: [],\n        sort_options: 'created',\n        sort_order: 'desc',\n        only_root_workflows_and_standalone_jobs: false,\n        limit: 5\n    }\n};\n\nexport const roi = {\n    defaultParams: {\n        status: [ 'successful' ],\n        org_id: [],\n        cluster_id: [],\n        template_id: [],\n        quick_date_range: 'roi_last_year',\n        job_type: [ 'job' ],\n        sort_options: 'template_productivity_score',\n        sort_order: 'desc',\n        start_date: null,\n        end_date: null,\n        limit: 25,\n        only_root_workflows_and_standalone_jobs: true,\n        attributes: [\n            'successful_hosts_total',\n            'successful_elapsed_total',\n            'total_org_count',\n            'total_cluster_count'\n        ],\n        group_by: 'template',\n        group_by_time: false\n    }\n};\n\nexport const organizationStatistics = {\n    defaultParams: {\n        status: [],\n        org_id: [],\n        quick_date_range: 'last_30_days',\n        limit: 5,\n        job_type: [ 'workflowjob', 'job' ],\n        cluster_id: [],\n        template_id: [],\n        start_date: null,\n        end_date: null\n    }\n};\n\nexport const clusters = {\n    defaultParams: {\n        status: [ 'successful', 'failed' ],\n        quick_date_range: 'last_30_days',\n        job_type: [ 'workflowjob', 'job' ],\n        group_by_time: true,\n        org_id: [],\n        cluster_id: [],\n        template_id: [],\n        only_root_workflows_and_standalone_jobs: false\n    }\n};\n","import { useState, useEffect, useReducer } from 'react';\n\nconst dataFetchReducer = (state, action) => {\n    switch (action.type) {\n        case 'FETCH_INIT':\n            return {\n                ...state,\n                isLoading: true,\n                isSuccess: false,\n                error: null\n            };\n        case 'FETCH_SUCCESS':\n            return {\n                ...state,\n                isLoading: false,\n                isSuccess: true,\n                error: null,\n                data: action.payload\n            };\n        case 'FETCH_FAILURE':\n            return {\n                ...state,\n                isLoading: false,\n                isSuccess: false,\n                error: action.payload\n            };\n        case 'UPDATE_DATA':\n            return {\n                ...state,\n                data: action.payload\n            };\n        default:\n            throw new Error();\n    }\n};\n\nconst useApi = (initialData, postprocess = d => d) => {\n    const [ request, setRequest ] = useState(null);\n\n    const [ state, dispatch ] = useReducer(dataFetchReducer, {\n        isLoading: false,\n        isSuccess: false,\n        error: null,\n        data: initialData\n    });\n\n    useEffect(() => {\n    // Prevent fetching nothing\n        if (!request) {\n            return;\n        }\n\n        // Initialize\n        let didCancel = false;\n        dispatch({ type: 'FETCH_INIT' });\n\n        // Fetching\n        request.then(data => {\n            if (!didCancel) {\n                dispatch({\n                    type: 'FETCH_SUCCESS',\n                    payload: postprocess(data)\n                });\n            }\n        }).catch(e => {\n            if (!didCancel) {\n                dispatch({ type: 'FETCH_FAILURE', payload: e });\n            }\n        });\n\n        return () => {\n            didCancel = true;\n        };\n    }, [ request ]);\n\n    const setData = data => {\n        dispatch({ type: 'UPDATE_DATA', payload: data });\n    };\n\n    return [ state, setRequest, setData ];\n};\n\nexport default useApi;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nconst initializeChart = Chart => {\n    const BaseChart = props => {\n        const { id, margin } = props;\n\n        const getWidth = () => {\n            let width;\n            width =\n        parseInt(d3.select('#' + id).style('width')) -\n          margin.left -\n          margin.right || 700;\n            return width;\n        };\n\n        const getHeight = () => {\n            let height;\n            height =\n        parseInt(d3.select('#' + id).style('height')) -\n          margin.top -\n          margin.bottom || 450;\n            return height;\n        };\n\n        return <Chart {...props} getWidth={getWidth} getHeight={getHeight} />;\n    };\n\n    BaseChart.propTypes = {\n        id: PropTypes.string,\n        margin: PropTypes.object\n    };\n\n    return BaseChart;\n};\n\ninitializeChart.propTypes = {\n    Chart: PropTypes.element\n};\n\nexport default initializeChart;\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst NoData = () => (\n    <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={CubesIcon} />\n        <Title headingLevel=\"h5\" size=\"lg\">\n      No Data\n        </Title>\n    </EmptyState>\n);\n\nexport default NoData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateIcon,\n    EmptyStateVariant,\n    Title\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { global_danger_color_200 as globalDangerColor200 } from '@patternfly/react-tokens';\n\nconst ApiErrorState = ({ message }) => (\n    <EmptyState variant={EmptyStateVariant.small}>\n        <EmptyStateIcon\n            icon={ExclamationCircleIcon}\n            color={globalDangerColor200.value}\n        />\n        <Title headingLevel=\"h2\" size=\"lg\">\n      Error\n        </Title>\n        <EmptyStateBody>{message}</EmptyStateBody>\n    </EmptyState>\n);\n\nApiErrorState.propTypes = {\n    message: PropTypes.string\n};\n\nexport default ApiErrorState;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarItem, Select, SelectOption } from '@patternfly/react-core';\n\nconst CategoryDropdown = ({\n    selected,\n    setSelected = () => {},\n    categories = []\n}) => {\n    const [ isExpanded, setIsExpanded ] = useState(false);\n\n    return (\n        <ToolbarItem>\n            <Select\n                isOpen={isExpanded}\n                variant={'single'}\n                aria-label={'Categories'}\n                onToggle={() => setIsExpanded(!isExpanded)}\n                onSelect={(_event, selection) => {\n                    setSelected(selection);\n                    setIsExpanded(false);\n                }}\n                selections={selected}\n                placeholderText={'Filter by'}\n            >\n                {categories.map(({ key, name }) => (\n                    <SelectOption key={key} value={key}>\n                        {name}\n                    </SelectOption>\n                ))}\n            </Select>\n        </ToolbarItem>\n    );\n};\n\nCategoryDropdown.propTypes = {\n    categories: PropTypes.array,\n    selected: PropTypes.string,\n    setSelected: PropTypes.func\n};\n\nexport default CategoryDropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, TextInput } from '@patternfly/react-core';\n\nconst CustomDateSelector = ({\n    onInputChange = () => {},\n    startDate = '',\n    endDate = ''\n}) => {\n    return (\n        <>\n            <InputGroup>\n                <TextInput\n                    name=\"startDate\"\n                    id=\"startDate\"\n                    type=\"date\"\n                    aria-label=\"Start Date\"\n                    value={startDate}\n                    onChange={e => onInputChange('start_date', e)}\n                />\n            </InputGroup>\n            <InputGroup>\n                <TextInput\n                    name=\"endDate\"\n                    id=\"endDate\"\n                    type=\"date\"\n                    aria-label=\"End Date\"\n                    value={endDate}\n                    onChange={e => onInputChange('end_date', e)}\n                />\n            </InputGroup>\n        </>\n    );\n};\n\nCustomDateSelector.propTypes = {\n    startDate: PropTypes.string,\n    endDate: PropTypes.string,\n    onInputChange: PropTypes.func\n};\n\nexport default CustomDateSelector;\n","export const optionsForCategories = {\n    status: {\n        isSingle: false,\n        name: 'Status',\n        placeholder: 'Filter by job status'\n    },\n    quick_date_range: {\n        isSingle: true,\n        name: 'Date',\n        placeholder: 'Filter by date'\n    },\n    job_type: {\n        isSingle: false,\n        name: 'Job',\n        placeholder: 'Filter by job type'\n    },\n    org_id: {\n        isSingle: false,\n        name: 'Organization',\n        placeholder: 'Filter by organization'\n    },\n    cluster_id: {\n        isSingle: false,\n        name: 'Cluster',\n        placeholder: 'Filter by cluster'\n    },\n    template_id: {\n        isSingle: false,\n        name: 'Template',\n        placeholder: 'Filter by template'\n    },\n    sort_options: {\n        isSingle: true,\n        name: 'Sort by',\n        placeholder: 'Sort by attribute'\n    }\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ToolbarFilter,\n    Select,\n    SelectOption as PFSelectOption\n} from '@patternfly/react-core';\n\nimport {\n    handleCheckboxChips,\n    handleSingleChips\n} from './helpers';\nimport { optionsForCategories } from './constants';\nimport styled from 'styled-components';\n\nconst SelectOption = styled(PFSelectOption)`\n    display: block;\n    overflow-x: hidden;\n    text-overflow: ellipsis;\n    max-width: 300px;\n`;\n\nconst renderValues = values =>\n    values && values.map(({ key, value, description }) => (\n        <SelectOption key={ key } value={ key } description={ description }>\n            <span style={{ marginLeft: 5 }}>{ value } </span>\n        </SelectOption>\n    ));\n\nconst ToolbarFilterItem = ({\n    categoryKey,\n    filter = null,\n    values = [],\n    isVisible = true,\n    hasChips = true,\n    setFilter\n}) => {\n    const [ expanded, setExpanded ] = useState(false);\n    const options = optionsForCategories[categoryKey];\n\n    const onDelete = (name, valueToDelete) => {\n        const single = optionsForCategories[categoryKey].isSingle;\n\n        if (single) {\n            setFilter(null);\n        } else {\n            const keyToDelete = values.find(({ value }) => value === valueToDelete)\n            .key;\n            const filteredArr = filter.filter(value => value !== keyToDelete);\n            setFilter(filteredArr);\n        }\n    };\n\n    const handleChips = () => {\n        if (options.isSingle) {\n            return handleSingleChips(filter, values);\n        } else {\n            return handleCheckboxChips(filter, values);\n        }\n    };\n\n    const onSelect = (event, selection) => {\n        if (options.isSingle) {\n            setFilter(selection);\n            setExpanded(false);\n        } else {\n            setFilter(!filter.includes(selection)\n                ? [ ...filter, selection ]\n                : filter.filter(value => value !== selection)\n            );\n        }\n    };\n\n    const onFilter = event => {\n        const textInput = event.target.value;\n        if (textInput === '') {\n            return renderValues(values);\n        } else {\n            return renderValues(\n                values.filter(({ value }) =>\n                    value.toLowerCase().includes(textInput.toLowerCase())\n                )\n            );\n        }\n    };\n\n    return (\n        <ToolbarFilter\n            data-cy={categoryKey}\n            key={categoryKey}\n            showToolbarItem={isVisible}\n            chips={hasChips ? handleChips() : []}\n            categoryName={options.name}\n            deleteChip={hasChips ? onDelete : null}\n        >\n            <Select\n                variant={options.isSingle ? 'single' : 'checkbox'}\n                aria-label={categoryKey}\n                onToggle={() => setExpanded(!expanded)}\n                onSelect={onSelect}\n                selections={filter}\n                isOpen={expanded}\n                hasInlineFilter\n                placeholderText={options.placeholder}\n                onFilter={ onFilter }\n                maxHeight={ '1000%' }\n            >\n                { renderValues(values) }\n            </Select>\n        </ToolbarFilter>\n    );\n};\n\nToolbarFilterItem.propTypes = {\n    categoryKey: PropTypes.string.isRequired,\n    filter: PropTypes.any,\n    values: PropTypes.array,\n    isVisible: PropTypes.bool,\n    hasChips: PropTypes.bool,\n    setFilter: PropTypes.func.isRequired\n};\n\nexport default ToolbarFilterItem;\n","/**\n * Get comparator values if their key is in the item list\n */\nexport const handleCheckboxChips = (item, comparator) => {\n    if (item && comparator) {\n        return item.reduce((acc, i) => {\n            Number.isInteger(parseInt(i)) ? (i = parseInt(i)) : i;\n\n            comparator.forEach(cmpItem => {\n                if (cmpItem.key === i) {\n                    acc.push(cmpItem.value);\n                }\n            });\n\n            return acc;\n        }, []);\n    }\n\n    return [];\n};\n\n/**\n * Convert a list of objects to a list of the last value if defined\n */\nexport const handleSingleChips = (item, comparator) => {\n    if (item && typeof item === 'string' && comparator) {\n        let val;\n        comparator.forEach(i => {\n            if (i.key === item) {\n                val = i.value;\n            }\n        });\n\n        if (val !== undefined) {\n            return [ val ];\n        }\n    }\n\n    return [];\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Toolbar,\n    ToolbarContent,\n    ToolbarGroup,\n    Button,\n    ToolbarItem,\n    Tooltip,\n    Switch\n} from '@patternfly/react-core';\nimport {\n    Card,\n    CardTitle,\n    CardBody,\n    CardActions,\n    CardHeader\n} from '@patternfly/react-core';\nimport {\n    FilterIcon,\n    SortAmountDownIcon,\n    SortAmountUpIcon,\n    CogIcon,\n    QuestionCircleIcon,\n    TimesIcon\n} from '@patternfly/react-icons';\n\nimport CategoryDropdown from './CategoryDropdown';\nimport CustomDateSelector from './CustomDateSelector';\nimport { optionsForCategories } from './constants';\nimport ToolbarFilterItem from './ToolbarFilterItem';\n\nconst FilterableToolbar = ({\n    categories,\n    filters,\n    setFilters,\n    pagination = null,\n    hasSettings = false\n}) => {\n    const [ settingsExpanded, setSettingsExpanded ] = useState(false);\n    const { quick_date_range, sort_options, ...restCategories } = categories;\n\n    // Filter out elements which are not in the option object.\n    const filterCategories = Object.keys(restCategories)\n    .filter(key => Object.keys(optionsForCategories).includes(key))\n    .reduce((obj, key) => {\n        obj[key] = restCategories[key];\n        return obj;\n    }, {});\n\n    const [ currentCategory, setCurrentCategory ] = useState(\n        Object.keys(filterCategories)[0]\n    );\n\n    const onInputChange = (type, value) => {\n        setFilters(type, value);\n    };\n\n    const FilterCategoriesGroup = () => (\n        <ToolbarGroup variant=\"filter-group\">\n            <CategoryDropdown\n                selected={currentCategory}\n                setSelected={setCurrentCategory}\n                categories={Object.keys(filterCategories).map(el => ({\n                    key: el,\n                    name: optionsForCategories[el].name\n                }))}\n            />\n            {Object.keys(filterCategories).map(key => (\n                <ToolbarFilterItem\n                    key={key}\n                    categoryKey={key}\n                    filter={filters[key]}\n                    values={categories[key]}\n                    isVisible={currentCategory === key}\n                    setFilter={value => setFilters(key, value)}\n                />\n            ))}\n        </ToolbarGroup>\n    );\n\n    const QuickDateGroup = () => (\n        <ToolbarGroup variant=\"filter-group\">\n            <ToolbarFilterItem\n                categoryKey=\"quick_date_range\"\n                filter={filters.quick_date_range}\n                values={quick_date_range}\n                setFilter={value => setFilters('quick_date_range', value)}\n                hasChips={false}\n            />\n            {filters.quick_date_range &&\n            filters.quick_date_range.includes('custom') && (\n                <CustomDateSelector\n                    startDate={filters.start_date ? filters.start_date : ''}\n                    endDate={filters.end_date ? filters.end_date : ''}\n                    onInputChange={onInputChange}\n                />\n            )}\n        </ToolbarGroup>\n    );\n\n    const SortByGroup = () => (\n        <ToolbarGroup variant=\"filter-group\">\n            <ToolbarFilterItem\n                categoryKey=\"sort_options\"\n                filter={filters.sort_options}\n                values={sort_options}\n                setFilter={value =>\n                    setFilters('sort_options', value)\n                }\n                hasChips={false}\n            />\n            <Button variant=\"control\"\n                onClick={() => setFilters(\n                    'sort_order',\n                    filters.sort_order === 'asc' ? 'desc' : 'asc'\n                )}\n            >\n                {filters.sort_order === 'asc' && (<SortAmountUpIcon />)}\n                {filters.sort_order === 'desc' && (<SortAmountDownIcon />)}\n            </Button>\n        </ToolbarGroup>\n    );\n\n    /* TODO: For future work: make settings more modular for different pages */\n    const Settings = () => (\n        <Card isFlat style={{ backgroundColor: '#EEEEEE' }}>\n            <CardHeader>\n                <CardActions>\n                    <Button\n                        variant=\"plain\"\n                        onClick={() => setSettingsExpanded(!settingsExpanded)}\n                    >\n                        <TimesIcon />\n                    </Button>\n                </CardActions>\n                <CardTitle>Settings</CardTitle>\n            </CardHeader>\n            <CardBody>\n                <Switch\n                    id=\"showRootWorkflowJobs\"\n                    label=\"Ignore nested workflows and jobs\"\n                    labelOff=\"Ignore nested workflows and jobs\"\n                    isChecked={filters.only_root_workflows_and_standalone_jobs}\n                    onChange={val => {\n                        setFilters('only_root_workflows_and_standalone_jobs', val);\n                    }}\n                />\n                <Tooltip\n                    position={'top'}\n                    content={\n                        <div>\n                            {' '}\n              If enabled, nested workflows and jobs will not be included in the\n              overall totals. Enable this option to filter out duplicate\n              entries.\n                        </div>\n                    }\n                >\n                    <QuestionCircleIcon />\n                </Tooltip>\n            </CardBody>\n        </Card>\n    );\n\n    return (\n        <>\n            <Toolbar\n                id=\"filterable-toolbar-with-chip-groups\"\n                clearAllFilters={() => {\n                    setFilters(null, null);\n                }}\n                collapseListedFiltersBreakpoint=\"xl\"\n            >\n                <ToolbarContent>\n                    <Button variant=\"control\">\n                        <FilterIcon />\n                    </Button>\n                    {Object.keys(filterCategories).length > 0 && (\n                        <FilterCategoriesGroup />\n                    )}\n                    {quick_date_range && <QuickDateGroup />}\n                    {sort_options && <SortByGroup />}\n                    {hasSettings && (\n                        <ToolbarItem>\n                            <Button\n                                variant=\"plain\"\n                                onClick={() => setSettingsExpanded(!settingsExpanded)}\n                                aria-label=\"settings\"\n                                isActive={settingsExpanded}\n                            >\n                                <CogIcon />\n                            </Button>\n                        </ToolbarItem>\n                    )}\n                    {pagination && (\n                        <ToolbarItem\n                            variant=\"pagination\"\n                            visibility={{ default: 'hidden', lg: 'visible' }}\n                        >\n                            {pagination}\n                        </ToolbarItem>\n                    )}\n                </ToolbarContent>\n                {settingsExpanded && <Settings />}\n            </Toolbar>\n        </>\n    );\n};\n\nFilterableToolbar.propTypes = {\n    categories: PropTypes.object.isRequired,\n    filters: PropTypes.object.isRequired,\n    setFilters: PropTypes.func.isRequired,\n    pagination: PropTypes.object,\n    hasSettings: PropTypes.bool\n};\n\nexport default FilterableToolbar;\n","import Toolbar from './Toolbar';\n\nexport default Toolbar;\n","import { Paths } from '../paths';\nimport { stringify } from 'query-string';\n\nconst useRedirect = (history, path) => query => {\n    const search = stringify(query, { arrayFormat: 'bracket' });\n    history.push({\n        pathname: Paths[path],\n        search\n    });\n};\n\nexport default useRedirect;\n","var map = {\n\t\"./af\": 219,\n\t\"./af.js\": 219,\n\t\"./ar\": 220,\n\t\"./ar-dz\": 221,\n\t\"./ar-dz.js\": 221,\n\t\"./ar-kw\": 222,\n\t\"./ar-kw.js\": 222,\n\t\"./ar-ly\": 223,\n\t\"./ar-ly.js\": 223,\n\t\"./ar-ma\": 224,\n\t\"./ar-ma.js\": 224,\n\t\"./ar-sa\": 225,\n\t\"./ar-sa.js\": 225,\n\t\"./ar-tn\": 226,\n\t\"./ar-tn.js\": 226,\n\t\"./ar.js\": 220,\n\t\"./az\": 227,\n\t\"./az.js\": 227,\n\t\"./be\": 228,\n\t\"./be.js\": 228,\n\t\"./bg\": 229,\n\t\"./bg.js\": 229,\n\t\"./bm\": 230,\n\t\"./bm.js\": 230,\n\t\"./bn\": 231,\n\t\"./bn-bd\": 232,\n\t\"./bn-bd.js\": 232,\n\t\"./bn.js\": 231,\n\t\"./bo\": 233,\n\t\"./bo.js\": 233,\n\t\"./br\": 234,\n\t\"./br.js\": 234,\n\t\"./bs\": 235,\n\t\"./bs.js\": 235,\n\t\"./ca\": 236,\n\t\"./ca.js\": 236,\n\t\"./cs\": 237,\n\t\"./cs.js\": 237,\n\t\"./cv\": 238,\n\t\"./cv.js\": 238,\n\t\"./cy\": 239,\n\t\"./cy.js\": 239,\n\t\"./da\": 240,\n\t\"./da.js\": 240,\n\t\"./de\": 241,\n\t\"./de-at\": 242,\n\t\"./de-at.js\": 242,\n\t\"./de-ch\": 243,\n\t\"./de-ch.js\": 243,\n\t\"./de.js\": 241,\n\t\"./dv\": 244,\n\t\"./dv.js\": 244,\n\t\"./el\": 245,\n\t\"./el.js\": 245,\n\t\"./en-au\": 246,\n\t\"./en-au.js\": 246,\n\t\"./en-ca\": 247,\n\t\"./en-ca.js\": 247,\n\t\"./en-gb\": 248,\n\t\"./en-gb.js\": 248,\n\t\"./en-ie\": 249,\n\t\"./en-ie.js\": 249,\n\t\"./en-il\": 250,\n\t\"./en-il.js\": 250,\n\t\"./en-in\": 251,\n\t\"./en-in.js\": 251,\n\t\"./en-nz\": 252,\n\t\"./en-nz.js\": 252,\n\t\"./en-sg\": 253,\n\t\"./en-sg.js\": 253,\n\t\"./eo\": 254,\n\t\"./eo.js\": 254,\n\t\"./es\": 255,\n\t\"./es-do\": 256,\n\t\"./es-do.js\": 256,\n\t\"./es-mx\": 257,\n\t\"./es-mx.js\": 257,\n\t\"./es-us\": 258,\n\t\"./es-us.js\": 258,\n\t\"./es.js\": 255,\n\t\"./et\": 259,\n\t\"./et.js\": 259,\n\t\"./eu\": 260,\n\t\"./eu.js\": 260,\n\t\"./fa\": 261,\n\t\"./fa.js\": 261,\n\t\"./fi\": 262,\n\t\"./fi.js\": 262,\n\t\"./fil\": 263,\n\t\"./fil.js\": 263,\n\t\"./fo\": 264,\n\t\"./fo.js\": 264,\n\t\"./fr\": 265,\n\t\"./fr-ca\": 266,\n\t\"./fr-ca.js\": 266,\n\t\"./fr-ch\": 267,\n\t\"./fr-ch.js\": 267,\n\t\"./fr.js\": 265,\n\t\"./fy\": 268,\n\t\"./fy.js\": 268,\n\t\"./ga\": 269,\n\t\"./ga.js\": 269,\n\t\"./gd\": 270,\n\t\"./gd.js\": 270,\n\t\"./gl\": 271,\n\t\"./gl.js\": 271,\n\t\"./gom-deva\": 272,\n\t\"./gom-deva.js\": 272,\n\t\"./gom-latn\": 273,\n\t\"./gom-latn.js\": 273,\n\t\"./gu\": 274,\n\t\"./gu.js\": 274,\n\t\"./he\": 275,\n\t\"./he.js\": 275,\n\t\"./hi\": 276,\n\t\"./hi.js\": 276,\n\t\"./hr\": 277,\n\t\"./hr.js\": 277,\n\t\"./hu\": 278,\n\t\"./hu.js\": 278,\n\t\"./hy-am\": 279,\n\t\"./hy-am.js\": 279,\n\t\"./id\": 280,\n\t\"./id.js\": 280,\n\t\"./is\": 281,\n\t\"./is.js\": 281,\n\t\"./it\": 282,\n\t\"./it-ch\": 283,\n\t\"./it-ch.js\": 283,\n\t\"./it.js\": 282,\n\t\"./ja\": 284,\n\t\"./ja.js\": 284,\n\t\"./jv\": 285,\n\t\"./jv.js\": 285,\n\t\"./ka\": 286,\n\t\"./ka.js\": 286,\n\t\"./kk\": 287,\n\t\"./kk.js\": 287,\n\t\"./km\": 288,\n\t\"./km.js\": 288,\n\t\"./kn\": 289,\n\t\"./kn.js\": 289,\n\t\"./ko\": 290,\n\t\"./ko.js\": 290,\n\t\"./ku\": 291,\n\t\"./ku.js\": 291,\n\t\"./ky\": 292,\n\t\"./ky.js\": 292,\n\t\"./lb\": 293,\n\t\"./lb.js\": 293,\n\t\"./lo\": 294,\n\t\"./lo.js\": 294,\n\t\"./lt\": 295,\n\t\"./lt.js\": 295,\n\t\"./lv\": 296,\n\t\"./lv.js\": 296,\n\t\"./me\": 297,\n\t\"./me.js\": 297,\n\t\"./mi\": 298,\n\t\"./mi.js\": 298,\n\t\"./mk\": 299,\n\t\"./mk.js\": 299,\n\t\"./ml\": 300,\n\t\"./ml.js\": 300,\n\t\"./mn\": 301,\n\t\"./mn.js\": 301,\n\t\"./mr\": 302,\n\t\"./mr.js\": 302,\n\t\"./ms\": 303,\n\t\"./ms-my\": 304,\n\t\"./ms-my.js\": 304,\n\t\"./ms.js\": 303,\n\t\"./mt\": 305,\n\t\"./mt.js\": 305,\n\t\"./my\": 306,\n\t\"./my.js\": 306,\n\t\"./nb\": 307,\n\t\"./nb.js\": 307,\n\t\"./ne\": 308,\n\t\"./ne.js\": 308,\n\t\"./nl\": 309,\n\t\"./nl-be\": 310,\n\t\"./nl-be.js\": 310,\n\t\"./nl.js\": 309,\n\t\"./nn\": 311,\n\t\"./nn.js\": 311,\n\t\"./oc-lnc\": 312,\n\t\"./oc-lnc.js\": 312,\n\t\"./pa-in\": 313,\n\t\"./pa-in.js\": 313,\n\t\"./pl\": 314,\n\t\"./pl.js\": 314,\n\t\"./pt\": 315,\n\t\"./pt-br\": 316,\n\t\"./pt-br.js\": 316,\n\t\"./pt.js\": 315,\n\t\"./ro\": 317,\n\t\"./ro.js\": 317,\n\t\"./ru\": 318,\n\t\"./ru.js\": 318,\n\t\"./sd\": 319,\n\t\"./sd.js\": 319,\n\t\"./se\": 320,\n\t\"./se.js\": 320,\n\t\"./si\": 321,\n\t\"./si.js\": 321,\n\t\"./sk\": 322,\n\t\"./sk.js\": 322,\n\t\"./sl\": 323,\n\t\"./sl.js\": 323,\n\t\"./sq\": 324,\n\t\"./sq.js\": 324,\n\t\"./sr\": 325,\n\t\"./sr-cyrl\": 326,\n\t\"./sr-cyrl.js\": 326,\n\t\"./sr.js\": 325,\n\t\"./ss\": 327,\n\t\"./ss.js\": 327,\n\t\"./sv\": 328,\n\t\"./sv.js\": 328,\n\t\"./sw\": 329,\n\t\"./sw.js\": 329,\n\t\"./ta\": 330,\n\t\"./ta.js\": 330,\n\t\"./te\": 331,\n\t\"./te.js\": 331,\n\t\"./tet\": 332,\n\t\"./tet.js\": 332,\n\t\"./tg\": 333,\n\t\"./tg.js\": 333,\n\t\"./th\": 334,\n\t\"./th.js\": 334,\n\t\"./tk\": 335,\n\t\"./tk.js\": 335,\n\t\"./tl-ph\": 336,\n\t\"./tl-ph.js\": 336,\n\t\"./tlh\": 337,\n\t\"./tlh.js\": 337,\n\t\"./tr\": 338,\n\t\"./tr.js\": 338,\n\t\"./tzl\": 339,\n\t\"./tzl.js\": 339,\n\t\"./tzm\": 340,\n\t\"./tzm-latn\": 341,\n\t\"./tzm-latn.js\": 341,\n\t\"./tzm.js\": 340,\n\t\"./ug-cn\": 342,\n\t\"./ug-cn.js\": 342,\n\t\"./uk\": 343,\n\t\"./uk.js\": 343,\n\t\"./ur\": 344,\n\t\"./ur.js\": 344,\n\t\"./uz\": 345,\n\t\"./uz-latn\": 346,\n\t\"./uz-latn.js\": 346,\n\t\"./uz.js\": 345,\n\t\"./vi\": 347,\n\t\"./vi.js\": 347,\n\t\"./x-pseudo\": 348,\n\t\"./x-pseudo.js\": 348,\n\t\"./yo\": 349,\n\t\"./yo.js\": 349,\n\t\"./zh-cn\": 350,\n\t\"./zh-cn.js\": 350,\n\t\"./zh-hk\": 351,\n\t\"./zh-hk.js\": 351,\n\t\"./zh-mo\": 352,\n\t\"./zh-mo.js\": 352,\n\t\"./zh-tw\": 353,\n\t\"./zh-tw.js\": 353\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 439;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Switch as PFSwitch } from '@patternfly/react-core';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  overflow: auto;\n  width: 100%;\n  height: ${props => props.height};\n`;\n\nconst LegendDetail = styled.div`\n  display: flex;\n  padding: 7.5px 15px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  overflow: auto;\n`;\n\nconst Color = styled.div.attrs(props => ({\n    color: props.color || 'black'\n}))`\n  min-width: 12px;\n  height: 12px;\n  background: ${props => props.color};\n  margin-right: 20px;\n`;\n\nconst Title = styled.span`\n  font-size: 15px;\n  display: inline-block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n`;\n\nconst SubTitle = styled.span`\n  font-size: 15px;\n  margin-left: 20px;\n`;\n\nconst Switch = styled(PFSwitch)`\n  margin-left: 20px;\n\n  svg {\n    display: none;\n  }\n`;\n\nconst Legend = ({\n    data,\n    selected,\n    height,\n    onToggle\n}) => {\n    const handleChange = (_isChecked, { target: { value }}) => { onToggle(parseFloat(value)); };\n\n    return (\n        <Container height={ height }>\n            { data.map(\n                ({ name, value, id, count }, index) => (\n                    <LegendDetail key={ index }>\n                        <Wrapper>\n                            <Color color={ value } />\n                            <Title>{ name }</Title>\n                        </Wrapper>\n                        { count && (\n                            <SubTitle>{ count }</SubTitle>\n                        ) }\n                        { selected && (\n                            <Switch\n                                isChecked={ selected.some(selection => selection === id) }\n                                onChange={ handleChange }\n                                aria-label={ name }\n                                value={ id }\n                                key={ index }\n                            />\n                        ) }\n                    </LegendDetail>\n                )) }\n        </Container>\n    );\n};\n\nLegend.propTypes = {\n    data: PropTypes.array,\n    selected: PropTypes.array,\n    onToggle: PropTypes.func,\n    height: PropTypes.string\n};\n\nexport default Legend;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport styled from 'styled-components';\n\nimport initializeChart from '.././BaseChart';\nimport Legend from '../../Utilities/Legend';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nconst formatDate = date => {\n    const pieces = date.split('-');\n    return `${pieces[1]}/${pieces[2]}`;\n};\n\nconst GroupedBarChart = ({\n    onClick = null,\n    TooltipClass,\n    ...props\n}) => {\n    const orgsList = props.data[0].items;\n    const colors = orgsList.map(org => {\n        const name = org.id === -1 ? 'Others' : org.name;\n        return {\n            name,\n            value: props.colorFunc(name),\n            id: org.id\n        };\n    });\n    const [ selectedIds, setSelectedIds ] = useState(\n        orgsList.map(({ id }) => id).slice(0, 8)\n    );\n    let timeout = null;\n\n    const handleToggle = id => {\n        if (selectedIds.includes(id)) {\n            setSelectedIds(selectedIds.filter(el => el !== id));\n        } else {\n            setSelectedIds([ ...selectedIds, id ]);\n        }\n    };\n\n    const draw = () => {\n        // Clear our chart container element first\n        d3.selectAll('#' + props.id + ' > *').remove();\n        let { data: unformattedData, timeFrame } = props;\n        const data = unformattedData.reduce((formatted, { date, items }) => {\n            const selectedOrgs = items.filter(({ id }) => selectedIds.includes(id));\n            return formatted.concat({ date, selectedOrgs });\n        }, []);\n        const width = props.getWidth();\n        const height = props.getHeight();\n        // x scale of entire chart\n        const x0 = d3\n        .scaleBand()\n        .range([ 0, width ])\n        .padding(0.35);\n        // x scale of individual grouped bars\n        const x1 = d3.scaleBand();\n        const y = d3.scaleLinear().range([ height, 0 ]);\n        // format our X Axis ticks\n        const maxTicks = Math.round(data.length / (timeFrame / 2));\n        let ticks = data.map(d => d.date);\n        if (timeFrame === 31) {\n            ticks = data\n            .map((d, i) => (i % maxTicks === 0 ? d.date : undefined))\n            .filter(item => item);\n        }\n\n        const xAxis = d3\n        .axisBottom(x0)\n        .tickValues(ticks)\n        .tickFormat(formatDate);\n\n        const yAxis = d3\n        .axisLeft(y)\n        .ticks(8)\n        .tickSize(-width, 0, 0);\n\n        const svg = d3\n        .select('#' + props.id)\n        .append('svg')\n        .attr('width', width + props.margin.left + props.margin.right)\n        .attr('height', height + props.margin.bottom + props.margin.top)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          props.margin.left +\n          ',' +\n          props.margin.top +\n          ')'\n        );\n\n        const dates = data.map(d => d.date);\n        const selectedOrgNames = data[0].selectedOrgs.map(d => d.name);\n        const tooltip = new TooltipClass({\n            svg: '#' + props.id\n        });\n        x0.domain(dates);\n        x1.domain(selectedOrgNames).range([ 0, x0.bandwidth() ]); // unsorted\n        y.domain([\n            0,\n            d3.max(data, date => d3.max(date.selectedOrgs, d => d.value * 1.15)) || 8\n        ]);\n\n        // add y axis\n        svg\n        .append('g')\n        .attr('class', 'y axis')\n        .call(yAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7')\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 6)\n        .attr('dy', '.71em')\n        .style('text-anchor', 'end')\n        .style('font-weight', 'bold')\n        .text('Value');\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text(props.yLabel);\n\n        // add x axis\n        svg\n        .append('g')\n        .attr('class', 'x axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(xAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' + width / 2 + ' ,' + (height + props.margin.top + 25) + ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n        // add the groups\n        let slice = svg.selectAll('.slice').data(data);\n        slice.exit().remove();\n\n        const enter = slice\n        .enter()\n        .append('g')\n        .attr('class', 'g foo')\n        .attr('transform', d => 'translate(' + x0(d.date) + ',0)');\n        slice = slice.merge(enter);\n        // add the individual bars\n        let bars = slice.selectAll('rect').data(function(d) {\n            return d.selectedOrgs;\n        });\n        bars.exit().remove();\n\n        const color = props.colorFunc;\n        const subEnter = bars\n        .enter()\n        .append('rect')\n        .attr('width', x1.bandwidth())\n        .attr('x', function(d) {\n            return x1(d.name);\n        }) // unsorted\n        .style('fill', function(d) {\n            return color(d.name);\n        })\n        .attr('y', function(d) {\n            return y(d.value);\n        })\n        .attr('height', function(d) {\n            return height - y(d.value);\n        })\n        .on('mouseover', function(d) {\n            d3.select(this).style('cursor', onClick ? 'pointer' : 'default');\n            d3.select(this).style('fill', d3.rgb(color(d.name)).darker(1));\n            tooltip.handleMouseOver();\n        })\n        .on('mousemove', tooltip.handleMouseOver)\n        .on('mouseout', function(d) {\n            d3.select(this).style('fill', color(d.name));\n            tooltip.handleMouseOut();\n        })\n        .on('click', onClick);\n        bars = bars.merge(subEnter);\n    };\n\n    const init = () => {\n        draw();\n    };\n\n    const resize = () => {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => { draw(); }, 500);\n    };\n\n    useEffect(() => {\n        init();\n        window.addEventListener('resize', resize);\n\n        return () => {\n            clearTimeout(timeout);\n            window.removeEventListener('resize', resize);\n        };\n    }, []);\n\n    useEffect(() => { draw(); }, [ props.data, selectedIds ]);\n\n    return (\n        <Wrapper>\n            <div id={ props.id } />\n            { colors.length > 0 && (\n                <Legend\n                    id={ `${props.id}-legend` }\n                    data={ colors }\n                    selected={ selectedIds }\n                    onToggle={ handleToggle }\n                    height=\"350px\"\n                />\n            ) }\n        </Wrapper>\n    );\n};\n\nGroupedBarChart.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    timeFrame: PropTypes.number,\n    colorFunc: PropTypes.func,\n    yLabel: PropTypes.string,\n    onClick: PropTypes.func,\n    TooltipClass: PropTypes.any.isRequired\n};\n\nexport default initializeChart(GroupedBarChart);\n","import * as d3 from 'd3';\n\nconst formatDate = date => {\n    const pieces = date.split('-');\n    return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class OrgsTooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        this.draw();\n    }\n\n    draw() {\n        this.width = 125;\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 125;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', 68)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.date = this.toolTipBase\n        .append('text')\n        .attr('x', 20)\n        .attr('y', 14)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Date');\n        this.jobs = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 72)\n        .attr('y', 14)\n        .text('0 Jobs');\n        this.orgName = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', -1)\n        .attr('font-size', 12)\n        .text('Org');\n        this.clickMore = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 20)\n        .attr('y', 30)\n        .attr('font-size', 12)\n        .text('Click for details');\n    }\n\n  handleMouseOver = d => {\n      let date;\n      let orgName;\n      let jobs;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      if (!d) {\n          return;\n      } else {\n          const maxLength = 16;\n          date = d.date;\n          orgName = d.name;\n          jobs = d.value;\n          if (d.name.length > maxLength) {\n              orgName = d.name.slice(0, maxLength).concat('...');\n          }\n      }\n\n      const formatTooltipDate = formatDate;\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n\n      this.date.text('' + formatTooltipDate(date));\n      this.orgName.text('' + orgName);\n      this.jobs.text('' + jobs + ' Jobs');\n      this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n      const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n      const threshold = 45;\n      const overage = maxTextPerc / threshold;\n      let adjustedWidth;\n      if (maxTextPerc > threshold) {\n          adjustedWidth = this.boxWidth * overage;\n      } else {\n          adjustedWidth = this.boxWidth;\n      }\n\n      this.boundingBox.attr('width', adjustedWidth);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n          this.boundingBox.attr('x', -adjustedWidth - 20);\n          this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n          this.orgName.attr('x', -adjustedWidth - 7);\n          this.clickMore.attr('x', -adjustedWidth - 7);\n          this.date.attr('x', -adjustedWidth - 7);\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n          this.boundingBox.attr('x', 10);\n          this.orgName.attr('x', 20);\n          this.clickMore.attr('x', 20);\n          this.jobs.attr('x', adjustedWidth / 2);\n          this.date.attr('x', 20);\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import * as d3 from 'd3';\n\nconst formatDate = date => {\n    const pieces = date.split('-');\n    return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class HostsTooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        this.draw();\n    }\n\n    draw() {\n        this.width = 125;\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 125;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', 68)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.date = this.toolTipBase\n        .append('text')\n        .attr('x', 20)\n        .attr('y', 14)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Date');\n        this.jobs = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 72)\n        .attr('y', 14)\n        .text('0 Jobs');\n        this.orgName = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', -1)\n        .attr('font-size', 12)\n        .text('Org');\n        this.clickMore = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 20)\n        .attr('y', 30)\n        .attr('font-size', 12)\n        .text('Click for details');\n    }\n\n  handleMouseOver = d => {\n      let date;\n      let orgName;\n      let jobs;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      if (!d) {\n          return;\n      } else {\n          const maxLength = 16;\n          date = d.date;\n          orgName = d.name;\n          jobs = d.value;\n          if (d.name.length > maxLength) {\n              orgName = d.name.slice(0, maxLength).concat('...');\n          }\n      }\n\n      const formatTooltipDate = formatDate;\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n\n      this.date.text('' + formatTooltipDate(date));\n      this.orgName.text('' + orgName);\n      this.jobs.text('' + jobs + ' Hosts');\n      this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n      const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n      const threshold = 45;\n      const overage = maxTextPerc / threshold;\n      let adjustedWidth;\n      if (maxTextPerc > threshold) {\n          adjustedWidth = this.boxWidth * overage;\n      } else {\n          adjustedWidth = this.boxWidth;\n      }\n\n      this.boundingBox.attr('width', adjustedWidth);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n          this.boundingBox.attr('x', -adjustedWidth - 20);\n          this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n          this.orgName.attr('x', -adjustedWidth - 7);\n          this.clickMore.attr('x', -adjustedWidth - 7);\n          this.date.attr('x', -adjustedWidth - 7);\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n          this.boundingBox.attr('x', 10);\n          this.orgName.attr('x', 20);\n          this.clickMore.attr('x', 20);\n          this.jobs.attr('x', adjustedWidth / 2);\n          this.date.attr('x', 20);\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport { getTotal } from '../Utilities/helpers';\nimport Legend from '../Utilities/Legend';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        // defer drawing until we know the data shape\n        this.drawn = false;\n        // show the success rate or not\n        this.showSuccess = false;\n    }\n\n    draw(d) {\n    // chart1 has success rate data and chart2 does not ...\n        this.showSuccess = d && d.data && 'success_rate' in d.data ? true : false;\n        const boundingHeight = this.showSuccess ? 70 : 52;\n        const boundingWidth = this.showSuccess ? 120 : 108;\n\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBOx = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', boundingHeight)\n        .attr('width', boundingWidth)\n        .attr('fill', '#393f44');\n        this.orgName = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 0)\n        .text('Organization');\n        this.percentageTotal = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 16)\n        .text('0');\n        this.percentageSuccess = null;\n        if (this.showSuccess) {\n            this.percentageSuccess = this.toolTipBase\n            .append('text')\n            .attr('fill', 'white')\n            .attr('font-size', 12)\n            .attr('font-weight', 800)\n            .attr('x', 20)\n            .attr('y', 30)\n            .text('');\n        }\n    }\n\n  handleMouseOver = d => {\n      // treat draw() as a singleton to avoid a painted window effect\n      if (this.drawn !== true) {\n          this.draw(d);\n          this.drawn = true;\n      }\n\n      let perc;\n      let percSuccess;\n      let orgName;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      if (!d) {\n          return;\n      }\n\n      if (d && d.data) {\n          const maxLength = 16;\n          perc = d.data.percent;\n          percSuccess = d.data.success_rate;\n          orgName = d.data.name;\n          if (d.data.name.length > maxLength) {\n              orgName = d.data.name.slice(0, maxLength - 3).concat('...');\n          }\n      }\n\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n\n      this.percentageTotal.text('' + perc + '%');\n      if (percSuccess && this.percentageSuccess) {\n          this.percentageSuccess.text('(' + percSuccess + '% successful)');\n      }\n\n      this.orgName.text(' ' + orgName);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, -10) rotate(45)');\n          this.boundingBOx.attr('x', -125);\n          this.orgName.attr('x', -112);\n          this.percentageTotal.attr('x', -112);\n          if (this.showSuccess) {\n              this.percentageSuccess.attr('x', -112);\n          }\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, -10) rotate(45)');\n          this.boundingBOx.attr('x', 10);\n          this.orgName.attr('x', 20);\n          this.percentageTotal.attr('x', 20);\n          if (this.showSuccess) {\n              this.percentageSuccess.attr('x', 20);\n          }\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nconst PieChart = ({\n    data,\n    id,\n    colorFunc: color,\n    margin,\n    getWidth,\n    getHeight\n}) => {\n    const colors = data.map(org => {\n        const name = org.id === -1 ? 'Others' : org.name;\n        return {\n            id: org.id,\n            name,\n            value: color(name),\n            count: Math.round(org.count)\n        };\n    }).sort((a, b) => (a.count > b.count) ? 1 : ((b.count > a.count) ? -1 : 0));\n\n    const [ selectedIds, setSelectedIds ] = useState(\n        data.map(({ id }) => id).slice(0, 8));\n\n    let timeout = null;\n\n    const handleToggle = id => {\n        if (selectedIds.includes(id)) {\n            setSelectedIds(selectedIds.filter(el => el !== id));\n        } else {\n            setSelectedIds([ ...selectedIds, id ]);\n        }\n    };\n\n    const draw = () => {\n        d3.selectAll('#' + id + ' > *').remove();\n        const width = getWidth();\n        const height = getHeight();\n        const svg = d3\n        .select('#' + id)\n        .append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.bottom)\n        .append('g');\n\n        svg.append('g').attr('class', 'slices');\n        svg.append('g').attr('class', 'labels');\n        svg.append('g').attr('class', 'lines');\n        const radius = Math.min(width, height) / 2;\n        const filteredData = data.filter(({ id }) => selectedIds.includes(id));\n        const total = getTotal(filteredData);\n        filteredData.forEach(function(d) {\n            d.count = +d.count;\n            d.percent = +Math.round((d.count / total) * 100);\n        });\n        const donutTooltip = new Tooltip({\n            svg: '#' + id\n        });\n        const pie = d3\n        .pie()\n        .sort(null)\n        .value(d => d.count);\n        const arc = d3\n        .arc()\n        .outerRadius(radius - 10) // controls top positioning of chart\n        .innerRadius(0);\n\n        svg.attr(\n            'transform',\n            'translate(' +\n        (width + margin.left + margin.right) / 2 +\n        ',' +\n        (height + margin.top + margin.bottom) / 2 +\n        ')'\n        );\n\n        svg\n        .selectAll('path')\n        .data(pie(filteredData))\n        .enter()\n        .append('path')\n        .attr('d', arc)\n        .attr('fill', d => color(d.data.name));\n\n        svg\n        .selectAll('path')\n        .on('mouseover', function(d) {\n            d3.select(this).style('fill', d3.rgb(color(d.data.name)).darker(1));\n            donutTooltip.handleMouseOver(d);\n        })\n        .on('mouseout', function(d) {\n            d3.select(this).style('fill', color(d.data.name));\n            donutTooltip.handleMouseOut();\n        })\n        .on('mousemove', donutTooltip.handleMouseOver);\n\n        svg.append('g').classed('labels', true);\n        svg.append('g').classed('lines', true);\n    };\n\n    const init = () => {\n        draw();\n    };\n\n    const resize = () => {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => { draw(); }, 500);\n    };\n\n    useEffect(() => {\n        init();\n        window.addEventListener('resize', resize);\n\n        return () => {\n            clearTimeout(timeout);\n            window.removeEventListener('resize', resize);\n        };\n    }, []);\n\n    useEffect(() => { draw(); }, [ data, selectedIds ]);\n\n    return (\n        <Wrapper>\n            <div id={ id } />\n            { colors.length > 0 && (\n                <Legend\n                    id={ `${id}-legend` }\n                    data={ colors }\n                    selected={ selectedIds }\n                    onToggle={ handleToggle }\n                    height=\"300px\"\n                />\n            ) }\n        </Wrapper>\n    );\n};\n\nPieChart.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    timeFrame: PropTypes.number,\n    colorFunc: PropTypes.func\n};\n\nexport default initializeChart(PieChart);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { formatDate as dateForJobExplorer } from '../../Utilities/helpers';\n\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport {\n    preflightRequest,\n    readJobExplorer,\n    readHostExplorer,\n    readOrgOptions\n} from '../../Api';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle,\n    Tabs,\n    Tab\n} from '@patternfly/react-core';\n\nimport {\n    GroupedBarChart,\n    OrgsTooltip,\n    HostsTooltip\n} from '../../Charts/GroupedBarChart/';\nimport PieChart from '../../Charts/PieChart';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport { organizationStatistics as constants } from '../../Utilities/constants';\n\n// For chart colors\nimport { pfmulti } from '../../Utilities/colors';\nimport { scaleOrdinal } from 'd3';\n\nconst CardTitle = styled(PFCardTitle)`\n  border-bottom: 2px solid #ebebeb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &&& {\n    min-height: 60px;\n    --pf-c-card--first-child--PaddingTop: 10px;\n    --pf-c-card__header--not-last-child--PaddingBottom: 10px;\n\n    h3 {\n      font-size: 0.875em;\n    }\n  }\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  overflow: hidden;\n\n  .pf-c-card {\n    width: 50%;\n    margin-top: 20px;\n    overflow: auto;\n  }\n\n  .pf-c-card:first-of-type {\n    margin-right: 20px;\n  }\n`;\n\nconst TopCard = styled(Card)`\n  min-height: 500px;\n`;\n\nconst colorFunc = scaleOrdinal(pfmulti);\n\nconst optionsMapper = options => {\n    const { inventory_id, ...rest } = options;\n    return { ...rest };\n};\n\nconst orgsChartMapper = attrName => ({ dates: data = []}) =>\n    data.map(({ date, items }) => ({\n        date,\n        items: items.map(({ id, [attrName]: value, name }) => ({\n            id,\n            date,\n            value,\n            name: id === -1 ? 'Others' : (name || 'No organization')\n        }))\n    }));\n\nconst pieChartMapper = attrName => ({ items = []}) =>\n    items.map(({ id, [attrName]: count, name }) => ({\n        id,\n        count,\n        name: id === -1 ? 'Others' : name || 'No organization'\n    }));\n\nconst redirectToJobExplorer = (toJobExplorer, queryParams) => ({ date, id }) => {\n    if (id === -1) {\n        // disable clicking on \"others\" block\n        return;\n    }\n\n    const { sort_by, ...rest } = queryParams;\n    const formattedDate = dateForJobExplorer(date);\n    const initialQueryParams = {\n        ...rest,\n        quick_date_range: 'custom',\n        start_date: formattedDate,\n        end_date: formattedDate,\n        status: [\n            'successful',\n            'failed',\n            'new',\n            'pending',\n            'waiting',\n            'error',\n            'canceled',\n            'running'\n        ],\n        org_id: [ id ]\n    };\n\n    toJobExplorer(initialQueryParams);\n};\n\nconst chartMapper = [\n    {\n        api: readJobExplorer,\n        attr: 'total_count',\n        label: 'Jobs across organizations',\n        onClick: redirectToJobExplorer,\n        tooltip: OrgsTooltip\n    },\n    {\n        api: readHostExplorer,\n        attr: 'total_unique_host_count',\n        label: 'Hosts across organizations',\n        onClick: () => null,\n        tooltip: HostsTooltip\n    }\n];\n\nconst OrganizationStatistics = ({ history }) => {\n    const toJobExplorer = useRedirect(history, 'jobExplorer');\n    const [ preflight, setPreflight ] = useApi(null);\n    const [ activeTabKey, setActiveTabKey ] = useState(0);\n    const [ orgs, setOrgs ] = useApi([], orgsChartMapper(chartMapper[activeTabKey].attr));\n    const [ jobs, setJobs ] = useApi([], pieChartMapper('host_count'));\n    const [ tasks, setTasks ] = useApi([], pieChartMapper('host_task_count'));\n    const [ options, setOptions ] = useApi({}, optionsMapper);\n    const { queryParams, setFromToolbar } = useQueryParams(\n        constants.defaultParams\n    );\n\n    const jobEventsByOrgParams = {\n        ...queryParams,\n        group_by: 'org',\n        include_others: true,\n        granularity: 'daily',\n        attributes: [ 'host_task_count' ],\n        sort_by: `host_task_count:desc`\n    };\n\n    const jobRunsByOrgParams = {\n        ...queryParams,\n        group_by: 'org',\n        include_others: true,\n        attributes: [ 'host_count' ],\n        sort_by: `total_count:desc`\n    };\n\n    const jobsByDateAndOrgParams = {\n        ...queryParams,\n        attributes: [ 'total_count' ],\n        group_by_time: true,\n        group_by: 'org',\n        sort_by: `total_count:desc`\n    };\n\n    const hostAcrossOrgParams = {\n        ...queryParams,\n        attributes: [ 'total_unique_host_count' ],\n        group_by_time: true,\n        group_by: 'org',\n        sort_by: `host_task_count:desc`\n    };\n\n    const handleTabClick = (_, tabIndex) => { setActiveTabKey(tabIndex); };\n\n    useEffect(() => {\n        insights.chrome.appNavClick({\n            id: 'organization-statistics',\n            secondaryNav: true\n        });\n        setPreflight(preflightRequest());\n        setOptions(readOrgOptions({ params: queryParams }));\n    }, []);\n\n    useEffect(() => {\n        const { api: readJobsOrHosts } = chartMapper[activeTabKey];\n        const params = activeTabKey === 0 ? jobsByDateAndOrgParams : hostAcrossOrgParams;\n        setOrgs(readJobsOrHosts({ params }));\n    }, [ queryParams, activeTabKey ]);\n\n    useEffect(() => {\n        setJobs(readJobExplorer({ params: jobRunsByOrgParams }));\n        setTasks(readJobExplorer({ params: jobEventsByOrgParams }));\n    }, [ queryParams ]);\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={'Organization Statistics'} />\n                <FilterableToolbar\n                    categories={options.data}\n                    filters={queryParams}\n                    setFilters={setFromToolbar}\n                />\n            </PageHeader>\n            {preflight.error && (\n                <Main>\n                    <EmptyState preflightError={preflight.error} />\n                </Main>\n            )}\n            {preflight.isSuccess && (\n                <React.Fragment>\n                    <Main>\n                        <TopCard>\n                            <Tabs activeKey={ activeTabKey } onSelect={ handleTabClick }>\n                                <Tab eventKey={ 0 } title={ 'Jobs' }/>\n                                <Tab eventKey={ 1 } title={ 'Hosts' }/>\n                            </Tabs>\n                            <CardBody>\n                                {orgs.isLoading && <LoadingState />}\n                                {orgs.error && <ApiErrorState message={orgs.error.error} />}\n                                {orgs.isSuccess && orgs.data.length <= 0 && <NoData />}\n                                {orgs.isSuccess && orgs.data.length > 0 && (\n                                    <GroupedBarChart\n                                        margin={{ top: 20, right: 20, bottom: 50, left: 50 }}\n                                        id=\"d3-grouped-bar-chart-root\"\n                                        data={ orgs.data }\n                                        history={ history }\n                                        timeFrame={ orgs.data .length }\n                                        colorFunc={ colorFunc }\n                                        yLabel={ chartMapper[activeTabKey].label }\n                                        onClick={ chartMapper[activeTabKey].onClick(toJobExplorer, queryParams) }\n                                        TooltipClass={ chartMapper[activeTabKey].tooltip }\n                                    />\n                                )}\n                            </CardBody>\n                        </TopCard>\n                        <CardContainer>\n                            <Card>\n                                <CardBody style={{ padding: 0 }}>\n                                    <CardTitle style={{ padding: 0 }}>\n                                        <h2 style={{ marginLeft: '20px' }}>\n                                            Job Runs by Organization\n                                        </h2>\n                                    </CardTitle>\n                                    {jobs.isLoading && <LoadingState />}\n                                    {jobs.error && <ApiErrorState message={jobs.error.error} />}\n                                    {jobs.isSuccess && jobs.data.length <= 0 && <NoData />}\n                                    {jobs.isSuccess && jobs.data.length > 0 && (\n                                        <PieChart\n                                            margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                                            id=\"d3-donut-1-chart-root\"\n                                            data={jobs.data}\n                                            timeFrame={jobs.data.length}\n                                            colorFunc={colorFunc}\n                                        />\n                                    )}\n                                </CardBody>\n                            </Card>\n                            <Card>\n                                <CardBody style={{ padding: 0 }}>\n                                    <CardTitle style={{ padding: 0 }}>\n                                        <h2 style={{ marginLeft: '20px' }}>\n                                            Usage by Organization (Tasks)\n                                        </h2>\n                                    </CardTitle>\n                                    {tasks.isLoading && <LoadingState />}\n                                    {tasks.error && <ApiErrorState message={tasks.error.error} />}\n                                    {tasks.isSuccess && tasks.data.length <= 0 && <NoData />}\n                                    {tasks.isSuccess && tasks.data.length > 0 && (\n                                        <PieChart\n                                            margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                                            id=\"d3-donut-2-chart-root\"\n                                            data={tasks.data}\n                                            timeFrame={tasks.data.length}\n                                            colorFunc={colorFunc}\n                                        />\n                                    )}\n                                </CardBody>\n                            </Card>\n                        </CardContainer>\n                    </Main>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n};\n\nOrganizationStatistics.propTypes = {\n    history: PropTypes.object\n};\n\nexport default OrganizationStatistics;\n","var pfmulti = [\n    '#06C',\n    '#4CB140',\n    '#009596',\n    '#5752D1',\n    '#F4C145',\n    '#EC7A08',\n    '#8BC1F7',\n    '#23511E',\n    '#A2D9D9',\n    '#2A265F',\n    '#F9E0A2',\n    '#8F4700',\n    '#002F5D'\n];\nexport { pfmulti };\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        this.draw();\n    }\n\n    formatDollars(amount) {\n        return parseFloat(amount)\n        .toFixed(2)\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    }\n\n    draw() {\n        this.width = 125;\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip-base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 125;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, 0) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', 92)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.name = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', -2)\n        .text('Template name');\n        this.savings = this.toolTipBase\n        .append('text')\n        .attr('x', 20)\n        .attr('y', 52)\n        .attr('font-size', 12)\n        .attr('font-weight', 'bold')\n        .attr('fill', 'white')\n        .text('Total savings $0');\n        this.manualCost = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', 16)\n        .text('Manual cost $0');\n        this.automationCost = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', 34)\n        .text('Automation cost $0');\n    }\n\n  handleMouseOver = d => {\n      let name;\n      let savings;\n      let manualCost;\n      let automationCost;\n      const scrollLeftOffset = d3.select('#d3-roi-chart-root').node().scrollLeft;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10 +\n      scrollLeftOffset;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      30;\n      if (!d) {\n          return;\n      } else {\n          savings = this.formatDollars(d.delta);\n          name = d.name;\n          manualCost = this.formatDollars(d.manualCost);\n          automationCost = this.formatDollars(d.automatedCost);\n      }\n\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n      this.name.text('' + name);\n      this.savings.text('Total savings $' + savings);\n      this.manualCost.text('Manual Cost $' + manualCost);\n      this.automationCost.text('Automation Cost $' + automationCost);\n      this.nameWidth = this.name.node().getComputedTextLength();\n      this.savingsWidth = this.savings.node().getComputedTextLength();\n      this.manualCostWidth = this.manualCost.node().getComputedTextLength();\n      this.automationCostWidth = this.automationCost\n      .node()\n      .getComputedTextLength();\n      this.widestTextElem = d3.max([\n          this.nameWidth,\n          this.savingsWidth,\n          this.automationCostWidth,\n          this.manualCostWidth\n      ]);\n\n      const maxTextPerc = (this.widestTextElem / this.boxWidth) * 100;\n      const threshold = 85;\n      const overage = maxTextPerc / threshold;\n      let adjustedWidth;\n      if (maxTextPerc > threshold) {\n          adjustedWidth = this.boxWidth * overage;\n      } else {\n          adjustedWidth = this.boxWidth;\n      }\n\n      this.boundingBox.attr('width', adjustedWidth);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, 15) rotate(45)');\n          this.boundingBox.attr('x', -adjustedWidth - 20);\n          this.name.attr('x', -(toolTipWidth - 7));\n          this.savings.attr('x', -(toolTipWidth - 7));\n          this.manualCost.attr('x', -(toolTipWidth - 7));\n          this.automationCost.attr('x', -(toolTipWidth - 7));\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, 15) rotate(45)');\n          this.boundingBox.attr('x', 10);\n          this.name.attr('x', 20);\n          this.savings.attr('x', 20);\n          this.manualCost.attr('x', 20);\n          this.automationCost.attr('x', 20);\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass TopTemplatesSavings extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.state = {\n            timeout: null\n        };\n    }\n\n    // Methods\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => {\n                this.init();\n            }, 500)\n        });\n    }\n\n    init() {\n        this.draw();\n    }\n\n    draw() {\n    // Use PF chart color\n        const color = '#0066CC'; //blue\n        // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const { data } = this.props;\n        let width;\n        // adjust chart width to support larger datasets\n        if (data.length >= 15) {\n            const containerWidth = d3.select('.automation-wrapper').node();\n            width =\n        containerWidth.getBoundingClientRect().width -\n        this.props.margin.left -\n        this.props.margin.right;\n        } else {\n            width = this.props.getWidth();\n        }\n\n        const height = this.props.getHeight();\n        const x = d3\n        .scaleBand()\n        .rangeRound([ 0, width ])\n        .padding(0.45);\n        const y = d3.scaleLinear().range([ height, 0 ]);\n        // format our X Axis ticks\n        let ticks;\n        ticks = data.map(d => d.name);\n        const formatYAxisValue = d3.format('.2s');\n        const xAxis = d3.axisBottom(x).tickValues(ticks);\n\n        const yAxis = d3\n        .axisLeft(y)\n        .ticks(8)\n        .tickFormat(d => formatYAxisValue(d).replace('G', 'B'))\n        .tickSize(-width, 0, 0);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n\n        const taskNames = data.map(d => d.name);\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id\n        });\n        x.domain(taskNames);\n        y.domain([ 0, d3.max(data, d => d.delta * 1.15) || 8 ]);\n\n        // add y axis\n        svg\n        .append('g')\n        .attr('class', 'y axis')\n        .call(yAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7')\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 6)\n        .attr('dy', '.71em')\n        .style('text-anchor', 'end')\n        .style('font-weight', 'bold')\n        .text('Value');\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Savings per template ($)');\n\n        // add x axis\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(xAxis)\n        .selectAll('text')\n        .style('text-anchor', 'start')\n        .attr('dx', '0.75em')\n        .attr('dy', -x.bandwidth() / 1.45 - 8)\n        .attr('transform', 'rotate(-90)');\n\n        svg.selectAll('.x-axis line').attr('stroke', 'transparent');\n\n        svg\n        .selectAll('.bar')\n        .data(data)\n        .enter()\n        .append('rect')\n        .attr('x', d => x(d.name))\n        .attr('width', x.bandwidth())\n        .attr('y', d => y(d.delta))\n        .style('fill', () => color)\n        .attr('height', d => height - y(d.delta))\n        .on('mouseover', function(d) {\n            d3.select(this).style('fill', d3.rgb(color).darker(1));\n            tooltip.handleMouseOver(d);\n        })\n        .on('mousemove', tooltip.handleMouseOver)\n        .on('mouseout', function() {\n            d3.select(this).style('fill', color);\n            tooltip.handleMouseOut();\n        });\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate() {\n        this.init();\n    }\n\n    render() {\n        return <div id={this.props.id} />;\n    }\n}\n\nTopTemplatesSavings.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func\n};\n\nexport default initializeChart(TopTemplatesSavings);\n","import styled from 'styled-components';\nimport { CardTitle } from '@patternfly/react-core';\n\nexport const BorderedCardTitle = styled(CardTitle)`\n  border-bottom: 1px solid #d7d7d7;\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle, Title } from '@patternfly/react-core';\n\nconst floatToStringWithCommas = total =>\n    total\n    .toFixed(2)\n    .toString()\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\nconst TotalSavings = ({ totalSavings = 0 }) => (\n    <Card style={{ borderTop: '3px solid #2B9AF3' }}>\n        <CardTitle style={{ paddingBottom: '0' }}>Total savings</CardTitle>\n        <CardBody>\n            <Title\n                headingLevel=\"h3\"\n                size=\"4xl\"\n                style={{ color: 'var(--pf-global--success-color--200)' }}\n            >\n                {floatToStringWithCommas(totalSavings)}\n            </Title>\n        </CardBody>\n    </Card>\n);\n\nTotalSavings.propTypes = {\n    totalSavings: PropTypes.number\n};\n\nexport default TotalSavings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    Card,\n    CardBody,\n    InputGroup,\n    InputGroupText,\n    TextInput\n} from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst validFloat = value => {\n    const floatValue = parseFloat(value);\n    return floatValue && floatValue >= 0 ? value : '';\n};\n\nconst CalculationCost = ({\n    costManual = '0',\n    setCostManual = () => {},\n    costAutomation = '0',\n    setCostAutomation = () => {}\n}) => (\n    <Card>\n        <CardTitle>Calculate your automation</CardTitle>\n        <CardBody>\n            <InputAndText>\n                <p>Manual cost of automation</p>\n                <em style={{ color: 'var(--pf-global--Color--dark-200)' }}>\n          (e.g. average salary of mid-level Software Engineer)\n                </em>\n                <InputGroup style={{ width: '50%' }}>\n                    <InputGroupText>\n                        <DollarSignIcon />\n                    </InputGroupText>\n                    <TextInput\n                        id=\"manual-cost\"\n                        type=\"number\"\n                        aria-label=\"manual-cost\"\n                        value={costManual}\n                        onChange={e => setCostManual(validFloat(e))}\n                    />\n                    <InputGroupText>/hr</InputGroupText>\n                </InputGroup>\n            </InputAndText>\n            <InputAndText style={{ paddingTop: '10px' }}>\n                <p>Automated process cost</p>\n                <InputGroup style={{ width: '50%' }}>\n                    <InputGroupText>\n                        <DollarSignIcon />\n                    </InputGroupText>\n                    <TextInput\n                        id=\"automation-cost\"\n                        type=\"number\"\n                        aria-label=\"automation-cost\"\n                        value={costAutomation}\n                        onChange={e => setCostAutomation(validFloat(e))}\n                    />\n                    <InputGroupText>/hr</InputGroupText>\n                </InputGroup>\n            </InputAndText>\n        </CardBody>\n    </Card>\n);\n\nCalculationCost.propTypes = {\n    costManual: PropTypes.string,\n    setCostManual: PropTypes.func,\n    costAutomation: PropTypes.string,\n    setCostAutomation: PropTypes.func\n};\n\nexport default CalculationCost;\n","import React from 'react';\n\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst AutomationFormula = () => (\n    <Card style={{ height: '100%' }}>\n        <CardTitle>Automation formula</CardTitle>\n        <CardBody>\n            <p>\n                <b>Manual cost for template x</b> =\n                <em>\n          (time for a manual run on one host in hours * (sum of all hosts across\n          all job runs) ) * cost per hour\n                </em>\n            </p>\n            <p>\n                <b>Automation cost for template x</b> =\n                <em>\n          cost of automation per hour * sum of total elapsed hours for a\n          template\n                </em>\n            </p>\n            <p>\n                <b>Savings</b> =\n                <em>Sum of (manual cost - automation cost) across all templates</em>\n            </p>\n        </CardBody>\n    </Card>\n);\n\nexport default AutomationFormula;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    Button,\n    Card,\n    CardBody,\n    InputGroup,\n    InputGroupText,\n    TextInput,\n    Tooltip,\n    Popover\n} from '@patternfly/react-core';\nimport {\n    InfoCircleIcon,\n    ToggleOnIcon,\n    ToggleOffIcon\n} from '@patternfly/react-icons';\n\nimport {\n    convertSecondsToMins,\n    convertMinsToSeconds,\n    capitalize\n} from '../../Utilities/helpers';\n\nconst TemplateDetail = styled.div`\n  em {\n    display: block;\n    padding: 5px 0;\n  }\n\n  @media (max-width: 1490px) {\n    display: block;\n\n    em {\n      padding: 10px 0;\n      display: block;\n    }\n  }\n`;\n\nconst TemplateDetailSubTitle = styled.em`\n  color: var(--pf-global--Color--dark-200);\n`;\n\nconst TooltipWrapper = styled.div`\n  p {\n    text-align: left;\n  }\n`;\n\nconst IconGroup = styled.div`\n  & svg {\n    fill: var(--pf-global--Color--dark-200);\n\n    :hover {\n      cursor: pointer;\n    }\n\n    :first-of-type {\n      margin-right: 10px;\n      margin-left: 10px;\n\n      @media (max-width: 1350px) {\n        margin-left: 0;\n      }\n    }\n  }\n`;\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst showSortAttr = (details, sortBy) => {\n    const trimmed = sortBy.split(':')[0];\n    const sortAttribute = Object.keys(details).map(k =>\n        k === trimmed ? `${details[k]}` : null\n    );\n\n    return (\n        <TemplateDetailSubTitle>\n            {capitalize(trimmed.split('_').join(' '))}: {sortAttribute}\n        </TemplateDetailSubTitle>\n    );\n};\n\nconst QuestionIconTooltip = ({ details }) => (\n    <Popover\n        aria-label=\"template detail popover\"\n        position=\"left\"\n        bodyContent={\n            <TooltipWrapper>\n                {Object.keys(details).map((k, i) => (\n                    <p key={i}>\n                        <b>{capitalize(k.split('_').join(' '))}</b>: {details[k]}\n                    </p>\n                ))}\n            </TooltipWrapper>\n        }\n    >\n        <InfoCircleIcon />\n    </Popover>\n);\n\nQuestionIconTooltip.propTypes = {\n    details: PropTypes.object\n};\n\nconst TopTemplates = ({\n    data = [],\n    sortBy = '',\n    setDataRunTime = () => {},\n    setEnabled = () => {},\n    redirectToJobExplorer = () => {}\n}) => (\n    <Card style={{ overflow: 'auto', flex: '1 1 0' }} className=\"top-templates\">\n        <CardBody>\n            <p>Enter the time it takes to run the following templates manually.</p>\n            {data.map(d => (\n                <div key={d.id}>\n                    <Tooltip content={'List of jobs for this template for past 30 days'}>\n                        <Button\n                            style={{ padding: '15px 0 10px' }}\n                            component=\"a\"\n                            onClick={() => redirectToJobExplorer(d.id)}\n                            variant=\"link\"\n                        >\n                            {d.name}\n                        </Button>\n                    </Tooltip>\n                    <TemplateDetail>\n                        <InputAndText key={d.id}>\n                            <InputGroup>\n                                <TextInput\n                                    id={d.id}\n                                    type=\"number\"\n                                    aria-label=\"time run manually\"\n                                    value={convertSecondsToMins(d.avgRunTime)}\n                                    onChange={minutes =>\n                                        setDataRunTime(convertMinsToSeconds(minutes), d.id)\n                                    }\n                                />\n                                <InputGroupText>min</InputGroupText>\n                            </InputGroup>\n                        </InputAndText>\n                        <TemplateDetailSubTitle>\n                            x {d.successful_hosts_total} host runs\n                        </TemplateDetailSubTitle>\n                        {showSortAttr(d, sortBy)}\n                        <IconGroup>\n                            <QuestionIconTooltip\n                                details={d}\n                            />\n                            { !d.enabled && <ToggleOffIcon onClick={ () => setEnabled(d.id)(true) } /> }\n                            { d.enabled && <ToggleOnIcon onClick={ () => setEnabled(d.id)(false) } /> }\n                        </IconGroup>\n                    </TemplateDetail>\n                    <p style={{ color: '#486B00' }}>${d.delta.toFixed(2)}</p>\n                </div>\n            ))}\n        </CardBody>\n    </Card>\n);\n\nTopTemplates.propTypes = {\n    data: PropTypes.array,\n    setDataRunTime: PropTypes.func,\n    redirectToJobExplorer: PropTypes.func,\n    deselectedIds: PropTypes.array,\n    setDeselectedIds: PropTypes.func,\n    setEnabled: PropTypes.func,\n    sortBy: PropTypes.string\n};\n\nexport default TopTemplates;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\nimport { Card, CardBody } from '@patternfly/react-core';\n\n// Imports from custom components\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\n// Imports from API\nimport { preflightRequest, readROI, readROIOptions } from '../../Api';\n\n// Imports from utilities\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { roi as roiConst } from '../../Utilities/constants';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { calculateDelta, convertSecondsToHours } from '../../Utilities/helpers';\n\n// Chart\nimport TopTemplatesSavings from '../../Charts/ROITopTemplates';\n\n// Local imports\nimport { BorderedCardTitle } from './helpers';\nimport TotalSavings from './TotalSavings';\nimport CalculationCost from './CalculationCost';\nimport AutomationFormula from './AutomationFormula';\nimport TopTemplates from './TopTemplates';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 5fr 2fr;\n  height: 100%;\n`;\n\nconst WrapperLeft = styled.div`\n  flex: 5;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n`;\n\nconst WrapperRight = styled.div`\n  flex: 2;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst mapApi = ({ items = []}) =>\n    items.map(el => ({\n        ...el,\n        delta: 0,\n        avgRunTime: 3600,\n        manualCost: 0,\n        automatedCost: 0,\n        enabled: true\n    }));\n\nconst filterDisabled = data => data.filter(({ enabled }) => enabled);\n\nconst updateDeltaCost = (data, costAutomation, costManual) =>\n    data.map(el => {\n        const manualCost =\n      convertSecondsToHours(el.avgRunTime) *\n      el.successful_hosts_total *\n      parseFloat(costManual);\n        const automatedCost =\n      convertSecondsToHours(el.successful_elapsed_total) *\n      parseFloat(costAutomation);\n        const delta = calculateDelta(automatedCost, manualCost);\n\n        return { ...el, delta, manualCost, automatedCost };\n    });\n\nconst computeTotalSavings = data =>\n    data.reduce((sum, curr) => sum + curr.delta, 0);\n\nconst AutomationCalculator = ({ history }) => {\n    const toJobExplorer = useRedirect(history, 'jobExplorer');\n    const [ costManual, setCostManual ] = useState('50');\n    const [ costAutomation, setCostAutomation ] = useState('20');\n\n    const [ preflight, setPreflight ] = useApi(null);\n    const [ options, setOptions ] = useApi({});\n    const [ api, fetchApi, setDataInApi ] = useApi([], data =>\n        updateDeltaCost(mapApi(data), costAutomation, costManual)\n    );\n\n    const { queryParams, setFromToolbar } = useQueryParams(\n        roiConst.defaultParams\n    );\n\n    /**\n   * Modifies one elements avgRunTime in the unfilteredData\n   * and updates all calculated fields.\n   * Used in top templates.\n   */\n    const setDataRunTime = (seconds, id) => {\n        const updatedData = api.data.map(el => {\n            if (el.id === id) {\n                el.avgRunTime = seconds;\n                const updatedDelta = updateDeltaCost(\n                    [ el ],\n                    costAutomation,\n                    costManual\n                )[0];\n                return updatedDelta;\n            } else {\n                return el;\n            }\n        });\n\n        setDataInApi(updatedData);\n    };\n\n    const setEnabled = id => value => {\n        setDataInApi(api.data.map(el =>\n            el.id === id\n                ? { ...el, enabled: value }\n                : el\n        ));\n    };\n\n    useEffect(() => {\n        setPreflight(preflightRequest());\n        setOptions(readROIOptions({ params: queryParams }));\n    }, []);\n\n    /**\n   * Recalculates the delta and costs in the data after the cost is changed.\n   */\n    useEffect(() => {\n        setDataInApi(updateDeltaCost(api.data, costAutomation, costManual));\n    }, [ costAutomation, costManual ]);\n\n    /**\n   * Get data from API depending on the queryParam.\n   */\n    useEffect(() => {\n        fetchApi(readROI({ params: queryParams }));\n    }, [ queryParams ]);\n\n    /**\n   * Function to redirect to the job explorer page\n   * with the same filters as is used here.\n   */\n    const redirectToJobExplorer = templateId => {\n        const initialQueryParams = {\n            quick_date_range: 'last_30_days',\n            template_id: [ templateId ]\n        };\n        toJobExplorer(initialQueryParams);\n    };\n\n    const renderLeft = () => (\n        <WrapperLeft>\n            <Main style={{ paddingBottom: '0' }}>\n                <Card>\n                    <BorderedCardTitle>Automation savings</BorderedCardTitle>\n                    <CardBody>\n                        {api.isLoading && <LoadingState />}\n                        {api.error && <ApiErrorState message={api.error.error} />}\n                        {api.isSuccess && api.data.length <= 0 && <NoData />}\n                        {api.isSuccess && api.data.length > 0 && (\n                            <React.Fragment>\n                                <TopTemplatesSavings\n                                    margin={{ top: 20, right: 20, bottom: 20, left: 70 }}\n                                    id=\"d3-roi-chart-root\"\n                                    data={filterDisabled(api.data)}\n                                />\n                                <p style={{ textAlign: 'center' }}>Templates</p>\n                            </React.Fragment>\n                        )}\n                    </CardBody>\n                </Card>\n            </Main>\n            <Main>\n                <AutomationFormula />\n            </Main>\n        </WrapperLeft>\n    );\n\n    const renderRight = () => (\n        <WrapperRight>\n            <Main style={{ paddingBottom: '0', paddingLeft: '0' }}>\n                <TotalSavings totalSavings={computeTotalSavings(filterDisabled(api.data))} />\n            </Main>\n            <Main\n                style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    flex: '1 1 0',\n                    paddingLeft: '0'\n                }}\n            >\n                <CalculationCost\n                    costManual={costManual}\n                    setCostManual={setCostManual}\n                    costAutomation={costAutomation}\n                    setCostAutomation={setCostAutomation}\n                />\n                <TopTemplates\n                    redirectToJobExplorer={redirectToJobExplorer}\n                    data={api.data}\n                    setDataRunTime={setDataRunTime}\n                    setUnfilteredData={api.data}\n                    setEnabled={setEnabled}\n                    sortBy={queryParams.sort_by}\n                />\n            </Main>\n        </WrapperRight>\n    );\n\n    return (\n        <React.Fragment>\n            <PageHeader style={{ flex: '0' }}>\n                <PageHeaderTitle title={'Automation Calculator'} />\n                <FilterableToolbar\n                    categories={options.data}\n                    filters={queryParams}\n                    setFilters={setFromToolbar}\n                />\n            </PageHeader>\n            {preflight.error && (\n                <Main>\n                    <EmptyState preflightError={preflight.error} />\n                </Main>\n            )}\n            {preflight.isSuccess && (\n                <React.Fragment>\n                    <Wrapper className=\"automation-wrapper\">\n                        {renderLeft()}\n                        {renderRight()}\n                    </Wrapper>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n};\n\nAutomationCalculator.propTypes = {\n    history: PropTypes.object\n};\n\nexport default AutomationCalculator;\n","import * as d3 from 'd3';\n\nclass Tooltip {\n    constructor(opts) {\n        this.svg = opts.svg;\n        this.colors = opts.colors;\n        this.draw();\n    }\n\n    draw() {\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 145;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -41)\n        .attr('rx', 2)\n        .attr('height', 110)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.circleSuccess = this.toolTipBase\n        .append('circle')\n        .attr('cx', 26)\n        .attr('cy', 0)\n        .attr('r', 8)\n        .attr('stroke', 'white')\n        .attr('fill', 'white');\n        this.circleFail = this.toolTipBase\n        .append('circle')\n        .attr('cx', 26)\n        .attr('cy', 26)\n        .attr('r', 8)\n        .attr('stroke', 'white')\n        .attr('fill', 'white');\n        this.successText = this.toolTipBase\n        .append('text')\n        .attr('x', 43)\n        .attr('y', 4)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Successful');\n        this.failText = this.toolTipBase\n        .append('text')\n        .attr('x', 43)\n        .attr('y', 28)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Failed');\n        this.successIcon = this.toolTipBase\n        .append('text')\n        .attr('class', 'fas fa-sm')\n        .attr('fill', this.colors(1))\n        .attr('x', 19)\n        .attr('y', 5)\n        .text('\\uf058');\n        this.failedIcon = this.toolTipBase\n        .append('text')\n        .attr('class', 'fas fa-sm')\n        .attr('fill', this.colors(0))\n        .attr('x', 20)\n        .attr('y', 31)\n        .text('\\uf06a');\n        this.jobs = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 137)\n        .attr('y', -21)\n        .attr('font-size', 12)\n        .attr('text-anchor', 'end')\n        .text('No jobs');\n        this.successful = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 122)\n        .attr('y', 4)\n        .text('0');\n        this.failed = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 122)\n        .attr('y', 28)\n        .text('0');\n        this.date = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('stroke', 'white')\n        .attr('x', 20)\n        .attr('y', -21)\n        .attr('font-size', 12)\n        .text('Never');\n        this.clickMore = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 20)\n        .attr('y', 55)\n        .attr('font-size', 12)\n        .text('Click for details');\n    }\n\n  handleMouseOver = d => {\n      let success = 0;\n      let fail = 0;\n      let total = 0;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      const formatTooltipDate = d3.timeFormat('%m/%d');\n      if (!d) {\n          return;\n      }\n\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n      if (d) {\n          success = d.RAN || 0;\n          fail = d.FAIL || 0;\n          total = d.TOTAL || 0;\n          this.date.text(formatTooltipDate(d.DATE || null));\n      }\n\n      if (d && d.data) {\n          success = d.data.RAN || 0;\n          fail = d.data.FAIL || 0;\n          total = d.data.TOTAL || 0;\n          this.date.text(formatTooltipDate(d.data.DATE || null));\n      }\n\n      this.jobs.text('' + total + ' jobs');\n      this.jobsWidth = this.jobs.node().getComputedTextLength();\n      this.failed.text('' + fail);\n      this.successful.text('' + success);\n      this.successTextWidth = this.successful.node().getComputedTextLength();\n      this.failTextWidth = this.failed.node().getComputedTextLength();\n\n      const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n      const threshold = 40;\n      const overage = maxTextPerc / threshold;\n      let adjustedWidth;\n      if (maxTextPerc > threshold) {\n          adjustedWidth = this.boxWidth * overage;\n      } else {\n          adjustedWidth = this.boxWidth;\n      }\n\n      this.boundingBox.attr('width', adjustedWidth);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n          this.boundingBox.attr('x', -adjustedWidth - 20);\n          this.circleSuccess.attr('cx', -adjustedWidth);\n          this.circleFail.attr('cx', -adjustedWidth);\n          this.failedIcon.attr('x', -adjustedWidth - 7);\n          this.successIcon.attr('x', -adjustedWidth - 7);\n          this.successText.attr('x', -adjustedWidth + 17);\n          this.failText.attr('x', -adjustedWidth + 17);\n          this.successful.attr('x', -this.successTextWidth - 20 - 12);\n          this.failed.attr('x', -this.failTextWidth - 20 - 12);\n          this.date.attr('x', -adjustedWidth - 5);\n          this.jobs.attr('x', -this.jobsWidth / 2 - 7);\n          this.clickMore.attr('x', -adjustedWidth);\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n          this.boundingBox.attr('x', 10);\n          this.circleSuccess.attr('cx', 26);\n          this.circleFail.attr('cx', 26);\n          this.failedIcon.attr('x', 19);\n          this.successIcon.attr('x', 19);\n          this.successText.attr('x', 43);\n          this.failText.attr('x', 43);\n          this.successful.attr('x', adjustedWidth - this.successTextWidth);\n          this.failed.attr('x', adjustedWidth - this.failTextWidth);\n          this.date.attr('x', 20);\n          this.jobs.attr('x', adjustedWidth);\n          this.clickMore.attr('x', 20);\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nexport default Tooltip;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { stringify } from 'query-string';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\n\nclass BarChart extends Component {\n    constructor(props) {\n        super(props);\n        this.draw = this.draw.bind(this);\n        this.init = this.init.bind(this);\n        this.resize = this.resize.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.state = {\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    redirectToJobExplorer({ data: { DATE: date }}) {\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const { orgId, templateId } = this.props;\n        const initialQueryParams = {\n            start_date: formattedDate,\n            end_date: formattedDate,\n            quick_date_range: 'custom',\n            status: [ 'failed', 'successful' ],\n            template_id: templateId,\n            org_id: orgId\n        };\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    }\n\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => {\n                this.init();\n            }, 500)\n        });\n    }\n\n    init() {\n        this.draw();\n    }\n\n    // Methods\n    draw() {\n    // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const parseTime = d3.timeParse('%Y-%m-%d');\n        let { data: unformattedData } = this.props;\n        const data = unformattedData.reduce(\n            (formatted, { created_date, successful_count, failed_count }) => {\n                let DATE = parseTime(created_date) || new Date();\n                let RAN = +successful_count || 0;\n                let FAIL = +failed_count || 0;\n                let TOTAL = +successful_count + failed_count || 0;\n                return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n            },\n            []\n        );\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n        const x = d3\n        .scaleBand()\n        .rangeRound([ 0, width ])\n        .padding(0.35); // percentage\n        const y = d3.scaleLinear().range([ height, 0 ]);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n        //[fail, success]\n        let colors = d3.scaleOrdinal([ '#6EC664', '#A30000' ]);\n\n        const barTooltip = new Tooltip({\n            svg: '#' + this.props.id,\n            colors\n        });\n        const status = [ 'FAIL', 'RAN' ];\n\n        // stack our data\n        const stack = d3\n        .stack()\n        .keys(status)\n        .order(d3.stackOrderNone)\n        .offset(d3.stackOffsetNone);\n\n        const layers = stack(data);\n        // Scale the range of the data\n        x.domain(layers[0].map(d => d.data.DATE));\n        y.domain([ 0, d3.max(layers[layers.length - 1], d => d[1] * 1.15) || 8 ]);\n        // Add the Y Axis\n        svg\n        .append('g')\n        .attr('class', 'y-axis')\n        .call(d3.axisLeft(y).tickSize(-width, 0, 0))\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.y-axis .tick text').attr('x', -5);\n        // text label for the y axis\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Jobs across all clusters');\n        // Add the X Axis\n        let ticks;\n        const maxTicks = Math.round(data.length / (data.length / 2));\n        ticks = data.map(d => d.DATE);\n        if (data.length > 14) {\n            ticks = data\n            .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n            .filter(item => item);\n        }\n\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(\n            d3\n            .axisBottom(x)\n            .tickValues(ticks)\n            .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n        // text label for the x axis\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n\n        const layer = svg\n        .selectAll('layer')\n        .data(layers)\n        .enter()\n        .append('g')\n        .attr('class', 'layer')\n        .style('fill', (_d, i) => colors(i));\n        layer\n        .selectAll('rect')\n        .data(d => d)\n        .enter()\n        .append('rect')\n        .attr('x', d => x(d.data.DATE))\n        .attr('y', d => y(d[0]))\n        .attr('height', 0)\n        .attr('width', x.bandwidth() - 1)\n        .transition()\n        .duration(550)\n        .ease(d3.easeCubic)\n        .attr('y', d => y(d[1]))\n        .attr('height', d => y(d[0]) - y(d[1]));\n        layer\n        .selectAll('rect')\n        .on('mouseover', barTooltip.handleMouseOver)\n        .on('mousemove', barTooltip.handleMouseOver)\n        .on('mouseout', barTooltip.handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.data !== this.props.data) {\n            this.init();\n        }\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        return <div id={this.props.id} />;\n    }\n}\n\nBarChart.propTypes = {\n    id: PropTypes.string,\n    templateId: PropTypes.array,\n    orgId: PropTypes.array,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    history: PropTypes.object\n};\n\nexport default initializeChart(withRouter(BarChart));\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport initializeChart from './BaseChart';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\nimport { stringify } from 'query-string';\nimport * as d3 from 'd3';\n\nclass LineChart extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.updateCluster = this.updateCluster.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.state = {\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    redirectToJobExplorer({ DATE: date }) {\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const { clusterId, templateId, orgId } = this.props;\n        const initialQueryParams = {\n            start_date: formattedDate,\n            end_date: formattedDate,\n            quick_date_range: 'custom',\n            status: [ 'failed', 'successful' ],\n            cluster_id: clusterId,\n            org_id: orgId,\n            template_id: templateId\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    }\n\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => {\n                this.init();\n            }, 500)\n        });\n    }\n\n    updateCluster() {\n        this.init();\n    }\n    init() {\n        this.draw();\n    }\n    // Methods\n    draw() {\n    // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n\n        function transition(path) {\n            path\n            .transition()\n            .duration(1000)\n            .attrTween('stroke-dasharray', tweenDash);\n        }\n\n        function tweenDash() {\n            const l = this.getTotalLength();\n            const i = d3.interpolateString('0,' + l, l + ',' + l);\n            return function(t) {\n                return i(t);\n            };\n        }\n\n        const x = d3.scaleTime().rangeRound([ 0, width ]);\n        const y = d3.scaleLinear().range([ height, 0 ]);\n\n        //[success, fail, total]\n        let colors = d3.scaleOrdinal([ '#6EC664', '#A30000', '#06C' ]);\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n        .attr('z', 100)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n        // Tooltip\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id,\n            colors\n        });\n        const { data: unformattedData } = this.props;\n        const parseTime = d3.timeParse('%Y-%m-%d');\n\n        const data = unformattedData.reduce(\n            (formatted, { created_date, successful_count, failed_count }) => {\n                let DATE = parseTime(created_date) || new Date();\n                let RAN = +successful_count || 0;\n                let FAIL = +failed_count || 0;\n                let TOTAL = +successful_count + failed_count || 0;\n                return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n            },\n            []\n        );\n        // Scale the range of the data\n        x.domain(\n            d3.extent(data, function(d) {\n                return d.DATE;\n            })\n        );\n        y.domain([\n            0,\n            d3.max(data, function(d) {\n                return d.TOTAL * 1.15 || 8;\n            })\n        ]);\n\n        const successLine = d3\n        .line()\n        .curve(d3.curveMonotoneX)\n        .x(function(d) {\n            return x(d.DATE);\n        })\n        .y(function(d) {\n            return y(d.RAN);\n        });\n\n        const failLine = d3\n        .line()\n        .defined(d => !isNaN(d.FAIL))\n        .curve(d3.curveMonotoneX)\n        .x(function(d) {\n            return x(d.DATE);\n        })\n        .y(function(d) {\n            return y(d.FAIL);\n        });\n        // Add the Y Axis\n        svg\n        .append('g')\n        .attr('class', 'y-axis')\n        .call(\n            d3\n            .axisLeft(y)\n            .ticks(10)\n            .tickSize(-width)\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.y-axis .tick text').attr('x', -5);\n\n        // text label for the y axis\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Job runs');\n        // Add the X Axis\n        let ticks;\n        const maxTicks = Math.round(data.length / (data.length / 2));\n        ticks = data.map(d => d.DATE);\n        if (data.length > 14) {\n            ticks = data\n            .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n            .filter(item => item);\n        }\n\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(\n            d3\n            .axisBottom(x)\n            .tickValues(ticks)\n            .tickSize(-height)\n            .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n        ) // \"Jan-01\"\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n        // text label for the x axis\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n        const vertical = svg\n        .append('path')\n        .attr('class', 'mouse-line')\n        .style('stroke', 'black')\n        .style('stroke-width', '3px')\n        .style('stroke-dasharray', '3, 3')\n        .style('opacity', '0');\n\n        const handleMouseOver = function(d) {\n            tooltip.handleMouseOver(d);\n            // show vertical line\n            vertical.transition().style('opacity', '1');\n        };\n\n        const handleMouseMove = function() {\n            let intersectX = this.cx.baseVal.value;\n            vertical.attr('d', function() {\n                let d = 'M' + intersectX + ',' + height;\n                d += ' ' + intersectX + ',' + 0;\n                return d;\n            });\n        };\n\n        const handleMouseOut = function() {\n            // hide tooltip\n            tooltip.handleMouseOut();\n            // hide vertical line\n            vertical.transition().style('opacity', 0);\n        };\n\n        // Add the successLine path.\n        svg\n        .append('path')\n        .data([ data ])\n        .attr('class', 'line')\n        .style('fill', 'none')\n        .style('stroke', () => colors(1))\n        .attr('stroke-width', 2)\n        .attr('d', successLine)\n        .call(transition);\n\n        // Add the failLine path.\n        svg\n        .append('path')\n        .data([ data ])\n        .attr('class', 'line')\n        .style('fill', 'none')\n        .style('stroke', () => colors(0))\n        .attr('stroke-width', 2)\n        .attr('d', failLine)\n        .call(transition);\n        svg\n        .selectAll('dot')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('r', 3)\n        .style('stroke', () => colors(1))\n        .style('fill', () => colors(1))\n        .attr('cx', function(d) {\n            return x(d.DATE);\n        })\n        .attr('cy', function(d) {\n            return y(d.RAN);\n        })\n\n        .on('mouseover', handleMouseOver)\n        .on('mousemove', handleMouseMove)\n        .on('mouseout', handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n        // create our failLine circles\n        svg\n        .selectAll('dot')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('r', 3)\n        .style('stroke', () => colors(0))\n        .style('fill', () => colors(0))\n        .attr('cx', function(d) {\n            return x(d.DATE);\n        })\n        .attr('cy', function(d) {\n            return y(d.FAIL);\n        })\n        .on('mouseover', handleMouseOver)\n        .on('mousemove', handleMouseMove)\n        .on('mouseout', handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n    }\n\n    componentDidMount() {\n        this.updateCluster();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.data !== this.props.data) {\n            this.updateCluster();\n        }\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        return <div id={this.props.id} />;\n    }\n}\n\nLineChart.propTypes = {\n    id: PropTypes.string,\n    clusterId: PropTypes.array,\n    templateId: PropTypes.array,\n    orgId: PropTypes.array,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    history: PropTypes.object\n};\n\nexport default initializeChart(withRouter(LineChart));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { trimStr } from '../Utilities/helpers';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell\n} from '@patternfly/react-core';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst ModulesList = ({ modules, isLoading }) => (\n    <DataList\n        aria-label=\"Top Modules\"\n        style={{\n            maxHeight: '400px',\n            overflow: 'auto',\n            height: '400px',\n            background: 'white'\n        }}\n    >\n        <DataListItem aria-labelledby=\"top-modules-header\">\n            <DataListCell>\n                <h3>Top modules</h3>\n            </DataListCell>\n            <DataCellEnd>\n                <h3>Usage</h3>\n            </DataCellEnd>\n        </DataListItem>\n        {isLoading && (\n            <PFDataListItem\n                aria-labelledby=\"modules-loading\"\n                key={isLoading}\n                style={{ border: 'none' }}\n            >\n                <PFDataListCell>\n                    <LoadingState />\n                </PFDataListCell>\n            </PFDataListItem>\n        )}\n        {!isLoading && modules.length <= 0 && (\n            <PFDataListItem\n                aria-labelledby=\"modules-no-data\"\n                key={isLoading}\n                style={{ border: 'none' }}\n            >\n                <PFDataListCell>\n                    <NoData />\n                </PFDataListCell>\n            </PFDataListItem>\n        )}\n        {!isLoading &&\n      modules\n      .filter(module => module.name !== null)\n      .map(({ name, host_task_count }, index) => (\n          <DataListItem aria-labelledby=\"top-modules-detail\" key={index}>\n              <DataListCell>\n                  <span>{trimStr(name)}</span>\n              </DataListCell>\n              <DataCellEnd>{host_task_count}</DataCellEnd>\n          </DataListItem>\n      ))}\n    </DataList>\n);\n\nModulesList.propTypes = {\n    modules: PropTypes.array,\n    isLoading: PropTypes.bool\n};\n\nexport default ModulesList;\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport { Paths } from '../paths';\nimport { stringify } from 'query-string';\nimport useApi from '../Utilities/useApi';\nimport { formatDateTime, formatSeconds } from '../Utilities/helpers';\nimport { readJobExplorer } from '../Api';\n\nimport {\n    Button,\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell,\n    Label,\n    Modal\n} from '@patternfly/react-core';\n\nimport { CircleIcon } from '@patternfly/react-icons';\n\nconst success = (\n    <CircleIcon\n        size=\"sm\"\n        key=\"5\"\n        style={{ color: 'rgb(110, 198, 100)', marginRight: '5px' }}\n    />\n);\nconst fail = (\n    <>\n        <CircleIcon\n            size=\"sm\"\n            key=\"5\"\n            style={{ color: 'rgb(163, 0, 0)', marginRight: '5px' }}\n        />\n        <span id=\"fail-icon\">!</span>\n    </>\n);\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\nconst PFDataListItemNoBorder = styled(PFDataListItem)`\n  border-bottom: none;\n  margin-bottom: -20px;\n`;\nconst DataListItemCompact = styled(DataListItem)`\n  padding: 0;\n  > .pf-c-data-list__cell {\n    font-weight: 600;\n  }\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst DataListCellCompact = styled(DataListCell)`\n  padding: 7px;\n`;\n\nconst DataListFocus = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-gap: 10px;\n  padding: var(--pf-global--spacer--lg);\n  background: #ebebeb;\n  border: 1px solid #ccc;\n  border-top: none;\n  margin-bottom: 20px;\n`;\nconst DataCellEndCompact = styled(DataCellEnd)`\n  padding: 7px !important;\n`;\n\nconst formatTopFailedTask = data => {\n    if (!data) {\n        return;\n    }\n\n    if (data && data[0]) {\n        const percentage = Math.ceil(\n            (data[0].failed_count / data[0].total_failed_count) * 100\n        );\n        return `${data[0].task_name} ${percentage}%`;\n    }\n\n    return `Unavailable`;\n};\n\nconst formatTopFailedStep = data => {\n    if (!data) {\n        return;\n    }\n\n    if (data && data[0]) {\n        const percentage = Math.ceil(\n            (data[0].failed_count / data[0].total_failed_count) * 100\n        );\n        return `${data[0].template_name} ${percentage}%`;\n    }\n\n    return `Unavailable`;\n};\n\nconst formatSuccessRate = (successCount, totalCount) =>\n    Math.ceil((successCount / totalCount) * 100) + '%';\nconst formatAvgRun = (elapsed, totalCount) =>\n    new Date(Math.ceil(elapsed / totalCount) * 1000).toISOString().substr(11, 8);\nconst formatTotalTime = elapsed =>\n    new Date(elapsed * 1000).toISOString().substr(11, 8);\n\nconst ModalContents = ({\n    selectedId,\n    isOpen,\n    handleModal,\n    qp,\n    jobType,\n    handleCloseBtn\n}) => {\n    const [\n        {\n            data: { items: relatedJobs = []}\n        },\n        setRelatedJobs\n    ] = useApi({ items: []});\n    const [\n        {\n            data: {\n                items: [ stats = 0 ]\n            }\n        },\n        setStats\n    ] = useApi({ items: []});\n\n    let history = useHistory();\n\n    const redirectToJobExplorer = () => {\n        const { jobExplorer } = Paths;\n        const initialQueryParams = {\n            template_id: [ selectedId ],\n            status: [\n                'successful',\n                'failed',\n                'new',\n                'pending',\n                'waiting',\n                'error',\n                'canceled',\n                'running'\n            ],\n            job_type: [ 'job' ],\n            quick_date_range: 'last_30_days'\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    const relatedTemplateJobsParams = {\n        ...qp,\n        template_id: [ selectedId ],\n        attributes: [\n            'id',\n            'status',\n            'job_type',\n            'started',\n            'finished',\n            'elapsed',\n            'created',\n            'cluster_name',\n            'org_name'\n        ],\n        group_by_time: false,\n        limit: 5,\n        sort_by: 'created:asc',\n        quick_date_range: qp.quick_date_range\n            ? qp.quick_date_range\n            : 'last_30_days',\n        job_type: [ jobType ]\n    };\n\n    const agreggateTemplateParams = {\n        group_by: 'template',\n        template_id: [ selectedId ],\n        attributes: [\n            'elapsed',\n            'job_type',\n            'successful_count',\n            'failed_count',\n            'total_count',\n            jobType === 'job' ? 'most_failed_tasks' : 'most_failed_steps'\n        ],\n        status: qp.status,\n        quick_date_range: qp.quick_date_range\n            ? qp.quick_date_range\n            : 'last_30_days',\n        job_type: [ jobType ]\n    };\n\n    useEffect(() => {\n        if (selectedId) {\n            setStats(readJobExplorer({ params: agreggateTemplateParams }));\n            setRelatedJobs(readJobExplorer({ params: relatedTemplateJobsParams }));\n        }\n    }, [ selectedId ]);\n\n    return (\n        <Modal\n            aria-label=\"modal\"\n            width={'80%'}\n            title={stats.name ? stats.name : 'no-template-name'}\n            isOpen={isOpen}\n            onClose={() => {\n                handleModal(false);\n                handleCloseBtn(null);\n            }}\n            actions={[\n                <Button\n                    key=\"cancel\"\n                    variant=\"secondary\"\n                    onClick={() => {\n                        handleModal(false);\n                        handleCloseBtn(null);\n                    }}\n                >\n          Close\n                </Button>\n            ]}\n        >\n            <DataList aria-label=\"Selected Template Details\">\n                <PFDataListItemNoBorder aria-labelledby=\"Selected Template Statistics\">\n                    <DataListFocus>\n                        <div aria-labelledby=\"job runs\">\n                            <b style={{ marginRight: '10px' }}>Number of runs</b>\n                            {stats.total_count ? stats.total_count : 'Unavailable'}\n                        </div>\n                        <div aria-labelledby=\"total time\">\n                            <b style={{ marginRight: '10px' }}>Total time</b>\n                            {stats.elapsed ? formatTotalTime(stats.elapsed) : 'Unavailable'}\n                        </div>\n                        <div aria-labelledby=\"Avg Time\">\n                            <b style={{ marginRight: '10px' }}>Avg time</b>\n                            {stats.elapsed\n                                ? formatAvgRun(stats.elapsed, stats.total_count)\n                                : 'Unavailable'}\n                        </div>\n                        <div aria-labelledby=\"success rate\">\n                            <b style={{ marginRight: '10px' }}>Success rate</b>\n                            {!isNaN(stats.successful_count)\n                                ? formatSuccessRate(stats.successful_count, stats.total_count)\n                                : 'Unavailable'}\n                        </div>\n                        {stats.most_failed_tasks && (\n                            <div aria-labelledby=\"most failed task\">\n                                <b style={{ marginRight: '10px' }}>Most failed task</b>\n                                {stats.most_failed_tasks\n                                    ? formatTopFailedTask(stats.most_failed_tasks)\n                                    : 'Unavailable'}\n                            </div>\n                        )}\n                        {stats.most_failed_steps && (\n                            <div aria-labelledby=\"most failed step\">\n                                <b style={{ marginRight: '10px' }}>Most failed step</b>\n                                {stats.most_failed_steps\n                                    ? formatTopFailedStep(stats.most_failed_steps)\n                                    : 'Unavailable'}\n                            </div>\n                        )}\n                    </DataListFocus>\n                </PFDataListItemNoBorder>\n                <DataListItemCompact>\n                    <DataListCellCompact key=\"last5jobs\">\n                        <Label variant=\"outline\">Last 5 jobs</Label>\n                    </DataListCellCompact>\n          ,\n                    <DataCellEndCompact>\n                        <Button\n                            component=\"a\"\n                            onClick={redirectToJobExplorer}\n                            variant=\"link\"\n                        >\n              View all jobs\n                        </Button>\n                    </DataCellEndCompact>\n                </DataListItemCompact>\n                <DataListItemCompact aria-labelledby=\"datalist header\">\n                    <PFDataListCell key=\"job heading\">Id/Name</PFDataListCell>\n                    <PFDataListCell key=\"cluster heading\">Cluster</PFDataListCell>\n                    <PFDataListCell key=\"start time heading\">Start Time</PFDataListCell>\n                    <PFDataListCell key=\"total time heading\">Total Time</PFDataListCell>\n                </DataListItemCompact>\n                {relatedJobs.length <= 0 && <LoadingState />}\n                {relatedJobs.length > 0 &&\n          relatedJobs.map((job, index) => (\n              <DataListItem\n                  style={{ padding: '10px 0' }}\n                  key={`job-details-${index}`}\n                  aria-labelledby=\"job details\"\n              >\n                  <PFDataListCell key=\"job name\">\n                      {job.status === 'successful' ? success : fail} {job.id.id} -{' '}\n                      {job.id.template_name}\n                  </PFDataListCell>\n                  <PFDataListCell key=\"job cluster\">\n                      {job.cluster_name}\n                  </PFDataListCell>\n                  <PFDataListCell key=\"start time\">\n                      {formatDateTime(job.started)}\n                  </PFDataListCell>\n                  <PFDataListCell key=\"total time\">\n                      {formatSeconds(job.elapsed)}\n                  </PFDataListCell>\n              </DataListItem>\n          ))}\n            </DataList>\n        </Modal>\n    );\n};\n\nModalContents.propTypes = {\n    selectedId: PropTypes.number,\n    qp: PropTypes.object,\n    jobType: PropTypes.string,\n    handleCloseBtn: PropTypes.func,\n    isOpen: PropTypes.bool,\n    handleModal: PropTypes.func\n};\n\nexport default ModalContents;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell\n} from '@patternfly/react-core';\n\nimport ModalContents from './ModalContents';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst TemplatesList = ({ templates, isLoading, qp, title, jobType }) => {\n    const [ selectedId, setSelectedId ] = useState(null);\n    const [ isModalOpen, setIsModalOpen ] = useState(false);\n\n    return (\n        <>\n            <DataList\n                aria-label=\"Top Templates\"\n                style={{\n                    maxHeight: '400px',\n                    overflow: 'auto',\n                    height: '400px',\n                    background: 'white'\n                }}\n            >\n                <DataListItem aria-labelledby=\"top-templates-header\">\n                    <DataListCell>\n                        <h3>{title}</h3>\n                    </DataListCell>\n                    <DataCellEnd>\n                        <h3>Usage</h3>\n                    </DataCellEnd>\n                </DataListItem>\n                {isLoading && (\n                    <PFDataListItem\n                        aria-labelledby=\"templates-loading\"\n                        key={isLoading}\n                        style={{ border: 'none' }}\n                    >\n                        <PFDataListCell>\n                            <LoadingState />\n                        </PFDataListCell>\n                    </PFDataListItem>\n                )}\n                {!isLoading && templates.length <= 0 && (\n                    <PFDataListItem\n                        aria-labelledby=\"templates-no-data\"\n                        key={isLoading}\n                        style={{ border: 'none' }}\n                    >\n                        <PFDataListCell>\n                            <NoData />\n                        </PFDataListCell>\n                    </PFDataListItem>\n                )}\n                {!isLoading &&\n          templates.map(({ name, total_count, id }, index) => (\n              <DataListItem aria-labelledby=\"top-templates-detail\" key={index}>\n                  <DataListCell>\n                      <a\n                          onClick={() => {\n                              setIsModalOpen(true);\n                              setSelectedId(id);\n                          }}\n                      >\n                          {name}\n                      </a>\n                  </DataListCell>\n                  <DataCellEnd>{total_count}</DataCellEnd>\n              </DataListItem>\n          ))}\n            </DataList>\n            <ModalContents\n                isOpen={isModalOpen}\n                handleModal={setIsModalOpen}\n                selectedId={selectedId}\n                qp={qp}\n                jobType={jobType}\n                handleCloseBtn={setSelectedId}\n            />\n        </>\n    );\n};\n\nTemplatesList.propTypes = {\n    templates: PropTypes.array,\n    isLoading: PropTypes.bool,\n    queryParams: PropTypes.object,\n    title: PropTypes.string,\n    qp: PropTypes.object,\n    jobType: PropTypes.string\n};\n\nexport default TemplatesList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport {\n    preflightRequest,\n    readClustersOptions,\n    readJobExplorer,\n    readEventExplorer\n} from '../../Api';\n\nimport { jobExplorer } from '../../Utilities/constants';\nimport useApi from '../../Utilities/useApi';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle\n} from '@patternfly/react-core';\n\nimport BarChart from '../../Charts/BarChart';\nimport LineChart from '../../Charts/LineChart';\nimport ModulesList from '../../Components/ModulesList';\nimport TemplatesList from '../../Components/TemplatesList';\nimport FilterableToolbar from '../../Components/Toolbar';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport { clusters } from '../../Utilities/constants';\n\nconst initialTopTemplateParams = {\n    group_by: 'template',\n    limit: 10,\n    job_type: [ 'job' ],\n    group_by_time: false,\n    status: [ 'successful', 'failed' ]\n};\n\nconst initialTopWorkflowParams = {\n    group_by: 'template',\n    limit: 10,\n    job_type: [ 'workflowjob' ],\n    group_by_time: false,\n    status: [ 'successful', 'failed' ]\n};\n\nconst initialModuleParams = {\n    group_by: 'module',\n    sort_by: 'host_task_count:desc',\n    limit: 10\n};\n\nconst Clusters = () => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n\n    const optionsMapper = options => {\n        const { groupBy, attributes, ...rest } = options;\n        return rest;\n    };\n\n    const { queryParams, setFromToolbar } = useQueryParams({\n        ...clusters.defaultParams\n    });\n\n    const [\n        {\n            isLoading,\n            isSuccess,\n            error,\n            data: { items: chartData = []}\n        },\n        setData\n    ] = useApi({ items: []});\n\n    const [\n        {\n            data: { items: templates = []}\n        },\n        setTemplates\n    ] = useApi({ items: []});\n    const [\n        {\n            data: { items: workflows = []}\n        },\n        setWorkflows\n    ] = useApi({ items: []});\n    const [\n        {\n            data: { items: modules = []}\n        },\n        setModules\n    ] = useApi({ items: []});\n    const [{ data: options = []}, setOptions ] = useApi({}, optionsMapper);\n\n    const initialOptionsParams = {\n        attributes: jobExplorer.attributes\n    };\n\n    const { queryParams: optionsQueryParams } = useQueryParams(\n        initialOptionsParams\n    );\n\n    const {\n        cluster_id,\n        org_id,\n        template_id,\n        quick_date_range,\n        start_date,\n        end_date\n    } = queryParams;\n\n    const topTemplatesParams = {\n        cluster_id,\n        org_id,\n        template_id,\n        quick_date_range,\n        start_date,\n        end_date,\n        ...initialTopTemplateParams\n    };\n\n    const topWorkflowParams = {\n        cluster_id,\n        org_id,\n        template_id,\n        quick_date_range,\n        start_date,\n        end_date,\n        ...initialTopWorkflowParams\n    };\n\n    const topModuleParams = {\n        cluster_id,\n        org_id,\n        template_id,\n        quick_date_range,\n        start_date,\n        end_date,\n        ...initialModuleParams\n    };\n\n    useEffect(() => {\n        async function initializeWithPreflight() {\n            await preflightRequest().catch(error => {\n                setPreFlightError({ preflightError: error });\n            });\n            setOptions(readClustersOptions({ params: optionsQueryParams }));\n        }\n\n        initializeWithPreflight();\n    }, []);\n\n    // Get and update the data\n    useEffect(() => {\n        const fetchEndpoints = () => {\n            setData(readJobExplorer({ params: queryParams }));\n            setTemplates(readJobExplorer({ params: topTemplatesParams }));\n            setWorkflows(readJobExplorer({ params: topWorkflowParams }));\n            setModules(readEventExplorer({ params: topModuleParams }));\n        };\n\n        fetchEndpoints();\n    }, [ queryParams ]);\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={'Clusters'} />\n                <FilterableToolbar\n                    categories={options}\n                    filters={queryParams}\n                    setFilters={setFromToolbar}\n                />\n            </PageHeader>\n            {preflightError && (\n                <Main>\n                    <EmptyState {...preflightError} />\n                </Main>\n            )}\n            {error && (\n                <Main>\n                    <ApiErrorState message={error.error} />\n                </Main>\n            )}\n            {!preflightError && !error && (\n                <>\n                    <Main>\n                        <Card>\n                            <PFCardTitle>\n                                <h2>Job status</h2>\n                            </PFCardTitle>\n                            <CardBody>\n                                {isLoading && <LoadingState />}\n                                {queryParams.cluster_id.length <= 0 && isSuccess && (\n                                    <BarChart\n                                        margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                                        id=\"d3-bar-chart-root\"\n                                        data={chartData}\n                                        templateId={queryParams.template_id}\n                                        orgId={queryParams.org_id}\n                                    />\n                                )}\n                                {queryParams.cluster_id.length > 0 && isSuccess && (\n                                    <LineChart\n                                        margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                                        id=\"d3-line-chart-root\"\n                                        data={chartData}\n                                        clusterId={queryParams.cluster_id}\n                                        templateId={queryParams.template_id}\n                                        orgId={queryParams.org_id}\n                                    />\n                                )}\n                            </CardBody>\n                        </Card>\n                        <div\n                            className=\"dataCard\"\n                            style={{ display: 'flex', marginTop: '20px' }}\n                        >\n                            <TemplatesList\n                                qp={queryParams}\n                                templates={workflows}\n                                isLoading={isLoading}\n                                title={'Top workflows'}\n                                jobType={'workflowjob'}\n                            />\n                            <TemplatesList\n                                qp={queryParams}\n                                templates={templates}\n                                isLoading={isLoading}\n                                title={'Top templates'}\n                                jobType={'job'}\n                            />\n                            <ModulesList modules={modules} isLoading={isLoading} />\n                        </div>\n                    </Main>\n                </>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default Clusters;\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst NoResults = () => {\n    return (\n        <EmptyState variant={EmptyStateVariant.full}>\n            <EmptyStateIcon icon={SearchIcon} />\n            <Title size=\"lg\" headingLevel=\"h4\">\n        No results found\n            </Title>\n            <EmptyStateBody>\n        No results match the filter criteria. Remove all filters or clear all\n        filters to show results.\n            </EmptyStateBody>\n        </EmptyState>\n    );\n};\n\nexport default NoResults;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from '@patternfly/react-core';\nimport {\n    CheckCircleIcon,\n    ExclamationCircleIcon,\n    ClockIcon,\n    SyncAltIcon,\n    ExclamationTriangleIcon\n} from '@patternfly/react-icons';\n\nconst JobStatus = ({ status }) => {\n    const capitalized = str => str.charAt(0).toUpperCase() + str.slice(1);\n\n    const getColor = () => {\n        switch (status) {\n            case 'successful':\n                return 'green';\n            case 'failed':\n            case 'error':\n                return 'red';\n            case 'running':\n            case 'pending':\n                return 'blue';\n            case 'canceled':\n                return 'orange';\n                // case new, waiting\n            default:\n                return 'grey';\n        }\n    };\n\n    const getIcon = () => {\n        switch (status) {\n            case 'successful':\n                return <CheckCircleIcon />;\n            case 'failed':\n            case 'error':\n                return <ExclamationCircleIcon />;\n            case 'running':\n                return <SyncAltIcon />;\n            case 'canceled':\n                return <ExclamationTriangleIcon />;\n                // case new, waiting, pending\n            default:\n                return <ClockIcon />;\n        }\n    };\n\n    return (\n        <Label variant=\"outline\" color={getColor()} icon={getIcon()}>\n            {capitalized(status)}\n        </Label>\n    );\n};\n\nJobStatus.propTypes = {\n    status: PropTypes.oneOf([\n        'successful',\n        'failed',\n        'error',\n        'running',\n        'new',\n        'waiting',\n        'pending',\n        'canceled'\n    ])\n};\n\nexport default JobStatus;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    DataListCell as PFDataListCell,\n    DataListContent,\n    DataList,\n    DataListItem,\n    DataListItemRow,\n    DataListItemCells as PFDataListItemCells,\n    DataListToggle as PFDataListToggle,\n    Tooltip\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkIcon } from '@patternfly/react-icons';\n\nimport LoadingState from '../Components/LoadingState';\nimport { formatDateTime, formatJobType } from '../Utilities/helpers';\nimport JobStatus from './JobStatus';\n\nconst headerLabels = [ 'Id/Name', 'Status', 'Cluster', 'Organization', 'Type' ];\n\nconst ExternalLinkIcon = styled(PFExternalLinkIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n`;\n\nconst DataListCell = styled(PFDataListCell)`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  text-align: center;\n`;\n\nconst DataListCellHeader = styled(DataListCell)`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  font-weight: bold;\n`;\n\nconst DataListItemCells = styled(PFDataListItemCells)`\n  align-items: center;\n`;\n\nconst DataListToggle = styled(PFDataListToggle)`\n  align-items: center;\n`;\n\nconst mobileBreakpoint = 765;\n\nconst buildHeader = labels => (\n    <DataListItem>\n        <DataListItemRow style={{ paddingLeft: '80px' }}>\n            <DataListItemCells\n                dataListCells={labels.map(label => (\n                    <DataListCellHeader key={label}>\n                        {label}\n                        {label === 'Id/Name' && <ExternalLinkIcon />}\n                    </DataListCellHeader>\n                ))}\n            />\n        </DataListItemRow>\n    </DataListItem>\n);\n\nconst buildListRow = (items, ariaLabel, ariaLabelledBy, windowWidth) => {\n    const [ isExpanded, setIsExpanded ] = useState([]);\n\n    return (\n        <>\n            {items.map((item, count) => {\n                const toggle = id => {\n                    const expanded = isExpanded;\n                    const idx = expanded.indexOf(id);\n                    const newExpanded =\n            idx >= 0\n                ? [\n                    ...expanded.slice(0, idx),\n                    ...expanded.slice(idx + 1, expanded.length)\n                ]\n                : [ ...expanded, id ];\n                    setIsExpanded(newExpanded);\n                };\n\n                return (\n                    <DataListItem\n                        key={item.id.id}\n                        aria-labelledby={ariaLabelledBy}\n                        isExpanded={isExpanded.includes(`${item.id.id}-toggle`)}\n                    >\n                        <DataListItemRow key={item.id.id}>\n                            <DataListToggle\n                                id={`${item.id.id}-toggle`}\n                                aria-controls={`${item.id.id}-expand`}\n                                onClick={() => toggle(`${item.id.id}-toggle`)}\n                                isExpanded={isExpanded.includes(`${item.id.id}-toggle`)}\n                            />\n                            <DataListItemCells\n                                dataListCells={[\n                                    <DataListCell key={count++}>\n                                        <a\n                                            href={item.id.tower_link}\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                        >\n                                            {windowWidth < mobileBreakpoint && (\n                                                <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                          Id/Name\n                                                    <ExternalLinkIcon />:\n                                                </span>\n                                            )}\n                      &nbsp;\n                                            {`${item.id.id} - ${item.id.template_name}`}\n                                        </a>\n                                    </DataListCell>,\n                                    <DataListCell key={count++}>\n                                        {windowWidth <= mobileBreakpoint && (\n                                            <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Status:\n                                            </span>\n                                        )}\n                    &nbsp;\n                                        <JobStatus status={item.status} />\n                                    </DataListCell>,\n                                    <Tooltip key={count++} content={<p>{item.cluster_name}</p>}>\n                                        <DataListCell>\n                                            {windowWidth <= mobileBreakpoint && (\n                                                <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                          Cluster:\n                                                </span>\n                                            )}\n                      &nbsp;\n                                            {item.cluster_name}\n                                        </DataListCell>\n                                    </Tooltip>,\n                                    <DataListCell key={count++}>\n                                        {windowWidth <= mobileBreakpoint && (\n                                            <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Organization:\n                                            </span>\n                                        )}\n                    &nbsp;\n                                        {item.org_name}\n                                    </DataListCell>,\n                                    <DataListCell key={count++}>\n                                        {windowWidth <= mobileBreakpoint && (\n                                            <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Type:\n                                            </span>\n                                        )}\n                    &nbsp;\n                                        {formatJobType(item.job_type)}\n                                    </DataListCell>\n                                ]}\n                            />\n                        </DataListItemRow>\n                        <DataListContent\n                            aria-label={`${item.id.id}-details`}\n                            id={'${item.id.id}'}\n                            isHidden={!isExpanded.includes(`${item.id.id}-toggle`)}\n                        >\n                            <DataListItemCells\n                                dataListCells={[\n                                    <DataListCell key={count++}>\n                    Created: {formatDateTime(item.created)}\n                                    </DataListCell>,\n                                    <DataListCell key={count++}>\n                    Started: {formatDateTime(item.started)}\n                                    </DataListCell>,\n                                    <DataListCell key={count++}>\n                    Finished: {formatDateTime(item.finished)}\n                                    </DataListCell>\n                                ]}\n                            />\n                        </DataListContent>\n                    </DataListItem>\n                );\n            })}\n        </>\n    );\n};\n\nconst AllJobsTemplate = ({ jobs }) => {\n    const [ windowWidth, setWindowWidth ] = useState(window.innerWidth);\n\n    const onResize = () => setWindowWidth(window.innerWidth);\n\n    useEffect(() => {\n        window.addEventListener('resize', onResize);\n        return () => window.removeEventListener('resize', onResize);\n    }, []);\n\n    return buildListRow(jobs, 'All jobs view', 'all-jobs', windowWidth);\n};\n\nconst JobExplorerList = ({ jobs }) => {\n    const [ windowWidth, setWindowWidth ] = useState(window.innerWidth);\n\n    const onResize = () => setWindowWidth(window.innerWidth);\n\n    useEffect(() => {\n        window.addEventListener('resize', onResize);\n        return () => window.removeEventListener('resize', onResize);\n    }, []);\n\n    return (\n        <>\n            {jobs.length <= 0 && <LoadingState />}\n            <DataList isCompact>\n                {windowWidth >= mobileBreakpoint && buildHeader(headerLabels)}\n                <AllJobsTemplate jobs={jobs} windowWidth={windowWidth} />\n            </DataList>\n        </>\n    );\n};\n\nJobExplorerList.propTypes = {\n    jobs: PropTypes.array,\n    windowWidth: PropTypes.number\n};\n\nAllJobsTemplate.propTypes = {\n    jobs: PropTypes.array,\n    windowWidth: PropTypes.number\n};\n\nexport default JobExplorerList;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { parse, stringify } from 'query-string';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { Paths } from '../../paths';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoResults from '../../Components/NoResults';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport {\n    preflightRequest,\n    readJobExplorer,\n    readJobExplorerOptions\n} from '../../Api';\nimport { jobExplorer } from '../../Utilities/constants';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    Pagination,\n    PaginationVariant\n} from '@patternfly/react-core';\n\nimport JobExplorerList from '../../Components/JobExplorerList';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\nconst perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '15', value: 15 },\n    { title: '20', value: 20 },\n    { title: '25', value: 25 }\n];\n\nconst initialQueryParams = {\n    ...jobExplorer.defaultParams,\n    attributes: jobExplorer.attributes\n};\n\nconst optionsMapper = options => {\n    const { groupBy, attributes, ...rest } = options;\n    return rest;\n};\n\nconst JobExplorer = ({ location: { search }, history }) => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [\n        {\n            isLoading,\n            isSuccess,\n            error,\n            data: { meta = {}, items: data = []}\n        },\n        setData\n    ] = useApi({ meta: {}, items: []});\n    const [ currPage, setCurrPage ] = useState(1);\n    const [ options, setOptions ] = useApi({}, optionsMapper);\n\n    const {\n        queryParams,\n        setLimit,\n        setOffset,\n        setFromToolbar,\n        dispatch\n    } = useQueryParams(initialQueryParams);\n\n    const updateURL = () => {\n        const { jobExplorer } = Paths;\n        const search = stringify(queryParams, { arrayFormat: 'bracket' });\n        history.replace({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    useEffect(() => {\n        insights.chrome.appNavClick({ id: 'job-explorer', secondaryNav: true });\n\n        preflightRequest().catch(error => {\n            setPreFlightError({ preflightError: error });\n        });\n\n        const initialSearchParams = parse(search, {\n            arrayFormat: 'bracket',\n            parseBooleans: true\n        });\n\n        dispatch({ type: 'REINITIALIZE', value: {\n            ...initialQueryParams,\n            ...initialSearchParams\n        }});\n    }, []);\n\n    useEffect(() => {\n        setData(readJobExplorer({ params: queryParams }));\n        setOptions(readJobExplorerOptions({ params: queryParams }));\n        updateURL();\n    }, [ queryParams ]);\n\n    const returnOffsetVal = page => (page - 1) * queryParams.limit;\n\n    const handleSetPage = page => {\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    const handlePerPageSelect = (perPage, page) => {\n        setLimit(perPage);\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={'Job Explorer'} />\n            </PageHeader>\n\n            {preflightError && (\n                <Main>\n                    <EmptyState {...preflightError} />\n                </Main>\n            )}\n\n            {!preflightError && (\n                <Main>\n                    <Card>\n                        <CardBody>\n                            <FilterableToolbar\n                                categories={options.data}\n                                filters={queryParams}\n                                setFilters={setFromToolbar}\n                                pagination={\n                                    <Pagination\n                                        itemCount={meta && meta.count ? meta.count : 0}\n                                        widgetId=\"pagination-options-menu-top\"\n                                        perPageOptions={perPageOptions}\n                                        perPage={queryParams.limit}\n                                        page={currPage}\n                                        variant={PaginationVariant.top}\n                                        onPerPageSelect={(_event, perPage, page) => {\n                                            handlePerPageSelect(perPage, page);\n                                        }}\n                                        onSetPage={(_event, pageNumber) => {\n                                            handleSetPage(pageNumber);\n                                        }}\n                                        isCompact\n                                    />\n                                }\n                                hasSettings\n                            />\n                            {error && <ApiErrorState message={error.error} />}\n                            {isLoading && <LoadingState />}\n                            {isSuccess && data.length <= 0 && <NoResults />}\n                            {isSuccess && data.length > 0 && <JobExplorerList jobs={data} />}\n                            <Pagination\n                                itemCount={meta && meta.count ? meta.count : 0}\n                                widgetId=\"pagination-options-menu-bottom\"\n                                perPageOptions={perPageOptions}\n                                perPage={queryParams.limit}\n                                page={currPage}\n                                variant={PaginationVariant.bottom}\n                                onPerPageSelect={(_event, perPage, page) => {\n                                    handlePerPageSelect(perPage, page);\n                                }}\n                                onSetPage={(_event, pageNumber) => {\n                                    handleSetPage(pageNumber);\n                                }}\n                                style={{ marginTop: '20px' }}\n                            />\n                        </CardBody>\n                    </Card>\n                </Main>\n            )}\n        </React.Fragment>\n    );\n};\n\nJobExplorer.propTypes = {\n    location: PropTypes.object,\n    history: PropTypes.object\n};\n\nexport default JobExplorer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nimport {\n    NotificationDrawerList as PFNotificationDrawerList,\n    NotificationDrawerListItem as PFNotificationDrawerListItem,\n    NotificationDrawerListItemBody,\n    NotificationDrawerListItemHeader\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkAltIcon } from '@patternfly/react-icons';\nimport LoadingState from '../Components/LoadingState';\nimport { capitalize } from '../Utilities/helpers';\n\nconst ExternalLinkAltIcon = styled(PFExternalLinkAltIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n  font-size: 14px;\n`;\n\nconst NotificationDrawerListItem = styled(PFNotificationDrawerListItem)`\n  border-top: 1px solid var(--pf-global--BorderColor--light-100\n    );\n  border-bottom::nth-child(odd): 1px solid var(--pf-global--BorderColor--light-100\n    );\n  box-shadow: none;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst NotificationDrawerList = styled(PFNotificationDrawerList)`\n  &:last-child {\n    border-bottom: 1px solid var(--pf-global--BorderColor--light-100);\n  }\n`;\n\nconst stringifyDate = date => {\n    const day = moment(date);\n    const oneHour = 60 * 60 * 1000;\n    const now = moment().utc();\n\n    if (now.isAfter(day)) {\n        return `${now.diff(day, 'days')} day(s) ago.`;\n    }\n\n    if (day.isSame(now, 'day')) {\n        if (day.valueOf() > oneHour) {\n            return `${day.diff(now, 'hours')} hour(s) ago.`;\n        }\n\n        return `${now.diff(day, 'minutes')} minute(s) ago.`;\n    }\n};\n\nconst AllNotificationTemplate = ({ notifications }) =>\n    notifications.map(\n        ({ date, message, label, notification_id: id, tower_url: url }) => {\n            if (label === '' || label === 'notice') {\n                return (\n                    <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n                        <NotificationDrawerListItemHeader\n                            variant=\"info\"\n                            title={\n                                <>\n                                    {url ? (\n                                        <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                            {capitalize(label)}\n                                            <ExternalLinkAltIcon />\n                                        </a>\n                                    ) : (\n                                        capitalize(label)\n                                    )}\n                                </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody>\n                            {message}{' '}\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n\n            if (label === 'error') {\n                return (\n                    <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n                        <NotificationDrawerListItemHeader\n                            variant=\"danger\"\n                            title={\n                                <>\n                                    {url ? (\n                                        <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                            {capitalize(label)}\n                                            <ExternalLinkAltIcon />\n                                        </a>\n                                    ) : (\n                                        capitalize(label)\n                                    )}\n                                </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                            {message}{' '}\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n\n            if (label === 'warning') {\n                return (\n                    <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n                        <NotificationDrawerListItemHeader\n                            variant=\"warning\"\n                            title={\n                                <>\n                                    {url ? (\n                                        <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                            {capitalize(label)}\n                                            <ExternalLinkAltIcon />\n                                        </a>\n                                    ) : (\n                                        capitalize(label)\n                                    )}\n                                </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                            {message}{' '}\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n        }\n    );\n\nconst ErrorNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'error')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n                variant=\"danger\"\n                title={\n                    <>\n                        {url ? (\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                {capitalize(label)}\n                                <ExternalLinkAltIcon />\n                            </a>\n                        ) : (\n                            capitalize(label)\n                        )}\n                    </>\n                }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                {message}{' '}\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst NoticeNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'notice')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n                variant=\"info\"\n                title={\n                    <>\n                        {url ? (\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                {capitalize(label)}\n                                <ExternalLinkAltIcon />\n                            </a>\n                        ) : (\n                            capitalize(label)\n                        )}\n                    </>\n                }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                {message}{' '}\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst WarningNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'warning')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n                variant=\"warning\"\n                title={\n                    <>\n                        {url ? (\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                {capitalize(label)}\n                                <ExternalLinkAltIcon />\n                            </a>\n                        ) : (\n                            capitalize(label)\n                        )}\n                    </>\n                }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                {message}{' '}\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst NotificationsList = ({ filterBy, notifications }) => (\n    <>\n        <NotificationDrawerList>\n            {notifications.length <= 0 && <LoadingState />}\n            {filterBy === '' && (\n                <AllNotificationTemplate notifications={notifications} />\n            )}\n            {filterBy === 'notice' && (\n                <NoticeNotificationTemplate notifications={notifications} />\n            )}\n            {filterBy === 'error' && (\n                <ErrorNotificationTemplate notifications={notifications} />\n            )}\n            {filterBy === 'warning' && (\n                <WarningNotificationTemplate notifications={notifications} />\n            )}\n        </NotificationDrawerList>\n    </>\n);\n\nAllNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nErrorNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nWarningNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nNotificationsList.propTypes = {\n    notifications: PropTypes.array,\n    filterBy: PropTypes.string\n};\n\nexport default NotificationsList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoData from '../../Components/NoData';\nimport { preflightRequest, readClusters, readNotifications } from '../../Api';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle,\n    FormSelect,\n    FormSelectOption,\n    Pagination,\n    PaginationVariant,\n    NotificationDrawer\n} from '@patternfly/react-core';\n\nimport NotificationsList from '../../Components/NotificationsList';\n\nconst CardTitle = styled(PFCardTitle)`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n`;\n\nconst DropdownGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-end;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n\n  select {\n    margin: 0 10px;\n    width: 150px;\n\n    @media screen and (max-width: 1035px) {\n      margin: 10px 10px 0 0;\n    }\n\n    @media screen and (max-width: 865px) {\n      width: 100%;\n    }\n  }\n`;\n\nconst notificationOptions = [\n    {\n        value: 'please choose',\n        label: 'Select Notification Severity',\n        disabled: true\n    },\n    { value: 'error', label: 'View Critical', disabled: false },\n    { value: 'warning', label: 'View Warning', disabled: false },\n    { value: 'notice', label: 'View Notice', disabled: false },\n    { value: '', label: 'View All', disabled: false }\n];\n\nconst perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 }\n];\n\nfunction formatClusterName(data) {\n    const defaultClusterOptions = [\n        { value: 'please choose', label: 'Select cluster', disabled: true },\n        { value: '', label: 'All Clusters', disabled: false },\n        { value: -1, label: 'Unassociated', disabled: false }\n    ];\n    return data.reduce(\n        (formatted, { label, cluster_id: id, install_uuid: uuid }) => {\n            if (label.length === 0) {\n                formatted.push({ value: id, label: uuid, disabled: false });\n            } else {\n                formatted.push({ value: id, label, disabled: false });\n            }\n\n            return formatted;\n        },\n        defaultClusterOptions\n    );\n}\n\nconst initialQueryParams = {\n    limit: 5,\n    offset: 0\n};\n\nconst Notifications = () => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [ notificationsData, setNotificationsData ] = useState([]);\n    const [ clusterOptions, setClusterOptions ] = useState([]);\n    const [ selectedCluster, setSelectedCluster ] = useState('');\n    const [ firstRender, setFirstRender ] = useState(true);\n    const [ isLoading, setIsLoading ] = useState(true);\n    const [ meta, setMeta ] = useState({});\n    const [ currPage, setCurrPage ] = useState(1);\n    const {\n        queryParams,\n        setId,\n        setLimit,\n        setOffset,\n        setSeverity\n    } = useQueryParams(initialQueryParams);\n\n    useEffect(() => {\n        if (firstRender) {\n            return;\n        }\n\n        const getData = () => {\n            return readNotifications({ params: queryParams });\n        };\n\n        const update = () => {\n            setIsLoading(true);\n            getData().then(({ notifications: notificationsData = [], meta }) => {\n                setNotificationsData(notificationsData);\n                setMeta(meta);\n                setIsLoading(false);\n            });\n        };\n\n        update();\n    }, [ queryParams ]);\n\n    useEffect(() => {\n        insights.chrome.appNavClick({ id: 'notifications', secondaryNav: true });\n\n        let ignore = false;\n        const fetchEndpoints = () => {\n            return Promise.all(\n                [ readClusters(), readNotifications({ params: queryParams }) ].map(p =>\n                    p.catch(() => [])\n                )\n            );\n        };\n\n        async function initializeWithPreflight() {\n            setIsLoading(true);\n            await preflightRequest().catch(error => {\n                setPreFlightError({ preflightError: error });\n            });\n            fetchEndpoints().then(\n                ([\n                    { templates: clustersData = []},\n                    { notifications: notificationsData = [], meta }\n                ]) => {\n                    if (!ignore) {\n                        const clusterOptions = formatClusterName(clustersData);\n                        setClusterOptions(clusterOptions);\n                        setNotificationsData(notificationsData);\n                        setMeta(meta);\n                        setFirstRender(false);\n                        setIsLoading(false);\n                    }\n                }\n            );\n        }\n\n        initializeWithPreflight();\n        return () => (ignore = true);\n    }, []);\n\n    const returnOffsetVal = page => {\n        let offsetVal = (page - 1) * queryParams.limit;\n        return offsetVal;\n    };\n\n    const handleSetPage = page => {\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    const handlePerPageSelect = (perPage, page) => {\n        setLimit(perPage);\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={'Notifications'} />\n            </PageHeader>\n            {preflightError && (\n                <Main>\n                    <EmptyState {...preflightError} />\n                </Main>\n            )}\n            {!preflightError && (\n                <>\n                    <Main>\n                        <Card>\n                            <CardTitle>\n                                <DropdownGroup>\n                                    <FormSelect\n                                        name=\"selectedCluster\"\n                                        value={selectedCluster}\n                                        onChange={value => {\n                                            setSelectedCluster(value);\n                                            setId(value);\n                                            setOffset(0);\n                                            setCurrPage(1);\n                                        }}\n                                        aria-label=\"Select Cluster\"\n                                    >\n                                        {clusterOptions.map(({ value, label, disabled }, index) => (\n                                            <FormSelectOption\n                                                isDisabled={disabled}\n                                                key={index}\n                                                value={value}\n                                                label={label}\n                                            />\n                                        ))}\n                                    </FormSelect>\n                                    <FormSelect\n                                        name=\"selectedNotification\"\n                                        value={queryParams.severity || ''}\n                                        onChange={value => {\n                                            setSeverity(value);\n                                            setOffset(0);\n                                            setCurrPage(1);\n                                        }}\n                                        aria-label=\"Select Notification Type\"\n                                    >\n                                        {notificationOptions.map(\n                                            ({ disabled, value, label }, index) => (\n                                                <FormSelectOption\n                                                    isDisabled={disabled}\n                                                    key={index}\n                                                    value={value}\n                                                    label={label}\n                                                />\n                                            )\n                                        )}\n                                    </FormSelect>\n                                </DropdownGroup>\n                                <Pagination\n                                    itemCount={meta && meta.count ? meta.count : 0}\n                                    widgetId=\"pagination-options-menu-top\"\n                                    perPageOptions={perPageOptions}\n                                    perPage={queryParams.limit}\n                                    page={currPage}\n                                    variant={PaginationVariant.top}\n                                    onPerPageSelect={(_event, perPage, page) => {\n                                        handlePerPageSelect(perPage, page);\n                                    }}\n                                    onSetPage={(_event, pageNumber) => {\n                                        handleSetPage(pageNumber);\n                                    }}\n                                    isCompact\n                                />\n                            </CardTitle>\n                            <CardBody>\n                                {isLoading && <LoadingState />}\n                                {!isLoading && notificationsData.length <= 0 && <NoData />}\n                                {!isLoading && notificationsData.length > 0 && (\n                                    <NotificationDrawer>\n                                        <NotificationsList\n                                            filterBy={queryParams.severity || ''}\n                                            options={notificationOptions}\n                                            notifications={notificationsData}\n                                        />\n                                    </NotificationDrawer>\n                                )}\n                                <Pagination\n                                    itemCount={meta && meta.count ? meta.count : 0}\n                                    widgetId=\"pagination-options-menu-bottom\"\n                                    perPageOptions={perPageOptions}\n                                    perPage={queryParams.limit}\n                                    page={currPage}\n                                    variant={PaginationVariant.bottom}\n                                    onPerPageSelect={(_event, perPage, page) => {\n                                        handlePerPageSelect(perPage, page);\n                                    }}\n                                    onSetPage={(_event, pageNumber) => {\n                                        handleSetPage(pageNumber);\n                                    }}\n                                    style={{ marginTop: '20px' }}\n                                />\n                            </CardBody>\n                        </Card>\n                    </Main>\n                </>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default Notifications;\n","import moment from 'moment';\n\n/*\n * isNumeric - return true if input is a real number\n */\nexport function isNumeric(val) {\n    if (val === 0 || val === '0') {\n        return true;\n    }\n\n    if (parseInt(val)) {\n        return true;\n    }\n\n    if (parseFloat(val)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function trimStr(str) {\n    return str.toString().replace(/['\"]+/g, '');\n}\n\nexport function formatDateTime(dateTime) {\n    return moment(new Date(dateTime).toISOString()).format('M/D/YYYY h:mm:ssa');\n}\n\nexport function formatDate(date) {\n    return moment(date).format('YYYY-MM-DD');\n}\n\nexport function formatSeconds(seconds) {\n    return moment()\n    .startOf('day')\n    .seconds(seconds)\n    .format('H:mm:ss');\n}\n\nexport function getTotal(data) {\n    if (!data) {\n        return;\n    } else {\n        let total = 0;\n        data.forEach(datum => {\n            total += parseInt(datum.count);\n        });\n        return total;\n    }\n}\n\nexport function formatPercentage(val) {\n    if (isNaN(val)) {\n        return;\n    }\n\n    return `${val}%`;\n}\n\nexport const capitalize = s => {\n    if (typeof s !== 'string') {\n        return '';\n    }\n\n    return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport function calculateDelta(a, b) {\n    if (!isNumeric(a) || !isNumeric(b)) {\n        return 0;\n    }\n\n    // never return less than zero ...\n    if (b - a < 0) {\n        return 0;\n    }\n\n    return b - a;\n}\n\nexport function convertMinsToMs(mins) {\n    if (!parseInt(mins)) {\n        return 0;\n    }\n\n    return mins * 60000;\n}\n\nexport function convertMsToMins(ms) {\n    if (!parseInt(ms)) {\n        return 0;\n    }\n\n    return ms / 60000;\n}\n\nexport function convertSecondsToMins(seconds) {\n    if (!parseInt(seconds)) {\n        return 0;\n    }\n\n    return seconds / 60;\n}\n\nexport function convertMinsToSeconds(mins) {\n    if (!parseInt(mins) || parseInt(mins) < 0) {\n        return 0;\n    }\n\n    return +parseInt(mins) * 60;\n}\n\nexport function convertSecondsToHours(seconds) {\n    if (!parseInt(seconds)) {\n        return 0;\n    }\n\n    return seconds / 3600;\n}\n\nexport function convertWithCommas(arr, key) {\n    const split = arr.reduce((strs, datum) => {\n        strs.push(datum[key]);\n        return strs;\n    }, []);\n    return split.join(', ');\n}\n\nexport function formatJobType(type) {\n    return type === 'job' ? 'Playbook run' : 'Workflow job';\n}\n\nexport function formatJobStatus(status) {\n    return status === 'successful' ? 'Success' : 'Failed';\n}\n\nexport function formatJobDetailsURL(baseURL, jobId) {\n    const subDirectory1 = 'job';\n    const subDirectory2 = 'details';\n    return `${baseURL}/#/${subDirectory1}/${jobId}/${subDirectory2}/`;\n}\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst DefaultLoadingState = () => (\n    <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={CubesIcon} />\n        <Title headingLevel=\"h5\" size=\"lg\">\n      Loading...\n        </Title>\n        <EmptyStateBody>Please wait.</EmptyStateBody>\n    </EmptyState>\n);\n\nexport default DefaultLoadingState;\n"],"sourceRoot":""}