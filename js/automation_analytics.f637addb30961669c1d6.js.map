{"version":3,"sources":["webpack:///./src/Api.js","webpack:///./src/Utilities/useQueryParams.js","webpack:///./src/Components/EmptyState.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Utilities/useApi.js","webpack:///./src/Charts/BaseChart.js","webpack:///./src/Components/NoData.js","webpack:///./src/Components/ApiErrorState.js","webpack:///./src/Components/Toolbar/CategoryDropdown.js","webpack:///./src/Components/Toolbar/CustomDateSelector.js","webpack:///./src/Components/Toolbar/constants.js","webpack:///./src/Components/Toolbar/ToolbarFilterItem.js","webpack:///./src/Components/Toolbar/helpers.js","webpack:///./src/Components/Toolbar/Toolbar.js","webpack:///./src/Components/Toolbar/index.js","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/Utilities/useRedirect.js","webpack:///./src/Charts/ROITopTemplates.js","webpack:///./src/Containers/AutomationCalculator/helpers.js","webpack:///./src/Containers/AutomationCalculator/TotalSavings.js","webpack:///./src/Containers/AutomationCalculator/CalculationCost.js","webpack:///./src/Containers/AutomationCalculator/AutomationFormula.js","webpack:///./src/Containers/AutomationCalculator/TopTemplates.js","webpack:///./src/Containers/AutomationCalculator/AutomationCalculator.js","webpack:///./src/Utilities/Tooltip.js","webpack:///./src/Charts/BarChart.js","webpack:///./src/Charts/LineChart.js","webpack:///./src/Components/ModulesList.js","webpack:///./src/Components/ModalContents.js","webpack:///./src/Components/TemplatesList.js","webpack:///./src/Containers/Clusters/Clusters.js","webpack:///./src/Utilities/Legend.js","webpack:///./src/Charts/GroupedBarChart.js","webpack:///./src/Charts/PieChart.js","webpack:///./src/Containers/OrganizationStatistics/OrganizationStatistics.js","webpack:///./src/Utilities/colors.js","webpack:///./src/Components/NoResults.js","webpack:///./src/Components/JobStatus.js","webpack:///./src/Components/JobExplorerList.js","webpack:///./src/Containers/JobExplorer/JobExplorer.js","webpack:///./src/Components/NotificationsList.js","webpack:///./src/Containers/Notifications/Notifications.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Components/LoadingState.js"],"names":["jobExplorerEndpoint","getAbsoluteUrl","arr","window","location","href","split","pop","join","handleResponse","response","json","then","ok","status","Promise","reject","message","preflightRequest","fetch","readOrgOptions","_ref","_ref$params","params","url","URL","method","body","JSON","stringify","readJobsByDateAndOrg","_ref2","_ref2$params","combined","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","attributes","group_by_time","group_by","sort_by","concat","search","Object","query_string__WEBPACK_IMPORTED_MODULE_1__","limit","readJobRunsByOrg","_ref3","_ref3$params","include_others","readJobEventsByOrg","_ref4","_ref4$params","granularity","readClusters","readNotifications","_ref5","_ref5$params","formattedUrl","keys","forEach","key","searchParams","append","readJobExplorerOptions","_ref6","_ref6$params","readClustersOptions","_ref7","_ref7$params","readJobExplorer","_ref8","_ref8$params","paginationParams","offset","qs","readEventExplorer","_ref9","_ref9$params","readROI","_ref11","_ref11$params","readROIOptions","_ref12","_ref12$params","useQueryParams","initial","_useReducer","react__WEBPACK_IMPORTED_MODULE_4__","state","type","value","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_3___default","startDate","endDate","parseInt","id","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2___default","severity","newState","start_date","end_date","newValues","entries","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default","_Utilities_helpers__WEBPACK_IMPORTED_MODULE_6__","Error","_useReducer2","queryParams","dispatch","actionMapper","quick_date_range","job_type","org_id","cluster_id","template_id","only_root_workflows_and_standalone_jobs","setLimit","setOffset","setFromToolbar","varName","arguments","length","undefined","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default","setSeverity","setEndDate","moment__WEBPACK_IMPORTED_MODULE_5___default","format","setId","setStartDate","days","subtract","setStartDateAsString","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_patternfly_react_core_dist_js_components_Button_Button_js__WEBPACK_IMPORTED_MODULE_2__","_patternfly_react_core_dist_js_components_Title_Title_js__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_core_dist_js_components_EmptyState_EmptyState_js__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateIcon_js__WEBPACK_IMPORTED_MODULE_5__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateBody_js__WEBPACK_IMPORTED_MODULE_6__","_patternfly_react_icons_dist_js_icons_wrench_icon__WEBPACK_IMPORTED_MODULE_7__","_patternfly_react_icons_dist_js_icons_wrench_icon__WEBPACK_IMPORTED_MODULE_7___default","DefaultEmptyState","error","preflightError","a","createElement","variant","full","icon","Fragment","headingLevel","size","target","rel","onClick","reload","propTypes","object","__webpack_exports__","d","jobExplorer","roi","organizationStatistics","clusters","defaultParams","dataFetchReducer","action","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1___default","isLoading","isSuccess","data","payload","initialData","postprocess","_useState","react__WEBPACK_IMPORTED_MODULE_2__","_useState2","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default","request","setRequest","didCancel","insights","chrome","auth","getUser","catch","e","initializeChart","Chart","BaseChart","props","margin","react__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","getWidth","d3__WEBPACK_IMPORTED_MODULE_3__","style","left","right","getHeight","top","bottom","prop_types__WEBPACK_IMPORTED_MODULE_2___default","string","element","_patternfly_react_core_dist_js_components_Title_Title_js__WEBPACK_IMPORTED_MODULE_1__","_patternfly_react_core_dist_js_components_EmptyState_EmptyState_js__WEBPACK_IMPORTED_MODULE_2__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateIcon_js__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_4___default","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateBody_js__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateIcon_js__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_core_dist_js_components_Title_Title_js__WEBPACK_IMPORTED_MODULE_5__","_patternfly_react_icons_dist_js_icons_exclamation_circle_icon__WEBPACK_IMPORTED_MODULE_6__","_patternfly_react_icons_dist_js_icons_exclamation_circle_icon__WEBPACK_IMPORTED_MODULE_6___default","_patternfly_react_tokens__WEBPACK_IMPORTED_MODULE_7__","ApiErrorState","small","color","CategoryDropdown_CategoryDropdown","selected","_ref$setSelected","setSelected","_ref$categories","categories","react","slicedToArray_default","isExpanded","setIsExpanded","react_default","ToolbarItem","Select","isOpen","aria-label","onToggle","onSelect","_event","selection","selections","placeholderText","map","name","SelectOption","prop_types_default","array","func","Toolbar_CategoryDropdown","CustomDateSelector_CustomDateSelector","_ref$onInputChange","onInputChange","_ref$startDate","_ref$endDate","InputGroup","TextInput","onChange","Toolbar_CustomDateSelector","optionsForCategories","isSingle","placeholder","ToolbarFilterItem_renderValues","values","description","ToolbarFilterItem_ToolbarFilterItem","categoryKey","_ref2$filter","filter","_ref2$values","_ref2$isVisible","isVisible","_ref2$hasChips","hasChips","setFilter","expanded","setExpanded","options","ToolbarFilter","data-cy","showToolbarItem","chips","item","comparator","val","i","handleSingleChips","reduce","acc","Number","isInteger","cmpItem","push","handleCheckboxChips","categoryName","deleteChip","valueToDelete","keyToDelete","find","filteredArr","event","includes","toConsumableArray_default","onFilter","textInput","toLowerCase","hasInlineFilter","isRequired","any","bool","Toolbar_ToolbarFilterItem","Toolbar_FilterableToolbar","filters","setFilters","_ref$pagination","pagination","_ref$hasSettings","hasSettings","settingsExpanded","setSettingsExpanded","restCategories","objectWithoutProperties_default","filterCategories","obj","_useState3","_useState4","currentCategory","setCurrentCategory","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarContent","Button","filter_icon_default","ToolbarGroup","el","sort_amount_down_icon_default","isActive","cog_icon_default","visibility","default","lg","Card","isFlat","backgroundColor","CardHeader","CardActions","times_icon_default","CardTitle","CardBody","Switch","label","labelOff","isChecked","Tooltip","position","content","question_circle_icon_default","Toolbar_Toolbar","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","code","resolve","module","exports","Utilities_useRedirect","history","path","query","query_string","arrayFormat","pathname","paths","ROITopTemplates_Tooltip","_this","this","classCallCheck_default","defineProperty_default","savings","manualCost","automationCost","scrollLeftOffset","d3","node","scrollLeft","x","pageX","svg","getBoundingClientRect","y","pageY","formatDollars","delta","automatedCost","toolTipWidth","toolTipBase","width","chartWidth","flipped","text","nameWidth","getComputedTextLength","savingsWidth","manualCostWidth","automationCostWidth","widestTextElem","adjustedWidth","maxTextPerc","boxWidth","overage","boundingBox","attr","toolTipPoint","interrupt","transition","delay","draw","amount","parseFloat","toFixed","toString","replace","slice","textWidthThreshold","ROITopTemplates_TopTemplatesSavings","TopTemplatesSavings","_this2","possibleConstructorReturn_default","getPrototypeOf_default","call","init","bind","assertThisInitialized_default","resize","timeout","_this3","clearTimeout","setState","setTimeout","remove","ticks","height","rangeRound","padding","range","formatYAxisValue","xAxis","tickValues","yAxis","tickFormat","tickSize","taskNames","tooltip","domain","selectAll","bandwidth","enter","on","darker","handleMouseOver","handleMouseOut","addEventListener","removeEventListener","ROITopTemplates","BorderedCardTitle","styled_components_browser_esm","_templateObject","TotalSavings_TotalSavings","_ref$totalSavings","totalSavings","borderTop","paddingBottom","Title","total","floatToStringWithCommas","number","AutomationCalculator_TotalSavings","InputAndText","div","CalculationCost_templateObject","validFloat","floatValue","CalculationCost_CalculationCost","_ref$costManual","costManual","_ref$setCostManual","setCostManual","_ref$costAutomation","costAutomation","_ref$setCostAutomatio","setCostAutomation","InputGroupText","dollar_sign_icon_default","paddingTop","AutomationCalculator_CalculationCost","AutomationCalculator_AutomationFormula","TemplateDetail","TopTemplates_templateObject","TemplateDetailSubTitle","em","_templateObject2","TooltipWrapper","_templateObject3","IconGroup","_templateObject4","TopTemplates_InputAndText","_templateObject5","TopTemplates_QuestionIconTooltip","successfulElapsedTotal","totalOrgCount","totalClusterCount","Popover","bodyContent","info_circle_icon_default","TopTemplates_TopTemplates","_ref2$data","_ref2$setDataRunTime","setDataRunTime","_ref2$setEnabled","setEnabled","_ref2$redirectToJobEx","redirectToJobExplorer","overflow","flex","className","avgRunTime","enabled","successful_hosts_total","successful_elapsed_total","total_org_count","total_cluster_count","Tooltip_Tooltip","component","helpers","minutes","toggle_off_icon_default","toggle_on_icon_default","deselectedIds","setDeselectedIds","AutomationCalculator_TopTemplates","Wrapper","AutomationCalculator_templateObject","WrapperLeft","AutomationCalculator_templateObject2","WrapperRight","AutomationCalculator_templateObject3","filterDisabled","AutomationCalculator_updateDeltaCost","objectSpread_default","AutomationCalculator_AutomationCalculator","toJobExplorer","_useApi","useApi","_useApi2","preflight","setPreflight","_useApi3","_useApi4","setOptions","_useApi5","_ref$items","items","AutomationCalculator_mapApi","_useApi6","api","fetchApi","setDataInApi","_useQueryParams","constants","seconds","updatedData","Api","templateId","PageHeader","title","Main","EmptyState","LoadingState","NoData","textAlign","paddingLeft","sum","curr","computeTotalSavings","display","flexDirection","setUnfilteredData","Utilities_Tooltip","opts","success","fail","formatTooltipDate","RAN","FAIL","TOTAL","date","DATE","jobs","jobsWidth","failed","successful","successTextWidth","failTextWidth","circleSuccess","circleFail","failedIcon","successIcon","successText","failText","clickMore","colors","BarChart_BarChart","BarChart","formattedData","formattedDate","_this$props","orgId","initialQueryParams","parseTime","formatted","created_date","successful_count","failed_count","Date","barTooltip","layers","order","stack","maxTicks","Math","round","layer","_d","duration","ease","prevProps","Charts_BarChart","react_router","LineChart_LineChart","LineChart","updateCluster","clusterId","attrTween","tweenDash","l","getTotalLength","t","unformattedData","successLine","curve","failLine","defined","isNaN","vertical","handleMouseMove","intersectX","cx","baseVal","Charts_LineChart","ModulesList_DataListCell","DataListCell","ModulesList_DataListItem","DataListItem","DataCellEnd","ModulesList_ModulesList","modules","DataList","maxHeight","background","aria-labelledby","border","index","host_task_count","Components_ModulesList","ModalContents_success","circle_icon_default","marginRight","ModalContents_fail","ModalContents_DataListCell","ModalContents_templateObject","ModalContents_DataListItem","ModalContents_templateObject2","ModalContents_DataCellEnd","ModalContents_templateObject3","PFDataListItemNoBorder","DataListItemCompact","DataListCellCompact","_templateObject6","DataListFocus","_templateObject7","DataCellEndCompact","_templateObject8","ModalContents_ModalContents","selectedId","handleModal","qp","jobType","handleCloseBtn","_useApi2$0$data$items","relatedJobs","setRelatedJobs","_useApi4$0$data$items2","stats","setStats","relatedTemplateJobsParams","agreggateTemplateParams","Modal","onClose","actions","total_count","elapsed","toISOString","substr","formatTotalTime","totalCount","ceil","formatAvgRun","successCount","formatSuccessRate","most_failed_tasks","percentage","total_failed_count","task_name","formatTopFailedTask","most_failed_steps","template_name","formatTopFailedStep","Label","job","cluster_name","started","Components_ModalContents","TemplatesList_DataListCell","TemplatesList_templateObject","TemplatesList_DataListItem","TemplatesList_templateObject2","TemplatesList_DataCellEnd","TemplatesList_templateObject3","TemplatesList_TemplatesList","templates","setSelectedId","isModalOpen","setIsModalOpen","Components_TemplatesList","initialTopTemplateParams","initialTopWorkflowParams","initialModuleParams","setPreFlightError","_useApi2$","_useApi2$$data$items","chartData","setData","_useApi4$0$data$items","setTemplates","_useApi6$0$data$items","workflows","setWorkflows","_useApi7","_useApi8","_useApi8$0$data$items","setModules","_useApi9","groupBy","_useApi10","_useApi10$0$data","initialOptionsParams","optionsQueryParams","topTemplatesParams","topWorkflowParams","topModuleParams","_initializeWithPreflight","asyncToGenerator_default","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","apply","initializeWithPreflight","marginTop","Container","LegendDetail","Color","attrs","span","SubTitle","Legend_Switch","Legend_Legend","handleChange","_isChecked","count","some","Utilities_Legend","GroupedBarChart_Wrapper","GroupedBarChart_templateObject","formatDate","pieces","GroupedBarChart_Tooltip","orgName","GroupedBarChart_GroupedBarChart","orgsList","org","colorFunc","selectedIds","setSelectedIds","timeFrame","selectedOrgs","x0","x1","dates","selectedOrgNames","exit","bars","merge","subEnter","isAccessible","Charts_GroupedBarChart","PieChart_Wrapper","PieChart_templateObject","PieChart_Tooltip","perc","percSuccess","drawn","percent","success_rate","maxLength","percentageTotal","percentageSuccess","boundingBOx","showSuccess","boundingHeight","boundingWidth","PieChart_PieChart","sort","b","radius","min","filteredData","donutTooltip","pie","arc","outerRadius","innerRadius","classed","Charts_PieChart","OrganizationStatistics_CardTitle","OrganizationStatistics_templateObject","CardContainer","OrganizationStatistics_templateObject2","TopCard","OrganizationStatistics_templateObject3","OrganizationStatistics_optionsMapper","meta","rest","inventory_id","orgsChartMapper","_ref$dates","pieChartMapper","attrName","_ref4$items","OrganizationStatistics_OrganizationStatistics","orgs","setOrgs","setJobs","tasks","setTasks","appNavClick","secondaryNav","marginLeft","Components_NoResults","EmptyState_EmptyState","EmptyStateIcon","search_icon_default","EmptyStateBody","JobStatus_JobStatus","getColor","check_circle_icon_default","exclamation_circle_icon_default","sync_alt_icon_default","exclamation_triangle_icon_default","clock_icon_default","getIcon","str","charAt","toUpperCase","capitalized","oneOf","Components_JobStatus","headerLabels","ExternalLinkIcon","external_link_alt_icon_default","JobExplorerList_DataListCell","DataListCellHeader","JobExplorerList_DataListItemCells","DataListItemCells","JobExplorerList_DataListToggle","DataListToggle","JobExplorerList_buildListRow","ariaLabel","ariaLabelledBy","windowWidth","DataListItemRow","aria-controls","idx","indexOf","newExpanded","toggle","dataListCells","tower_link","fontWeight","org_name","DataListContent","isHidden","created","finished","JobExplorerList_AllJobsTemplate","innerWidth","setWindowWidth","onResize","JobExplorerList_JobExplorerList","_useState5","_useState6","isCompact","labels","JobExplorerList_buildHeader","Components_JobExplorerList","perPageOptions","JobExplorer_optionsMapper","JobExplorer_JobExplorer","_useApi2$$data","_useApi2$$data$meta","currPage","setCurrPage","initialSearchParams","parseBooleans","updateURL","returnOffsetVal","page","handleSetPage","nextOffset","handlePerPageSelect","perPage","Pagination","itemCount","widgetId","onPerPageSelect","onSetPage","pageNumber","ExternalLinkAltIcon","NotificationsList_NotificationDrawerListItem","NotificationDrawerListItem","NotificationsList_NotificationDrawerList","NotificationDrawerList","NotificationsList_stringifyDate","day","moment_default","now","utc","isAfter","diff","isSame","valueOf","NotificationsList_AllNotificationTemplate","notifications","notification_id","tower_url","NotificationDrawerListItemHeader","NotificationDrawerListItemBody","timestamp","NotificationsList_ErrorNotificationTemplate","notification","NotificationsList_NoticeNotificationTemplate","NotificationsList_WarningNotificationTemplate","NotificationsList_NotificationsList","filterBy","Components_NotificationsList","Notifications_CardTitle","Notifications_templateObject","DropdownGroup","Notifications_templateObject2","notificationOptions","disabled","formatClusterName","uuid","install_uuid","notificationsData","setNotificationsData","clusterOptions","setClusterOptions","_useState7","_useState8","selectedCluster","setSelectedCluster","_useState9","_useState10","firstRender","setFirstRender","_useState11","_useState12","setIsLoading","_useState13","_useState14","setMeta","_useState15","_useState16","_ref3$notifications","update","ignore","fetchEndpoints","all","p","_callee2","_context2","_ref5$0$templates","clustersData","_ref5$","_ref5$$notifications","FormSelect","FormSelectOption","isDisabled","NotificationDrawer","trimStr","formatDateTime","formatSeconds","getTotal","capitalize","calculateDelta","convertSecondsToMins","convertMinsToSeconds","convertSecondsToHours","formatJobType","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","isNumeric","dateTime","startOf","datum","s","mins","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateBody_js__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_5__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_5___default"],"mappings":"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,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA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","file":"js/automation_analytics.f637addb30961669c1d6.js","sourcesContent":["import { stringify } from 'query-string';\n\nconst clustersEndpoint = `/api/tower-analytics/v0/clusters/`;\nconst notificationsEndPoint = `/api/tower-analytics/v0/notifications/`;\nconst preflightEndpoint = `/api/tower-analytics/v0/authorized/`;\n\nconst jobExplorerEndpoint = '/api/tower-analytics/v1/job_explorer/';\nconst jobExplorerOptionsEndpoint =\n  '/api/tower-analytics/v1/job_explorer_options/';\nconst ROIEndpoint = '/api/tower-analytics/v1/roi_templates/';\nconst ROITemplatesOptionsEndpoint =\n  '/api/tower-analytics/v1/roi_templates_options/';\nconst orgOptionsEndpoint = `/api/tower-analytics/v1/dashboard_organization_statistics_options/`;\nconst clustersOptionsEndpoint =\n  '/api/tower-analytics/v1/dashboard_clusters_options/';\nconst eventExplorerEndpoint = '/api/tower-analytics/v1/event_explorer/';\n\nfunction getAbsoluteUrl() {\n    const url = window.location.href;\n    let arr = url.split('/');\n    arr.pop();\n    return arr.join('/');\n}\n\nfunction handleResponse(response) {\n    return response.json().then(json => {\n        if (response.ok) {\n            return json;\n        }\n\n        if (response.status === 404 || response.status === 401) {\n            return Promise.reject({\n                status: response.status,\n                message: json\n            });\n        } else {\n            return Promise.reject(json);\n        }\n    });\n}\n\nexport const preflightRequest = () => {\n    return fetch(preflightEndpoint).then(handleResponse);\n};\n\n/* Section: Orgs page */\nexport const readOrgOptions = ({ params = {}}) => {\n    let url = new URL(orgOptionsEndpoint, getAbsoluteUrl());\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readJobsByDateAndOrg = ({ params = {}}) => {\n    const combined = {\n        ...params,\n        attributes: [ 'total_count' ],\n        group_by_time: true,\n        group_by: 'org',\n        sort_by: `total_count:${params.sort_by}`\n    };\n\n    let url = new URL(jobExplorerEndpoint, getAbsoluteUrl());\n    url.search = stringify({\n        limit: combined.limit,\n        sort_by: combined.sort_by\n    });\n\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(combined)\n    }).then(handleResponse);\n};\n\nexport const readJobRunsByOrg = ({ params = {}}) => {\n    const combined = {\n        ...params,\n        group_by: 'org',\n        include_others: true,\n        attributes: [ 'host_count' ],\n        sort_by: `total_count:${params.sort_by}`\n    };\n\n    let url = new URL(jobExplorerEndpoint, getAbsoluteUrl());\n    url.search = stringify({\n        limit: combined.limit,\n        sort_by: combined.sort_by\n    });\n\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(combined)\n    }).then(handleResponse);\n};\n\nexport const readJobEventsByOrg = ({ params = {}}) => {\n    const combined = {\n        ...params,\n        group_by: 'org',\n        include_others: true,\n        granularity: 'daily',\n        attributes: [ 'host_task_count' ],\n        sort_by: `host_task_count:${params.sort_by}`\n    };\n\n    let url = new URL(jobExplorerEndpoint, getAbsoluteUrl());\n    url.search = stringify({\n        limit: combined.limit,\n        sort_by: combined.sort_by\n    });\n\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(combined)\n    }).then(handleResponse);\n};\n/* End of section: Orgs page */\n\n// used in Notifications.js\nexport const readClusters = () => {\n    return fetch(clustersEndpoint).then(handleResponse);\n};\n\nexport const readNotifications = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(notificationsEndPoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readJobExplorerOptions = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(jobExplorerOptionsEndpoint, formattedUrl);\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readClustersOptions = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(clustersOptionsEndpoint, formattedUrl);\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readJobExplorer = ({ params = {}}) => {\n    const { limit, offset, sort_by } = params;\n    const paginationParams = {\n        limit,\n        offset,\n        sort_by\n    };\n    const qs = stringify(paginationParams);\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(jobExplorerEndpoint, formattedUrl);\n    url.search = qs;\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readEventExplorer = ({ params = {}}) => {\n    const { limit, offset, sort_by } = params;\n    const paginationParams = {\n        limit,\n        offset,\n        sort_by\n    };\n    const qs = stringify(paginationParams);\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(eventExplorerEndpoint, formattedUrl);\n    url.search = qs;\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readClustersBarChart = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(jobExplorerEndpoint, formattedUrl);\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readROI = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(ROIEndpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readROIOptions = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(ROITemplatesOptionsEndpoint, formattedUrl);\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n","import { useReducer } from 'react';\nimport moment from 'moment';\n\nimport { formatDate } from '../Utilities/helpers';\n\nexport const useQueryParams = initial => {\n    const paramsReducer = (state, { type, value }) => {\n        switch (type) {\n            /* v0 api reducers */\n            case 'SET_STARTDATE':\n                return { ...state, startDate: value };\n            case 'SET_ENDDATE':\n                return { ...state, endDate: value };\n            case 'SET_ID':\n                if (!parseInt(value)) {\n                    const { id: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, id: parseInt(value) };\n            case 'SET_LIMIT':\n                if (!parseInt(value.limit)) {\n                    const { limit: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, limit: parseInt(value.limit) };\n            case 'SET_SEVERITY':\n                if (value.severity === '') {\n                    const { severity: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, ...value };\n\n                /* v1 api reducers */\n            case 'SET_OFFSET':\n            case 'SET_ATTRIBUTES':\n            case 'SET_JOB_TYPE':\n            case 'SET_STATUS':\n            case 'SET_ORG':\n            case 'SET_CLUSTER':\n            case 'SET_TEMPLATE':\n            case 'SET_SORTBY':\n            case 'SET_ROOT_WORKFLOWS_AND_JOBS':\n                return { ...state, ...value };\n            case 'SET_QUICK_DATE_RANGE': {\n                let newState = { ...state };\n                if (value !== 'custom') {\n                    newState = { ...newState, start_date: null, end_date: null };\n                }\n\n                newState = { ...newState, ...value };\n                return newState;\n            }\n\n            case 'SET_START_DATE':\n            case 'SET_END_DATE': {\n                let newValues = {};\n                Object.entries(value).forEach(([ key, value ]) => {\n                    newValues[key] = formatDate(value);\n                });\n                return { ...state, ...newValues };\n            }\n\n            case 'RESET_FILTER':\n                return {\n                    ...state,\n                    ...initial\n                };\n            default:\n                throw new Error();\n        }\n    };\n\n    const [ queryParams, dispatch ] = useReducer(paramsReducer, { ...initial });\n\n    const actionMapper = {\n        status: 'SET_STATUS',\n        quick_date_range: 'SET_QUICK_DATE_RANGE',\n        job_type: 'SET_JOB_TYPE',\n        org_id: 'SET_ORG',\n        cluster_id: 'SET_CLUSTER',\n        template_id: 'SET_TEMPLATE',\n        sort_by: 'SET_SORTBY',\n        start_date: 'SET_START_DATE',\n        end_date: 'SET_END_DATE',\n        only_root_workflows_and_standalone_jobs: 'SET_ROOT_WORKFLOWS_AND_JOBS'\n    };\n\n    return {\n        queryParams,\n        dispatch,\n        setLimit: limit => dispatch({ type: 'SET_LIMIT', value: { limit }}),\n        setOffset: offset => dispatch({ type: 'SET_OFFSET', value: { offset }}),\n        setFromToolbar: (varName, value = null) => {\n            if (!varName) {\n                dispatch({ type: 'RESET_FILTER' });\n            } else {\n                dispatch({ type: actionMapper[varName], value: { [varName]: value }});\n            }\n        },\n        /* v0 api usage after this line */\n        setSeverity: severity =>\n            dispatch({ type: 'SET_SEVERITY', value: { severity }}),\n        setEndDate: () => {\n            const endDate = moment().format('YYYY-MM-DD');\n            dispatch({ type: 'SET_ENDDATE', value: endDate });\n        },\n        setId: value => dispatch({ type: 'SET_ID', value }),\n        setStartDate: days => {\n            let startDate;\n            if (days === 7) {\n                startDate = moment()\n                .subtract(1, 'week')\n                .format('YYYY-MM-DD');\n            }\n\n            if (days === 14) {\n                startDate = moment()\n                .subtract(2, 'weeks')\n                .format('YYYY-MM-DD');\n            }\n\n            if (days === 31) {\n                startDate = moment()\n                .subtract(1, 'month')\n                .format('YYYY-MM-DD');\n            } else {\n                startDate = moment()\n                .subtract(days, 'days')\n                .format('YYYY-MM-DD');\n            }\n\n            dispatch({ type: 'SET_STARTDATE', value: startDate });\n        },\n        setStartDateAsString: value => dispatch({ type: 'SET_STARTDATE', value })\n    };\n};\n","/*eslint max-len: [\"error\", { \"ignoreStrings\": true }]*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Button,\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { WrenchIcon } from '@patternfly/react-icons';\n\nconst DefaultEmptyState = ({ preflightError: error }) => (\n    <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={WrenchIcon} />\n        {error.status === 404 && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n          No data found\n                </Title>\n                <EmptyStateBody>\n          Please visit{' '}\n                    <a\n                        href=\"https://docs.ansible.com/ansible-tower/latest/html/administration/usability_data_collection.html#automation-analytics\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n            here\n                    </a>{' '}\n          to learn how to enable Automation Analytics.\n                </EmptyStateBody>\n            </>\n        )}\n        {error.status === 401 && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n          Not authorized\n                </Title>\n                <EmptyStateBody>\n          You do not have the correct permissions to view this page.\n                </EmptyStateBody>\n            </>\n        )}\n        {!error.status && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n          Something went wrong, please try reloading the page\n                </Title>\n                <Button variant=\"primary\" onClick={() => window.location.reload()}>\n          Reload\n                </Button>\n            </>\n        )}\n    </EmptyState>\n);\n\nDefaultEmptyState.propTypes = {\n    preflightError: PropTypes.object\n};\n\nexport default DefaultEmptyState;\n","export const jobExplorer = {\n    attributes: [\n        'id',\n        'status',\n        'job_type',\n        'started',\n        'finished',\n        'elapsed',\n        'created',\n        'cluster_name',\n        'org_name',\n        'most_failed_tasks'\n    ],\n    defaultParams: {\n        status: [ 'successful', 'failed' ],\n        quick_date_range: 'last_30_days',\n        job_type: [ 'workflowjob', 'job' ],\n        org_id: [],\n        cluster_id: [],\n        template_id: [],\n        sort_by: 'created:desc',\n        start_date: null,\n        end_date: null,\n        only_root_workflows_and_standalone_jobs: false,\n        limit: 5\n    }\n};\n\nexport const roi = {\n    defaultParams: {\n        status: [ 'successful' ],\n        org_id: [],\n        cluster_id: [],\n        template_id: [],\n        quick_date_range: 'roi_last_year',\n        job_type: [ 'job' ],\n        sort_by: 'template_productivity_score:desc',\n        start_date: null,\n        end_date: null,\n        limit: 25,\n        only_root_workflows_and_standalone_jobs: true,\n        attributes: [\n            'successful_hosts_total',\n            'successful_elapsed_total',\n            'total_org_count',\n            'total_cluster_count'\n        ],\n        group_by: 'template',\n        group_by_time: false,\n        granularity: 'monthly'\n    }\n};\n\nexport const organizationStatistics = {\n    defaultParams: {\n        status: [],\n        org_id: [],\n        quick_date_range: 'last_30_days',\n        sort_by: 'desc',\n        limit: 5,\n        job_type: [ 'workflowjob', 'job' ],\n        cluster_id: [],\n        template_id: [],\n        start_date: null,\n        end_date: null\n    }\n};\n\nexport const clusters = {\n    defaultParams: {\n        status: [ 'successful', 'failed' ],\n        quick_date_range: 'last_30_days',\n        job_type: [ 'workflowjob', 'job' ],\n        group_by_time: true,\n        org_id: [],\n        cluster_id: [],\n        template_id: [],\n        only_root_workflows_and_standalone_jobs: false\n    }\n};\n","import { useState, useEffect, useReducer } from 'react';\n\nconst dataFetchReducer = (state, action) => {\n    switch (action.type) {\n        case 'FETCH_INIT':\n            return {\n                ...state,\n                isLoading: true,\n                isSuccess: false,\n                error: null\n            };\n        case 'FETCH_SUCCESS':\n            return {\n                ...state,\n                isLoading: false,\n                isSuccess: true,\n                error: null,\n                data: action.payload\n            };\n        case 'FETCH_FAILURE':\n            return {\n                ...state,\n                isLoading: false,\n                isSuccess: false,\n                error: action.payload\n            };\n        case 'UPDATE_DATA':\n            return {\n                ...state,\n                data: action.payload\n            };\n        default:\n            throw new Error();\n    }\n};\n\nconst useApi = (initialData, postprocess = d => d) => {\n    const [ request, setRequest ] = useState(null);\n\n    const [ state, dispatch ] = useReducer(dataFetchReducer, {\n        isLoading: false,\n        isSuccess: false,\n        error: null,\n        data: initialData\n    });\n\n    useEffect(() => {\n    // Prevent fetching nothing\n        if (!request) {\n            return;\n        }\n\n        // Initialize\n        let didCancel = false;\n        dispatch({ type: 'FETCH_INIT' });\n\n        // Fetching\n        window.insights.chrome.auth.getUser().then(() =>\n            request\n            .then(data => {\n                if (!didCancel) {\n                    dispatch({\n                        type: 'FETCH_SUCCESS',\n                        payload: postprocess(data)\n                    });\n                }\n            })\n            .catch(e => {\n                if (!didCancel) {\n                    dispatch({ type: 'FETCH_FAILURE', payload: e });\n                }\n            })\n        );\n\n        return () => {\n            didCancel = true;\n        };\n    }, [ request ]);\n\n    const setData = data => {\n        dispatch({ type: 'UPDATE_DATA', payload: data });\n    };\n\n    return [ state, setRequest, setData ];\n};\n\nexport default useApi;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nconst initializeChart = Chart => {\n    const BaseChart = props => {\n        const { id, margin } = props;\n\n        const getWidth = () => {\n            let width;\n            width =\n        parseInt(d3.select('#' + id).style('width')) -\n          margin.left -\n          margin.right || 700;\n            return width;\n        };\n\n        const getHeight = () => {\n            let height;\n            height =\n        parseInt(d3.select('#' + id).style('height')) -\n          margin.top -\n          margin.bottom || 450;\n            return height;\n        };\n\n        return <Chart {...props} getWidth={getWidth} getHeight={getHeight} />;\n    };\n\n    BaseChart.propTypes = {\n        id: PropTypes.string,\n        margin: PropTypes.object\n    };\n\n    return BaseChart;\n};\n\ninitializeChart.propTypes = {\n    Chart: PropTypes.element\n};\n\nexport default initializeChart;\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst NoData = () => (\n    <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={CubesIcon} />\n        <Title headingLevel=\"h5\" size=\"lg\">\n      No Data\n        </Title>\n    </EmptyState>\n);\n\nexport default NoData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateIcon,\n    EmptyStateVariant,\n    Title\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { global_danger_color_200 as globalDangerColor200 } from '@patternfly/react-tokens';\n\nconst ApiErrorState = ({ message }) => (\n    <EmptyState variant={EmptyStateVariant.small}>\n        <EmptyStateIcon\n            icon={ExclamationCircleIcon}\n            color={globalDangerColor200.value}\n        />\n        <Title headingLevel=\"h2\" size=\"lg\">\n      Error\n        </Title>\n        <EmptyStateBody>{message}</EmptyStateBody>\n    </EmptyState>\n);\n\nApiErrorState.propTypes = {\n    message: PropTypes.string\n};\n\nexport default ApiErrorState;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarItem, Select, SelectOption } from '@patternfly/react-core';\n\nconst CategoryDropdown = ({\n    selected,\n    setSelected = () => {},\n    categories = []\n}) => {\n    const [ isExpanded, setIsExpanded ] = useState(false);\n\n    return (\n        <ToolbarItem>\n            <Select\n                isOpen={isExpanded}\n                variant={'single'}\n                aria-label={'Categories'}\n                onToggle={() => setIsExpanded(!isExpanded)}\n                onSelect={(_event, selection) => {\n                    setSelected(selection);\n                    setIsExpanded(false);\n                }}\n                selections={selected}\n                placeholderText={'Filter by'}\n            >\n                {categories.map(({ key, name }) => (\n                    <SelectOption key={key} value={key}>\n                        {name}\n                    </SelectOption>\n                ))}\n            </Select>\n        </ToolbarItem>\n    );\n};\n\nCategoryDropdown.propTypes = {\n    categories: PropTypes.array,\n    selected: PropTypes.string,\n    setSelected: PropTypes.func\n};\n\nexport default CategoryDropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, TextInput } from '@patternfly/react-core';\n\nconst CustomDateSelector = ({\n    onInputChange = () => {},\n    startDate = '',\n    endDate = ''\n}) => {\n    return (\n        <>\n            <InputGroup>\n                <TextInput\n                    name=\"startDate\"\n                    id=\"startDate\"\n                    type=\"date\"\n                    aria-label=\"Start Date\"\n                    value={startDate}\n                    onChange={e => onInputChange('start_date', e)}\n                />\n            </InputGroup>\n            <InputGroup>\n                <TextInput\n                    name=\"endDate\"\n                    id=\"endDate\"\n                    type=\"date\"\n                    aria-label=\"End Date\"\n                    value={endDate}\n                    onChange={e => onInputChange('end_date', e)}\n                />\n            </InputGroup>\n        </>\n    );\n};\n\nCustomDateSelector.propTypes = {\n    startDate: PropTypes.string,\n    endDate: PropTypes.string,\n    onInputChange: PropTypes.func\n};\n\nexport default CustomDateSelector;\n","export const optionsForCategories = {\n    status: {\n        isSingle: false,\n        name: 'Status',\n        placeholder: 'Filter by job status'\n    },\n    quick_date_range: {\n        isSingle: true,\n        name: 'Date',\n        placeholder: 'Filter by date'\n    },\n    job_type: {\n        isSingle: false,\n        name: 'Job',\n        placeholder: 'Filter by job type'\n    },\n    org_id: {\n        isSingle: false,\n        name: 'Organization',\n        placeholder: 'Filter by organization'\n    },\n    cluster_id: {\n        isSingle: false,\n        name: 'Cluster',\n        placeholder: 'Filter by cluster'\n    },\n    template_id: {\n        isSingle: false,\n        name: 'Template',\n        placeholder: 'Filter by template'\n    },\n    sort_by: {\n        isSingle: true,\n        name: 'Sort by',\n        placeholder: 'Sort by attribute'\n    }\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ToolbarFilter,\n    Select,\n    SelectOption\n} from '@patternfly/react-core';\n\nimport {\n    handleCheckboxChips,\n    handleSingleChips\n} from './helpers';\nimport { optionsForCategories } from './constants';\n\nconst renderValues = values =>\n    values && values.map(({ key, value, description }) => (\n        <SelectOption key={ key } value={ key } description={ description }>\n            { value }\n        </SelectOption>\n    ));\n\nconst ToolbarFilterItem = ({\n    categoryKey,\n    filter = null,\n    values = [],\n    isVisible = true,\n    hasChips = true,\n    setFilter\n}) => {\n    const [ expanded, setExpanded ] = useState(false);\n    const options = optionsForCategories[categoryKey];\n\n    const onDelete = (name, valueToDelete) => {\n        const single = optionsForCategories[categoryKey].isSingle;\n\n        if (single) {\n            setFilter(null);\n        } else {\n            const keyToDelete = values.find(({ value }) => value === valueToDelete)\n            .key;\n            const filteredArr = filter.filter(value => value !== keyToDelete);\n            setFilter(filteredArr);\n        }\n    };\n\n    const handleChips = () => {\n        if (options.isSingle) {\n            return handleSingleChips(filter, values);\n        } else {\n            return handleCheckboxChips(filter, values);\n        }\n    };\n\n    const onSelect = (event, selection) => {\n        if (options.isSingle) {\n            setFilter(selection);\n            setExpanded(false);\n        } else {\n            setFilter(!filter.includes(selection)\n                ? [ ...filter, selection ]\n                : filter.filter(value => value !== selection)\n            );\n        }\n    };\n\n    const onFilter = event => {\n        const textInput = event.target.value;\n        if (textInput === '') {\n            return renderValues(values);\n        } else {\n            return renderValues(\n                values.filter(({ value }) =>\n                    value.toLowerCase().includes(textInput.toLowerCase())\n                )\n            );\n        }\n    };\n\n    return (\n        <ToolbarFilter\n            data-cy={categoryKey}\n            key={categoryKey}\n            showToolbarItem={isVisible}\n            chips={hasChips ? handleChips() : []}\n            categoryName={options.name}\n            deleteChip={hasChips ? onDelete : null}\n        >\n            <Select\n                variant={ options.isSingle ? 'single' : 'checkbox' }\n                aria-label={ categoryKey }\n                onToggle={ () => setExpanded(!expanded) }\n                onSelect={ onSelect }\n                selections={ filter }\n                isOpen={ expanded }\n                onFilter={ onFilter }\n                hasInlineFilter\n                placeholderText={ options.placeholder }\n            >\n                { renderValues(values) }\n            </Select>\n        </ToolbarFilter>\n    );\n};\n\nToolbarFilterItem.propTypes = {\n    categoryKey: PropTypes.string.isRequired,\n    filter: PropTypes.any,\n    values: PropTypes.array,\n    isVisible: PropTypes.bool,\n    hasChips: PropTypes.bool,\n    setFilter: PropTypes.func.isRequired\n};\n\nexport default ToolbarFilterItem;\n","/**\n * Get comparator values if their key is in the item list\n */\nexport const handleCheckboxChips = (item, comparator) => {\n    if (item && comparator) {\n        return item.reduce((acc, i) => {\n            Number.isInteger(parseInt(i)) ? (i = parseInt(i)) : i;\n\n            comparator.forEach(cmpItem => {\n                if (cmpItem.key === i) {\n                    acc.push(cmpItem.value);\n                }\n            });\n\n            return acc;\n        }, []);\n    }\n\n    return [];\n};\n\n/**\n * Convert a list of objects to a list of the last value if defined\n */\nexport const handleSingleChips = (item, comparator) => {\n    if (item && typeof item === 'string' && comparator) {\n        let val;\n        comparator.forEach(i => {\n            if (i.key === item) {\n                val = i.value;\n            }\n        });\n\n        if (val !== undefined) {\n            return [ val ];\n        }\n    }\n\n    return [];\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Toolbar,\n    ToolbarContent,\n    ToolbarGroup,\n    Button,\n    ToolbarItem,\n    Tooltip,\n    Switch\n} from '@patternfly/react-core';\nimport {\n    Card,\n    CardTitle,\n    CardBody,\n    CardActions,\n    CardHeader\n} from '@patternfly/react-core';\nimport {\n    FilterIcon,\n    SortAmountDownIcon,\n    CogIcon,\n    QuestionCircleIcon,\n    TimesIcon\n} from '@patternfly/react-icons';\n\nimport CategoryDropdown from './CategoryDropdown';\nimport CustomDateSelector from './CustomDateSelector';\nimport { optionsForCategories } from './constants';\nimport ToolbarFilterItem from './ToolbarFilterItem';\n\nconst FilterableToolbar = ({\n    categories,\n    filters,\n    setFilters,\n    pagination = null,\n    hasSettings = false\n}) => {\n    const [ settingsExpanded, setSettingsExpanded ] = useState(false);\n    const { quick_date_range, sort_by, ...restCategories } = categories;\n\n    // Filter out elements which are not in the option object.\n    const filterCategories = Object.keys(restCategories)\n    .filter(key => Object.keys(optionsForCategories).includes(key))\n    .reduce((obj, key) => {\n        obj[key] = restCategories[key];\n        return obj;\n    }, {});\n\n    const [ currentCategory, setCurrentCategory ] = useState(\n        Object.keys(filterCategories)[0]\n    );\n\n    const onInputChange = (type, value) => {\n        setFilters(type, value);\n    };\n\n    const FilterCategoriesGroup = () => (\n        <ToolbarGroup variant=\"filter-group\">\n            <CategoryDropdown\n                selected={currentCategory}\n                setSelected={setCurrentCategory}\n                categories={Object.keys(filterCategories).map(el => ({\n                    key: el,\n                    name: optionsForCategories[el].name\n                }))}\n            />\n            {Object.keys(filterCategories).map(key => (\n                <ToolbarFilterItem\n                    key={key}\n                    categoryKey={key}\n                    filter={filters[key]}\n                    values={categories[key]}\n                    isVisible={currentCategory === key}\n                    setFilter={value => setFilters(key, value)}\n                />\n            ))}\n        </ToolbarGroup>\n    );\n\n    const QuickDateGroup = () => (\n        <ToolbarGroup variant=\"filter-group\">\n            <ToolbarFilterItem\n                categoryKey=\"quick_date_range\"\n                filter={filters.quick_date_range}\n                values={quick_date_range}\n                setFilter={value => setFilters('quick_date_range', value)}\n                hasChips={false}\n            />\n            {filters.quick_date_range === 'custom' && (\n                <CustomDateSelector\n                    startDate={filters.start_date ? filters.start_date : ''}\n                    endDate={filters.end_date ? filters.end_date : ''}\n                    onInputChange={onInputChange}\n                />\n            )}\n        </ToolbarGroup>\n    );\n\n    const SortByGroup = () => (\n        <ToolbarGroup variant=\"filter-group\">\n            <ToolbarFilterItem\n                categoryKey=\"sort_by\"\n                filter={filters.sort_by}\n                values={sort_by}\n                setFilter={value => setFilters('sort_by', value)}\n                hasChips={false}\n            />\n            <Button variant=\"control\">\n                <SortAmountDownIcon />\n            </Button>\n        </ToolbarGroup>\n    );\n\n    /* TODO: For future work: make settings more modular for different pages */\n    const Settings = () => (\n        <Card isFlat style={{ backgroundColor: '#EEEEEE' }}>\n            <CardHeader>\n                <CardActions>\n                    <Button\n                        variant=\"plain\"\n                        onClick={() => setSettingsExpanded(!settingsExpanded)}\n                    >\n                        <TimesIcon />\n                    </Button>\n                </CardActions>\n                <CardTitle>Settings</CardTitle>\n            </CardHeader>\n            <CardBody>\n                <Switch\n                    id=\"showRootWorkflowJobs\"\n                    label=\"Ignore nested workflows and jobs\"\n                    labelOff=\"Ignore nested workflows and jobs\"\n                    isChecked={filters.only_root_workflows_and_standalone_jobs}\n                    onChange={val => {\n                        setFilters('only_root_workflows_and_standalone_jobs', val);\n                    }}\n                />\n                <Tooltip\n                    position={'top'}\n                    content={\n                        <div>\n                            {' '}\n              If enabled, nested workflows and jobs will not be included in the\n              overall totals. Enable this option to filter out duplicate\n              entries.\n                        </div>\n                    }\n                >\n                    <QuestionCircleIcon />\n                </Tooltip>\n            </CardBody>\n        </Card>\n    );\n\n    return (\n        <>\n            <Toolbar\n                id=\"filterable-toolbar-with-chip-groups\"\n                clearAllFilters={() => {\n                    setFilters(null, null);\n                }}\n                collapseListedFiltersBreakpoint=\"xl\"\n            >\n                <ToolbarContent>\n                    <Button variant=\"control\">\n                        <FilterIcon />\n                    </Button>\n                    {Object.keys(filterCategories).length > 0 && (\n                        <FilterCategoriesGroup />\n                    )}\n                    {quick_date_range && <QuickDateGroup />}\n                    {sort_by && <SortByGroup />}\n                    {hasSettings && (\n                        <ToolbarItem>\n                            <Button\n                                variant=\"plain\"\n                                onClick={() => setSettingsExpanded(!settingsExpanded)}\n                                aria-label=\"settings\"\n                                isActive={settingsExpanded}\n                            >\n                                <CogIcon />\n                            </Button>\n                        </ToolbarItem>\n                    )}\n                    {pagination && (\n                        <ToolbarItem\n                            variant=\"pagination\"\n                            visibility={{ default: 'hidden', lg: 'visible' }}\n                        >\n                            {pagination}\n                        </ToolbarItem>\n                    )}\n                </ToolbarContent>\n                {settingsExpanded && <Settings />}\n            </Toolbar>\n        </>\n    );\n};\n\nFilterableToolbar.propTypes = {\n    categories: PropTypes.object.isRequired,\n    filters: PropTypes.object.isRequired,\n    setFilters: PropTypes.func.isRequired,\n    pagination: PropTypes.object,\n    hasSettings: PropTypes.bool\n};\n\nexport default FilterableToolbar;\n","import Toolbar from './Toolbar';\n\nexport default Toolbar;\n","var map = {\n\t\"./af\": 186,\n\t\"./af.js\": 186,\n\t\"./ar\": 187,\n\t\"./ar-dz\": 188,\n\t\"./ar-dz.js\": 188,\n\t\"./ar-kw\": 189,\n\t\"./ar-kw.js\": 189,\n\t\"./ar-ly\": 190,\n\t\"./ar-ly.js\": 190,\n\t\"./ar-ma\": 191,\n\t\"./ar-ma.js\": 191,\n\t\"./ar-sa\": 192,\n\t\"./ar-sa.js\": 192,\n\t\"./ar-tn\": 193,\n\t\"./ar-tn.js\": 193,\n\t\"./ar.js\": 187,\n\t\"./az\": 194,\n\t\"./az.js\": 194,\n\t\"./be\": 195,\n\t\"./be.js\": 195,\n\t\"./bg\": 196,\n\t\"./bg.js\": 196,\n\t\"./bm\": 197,\n\t\"./bm.js\": 197,\n\t\"./bn\": 198,\n\t\"./bn.js\": 198,\n\t\"./bo\": 199,\n\t\"./bo.js\": 199,\n\t\"./br\": 200,\n\t\"./br.js\": 200,\n\t\"./bs\": 201,\n\t\"./bs.js\": 201,\n\t\"./ca\": 202,\n\t\"./ca.js\": 202,\n\t\"./cs\": 203,\n\t\"./cs.js\": 203,\n\t\"./cv\": 204,\n\t\"./cv.js\": 204,\n\t\"./cy\": 205,\n\t\"./cy.js\": 205,\n\t\"./da\": 206,\n\t\"./da.js\": 206,\n\t\"./de\": 207,\n\t\"./de-at\": 208,\n\t\"./de-at.js\": 208,\n\t\"./de-ch\": 209,\n\t\"./de-ch.js\": 209,\n\t\"./de.js\": 207,\n\t\"./dv\": 210,\n\t\"./dv.js\": 210,\n\t\"./el\": 211,\n\t\"./el.js\": 211,\n\t\"./en-SG\": 212,\n\t\"./en-SG.js\": 212,\n\t\"./en-au\": 213,\n\t\"./en-au.js\": 213,\n\t\"./en-ca\": 214,\n\t\"./en-ca.js\": 214,\n\t\"./en-gb\": 215,\n\t\"./en-gb.js\": 215,\n\t\"./en-ie\": 216,\n\t\"./en-ie.js\": 216,\n\t\"./en-il\": 217,\n\t\"./en-il.js\": 217,\n\t\"./en-nz\": 218,\n\t\"./en-nz.js\": 218,\n\t\"./eo\": 219,\n\t\"./eo.js\": 219,\n\t\"./es\": 220,\n\t\"./es-do\": 221,\n\t\"./es-do.js\": 221,\n\t\"./es-us\": 222,\n\t\"./es-us.js\": 222,\n\t\"./es.js\": 220,\n\t\"./et\": 223,\n\t\"./et.js\": 223,\n\t\"./eu\": 224,\n\t\"./eu.js\": 224,\n\t\"./fa\": 225,\n\t\"./fa.js\": 225,\n\t\"./fi\": 226,\n\t\"./fi.js\": 226,\n\t\"./fo\": 227,\n\t\"./fo.js\": 227,\n\t\"./fr\": 228,\n\t\"./fr-ca\": 229,\n\t\"./fr-ca.js\": 229,\n\t\"./fr-ch\": 230,\n\t\"./fr-ch.js\": 230,\n\t\"./fr.js\": 228,\n\t\"./fy\": 231,\n\t\"./fy.js\": 231,\n\t\"./ga\": 232,\n\t\"./ga.js\": 232,\n\t\"./gd\": 233,\n\t\"./gd.js\": 233,\n\t\"./gl\": 234,\n\t\"./gl.js\": 234,\n\t\"./gom-latn\": 235,\n\t\"./gom-latn.js\": 235,\n\t\"./gu\": 236,\n\t\"./gu.js\": 236,\n\t\"./he\": 237,\n\t\"./he.js\": 237,\n\t\"./hi\": 238,\n\t\"./hi.js\": 238,\n\t\"./hr\": 239,\n\t\"./hr.js\": 239,\n\t\"./hu\": 240,\n\t\"./hu.js\": 240,\n\t\"./hy-am\": 241,\n\t\"./hy-am.js\": 241,\n\t\"./id\": 242,\n\t\"./id.js\": 242,\n\t\"./is\": 243,\n\t\"./is.js\": 243,\n\t\"./it\": 244,\n\t\"./it-ch\": 245,\n\t\"./it-ch.js\": 245,\n\t\"./it.js\": 244,\n\t\"./ja\": 246,\n\t\"./ja.js\": 246,\n\t\"./jv\": 247,\n\t\"./jv.js\": 247,\n\t\"./ka\": 248,\n\t\"./ka.js\": 248,\n\t\"./kk\": 249,\n\t\"./kk.js\": 249,\n\t\"./km\": 250,\n\t\"./km.js\": 250,\n\t\"./kn\": 251,\n\t\"./kn.js\": 251,\n\t\"./ko\": 252,\n\t\"./ko.js\": 252,\n\t\"./ku\": 253,\n\t\"./ku.js\": 253,\n\t\"./ky\": 254,\n\t\"./ky.js\": 254,\n\t\"./lb\": 255,\n\t\"./lb.js\": 255,\n\t\"./lo\": 256,\n\t\"./lo.js\": 256,\n\t\"./lt\": 257,\n\t\"./lt.js\": 257,\n\t\"./lv\": 258,\n\t\"./lv.js\": 258,\n\t\"./me\": 259,\n\t\"./me.js\": 259,\n\t\"./mi\": 260,\n\t\"./mi.js\": 260,\n\t\"./mk\": 261,\n\t\"./mk.js\": 261,\n\t\"./ml\": 262,\n\t\"./ml.js\": 262,\n\t\"./mn\": 263,\n\t\"./mn.js\": 263,\n\t\"./mr\": 264,\n\t\"./mr.js\": 264,\n\t\"./ms\": 265,\n\t\"./ms-my\": 266,\n\t\"./ms-my.js\": 266,\n\t\"./ms.js\": 265,\n\t\"./mt\": 267,\n\t\"./mt.js\": 267,\n\t\"./my\": 268,\n\t\"./my.js\": 268,\n\t\"./nb\": 269,\n\t\"./nb.js\": 269,\n\t\"./ne\": 270,\n\t\"./ne.js\": 270,\n\t\"./nl\": 271,\n\t\"./nl-be\": 272,\n\t\"./nl-be.js\": 272,\n\t\"./nl.js\": 271,\n\t\"./nn\": 273,\n\t\"./nn.js\": 273,\n\t\"./pa-in\": 274,\n\t\"./pa-in.js\": 274,\n\t\"./pl\": 275,\n\t\"./pl.js\": 275,\n\t\"./pt\": 276,\n\t\"./pt-br\": 277,\n\t\"./pt-br.js\": 277,\n\t\"./pt.js\": 276,\n\t\"./ro\": 278,\n\t\"./ro.js\": 278,\n\t\"./ru\": 279,\n\t\"./ru.js\": 279,\n\t\"./sd\": 280,\n\t\"./sd.js\": 280,\n\t\"./se\": 281,\n\t\"./se.js\": 281,\n\t\"./si\": 282,\n\t\"./si.js\": 282,\n\t\"./sk\": 283,\n\t\"./sk.js\": 283,\n\t\"./sl\": 284,\n\t\"./sl.js\": 284,\n\t\"./sq\": 285,\n\t\"./sq.js\": 285,\n\t\"./sr\": 286,\n\t\"./sr-cyrl\": 287,\n\t\"./sr-cyrl.js\": 287,\n\t\"./sr.js\": 286,\n\t\"./ss\": 288,\n\t\"./ss.js\": 288,\n\t\"./sv\": 289,\n\t\"./sv.js\": 289,\n\t\"./sw\": 290,\n\t\"./sw.js\": 290,\n\t\"./ta\": 291,\n\t\"./ta.js\": 291,\n\t\"./te\": 292,\n\t\"./te.js\": 292,\n\t\"./tet\": 293,\n\t\"./tet.js\": 293,\n\t\"./tg\": 294,\n\t\"./tg.js\": 294,\n\t\"./th\": 295,\n\t\"./th.js\": 295,\n\t\"./tl-ph\": 296,\n\t\"./tl-ph.js\": 296,\n\t\"./tlh\": 297,\n\t\"./tlh.js\": 297,\n\t\"./tr\": 298,\n\t\"./tr.js\": 298,\n\t\"./tzl\": 299,\n\t\"./tzl.js\": 299,\n\t\"./tzm\": 300,\n\t\"./tzm-latn\": 301,\n\t\"./tzm-latn.js\": 301,\n\t\"./tzm.js\": 300,\n\t\"./ug-cn\": 302,\n\t\"./ug-cn.js\": 302,\n\t\"./uk\": 303,\n\t\"./uk.js\": 303,\n\t\"./ur\": 304,\n\t\"./ur.js\": 304,\n\t\"./uz\": 305,\n\t\"./uz-latn\": 306,\n\t\"./uz-latn.js\": 306,\n\t\"./uz.js\": 305,\n\t\"./vi\": 307,\n\t\"./vi.js\": 307,\n\t\"./x-pseudo\": 308,\n\t\"./x-pseudo.js\": 308,\n\t\"./yo\": 309,\n\t\"./yo.js\": 309,\n\t\"./zh-cn\": 310,\n\t\"./zh-cn.js\": 310,\n\t\"./zh-hk\": 311,\n\t\"./zh-hk.js\": 311,\n\t\"./zh-tw\": 312,\n\t\"./zh-tw.js\": 312\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 347;","import { Paths } from '../paths';\nimport { stringify } from 'query-string';\n\nconst useRedirect = (history, path) => query => {\n    const search = stringify(query, { arrayFormat: 'bracket' });\n    history.push({\n        pathname: Paths[path],\n        search\n    });\n};\n\nexport default useRedirect;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        this.draw();\n    }\n\n    formatDollars(amount) {\n        return parseFloat(amount)\n        .toFixed(2)\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    }\n\n    draw() {\n        this.width = 125;\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip-base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 125;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, 0) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', 92)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.name = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', -2)\n        .text('Template name');\n        this.savings = this.toolTipBase\n        .append('text')\n        .attr('x', 20)\n        .attr('y', 52)\n        .attr('font-size', 12)\n        .attr('font-weight', 'bold')\n        .attr('fill', 'white')\n        .text('Total savings $0');\n        this.manualCost = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', 16)\n        .text('Manual cost $0');\n        this.automationCost = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', 34)\n        .text('Automation cost $0');\n    }\n\n  handleMouseOver = d => {\n      let name;\n      let savings;\n      let manualCost;\n      let automationCost;\n      const scrollLeftOffset = d3.select('#d3-roi-chart-root').node().scrollLeft;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10 +\n      scrollLeftOffset;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      30;\n      if (!d) {\n          return;\n      } else {\n          savings = this.formatDollars(d.delta);\n          name = d.name;\n          manualCost = this.formatDollars(d.manualCost);\n          automationCost = this.formatDollars(d.automatedCost);\n      }\n\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n      this.name.text('' + name);\n      this.savings.text('Total savings $' + savings);\n      this.manualCost.text('Manual Cost $' + manualCost);\n      this.automationCost.text('Automation Cost $' + automationCost);\n      this.nameWidth = this.name.node().getComputedTextLength();\n      this.savingsWidth = this.savings.node().getComputedTextLength();\n      this.manualCostWidth = this.manualCost.node().getComputedTextLength();\n      this.automationCostWidth = this.automationCost\n      .node()\n      .getComputedTextLength();\n      this.widestTextElem = d3.max([\n          this.nameWidth,\n          this.savingsWidth,\n          this.automationCostWidth,\n          this.manualCostWidth\n      ]);\n\n      const maxTextPerc = (this.widestTextElem / this.boxWidth) * 100;\n      const threshold = 85;\n      const overage = maxTextPerc / threshold;\n      let adjustedWidth;\n      if (maxTextPerc > threshold) {\n          adjustedWidth = this.boxWidth * overage;\n      } else {\n          adjustedWidth = this.boxWidth;\n      }\n\n      this.boundingBox.attr('width', adjustedWidth);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, 15) rotate(45)');\n          this.boundingBox.attr('x', -adjustedWidth - 20);\n          this.name.attr('x', -(toolTipWidth - 7));\n          this.savings.attr('x', -(toolTipWidth - 7));\n          this.manualCost.attr('x', -(toolTipWidth - 7));\n          this.automationCost.attr('x', -(toolTipWidth - 7));\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, 15) rotate(45)');\n          this.boundingBox.attr('x', 10);\n          this.name.attr('x', 20);\n          this.savings.attr('x', 20);\n          this.manualCost.attr('x', 20);\n          this.automationCost.attr('x', 20);\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass TopTemplatesSavings extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.state = {\n            timeout: null\n        };\n    }\n\n    // Methods\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => {\n                this.init();\n            }, 500)\n        });\n    }\n\n    init() {\n        this.draw();\n    }\n\n    draw() {\n    // Use PF chart color\n        const color = '#0066CC'; //blue\n        // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const { data } = this.props;\n        let width;\n        // adjust chart width to support larger datasets\n        if (data.length >= 15) {\n            const containerWidth = d3.select('.automation-wrapper').node();\n            width =\n        containerWidth.getBoundingClientRect().width -\n        this.props.margin.left -\n        this.props.margin.right;\n        } else {\n            width = this.props.getWidth();\n        }\n\n        const height = this.props.getHeight();\n        const x = d3\n        .scaleBand()\n        .rangeRound([ 0, width ])\n        .padding(0.45);\n        const y = d3.scaleLinear().range([ height, 0 ]);\n        // format our X Axis ticks\n        let ticks;\n        ticks = data.map(d => d.name);\n        const formatYAxisValue = d3.format('.2s');\n        const xAxis = d3.axisBottom(x).tickValues(ticks);\n\n        const yAxis = d3\n        .axisLeft(y)\n        .ticks(8)\n        .tickFormat(d => formatYAxisValue(d).replace('G', 'B'))\n        .tickSize(-width, 0, 0);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n\n        const taskNames = data.map(d => d.name);\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id\n        });\n        x.domain(taskNames);\n        y.domain([ 0, d3.max(data, d => d.delta * 1.15) || 8 ]);\n\n        // add y axis\n        svg\n        .append('g')\n        .attr('class', 'y axis')\n        .call(yAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7')\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 6)\n        .attr('dy', '.71em')\n        .style('text-anchor', 'end')\n        .style('font-weight', 'bold')\n        .text('Value');\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Savings per template ($)');\n\n        // add x axis\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(xAxis)\n        .selectAll('text')\n        .style('text-anchor', 'start')\n        .attr('dx', '0.75em')\n        .attr('dy', -x.bandwidth() / 1.45 - 8)\n        .attr('transform', 'rotate(-90)');\n\n        svg.selectAll('.x-axis line').attr('stroke', 'transparent');\n\n        svg\n        .selectAll('.bar')\n        .data(data)\n        .enter()\n        .append('rect')\n        .attr('x', d => x(d.name))\n        .attr('width', x.bandwidth())\n        .attr('y', d => y(d.delta))\n        .style('fill', () => color)\n        .attr('height', d => height - y(d.delta))\n        .on('mouseover', function(d) {\n            d3.select(this).style('fill', d3.rgb(color).darker(1));\n            tooltip.handleMouseOver(d);\n        })\n        .on('mousemove', tooltip.handleMouseOver)\n        .on('mouseout', function() {\n            d3.select(this).style('fill', color);\n            tooltip.handleMouseOut();\n        });\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate() {\n        this.init();\n    }\n\n    render() {\n        return <div id={this.props.id} />;\n    }\n}\n\nTopTemplatesSavings.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func\n};\n\nexport default initializeChart(TopTemplatesSavings);\n","import styled from 'styled-components';\nimport { CardTitle } from '@patternfly/react-core';\n\nexport const BorderedCardTitle = styled(CardTitle)`\n  border-bottom: 1px solid #d7d7d7;\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle, Title } from '@patternfly/react-core';\n\nconst floatToStringWithCommas = total =>\n    total\n    .toFixed(2)\n    .toString()\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\nconst TotalSavings = ({ totalSavings = 0 }) => (\n    <Card style={{ borderTop: '3px solid #2B9AF3' }}>\n        <CardTitle style={{ paddingBottom: '0' }}>Total savings</CardTitle>\n        <CardBody>\n            <Title\n                headingLevel=\"h3\"\n                size=\"4xl\"\n                style={{ color: 'var(--pf-global--success-color--200)' }}\n            >\n                {floatToStringWithCommas(totalSavings)}\n            </Title>\n        </CardBody>\n    </Card>\n);\n\nTotalSavings.propTypes = {\n    totalSavings: PropTypes.number\n};\n\nexport default TotalSavings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    Card,\n    CardBody,\n    InputGroup,\n    InputGroupText,\n    TextInput\n} from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst validFloat = value => {\n    const floatValue = parseFloat(value);\n    return floatValue && floatValue >= 0 ? value : '';\n};\n\nconst CalculationCost = ({\n    costManual = '0',\n    setCostManual = () => {},\n    costAutomation = '0',\n    setCostAutomation = () => {}\n}) => (\n    <Card>\n        <CardTitle>Calculate your automation</CardTitle>\n        <CardBody>\n            <InputAndText>\n                <p>Manual cost of automation</p>\n                <em style={{ color: 'var(--pf-global--Color--dark-200)' }}>\n          (e.g. average salary of mid-level Software Engineer)\n                </em>\n                <InputGroup style={{ width: '50%' }}>\n                    <InputGroupText>\n                        <DollarSignIcon />\n                    </InputGroupText>\n                    <TextInput\n                        id=\"manual-cost\"\n                        type=\"number\"\n                        aria-label=\"manual-cost\"\n                        value={costManual}\n                        onChange={e => setCostManual(validFloat(e))}\n                    />\n                    <InputGroupText>/hr</InputGroupText>\n                </InputGroup>\n            </InputAndText>\n            <InputAndText style={{ paddingTop: '10px' }}>\n                <p>Automated process cost</p>\n                <InputGroup style={{ width: '50%' }}>\n                    <InputGroupText>\n                        <DollarSignIcon />\n                    </InputGroupText>\n                    <TextInput\n                        id=\"automation-cost\"\n                        type=\"number\"\n                        aria-label=\"automation-cost\"\n                        value={costAutomation}\n                        onChange={e => setCostAutomation(validFloat(e))}\n                    />\n                    <InputGroupText>/hr</InputGroupText>\n                </InputGroup>\n            </InputAndText>\n        </CardBody>\n    </Card>\n);\n\nCalculationCost.propTypes = {\n    costManual: PropTypes.string,\n    setCostManual: PropTypes.func,\n    costAutomation: PropTypes.string,\n    setCostAutomation: PropTypes.func\n};\n\nexport default CalculationCost;\n","import React from 'react';\n\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst AutomationFormula = () => (\n    <Card style={{ height: '100%' }}>\n        <CardTitle>Automation formula</CardTitle>\n        <CardBody>\n            <p>\n                <b>Manual cost for template x</b> =\n                <em>\n          (time for a manual run on one host in hours * (sum of all hosts across\n          all job runs) ) * cost per hour\n                </em>\n            </p>\n            <p>\n                <b>Automation cost for template x</b> =\n                <em>\n          cost of automation per hour * sum of total elapsed hours for a\n          template\n                </em>\n            </p>\n            <p>\n                <b>Savings</b> =\n                <em>Sum of (manual cost - automation cost) across all templates</em>\n            </p>\n        </CardBody>\n    </Card>\n);\n\nexport default AutomationFormula;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    Button,\n    Card,\n    CardBody,\n    InputGroup,\n    InputGroupText,\n    TextInput,\n    Tooltip,\n    Popover\n} from '@patternfly/react-core';\nimport {\n    InfoCircleIcon,\n    ToggleOnIcon,\n    ToggleOffIcon\n} from '@patternfly/react-icons';\n\nimport {\n    convertSecondsToMins,\n    convertMinsToSeconds\n} from '../../Utilities/helpers';\n\nconst TemplateDetail = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  div,\n  em {\n    padding-right: 5px;\n  }\n\n  @media (max-width: 1490px) {\n    display: block;\n\n    em {\n      padding: 10px 0;\n      display: block;\n    }\n  }\n`;\n\nconst TemplateDetailSubTitle = styled.em`\n  color: var(--pf-global--Color--dark-200);\n`;\n\nconst TooltipWrapper = styled.div`\n  p {\n    text-align: left;\n  }\n`;\n\nconst IconGroup = styled.div`\n  & svg {\n    fill: var(--pf-global--Color--dark-200);\n\n    :hover {\n      cursor: pointer;\n    }\n\n    :first-of-type {\n      margin-right: 10px;\n      margin-left: 10px;\n\n      @media (max-width: 1350px) {\n        margin-left: 0;\n      }\n    }\n  }\n`;\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nexport const QuestionIconTooltip = ({\n    successfulElapsedTotal,\n    totalOrgCount,\n    totalClusterCount\n}) => (\n    <Popover\n        aria-label=\"template detail popover\"\n        position=\"left\"\n        bodyContent={\n            <TooltipWrapper>\n                <p>\n                    <b>Success elapsed sum</b>: {successfulElapsedTotal.toFixed(2)}\n                </p>\n                <p>\n                    <b>Number of associated organizations</b>: {totalOrgCount}\n                </p>\n                <p>\n                    <b>Number of associated clusters</b>: {totalClusterCount}\n                </p>\n            </TooltipWrapper>\n        }\n    >\n        <InfoCircleIcon />\n    </Popover>\n);\n\nQuestionIconTooltip.propTypes = {\n    successfulElapsedTotal: PropTypes.number,\n    totalOrgCount: PropTypes.number,\n    totalClusterCount: PropTypes.number\n};\n\nconst TopTemplates = ({\n    data = [],\n    setDataRunTime = () => {},\n    setEnabled = () => {},\n    redirectToJobExplorer = () => {}\n}) => (\n    <Card style={{ overflow: 'auto', flex: '1 1 0' }} className=\"top-templates\">\n        <CardBody>\n            <p>Enter the time it takes to run the following templates manually.</p>\n            {data.map(({\n                id,\n                name,\n                avgRunTime,\n                enabled,\n                delta,\n                successful_hosts_total,\n                successful_elapsed_total,\n                total_org_count,\n                total_cluster_count\n            }) => (\n                <div key={id}>\n                    <Tooltip content={'List of jobs for this template for past 30 days'}>\n                        <Button\n                            style={{ padding: '15px 0 10px' }}\n                            component=\"a\"\n                            onClick={() => redirectToJobExplorer(id)}\n                            variant=\"link\"\n                        >\n                            {name}\n                        </Button>\n                    </Tooltip>\n                    <TemplateDetail>\n                        <InputAndText key={id}>\n                            <InputGroup>\n                                <TextInput\n                                    id={id}\n                                    type=\"number\"\n                                    aria-label=\"time run manually\"\n                                    value={convertSecondsToMins(avgRunTime)}\n                                    onChange={minutes =>\n                                        setDataRunTime(convertMinsToSeconds(minutes), id)\n                                    }\n                                />\n                                <InputGroupText>min</InputGroupText>\n                            </InputGroup>\n                        </InputAndText>\n                        <TemplateDetailSubTitle>\n                            x {successful_hosts_total} host runs\n                        </TemplateDetailSubTitle>\n                        <IconGroup>\n                            <QuestionIconTooltip\n                                successfulElapsedTotal={successful_elapsed_total}\n                                totalOrgCount={total_org_count}\n                                totalClusterCount={total_cluster_count}\n                            />\n                            { !enabled && <ToggleOffIcon onClick={ () => setEnabled(id)(true) } /> }\n                            { enabled && <ToggleOnIcon onClick={ () => setEnabled(id)(false) } /> }\n                        </IconGroup>\n                    </TemplateDetail>\n                    <p style={{ color: '#486B00' }}>${delta.toFixed(2)}</p>\n                </div>\n            ))}\n        </CardBody>\n    </Card>\n);\n\nTopTemplates.propTypes = {\n    data: PropTypes.array,\n    setDataRunTime: PropTypes.func,\n    redirectToJobExplorer: PropTypes.func,\n    deselectedIds: PropTypes.array,\n    setDeselectedIds: PropTypes.func,\n    setEnabled: PropTypes.func\n};\n\nexport default TopTemplates;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\nimport { Card, CardBody } from '@patternfly/react-core';\n\n// Imports from custom components\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\n// Imports from API\nimport { preflightRequest, readROI, readROIOptions } from '../../Api';\n\n// Imports from utilities\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { roi as roiConst } from '../../Utilities/constants';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { calculateDelta, convertSecondsToHours } from '../../Utilities/helpers';\n\n// Chart\nimport TopTemplatesSavings from '../../Charts/ROITopTemplates';\n\n// Local imports\nimport { BorderedCardTitle } from './helpers';\nimport TotalSavings from './TotalSavings';\nimport CalculationCost from './CalculationCost';\nimport AutomationFormula from './AutomationFormula';\nimport TopTemplates from './TopTemplates';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 5fr 2fr;\n  height: 100%;\n`;\n\nconst WrapperLeft = styled.div`\n  flex: 5;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n`;\n\nconst WrapperRight = styled.div`\n  flex: 2;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst mapApi = ({ items = []}) =>\n    items.map(el => ({\n        ...el,\n        delta: 0,\n        avgRunTime: 3600,\n        manualCost: 0,\n        automatedCost: 0,\n        enabled: true\n    }));\n\nconst filterDisabled = data => data.filter(({ enabled }) => enabled);\n\nconst updateDeltaCost = (data, costAutomation, costManual) =>\n    data.map(el => {\n        const manualCost =\n      convertSecondsToHours(el.avgRunTime) *\n      el.successful_hosts_total *\n      parseFloat(costManual);\n        const automatedCost =\n      convertSecondsToHours(el.successful_elapsed_total) *\n      parseFloat(costAutomation);\n        const delta = calculateDelta(automatedCost, manualCost);\n\n        return { ...el, delta, manualCost, automatedCost };\n    });\n\nconst computeTotalSavings = data =>\n    data.reduce((sum, curr) => sum + curr.delta, 0);\n\nconst AutomationCalculator = ({ history }) => {\n    const toJobExplorer = useRedirect(history, 'jobExplorer');\n    const [ costManual, setCostManual ] = useState('50');\n    const [ costAutomation, setCostAutomation ] = useState('20');\n\n    const [ preflight, setPreflight ] = useApi(null);\n    const [ options, setOptions ] = useApi({});\n    const [ api, fetchApi, setDataInApi ] = useApi([], data =>\n        updateDeltaCost(mapApi(data), costAutomation, costManual)\n    );\n\n    const { queryParams, setFromToolbar } = useQueryParams(\n        roiConst.defaultParams\n    );\n\n    /**\n   * Modifies one elements avgRunTime in the unfilteredData\n   * and updates all calculated fields.\n   * Used in top templates.\n   */\n    const setDataRunTime = (seconds, id) => {\n        const updatedData = api.data.map(el => {\n            if (el.id === id) {\n                el.avgRunTime = seconds;\n                const updatedDelta = updateDeltaCost(\n                    [ el ],\n                    costAutomation,\n                    costManual\n                )[0];\n                return updatedDelta;\n            } else {\n                return el;\n            }\n        });\n\n        setDataInApi(updatedData);\n    };\n\n    const setEnabled = id => value => {\n        setDataInApi(api.data.map(el =>\n            el.id === id\n                ? { ...el, enabled: value }\n                : el\n        ));\n    };\n\n    useEffect(() => {\n        setPreflight(preflightRequest());\n        setOptions(readROIOptions({ params: queryParams }));\n    }, []);\n\n    /**\n   * Recalculates the delta and costs in the data after the cost is changed.\n   */\n    useEffect(() => {\n        setDataInApi(updateDeltaCost(api.data, costAutomation, costManual));\n    }, [ costAutomation, costManual ]);\n\n    /**\n   * Get data from API depending on the queryParam.\n   */\n    useEffect(() => {\n        fetchApi(readROI({ params: queryParams }));\n    }, [ queryParams ]);\n\n    /**\n   * Function to redirect to the job explorer page\n   * with the same filters as is used here.\n   */\n    const redirectToJobExplorer = templateId => {\n        const initialQueryParams = {\n            quick_date_range: 'last_30_days',\n            template_id: [ templateId ]\n        };\n        toJobExplorer(initialQueryParams);\n    };\n\n    const renderLeft = () => (\n        <WrapperLeft>\n            <Main style={{ paddingBottom: '0' }}>\n                <Card>\n                    <BorderedCardTitle>Automation savings</BorderedCardTitle>\n                    <CardBody>\n                        {api.isLoading && <LoadingState />}\n                        {api.error && <ApiErrorState message={api.error.error} />}\n                        {api.isSuccess && api.data.length <= 0 && <NoData />}\n                        {api.isSuccess && api.data.length > 0 && (\n                            <React.Fragment>\n                                <TopTemplatesSavings\n                                    margin={{ top: 20, right: 20, bottom: 20, left: 70 }}\n                                    id=\"d3-roi-chart-root\"\n                                    data={filterDisabled(api.data)}\n                                />\n                                <p style={{ textAlign: 'center' }}>Templates</p>\n                            </React.Fragment>\n                        )}\n                    </CardBody>\n                </Card>\n            </Main>\n            <Main>\n                <AutomationFormula />\n            </Main>\n        </WrapperLeft>\n    );\n\n    const renderRight = () => (\n        <WrapperRight>\n            <Main style={{ paddingBottom: '0', paddingLeft: '0' }}>\n                <TotalSavings totalSavings={computeTotalSavings(filterDisabled(api.data))} />\n            </Main>\n            <Main\n                style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    flex: '1 1 0',\n                    paddingLeft: '0'\n                }}\n            >\n                <CalculationCost\n                    costManual={costManual}\n                    setCostManual={setCostManual}\n                    costAutomation={costAutomation}\n                    setCostAutomation={setCostAutomation}\n                />\n                <TopTemplates\n                    redirectToJobExplorer={redirectToJobExplorer}\n                    data={api.data}\n                    setDataRunTime={setDataRunTime}\n                    setUnfilteredData={api.data}\n                    setEnabled={setEnabled}\n                />\n            </Main>\n        </WrapperRight>\n    );\n\n    return (\n        <React.Fragment>\n            <PageHeader style={{ flex: '0' }}>\n                <PageHeaderTitle title={'Automation Calculator'} />\n            </PageHeader>\n            {preflight.error && (\n                <Main>\n                    <EmptyState preflightError={preflight.error} />\n                </Main>\n            )}\n            {preflight.isSuccess && (\n                <React.Fragment>\n                    <Main style={{ paddingBottom: '0' }}>\n                        <Card>\n                            <CardBody>\n                                <FilterableToolbar\n                                    categories={options.data}\n                                    filters={queryParams}\n                                    setFilters={setFromToolbar}\n                                />\n                            </CardBody>\n                        </Card>\n                    </Main>\n                    <Wrapper className=\"automation-wrapper\">\n                        {renderLeft()}\n                        {renderRight()}\n                    </Wrapper>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n};\n\nAutomationCalculator.propTypes = {\n    history: PropTypes.object\n};\n\nexport default AutomationCalculator;\n","import * as d3 from 'd3';\n\nclass Tooltip {\n    constructor(opts) {\n        this.svg = opts.svg;\n        this.colors = opts.colors;\n        this.draw();\n    }\n\n    draw() {\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 145;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -41)\n        .attr('rx', 2)\n        .attr('height', 110)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.circleSuccess = this.toolTipBase\n        .append('circle')\n        .attr('cx', 26)\n        .attr('cy', 0)\n        .attr('r', 8)\n        .attr('stroke', 'white')\n        .attr('fill', 'white');\n        this.circleFail = this.toolTipBase\n        .append('circle')\n        .attr('cx', 26)\n        .attr('cy', 26)\n        .attr('r', 8)\n        .attr('stroke', 'white')\n        .attr('fill', 'white');\n        this.successText = this.toolTipBase\n        .append('text')\n        .attr('x', 43)\n        .attr('y', 4)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Successful');\n        this.failText = this.toolTipBase\n        .append('text')\n        .attr('x', 43)\n        .attr('y', 28)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Failed');\n        this.successIcon = this.toolTipBase\n        .append('text')\n        .attr('class', 'fas fa-sm')\n        .attr('fill', this.colors(1))\n        .attr('x', 19)\n        .attr('y', 5)\n        .text('\\uf058');\n        this.failedIcon = this.toolTipBase\n        .append('text')\n        .attr('class', 'fas fa-sm')\n        .attr('fill', this.colors(0))\n        .attr('x', 20)\n        .attr('y', 31)\n        .text('\\uf06a');\n        this.jobs = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 137)\n        .attr('y', -21)\n        .attr('font-size', 12)\n        .attr('text-anchor', 'end')\n        .text('No jobs');\n        this.successful = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 122)\n        .attr('y', 4)\n        .text('0');\n        this.failed = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 122)\n        .attr('y', 28)\n        .text('0');\n        this.date = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('stroke', 'white')\n        .attr('x', 20)\n        .attr('y', -21)\n        .attr('font-size', 12)\n        .text('Never');\n        this.clickMore = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 20)\n        .attr('y', 55)\n        .attr('font-size', 12)\n        .text('Click for details');\n    }\n\n  handleMouseOver = d => {\n      let success = 0;\n      let fail = 0;\n      let total = 0;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      const formatTooltipDate = d3.timeFormat('%m/%d');\n      if (!d) {\n          return;\n      }\n\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n      if (d) {\n          success = d.RAN || 0;\n          fail = d.FAIL || 0;\n          total = d.TOTAL || 0;\n          this.date.text(formatTooltipDate(d.DATE || null));\n      }\n\n      if (d && d.data) {\n          success = d.data.RAN || 0;\n          fail = d.data.FAIL || 0;\n          total = d.data.TOTAL || 0;\n          this.date.text(formatTooltipDate(d.data.DATE || null));\n      }\n\n      this.jobs.text('' + total + ' jobs');\n      this.jobsWidth = this.jobs.node().getComputedTextLength();\n      this.failed.text('' + fail);\n      this.successful.text('' + success);\n      this.successTextWidth = this.successful.node().getComputedTextLength();\n      this.failTextWidth = this.failed.node().getComputedTextLength();\n\n      const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n      const threshold = 40;\n      const overage = maxTextPerc / threshold;\n      let adjustedWidth;\n      if (maxTextPerc > threshold) {\n          adjustedWidth = this.boxWidth * overage;\n      } else {\n          adjustedWidth = this.boxWidth;\n      }\n\n      this.boundingBox.attr('width', adjustedWidth);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n          this.boundingBox.attr('x', -adjustedWidth - 20);\n          this.circleSuccess.attr('cx', -adjustedWidth);\n          this.circleFail.attr('cx', -adjustedWidth);\n          this.failedIcon.attr('x', -adjustedWidth - 7);\n          this.successIcon.attr('x', -adjustedWidth - 7);\n          this.successText.attr('x', -adjustedWidth + 17);\n          this.failText.attr('x', -adjustedWidth + 17);\n          this.successful.attr('x', -this.successTextWidth - 20 - 12);\n          this.failed.attr('x', -this.failTextWidth - 20 - 12);\n          this.date.attr('x', -adjustedWidth - 5);\n          this.jobs.attr('x', -this.jobsWidth / 2 - 7);\n          this.clickMore.attr('x', -adjustedWidth);\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n          this.boundingBox.attr('x', 10);\n          this.circleSuccess.attr('cx', 26);\n          this.circleFail.attr('cx', 26);\n          this.failedIcon.attr('x', 19);\n          this.successIcon.attr('x', 19);\n          this.successText.attr('x', 43);\n          this.failText.attr('x', 43);\n          this.successful.attr('x', adjustedWidth - this.successTextWidth);\n          this.failed.attr('x', adjustedWidth - this.failTextWidth);\n          this.date.attr('x', 20);\n          this.jobs.attr('x', adjustedWidth);\n          this.clickMore.attr('x', 20);\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nexport default Tooltip;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { stringify } from 'query-string';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\n\nclass BarChart extends Component {\n    constructor(props) {\n        super(props);\n        this.draw = this.draw.bind(this);\n        this.init = this.init.bind(this);\n        this.resize = this.resize.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.state = {\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    redirectToJobExplorer({ data: { DATE: date }}) {\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const { orgId, templateId } = this.props;\n        const initialQueryParams = {\n            start_date: formattedDate,\n            end_date: formattedDate,\n            quick_date_range: 'custom',\n            status: [ 'failed', 'successful' ],\n            template_id: templateId,\n            org_id: orgId\n        };\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    }\n\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => {\n                this.init();\n            }, 500)\n        });\n    }\n\n    init() {\n        this.draw();\n    }\n\n    // Methods\n    draw() {\n    // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const parseTime = d3.timeParse('%Y-%m-%d');\n        let { data: unformattedData } = this.props;\n        const data = unformattedData.reduce(\n            (formatted, { created_date, successful_count, failed_count }) => {\n                let DATE = parseTime(created_date) || new Date();\n                let RAN = +successful_count || 0;\n                let FAIL = +failed_count || 0;\n                let TOTAL = +successful_count + failed_count || 0;\n                return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n            },\n            []\n        );\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n        const x = d3\n        .scaleBand()\n        .rangeRound([ 0, width ])\n        .padding(0.35); // percentage\n        const y = d3.scaleLinear().range([ height, 0 ]);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n        //[fail, success]\n        let colors = d3.scaleOrdinal([ '#6EC664', '#A30000' ]);\n\n        const barTooltip = new Tooltip({\n            svg: '#' + this.props.id,\n            colors\n        });\n        const status = [ 'FAIL', 'RAN' ];\n\n        // stack our data\n        const stack = d3\n        .stack()\n        .keys(status)\n        .order(d3.stackOrderNone)\n        .offset(d3.stackOffsetNone);\n\n        const layers = stack(data);\n        // Scale the range of the data\n        x.domain(layers[0].map(d => d.data.DATE));\n        y.domain([ 0, d3.max(layers[layers.length - 1], d => d[1] * 1.15) || 8 ]);\n        // Add the Y Axis\n        svg\n        .append('g')\n        .attr('class', 'y-axis')\n        .call(d3.axisLeft(y).tickSize(-width, 0, 0))\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.y-axis .tick text').attr('x', -5);\n        // text label for the y axis\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Jobs across all clusters');\n        // Add the X Axis\n        let ticks;\n        const maxTicks = Math.round(data.length / (data.length / 2));\n        ticks = data.map(d => d.DATE);\n        if (data.length > 14) {\n            ticks = data\n            .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n            .filter(item => item);\n        }\n\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(\n            d3\n            .axisBottom(x)\n            .tickValues(ticks)\n            .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n        // text label for the x axis\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n\n        const layer = svg\n        .selectAll('layer')\n        .data(layers)\n        .enter()\n        .append('g')\n        .attr('class', 'layer')\n        .style('fill', (_d, i) => colors(i));\n        layer\n        .selectAll('rect')\n        .data(d => d)\n        .enter()\n        .append('rect')\n        .attr('x', d => x(d.data.DATE))\n        .attr('y', d => y(d[0]))\n        .attr('height', 0)\n        .attr('width', x.bandwidth() - 1)\n        .transition()\n        .duration(550)\n        .ease(d3.easeCubic)\n        .attr('y', d => y(d[1]))\n        .attr('height', d => y(d[0]) - y(d[1]));\n        layer\n        .selectAll('rect')\n        .on('mouseover', barTooltip.handleMouseOver)\n        .on('mousemove', barTooltip.handleMouseOver)\n        .on('mouseout', barTooltip.handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.data !== this.props.data) {\n            this.init();\n        }\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        return <div id={this.props.id} />;\n    }\n}\n\nBarChart.propTypes = {\n    id: PropTypes.string,\n    templateId: PropTypes.array,\n    orgId: PropTypes.array,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    history: PropTypes.object\n};\n\nexport default initializeChart(withRouter(BarChart));\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport initializeChart from './BaseChart';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\nimport { stringify } from 'query-string';\nimport * as d3 from 'd3';\n\nclass LineChart extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.updateCluster = this.updateCluster.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.state = {\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    redirectToJobExplorer({ DATE: date }) {\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const { clusterId, templateId, orgId } = this.props;\n        const initialQueryParams = {\n            start_date: formattedDate,\n            end_date: formattedDate,\n            quick_date_range: 'custom',\n            status: [ 'failed', 'successful' ],\n            cluster_id: clusterId,\n            org_id: orgId,\n            template_id: templateId\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    }\n\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => {\n                this.init();\n            }, 500)\n        });\n    }\n\n    updateCluster() {\n        this.init();\n    }\n    init() {\n        this.draw();\n    }\n    // Methods\n    draw() {\n    // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n\n        function transition(path) {\n            path\n            .transition()\n            .duration(1000)\n            .attrTween('stroke-dasharray', tweenDash);\n        }\n\n        function tweenDash() {\n            const l = this.getTotalLength();\n            const i = d3.interpolateString('0,' + l, l + ',' + l);\n            return function(t) {\n                return i(t);\n            };\n        }\n\n        const x = d3.scaleTime().rangeRound([ 0, width ]);\n        const y = d3.scaleLinear().range([ height, 0 ]);\n\n        //[success, fail, total]\n        let colors = d3.scaleOrdinal([ '#6EC664', '#A30000', '#06C' ]);\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n        .attr('z', 100)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n        // Tooltip\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id,\n            colors\n        });\n        const { data: unformattedData } = this.props;\n        const parseTime = d3.timeParse('%Y-%m-%d');\n\n        const data = unformattedData.reduce(\n            (formatted, { created_date, successful_count, failed_count }) => {\n                let DATE = parseTime(created_date) || new Date();\n                let RAN = +successful_count || 0;\n                let FAIL = +failed_count || 0;\n                let TOTAL = +successful_count + failed_count || 0;\n                return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n            },\n            []\n        );\n        // Scale the range of the data\n        x.domain(\n            d3.extent(data, function(d) {\n                return d.DATE;\n            })\n        );\n        y.domain([\n            0,\n            d3.max(data, function(d) {\n                return d.TOTAL * 1.15 || 8;\n            })\n        ]);\n\n        const successLine = d3\n        .line()\n        .curve(d3.curveMonotoneX)\n        .x(function(d) {\n            return x(d.DATE);\n        })\n        .y(function(d) {\n            return y(d.RAN);\n        });\n\n        const failLine = d3\n        .line()\n        .defined(d => !isNaN(d.FAIL))\n        .curve(d3.curveMonotoneX)\n        .x(function(d) {\n            return x(d.DATE);\n        })\n        .y(function(d) {\n            return y(d.FAIL);\n        });\n        // Add the Y Axis\n        svg\n        .append('g')\n        .attr('class', 'y-axis')\n        .call(\n            d3\n            .axisLeft(y)\n            .ticks(10)\n            .tickSize(-width)\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.y-axis .tick text').attr('x', -5);\n\n        // text label for the y axis\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Job runs');\n        // Add the X Axis\n        let ticks;\n        const maxTicks = Math.round(data.length / (data.length / 2));\n        ticks = data.map(d => d.DATE);\n        if (data.length > 14) {\n            ticks = data\n            .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n            .filter(item => item);\n        }\n\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(\n            d3\n            .axisBottom(x)\n            .tickValues(ticks)\n            .tickSize(-height)\n            .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n        ) // \"Jan-01\"\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n        // text label for the x axis\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n        const vertical = svg\n        .append('path')\n        .attr('class', 'mouse-line')\n        .style('stroke', 'black')\n        .style('stroke-width', '3px')\n        .style('stroke-dasharray', '3, 3')\n        .style('opacity', '0');\n\n        const handleMouseOver = function(d) {\n            tooltip.handleMouseOver(d);\n            // show vertical line\n            vertical.transition().style('opacity', '1');\n        };\n\n        const handleMouseMove = function() {\n            let intersectX = this.cx.baseVal.value;\n            vertical.attr('d', function() {\n                let d = 'M' + intersectX + ',' + height;\n                d += ' ' + intersectX + ',' + 0;\n                return d;\n            });\n        };\n\n        const handleMouseOut = function() {\n            // hide tooltip\n            tooltip.handleMouseOut();\n            // hide vertical line\n            vertical.transition().style('opacity', 0);\n        };\n\n        // Add the successLine path.\n        svg\n        .append('path')\n        .data([ data ])\n        .attr('class', 'line')\n        .style('fill', 'none')\n        .style('stroke', () => colors(1))\n        .attr('stroke-width', 2)\n        .attr('d', successLine)\n        .call(transition);\n\n        // Add the failLine path.\n        svg\n        .append('path')\n        .data([ data ])\n        .attr('class', 'line')\n        .style('fill', 'none')\n        .style('stroke', () => colors(0))\n        .attr('stroke-width', 2)\n        .attr('d', failLine)\n        .call(transition);\n        svg\n        .selectAll('dot')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('r', 3)\n        .style('stroke', () => colors(1))\n        .style('fill', () => colors(1))\n        .attr('cx', function(d) {\n            return x(d.DATE);\n        })\n        .attr('cy', function(d) {\n            return y(d.RAN);\n        })\n\n        .on('mouseover', handleMouseOver)\n        .on('mousemove', handleMouseMove)\n        .on('mouseout', handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n        // create our failLine circles\n        svg\n        .selectAll('dot')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('r', 3)\n        .style('stroke', () => colors(0))\n        .style('fill', () => colors(0))\n        .attr('cx', function(d) {\n            return x(d.DATE);\n        })\n        .attr('cy', function(d) {\n            return y(d.FAIL);\n        })\n        .on('mouseover', handleMouseOver)\n        .on('mousemove', handleMouseMove)\n        .on('mouseout', handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n    }\n\n    componentDidMount() {\n        this.updateCluster();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.data !== this.props.data) {\n            this.updateCluster();\n        }\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        return <div id={this.props.id} />;\n    }\n}\n\nLineChart.propTypes = {\n    id: PropTypes.string,\n    clusterId: PropTypes.array,\n    templateId: PropTypes.array,\n    orgId: PropTypes.array,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    history: PropTypes.object\n};\n\nexport default initializeChart(withRouter(LineChart));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { trimStr } from '../Utilities/helpers';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell\n} from '@patternfly/react-core';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst ModulesList = ({ modules, isLoading }) => (\n    <DataList\n        aria-label=\"Top Modules\"\n        style={{\n            maxHeight: '400px',\n            overflow: 'auto',\n            height: '400px',\n            background: 'white'\n        }}\n    >\n        <DataListItem aria-labelledby=\"top-modules-header\">\n            <DataListCell>\n                <h3>Top modules</h3>\n            </DataListCell>\n            <DataCellEnd>\n                <h3>Usage</h3>\n            </DataCellEnd>\n        </DataListItem>\n        {isLoading && (\n            <PFDataListItem\n                aria-labelledby=\"modules-loading\"\n                key={isLoading}\n                style={{ border: 'none' }}\n            >\n                <PFDataListCell>\n                    <LoadingState />\n                </PFDataListCell>\n            </PFDataListItem>\n        )}\n        {!isLoading && modules.length <= 0 && (\n            <PFDataListItem\n                aria-labelledby=\"modules-no-data\"\n                key={isLoading}\n                style={{ border: 'none' }}\n            >\n                <PFDataListCell>\n                    <NoData />\n                </PFDataListCell>\n            </PFDataListItem>\n        )}\n        {!isLoading &&\n      modules\n      .filter(module => module.name !== null)\n      .map(({ name, host_task_count }, index) => (\n          <DataListItem aria-labelledby=\"top-modules-detail\" key={index}>\n              <DataListCell>\n                  <span>{trimStr(name)}</span>\n              </DataListCell>\n              <DataCellEnd>{host_task_count}</DataCellEnd>\n          </DataListItem>\n      ))}\n    </DataList>\n);\n\nModulesList.propTypes = {\n    modules: PropTypes.array,\n    isLoading: PropTypes.bool\n};\n\nexport default ModulesList;\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport { Paths } from '../paths';\nimport { stringify } from 'query-string';\nimport useApi from '../Utilities/useApi';\nimport { formatDateTime, formatSeconds } from '../Utilities/helpers';\nimport { readJobExplorer } from '../Api';\n\nimport {\n    Button,\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell,\n    Label,\n    Modal\n} from '@patternfly/react-core';\n\nimport { CircleIcon } from '@patternfly/react-icons';\n\nconst success = (\n    <CircleIcon\n        size=\"sm\"\n        key=\"5\"\n        style={{ color: 'rgb(110, 198, 100)', marginRight: '5px' }}\n    />\n);\nconst fail = (\n    <>\n        <CircleIcon\n            size=\"sm\"\n            key=\"5\"\n            style={{ color: 'rgb(163, 0, 0)', marginRight: '5px' }}\n        />\n        <span id=\"fail-icon\">!</span>\n    </>\n);\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\nconst PFDataListItemNoBorder = styled(PFDataListItem)`\n  border-bottom: none;\n  margin-bottom: -20px;\n`;\nconst DataListItemCompact = styled(DataListItem)`\n  padding: 0;\n  > .pf-c-data-list__cell {\n    font-weight: 600;\n  }\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst DataListCellCompact = styled(DataListCell)`\n  padding: 7px;\n`;\n\nconst DataListFocus = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-gap: 10px;\n  padding: var(--pf-global--spacer--lg);\n  background: #ebebeb;\n  border: 1px solid #ccc;\n  border-top: none;\n  margin-bottom: 20px;\n`;\nconst DataCellEndCompact = styled(DataCellEnd)`\n  padding: 7px !important;\n`;\n\nconst formatTopFailedTask = data => {\n    if (!data) {\n        return;\n    }\n\n    if (data && data[0]) {\n        const percentage = Math.ceil(\n            (data[0].failed_count / data[0].total_failed_count) * 100\n        );\n        return `${data[0].task_name} ${percentage}%`;\n    }\n\n    return `Unavailable`;\n};\n\nconst formatTopFailedStep = data => {\n    if (!data) {\n        return;\n    }\n\n    if (data && data[0]) {\n        const percentage = Math.ceil(\n            (data[0].failed_count / data[0].total_failed_count) * 100\n        );\n        return `${data[0].template_name} ${percentage}%`;\n    }\n\n    return `Unavailable`;\n};\n\nconst formatSuccessRate = (successCount, totalCount) =>\n    Math.ceil((successCount / totalCount) * 100) + '%';\nconst formatAvgRun = (elapsed, totalCount) =>\n    new Date(Math.ceil(elapsed / totalCount) * 1000).toISOString().substr(11, 8);\nconst formatTotalTime = elapsed =>\n    new Date(elapsed * 1000).toISOString().substr(11, 8);\n\nconst ModalContents = ({\n    selectedId,\n    isOpen,\n    handleModal,\n    qp,\n    jobType,\n    handleCloseBtn\n}) => {\n    const [\n        {\n            data: { items: relatedJobs = []}\n        },\n        setRelatedJobs\n    ] = useApi({ items: []});\n    const [\n        {\n            data: {\n                items: [ stats = 0 ]\n            }\n        },\n        setStats\n    ] = useApi({ items: []});\n\n    let history = useHistory();\n\n    const redirectToJobExplorer = () => {\n        const { jobExplorer } = Paths;\n        const initialQueryParams = {\n            template_id: [ selectedId ],\n            status: [\n                'successful',\n                'failed',\n                'new',\n                'pending',\n                'waiting',\n                'error',\n                'canceled',\n                'running'\n            ],\n            job_type: [ 'job' ],\n            quick_date_range: 'last_30_days'\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    const relatedTemplateJobsParams = {\n        ...qp,\n        template_id: [ selectedId ],\n        attributes: [\n            'id',\n            'status',\n            'job_type',\n            'started',\n            'finished',\n            'elapsed',\n            'created',\n            'cluster_name',\n            'org_name'\n        ],\n        group_by_time: false,\n        limit: 5,\n        sort_by: 'created:asc',\n        quick_date_range: qp.quick_date_range\n            ? qp.quick_date_range\n            : 'last_30_days',\n        job_type: [ jobType ]\n    };\n\n    const agreggateTemplateParams = {\n        group_by: 'template',\n        template_id: [ selectedId ],\n        attributes: [\n            'elapsed',\n            'job_type',\n            'successful_count',\n            'failed_count',\n            'total_count',\n            jobType === 'job' ? 'most_failed_tasks' : 'most_failed_steps'\n        ],\n        status: qp.status,\n        quick_date_range: qp.quick_date_range\n            ? qp.quick_date_range\n            : 'last_30_days',\n        job_type: [ jobType ]\n    };\n\n    useEffect(() => {\n        if (selectedId) {\n            setStats(readJobExplorer({ params: agreggateTemplateParams }));\n            setRelatedJobs(readJobExplorer({ params: relatedTemplateJobsParams }));\n        }\n    }, [ selectedId ]);\n\n    return (\n        <Modal\n            aria-label=\"modal\"\n            width={'80%'}\n            title={stats.name ? stats.name : 'no-template-name'}\n            isOpen={isOpen}\n            onClose={() => {\n                handleModal(false);\n                handleCloseBtn(null);\n            }}\n            actions={[\n                <Button\n                    key=\"cancel\"\n                    variant=\"secondary\"\n                    onClick={() => {\n                        handleModal(false);\n                        handleCloseBtn(null);\n                    }}\n                >\n          Close\n                </Button>\n            ]}\n        >\n            <DataList aria-label=\"Selected Template Details\">\n                <PFDataListItemNoBorder aria-labelledby=\"Selected Template Statistics\">\n                    <DataListFocus>\n                        <div aria-labelledby=\"job runs\">\n                            <b style={{ marginRight: '10px' }}>Number of runs</b>\n                            {stats.total_count ? stats.total_count : 'Unavailable'}\n                        </div>\n                        <div aria-labelledby=\"total time\">\n                            <b style={{ marginRight: '10px' }}>Total time</b>\n                            {stats.elapsed ? formatTotalTime(stats.elapsed) : 'Unavailable'}\n                        </div>\n                        <div aria-labelledby=\"Avg Time\">\n                            <b style={{ marginRight: '10px' }}>Avg time</b>\n                            {stats.elapsed\n                                ? formatAvgRun(stats.elapsed, stats.total_count)\n                                : 'Unavailable'}\n                        </div>\n                        <div aria-labelledby=\"success rate\">\n                            <b style={{ marginRight: '10px' }}>Success rate</b>\n                            {!isNaN(stats.successful_count)\n                                ? formatSuccessRate(stats.successful_count, stats.total_count)\n                                : 'Unavailable'}\n                        </div>\n                        {stats.most_failed_tasks && (\n                            <div aria-labelledby=\"most failed task\">\n                                <b style={{ marginRight: '10px' }}>Most failed task</b>\n                                {stats.most_failed_tasks\n                                    ? formatTopFailedTask(stats.most_failed_tasks)\n                                    : 'Unavailable'}\n                            </div>\n                        )}\n                        {stats.most_failed_steps && (\n                            <div aria-labelledby=\"most failed step\">\n                                <b style={{ marginRight: '10px' }}>Most failed step</b>\n                                {stats.most_failed_steps\n                                    ? formatTopFailedStep(stats.most_failed_steps)\n                                    : 'Unavailable'}\n                            </div>\n                        )}\n                    </DataListFocus>\n                </PFDataListItemNoBorder>\n                <DataListItemCompact>\n                    <DataListCellCompact key=\"last5jobs\">\n                        <Label variant=\"outline\">Last 5 jobs</Label>\n                    </DataListCellCompact>\n          ,\n                    <DataCellEndCompact>\n                        <Button\n                            component=\"a\"\n                            onClick={redirectToJobExplorer}\n                            variant=\"link\"\n                        >\n              View all jobs\n                        </Button>\n                    </DataCellEndCompact>\n                </DataListItemCompact>\n                <DataListItemCompact aria-labelledby=\"datalist header\">\n                    <PFDataListCell key=\"job heading\">Id/Name</PFDataListCell>\n                    <PFDataListCell key=\"cluster heading\">Cluster</PFDataListCell>\n                    <PFDataListCell key=\"start time heading\">Start Time</PFDataListCell>\n                    <PFDataListCell key=\"total time heading\">Total Time</PFDataListCell>\n                </DataListItemCompact>\n                {relatedJobs.length <= 0 && <LoadingState />}\n                {relatedJobs.length > 0 &&\n          relatedJobs.map((job, index) => (\n              <DataListItem\n                  style={{ padding: '10px 0' }}\n                  key={`job-details-${index}`}\n                  aria-labelledby=\"job details\"\n              >\n                  <PFDataListCell key=\"job name\">\n                      {job.status === 'successful' ? success : fail} {job.id.id} -{' '}\n                      {job.id.template_name}\n                  </PFDataListCell>\n                  <PFDataListCell key=\"job cluster\">\n                      {job.cluster_name}\n                  </PFDataListCell>\n                  <PFDataListCell key=\"start time\">\n                      {formatDateTime(job.started)}\n                  </PFDataListCell>\n                  <PFDataListCell key=\"total time\">\n                      {formatSeconds(job.elapsed)}\n                  </PFDataListCell>\n              </DataListItem>\n          ))}\n            </DataList>\n        </Modal>\n    );\n};\n\nModalContents.propTypes = {\n    selectedId: PropTypes.number,\n    qp: PropTypes.object,\n    jobType: PropTypes.string,\n    handleCloseBtn: PropTypes.func,\n    isOpen: PropTypes.bool,\n    handleModal: PropTypes.func\n};\n\nexport default ModalContents;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell\n} from '@patternfly/react-core';\n\nimport ModalContents from './ModalContents';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst TemplatesList = ({ templates, isLoading, qp, title, jobType }) => {\n    const [ selectedId, setSelectedId ] = useState(null);\n    const [ isModalOpen, setIsModalOpen ] = useState(false);\n\n    return (\n        <>\n            <DataList\n                aria-label=\"Top Templates\"\n                style={{\n                    maxHeight: '400px',\n                    overflow: 'auto',\n                    height: '400px',\n                    background: 'white'\n                }}\n            >\n                <DataListItem aria-labelledby=\"top-templates-header\">\n                    <DataListCell>\n                        <h3>{title}</h3>\n                    </DataListCell>\n                    <DataCellEnd>\n                        <h3>Usage</h3>\n                    </DataCellEnd>\n                </DataListItem>\n                {isLoading && (\n                    <PFDataListItem\n                        aria-labelledby=\"templates-loading\"\n                        key={isLoading}\n                        style={{ border: 'none' }}\n                    >\n                        <PFDataListCell>\n                            <LoadingState />\n                        </PFDataListCell>\n                    </PFDataListItem>\n                )}\n                {!isLoading && templates.length <= 0 && (\n                    <PFDataListItem\n                        aria-labelledby=\"templates-no-data\"\n                        key={isLoading}\n                        style={{ border: 'none' }}\n                    >\n                        <PFDataListCell>\n                            <NoData />\n                        </PFDataListCell>\n                    </PFDataListItem>\n                )}\n                {!isLoading &&\n          templates.map(({ name, total_count, id }, index) => (\n              <DataListItem aria-labelledby=\"top-templates-detail\" key={index}>\n                  <DataListCell>\n                      <a\n                          onClick={() => {\n                              setIsModalOpen(true);\n                              setSelectedId(id);\n                          }}\n                      >\n                          {name}\n                      </a>\n                  </DataListCell>\n                  <DataCellEnd>{total_count}</DataCellEnd>\n              </DataListItem>\n          ))}\n            </DataList>\n            <ModalContents\n                isOpen={isModalOpen}\n                handleModal={setIsModalOpen}\n                selectedId={selectedId}\n                qp={qp}\n                jobType={jobType}\n                handleCloseBtn={setSelectedId}\n            />\n        </>\n    );\n};\n\nTemplatesList.propTypes = {\n    templates: PropTypes.array,\n    isLoading: PropTypes.bool,\n    queryParams: PropTypes.object,\n    title: PropTypes.string\n};\n\nexport default TemplatesList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport {\n    preflightRequest,\n    readClustersOptions,\n    readJobExplorer,\n    readEventExplorer\n} from '../../Api';\n\nimport { jobExplorer } from '../../Utilities/constants';\nimport useApi from '../../Utilities/useApi';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle\n} from '@patternfly/react-core';\n\nimport BarChart from '../../Charts/BarChart';\nimport LineChart from '../../Charts/LineChart';\nimport ModulesList from '../../Components/ModulesList';\nimport TemplatesList from '../../Components/TemplatesList';\nimport FilterableToolbar from '../../Components/Toolbar';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport { clusters } from '../../Utilities/constants';\n\nconst initialTopTemplateParams = {\n    group_by: 'template',\n    limit: 10,\n    job_type: [ 'job' ],\n    group_by_time: false,\n    status: [ 'successful', 'failed' ]\n};\n\nconst initialTopWorkflowParams = {\n    group_by: 'template',\n    limit: 10,\n    job_type: [ 'workflowjob' ],\n    group_by_time: false,\n    status: [ 'successful', 'failed' ]\n};\n\nconst initialModuleParams = {\n    group_by: 'module',\n    sort_by: 'host_task_count:desc',\n    limit: 10\n};\n\nconst Clusters = () => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n\n    const optionsMapper = options => {\n        const { groupBy, attributes, ...rest } = options;\n        return rest;\n    };\n\n    const { queryParams, setFromToolbar } = useQueryParams({\n        ...clusters.defaultParams\n    });\n\n    const [\n        {\n            isLoading,\n            isSuccess,\n            error,\n            data: { items: chartData = []}\n        },\n        setData\n    ] = useApi({ items: []});\n\n    const [\n        {\n            data: { items: templates = []}\n        },\n        setTemplates\n    ] = useApi({ items: []});\n    const [\n        {\n            data: { items: workflows = []}\n        },\n        setWorkflows\n    ] = useApi({ items: []});\n    const [\n        {\n            data: { items: modules = []}\n        },\n        setModules\n    ] = useApi({ items: []});\n    const [{ data: options = []}, setOptions ] = useApi({}, optionsMapper);\n\n    const initialOptionsParams = {\n        attributes: jobExplorer.attributes\n    };\n\n    const { queryParams: optionsQueryParams } = useQueryParams(\n        initialOptionsParams\n    );\n\n    const {\n        cluster_id,\n        org_id,\n        template_id,\n        quick_date_range,\n        start_date,\n        end_date\n    } = queryParams;\n\n    const topTemplatesParams = {\n        cluster_id,\n        org_id,\n        template_id,\n        quick_date_range,\n        start_date,\n        end_date,\n        ...initialTopTemplateParams\n    };\n\n    const topWorkflowParams = {\n        cluster_id,\n        org_id,\n        template_id,\n        quick_date_range,\n        start_date,\n        end_date,\n        ...initialTopWorkflowParams\n    };\n\n    const topModuleParams = {\n        cluster_id,\n        org_id,\n        template_id,\n        quick_date_range,\n        start_date,\n        end_date,\n        ...initialModuleParams\n    };\n\n    useEffect(() => {\n        async function initializeWithPreflight() {\n            await window.insights.chrome.auth.getUser();\n            await preflightRequest().catch(error => {\n                setPreFlightError({ preflightError: error });\n            });\n            setOptions(readClustersOptions({ params: optionsQueryParams }));\n        }\n\n        initializeWithPreflight();\n    }, []);\n\n    // Get and update the data\n    useEffect(() => {\n        const fetchEndpoints = () => {\n            setData(readJobExplorer({ params: queryParams }));\n            setTemplates(readJobExplorer({ params: topTemplatesParams }));\n            setWorkflows(readJobExplorer({ params: topWorkflowParams }));\n            setModules(readEventExplorer({ params: topModuleParams }));\n        };\n\n        fetchEndpoints();\n    }, [ queryParams ]);\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={'Clusters'} />\n                <FilterableToolbar\n                    categories={options}\n                    filters={queryParams}\n                    setFilters={setFromToolbar}\n                />\n            </PageHeader>\n            {preflightError && (\n                <Main>\n                    <EmptyState {...preflightError} />\n                </Main>\n            )}\n            {error && (\n                <Main>\n                    <ApiErrorState message={error.error} />\n                </Main>\n            )}\n            {!preflightError && !error && (\n                <>\n                    <Main>\n                        <Card>\n                            <PFCardTitle>\n                                <h2>Job status</h2>\n                            </PFCardTitle>\n                            <CardBody>\n                                {isLoading && <LoadingState />}\n                                {queryParams.cluster_id.length <= 0 && isSuccess && (\n                                    <BarChart\n                                        margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                                        id=\"d3-bar-chart-root\"\n                                        data={chartData}\n                                        templateId={queryParams.template_id}\n                                        orgId={queryParams.org_id}\n                                    />\n                                )}\n                                {queryParams.cluster_id.length > 0 && isSuccess && (\n                                    <LineChart\n                                        margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                                        id=\"d3-line-chart-root\"\n                                        data={chartData}\n                                        clusterId={queryParams.cluster_id}\n                                        templateId={queryParams.template_id}\n                                        orgId={queryParams.org_id}\n                                    />\n                                )}\n                            </CardBody>\n                        </Card>\n                        <div\n                            className=\"dataCard\"\n                            style={{ display: 'flex', marginTop: '20px' }}\n                        >\n                            <TemplatesList\n                                qp={queryParams}\n                                templates={workflows}\n                                isLoading={isLoading}\n                                title={'Top workflows'}\n                                jobType={'workflowjob'}\n                            />\n                            <TemplatesList\n                                qp={queryParams}\n                                templates={templates}\n                                isLoading={isLoading}\n                                title={'Top templates'}\n                                jobType={'job'}\n                            />\n                            <ModulesList modules={modules} isLoading={isLoading} />\n                        </div>\n                    </Main>\n                </>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default Clusters;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Switch as PFSwitch } from '@patternfly/react-core';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  overflow: auto;\n  width: 100%;\n  height: ${props => props.height};\n`;\n\nconst LegendDetail = styled.div`\n  display: flex;\n  padding: 7.5px 15px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  overflow: auto;\n`;\n\nconst Color = styled.div.attrs(props => ({\n    color: props.color || 'black'\n}))`\n  min-width: 12px;\n  height: 12px;\n  background: ${props => props.color};\n  margin-right: 20px;\n`;\n\nconst Title = styled.span`\n  font-size: 15px;\n  display: inline-block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n`;\n\nconst SubTitle = styled.span`\n  font-size: 15px;\n  margin-left: 20px;\n`;\n\nconst Switch = styled(PFSwitch)`\n  margin-left: 20px;\n\n  svg {\n    display: none;\n  }\n`;\n\nconst Legend = ({\n    data,\n    selected,\n    height,\n    onToggle\n}) => {\n    const handleChange = (_isChecked, { target: { value }}) => { onToggle(parseFloat(value)); };\n\n    return (\n        <Container height={ height }>\n            { data.map(\n                ({ name, value, id, count }, index) => (\n                    <LegendDetail key={ index }>\n                        <Wrapper>\n                            <Color color={ value } />\n                            <Title>{ name }</Title>\n                        </Wrapper>\n                        { count && (\n                            <SubTitle>{ count }</SubTitle>\n                        ) }\n                        { selected && (\n                            <Switch\n                                isChecked={ selected.some(selection => selection === id) }\n                                onChange={ handleChange }\n                                aria-label={ name }\n                                value={ id }\n                                key={ index }\n                            />\n                        ) }\n                    </LegendDetail>\n                )) }\n        </Container>\n    );\n};\n\nLegend.propTypes = {\n    data: PropTypes.array,\n    selected: PropTypes.array,\n    onToggle: PropTypes.func,\n    height: PropTypes.string\n};\n\nexport default Legend;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\n\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport Legend from '../Utilities/Legend';\nimport { Paths } from '../paths';\nimport { stringify } from 'query-string';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nconst formatDate = date => {\n    const pieces = date.split('-');\n    return `${pieces[1]}/${pieces[2]}`;\n};\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        this.draw();\n    }\n\n    draw() {\n        this.width = 125;\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 125;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', 68)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.date = this.toolTipBase\n        .append('text')\n        .attr('x', 20)\n        .attr('y', 14)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Date');\n        this.jobs = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 72)\n        .attr('y', 14)\n        .text('0 Jobs');\n        this.orgName = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', -1)\n        .attr('font-size', 12)\n        .text('Org');\n        this.clickMore = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 20)\n        .attr('y', 30)\n        .attr('font-size', 12)\n        .text('Click for details');\n    }\n\n  handleMouseOver = d => {\n      let date;\n      let orgName;\n      let jobs;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      if (!d) {\n          return;\n      } else {\n          const maxLength = 16;\n          date = d.date;\n          orgName = d.name;\n          jobs = d.value;\n          if (d.name.length > maxLength) {\n              orgName = d.name.slice(0, maxLength).concat('...');\n          }\n      }\n\n      const formatTooltipDate = formatDate;\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n\n      this.date.text('' + formatTooltipDate(date));\n      this.orgName.text('' + orgName);\n      this.jobs.text('' + jobs + ' Jobs');\n      this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n      const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n      const threshold = 45;\n      const overage = maxTextPerc / threshold;\n      let adjustedWidth;\n      if (maxTextPerc > threshold) {\n          adjustedWidth = this.boxWidth * overage;\n      } else {\n          adjustedWidth = this.boxWidth;\n      }\n\n      this.boundingBox.attr('width', adjustedWidth);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n          this.boundingBox.attr('x', -adjustedWidth - 20);\n          this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n          this.orgName.attr('x', -adjustedWidth - 7);\n          this.clickMore.attr('x', -adjustedWidth - 7);\n          this.date.attr('x', -adjustedWidth - 7);\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n          this.boundingBox.attr('x', 10);\n          this.orgName.attr('x', 20);\n          this.clickMore.attr('x', 20);\n          this.jobs.attr('x', adjustedWidth / 2);\n          this.date.attr('x', 20);\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nconst GroupedBarChart = (props) => {\n    const orgsList = props.data[0].items;\n    const colors = orgsList.map(org => {\n        const name = org.id === -1 ? 'Others' : org.name;\n        return {\n            name,\n            value: props.colorFunc(name),\n            id: org.id\n        };\n    });\n    const [ selectedIds, setSelectedIds ] = useState(\n        orgsList.map(({ id }) => id).slice(0, 8)\n    );\n    let timeout = null;\n\n    const redirectToJobExplorer = ({ date, id }) => {\n        if (id === -1) {\n            // disable clicking on \"others\" block\n            return;\n        }\n\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const initialQueryParams = {\n            quick_date_range: 'custom',\n            start_date: formattedDate,\n            end_date: formattedDate,\n            status: [\n                'successful',\n                'failed',\n                'new',\n                'pending',\n                'waiting',\n                'error',\n                'canceled',\n                'running'\n            ],\n            org_id: [ id ]\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    const handleToggle = id => {\n        if (selectedIds.includes(id)) {\n            setSelectedIds(selectedIds.filter(el => el !== id));\n        } else {\n            setSelectedIds([ ...selectedIds, id ]);\n        }\n    };\n\n    const draw = () => {\n        // Clear our chart container element first\n        d3.selectAll('#' + props.id + ' > *').remove();\n        let { data: unformattedData, timeFrame } = props;\n        const data = unformattedData.reduce((formatted, { date, items }) => {\n            const selectedOrgs = items.filter(({ id }) => selectedIds.includes(id));\n            return formatted.concat({ date, selectedOrgs });\n        }, []);\n        const width = props.getWidth();\n        const height = props.getHeight();\n        // x scale of entire chart\n        const x0 = d3\n        .scaleBand()\n        .range([ 0, width ])\n        .padding(0.35);\n        // x scale of individual grouped bars\n        const x1 = d3.scaleBand();\n        const y = d3.scaleLinear().range([ height, 0 ]);\n        // format our X Axis ticks\n        const maxTicks = Math.round(data.length / (timeFrame / 2));\n        let ticks = data.map(d => d.date);\n        if (timeFrame === 31) {\n            ticks = data\n            .map((d, i) => (i % maxTicks === 0 ? d.date : undefined))\n            .filter(item => item);\n        }\n\n        const xAxis = d3\n        .axisBottom(x0)\n        .tickValues(ticks)\n        .tickFormat(formatDate);\n\n        const yAxis = d3\n        .axisLeft(y)\n        .ticks(8)\n        .tickSize(-width, 0, 0);\n\n        const svg = d3\n        .select('#' + props.id)\n        .append('svg')\n        .attr('width', width + props.margin.left + props.margin.right)\n        .attr('height', height + props.margin.bottom + props.margin.top)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          props.margin.left +\n          ',' +\n          props.margin.top +\n          ')'\n        );\n\n        const dates = data.map(d => d.date);\n        const selectedOrgNames = data[0].selectedOrgs.map(d => d.name);\n        const tooltip = new Tooltip({\n            svg: '#' + props.id\n        });\n        x0.domain(dates);\n        x1.domain(selectedOrgNames).range([ 0, x0.bandwidth() ]); // unsorted\n        y.domain([\n            0,\n            d3.max(data, date => d3.max(date.selectedOrgs, d => d.value * 1.15)) || 8\n        ]);\n\n        // add y axis\n        svg\n        .append('g')\n        .attr('class', 'y axis')\n        .call(yAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7')\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 6)\n        .attr('dy', '.71em')\n        .style('text-anchor', 'end')\n        .style('font-weight', 'bold')\n        .text('Value');\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Jobs across orgs');\n\n        // add x axis\n        svg\n        .append('g')\n        .attr('class', 'x axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(xAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' + width / 2 + ' ,' + (height + props.margin.top + 25) + ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n        // add the groups\n        let slice = svg.selectAll('.slice').data(data);\n        slice.exit().remove();\n\n        const enter = slice\n        .enter()\n        .append('g')\n        .attr('class', 'g foo')\n        .attr('transform', d => 'translate(' + x0(d.date) + ',0)');\n        slice = slice.merge(enter);\n        // add the individual bars\n        let bars = slice.selectAll('rect').data(function(d) {\n            return d.selectedOrgs;\n        });\n        bars.exit().remove();\n\n        const color = props.colorFunc;\n        const subEnter = bars\n        .enter()\n        .append('rect')\n        .attr('width', x1.bandwidth())\n        .attr('x', function(d) {\n            return x1(d.name);\n        }) // unsorted\n        .style('fill', function(d) {\n            return color(d.name);\n        })\n        .attr('y', function(d) {\n            return y(d.value);\n        })\n        .attr('height', function(d) {\n            return height - y(d.value);\n        })\n        .on('mouseover', function(d) {\n            d3.select(this).style('fill', d3.rgb(color(d.name)).darker(1));\n            tooltip.handleMouseOver();\n        })\n        .on('mousemove', tooltip.handleMouseOver)\n        .on('mouseout', function(d) {\n            d3.select(this).style('fill', color(d.name));\n            tooltip.handleMouseOut();\n        })\n        .on('click', redirectToJobExplorer);\n        bars = bars.merge(subEnter);\n    };\n\n    const init = () => {\n        draw();\n    };\n\n    const resize = () => {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => { draw(); }, 500);\n    };\n\n    useEffect(() => {\n        init();\n        window.addEventListener('resize', resize);\n\n        return () => {\n            clearTimeout(timeout);\n            window.removeEventListener('resize', resize);\n        };\n    }, []);\n\n    useEffect(() => { draw(); }, [ props.data, selectedIds ]);\n\n    return (\n        <Wrapper>\n            <div id={ props.id } />\n            { colors.length > 0 && (\n                <Legend\n                    id={ `${props.id}-legend` }\n                    data={ colors }\n                    selected={ selectedIds }\n                    onToggle={ handleToggle }\n                    height=\"350px\"\n                />\n            ) }\n        </Wrapper>\n    );\n};\n\nGroupedBarChart.propTypes = {\n    id: PropTypes.string,\n    isAccessible: PropTypes.bool,\n    data: PropTypes.array,\n    value: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    timeFrame: PropTypes.number,\n    history: PropTypes.object,\n    colorFunc: PropTypes.func\n};\n\nexport default initializeChart(GroupedBarChart);\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport { getTotal } from '../Utilities/helpers';\nimport Legend from '../Utilities/Legend';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        // defer drawing until we know the data shape\n        this.drawn = false;\n        // show the success rate or not\n        this.showSuccess = false;\n    }\n\n    draw(d) {\n    // chart1 has success rate data and chart2 does not ...\n        this.showSuccess = d && d.data && 'success_rate' in d.data ? true : false;\n        const boundingHeight = this.showSuccess ? 70 : 52;\n        const boundingWidth = this.showSuccess ? 120 : 108;\n\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBOx = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', boundingHeight)\n        .attr('width', boundingWidth)\n        .attr('fill', '#393f44');\n        this.orgName = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 0)\n        .text('Organization');\n        this.percentageTotal = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 16)\n        .text('0');\n        this.percentageSuccess = null;\n        if (this.showSuccess) {\n            this.percentageSuccess = this.toolTipBase\n            .append('text')\n            .attr('fill', 'white')\n            .attr('font-size', 12)\n            .attr('font-weight', 800)\n            .attr('x', 20)\n            .attr('y', 30)\n            .text('');\n        }\n    }\n\n  handleMouseOver = d => {\n      // treat draw() as a singleton to avoid a painted window effect\n      if (this.drawn !== true) {\n          this.draw(d);\n          this.drawn = true;\n      }\n\n      let perc;\n      let percSuccess;\n      let orgName;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      if (!d) {\n          return;\n      }\n\n      if (d && d.data) {\n          const maxLength = 16;\n          perc = d.data.percent;\n          percSuccess = d.data.success_rate;\n          orgName = d.data.name;\n          if (d.data.name.length > maxLength) {\n              orgName = d.data.name.slice(0, maxLength - 3).concat('...');\n          }\n      }\n\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n\n      this.percentageTotal.text('' + perc + '%');\n      if (percSuccess && this.percentageSuccess) {\n          this.percentageSuccess.text('(' + percSuccess + '% successful)');\n      }\n\n      this.orgName.text(' ' + orgName);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, -10) rotate(45)');\n          this.boundingBOx.attr('x', -125);\n          this.orgName.attr('x', -112);\n          this.percentageTotal.attr('x', -112);\n          if (this.showSuccess) {\n              this.percentageSuccess.attr('x', -112);\n          }\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, -10) rotate(45)');\n          this.boundingBOx.attr('x', 10);\n          this.orgName.attr('x', 20);\n          this.percentageTotal.attr('x', 20);\n          if (this.showSuccess) {\n              this.percentageSuccess.attr('x', 20);\n          }\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nconst PieChart = ({\n    data,\n    id,\n    colorFunc: color,\n    margin,\n    getWidth,\n    getHeight\n}) => {\n    const colors = data.map(org => {\n        const name = org.id === -1 ? 'Others' : org.name;\n        return {\n            id: org.id,\n            name,\n            value: color(name),\n            count: Math.round(org.count)\n        };\n    }).sort((a, b) => (a.count > b.count) ? 1 : ((b.count > a.count) ? -1 : 0));\n\n    const [ selectedIds, setSelectedIds ] = useState(\n        data.map(({ id }) => id).slice(0, 8));\n\n    let timeout = null;\n\n    const handleToggle = id => {\n        if (selectedIds.includes(id)) {\n            setSelectedIds(selectedIds.filter(el => el !== id));\n        } else {\n            setSelectedIds([ ...selectedIds, id ]);\n        }\n    };\n\n    const draw = () => {\n        d3.selectAll('#' + id + ' > *').remove();\n        const width = getWidth();\n        const height = getHeight();\n        const svg = d3\n        .select('#' + id)\n        .append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.bottom)\n        .append('g');\n\n        svg.append('g').attr('class', 'slices');\n        svg.append('g').attr('class', 'labels');\n        svg.append('g').attr('class', 'lines');\n        const radius = Math.min(width, height) / 2;\n        const filteredData = data.filter(({ id }) => selectedIds.includes(id));\n        const total = getTotal(filteredData);\n        filteredData.forEach(function(d) {\n            d.count = +d.count;\n            d.percent = +Math.round((d.count / total) * 100);\n        });\n        const donutTooltip = new Tooltip({\n            svg: '#' + id\n        });\n        const pie = d3\n        .pie()\n        .sort(null)\n        .value(d => d.count);\n        const arc = d3\n        .arc()\n        .outerRadius(radius - 10) // controls top positioning of chart\n        .innerRadius(0);\n\n        svg.attr(\n            'transform',\n            'translate(' +\n        (width + margin.left + margin.right) / 2 +\n        ',' +\n        (height + margin.top + margin.bottom) / 2 +\n        ')'\n        );\n\n        svg\n        .selectAll('path')\n        .data(pie(filteredData))\n        .enter()\n        .append('path')\n        .attr('d', arc)\n        .attr('fill', d => color(d.data.name));\n\n        svg\n        .selectAll('path')\n        .on('mouseover', function(d) {\n            d3.select(this).style('fill', d3.rgb(color(d.data.name)).darker(1));\n            donutTooltip.handleMouseOver(d);\n        })\n        .on('mouseout', function(d) {\n            d3.select(this).style('fill', color(d.data.name));\n            donutTooltip.handleMouseOut();\n        })\n        .on('mousemove', donutTooltip.handleMouseOver);\n\n        svg.append('g').classed('labels', true);\n        svg.append('g').classed('lines', true);\n    };\n\n    const init = () => {\n        draw();\n    };\n\n    const resize = () => {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => { draw(); }, 500);\n    };\n\n    useEffect(() => {\n        init();\n        window.addEventListener('resize', resize);\n\n        return () => {\n            clearTimeout(timeout);\n            window.removeEventListener('resize', resize);\n        };\n    }, []);\n\n    useEffect(() => { draw(); }, [ data, selectedIds ]);\n\n    return (\n        <Wrapper>\n            <div id={ id } />\n            { colors.length > 0 && (\n                <Legend\n                    id={ `${id}-legend` }\n                    data={ colors }\n                    selected={ selectedIds }\n                    onToggle={ handleToggle }\n                    height=\"300px\"\n                />\n            ) }\n        </Wrapper>\n    );\n};\n\nPieChart.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    timeFrame: PropTypes.number,\n    colorFunc: PropTypes.func\n};\n\nexport default initializeChart(PieChart);\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\n\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport {\n    preflightRequest,\n    readJobsByDateAndOrg,\n    readJobRunsByOrg,\n    readJobEventsByOrg,\n    readOrgOptions\n} from '../../Api';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle\n} from '@patternfly/react-core';\n\nimport GroupedBarChart from '../../Charts/GroupedBarChart';\nimport PieChart from '../../Charts/PieChart';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport { organizationStatistics as constants } from '../../Utilities/constants';\n\n// For chart colors\nimport { pfmulti } from '../../Utilities/colors';\nimport { scaleOrdinal } from 'd3';\n\nconst CardTitle = styled(PFCardTitle)`\n  border-bottom: 2px solid #ebebeb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &&& {\n    min-height: 60px;\n    --pf-c-card--first-child--PaddingTop: 10px;\n    --pf-c-card__header--not-last-child--PaddingBottom: 10px;\n\n    h3 {\n      font-size: 0.875em;\n    }\n  }\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  overflow: hidden;\n\n  .pf-c-card {\n    width: 50%;\n    margin-top: 20px;\n    overflow: auto;\n  }\n\n  .pf-c-card:first-of-type {\n    margin-right: 20px;\n  }\n`;\n\nconst TopCard = styled(Card)`\n  min-height: 500px;\n`;\n\nconst colorFunc = scaleOrdinal(pfmulti);\n\nconst optionsMapper = options => {\n    const { meta, inventory_id, ...rest } = options;\n    return { ...rest, sort_by: meta.sort_by };\n};\n\nconst orgsChartMapper = ({ dates: data = []}) =>\n    data.map(({ date, items }) => ({\n        date,\n        items: items.map(({ id, total_count, name }) => ({\n            id,\n            date,\n            value: total_count,\n            name: id === -1 ? 'Others' : name || 'No organization'\n        }))\n    }));\n\nconst pieChartMapper = attrName => ({ items = []}) =>\n    items.map(({ id, [attrName]: count, name }) => ({\n        id,\n        count,\n        name: id === -1 ? 'Others' : name || 'No organization'\n    }));\n\nconst OrganizationStatistics = ({ history }) => {\n    const [ preflight, setPreflight ] = useApi(null);\n    const [ orgs, setOrgs ] = useApi([], orgsChartMapper);\n    const [ jobs, setJobs ] = useApi([], pieChartMapper('host_count'));\n    const [ tasks, setTasks ] = useApi([], pieChartMapper('host_task_count'));\n    const [ options, setOptions ] = useApi({}, optionsMapper);\n    const { queryParams, setFromToolbar } = useQueryParams(\n        constants.defaultParams\n    );\n\n    useEffect(() => {\n        insights.chrome.appNavClick({\n            id: 'organization-statistics',\n            secondaryNav: true\n        });\n        setPreflight(preflightRequest());\n        setOptions(readOrgOptions({ params: queryParams }));\n    }, []);\n\n    useEffect(() => {\n        setOrgs(readJobsByDateAndOrg({ params: queryParams }));\n        setJobs(readJobRunsByOrg({ params: queryParams }));\n        setTasks(readJobEventsByOrg({ params: queryParams }));\n    }, [ queryParams ]);\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={'Organization Statistics'} />\n            </PageHeader>\n            {preflight.error && (\n                <Main>\n                    <EmptyState preflightError={preflight.error} />\n                </Main>\n            )}\n            {preflight.isSuccess && (\n                <React.Fragment>\n                    <Main style={{ paddingBottom: '0' }}>\n                        <Card>\n                            <CardBody>\n                                <FilterableToolbar\n                                    categories={options.data}\n                                    filters={queryParams}\n                                    setFilters={setFromToolbar}\n                                />\n                            </CardBody>\n                        </Card>\n                    </Main>\n                    <Main>\n                        <TopCard>\n                            <CardTitle>\n                                <h2>Organization Status</h2>\n                            </CardTitle>\n                            <CardBody>\n                                {orgs.isLoading && <LoadingState />}\n                                {orgs.error && <ApiErrorState message={orgs.error.error} />}\n                                {orgs.isSuccess && orgs.data.length <= 0 && <NoData />}\n                                {orgs.isSuccess && orgs.data.length > 0 && (\n                                    <GroupedBarChart\n                                        margin={{ top: 20, right: 20, bottom: 50, left: 50 }}\n                                        id=\"d3-grouped-bar-chart-root\"\n                                        data={orgs.data}\n                                        history={history}\n                                        timeFrame={orgs.data.length}\n                                        colorFunc={colorFunc}\n                                    />\n                                )}\n                            </CardBody>\n                        </TopCard>\n                        <CardContainer>\n                            <Card>\n                                <CardBody style={{ padding: 0 }}>\n                                    <CardTitle style={{ padding: 0 }}>\n                                        <h2 style={{ marginLeft: '20px' }}>\n                      Job Runs by Organization\n                                        </h2>\n                                    </CardTitle>\n                                    {jobs.isLoading && <LoadingState />}\n                                    {jobs.error && <ApiErrorState message={jobs.error.error} />}\n                                    {jobs.isSuccess && jobs.data.length <= 0 && <NoData />}\n                                    {jobs.isSuccess && jobs.data.length > 0 && (\n                                        <PieChart\n                                            margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                                            id=\"d3-donut-1-chart-root\"\n                                            data={jobs.data}\n                                            timeFrame={jobs.data.length}\n                                            colorFunc={colorFunc}\n                                        />\n                                    )}\n                                </CardBody>\n                            </Card>\n                            <Card>\n                                <CardBody style={{ padding: 0 }}>\n                                    <CardTitle style={{ padding: 0 }}>\n                                        <h2 style={{ marginLeft: '20px' }}>\n                      Usage by Organization (Tasks)\n                                        </h2>\n                                    </CardTitle>\n                                    {tasks.isLoading && <LoadingState />}\n                                    {tasks.error && <ApiErrorState message={tasks.error.error} />}\n                                    {tasks.isSuccess && tasks.data.length <= 0 && <NoData />}\n                                    {tasks.isSuccess && tasks.data.length > 0 && (\n                                        <PieChart\n                                            margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                                            id=\"d3-donut-2-chart-root\"\n                                            data={tasks.data}\n                                            timeFrame={tasks.data.length}\n                                            colorFunc={colorFunc}\n                                        />\n                                    )}\n                                </CardBody>\n                            </Card>\n                        </CardContainer>\n                    </Main>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n};\n\nOrganizationStatistics.propTypes = {\n    history: PropTypes.object\n};\n\nexport default OrganizationStatistics;\n","const pfmulti = [\n    '#06C',\n    '#4CB140',\n    '#009596',\n    '#5752D1',\n    '#F4C145',\n    '#EC7A08',\n    '#8BC1F7',\n    '#23511E',\n    '#A2D9D9',\n    '#2A265F',\n    '#F9E0A2',\n    '#8F4700',\n    '#002F5D'\n];\n\nexport { pfmulti };\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst NoResults = () => {\n    return (\n        <EmptyState variant={EmptyStateVariant.full}>\n            <EmptyStateIcon icon={SearchIcon} />\n            <Title size=\"lg\" headingLevel=\"h4\">\n        No results found\n            </Title>\n            <EmptyStateBody>\n        No results match the filter criteria. Remove all filters or clear all\n        filters to show results.\n            </EmptyStateBody>\n        </EmptyState>\n    );\n};\n\nexport default NoResults;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from '@patternfly/react-core';\nimport {\n    CheckCircleIcon,\n    ExclamationCircleIcon,\n    ClockIcon,\n    SyncAltIcon,\n    ExclamationTriangleIcon\n} from '@patternfly/react-icons';\n\nconst JobStatus = ({ status }) => {\n    const capitalized = str => str.charAt(0).toUpperCase() + str.slice(1);\n\n    const getColor = () => {\n        switch (status) {\n            case 'successful':\n                return 'green';\n            case 'failed':\n            case 'error':\n                return 'red';\n            case 'running':\n            case 'pending':\n                return 'blue';\n            case 'canceled':\n                return 'orange';\n                // case new, waiting\n            default:\n                return 'grey';\n        }\n    };\n\n    const getIcon = () => {\n        switch (status) {\n            case 'successful':\n                return <CheckCircleIcon />;\n            case 'failed':\n            case 'error':\n                return <ExclamationCircleIcon />;\n            case 'running':\n                return <SyncAltIcon />;\n            case 'canceled':\n                return <ExclamationTriangleIcon />;\n                // case new, waiting, pending\n            default:\n                return <ClockIcon />;\n        }\n    };\n\n    return (\n        <Label variant=\"outline\" color={getColor()} icon={getIcon()}>\n            {capitalized(status)}\n        </Label>\n    );\n};\n\nJobStatus.propTypes = {\n    status: PropTypes.oneOf([\n        'successful',\n        'failed',\n        'error',\n        'running',\n        'new',\n        'waiting',\n        'pending',\n        'canceled'\n    ])\n};\n\nexport default JobStatus;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    DataListCell as PFDataListCell,\n    DataListContent,\n    DataList,\n    DataListItem,\n    DataListItemRow,\n    DataListItemCells as PFDataListItemCells,\n    DataListToggle as PFDataListToggle,\n    Tooltip\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkIcon } from '@patternfly/react-icons';\n\nimport LoadingState from '../Components/LoadingState';\nimport { formatDateTime, formatJobType } from '../Utilities/helpers';\nimport JobStatus from './JobStatus';\n\nconst headerLabels = [ 'Id/Name', 'Status', 'Cluster', 'Organization', 'Type' ];\n\nconst ExternalLinkIcon = styled(PFExternalLinkIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n`;\n\nconst DataListCell = styled(PFDataListCell)`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  text-align: center;\n`;\n\nconst DataListCellHeader = styled(DataListCell)`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  font-weight: bold;\n`;\n\nconst DataListItemCells = styled(PFDataListItemCells)`\n  align-items: center;\n`;\n\nconst DataListToggle = styled(PFDataListToggle)`\n  align-items: center;\n`;\n\nconst mobileBreakpoint = 765;\n\nconst buildHeader = labels => (\n    <DataListItem>\n        <DataListItemRow style={{ paddingLeft: '80px' }}>\n            <DataListItemCells\n                dataListCells={labels.map(label => (\n                    <DataListCellHeader key={label}>\n                        {label}\n                        {label === 'Id/Name' && <ExternalLinkIcon />}\n                    </DataListCellHeader>\n                ))}\n            />\n        </DataListItemRow>\n    </DataListItem>\n);\n\nconst buildListRow = (items, ariaLabel, ariaLabelledBy, windowWidth) => {\n    const [ isExpanded, setIsExpanded ] = useState([]);\n\n    return (\n        <>\n            {items.map((item, count) => {\n                const toggle = id => {\n                    const expanded = isExpanded;\n                    const idx = expanded.indexOf(id);\n                    const newExpanded =\n            idx >= 0\n                ? [\n                    ...expanded.slice(0, idx),\n                    ...expanded.slice(idx + 1, expanded.length)\n                ]\n                : [ ...expanded, id ];\n                    setIsExpanded(newExpanded);\n                };\n\n                return (\n                    <DataListItem\n                        key={item.id.id}\n                        aria-labelledby={ariaLabelledBy}\n                        isExpanded={isExpanded.includes(`${item.id.id}-toggle`)}\n                    >\n                        <DataListItemRow key={item.id.id}>\n                            <DataListToggle\n                                id={`${item.id.id}-toggle`}\n                                aria-controls={`${item.id.id}-expand`}\n                                onClick={() => toggle(`${item.id.id}-toggle`)}\n                                isExpanded={isExpanded.includes(`${item.id.id}-toggle`)}\n                            />\n                            <DataListItemCells\n                                dataListCells={[\n                                    <DataListCell key={count++}>\n                                        <a\n                                            href={item.id.tower_link}\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                        >\n                                            {windowWidth < mobileBreakpoint && (\n                                                <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                          Id/Name\n                                                    <ExternalLinkIcon />:\n                                                </span>\n                                            )}\n                      &nbsp;\n                                            {`${item.id.id} - ${item.id.template_name}`}\n                                        </a>\n                                    </DataListCell>,\n                                    <DataListCell key={count++}>\n                                        {windowWidth <= mobileBreakpoint && (\n                                            <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Status:\n                                            </span>\n                                        )}\n                    &nbsp;\n                                        <JobStatus status={item.status} />\n                                    </DataListCell>,\n                                    <Tooltip key={count++} content={<p>{item.cluster_name}</p>}>\n                                        <DataListCell>\n                                            {windowWidth <= mobileBreakpoint && (\n                                                <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                          Cluster:\n                                                </span>\n                                            )}\n                      &nbsp;\n                                            {item.cluster_name}\n                                        </DataListCell>\n                                    </Tooltip>,\n                                    <DataListCell key={count++}>\n                                        {windowWidth <= mobileBreakpoint && (\n                                            <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Organization:\n                                            </span>\n                                        )}\n                    &nbsp;\n                                        {item.org_name}\n                                    </DataListCell>,\n                                    <DataListCell key={count++}>\n                                        {windowWidth <= mobileBreakpoint && (\n                                            <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Type:\n                                            </span>\n                                        )}\n                    &nbsp;\n                                        {formatJobType(item.job_type)}\n                                    </DataListCell>\n                                ]}\n                            />\n                        </DataListItemRow>\n                        <DataListContent\n                            aria-label={`${item.id.id}-details`}\n                            id={'${item.id.id}'}\n                            isHidden={!isExpanded.includes(`${item.id.id}-toggle`)}\n                        >\n                            <DataListItemCells\n                                dataListCells={[\n                                    <DataListCell key={count++}>\n                    Created: {formatDateTime(item.created)}\n                                    </DataListCell>,\n                                    <DataListCell key={count++}>\n                    Started: {formatDateTime(item.started)}\n                                    </DataListCell>,\n                                    <DataListCell key={count++}>\n                    Finished: {formatDateTime(item.finished)}\n                                    </DataListCell>\n                                ]}\n                            />\n                        </DataListContent>\n                    </DataListItem>\n                );\n            })}\n        </>\n    );\n};\n\nconst AllJobsTemplate = ({ jobs }) => {\n    const [ windowWidth, setWindowWidth ] = useState(window.innerWidth);\n\n    const onResize = () => setWindowWidth(window.innerWidth);\n\n    useEffect(() => {\n        window.addEventListener('resize', onResize);\n        return () => window.removeEventListener('resize', onResize);\n    }, []);\n\n    return buildListRow(jobs, 'All jobs view', 'all-jobs', windowWidth);\n};\n\nconst JobExplorerList = ({ jobs }) => {\n    const [ windowWidth, setWindowWidth ] = useState(window.innerWidth);\n\n    const onResize = () => setWindowWidth(window.innerWidth);\n\n    useEffect(() => {\n        window.addEventListener('resize', onResize);\n        return () => window.removeEventListener('resize', onResize);\n    }, []);\n\n    return (\n        <>\n            {jobs.length <= 0 && <LoadingState />}\n            <DataList isCompact>\n                {windowWidth >= mobileBreakpoint && buildHeader(headerLabels)}\n                <AllJobsTemplate jobs={jobs} windowWidth={windowWidth} />\n            </DataList>\n        </>\n    );\n};\n\nJobExplorerList.propTypes = {\n    jobs: PropTypes.array,\n    windowWidth: PropTypes.number\n};\n\nAllJobsTemplate.propTypes = {\n    jobs: PropTypes.array,\n    windowWidth: PropTypes.number\n};\n\nexport default JobExplorerList;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { parse, stringify } from 'query-string';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { Paths } from '../../paths';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoResults from '../../Components/NoResults';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport {\n    preflightRequest,\n    readJobExplorer,\n    readJobExplorerOptions\n} from '../../Api';\nimport { jobExplorer } from '../../Utilities/constants';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    Pagination,\n    PaginationVariant\n} from '@patternfly/react-core';\n\nimport JobExplorerList from '../../Components/JobExplorerList';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\nconst perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '15', value: 15 },\n    { title: '20', value: 20 },\n    { title: '25', value: 25 }\n];\n\nconst initialQueryParams = {\n    ...jobExplorer.defaultParams,\n    attributes: jobExplorer.attributes\n};\n\nconst optionsMapper = options => {\n    const { groupBy, attributes, ...rest } = options;\n    return rest;\n};\n\nconst JobExplorer = ({ location: { search }, history }) => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [\n        {\n            isLoading,\n            isSuccess,\n            error,\n            data: { meta = {}, items: data = []}\n        },\n        setData\n    ] = useApi({ meta: {}, items: []});\n    const [ currPage, setCurrPage ] = useState(1);\n    const [ options, setOptions ] = useApi({}, optionsMapper);\n\n    let initialSearchParams = parse(search, {\n        arrayFormat: 'bracket',\n        parseBooleans: true\n    });\n    let combined = { ...initialQueryParams, ...initialSearchParams };\n    const { queryParams, setLimit, setOffset, setFromToolbar } = useQueryParams(\n        combined\n    );\n\n    const updateURL = () => {\n        const { jobExplorer } = Paths;\n        const search = stringify(queryParams, { arrayFormat: 'bracket' });\n        history.replace({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    useEffect(() => {\n        insights.chrome.appNavClick({ id: 'job-explorer', secondaryNav: true });\n\n        window.insights.chrome.auth.getUser().then(\n            () =>\n                preflightRequest().catch(error => {\n                    setPreFlightError({ preflightError: error });\n                })\n            // Loading is set false when the data also loaded\n        );\n    }, []);\n\n    useEffect(() => {\n        setData(readJobExplorer({ params: queryParams }));\n        setOptions(readJobExplorerOptions({ params: queryParams }));\n        updateURL();\n    }, [ queryParams ]);\n\n    const returnOffsetVal = page => (page - 1) * queryParams.limit;\n\n    const handleSetPage = page => {\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    const handlePerPageSelect = (perPage, page) => {\n        setLimit(perPage);\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={'Job Explorer'} />\n            </PageHeader>\n\n            {preflightError && (\n                <Main>\n                    <EmptyState {...preflightError} />\n                </Main>\n            )}\n\n            {!preflightError && (\n                <Main>\n                    <Card>\n                        <CardBody>\n                            <FilterableToolbar\n                                categories={options.data}\n                                filters={queryParams}\n                                setFilters={setFromToolbar}\n                                pagination={\n                                    <Pagination\n                                        itemCount={meta && meta.count ? meta.count : 0}\n                                        widgetId=\"pagination-options-menu-top\"\n                                        perPageOptions={perPageOptions}\n                                        perPage={queryParams.limit}\n                                        page={currPage}\n                                        variant={PaginationVariant.top}\n                                        onPerPageSelect={(_event, perPage, page) => {\n                                            handlePerPageSelect(perPage, page);\n                                        }}\n                                        onSetPage={(_event, pageNumber) => {\n                                            handleSetPage(pageNumber);\n                                        }}\n                                        isCompact\n                                    />\n                                }\n                                hasSettings\n                            />\n                            {error && <ApiErrorState message={error.error} />}\n                            {isLoading && <LoadingState />}\n                            {isSuccess && data.length <= 0 && <NoResults />}\n                            {isSuccess && data.length > 0 && <JobExplorerList jobs={data} />}\n                            <Pagination\n                                itemCount={meta && meta.count ? meta.count : 0}\n                                widgetId=\"pagination-options-menu-bottom\"\n                                perPageOptions={perPageOptions}\n                                perPage={queryParams.limit}\n                                page={currPage}\n                                variant={PaginationVariant.bottom}\n                                onPerPageSelect={(_event, perPage, page) => {\n                                    handlePerPageSelect(perPage, page);\n                                }}\n                                onSetPage={(_event, pageNumber) => {\n                                    handleSetPage(pageNumber);\n                                }}\n                                style={{ marginTop: '20px' }}\n                            />\n                        </CardBody>\n                    </Card>\n                </Main>\n            )}\n        </React.Fragment>\n    );\n};\n\nJobExplorer.propTypes = {\n    location: PropTypes.object,\n    history: PropTypes.object\n};\n\nexport default JobExplorer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nimport {\n    NotificationDrawerList as PFNotificationDrawerList,\n    NotificationDrawerListItem as PFNotificationDrawerListItem,\n    NotificationDrawerListItemBody,\n    NotificationDrawerListItemHeader\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkAltIcon } from '@patternfly/react-icons';\nimport LoadingState from '../Components/LoadingState';\nimport { capitalize } from '../Utilities/helpers';\n\nconst ExternalLinkAltIcon = styled(PFExternalLinkAltIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n  font-size: 14px;\n`;\n\nconst NotificationDrawerListItem = styled(PFNotificationDrawerListItem)`\n  border-top: 1px solid var(--pf-global--BorderColor--light-100\n    );\n  border-bottom::nth-child(odd): 1px solid var(--pf-global--BorderColor--light-100\n    );\n  box-shadow: none;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst NotificationDrawerList = styled(PFNotificationDrawerList)`\n  &:last-child {\n    border-bottom: 1px solid var(--pf-global--BorderColor--light-100);\n  }\n`;\n\nconst stringifyDate = date => {\n    const day = moment(date);\n    const oneHour = 60 * 60 * 1000;\n    const now = moment().utc();\n\n    if (now.isAfter(day)) {\n        return `${now.diff(day, 'days')} day(s) ago.`;\n    }\n\n    if (day.isSame(now, 'day')) {\n        if (day.valueOf() > oneHour) {\n            return `${day.diff(now, 'hours')} hour(s) ago.`;\n        }\n\n        return `${now.diff(day, 'minutes')} minute(s) ago.`;\n    }\n};\n\nconst AllNotificationTemplate = ({ notifications }) =>\n    notifications.map(\n        ({ date, message, label, notification_id: id, tower_url: url }) => {\n            if (label === '' || label === 'notice') {\n                return (\n                    <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n                        <NotificationDrawerListItemHeader\n                            variant=\"info\"\n                            title={\n                                <>\n                                    {url ? (\n                                        <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                            {capitalize(label)}\n                                            <ExternalLinkAltIcon />\n                                        </a>\n                                    ) : (\n                                        capitalize(label)\n                                    )}\n                                </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody>\n                            {message}{' '}\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n\n            if (label === 'error') {\n                return (\n                    <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n                        <NotificationDrawerListItemHeader\n                            variant=\"danger\"\n                            title={\n                                <>\n                                    {url ? (\n                                        <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                            {capitalize(label)}\n                                            <ExternalLinkAltIcon />\n                                        </a>\n                                    ) : (\n                                        capitalize(label)\n                                    )}\n                                </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                            {message}{' '}\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n\n            if (label === 'warning') {\n                return (\n                    <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n                        <NotificationDrawerListItemHeader\n                            variant=\"warning\"\n                            title={\n                                <>\n                                    {url ? (\n                                        <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                            {capitalize(label)}\n                                            <ExternalLinkAltIcon />\n                                        </a>\n                                    ) : (\n                                        capitalize(label)\n                                    )}\n                                </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                            {message}{' '}\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n        }\n    );\n\nconst ErrorNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'error')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n                variant=\"danger\"\n                title={\n                    <>\n                        {url ? (\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                {capitalize(label)}\n                                <ExternalLinkAltIcon />\n                            </a>\n                        ) : (\n                            capitalize(label)\n                        )}\n                    </>\n                }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                {message}{' '}\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst NoticeNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'notice')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n                variant=\"info\"\n                title={\n                    <>\n                        {url ? (\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                {capitalize(label)}\n                                <ExternalLinkAltIcon />\n                            </a>\n                        ) : (\n                            capitalize(label)\n                        )}\n                    </>\n                }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                {message}{' '}\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst WarningNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'warning')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n                variant=\"warning\"\n                title={\n                    <>\n                        {url ? (\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                {capitalize(label)}\n                                <ExternalLinkAltIcon />\n                            </a>\n                        ) : (\n                            capitalize(label)\n                        )}\n                    </>\n                }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                {message}{' '}\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst NotificationsList = ({ filterBy, notifications }) => (\n    <>\n        <NotificationDrawerList>\n            {notifications.length <= 0 && <LoadingState />}\n            {filterBy === '' && (\n                <AllNotificationTemplate notifications={notifications} />\n            )}\n            {filterBy === 'notice' && (\n                <NoticeNotificationTemplate notifications={notifications} />\n            )}\n            {filterBy === 'error' && (\n                <ErrorNotificationTemplate notifications={notifications} />\n            )}\n            {filterBy === 'warning' && (\n                <WarningNotificationTemplate notifications={notifications} />\n            )}\n        </NotificationDrawerList>\n    </>\n);\n\nAllNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nErrorNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nWarningNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nNotificationsList.propTypes = {\n    notifications: PropTypes.array,\n    filterBy: PropTypes.string\n};\n\nexport default NotificationsList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoData from '../../Components/NoData';\nimport { preflightRequest, readClusters, readNotifications } from '../../Api';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle,\n    FormSelect,\n    FormSelectOption,\n    Pagination,\n    PaginationVariant,\n    NotificationDrawer\n} from '@patternfly/react-core';\n\nimport NotificationsList from '../../Components/NotificationsList';\n\nconst CardTitle = styled(PFCardTitle)`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n`;\n\nconst DropdownGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-end;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n\n  select {\n    margin: 0 10px;\n    width: 150px;\n\n    @media screen and (max-width: 1035px) {\n      margin: 10px 10px 0 0;\n    }\n\n    @media screen and (max-width: 865px) {\n      width: 100%;\n    }\n  }\n`;\n\nconst notificationOptions = [\n    {\n        value: 'please choose',\n        label: 'Select Notification Severity',\n        disabled: true\n    },\n    { value: 'error', label: 'View Critical', disabled: false },\n    { value: 'warning', label: 'View Warning', disabled: false },\n    { value: 'notice', label: 'View Notice', disabled: false },\n    { value: '', label: 'View All', disabled: false }\n];\n\nconst perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 }\n];\n\nfunction formatClusterName(data) {\n    const defaultClusterOptions = [\n        { value: 'please choose', label: 'Select cluster', disabled: true },\n        { value: '', label: 'All Clusters', disabled: false },\n        { value: -1, label: 'Unassociated', disabled: false }\n    ];\n    return data.reduce(\n        (formatted, { label, cluster_id: id, install_uuid: uuid }) => {\n            if (label.length === 0) {\n                formatted.push({ value: id, label: uuid, disabled: false });\n            } else {\n                formatted.push({ value: id, label, disabled: false });\n            }\n\n            return formatted;\n        },\n        defaultClusterOptions\n    );\n}\n\nconst initialQueryParams = {\n    limit: 5,\n    offset: 0\n};\n\nconst Notifications = () => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [ notificationsData, setNotificationsData ] = useState([]);\n    const [ clusterOptions, setClusterOptions ] = useState([]);\n    const [ selectedCluster, setSelectedCluster ] = useState('');\n    const [ firstRender, setFirstRender ] = useState(true);\n    const [ isLoading, setIsLoading ] = useState(true);\n    const [ meta, setMeta ] = useState({});\n    const [ currPage, setCurrPage ] = useState(1);\n    const {\n        queryParams,\n        setId,\n        setLimit,\n        setOffset,\n        setSeverity\n    } = useQueryParams(initialQueryParams);\n\n    useEffect(() => {\n        if (firstRender) {\n            return;\n        }\n\n        const getData = () => {\n            return readNotifications({ params: queryParams });\n        };\n\n        const update = async () => {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            getData().then(({ notifications: notificationsData = [], meta }) => {\n                setNotificationsData(notificationsData);\n                setMeta(meta);\n                setIsLoading(false);\n            });\n        };\n\n        update();\n    }, [ queryParams ]);\n\n    useEffect(() => {\n        insights.chrome.appNavClick({ id: 'notifications', secondaryNav: true });\n\n        let ignore = false;\n        const fetchEndpoints = () => {\n            return Promise.all(\n                [ readClusters(), readNotifications({ params: queryParams }) ].map(p =>\n                    p.catch(() => [])\n                )\n            );\n        };\n\n        async function initializeWithPreflight() {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            await preflightRequest().catch(error => {\n                setPreFlightError({ preflightError: error });\n            });\n            fetchEndpoints().then(\n                ([\n                    { templates: clustersData = []},\n                    { notifications: notificationsData = [], meta }\n                ]) => {\n                    if (!ignore) {\n                        const clusterOptions = formatClusterName(clustersData);\n                        setClusterOptions(clusterOptions);\n                        setNotificationsData(notificationsData);\n                        setMeta(meta);\n                        setFirstRender(false);\n                        setIsLoading(false);\n                    }\n                }\n            );\n        }\n\n        initializeWithPreflight();\n        return () => (ignore = true);\n    }, []);\n\n    const returnOffsetVal = page => {\n        let offsetVal = (page - 1) * queryParams.limit;\n        return offsetVal;\n    };\n\n    const handleSetPage = page => {\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    const handlePerPageSelect = (perPage, page) => {\n        setLimit(perPage);\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={'Notifications'} />\n            </PageHeader>\n            {preflightError && (\n                <Main>\n                    <EmptyState {...preflightError} />\n                </Main>\n            )}\n            {!preflightError && (\n                <>\n                    <Main>\n                        <Card>\n                            <CardTitle>\n                                <DropdownGroup>\n                                    <FormSelect\n                                        name=\"selectedCluster\"\n                                        value={selectedCluster}\n                                        onChange={value => {\n                                            setSelectedCluster(value);\n                                            setId(value);\n                                            setOffset(0);\n                                            setCurrPage(1);\n                                        }}\n                                        aria-label=\"Select Cluster\"\n                                    >\n                                        {clusterOptions.map(({ value, label, disabled }, index) => (\n                                            <FormSelectOption\n                                                isDisabled={disabled}\n                                                key={index}\n                                                value={value}\n                                                label={label}\n                                            />\n                                        ))}\n                                    </FormSelect>\n                                    <FormSelect\n                                        name=\"selectedNotification\"\n                                        value={queryParams.severity || ''}\n                                        onChange={value => {\n                                            setSeverity(value);\n                                            setOffset(0);\n                                            setCurrPage(1);\n                                        }}\n                                        aria-label=\"Select Notification Type\"\n                                    >\n                                        {notificationOptions.map(\n                                            ({ disabled, value, label }, index) => (\n                                                <FormSelectOption\n                                                    isDisabled={disabled}\n                                                    key={index}\n                                                    value={value}\n                                                    label={label}\n                                                />\n                                            )\n                                        )}\n                                    </FormSelect>\n                                </DropdownGroup>\n                                <Pagination\n                                    itemCount={meta && meta.count ? meta.count : 0}\n                                    widgetId=\"pagination-options-menu-top\"\n                                    perPageOptions={perPageOptions}\n                                    perPage={queryParams.limit}\n                                    page={currPage}\n                                    variant={PaginationVariant.top}\n                                    onPerPageSelect={(_event, perPage, page) => {\n                                        handlePerPageSelect(perPage, page);\n                                    }}\n                                    onSetPage={(_event, pageNumber) => {\n                                        handleSetPage(pageNumber);\n                                    }}\n                                    isCompact\n                                />\n                            </CardTitle>\n                            <CardBody>\n                                {isLoading && <LoadingState />}\n                                {!isLoading && notificationsData.length <= 0 && <NoData />}\n                                {!isLoading && notificationsData.length > 0 && (\n                                    <NotificationDrawer>\n                                        <NotificationsList\n                                            filterBy={queryParams.severity || ''}\n                                            options={notificationOptions}\n                                            notifications={notificationsData}\n                                        />\n                                    </NotificationDrawer>\n                                )}\n                                <Pagination\n                                    itemCount={meta && meta.count ? meta.count : 0}\n                                    widgetId=\"pagination-options-menu-bottom\"\n                                    perPageOptions={perPageOptions}\n                                    perPage={queryParams.limit}\n                                    page={currPage}\n                                    variant={PaginationVariant.bottom}\n                                    onPerPageSelect={(_event, perPage, page) => {\n                                        handlePerPageSelect(perPage, page);\n                                    }}\n                                    onSetPage={(_event, pageNumber) => {\n                                        handleSetPage(pageNumber);\n                                    }}\n                                    style={{ marginTop: '20px' }}\n                                />\n                            </CardBody>\n                        </Card>\n                    </Main>\n                </>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default Notifications;\n","import moment from 'moment';\n\n/*\n * isNumeric - return true if input is a real number\n */\nexport function isNumeric(val) {\n    if (val === 0 || val === '0') {\n        return true;\n    }\n\n    if (parseInt(val)) {\n        return true;\n    }\n\n    if (parseFloat(val)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function trimStr(str) {\n    return str.toString().replace(/['\"]+/g, '');\n}\n\nexport function formatDateTime(dateTime) {\n    return moment(new Date(dateTime).toISOString()).format('M/D/YYYY h:mm:ssa');\n}\n\nexport function formatDate(date) {\n    return moment(date).format('YYYY-MM-DD');\n}\n\nexport function formatSeconds(seconds) {\n    return moment()\n    .startOf('day')\n    .seconds(seconds)\n    .format('H:mm:ss');\n}\n\nexport function getTotal(data) {\n    if (!data) {\n        return;\n    } else {\n        let total = 0;\n        data.forEach(datum => {\n            total += parseInt(datum.count);\n        });\n        return total;\n    }\n}\n\nexport function formatPercentage(val) {\n    if (isNaN(val)) {\n        return;\n    }\n\n    return `${val}%`;\n}\n\nexport const capitalize = s => {\n    if (typeof s !== 'string') {\n        return '';\n    }\n\n    return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport function calculateDelta(a, b) {\n    if (!isNumeric(a) || !isNumeric(b)) {\n        return 0;\n    }\n\n    // never return less than zero ...\n    if (b - a < 0) {\n        return 0;\n    }\n\n    return b - a;\n}\n\nexport function convertMinsToMs(mins) {\n    if (!parseInt(mins)) {\n        return 0;\n    }\n\n    return mins * 60000;\n}\n\nexport function convertMsToMins(ms) {\n    if (!parseInt(ms)) {\n        return 0;\n    }\n\n    return ms / 60000;\n}\n\nexport function convertSecondsToMins(seconds) {\n    if (!parseInt(seconds)) {\n        return 0;\n    }\n\n    return seconds / 60;\n}\n\nexport function convertMinsToSeconds(mins) {\n    if (!parseInt(mins) || parseInt(mins) < 0) {\n        return 0;\n    }\n\n    return +parseInt(mins) * 60;\n}\n\nexport function convertSecondsToHours(seconds) {\n    if (!parseInt(seconds)) {\n        return 0;\n    }\n\n    return seconds / 3600;\n}\n\nexport function convertWithCommas(arr, key) {\n    const split = arr.reduce((strs, datum) => {\n        strs.push(datum[key]);\n        return strs;\n    }, []);\n    return split.join(', ');\n}\n\nexport function formatJobType(type) {\n    return type === 'job' ? 'Playbook run' : 'Workflow job';\n}\n\nexport function formatJobStatus(status) {\n    return status === 'successful' ? 'Success' : 'Failed';\n}\n\nexport function formatJobDetailsURL(baseURL, jobId) {\n    const subDirectory1 = 'job';\n    const subDirectory2 = 'details';\n    return `${baseURL}/#/${subDirectory1}/${jobId}/${subDirectory2}/`;\n}\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst DefaultLoadingState = () => (\n    <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={CubesIcon} />\n        <Title headingLevel=\"h5\" size=\"lg\">\n      Loading...\n        </Title>\n        <EmptyStateBody>Please wait.</EmptyStateBody>\n    </EmptyState>\n);\n\nexport default DefaultLoadingState;\n"],"sourceRoot":""}