{"version":3,"sources":["webpack:///./src/Components/EmptyState.js","webpack:///./src/Charts/BaseChart.js","webpack:///./src/Components/NoData.js","webpack:///./src/Components/ApiErrorState.js","webpack:///./src/Utilities/useApi.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Components/Toolbar/CategoryDropdown.js","webpack:///./src/Components/Toolbar/CustomDateSelector.js","webpack:///./src/Components/Toolbar/constants.js","webpack:///./src/Components/Toolbar/ToolbarFilterItem.js","webpack:///./src/Components/Toolbar/helpers.js","webpack:///./src/Components/Toolbar/Toolbar.js","webpack:///./src/Components/Toolbar/index.js","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/Utilities/useRedirect.js","webpack:///./src/Charts/ROITopTemplates.js","webpack:///./src/Containers/AutomationCalculator/helpers.js","webpack:///./src/Containers/AutomationCalculator/TotalSavings.js","webpack:///./src/Containers/AutomationCalculator/CalculationCost.js","webpack:///./src/Containers/AutomationCalculator/AutomationFormula.js","webpack:///./src/Containers/AutomationCalculator/TopTemplates.js","webpack:///./src/Containers/AutomationCalculator/AutomationCalculator.js","webpack:///./src/Utilities/Tooltip.js","webpack:///./src/Charts/BarChart.js","webpack:///./src/Charts/LineChart.js","webpack:///./src/Components/ModulesList.js","webpack:///./src/Components/TemplatesList.js","webpack:///./src/Containers/Clusters/Clusters.js","webpack:///./src/Utilities/Legend.js","webpack:///./src/Utilities/colors.js","webpack:///./src/Charts/GroupedBarChart.js","webpack:///./src/Charts/PieChart.js","webpack:///./src/Containers/OrganizationStatistics/OrganizationStatistics.js","webpack:///./src/Components/NoResults.js","webpack:///./src/Components/JobStatus.js","webpack:///./src/Components/JobExplorerList.js","webpack:///./src/Containers/JobExplorer/JobExplorer.js","webpack:///./src/Components/NotificationsList.js","webpack:///./src/Containers/Notifications/Notifications.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Components/LoadingState.js","webpack:///./src/Api.js","webpack:///./src/Utilities/useQueryParams.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_patternfly_react_core_dist_js_components_Button_Button_js__WEBPACK_IMPORTED_MODULE_2__","_patternfly_react_core_dist_js_components_Title_Title_js__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_core_dist_js_components_EmptyState_EmptyState_js__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateIcon_js__WEBPACK_IMPORTED_MODULE_5__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateBody_js__WEBPACK_IMPORTED_MODULE_6__","_patternfly_react_icons_dist_js_icons_wrench_icon__WEBPACK_IMPORTED_MODULE_7__","_patternfly_react_icons_dist_js_icons_wrench_icon__WEBPACK_IMPORTED_MODULE_7___default","DefaultEmptyState","_ref","error","preflightError","a","createElement","variant","full","icon","status","Fragment","headingLevel","size","href","target","rel","onClick","window","location","reload","propTypes","object","__webpack_exports__","initializeChart","Chart","BaseChart","props","id","margin","react__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","getWidth","parseInt","d3__WEBPACK_IMPORTED_MODULE_3__","style","left","right","getHeight","top","bottom","prop_types__WEBPACK_IMPORTED_MODULE_2___default","string","element","_patternfly_react_core_dist_js_components_Title_Title_js__WEBPACK_IMPORTED_MODULE_1__","_patternfly_react_core_dist_js_components_EmptyState_EmptyState_js__WEBPACK_IMPORTED_MODULE_2__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateIcon_js__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_4___default","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateBody_js__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateIcon_js__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_core_dist_js_components_Title_Title_js__WEBPACK_IMPORTED_MODULE_5__","_patternfly_react_icons_dist_js_icons_exclamation_circle_icon__WEBPACK_IMPORTED_MODULE_6__","_patternfly_react_icons_dist_js_icons_exclamation_circle_icon__WEBPACK_IMPORTED_MODULE_6___default","_patternfly_react_tokens__WEBPACK_IMPORTED_MODULE_7__","ApiErrorState","message","small","color","value","dataFetchReducer","state","action","type","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1___default","isLoading","isSuccess","data","payload","Error","initialData","postprocess","arguments","length","undefined","d","_useState","Object","react__WEBPACK_IMPORTED_MODULE_2__","_useState2","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default","request","setRequest","_useReducer","_useReducer2","dispatch","didCancel","insights","chrome","auth","getUser","then","catch","e","jobExplorer","roi","attributes","defaultParams","quick_date_range","job_type","org_id","cluster_id","template_id","sort_by","start_date","end_date","only_root_workflows_and_standalone_jobs","limit","group_by","group_by_time","granularity","CategoryDropdown_CategoryDropdown","selected","_ref$setSelected","setSelected","_ref$categories","categories","react","slicedToArray_default","isExpanded","setIsExpanded","react_default","ToolbarItem","Select","isOpen","aria-label","onToggle","onSelect","_event","selection","selections","placeholderText","map","_ref2","key","name","SelectOption","prop_types_default","array","func","Toolbar_CategoryDropdown","CustomDateSelector_CustomDateSelector","_ref$onInputChange","onInputChange","_ref$startDate","startDate","_ref$endDate","endDate","InputGroup","TextInput","onChange","Toolbar_CustomDateSelector","optionsForCategories","isSingle","placeholder","ToolbarFilterItem_ToolbarFilterItem","categoryKey","_ref$filter","filter","_ref$values","values","_ref$isVisible","isVisible","_ref$hasChips","hasChips","setFilter","expanded","setExpanded","options","ToolbarFilter","showToolbarItem","chips","item","comparator","val","forEach","i","handleSingleChips","reduce","acc","Number","isInteger","cmpItem","push","handleCheckboxChips","categoryName","deleteChip","valueToDelete","keyToDelete","find","filteredArr","event","checked","concat","toConsumableArray_default","_ref3","description","isRequired","any","bool","Toolbar_ToolbarFilterItem","Toolbar_FilterableToolbar","filters","setFilters","_ref$pagination","pagination","_ref$hasSettings","hasSettings","settingsExpanded","setSettingsExpanded","restCategories","objectWithoutProperties_default","filterCategories","keys","includes","obj","_useState3","_useState4","currentCategory","setCurrentCategory","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarContent","Button","filter_icon_default","ToolbarGroup","el","sort_amount_down_icon_default","isActive","cog_icon_default","visibility","default","lg","Card","isFlat","backgroundColor","CardHeader","CardActions","times_icon_default","CardTitle","CardBody","Switch","label","labelOff","isChecked","Tooltip","position","content","question_circle_icon_default","Toolbar_Toolbar","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","code","resolve","module","exports","Utilities_useRedirect","history","path","query","search","query_string","arrayFormat","pathname","paths","ROITopTemplates_Tooltip","_this","this","classCallCheck_default","defineProperty_default","savings","manualCost","automationCost","scrollLeftOffset","d3","node","scrollLeft","x","pageX","svg","getBoundingClientRect","y","pageY","formatDollars","delta","automatedCost","toolTipWidth","toolTipBase","width","chartWidth","flipped","text","nameWidth","getComputedTextLength","savingsWidth","manualCostWidth","automationCostWidth","widestTextElem","adjustedWidth","maxTextPerc","boxWidth","overage","boundingBox","attr","toolTipPoint","interrupt","transition","delay","draw","amount","parseFloat","toFixed","toString","replace","append","slice","textWidthThreshold","ROITopTemplates_TopTemplatesSavings","TopTemplatesSavings","_this2","possibleConstructorReturn_default","getPrototypeOf_default","call","init","bind","assertThisInitialized_default","resize","timeout","_this3","clearTimeout","setState","setTimeout","remove","ticks","height","rangeRound","padding","range","formatYAxisValue","xAxis","tickValues","yAxis","tickFormat","tickSize","taskNames","tooltip","domain","selectAll","bandwidth","enter","on","darker","handleMouseOver","handleMouseOut","addEventListener","removeEventListener","ROITopTemplates","BorderedCardTitle","styled_components_browser_esm","_templateObject","TotalSavings_TotalSavings","_ref$totalSavings","totalSavings","borderTop","paddingBottom","Title","total","floatToStringWithCommas","number","AutomationCalculator_TotalSavings","InputAndText","div","CalculationCost_templateObject","validFloat","floatValue","CalculationCost_CalculationCost","_ref$costManual","costManual","_ref$setCostManual","setCostManual","_ref$costAutomation","costAutomation","_ref$setCostAutomatio","setCostAutomation","InputGroupText","dollar_sign_icon_default","paddingTop","AutomationCalculator_CalculationCost","AutomationCalculator_AutomationFormula","TemplateDetail","TopTemplates_templateObject","TemplateDetailSubTitle","em","_templateObject2","TooltipWrapper","_templateObject3","IconGroup","_templateObject4","TopTemplates_InputAndText","_templateObject5","TopTemplates_QuestionIconTooltip","Popover","bodyContent","successful_elapsed_total","total_org_count","total_cluster_count","info_circle_icon_default","TopTemplates_TopTemplates","_ref2$data","_ref2$setDataRunTime","setDataRunTime","_ref2$redirectToJobEx","redirectToJobExplorer","overflow","flex","className","Tooltip_Tooltip","component","helpers","avgRunTime","minutes","successful_hosts_total","deselectedIds","setDeselectedIds","AutomationCalculator_TopTemplates","Wrapper","AutomationCalculator_templateObject","WrapperLeft","AutomationCalculator_templateObject2","WrapperRight","AutomationCalculator_templateObject3","AutomationCalculator_updateDeltaCost","objectSpread_default","AutomationCalculator_AutomationCalculator","toJobExplorer","_useApi","useApi","_useApi2","preflight","setPreflight","_useApi3","_useApi4","setOptions","_useApi5","_ref$items","items","AutomationCalculator_mapApi","_useApi6","api","fetchApi","setDataInApi","_useQueryParams","useQueryParams","constants","queryParams","setFromToolbar","seconds","updatedData","Api","params","templateId","PageHeader","title","Main","EmptyState","LoadingState","NoData","textAlign","paddingLeft","sum","curr","computeTotalSavings","display","flexDirection","setUnfilteredData","Utilities_Tooltip","opts","success","fail","formatTooltipDate","RAN","FAIL","TOTAL","date","DATE","jobs","jobsWidth","failed","successful","successTextWidth","failTextWidth","circleSuccess","circleFail","failedIcon","successIcon","successText","failText","clickMore","colors","BarChart_BarChart","BarChart","formattedData","formattedDate","initialQueryParams","parseTime","_this$props","unformattedData","formatted","created","Date","barTooltip","layers","order","offset","stack","maxTicks","Math","round","layer","_d","duration","ease","prevProps","Charts_BarChart","withRouter","LineChart_LineChart","LineChart","updateCluster","clusterId","attrTween","tweenDash","l","getTotalLength","t","successLine","curve","failLine","defined","isNaN","vertical","handleMouseMove","intersectX","cx","baseVal","Charts_LineChart","ModulesList_DataListCell","DataListCell","ModulesList_DataListItem","DataListItem","DataCellEnd","ModulesList_ModulesList","modules","DataList","maxHeight","background","aria-labelledby","border","index","count","Components_ModulesList","TemplatesList_success","circle_icon_default","marginRight","TemplatesList_fail","TemplatesList_DataListCell","TemplatesList_templateObject","PFDataListItemNoBorder","TemplatesList_templateObject2","TemplatesList_DataListItem","TemplatesList_templateObject3","DataListItemCompact","DataListCellCompact","DataListFocus","_templateObject6","TemplatesList_DataCellEnd","_templateObject7","DataCellEndCompact","_templateObject8","TemplatesList_TemplatesList","templates","isModalOpen","setIsModalOpen","selectedId","setSelectedId","_useState5","_useState6","selectedTemplate","setSelectedTemplate","_useState7","_useState8","relatedJobs","setRelatedJobs","asyncToGenerator_default","regenerator_default","mark","_callee","wrap","_context","prev","next","related_jobs","stop","apply","update","Modal","onClose","actions","total_run_count","total_run","average_run","success_rate","most_failed_tasks","percentage","fail_rate","task_name","TemplatesList_formatTopFailedTask","Label","job","job_id","job_name","cluster_label","install_uuid","start_time","total_time","Components_TemplatesList","Clusters_CardTitle","Clusters_templateObject","timeFrameOptions","disabled","Clusters_initialQueryParams","moment_default","subtract","format","setPreFlightError","barChartData","setBarChartData","lineChartData","setLineChartData","templatesData","setTemplatesData","_useState9","_useState10","modulesData","setModulesData","_useState11","_useState12","clusterOptions","setClusterOptions","_useState13","_useState14","clusterTimeFrame","setClusterTimeFrame","_useState15","_useState16","selectedCluster","setSelectedCluster","_useState17","_useState18","setIsLoading","setEndDate","setStartDate","setId","appNavClick","secondaryNav","_ref3$templates","uuid","formatClusterName","Promise","all","_ref4","_ref5","_ref5$0$data","chartData","_ref5$1$modules","_ref5$2$templates","justifyContent","FormSelect","_ref6","FormSelectOption","isDisabled","option","marginTop","Container","LegendDetail","Color","attrs","span","SubTitle","Legend_Switch","Legend_Legend","Legend","handleChange","_isChecked","some","Utilities_Legend","pfmulti","GroupedBarChart_Wrapper","GroupedBarChart_templateObject","GroupedBarChart_color","GroupedBarChart_Tooltip","orgName","org_name","GroupedBarChart_GroupedBarChart","GroupedBarChart","handleToggle","orgsList","orgs","indexOf","s","_this4","org","timeFrame","selectedOrgs","x0","x1","dates","selectedOrgNames","exit","bars","merge","subEnter","_this$state","isAccessible","Charts_GroupedBarChart","PieChart_Wrapper","PieChart_templateObject","PieChart_Tooltip","perc","percSuccess","drawn","percent","maxLength","percentageTotal","percentageSuccess","boundingBOx","showSuccess","boundingHeight","boundingWidth","PieChart_PieChart","PieChart","sort","b","radius","min","datum","donutTooltip","pie","arc","outerRadius","innerRadius","classed","Charts_PieChart","OrganizationStatistics_CardTitle","OrganizationStatistics_templateObject","CardContainer","OrganizationStatistics_templateObject2","TopCard","OrganizationStatistics_templateObject3","sortOptions","OrganizationStatistics_initialQueryParams","pieChart1Data","setPieChart1Data","pieChart2Data","setPieChart2Data","groupedBarChartData","setGroupedBarChartData","timeframe","setTimeframe","sortOrder","setSortOrder","firstRender","setFirstRender","setSortBy","setLimit","ignore","fetchEndpoints","p","_ref3$0$dates","_ref3$1$usages","usages","_ref3$2$usages","_initializeWithPreflight","_callee2","_context2","_ref5$0$dates","_ref5$1$usages","_ref5$2$usages","initializeWithPreflight","setLimitValue","marginLeft","Components_NoResults","EmptyState_EmptyState","EmptyStateIcon","search_icon_default","EmptyStateBody","JobStatus_JobStatus","getColor","check_circle_icon_default","exclamation_circle_icon_default","sync_alt_icon_default","exclamation_triangle_icon_default","clock_icon_default","getIcon","str","charAt","toUpperCase","capitalized","oneOf","Components_JobStatus","headerLabels","ExternalLinkIcon","external_link_alt_icon_default","JobExplorerList_DataListCell","DataListCellHeader","JobExplorerList_DataListItemCells","DataListItemCells","JobExplorerList_DataListToggle","DataListToggle","JobExplorerList_buildListRow","ariaLabel","ariaLabelledBy","windowWidth","DataListItemRow","aria-controls","idx","newExpanded","toggle","dataListCells","tower_link","fontWeight","template_name","cluster_name","DataListContent","isHidden","started","finished","JobExplorerList_AllJobsTemplate","innerWidth","setWindowWidth","onResize","JobExplorerList_JobExplorerList","isCompact","labels","JobExplorerList_buildHeader","Components_JobExplorerList","perPageOptions","JobExplorer_optionsMapper","groupBy","JobExplorer_JobExplorer","meta","_useApi2$","_useApi2$$data","_useApi2$$data$meta","_useApi2$$data$items","setData","currPage","setCurrPage","initialSearchParams","parseBooleans","combined","setOffset","updateURL","returnOffsetVal","page","handleSetPage","nextOffset","handlePerPageSelect","perPage","Pagination","itemCount","widgetId","onPerPageSelect","onSetPage","pageNumber","ExternalLinkAltIcon","NotificationsList_NotificationDrawerListItem","NotificationDrawerListItem","NotificationsList_NotificationDrawerList","NotificationDrawerList","NotificationsList_stringifyDate","day","now","utc","isAfter","diff","isSame","valueOf","NotificationsList_AllNotificationTemplate","notifications","notification_id","url","tower_url","NotificationDrawerListItemHeader","NotificationDrawerListItemBody","timestamp","NotificationsList_ErrorNotificationTemplate","notification","NotificationsList_NoticeNotificationTemplate","NotificationsList_WarningNotificationTemplate","_ref7","_ref8","NotificationsList_NotificationsList","_ref9","filterBy","Components_NotificationsList","Notifications_CardTitle","Notifications_templateObject","DropdownGroup","Notifications_templateObject2","notificationOptions","notificationsData","setNotificationsData","setMeta","setSeverity","_ref3$notifications","_ref5$0$templates","clustersData","_ref5$","_ref5$$notifications","severity","NotificationDrawer","trimStr","formatDateTime","formatDate","formatSeconds","getTotal","formatPercentage","capitalize","calculateDelta","convertSecondsToMins","convertMinsToSeconds","convertSecondsToHours","formatJobType","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","isNumeric","dateTime","toISOString","startOf","mins","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateBody_js__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_5__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_5___default","readTemplateJobs","preflightRequest","readClusters","readChart30","readJobsByDateAndOrg","readModules","readTemplates","readNotifications","readJobExplorerOptions","readJobExplorer","readJobRunsByOrg","readJobEventsByOrg","readROI","readROIOptions","query_string__WEBPACK_IMPORTED_MODULE_0__","barChartEndpoint","clustersEndpoint","groupedBarChartEndpoint","modulesEndpoint","notificationsEndPoint","pieChart1Endpoint","pieChart2Endpoint","preflightEndpoint","templateJobsEndpoint","templatesEndPoint","getAbsoluteUrl","arr","split","pop","join","handleResponse","response","json","ok","reject","_ref$params","formattedUrl","URL","searchParams","fetch","_ref2$params","_ref3$params","_ref4$params","_ref5$params","_ref6$params","_ref7$params","method","body","JSON","stringify","_ref8$params","paginationParams","qs","_ref9$params","_ref10","_ref10$params","_ref11","_ref11$params","_ref12","_ref12$params","initial","react__WEBPACK_IMPORTED_MODULE_4__","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_3___default","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2___default","newState","newValues","entries","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default","_Utilities_helpers__WEBPACK_IMPORTED_MODULE_6__","actionMapper","varName","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default","moment__WEBPACK_IMPORTED_MODULE_5___default","days","setStartDateAsString"],"mappings":"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OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,QAAA,IACAC,WAAA,IACAC,OAAA,IACAC,UAAA,IACAC,QAAA,IACAC,WAAA,IACAC,QAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,WAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,gBAAA,IACAC,OAAA,IACAC,UAAA,IACAC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","file":"js/automation_analytics.7c286511104384280bd5.js","sourcesContent":["/*eslint max-len: [\"error\", { \"ignoreStrings\": true }]*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Button,\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { WrenchIcon } from '@patternfly/react-icons';\n\nconst DefaultEmptyState = ({ preflightError: error }) => (\n    <EmptyState variant={ EmptyStateVariant.full }>\n        <EmptyStateIcon icon={ WrenchIcon } />\n        { error.status === 404 && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    No data found\n                </Title>\n                <EmptyStateBody>\n                    Please visit <a href='https://docs.ansible.com/ansible-tower/latest/html/administration/usability_data_collection.html#automation-analytics' target='_blank' rel='noopener noreferrer'>here</a> to learn how to enable Automation Analytics.\n                </EmptyStateBody>\n            </>\n        ) }\n        { error.status === 401 && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    Not authorized\n                </Title>\n                <EmptyStateBody>\n                    You do not have the correct permissions to view this page.\n                </EmptyStateBody>\n            </>\n        ) }\n        { !error.status && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    Something went wrong, please try reloading the page\n                </Title>\n                <Button variant=\"primary\" onClick={ () => window.location.reload() }>Reload</Button>\n            </>\n        ) }\n\n    </EmptyState>\n);\n\nDefaultEmptyState.propTypes = {\n    preflightError: PropTypes.object\n};\n\nexport default DefaultEmptyState;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nconst initializeChart = Chart => {\n    const BaseChart = (props) => {\n        const { id, margin } = props;\n\n        const getWidth = () => {\n            let width;\n            width =\n            parseInt(d3.select('#' + id).style('width')) -\n                margin.left - margin.right || 700;\n            return width;\n        };\n\n        const getHeight = () => {\n            let height;\n            height =\n            parseInt(d3.select('#' + id).style('height')) -\n                margin.top - margin.bottom || 450;\n            return height;\n        };\n\n        return (\n            <Chart\n                { ...props }\n                getWidth={ getWidth }\n                getHeight={ getHeight }\n            />\n        );\n    };\n\n    BaseChart.propTypes = {\n        id: PropTypes.string,\n        margin: PropTypes.object\n    };\n\n    return BaseChart;\n};\n\ninitializeChart.propTypes = {\n    Chart: PropTypes.element\n};\n\nexport default initializeChart;\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst NoData = () => (\n    <EmptyState variant={ EmptyStateVariant.full }>\n        <EmptyStateIcon icon={ CubesIcon } />\n        <Title headingLevel=\"h5\" size=\"lg\">\n            No Data\n        </Title>\n    </EmptyState>\n);\n\nexport default NoData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateIcon,\n    EmptyStateVariant,\n    Title\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { global_danger_color_200 as globalDangerColor200 } from '@patternfly/react-tokens';\n\nconst ApiErrorState = ({ message }) => (\n    <EmptyState variant={ EmptyStateVariant.small }>\n        <EmptyStateIcon icon={ ExclamationCircleIcon } color={ globalDangerColor200.value } />\n        <Title headingLevel=\"h2\" size=\"lg\">Error</Title>\n        <EmptyStateBody>\n            { message }\n        </EmptyStateBody>\n    </EmptyState>\n);\n\nApiErrorState.propTypes = {\n    message: PropTypes.string\n};\n\nexport default ApiErrorState;\n","import { useState, useEffect, useReducer } from 'react';\n\nconst dataFetchReducer = (state, action) => {\n    switch (action.type) {\n        case 'FETCH_INIT':\n            return {\n                ...state,\n                isLoading: true,\n                isSuccess: false,\n                error: null\n            };\n        case 'FETCH_SUCCESS':\n            return {\n                ...state,\n                isLoading: false,\n                isSuccess: true,\n                error: null,\n                data: action.payload\n            };\n        case 'FETCH_FAILURE':\n            return {\n                ...state,\n                isLoading: false,\n                isSuccess: false,\n                error: action.payload\n            };\n        case 'UPDATE_DATA':\n            return {\n                ...state,\n                data: action.payload\n            };\n        default:\n            throw new Error();\n    }\n};\n\nconst useApi = (initialData, postprocess = d => d) => {\n    const [ request, setRequest ] = useState(null);\n\n    const [ state, dispatch ] = useReducer(dataFetchReducer, {\n        isLoading: false,\n        isSuccess: false,\n        error: null,\n        data: initialData\n    });\n\n    useEffect(() => {\n        // Prevent fetching nothing\n        if (!request) {\n            return;\n        }\n\n        // Initialize\n        let didCancel = false;\n        dispatch({ type: 'FETCH_INIT' });\n\n        // Fetching\n        window.insights.chrome.auth.getUser().then(() => request.then(data => {\n            if (!didCancel) {\n                dispatch({\n                    type: 'FETCH_SUCCESS',\n                    payload: postprocess(data)\n                });\n            }\n        }).catch(e => {\n            if (!didCancel) {\n                dispatch({ type: 'FETCH_FAILURE', payload: e });\n            }\n        }));\n\n        return () => { didCancel = true; };\n    }, [ request ]);\n\n    const setData = data => {\n        dispatch({ type: 'UPDATE_DATA', payload: data });\n    };\n\n    return [ state, setRequest, setData ];\n};\n\nexport default useApi;\n","export const jobExplorer = {\n    attributes: [\n        'id',\n        'status',\n        'job_type',\n        'started',\n        'finished',\n        'elapsed',\n        'created',\n        'cluster_name',\n        'org_name',\n        'most_failed_tasks'\n    ],\n    defaultParams: {\n        status: [ 'successful', 'failed' ],\n        quick_date_range: 'last_30_days',\n        job_type: [ 'workflowjob', 'job' ],\n        org_id: [],\n        cluster_id: [],\n        template_id: [],\n        sort_by: 'created:desc',\n        start_date: null,\n        end_date: null,\n        only_root_workflows_and_standalone_jobs: false,\n        limit: 5\n    }\n};\n\nexport const roi = {\n    defaultParams: {\n        status: [ 'successful' ],\n        org_id: [],\n        cluster_id: [],\n        template_id: [],\n        quick_date_range: 'roi_last_year',\n        job_type: [ 'job' ],\n        sort_by: 'template_productivity_score:desc',\n        start_date: null,\n        end_date: null,\n        limit: 25,\n        only_root_workflows_and_standalone_jobs: true,\n        attributes: [\n            'successful_hosts_total',\n            'successful_elapsed_total',\n            'total_org_count',\n            'total_cluster_count'\n        ],\n        group_by: 'template',\n        group_by_time: false,\n        granularity: 'monthly'\n    }\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ToolbarItem,\n    Select,\n    SelectOption\n} from '@patternfly/react-core';\n\nconst CategoryDropdown = ({\n    selected,\n    setSelected = () => {},\n    categories = []\n}) => {\n    const [ isExpanded, setIsExpanded ] = useState(false);\n\n    return (\n        <ToolbarItem>\n            <Select\n                isOpen={ isExpanded }\n                variant={ 'single' }\n                aria-label={ 'Categories' }\n                onToggle={ () => setIsExpanded(!isExpanded) }\n                onSelect={ (_event, selection) => {\n                    setSelected(selection);\n                    setIsExpanded(false);\n                } }\n                selections={ selected }\n                placeholderText={ 'Filter by' }\n            >\n                {\n                    categories.map(({ key, name }) => (\n                        <SelectOption key={ key } value={ key }>\n                            { name }\n                        </SelectOption>\n                    ))\n                }\n            </Select>\n        </ToolbarItem>\n    );\n};\n\nCategoryDropdown.propTypes = {\n    categories: PropTypes.array,\n    selected: PropTypes.string,\n    setSelected: PropTypes.func\n};\n\nexport default CategoryDropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    InputGroup,\n    TextInput\n} from '@patternfly/react-core';\n\nconst CustomDateSelector = ({\n    onInputChange = () => {},\n    startDate = '',\n    endDate = ''\n}) => {\n    return (\n        <>\n          <InputGroup>\n              <TextInput\n                  name=\"startDate\"\n                  id=\"startDate\"\n                  type=\"date\"\n                  aria-label=\"Start Date\"\n                  value={ startDate }\n                  onChange={ e => onInputChange('start_date', e) }\n              />\n          </InputGroup>\n          <InputGroup>\n              <TextInput\n                  name=\"endDate\"\n                  id=\"endDate\"\n                  type=\"date\"\n                  aria-label=\"End Date\"\n                  value={ endDate }\n                  onChange={ e => onInputChange('end_date', e) }\n              />\n          </InputGroup>\n        </>\n    );\n};\n\nCustomDateSelector.propTypes = {\n    startDate: PropTypes.string,\n    endDate: PropTypes.string,\n    onInputChange: PropTypes.func\n};\n\nexport default CustomDateSelector;\n","export const optionsForCategories = {\n    status: {\n        isSingle: false,\n        name: 'Status',\n        placeholder: 'Filter by job status'\n    },\n    quick_date_range: {\n        isSingle: true,\n        name: 'Date',\n        placeholder: 'Filter by date'\n    },\n    job_type: {\n        isSingle: false,\n        name: 'Job',\n        placeholder: 'Filter by job type'\n    },\n    org_id: {\n        isSingle: false,\n        name: 'Organization',\n        placeholder: 'Filter by organization'\n    },\n    cluster_id: {\n        isSingle: false,\n        name: 'Cluster',\n        placeholder: 'Filter by cluster'\n    },\n    template_id: {\n        isSingle: false,\n        name: 'Template',\n        placeholder: 'Filter by template'\n    },\n    sort_by: {\n        isSingle: true,\n        name: 'Sort by',\n        placeholder: 'Sort by attribute'\n    }\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ToolbarFilter,\n    Select,\n    SelectOption\n} from '@patternfly/react-core';\nimport {\n    handleCheckboxChips,\n    handleSingleChips\n} from './helpers';\nimport { optionsForCategories } from './constants';\n\nconst ToolbarFilterItem = ({\n    categoryKey,\n    filter = null,\n    values = [],\n    isVisible = true,\n    hasChips = true,\n    setFilter\n}) => {\n    const [ expanded, setExpanded ] = useState(false);\n    const options = optionsForCategories[categoryKey];\n\n    const onDelete = (name, valueToDelete) => {\n        const single = optionsForCategories[categoryKey].isSingle;\n\n        if (single) {\n            setFilter(null);\n        } else {\n            const keyToDelete = values.find(({ value }) => value === valueToDelete).key;\n            const filteredArr = filter.filter(value => value !== keyToDelete);\n            setFilter(filteredArr);\n        }\n    };\n\n    const handleChips = () => {\n        if (options.isSingle) {\n            return handleSingleChips(filter, values);\n        } else {\n            return handleCheckboxChips(filter, values);\n        }\n    };\n\n    const onSelect = (event, selection) => {\n        if (options.isSingle) {\n            setFilter(selection);\n            setExpanded(false);\n        } else {\n            setFilter(event.target.checked\n                ? [ ...filter, selection ]\n                : filter.filter(value => value !== selection)\n            );\n        }\n    };\n\n    return (\n        <ToolbarFilter\n            key = { categoryKey }\n            showToolbarItem={ isVisible }\n            chips={ hasChips ? handleChips() : [] }\n            categoryName={ options.name }\n            deleteChip={ hasChips ? onDelete : null }\n        >\n            <Select\n                variant={ options.isSingle ? 'single' : 'checkbox' }\n                aria-label={ categoryKey }\n                onToggle={ () => setExpanded(!expanded) }\n                onSelect={ onSelect }\n                selections={ filter }\n                isOpen={ expanded }\n                placeholderText={ options.placeholder }\n            >\n                {\n                    values && values.map(({ key, value, description }) => (\n                        <SelectOption key={ key } value={ key } description={ description }>\n                            { value }\n                        </SelectOption>\n                    ))\n                }\n            </Select>\n        </ToolbarFilter>\n    );\n};\n\nToolbarFilterItem.propTypes = {\n    categoryKey: PropTypes.string.isRequired,\n    filter: PropTypes.any,\n    values: PropTypes.array,\n    isVisible: PropTypes.bool,\n    hasChips: PropTypes.bool,\n    setFilter: PropTypes.func.isRequired\n};\n\nexport default ToolbarFilterItem;\n","/**\n * Get comparator values if their key is in the item list\n */\nexport const handleCheckboxChips = (item, comparator) => {\n    if (item && comparator) {\n        return item.reduce((acc, i) => {\n            Number.isInteger(parseInt(i)) ? (i = parseInt(i)) : i;\n\n            comparator.forEach(cmpItem => {\n                if (cmpItem.key === i) {\n                    acc.push(cmpItem.value);\n                }\n            });\n\n            return acc;\n        }, []);\n    }\n\n    return [];\n};\n\n/**\n * Convert a list of objects to a list of the last value if defined\n */\nexport const handleSingleChips = (item, comparator) => {\n    if (item && typeof item === 'string' && comparator) {\n        let val;\n        comparator.forEach(i => {\n            if (i.key === item) {\n                val = i.value;\n            }\n        });\n\n        if (val !== undefined) {\n            return [ val ];\n        }\n    }\n\n    return [];\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Toolbar,\n    ToolbarContent,\n    ToolbarGroup,\n    Button,\n    ToolbarItem,\n    Tooltip,\n    Switch\n} from '@patternfly/react-core';\nimport { Card, CardTitle, CardBody, CardActions, CardHeader } from '@patternfly/react-core';\nimport {\n    FilterIcon,\n    SortAmountDownIcon,\n    CogIcon,\n    QuestionCircleIcon,\n    TimesIcon\n} from '@patternfly/react-icons';\n\nimport CategoryDropdown from './CategoryDropdown';\nimport CustomDateSelector from './CustomDateSelector';\nimport { optionsForCategories } from './constants';\nimport ToolbarFilterItem from './ToolbarFilterItem';\n\nconst FilterableToolbar = ({\n    categories,\n    filters,\n    setFilters,\n    pagination = null,\n    hasSettings = false\n}) => {\n    const [ settingsExpanded, setSettingsExpanded ] = useState(false);\n    const { quick_date_range, sort_by, ...restCategories } = categories;\n\n    // Filter out elements which are not in the option object.\n    const filterCategories = Object.keys(restCategories)\n    .filter(key => Object.keys(optionsForCategories).includes(key))\n    .reduce((obj, key) => {\n        obj[key] = restCategories[key];\n        return obj;\n    }, {});\n\n    const [ currentCategory, setCurrentCategory ] = useState(\n        Object.keys(filterCategories)[0]\n    );\n\n    const onInputChange = (type, value) => {\n        setFilters(type, value);\n    };\n\n    const FilterCategoriesGroup = () => (\n        <ToolbarGroup variant=\"filter-group\">\n            <CategoryDropdown\n                selected={ currentCategory }\n                setSelected={ setCurrentCategory }\n                categories={\n                    Object.keys(filterCategories).map(el => ({\n                        key: el,\n                        name: optionsForCategories[el].name\n                    }))\n                }\n            />\n            { Object.keys(filterCategories).map(key =>\n                <ToolbarFilterItem\n                    key={ key }\n                    categoryKey={ key }\n                    filter={ filters[key] }\n                    values={ categories[key] }\n                    isVisible={ currentCategory === key }\n                    setFilter={ value => setFilters(key, value) }\n                />\n            ) }\n        </ToolbarGroup>\n    );\n\n    const QuickDateGroup = () => (\n        <ToolbarGroup variant=\"filter-group\">\n            <ToolbarFilterItem\n                categoryKey='quick_date_range'\n                filter={ filters.quick_date_range }\n                values={ quick_date_range }\n                setFilter={ value => setFilters('quick_date_range', value) }\n                hasChips={ false }\n            />\n            { filters.quick_date_range === 'custom' && (\n                <CustomDateSelector\n                    startDate={ filters.start_date ? filters.start_date : '' }\n                    endDate={ filters.end_date ? filters.end_date : '' }\n                    onInputChange={ onInputChange }\n                />\n            ) }\n        </ToolbarGroup>\n    );\n\n    const SortByGroup = () => (\n        <ToolbarGroup variant=\"filter-group\">\n            <ToolbarFilterItem\n                categoryKey='sort_by'\n                filter={ filters.sort_by }\n                values={ sort_by }\n                setFilter={ value => setFilters('sort_by', value) }\n                hasChips={ false }\n            />\n            <Button variant=\"control\">\n                <SortAmountDownIcon />\n            </Button>\n        </ToolbarGroup>\n    );\n\n    /* TODO: For future work: make settings more modular for different pages */\n    const Settings = () => (\n        <Card isFlat style={ { backgroundColor: '#EEEEEE' } }>\n            <CardHeader>\n                <CardActions>\n                    <Button\n                        variant='plain'\n                        onClick={ () => setSettingsExpanded(!settingsExpanded) }\n                    >\n                        <TimesIcon />\n                    </Button>\n                </CardActions>\n                <CardTitle>Settings</CardTitle>\n            </CardHeader>\n            <CardBody>\n                <Switch\n                    id=\"showRootWorkflowJobs\"\n                    label=\"Ignore nested workflows and jobs\"\n                    labelOff=\"Ignore nested workflows and jobs\"\n                    isChecked={ filters.only_root_workflows_and_standalone_jobs }\n                    onChange={ val => {\n                        setFilters('only_root_workflows_and_standalone_jobs', val);\n                    } }\n                />\n                <Tooltip\n                    position={ 'top' }\n                    content={\n                        <div>\n                            { ' ' }\n                              If enabled, nested workflows and jobs will not be included in\n                              the overall totals. Enable this option to filter out duplicate\n                              entries.\n                        </div>\n                    }\n                >\n                    <QuestionCircleIcon />\n                </Tooltip>\n            </CardBody>\n        </Card>\n    );\n\n    return (\n        <>\n            <Toolbar\n                id=\"filterable-toolbar-with-chip-groups\"\n                clearAllFilters={ () => { setFilters(null, null); } }\n                collapseListedFiltersBreakpoint=\"xl\"\n            >\n                <ToolbarContent>\n                    <Button variant=\"control\">\n                        <FilterIcon />\n                    </Button>\n                    { Object.keys(filterCategories).length > 0 && <FilterCategoriesGroup /> }\n                    { quick_date_range && <QuickDateGroup /> }\n                    { sort_by && <SortByGroup /> }\n                    {\n                        hasSettings &&\n                        <ToolbarItem>\n                            <Button\n                                variant=\"plain\"\n                                onClick={ () => setSettingsExpanded(!settingsExpanded) }\n                                aria-label=\"settings\"\n                                isActive={ settingsExpanded }\n                            >\n                                <CogIcon />\n                            </Button>\n                        </ToolbarItem>\n                    }\n                    {\n                        pagination &&\n                        <ToolbarItem variant=\"pagination\" visibility={ { default: 'hidden', lg: 'visible' } }>\n                            { pagination }\n                        </ToolbarItem>\n                    }\n                </ToolbarContent>\n                { settingsExpanded && <Settings /> }\n            </Toolbar>\n        </>\n    );\n};\n\nFilterableToolbar.propTypes = {\n    categories: PropTypes.object.isRequired,\n    filters: PropTypes.object.isRequired,\n    setFilters: PropTypes.func.isRequired,\n    pagination: PropTypes.object,\n    hasSettings: PropTypes.bool\n};\n\nexport default FilterableToolbar;\n","import Toolbar from './Toolbar';\n\nexport default Toolbar;\n","var map = {\n\t\"./af\": 178,\n\t\"./af.js\": 178,\n\t\"./ar\": 179,\n\t\"./ar-dz\": 180,\n\t\"./ar-dz.js\": 180,\n\t\"./ar-kw\": 181,\n\t\"./ar-kw.js\": 181,\n\t\"./ar-ly\": 182,\n\t\"./ar-ly.js\": 182,\n\t\"./ar-ma\": 183,\n\t\"./ar-ma.js\": 183,\n\t\"./ar-sa\": 184,\n\t\"./ar-sa.js\": 184,\n\t\"./ar-tn\": 185,\n\t\"./ar-tn.js\": 185,\n\t\"./ar.js\": 179,\n\t\"./az\": 186,\n\t\"./az.js\": 186,\n\t\"./be\": 187,\n\t\"./be.js\": 187,\n\t\"./bg\": 188,\n\t\"./bg.js\": 188,\n\t\"./bm\": 189,\n\t\"./bm.js\": 189,\n\t\"./bn\": 190,\n\t\"./bn.js\": 190,\n\t\"./bo\": 191,\n\t\"./bo.js\": 191,\n\t\"./br\": 192,\n\t\"./br.js\": 192,\n\t\"./bs\": 193,\n\t\"./bs.js\": 193,\n\t\"./ca\": 194,\n\t\"./ca.js\": 194,\n\t\"./cs\": 195,\n\t\"./cs.js\": 195,\n\t\"./cv\": 196,\n\t\"./cv.js\": 196,\n\t\"./cy\": 197,\n\t\"./cy.js\": 197,\n\t\"./da\": 198,\n\t\"./da.js\": 198,\n\t\"./de\": 199,\n\t\"./de-at\": 200,\n\t\"./de-at.js\": 200,\n\t\"./de-ch\": 201,\n\t\"./de-ch.js\": 201,\n\t\"./de.js\": 199,\n\t\"./dv\": 202,\n\t\"./dv.js\": 202,\n\t\"./el\": 203,\n\t\"./el.js\": 203,\n\t\"./en-SG\": 204,\n\t\"./en-SG.js\": 204,\n\t\"./en-au\": 205,\n\t\"./en-au.js\": 205,\n\t\"./en-ca\": 206,\n\t\"./en-ca.js\": 206,\n\t\"./en-gb\": 207,\n\t\"./en-gb.js\": 207,\n\t\"./en-ie\": 208,\n\t\"./en-ie.js\": 208,\n\t\"./en-il\": 209,\n\t\"./en-il.js\": 209,\n\t\"./en-nz\": 210,\n\t\"./en-nz.js\": 210,\n\t\"./eo\": 211,\n\t\"./eo.js\": 211,\n\t\"./es\": 212,\n\t\"./es-do\": 213,\n\t\"./es-do.js\": 213,\n\t\"./es-us\": 214,\n\t\"./es-us.js\": 214,\n\t\"./es.js\": 212,\n\t\"./et\": 215,\n\t\"./et.js\": 215,\n\t\"./eu\": 216,\n\t\"./eu.js\": 216,\n\t\"./fa\": 217,\n\t\"./fa.js\": 217,\n\t\"./fi\": 218,\n\t\"./fi.js\": 218,\n\t\"./fo\": 219,\n\t\"./fo.js\": 219,\n\t\"./fr\": 220,\n\t\"./fr-ca\": 221,\n\t\"./fr-ca.js\": 221,\n\t\"./fr-ch\": 222,\n\t\"./fr-ch.js\": 222,\n\t\"./fr.js\": 220,\n\t\"./fy\": 223,\n\t\"./fy.js\": 223,\n\t\"./ga\": 224,\n\t\"./ga.js\": 224,\n\t\"./gd\": 225,\n\t\"./gd.js\": 225,\n\t\"./gl\": 226,\n\t\"./gl.js\": 226,\n\t\"./gom-latn\": 227,\n\t\"./gom-latn.js\": 227,\n\t\"./gu\": 228,\n\t\"./gu.js\": 228,\n\t\"./he\": 229,\n\t\"./he.js\": 229,\n\t\"./hi\": 230,\n\t\"./hi.js\": 230,\n\t\"./hr\": 231,\n\t\"./hr.js\": 231,\n\t\"./hu\": 232,\n\t\"./hu.js\": 232,\n\t\"./hy-am\": 233,\n\t\"./hy-am.js\": 233,\n\t\"./id\": 234,\n\t\"./id.js\": 234,\n\t\"./is\": 235,\n\t\"./is.js\": 235,\n\t\"./it\": 236,\n\t\"./it-ch\": 237,\n\t\"./it-ch.js\": 237,\n\t\"./it.js\": 236,\n\t\"./ja\": 238,\n\t\"./ja.js\": 238,\n\t\"./jv\": 239,\n\t\"./jv.js\": 239,\n\t\"./ka\": 240,\n\t\"./ka.js\": 240,\n\t\"./kk\": 241,\n\t\"./kk.js\": 241,\n\t\"./km\": 242,\n\t\"./km.js\": 242,\n\t\"./kn\": 243,\n\t\"./kn.js\": 243,\n\t\"./ko\": 244,\n\t\"./ko.js\": 244,\n\t\"./ku\": 245,\n\t\"./ku.js\": 245,\n\t\"./ky\": 246,\n\t\"./ky.js\": 246,\n\t\"./lb\": 247,\n\t\"./lb.js\": 247,\n\t\"./lo\": 248,\n\t\"./lo.js\": 248,\n\t\"./lt\": 249,\n\t\"./lt.js\": 249,\n\t\"./lv\": 250,\n\t\"./lv.js\": 250,\n\t\"./me\": 251,\n\t\"./me.js\": 251,\n\t\"./mi\": 252,\n\t\"./mi.js\": 252,\n\t\"./mk\": 253,\n\t\"./mk.js\": 253,\n\t\"./ml\": 254,\n\t\"./ml.js\": 254,\n\t\"./mn\": 255,\n\t\"./mn.js\": 255,\n\t\"./mr\": 256,\n\t\"./mr.js\": 256,\n\t\"./ms\": 257,\n\t\"./ms-my\": 258,\n\t\"./ms-my.js\": 258,\n\t\"./ms.js\": 257,\n\t\"./mt\": 259,\n\t\"./mt.js\": 259,\n\t\"./my\": 260,\n\t\"./my.js\": 260,\n\t\"./nb\": 261,\n\t\"./nb.js\": 261,\n\t\"./ne\": 262,\n\t\"./ne.js\": 262,\n\t\"./nl\": 263,\n\t\"./nl-be\": 264,\n\t\"./nl-be.js\": 264,\n\t\"./nl.js\": 263,\n\t\"./nn\": 265,\n\t\"./nn.js\": 265,\n\t\"./pa-in\": 266,\n\t\"./pa-in.js\": 266,\n\t\"./pl\": 267,\n\t\"./pl.js\": 267,\n\t\"./pt\": 268,\n\t\"./pt-br\": 269,\n\t\"./pt-br.js\": 269,\n\t\"./pt.js\": 268,\n\t\"./ro\": 270,\n\t\"./ro.js\": 270,\n\t\"./ru\": 271,\n\t\"./ru.js\": 271,\n\t\"./sd\": 272,\n\t\"./sd.js\": 272,\n\t\"./se\": 273,\n\t\"./se.js\": 273,\n\t\"./si\": 274,\n\t\"./si.js\": 274,\n\t\"./sk\": 275,\n\t\"./sk.js\": 275,\n\t\"./sl\": 276,\n\t\"./sl.js\": 276,\n\t\"./sq\": 277,\n\t\"./sq.js\": 277,\n\t\"./sr\": 278,\n\t\"./sr-cyrl\": 279,\n\t\"./sr-cyrl.js\": 279,\n\t\"./sr.js\": 278,\n\t\"./ss\": 280,\n\t\"./ss.js\": 280,\n\t\"./sv\": 281,\n\t\"./sv.js\": 281,\n\t\"./sw\": 282,\n\t\"./sw.js\": 282,\n\t\"./ta\": 283,\n\t\"./ta.js\": 283,\n\t\"./te\": 284,\n\t\"./te.js\": 284,\n\t\"./tet\": 285,\n\t\"./tet.js\": 285,\n\t\"./tg\": 286,\n\t\"./tg.js\": 286,\n\t\"./th\": 287,\n\t\"./th.js\": 287,\n\t\"./tl-ph\": 288,\n\t\"./tl-ph.js\": 288,\n\t\"./tlh\": 289,\n\t\"./tlh.js\": 289,\n\t\"./tr\": 290,\n\t\"./tr.js\": 290,\n\t\"./tzl\": 291,\n\t\"./tzl.js\": 291,\n\t\"./tzm\": 292,\n\t\"./tzm-latn\": 293,\n\t\"./tzm-latn.js\": 293,\n\t\"./tzm.js\": 292,\n\t\"./ug-cn\": 294,\n\t\"./ug-cn.js\": 294,\n\t\"./uk\": 295,\n\t\"./uk.js\": 295,\n\t\"./ur\": 296,\n\t\"./ur.js\": 296,\n\t\"./uz\": 297,\n\t\"./uz-latn\": 298,\n\t\"./uz-latn.js\": 298,\n\t\"./uz.js\": 297,\n\t\"./vi\": 299,\n\t\"./vi.js\": 299,\n\t\"./x-pseudo\": 300,\n\t\"./x-pseudo.js\": 300,\n\t\"./yo\": 301,\n\t\"./yo.js\": 301,\n\t\"./zh-cn\": 302,\n\t\"./zh-cn.js\": 302,\n\t\"./zh-hk\": 303,\n\t\"./zh-hk.js\": 303,\n\t\"./zh-tw\": 304,\n\t\"./zh-tw.js\": 304\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 341;","import { Paths } from '../paths';\nimport { stringify } from 'query-string';\n\nconst useRedirect = (history, path) => (query) => {\n    const search = stringify(query, { arrayFormat: 'bracket' });\n    history.push({\n        pathname: Paths[path],\n        search\n    });\n};\n\nexport default useRedirect;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        this.draw();\n    }\n\n    formatDollars(amount) {\n        return parseFloat(amount).toFixed(2).toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    };\n\n    draw() {\n        this.width = 125;\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip-base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 125;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, 0) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', 92)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.name = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', -2)\n        .text('Template name');\n        this.savings = this.toolTipBase\n        .append('text')\n        .attr('x', 20)\n        .attr('y', 52)\n        .attr('font-size', 12)\n        .attr('font-weight', 'bold')\n        .attr('fill', 'white')\n        .text('Total savings $0');\n        this.manualCost = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', 16)\n        .text('Manual cost $0');\n        this.automationCost = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', 34)\n        .text('Automation cost $0');\n    }\n\n    handleMouseOver = d => {\n        let name;\n        let savings;\n        let manualCost;\n        let automationCost;\n        const scrollLeftOffset = d3.select('#d3-roi-chart-root').node().scrollLeft;\n        const x =\n            d3.event.pageX -\n            d3\n            .select(this.svg)\n            .node()\n            .getBoundingClientRect().x +\n            10 + scrollLeftOffset;\n        const y =\n            d3.event.pageY -\n            d3\n            .select(this.svg)\n            .node()\n            .getBoundingClientRect().y -\n            30;\n        if (!d) {\n            return;\n        } else {\n            savings = this.formatDollars(d.delta);\n            name = d.name;\n            manualCost = this.formatDollars(d.manualCost);\n            automationCost = this.formatDollars(d.automatedCost);\n        }\n\n        const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n        const chartWidth = d3\n        .select(this.svg + '> svg')\n        .node()\n        .getBoundingClientRect().width;\n        const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n        const flipped = overflow < (x / chartWidth) * 100;\n        this.name.text('' + name);\n        this.savings.text('Total savings $' + savings);\n        this.manualCost.text('Manual Cost $' + manualCost);\n        this.automationCost.text('Automation Cost $' + automationCost);\n        this.nameWidth = this.name.node().getComputedTextLength();\n        this.savingsWidth = this.savings.node().getComputedTextLength();\n        this.manualCostWidth = this.manualCost.node().getComputedTextLength();\n        this.automationCostWidth = this.automationCost.node().getComputedTextLength();\n        this.widestTextElem = d3.max([ this.nameWidth, this.savingsWidth, this.automationCostWidth, this.manualCostWidth ]);\n\n        const maxTextPerc = this.widestTextElem / this.boxWidth * 100;\n        const threshold = 85;\n        const overage = maxTextPerc / threshold;\n        let adjustedWidth;\n        if (maxTextPerc > threshold) {\n            adjustedWidth = this.boxWidth * overage;\n        } else {\n            adjustedWidth = this.boxWidth;\n        }\n\n        this.boundingBox.attr('width', adjustedWidth);\n        this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n        if (flipped) {\n            this.toolTipPoint.attr('transform', 'translate(-20, 15) rotate(45)');\n            this.boundingBox.attr('x', -adjustedWidth - 20);\n            this.name.attr('x', -(toolTipWidth - 7));\n            this.savings.attr('x', -(toolTipWidth - 7));\n            this.manualCost.attr('x', -(toolTipWidth - 7));\n            this.automationCost.attr('x', -(toolTipWidth - 7));\n        } else {\n            this.toolTipPoint.attr('transform', 'translate(10, 15) rotate(45)');\n            this.boundingBox.attr('x', 10);\n            this.name.attr('x', 20);\n            this.savings.attr('x', 20);\n            this.manualCost.attr('x', 20);\n            this.automationCost.attr('x', 20);\n        }\n\n        this.toolTipBase.style('opacity', 1);\n        this.toolTipBase.interrupt();\n    };\n\n    handleMouseOut = () => {\n        this.toolTipBase\n        .transition()\n        .delay(15)\n        .style('opacity', 0)\n        .style('pointer-events', 'none');\n    };\n}\n\nclass TopTemplatesSavings extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.state = {\n            timeout: null\n        };\n    }\n\n    // Methods\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => {\n                this.init();\n            }, 500)\n        });\n    }\n\n    init() {\n        this.draw();\n    }\n\n    draw() {\n        // Use PF chart color\n        const color = '#0066CC'; //blue\n        // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const { data } = this.props;\n        let width;\n        // adjust chart width to support larger datasets\n        if (data.length >= 15) {\n            const containerWidth = d3.select('.automation-wrapper').node();\n            width = containerWidth.getBoundingClientRect().width - this.props.margin.left - this.props.margin.right;\n        } else {\n            width = this.props.getWidth();\n        }\n\n        const height = this.props.getHeight();\n        const x = d3\n        .scaleBand()\n        .rangeRound([ 0, width ])\n        .padding(0.45);\n        const y = d3.scaleLinear().range([ height, 0 ]);\n        // format our X Axis ticks\n        let ticks;\n        ticks = data.map(d => d.name);\n        const formatYAxisValue = d3.format('.2s');\n        const xAxis = d3.axisBottom(x).tickValues(ticks);\n\n        const yAxis = d3\n        .axisLeft(y)\n        .ticks(8)\n        .tickFormat(d => formatYAxisValue(d).replace('G', 'B'))\n        .tickSize(-width, 0, 0);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n\n        const taskNames = data.map(d => d.name);\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id\n        });\n        x.domain(taskNames);\n        y.domain([\n            0,\n            d3.max(data, d => d.delta * 1.15) || 8\n        ]);\n\n        // add y axis\n        svg\n        .append('g')\n        .attr('class', 'y axis')\n        .call(yAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7')\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 6)\n        .attr('dy', '.71em')\n        .style('text-anchor', 'end')\n        .style('font-weight', 'bold')\n        .text('Value');\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Savings per template ($)');\n\n        // add x axis\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(xAxis)\n        .selectAll('text')\n        .style('text-anchor', 'start')\n        .attr('dx', '0.75em')\n        .attr('dy', -x.bandwidth() / 1.45 - 8)\n        .attr('transform', 'rotate(-90)');\n\n        svg.selectAll('.x-axis line').attr('stroke', 'transparent');\n\n        svg.selectAll('.bar')\n        .data(data)\n        .enter().append('rect')\n        .attr('x', d => x(d.name))\n        .attr('width', x.bandwidth())\n        .attr('y', d => y(d.delta))\n        .style('fill', () => color)\n        .attr('height', d => height - y(d.delta))\n        .on('mouseover', function(d) {\n            d3.select(this).style('fill', d3.rgb(color).darker(1));\n            tooltip.handleMouseOver(d);\n        })\n        .on('mousemove', tooltip.handleMouseOver)\n        .on('mouseout', function() {\n            d3.select(this).style('fill', color);\n            tooltip.handleMouseOut();\n        });\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate() {\n        this.init();\n    }\n\n    render() {\n        return <div id={ this.props.id } />;\n    }\n}\n\nTopTemplatesSavings.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func\n};\n\nexport default initializeChart(TopTemplatesSavings);\n","import styled from 'styled-components';\nimport { CardTitle } from '@patternfly/react-core';\n\nexport const BorderedCardTitle = styled(CardTitle)`\n  border-bottom: 1px solid #d7d7d7;\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Card,\n    CardBody,\n    CardTitle,\n    Title\n} from '@patternfly/react-core';\n\nconst floatToStringWithCommas = (total) =>\n    total\n    .toFixed(2)\n    .toString()\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\nconst TotalSavings = ({ totalSavings = 0 }) => (\n    <Card style={ { borderTop: '3px solid #2B9AF3' } }>\n        <CardTitle style={ { paddingBottom: '0' } }>\n                Total savings\n        </CardTitle>\n        <CardBody>\n            <Title\n                headingLevel=\"h3\"\n                size=\"4xl\"\n                style={ { color: 'var(--pf-global--success-color--200)' } }\n            >\n                { floatToStringWithCommas(totalSavings) }\n            </Title>\n        </CardBody>\n    </Card>\n);\n\nTotalSavings.propTypes = {\n    totalSavings: PropTypes.number\n};\n\nexport default TotalSavings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    Card,\n    CardBody,\n    InputGroup,\n    InputGroupText,\n    TextInput\n} from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst validFloat = value => {\n    const floatValue = parseFloat(value);\n    return floatValue && floatValue >= 0 ? value : '';\n};\n\nconst CalculationCost = ({\n    costManual = '0',\n    setCostManual = () => {},\n    costAutomation = '0',\n    setCostAutomation = () => {}\n}) => (\n    <Card>\n        <CardTitle>\n                Calculate your automation\n        </CardTitle>\n        <CardBody>\n            <InputAndText>\n                <p>Manual cost of automation</p>\n                <em style={ { color: 'var(--pf-global--Color--dark-200)' } }>\n                        (e.g. average salary of mid-level Software Engineer)\n                </em>\n                <InputGroup style={ { width: '50%' } }>\n                    <InputGroupText>\n                        <DollarSignIcon />\n                    </InputGroupText>\n                    <TextInput\n                        id=\"manual-cost\"\n                        type=\"number\"\n                        aria-label=\"manual-cost\"\n                        value={ costManual }\n                        onChange={ (e) => setCostManual(validFloat(e)) }\n                    />\n                    <InputGroupText>/hr</InputGroupText>\n                </InputGroup>\n            </InputAndText>\n            <InputAndText style={ { paddingTop: '10px' } }>\n                <p>Automated process cost</p>\n                <InputGroup style={ { width: '50%' } }>\n                    <InputGroupText>\n                        <DollarSignIcon />\n                    </InputGroupText>\n                    <TextInput\n                        id=\"automation-cost\"\n                        type=\"number\"\n                        aria-label=\"automation-cost\"\n                        value={ costAutomation }\n                        onChange={ (e) => setCostAutomation(validFloat(e)) }\n                    />\n                    <InputGroupText>/hr</InputGroupText>\n                </InputGroup>\n            </InputAndText>\n        </CardBody>\n    </Card>\n);\n\nCalculationCost.propTypes = {\n    costManual: PropTypes.string,\n    setCostManual: PropTypes.func,\n    costAutomation: PropTypes.string,\n    setCostAutomation: PropTypes.func\n};\n\nexport default CalculationCost;\n","import React from 'react';\n\nimport {\n    Card,\n    CardBody\n} from '@patternfly/react-core';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst AutomationFormula = () => (\n    <Card style={ { height: '100%' } }>\n        <CardTitle>Automation formula</CardTitle>\n        <CardBody>\n            <p>\n                <b>Manual cost for template x</b> =\n                <em>\n                    (time for a manual run on one host in hours * (sum of all hosts across all job runs) ) * cost per hour\n                </em>\n            </p>\n            <p>\n                <b>Automation cost for template x</b> =\n                <em>cost of automation per hour * sum of total elapsed hours for a template</em>\n            </p>\n            <p>\n                <b>Savings</b> =\n                <em>Sum of (manual cost - automation cost) across all templates</em>\n            </p>\n        </CardBody>\n    </Card>\n);\n\nexport default AutomationFormula;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    Button,\n    Card,\n    CardBody,\n    InputGroup,\n    InputGroupText,\n    TextInput,\n    Tooltip,\n    Popover\n} from '@patternfly/react-core';\nimport {\n    InfoCircleIcon\n} from '@patternfly/react-icons';\n\nimport {\n    convertSecondsToMins,\n    convertMinsToSeconds\n} from '../../Utilities/helpers';\n\nconst TemplateDetail = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  div,\n  em {\n    padding-right: 5px;\n  }\n\n  @media (max-width: 1490px) {\n    display: block;\n\n    em {\n      padding: 10px 0;\n      display: block;\n    }\n  }\n`;\n\nconst TemplateDetailSubTitle = styled.em`\n  color: var(--pf-global--Color--dark-200);\n`;\n\nconst TooltipWrapper = styled.div`\n  p {\n    text-align: left;\n  }\n`;\n\nconst IconGroup = styled.div`\n  & svg {\n    fill: var(--pf-global--Color--dark-200);\n\n    :hover {\n      cursor: pointer;\n    }\n\n    :first-of-type {\n      margin-right: 10px;\n      margin-left: 10px;\n\n      @media (max-width: 1350px) {\n        margin-left: 0;\n      }\n    }\n  }\n`;\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nexport const QuestionIconTooltip = ({ data }) => (\n    <Popover\n        aria-label=\"template detail popover\"\n        position=\"left\"\n        bodyContent={\n            <TooltipWrapper>\n                <p>\n                    <b>Success elapsed sum</b>:{ ' ' }\n                    { data.successful_elapsed_total.toFixed(2) }\n                </p>\n                <p>\n                    <b>Number of associated organizations</b>:{ ' ' }\n                    { data.total_org_count }\n                </p>\n                <p>\n                    <b>Number of associated clusters</b>:{ ' ' }\n                    { data.total_cluster_count }\n                </p>\n            </TooltipWrapper>\n        }\n    >\n        <InfoCircleIcon />\n    </Popover>\n);\n\nQuestionIconTooltip.propTypes = {\n    data: PropTypes.object\n};\n\nconst TopTemplates = ({\n    data = [],\n    setDataRunTime = () => {},\n    redirectToJobExplorer = () => {}\n}) => (\n    <Card style={ { overflow: 'auto', flex: '1 1 0' } } className=\"top-templates\">\n        <CardBody>\n            <p>Enter the time it takes to run the following templates manually.</p>\n            { data.map((data) => (\n                <div key={ data.id }>\n                    <Tooltip content={ 'List of jobs for this template for past 30 days' } >\n                        <Button\n                            style={ { padding: '15px 0 10px' } }\n                            component=\"a\"\n                            onClick={ () => redirectToJobExplorer(data.id) }\n                            variant=\"link\"\n                        >\n                            { data.name }\n                        </Button>\n                    </Tooltip>\n                    <TemplateDetail>\n                        <InputAndText key={ data.id }>\n                            <InputGroup>\n                                <TextInput\n                                    id={ data.id }\n                                    type=\"number\"\n                                    aria-label=\"time run manually\"\n                                    value={ convertSecondsToMins(data.avgRunTime) }\n                                    onChange={ minutes =>\n                                        setDataRunTime(convertMinsToSeconds(minutes), data.id)\n                                    }\n                                />\n                                <InputGroupText>min</InputGroupText>\n                            </InputGroup>\n                        </InputAndText>\n                        <TemplateDetailSubTitle>\n                                    x { data.successful_hosts_total } host runs\n                        </TemplateDetailSubTitle>\n                        <IconGroup>\n                            <QuestionIconTooltip data={ data }/>\n                        </IconGroup>\n                    </TemplateDetail>\n                    <p style={ { color: '#486B00' } }>\n                        ${ data.delta.toFixed(2) }\n                    </p>\n                </div>\n            )) }\n        </CardBody>\n    </Card>\n);\n\nTopTemplates.propTypes = {\n    data: PropTypes.array,\n    setDataRunTime: PropTypes.func,\n    redirectToJobExplorer: PropTypes.func,\n    deselectedIds: PropTypes.array,\n    setDeselectedIds: PropTypes.func\n};\n\nexport default TopTemplates;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\nimport {\n    Card,\n    CardBody\n} from '@patternfly/react-core';\n\n// Imports from custom components\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\n// Imports from API\nimport {\n    preflightRequest,\n    readROI,\n    readROIOptions\n} from '../../Api';\n\n// Imports from utilities\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { roi as roiConst } from '../../Utilities/constants';\nimport useRedirect from '../../Utilities/useRedirect';\nimport {\n    calculateDelta,\n    convertSecondsToHours\n} from '../../Utilities/helpers';\n\n// Chart\nimport TopTemplatesSavings from '../../Charts/ROITopTemplates';\n\n// Local imports\nimport { BorderedCardTitle } from './helpers';\nimport TotalSavings from './TotalSavings';\nimport CalculationCost from './CalculationCost';\nimport AutomationFormula from './AutomationFormula';\nimport TopTemplates from './TopTemplates';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 5fr 2fr;\n  height: 100%;\n`;\n\nconst WrapperLeft = styled.div`\n  flex: 5;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n`;\n\nconst WrapperRight = styled.div`\n  flex: 2;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst mapApi = ({ items = []}) => items.map(el => ({\n    ...el,\n    delta: 0,\n    avgRunTime: 3600,\n    manualCost: 0,\n    automatedCost: 0\n}));\n\nconst updateDeltaCost = (data, costAutomation, costManual) => data.map(el => {\n    const manualCost = convertSecondsToHours(el.avgRunTime) * el.successful_hosts_total * parseFloat(costManual);\n    const automatedCost = convertSecondsToHours(el.successful_elapsed_total) * parseFloat(costAutomation);\n    const delta = calculateDelta(automatedCost, manualCost);\n\n    return { ...el, delta, manualCost, automatedCost };\n});\n\nconst computeTotalSavings = data => data.reduce((sum, curr) => sum + curr.delta, 0);\n\nconst AutomationCalculator = ({ history }) => {\n    const toJobExplorer = useRedirect(history, 'jobExplorer');\n    const [ costManual, setCostManual ] = useState('50');\n    const [ costAutomation, setCostAutomation ] = useState('20');\n\n    const [ preflight, setPreflight ] = useApi(null);\n    const [ options, setOptions ] = useApi({});\n    const [ api, fetchApi, setDataInApi ] = useApi(\n        [],\n        (data) => updateDeltaCost(mapApi(data), costAutomation, costManual)\n    );\n\n    const {\n        queryParams,\n        setFromToolbar\n    } = useQueryParams(roiConst.defaultParams);\n\n    /**\n     * Modifies one elements avgRunTime in the unfilteredData\n     * and updates all calculated fields.\n     * Used in top templates.\n     */\n    const setDataRunTime = (seconds, id) => {\n        const updatedData = api.data.map(el => {\n            if (el.id === id) {\n                el.avgRunTime = seconds;\n                const updatedDelta = updateDeltaCost([ el ], costAutomation, costManual)[0];\n                return updatedDelta;\n            } else {\n                return el;\n            }\n        });\n\n        setDataInApi(updatedData);\n    };\n\n    useEffect(() => {\n        setPreflight(preflightRequest());\n        setOptions(readROIOptions({ params: queryParams }));\n    }, []);\n\n    /**\n     * Recalculates the delta and costs in the data after the cost is changed.\n     */\n    useEffect(() => {\n        setDataInApi(\n            updateDeltaCost(api.data, costAutomation, costManual)\n        );\n    }, [ costAutomation, costManual ]);\n\n    /**\n     * Get data from API depending on the queryParam.\n     */\n    useEffect(() => {\n        fetchApi(readROI({ params: queryParams }));\n    }, [ queryParams ]);\n\n    /**\n     * Function to redirect to the job explorer page\n     * with the same filters as is used here.\n     */\n    const redirectToJobExplorer = templateId => {\n        const initialQueryParams = {\n            quick_date_range: 'last_30_days',\n            template_id: [ templateId ]\n        };\n        toJobExplorer(initialQueryParams);\n    };\n\n    const renderLeft = () => (\n        <WrapperLeft>\n            <Main style={ { paddingBottom: '0' } }>\n                <Card>\n                    <BorderedCardTitle>Automation savings</BorderedCardTitle>\n                    <CardBody>\n                        { api.isLoading && <LoadingState /> }\n                        { api.error && <ApiErrorState message={ api.error.error } /> }\n                        { api.isSuccess && api.data.length <= 0 && <NoData /> }\n                        { api.isSuccess && api.data.length > 0 && (\n                            <React.Fragment>\n                                <TopTemplatesSavings\n                                    margin={ { top: 20, right: 20, bottom: 20, left: 70 } }\n                                    id=\"d3-roi-chart-root\"\n                                    data={ api.data }\n                                />\n                                <p style={ { textAlign: 'center' } }>Templates</p>\n                            </React.Fragment>\n                        ) }\n                    </CardBody>\n                </Card>\n            </Main>\n            <Main>\n                <AutomationFormula />\n            </Main>\n        </WrapperLeft>\n    );\n\n    const renderRight = () => (\n        <WrapperRight>\n            <Main style={ { paddingBottom: '0', paddingLeft: '0' } }>\n                <TotalSavings totalSavings={ computeTotalSavings(api.data) } />\n            </Main>\n            <Main style={ { display: 'flex', flexDirection: 'column', flex: '1 1 0', paddingLeft: '0' } }>\n                <CalculationCost\n                    costManual={ costManual }\n                    setCostManual={ setCostManual }\n                    costAutomation={ costAutomation }\n                    setCostAutomation={ setCostAutomation }\n                />\n                <TopTemplates\n                    redirectToJobExplorer={ redirectToJobExplorer }\n                    data={ api.data }\n                    setDataRunTime={ setDataRunTime }\n                    setUnfilteredData={ api.data }\n                />\n            </Main>\n        </WrapperRight>\n    );\n\n    return (\n        <React.Fragment>\n            <PageHeader style={ { flex: '0' } }>\n                <PageHeaderTitle title={ 'Automation Calculator' } />\n            </PageHeader>\n            { preflight.error && (\n                <Main>\n                    <EmptyState\n                        preflightError={ preflight.error }\n                    />\n                </Main>\n            ) }\n            { preflight.isSuccess && (\n                <React.Fragment>\n                    <Main style={ { paddingBottom: '0' } }>\n                        <Card>\n                            <CardBody>\n                                <FilterableToolbar\n                                    categories={ options.data }\n                                    filters={ queryParams }\n                                    setFilters={ setFromToolbar }\n                                />\n                            </CardBody>\n                        </Card>\n                    </Main>\n                    <Wrapper className=\"automation-wrapper\">\n                        { renderLeft() }\n                        { renderRight() }\n                    </Wrapper>\n                </React.Fragment>\n            ) }\n        </React.Fragment>\n    );\n};\n\nAutomationCalculator.propTypes = {\n    history: PropTypes.object\n};\n\nexport default AutomationCalculator;\n","import * as d3 from 'd3';\n\nclass Tooltip {\n    constructor(opts) {\n        this.svg = opts.svg;\n        this.colors = opts.colors;\n        this.draw();\n    }\n\n    draw() {\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 145;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -41)\n        .attr('rx', 2)\n        .attr('height', 110)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.circleSuccess = this.toolTipBase\n        .append('circle')\n        .attr('cx', 26)\n        .attr('cy', 0)\n        .attr('r', 8)\n        .attr('stroke', 'white')\n        .attr('fill', 'white');\n        this.circleFail = this.toolTipBase\n        .append('circle')\n        .attr('cx', 26)\n        .attr('cy', 26)\n        .attr('r', 8)\n        .attr('stroke', 'white')\n        .attr('fill', 'white');\n        this.successText = this.toolTipBase\n        .append('text')\n        .attr('x', 43)\n        .attr('y', 4)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Successful');\n        this.failText = this.toolTipBase\n        .append('text')\n        .attr('x', 43)\n        .attr('y', 28)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Failed');\n        this.successIcon = this.toolTipBase\n        .append('text')\n        .attr('class', 'fas fa-sm')\n        .attr('fill', this.colors(1))\n        .attr('x', 19)\n        .attr('y', 5)\n        .text('\\uf058');\n        this.failedIcon = this.toolTipBase\n        .append('text')\n        .attr('class', 'fas fa-sm')\n        .attr('fill', this.colors(0))\n        .attr('x', 20)\n        .attr('y', 31)\n        .text('\\uf06a');\n        this.jobs = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 137)\n        .attr('y', -21)\n        .attr('font-size', 12)\n        .attr('text-anchor', 'end')\n        .text('No jobs');\n        this.successful = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 122)\n        .attr('y', 4)\n        .text('0');\n        this.failed = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 122)\n        .attr('y', 28)\n        .text('0');\n        this.date = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('stroke', 'white')\n        .attr('x', 20)\n        .attr('y', -21)\n        .attr('font-size', 12)\n        .text('Never');\n        this.clickMore = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 20)\n        .attr('y', 55)\n        .attr('font-size', 12)\n        .text('Click for details');\n    }\n\n    handleMouseOver = (d) => {\n        let success = 0;\n        let fail = 0;\n        let total = 0;\n        const x =\n            d3.event.pageX -\n            d3\n            .select(this.svg)\n            .node()\n            .getBoundingClientRect().x +\n            10;\n        const y =\n            d3.event.pageY -\n            d3\n            .select(this.svg)\n            .node()\n            .getBoundingClientRect().y -\n            10;\n        const formatTooltipDate = d3.timeFormat('%m/%d');\n        if (!d) {\n            return;\n        }\n\n        const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n        const chartWidth = d3\n        .select(this.svg + '> svg')\n        .node()\n        .getBoundingClientRect().width;\n        const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n        const flipped = overflow < (x / chartWidth) * 100;\n        if (d) {\n            success = d.RAN || 0;\n            fail = d.FAIL || 0;\n            total = d.TOTAL || 0;\n            this.date.text(formatTooltipDate(d.DATE || null));\n        }\n\n        if (d && d.data) {\n            success = d.data.RAN || 0;\n            fail = d.data.FAIL || 0;\n            total = d.data.TOTAL || 0;\n            this.date.text(formatTooltipDate(d.data.DATE || null));\n        }\n\n        this.jobs.text('' + total + ' jobs');\n        this.jobsWidth = this.jobs.node().getComputedTextLength();\n        this.failed.text('' + fail);\n        this.successful.text('' + success);\n        this.successTextWidth = this.successful.node().getComputedTextLength();\n        this.failTextWidth = this.failed.node().getComputedTextLength();\n\n        const maxTextPerc = this.jobsWidth / this.boxWidth * 100;\n        const threshold = 40;\n        const overage = maxTextPerc / threshold;\n        let adjustedWidth;\n        if (maxTextPerc > threshold) {\n            adjustedWidth = this.boxWidth * overage;\n        } else {\n            adjustedWidth = this.boxWidth;\n        }\n\n        this.boundingBox.attr('width', adjustedWidth);\n        this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n        if (flipped) {\n            this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n            this.boundingBox.attr('x', -adjustedWidth - 20);\n            this.circleSuccess.attr('cx', -adjustedWidth);\n            this.circleFail.attr('cx', -adjustedWidth);\n            this.failedIcon.attr('x', -adjustedWidth - 7);\n            this.successIcon.attr('x', -adjustedWidth - 7);\n            this.successText.attr('x', -adjustedWidth + 17);\n            this.failText.attr('x', -adjustedWidth + 17);\n            this.successful.attr('x', -this.successTextWidth - 20 - 12);\n            this.failed.attr('x', -this.failTextWidth - 20 - 12);\n            this.date.attr('x', -adjustedWidth - 5);\n            this.jobs.attr('x', -this.jobsWidth / 2 - 7);\n            this.clickMore.attr('x', -adjustedWidth);\n        } else {\n            this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n            this.boundingBox.attr('x', 10);\n            this.circleSuccess.attr('cx', 26);\n            this.circleFail.attr('cx', 26);\n            this.failedIcon.attr('x', 19);\n            this.successIcon.attr('x', 19);\n            this.successText.attr('x', 43);\n            this.failText.attr('x', 43);\n            this.successful.attr('x', (adjustedWidth - this.successTextWidth));\n            this.failed.attr('x', (adjustedWidth - this.failTextWidth));\n            this.date.attr('x', 20);\n            this.jobs.attr('x', (adjustedWidth));\n            this.clickMore.attr('x', 20);\n        }\n\n        this.toolTipBase.style('opacity', 1);\n        this.toolTipBase.interrupt();\n    }\n\n    handleMouseOut = () => {\n        this.toolTipBase\n        .transition()\n        .delay(15)\n        .style('opacity', 0)\n        .style('pointer-events', 'none');\n    }\n}\n\nexport default Tooltip;\n","import React, { Component } from 'react';\nimport {\n    withRouter\n} from 'react-router-dom';\n\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { stringify } from 'query-string';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\n\nclass BarChart extends Component {\n    constructor(props) {\n        super(props);\n        this.draw = this.draw.bind(this);\n        this.init = this.init.bind(this);\n        this.resize = this.resize.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.state = {\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    redirectToJobExplorer({ data: { DATE: date }}) {\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const initialQueryParams = {\n            start_date: formattedDate,\n            end_date: formattedDate,\n            quick_date_range: 'custom',\n            status: [ 'failed', 'successful' ]\n        };\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => { this.init(); }, 500)\n        });\n    }\n\n    init() {\n        this.draw();\n    }\n\n    // Methods\n    draw() {\n        // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const parseTime = d3.timeParse('%Y-%m-%d');\n        let { data: unformattedData, value } = this.props;\n        const data = unformattedData.reduce((formatted, { created, successful, failed }) => {\n            let DATE = parseTime(created) || new Date();\n            let RAN = +successful || 0;\n            let FAIL = +failed || 0;\n            let TOTAL = +successful + failed || 0;\n            return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n        }, []);\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n        const x = d3\n        .scaleBand()\n        .rangeRound([ 0, width ])\n        .padding(0.35); // percentage\n        const y = d3.scaleLinear().range([ height, 0 ]);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n                this.props.margin.left +\n                ',' +\n                this.props.margin.top +\n                ')'\n        );\n        //[fail, success]\n        let colors = d3.scaleOrdinal([ '#6EC664', '#A30000' ]);\n\n        const barTooltip = new Tooltip({\n            svg: '#' + this.props.id,\n            colors\n        });\n        const status = [ 'FAIL', 'RAN' ];\n\n        // stack our data\n        const stack = d3\n        .stack()\n        .keys(status)\n        .order(d3.stackOrderNone)\n        .offset(d3.stackOffsetNone);\n\n        const layers = stack(data);\n        // Scale the range of the data\n        x.domain(layers[0].map(d => d.data.DATE));\n        y.domain([ 0, d3.max(layers[layers.length - 1], d => d[1] * 1.15) || 8 ]);\n        // Add the Y Axis\n        svg\n        .append('g')\n        .attr('class', 'y-axis')\n        .call(\n            d3\n            .axisLeft(y)\n            .tickSize(-width, 0, 0)\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.y-axis .tick text').attr('x', -5);\n        // text label for the y axis\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Jobs across all clusters');\n        // Add the X Axis\n        let ticks;\n        const maxTicks = Math.round(data.length / (value / 2));\n        ticks = data.map(d => d.DATE);\n        if (value === 31) {\n            ticks = data.map((d, i) =>\n                i % maxTicks === 0 ? d.DATE : undefined).filter(item => item);\n        }\n\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(\n            d3\n            .axisBottom(x)\n            .tickValues(ticks)\n            .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.x-axis .tick text')\n        .attr('y', 10);\n\n        // text label for the x axis\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' +\n                width / 2 +\n                ' ,' +\n                (height + this.props.margin.top + 20) +\n                ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n\n        const layer = svg\n        .selectAll('layer')\n        .data(layers)\n        .enter()\n        .append('g')\n        .attr('class', 'layer')\n        .style('fill', (_d, i) => colors(i));\n        layer\n        .selectAll('rect')\n        .data(d => d)\n        .enter()\n        .append('rect')\n        .attr('x', d => x(d.data.DATE))\n        .attr('y', d => y(d[0]))\n        .attr('height', 0)\n        .attr('width', x.bandwidth() - 1)\n        .transition()\n        .duration(550)\n        .ease(d3.easeCubic)\n        .attr('y', d => y(d[1]))\n        .attr('height', d => y(d[0]) - y(d[1]));\n        layer\n        .selectAll('rect')\n        .on('mouseover', barTooltip.handleMouseOver)\n        .on('mousemove', barTooltip.handleMouseOver)\n        .on('mouseout', barTooltip.handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.value !== this.props.value) {\n            this.init();\n        }\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        return <div id={ this.props.id } />;\n    }\n}\n\nBarChart.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    value: PropTypes.number,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    history: PropTypes.object\n};\n\nexport default initializeChart(withRouter(BarChart));\n","import React, { Component } from 'react';\nimport {\n    withRouter\n} from 'react-router-dom';\nimport initializeChart from './BaseChart';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\nimport { stringify } from 'query-string';\nimport * as d3 from 'd3';\n\nclass LineChart extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.updateCluster = this.updateCluster.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.state = {\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    redirectToJobExplorer({ DATE: date }) {\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const { clusterId } = this.props;\n        const initialQueryParams = {\n            start_date: formattedDate,\n            end_date: formattedDate,\n            quick_date_range: 'custom',\n            status: [ 'failed', 'successful' ],\n            cluster_id: [ clusterId ]\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => { this.init(); }, 500)\n        });\n    }\n\n    getTickCount() {\n        const { value } = this.props;\n        if (value > 20) {\n            return (value / 2);\n        } else {\n            return value;\n        }\n    }\n    updateCluster() {\n        this.init();\n    }\n    init() {\n        this.draw();\n    }\n    // Methods\n    draw() {\n    // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n\n        function transition(path) {\n            path\n            .transition()\n            .duration(1000)\n            .attrTween('stroke-dasharray', tweenDash);\n        }\n\n        function tweenDash() {\n            const l = this.getTotalLength();\n            const i = d3.interpolateString('0,' + l, l + ',' + l);\n            return function(t) {\n                return i(t);\n            };\n        }\n\n        const x = d3.scaleTime().rangeRound([ 0, width ]);\n        const y = d3.scaleLinear().range([ height, 0 ]);\n\n        //[success, fail, total]\n        let colors = d3.scaleOrdinal([ '#6EC664', '#A30000', '#06C' ]);\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n        .attr('z', 100)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n        // Tooltip\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id,\n            colors\n        });\n        const { data: unformattedData, value } = this.props;\n        const parseTime = d3.timeParse('%Y-%m-%d');\n\n        const data = unformattedData.reduce((formatted, { created, successful, failed }) => {\n            let DATE = parseTime(created) || new Date();\n            let RAN = +successful || 0;\n            let FAIL = +failed || 0;\n            let TOTAL = +successful + failed || 0;\n            return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n        }, []);\n        // Scale the range of the data\n        x.domain(\n            d3.extent(data, function(d) {\n                return d.DATE;\n            })\n        );\n        y.domain([\n            0,\n            d3.max(data, function(d) {\n                return d.TOTAL * 1.15 || 8;\n            })\n        ]);\n\n        const successLine = d3\n        .line()\n        .curve(d3.curveMonotoneX)\n        .x(function(d) {\n            return x(d.DATE);\n        })\n        .y(function(d) {\n            return y(d.RAN);\n        });\n\n        const failLine = d3\n        .line()\n        .defined(d => !isNaN(d.FAIL))\n        .curve(d3.curveMonotoneX)\n        .x(function(d) {\n            return x(d.DATE);\n        })\n        .y(function(d) {\n            return y(d.FAIL);\n        });\n        // Add the Y Axis\n        svg\n        .append('g')\n        .attr('class', 'y-axis')\n        .call(\n            d3\n            .axisLeft(y)\n            .ticks(10)\n            .tickSize(-width)\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.y-axis .tick text').attr('x', -5);\n\n        // text label for the y axis\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Job runs');\n        // Add the X Axis\n        let ticks;\n        const maxTicks = Math.round(data.length / (value / 2));\n        ticks = data.map(d => d.DATE);\n        if (value === 31) {\n            ticks = data.map((d, i) =>\n                i % maxTicks === 0 ? d.DATE : undefined).filter(item => item);\n        }\n\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(\n            d3\n            .axisBottom(x)\n            .tickValues(ticks)\n            .tickSize(-height)\n            .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n        ) // \"Jan-01\"\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n        // text label for the x axis\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' +\n                width / 2 +\n                ' ,' +\n                (height + this.props.margin.top + 20) +\n                ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n        const vertical = svg\n        .append('path')\n        .attr('class', 'mouse-line')\n        .style('stroke', 'black')\n        .style('stroke-width', '3px')\n        .style('stroke-dasharray', ('3, 3'))\n        .style('opacity', '0');\n\n        const handleMouseOver = function(d) {\n            tooltip.handleMouseOver(d);\n            // show vertical line\n            vertical.transition().style('opacity', '1');\n        };\n\n        const handleMouseMove = function() {\n            let intersectX = this.cx.baseVal.value;\n            vertical\n            .attr('d', function () {\n                let d = 'M' + intersectX + ',' + height;\n                d += ' ' + intersectX + ',' + 0;\n                return d;\n            });\n        };\n\n        const handleMouseOut = function() {\n            // hide tooltip\n            tooltip.handleMouseOut();\n            // hide vertical line\n            vertical.transition().style('opacity', 0);\n        };\n\n        // Add the successLine path.\n        svg\n        .append('path')\n        .data([ data ])\n        .attr('class', 'line')\n        .style('fill', 'none')\n        .style('stroke', () => colors(1))\n        .attr('stroke-width', 2)\n        .attr('d', successLine)\n        .call(transition);\n\n        // Add the failLine path.\n        svg\n        .append('path')\n        .data([ data ])\n        .attr('class', 'line')\n        .style('fill', 'none')\n        .style('stroke', () => colors(0))\n        .attr('stroke-width', 2)\n        .attr('d', failLine)\n        .call(transition);\n        svg\n        .selectAll('dot')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('r', 3)\n        .style('stroke', () => colors(1))\n        .style('fill', () => colors(1))\n        .attr('cx', function(d) {\n            return x(d.DATE);\n        })\n        .attr('cy', function(d) {\n            return y(d.RAN);\n        })\n\n        .on('mouseover', handleMouseOver)\n        .on('mousemove', handleMouseMove)\n        .on('mouseout', handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n        // create our failLine circles\n        svg\n        .selectAll('dot')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('r', 3)\n        .style('stroke', () => colors(0))\n        .style('fill', () => colors(0))\n        .attr('cx', function(d) {\n            return x(d.DATE);\n        })\n        .attr('cy', function(d) {\n            return y(d.FAIL);\n        })\n        .on('mouseover', handleMouseOver)\n        .on('mousemove', handleMouseMove)\n        .on('mouseout', handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n    }\n\n    componentDidMount() {\n        this.updateCluster();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.value !== this.props.value) {\n            this.updateCluster();\n        }\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        return <div id={ this.props.id } />;\n    }\n}\n\nLineChart.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    value: PropTypes.number,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    history: PropTypes.object,\n    clusterId: PropTypes.number\n};\n\nexport default initializeChart(withRouter(LineChart));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { trimStr } from '../Utilities/helpers';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell\n} from '@patternfly/react-core';\n\nconst DataListCell = styled(PFDataListCell)`\n    --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst ModulesList = ({ modules, isLoading }) => (\n    <DataList aria-label=\"Top Modules\" style={ {\n        maxHeight: '400px',\n        overflow: 'auto',\n        height: '400px',\n        background: 'white'\n    } }>\n        <DataListItem aria-labelledby=\"top-modules-header\">\n            <DataListCell>\n                <h3>Top modules</h3>\n            </DataListCell>\n            <DataCellEnd>\n                <h3>Usage</h3>\n            </DataCellEnd>\n        </DataListItem>\n        { isLoading && (\n            <PFDataListItem\n                aria-labelledby=\"modules-loading\"\n                key={ isLoading }\n                style={ { border: 'none' } }\n            >\n                <PFDataListCell>\n                    <LoadingState />\n                </PFDataListCell>\n            </PFDataListItem>\n        ) }\n        { !isLoading && modules.length <= 0 && (\n            <PFDataListItem\n                aria-labelledby=\"modules-no-data\"\n                key={ isLoading }\n                style={ { border: 'none' } }\n            >\n                <PFDataListCell>\n                    <NoData />\n                </PFDataListCell>\n            </PFDataListItem>\n        ) }\n        { !isLoading && modules.filter(module => module.module !== null).map(({ module, count }, index) => (\n            <DataListItem aria-labelledby=\"top-modules-detail\" key={ index }>\n                <DataListCell>\n                    <span>{ trimStr(module) }</span>\n                </DataListCell>\n                <DataCellEnd>\n                    { count }\n                </DataCellEnd>\n            </DataListItem>\n        )) }\n    </DataList>\n);\n\nModulesList.propTypes = {\n    modules: PropTypes.array,\n    isLoading: PropTypes.bool\n};\n\nexport default ModulesList;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { formatDateTime, formatSeconds, formatPercentage } from '../Utilities/helpers';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\nimport { Paths } from '../paths';\nimport { stringify } from 'query-string';\n\nimport {\n    Button,\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell,\n    Modal,\n    Label\n} from '@patternfly/react-core';\n\nimport { CircleIcon } from '@patternfly/react-icons';\n\nimport { readTemplateJobs } from '../Api';\n\nconst success = (\n    <CircleIcon\n        size=\"sm\"\n        key=\"5\"\n        style={ { color: 'rgb(110, 198, 100)', marginRight: '5px' } }\n    />\n);\nconst fail = (\n  <>\n    <CircleIcon\n        size=\"sm\"\n        key=\"5\"\n        style={ { color: 'rgb(163, 0, 0)', marginRight: '5px' } }\n    />\n    <span id=\"fail-icon\">!</span>\n  </>\n);\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst PFDataListItemNoBorder = styled(PFDataListItem)`\n    border-bottom: none;\n    margin-bottom: -20px;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataListItemCompact = styled(DataListItem)`\n  padding: 0;\n  > .pf-c-data-list__cell {\n    font-weight: 600;\n  }\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst DataListCellCompact = styled(DataListCell)`\n    padding: 7px;\n`;\n\nconst DataListFocus = styled.div`\n    display: grid;\n    grid-template-columns: repeat(3, auto);\n    grid-gap: 10px;\n    padding: var(--pf-global--spacer--lg);\n    background: #ebebeb;\n    border: 1px solid #ccc;\n    border-top: none;\n    margin-bottom: 20px;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst DataCellEndCompact = styled(DataCellEnd)`\n    padding: 7px !important;\n`;\n\nconst formatTopFailedTask = data => {\n    if (!data) {\n        return;\n    }\n\n    if (data && data[0]) {\n        const percentage = formatPercentage(data[0].fail_rate);\n        return `${data[0].task_name} ${percentage}`;\n    }\n\n    return `Unavailable`;\n};\n\nconst TemplatesList = ({ history, clusterId, templates, isLoading, queryParams }) => {\n    const [ isModalOpen, setIsModalOpen ] = useState(false);\n    const [ selectedId, setSelectedId ] = useState(null);\n    const [ selectedTemplate, setSelectedTemplate ] = useState([]);\n    const [ relatedJobs, setRelatedJobs ] = useState([]);\n\n    useEffect(() => {\n        const fetchTemplateDetails = () => {\n            return readTemplateJobs(selectedId, { params: queryParams });\n        };\n\n        const update = async () => {\n            await window.insights.chrome.auth.getUser();\n            fetchTemplateDetails().then(data => {\n                setSelectedTemplate(data);\n                setRelatedJobs(data.related_jobs);\n            });\n        };\n\n        if (selectedId) {\n            update();\n        }\n\n    }, [ selectedId ]);\n\n    const redirectToJobExplorer = () => {\n        const { jobExplorer } = Paths;\n        const initialQueryParams = {\n            template_id: [ selectedId ],\n            status: [ 'successful', 'failed', 'new', 'pending', 'waiting', 'error', 'canceled', 'running' ],\n            job_type: [ 'job' ],\n            start_date: queryParams.startDate,\n            end_date: queryParams.endDate,\n            quick_date_range: 'custom',\n            cluster_id: [ clusterId ]\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    return (\n    <>\n      <DataList aria-label=\"Top Templates\" style={ {\n          maxHeight: '400px',\n          overflow: 'auto',\n          height: '400px',\n          background: 'white'\n      } }>\n          <DataListItem aria-labelledby=\"top-templates-header\">\n              <DataListCell>\n                  <h3>Top templates</h3>\n              </DataListCell>\n              <DataCellEnd>\n                  <h3>Usage</h3>\n              </DataCellEnd>\n          </DataListItem>\n          { isLoading && (\n              <PFDataListItem\n                  aria-labelledby=\"templates-loading\"\n                  key={ isLoading }\n                  style={ { border: 'none' } }\n\n              >\n                  <PFDataListCell>\n                      <LoadingState />\n                  </PFDataListCell>\n              </PFDataListItem>\n          ) }\n          { !isLoading && templates.length <= 0 && (\n              <PFDataListItem\n                  aria-labelledby=\"templates-no-data\"\n                  key={ isLoading }\n                  style={ { border: 'none' } }\n              >\n                  <PFDataListCell>\n                      <NoData />\n                  </PFDataListCell>\n              </PFDataListItem>\n          ) }\n          { !isLoading && templates.map(({ name, count, id }, index) => (\n              <DataListItem aria-labelledby=\"top-templates-detail\" key={ index }>\n                  <DataListCell>\n                      <a\n                          onClick={ () => {\n                              setIsModalOpen(true);\n                              setSelectedId(id);\n                          } }\n                      >\n                          { name }\n                      </a>\n                  </DataListCell>\n                  <DataCellEnd>\n                      { count }\n                  </DataCellEnd>\n              </DataListItem>\n          )) }\n      </DataList>\n      { selectedTemplate && selectedTemplate !== [] && (\n          <Modal\n              width={ '80%' }\n              title={ selectedTemplate.name ? selectedTemplate.name : 'no-template-name' }\n              isOpen={ isModalOpen }\n              onClose={ () => {\n                  setIsModalOpen(false);\n                  setSelectedTemplate([]);\n                  setRelatedJobs([]);\n                  setSelectedId(null);\n              } }\n              actions={ [\n                  <Button\n                      key=\"cancel\"\n                      variant=\"secondary\"\n                      onClick={ () => {\n                          setIsModalOpen(false);\n                          setSelectedTemplate([]);\n                          setRelatedJobs([]);\n                          setSelectedId(null);\n                      } }\n                  >\n              Close\n                  </Button>\n              ] }\n          >\n              <DataList aria-label=\"Selected Template Details\">\n                  <PFDataListItemNoBorder\n                      aria-labelledby=\"Selected Template Statistics\"\n                  >\n                      <DataListFocus>\n                          <div aria-labelledby=\"job runs\">\n                              <b style={ { marginRight: '10px' } }>Number of runs</b>\n                              { selectedTemplate.total_run_count ?\n                                  selectedTemplate.total_run_count : 'Unavailable' }\n                          </div>\n                          <div aria-labelledby=\"total time\">\n                              <b style={ { marginRight: '10px' } }>Total time</b>\n                              { selectedTemplate.total_run ?\n                                  selectedTemplate.total_run : 'Unavailable' }\n                          </div>\n                          <div aria-labelledby=\"Avg Time\">\n                              <b style={ { marginRight: '10px' } }>Avg time</b>\n                              { selectedTemplate.average_run ?\n                                  selectedTemplate.average_run : 'Unavailable' }\n                          </div>\n                          <div aria-labelledby=\"success rate\">\n                              <b style={ { marginRight: '10px' } }>Success rate</b>\n                              { !isNaN(selectedTemplate.success_rate) ?\n                                  formatPercentage(selectedTemplate.success_rate) : 'Unavailable' }\n                          </div>\n                          <div aria-labelledby=\"most failed task\">\n                              <b style={ { marginRight: '10px' } }>Most failed task</b>\n                              { selectedTemplate.most_failed_tasks ?\n                                  formatTopFailedTask(selectedTemplate.most_failed_tasks) : 'Unavailable' }\n                          </div>\n                      </DataListFocus>\n                  </PFDataListItemNoBorder>\n                  <DataListItemCompact>\n                      <DataListCellCompact key=\"last5jobs\">\n                          <Label variant=\"outline\">Last 5 jobs</Label>\n                      </DataListCellCompact>,\n                      <DataCellEndCompact>\n                          <Button component=\"a\" onClick={ redirectToJobExplorer } variant=\"link\">\n                              View all jobs\n                          </Button>\n                      </DataCellEndCompact>\n                  </DataListItemCompact>\n                  <DataListItemCompact aria-labelledby=\"datalist header\">\n                      <PFDataListCell key=\"job heading\">Id/Name</PFDataListCell>\n                      <PFDataListCell key=\"cluster heading\">Cluster</PFDataListCell>\n                      <PFDataListCell key=\"start time heading\">Start Time</PFDataListCell>\n                      <PFDataListCell key=\"total time heading\">Total Time</PFDataListCell>\n                  </DataListItemCompact>\n                  { relatedJobs.length <= 0 && <LoadingState /> }\n                  { relatedJobs.length > 0 &&\n              relatedJobs.map((job, index) => (\n                  <DataListItem\n                      style={ { padding: '10px 0' } }\n                      key={ `job-details-${index}` }\n                      aria-labelledby=\"job details\"\n                  >\n                      <PFDataListCell key=\"job name\">\n                          { job.status === 'successful' ? success : fail }{ ' ' }\n                          { job.job_id } - { job.job_name }\n                      </PFDataListCell>\n                      <PFDataListCell key=\"job cluster\">\n                          { job.cluster_label || job.install_uuid }\n                      </PFDataListCell>\n                      <PFDataListCell key=\"start time\">\n                          { formatDateTime(job.start_time) }\n                      </PFDataListCell>\n                      <PFDataListCell key=\"total time\">\n                          { formatSeconds(job.total_time) }\n                      </PFDataListCell>\n                  </DataListItem>\n              )) }\n              </DataList>\n          </Modal>\n      ) }\n    </>\n    );\n};\n\nTemplatesList.propTypes = {\n    templates: PropTypes.array,\n    isLoading: PropTypes.bool,\n    queryParams: PropTypes.object\n};\n\nexport default TemplatesList;\n","import React, { useState, useEffect } from 'react';\nimport moment from 'moment';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport {\n    preflightRequest,\n    readChart30,\n    readClusters,\n    readModules,\n    readTemplates\n} from '../../Api';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle,\n    FormSelect,\n    FormSelectOption\n} from '@patternfly/react-core';\n\nimport { FilterIcon } from '@patternfly/react-icons';\n\nimport BarChart from '../../Charts/BarChart';\nimport LineChart from '../../Charts/LineChart';\nimport ModulesList from '../../Components/ModulesList';\nimport TemplatesList from '../../Components/TemplatesList';\n\nconst CardTitle = styled(PFCardTitle)`\n  border-bottom: 2px solid #ebebeb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &&& {\n    min-height: 60px;\n    --pf-c-card--first-child--PaddingTop: 10px;\n    --pf-c-card__header--not-last-child--PaddingBottom: 10px;\n\n    h3 {\n      font-size: 0.875em;\n    }\n  }\n`;\n\nconst timeFrameOptions = [\n    { value: 'please choose', label: 'Select date range', disabled: true },\n    { value: 7, label: 'Past week', disabled: false },\n    { value: 14, label: 'Past 2 weeks', disabled: false },\n    { value: 31, label: 'Past month', disabled: false }\n];\n\nfunction formatClusterName(data) {\n    const defaultClusterOptions = [\n        { value: 'please choose', label: 'Select cluster', disabled: true },\n        { value: 'all', label: 'All clusters', disabled: false }\n    ];\n    return data.reduce(\n        (formatted, { label, cluster_id: id, install_uuid: uuid }) => {\n            if (label.length === 0) {\n                formatted.push({ value: id, label: uuid, disabled: false });\n            } else {\n                formatted.push({ value: id, label, disabled: false });\n            }\n\n            return formatted;\n        },\n        defaultClusterOptions\n    );\n}\n\nconst initialQueryParams = {\n    startDate: moment()\n    .subtract(1, 'month')\n    .format('YYYY-MM-DD'),\n    endDate: moment().format('YYYY-MM-DD')\n};\n\nconst Clusters = ({ history }) => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [ barChartData, setBarChartData ] = useState([]);\n    const [ lineChartData, setLineChartData ] = useState([]);\n    const [ templatesData, setTemplatesData ] = useState([]);\n    const [ modulesData, setModulesData ] = useState([]);\n    const [ clusterOptions, setClusterOptions ] = useState([]);\n    const [ clusterTimeFrame, setClusterTimeFrame ] = useState(31);\n    const [ selectedCluster, setSelectedCluster ] = useState('all');\n    const [ isLoading, setIsLoading ] = useState(true);\n    const { queryParams, setEndDate, setStartDate, setId } = useQueryParams(\n        initialQueryParams\n    );\n\n    useEffect(() => {\n        insights.chrome.appNavClick({ id: 'clusters', secondaryNav: true });\n\n        setIsLoading(true);\n        window.insights.chrome.auth.getUser().then(() =>\n            preflightRequest().then(() =>\n                readClusters().then(({ templates: clustersData = []}) => {\n                    const clusterOptions = formatClusterName(clustersData);\n                    setClusterOptions(clusterOptions);\n                    setIsLoading(false);\n                })\n            ).catch((error) => {\n                setPreFlightError({ preflightError: error });\n            })\n        );\n    }, []);\n\n    // Get and update the data\n    useEffect(() => {\n        setIsLoading(true);\n        window.insights.chrome.auth.getUser().then(() =>\n            Promise.all([\n                readChart30({ params: queryParams }),\n                readModules({ params: queryParams }),\n                readTemplates({ params: queryParams })\n            ]).then(([\n                { data: chartData = []},\n                { modules: modulesData = []},\n                { templates: templatesData = []}\n            ]) => {\n                queryParams.id ? setLineChartData(chartData) : setBarChartData(chartData);\n                setModulesData(modulesData);\n                setTemplatesData(templatesData);\n                setIsLoading(false);\n            }).catch(() => [])\n        );\n    }, [ queryParams ]);\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={ 'Clusters' } />\n            </PageHeader>\n            { preflightError && (\n                <Main>\n                    <EmptyState { ...preflightError } />\n                </Main>\n            ) }\n            { !preflightError && (\n        <>\n          <Main style={ { paddingBottom: '0' } }>\n              <Card>\n                  <CardTitle style={ { paddingBottom: '0', paddingTop: '0' } }>\n                      <h2>\n                          <FilterIcon style={ { marginRight: '10px' } } />\n                  Filter\n                      </h2>\n                      <div style={ { display: 'flex', justifyContent: 'flex-end' } }>\n                          <FormSelect\n                              name=\"selectedCluster\"\n                              value={ selectedCluster }\n                              onChange={ value => {\n                                  setSelectedCluster(value);\n                                  setId(value);\n                              } }\n                              aria-label=\"Select Cluster\"\n                              style={ { margin: '2px 10px' } }\n                          >\n                              { clusterOptions.map(({ value, label, disabled }, index) => (\n                                  <FormSelectOption\n                                      isDisabled={ disabled }\n                                      key={ index }\n                                      value={ value }\n                                      label={ label }\n                                  />\n                              )) }\n                          </FormSelect>\n                          <FormSelect\n                              name=\"clusterTimeFrame\"\n                              value={ clusterTimeFrame }\n                              onChange={ value => {\n                                  setClusterTimeFrame(+value);\n                                  setEndDate();\n                                  setStartDate(+value);\n                              } }\n                              aria-label=\"Select Date Range\"\n                              style={ { margin: '2px 10px' } }\n                          >\n                              { timeFrameOptions.map((option, index) => (\n                                  <FormSelectOption\n                                      isDisabled={ option.disabled }\n                                      key={ index }\n                                      value={ option.value }\n                                      label={ option.label }\n                                  />\n                              )) }\n                          </FormSelect>\n                      </div>\n                  </CardTitle>\n              </Card>\n          </Main>\n          <Main>\n              <Card>\n                  <PFCardTitle>\n                      <h2>Job status</h2>\n                  </PFCardTitle>\n                  <CardBody>\n                      { isLoading && !preflightError && <LoadingState /> }\n                      { selectedCluster === 'all' &&\n                  barChartData.length > 0 &&\n                  !isLoading && (\n                          <BarChart\n                              margin={ { top: 20, right: 20, bottom: 50, left: 70 } }\n                              id=\"d3-bar-chart-root\"\n                              data={ barChartData }\n                              value={ clusterTimeFrame }\n                          />\n                      ) }\n                      { selectedCluster !== 'all' &&\n                  lineChartData.length > 0 &&\n                  !isLoading && (\n                          <LineChart\n                              margin={ { top: 20, right: 20, bottom: 50, left: 70 } }\n                              id=\"d3-line-chart-root\"\n                              data={ lineChartData }\n                              value={ clusterTimeFrame }\n                              clusterId={ queryParams.id }\n                          />\n                      ) }\n                  </CardBody>\n              </Card>\n              <div\n                  className=\"dataCard\"\n                  style={ { display: 'flex', marginTop: '20px' } }\n              >\n                  <TemplatesList\n                      history={ history }\n                      queryParams={ queryParams }\n                      clusterId={ queryParams.id }\n                      templates={ templatesData.slice(0, 10) }\n                      isLoading={ isLoading }\n                  />\n                  <ModulesList\n                      modules={ modulesData.slice(0, 10) }\n                      isLoading={ isLoading }\n                  />\n              </div>\n          </Main>\n        </>\n            ) }\n        </React.Fragment>\n    );\n};\n\nexport default Clusters;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Switch as PFSwitch } from '@patternfly/react-core';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  overflow: auto;\n  width: 100%;\n  height: ${props => props.height};\n`;\n\nconst LegendDetail = styled.div`\n  display: flex;\n  padding: 7.5px 15px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  overflow: auto;\n`;\n\nconst Color = styled.div.attrs(props => ({\n    color: props.color || 'black'\n}))`\n  min-width: 12px;\n  height: 12px;\n  background: ${props => props.color};\n  margin-right: 20px;\n`;\n\nconst Title = styled.span`\n  font-size: 15px;\n  display: inline-block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n`;\n\nconst SubTitle = styled.span`\n    font-size: 15px;\n    margin-left: 20px;\n`;\n\nconst Switch = styled(PFSwitch)`\n  margin-left: 20px;\n\n  svg {\n    display: none;\n  }\n`;\n\nclass Legend extends Component {\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n    handleChange(_isChecked, { target: { value }}) {\n        const { onToggle } = this.props;\n        const selectedId = parseFloat(value);\n        onToggle(selectedId);\n    };\n    render() {\n        const { data, selected, height } = this.props;\n        return (\n            <Container height={ height }>\n                { data.map(\n                    ({ name, value, id, count }, index) => (\n                        <LegendDetail key={ index }>\n                            <Wrapper>\n                                <Color color={ value } />\n                                <Title>{ name }</Title>\n                            </Wrapper>\n                            { count && (\n                                <SubTitle>{ count }</SubTitle>\n                            ) }\n                            { selected && (\n                                <Switch\n                                    isChecked={ selected.some(selection => selection === id) }\n                                    onChange={ this.handleChange }\n                                    aria-label={ name }\n                                    value={ id }\n                                    id={ `${name}-${id}` }\n                                />\n                            ) }\n                        </LegendDetail>\n                    )) }\n            </Container>\n        );\n    }\n}\n\nLegend.propTypes = {\n    data: PropTypes.array,\n    selected: PropTypes.array,\n    onToggle: PropTypes.func,\n    height: PropTypes.string\n};\n\nexport default Legend;\n","const pfmulti = [\n    '#06C',\n    '#4CB140',\n    '#009596',\n    '#5752D1',\n    '#F4C145',\n    '#EC7A08',\n    '#8BC1F7',\n    '#23511E',\n    '#A2D9D9',\n    '#2A265F',\n    '#F9E0A2',\n    '#8F4700',\n    '#002F5D'\n];\n\nexport { pfmulti };\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport {\n    withRouter\n} from 'react-router-dom';\n\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport Legend from '../Utilities/Legend';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\nimport { stringify } from 'query-string';\nimport { pfmulti } from '../Utilities/colors';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nconst color = d3.scaleOrdinal(pfmulti);\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        this.draw();\n    }\n\n    draw() {\n        this.width = 125;\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 125;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', 68)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.date = this.toolTipBase\n        .append('text')\n        .attr('x', 20)\n        .attr('y', 14)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Date');\n        this.jobs = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 72)\n        .attr('y', 14)\n        .text('0 Jobs');\n        this.orgName = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', -1)\n        .attr('font-size', 12)\n        .text('Org');\n        this.clickMore = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 20)\n        .attr('y', 30)\n        .attr('font-size', 12)\n        .text('Click for details');\n    }\n\n  handleMouseOver = d => {\n      let date;\n      let orgName;\n      let jobs;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      if (!d) {\n          return;\n      } else {\n          const maxLength = 16;\n          date = d.date;\n          orgName = d.org_name;\n          jobs = d.value;\n          if (d.org_name.length > maxLength) {\n              orgName = d.org_name.slice(0, maxLength).concat('...');\n          }\n      }\n\n      const formatTooltipDate = d3.timeFormat('%m/%d');\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n\n      this.date.text('' + formatTooltipDate(date));\n      this.orgName.text('' + orgName);\n      this.jobs.text('' + jobs + ' Jobs');\n      this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n      const maxTextPerc = this.jobsWidth / this.boxWidth * 100;\n      const threshold = 45;\n      const overage = maxTextPerc / threshold;\n      let adjustedWidth;\n      if (maxTextPerc > threshold) {\n          adjustedWidth = this.boxWidth * overage;\n      } else {\n          adjustedWidth = this.boxWidth;\n      }\n\n      this.boundingBox.attr('width', adjustedWidth);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n          this.boundingBox.attr('x', -adjustedWidth - 20);\n          this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n          this.orgName.attr('x', -adjustedWidth - 7);\n          this.clickMore.attr('x', -adjustedWidth - 7);\n          this.date.attr('x', -adjustedWidth - 7);\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n          this.boundingBox.attr('x', 10);\n          this.orgName.attr('x', 20);\n          this.clickMore.attr('x', 20);\n          this.jobs.attr('x', adjustedWidth / 2);\n          this.date.attr('x', 20);\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass GroupedBarChart extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.handleToggle = this.handleToggle.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.orgsList = props.data[0].orgs;\n        this.selection = [];\n        this.state = {\n            colors: [],\n            selected: [],\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    // Methods\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => { this.init(); }, 500)\n        });\n    }\n\n    redirectToJobExplorer({ date, id }) {\n        if (id === -1) {\n            // disable clicking on \"others\" block\n            return;\n        }\n\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const initialQueryParams = {\n            quick_date_range: 'custom',\n            start_date: formattedDate,\n            end_date: formattedDate,\n            status: [ 'successful', 'failed', 'new', 'pending', 'waiting', 'error', 'canceled', 'running' ],\n            org_id: [ id ]\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    handleToggle(selectedId) {\n        if (this.selection.indexOf(selectedId) === -1) {\n            this.selection = [ ...this.selection, selectedId ];\n        } else if (this.selection.includes(selectedId)) {\n            this.selection = [ ...this.selection ].filter(s => s !== selectedId);\n        }\n\n        this.setState({ selected: this.selection });\n        this.draw();\n    }\n\n    init() {\n        // create the first 8 selected data points\n        if (this.selection.length === 0) {\n            this.orgsList.forEach((org, index) => {\n                if (index <= 7) {\n                    this.handleToggle(org.id);\n                }\n            });\n        }\n\n        // create our colors array to send to the Legend component\n        const colors = this.orgsList.reduce((colors, org) => {\n            colors.push({\n                name: org.org_name,\n                value: color(org.org_name),\n                id: org.id\n            });\n            return colors;\n        }, []);\n        this.setState({ colors });\n        this.draw();\n    }\n\n    draw() {\n        // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        let { data: unformattedData, timeFrame } = this.props;\n        const selected = this.selection;\n        const parseTime = d3.timeParse('%Y-%m-%d');\n        const data = unformattedData.reduce((formatted, { date, orgs: orgsList }) => {\n            date = parseTime(date);\n            const selectedOrgs = orgsList.filter(({ id }) => selected.includes(id));\n            selectedOrgs.map(org => {\n                org.date = date;\n            });\n            return formatted.concat({ date, selectedOrgs });\n        }, []);\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n        // x scale of entire chart\n        const x0 = d3\n        .scaleBand()\n        .range([ 0, width ])\n        .padding(0.35);\n        // x scale of individual grouped bars\n        const x1 = d3.scaleBand();\n        const y = d3.scaleLinear().range([ height, 0 ]);\n        // format our X Axis ticks\n        let ticks;\n        const maxTicks = Math.round(data.length / (timeFrame / 2));\n        ticks = data.map(d => d.date);\n        if (timeFrame === 31) {\n            ticks = data.map((d, i) =>\n                i % maxTicks === 0 ? d.date : undefined).filter(item => item);\n        }\n\n        const xAxis = d3\n        .axisBottom(x0)\n        .tickValues(ticks)\n        .tickFormat(d3.timeFormat('%-m/%-d'));\n\n        const yAxis = d3\n        .axisLeft(y)\n        .ticks(8)\n        .tickSize(-width, 0, 0);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n\n        const dates = data.map(d => d.date);\n        const selectedOrgNames = data[0].selectedOrgs.map(d => d.org_name);\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id\n        });\n        x0.domain(dates);\n        x1.domain(selectedOrgNames).range([ 0, x0.bandwidth() ]); // unsorted\n        y.domain([\n            0,\n            d3.max(data, date => d3.max(date.selectedOrgs, d => d.value * 1.15)) || 8\n        ]);\n\n        // add y axis\n        svg\n        .append('g')\n        .attr('class', 'y axis')\n        .call(yAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7')\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 6)\n        .attr('dy', '.71em')\n        .style('text-anchor', 'end')\n        .style('font-weight', 'bold')\n        .text('Value');\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Jobs across orgs');\n\n        // add x axis\n        svg\n        .append('g')\n        .attr('class', 'x axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(xAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' + width / 2 + ' ,' + (height + this.props.margin.top + 25) + ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n        // add the groups\n        let slice = svg.selectAll('.slice').data(data);\n        slice.exit().remove();\n\n        const enter = slice\n        .enter()\n        .append('g')\n        .attr('class', 'g foo')\n        .attr('transform', d => 'translate(' + x0(d.date) + ',0)');\n        slice = slice.merge(enter);\n        // add the individual bars\n        let bars = slice.selectAll('rect').data(function(d) {\n            return d.selectedOrgs;\n        });\n        bars.exit().remove();\n\n        const subEnter = bars\n        .enter()\n        .append('rect')\n        .attr('width', x1.bandwidth())\n        .attr('x', function(d) {\n            return x1(d.org_name);\n        }) // unsorted\n        .style('fill', function(d) {\n            return color(d.org_name);\n        })\n        .attr('y', function(d) {\n            return y(d.value);\n        })\n        .attr('height', function(d) {\n            return height - y(d.value);\n        })\n        .on('mouseover', function(d) {\n            d3.select(this).style('fill', d3.rgb(color(d.org_name)).darker(1));\n            tooltip.handleMouseOver();\n        })\n        .on('mousemove', tooltip.handleMouseOver)\n        .on('mouseout', function(d) {\n            d3.select(this).style('fill', color(d.org_name));\n            tooltip.handleMouseOut();\n        })\n        .on('click', this.redirectToJobExplorer);\n        bars = bars.merge(subEnter);\n    };\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        const { colors, selected } = this.state;\n        return (\n            <Wrapper>\n                <div id={ this.props.id } />\n                { colors.length > 0 && (\n                    <Legend\n                        id=\"d3-grouped-bar-legend\"\n                        data={ colors }\n                        selected={ selected }\n                        onToggle={ this.handleToggle }\n                        height=\"350px\"\n                    />\n                ) }\n            </Wrapper>\n        );\n    }\n}\n\nGroupedBarChart.propTypes = {\n    id: PropTypes.string,\n    isAccessible: PropTypes.bool,\n    data: PropTypes.array,\n    value: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    timeFrame: PropTypes.number,\n    history: PropTypes.object\n};\n\nexport default initializeChart(withRouter(GroupedBarChart));\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport { getTotal } from '../Utilities/helpers';\nimport Legend from '../Utilities/Legend';\nimport { pfmulti } from '../Utilities/colors';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        // defer drawing until we know the data shape\n        this.drawn = false;\n        // show the success rate or not\n        this.showSuccess = false;\n    }\n\n    draw(d) {\n        // chart1 has success rate data and chart2 does not ...\n        this.showSuccess = (d && d.data && 'success_rate' in d.data) ? true : false;\n        const boundingHeight = (this.showSuccess) ? 70 : 52;\n        const boundingWidth = (this.showSuccess) ? 120 : 108;\n\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBOx = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', boundingHeight)\n        .attr('width', boundingWidth)\n        .attr('fill', '#393f44');\n        this.orgName = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 0)\n        .text('Organization');\n        this.percentageTotal = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 16)\n        .text('0');\n        this.percentageSuccess = null;\n        if (this.showSuccess) {\n            this.percentageSuccess = this.toolTipBase\n            .append('text')\n            .attr('fill', 'white')\n            .attr('font-size', 12)\n            .attr('font-weight', 800)\n            .attr('x', 20)\n            .attr('y', 30)\n            .text('');\n        }\n    }\n\n  handleMouseOver = d => {\n      // treat draw() as a singleton to avoid a painted window effect\n      if (this.drawn !== true) {\n          this.draw(d);\n          this.drawn = true;\n      }\n\n      let perc;\n      let percSuccess;\n      let orgName;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      if (!d) {\n          return;\n      }\n\n      if (d && d.data) {\n          const maxLength = 16;\n          perc = d.data.percent;\n          percSuccess = d.data.success_rate;\n          orgName = d.data.name;\n          if (d.data.name.length > maxLength) {\n              orgName = d.data.name.slice(0, maxLength - 3).concat('...');\n          }\n      }\n\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n\n      this.percentageTotal.text('' + perc + '%');\n      if (percSuccess && this.percentageSuccess) {\n          this.percentageSuccess.text('(' + percSuccess + '% successful)');\n      }\n\n      this.orgName.text(' ' + orgName);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, -10) rotate(45)');\n          this.boundingBOx.attr('x', -125);\n          this.orgName.attr('x', -112);\n          this.percentageTotal.attr('x', -112);\n          if (this.showSuccess) {\n              this.percentageSuccess.attr('x', -112);\n          }\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, -10) rotate(45)');\n          this.boundingBOx.attr('x', 10);\n          this.orgName.attr('x', 20);\n          this.percentageTotal.attr('x', 20);\n          if (this.showSuccess) {\n              this.percentageSuccess.attr('x', 20);\n          }\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass PieChart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            colors: [],\n            timeout: null\n        };\n        this.draw = this.draw.bind(this);\n        this.init = this.init.bind(this);\n        this.resize = this.resize.bind(this);\n    }\n    // Methods\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => { this.init(); }, 500)\n        });\n    }\n    sortDescending(data) {\n    // descending\n        data.sort((a, b) =>\n            d3.descending(parseFloat(a.count), parseFloat(b.count))\n        );\n    }\n    init() {\n        const { data } = this.props;\n        const color = d3.scaleOrdinal(pfmulti);\n        // create our colors array to send to the Legend component\n        const colors = data.reduce((colors, org) => {\n            // format complement slice as \"Others\"\n            if (org.id === -1) {\n                colors.push({\n                    name: 'Others',\n                    value: color(org.name),\n                    count: Math.round(org.count)\n                });\n            } else {\n                colors.push({\n                    name: org.name,\n                    value: color(org.name),\n                    count: Math.round(org.count)\n                });\n            }\n\n            return colors;\n        }, []);\n        this.setState({ colors });\n        this.draw();\n    }\n    draw() {\n        const color = d3.scaleOrdinal(pfmulti);\n\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.bottom)\n        .append('g');\n\n        svg.append('g').attr('class', 'slices');\n        svg.append('g').attr('class', 'labels');\n        svg.append('g').attr('class', 'lines');\n        const radius = Math.min(width, height) / 2;\n        let { data: unfilteredData } = this.props;\n        const data = unfilteredData.filter(datum => datum.id !== -1);\n        const total = getTotal(data);\n        data.forEach(function(d) {\n            d.count = +d.count;\n            d.percent = +Math.round((d.count / total) * 100);\n        });\n        const donutTooltip = new Tooltip({\n            svg: '#' + this.props.id\n        });\n        const pie = d3\n        .pie()\n        .sort(null)\n        .value(d => d.count);\n        const arc = d3\n        .arc()\n        .outerRadius(radius - 10) // controls top positioning of chart\n        .innerRadius(0);\n\n        svg.attr(\n            'transform',\n            'translate(' +\n        (width + this.props.margin.left + this.props.margin.right) / 2 +\n        ',' +\n        (height + this.props.margin.top + this.props.margin.bottom) / 2 +\n        ')'\n        );\n\n        svg\n        .selectAll('path')\n        .data(pie(data))\n        .enter()\n        .append('path')\n        .attr('d', arc)\n        .attr('fill', (d, i) => color(i));\n\n        svg\n        .selectAll('path')\n        .on('mouseover', function(d, i) {\n            d3.select(this).style('fill', d3.rgb(color(i)).darker(1));\n            donutTooltip.handleMouseOver(d);\n        })\n        .on('mouseout', function(d, i) {\n            d3.select(this).style('fill', color(i));\n            donutTooltip.handleMouseOut();\n        })\n        .on('mousemove', donutTooltip.handleMouseOver);\n\n        svg.append('g').classed('labels', true);\n        svg.append('g').classed('lines', true);\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.data !== this.props.data) {\n            this.init();\n        }\n    }\n\n    render() {\n        const { colors } = this.state;\n        return (\n            <Wrapper>\n                <div id={ this.props.id } />\n                { colors.length > 0 && (\n                    <Legend\n                        id=\"d3-grouped-bar-legend\"\n                        data={ colors }\n                        selected={ null }\n                        onToggle={ null }\n                        height=\"300px\"\n                    />\n                ) }\n            </Wrapper>\n        );\n    }\n}\n\nPieChart.propTypes = {\n    id: PropTypes.string,\n    isAccessible: PropTypes.bool,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    timeFrame: PropTypes.number\n};\n\nexport default initializeChart(PieChart);\n","import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport {\n    preflightRequest,\n    readJobsByDateAndOrg,\n    readJobRunsByOrg,\n    readJobEventsByOrg\n} from '../../Api';\n\nimport { Main, PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle,\n    FormSelect,\n    FormSelectOption\n} from '@patternfly/react-core';\n\nimport { FilterIcon } from '@patternfly/react-icons';\n\nimport GroupedBarChart from '../../Charts/GroupedBarChart';\nimport PieChart from '../../Charts/PieChart';\n\nconst CardTitle = styled(PFCardTitle)`\n  border-bottom: 2px solid #ebebeb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &&& {\n    min-height: 60px;\n    --pf-c-card--first-child--PaddingTop: 10px;\n    --pf-c-card__header--not-last-child--PaddingBottom: 10px;\n\n    h3 {\n      font-size: 0.875em;\n    }\n  }\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  overflow: hidden;\n\n  .pf-c-card {\n    width: 50%;\n    margin-top: 20px;\n    overflow: auto;\n  }\n\n  .pf-c-card:first-of-type {\n    margin-right: 20px;\n  }\n`;\n\nconst TopCard = styled(Card)`\n  min-height: 500px;\n`;\n\nconst timeFrameOptions = [\n    { value: 'please choose', label: 'Select Date Range', disabled: true },\n    { value: 7, label: 'Past Week', disabled: false },\n    { value: 14, label: 'Past 2 Weeks', disabled: false },\n    { value: 31, label: 'Past Month', disabled: false }\n];\n\nconst sortOptions = [\n    { value: 'please choose', label: 'Order By', disabled: true },\n    { value: 'count:desc', label: 'Top 5 Orgs', disabled: false },\n    { value: 'count:asc', label: 'Bottom 5 Orgs', disabled: false },\n    { value: 'all', label: 'All Orgs', disabled: false }\n];\n\nconst initialQueryParams = {\n    startDate: moment().subtract(1, 'month').format('YYYY-MM-DD'),\n    endDate: moment().format('YYYY-MM-DD'),\n    sort_by: 'count:desc',\n    limit: 5\n};\n\nconst OrganizationStatistics = () => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [ pieChart1Data, setPieChart1Data ] = useState([]);\n    const [ pieChart2Data, setPieChart2Data ] = useState([]);\n    const [ groupedBarChartData, setGroupedBarChartData ] = useState([]);\n    const [ timeframe, setTimeframe ] = useState(31);\n    const [ sortOrder, setSortOrder ] = useState('count:desc');\n    const [ firstRender, setFirstRender ] = useState(true);\n    const [ isLoading, setIsLoading ] = useState(true);\n    const {\n        queryParams,\n        setEndDate,\n        setStartDate,\n        setSortBy,\n        setLimit\n    } = useQueryParams(initialQueryParams);\n\n    const setLimitValue = (val) => {\n        let limit;\n        if (val === 'count:asc' || val === 'count:desc') {\n            limit = 5;\n        } else {\n            limit = 200;\n        }\n\n        return setLimit(limit);\n    };\n\n    useEffect(() => {\n        insights.chrome.appNavClick({ id: 'organization-statistics', secondaryNav: true });\n    }, []);\n\n    useEffect(() => {\n        let ignore = false;\n        const fetchEndpoints = () => {\n            return Promise.all(\n                [\n                    readJobsByDateAndOrg({ params: queryParams }),\n                    readJobRunsByOrg({ params: queryParams }),\n                    readJobEventsByOrg({ params: queryParams })\n                ].map((p) => p.catch(() => []))\n            );\n        };\n\n        const update = async () => {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            fetchEndpoints().then(\n                ([\n                    { dates: groupedBarChartData = []},\n                    { usages: pieChart1Data = []},\n                    { usages: pieChart2Data = []}\n                ]) => {\n                    setGroupedBarChartData(groupedBarChartData);\n                    setPieChart1Data(pieChart1Data);\n                    setPieChart2Data(pieChart2Data);\n                    setIsLoading(false);\n                }\n            );\n        };\n\n        async function initializeWithPreflight() {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            await preflightRequest().catch((error) => {\n                setPreFlightError({ preflightError: error });\n            });\n            fetchEndpoints().then(\n                ([\n                    { dates: groupedBarChartData = []},\n                    { usages: pieChart1Data = []},\n                    { usages: pieChart2Data = []}\n                ]) => {\n                    if (!ignore) {\n                        setGroupedBarChartData(groupedBarChartData);\n                        setPieChart1Data(pieChart1Data);\n                        setPieChart2Data(pieChart2Data);\n                        setFirstRender(false);\n                        setIsLoading(false);\n                    }\n                }\n            );\n        }\n\n        if (firstRender) {\n            initializeWithPreflight();\n            return () => (ignore = true);\n        } else {\n            update();\n        }\n    }, [ queryParams ]);\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={ 'Organization Statistics' } />\n            </PageHeader>\n            { preflightError && (\n                <Main>\n                    <EmptyState { ...preflightError } />\n                </Main>\n            ) }\n            { !preflightError && (\n        <>\n          <Main style={ { paddingBottom: '0' } }>\n              <Card>\n                  <CardTitle style={ { paddingBottom: '0', paddingTop: '0' } }>\n                      <h2>\n                          <FilterIcon style={ { marginRight: '10px' } } />\n                  Filter\n                      </h2>\n                      <div style={ { display: 'flex', justifyContent: 'flex-end' } }>\n                          <FormSelect\n                              name=\"sortOrder\"\n                              value={ sortOrder }\n                              onChange={ (value) => {\n                                  setSortOrder(value);\n                                  setSortBy(value);\n                                  setLimitValue(value);\n                              } }\n                              aria-label=\"Select Cluster\"\n                              style={ { margin: '2px 10px' } }\n                          >\n                              { sortOptions.map(({ value, label, disabled }, index) => (\n                                  <FormSelectOption\n                                      isDisabled={ disabled }\n                                      key={ index }\n                                      value={ value }\n                                      label={ label }\n                                  />\n                              )) }\n                          </FormSelect>\n                          <FormSelect\n                              name=\"timeframe\"\n                              value={ timeframe }\n                              onChange={ (value) => {\n                                  setTimeframe(+value);\n                                  setEndDate();\n                                  setStartDate(+value);\n                              } }\n                              aria-label=\"Select Date Range\"\n                              style={ { margin: '2px 10px' } }\n                          >\n                              { timeFrameOptions.map((option, index) => (\n                                  <FormSelectOption\n                                      isDisabled={ option.disabled }\n                                      key={ index }\n                                      value={ option.value }\n                                      label={ option.label }\n                                  />\n                              )) }\n                          </FormSelect>\n                      </div>\n                  </CardTitle>\n              </Card>\n          </Main>\n          <Main>\n              <TopCard>\n                  <CardTitle>\n                      <h2>Organization Status</h2>\n                  </CardTitle>\n                  <CardBody>\n                      { isLoading && <LoadingState /> }\n                      { !isLoading && groupedBarChartData.length <= 0 && <NoData /> }\n                      { !isLoading && groupedBarChartData.length > 0 && (\n                          <GroupedBarChart\n                              margin={ { top: 20, right: 20, bottom: 50, left: 50 } }\n                              id=\"d3-grouped-bar-chart-root\"\n                              data={ groupedBarChartData }\n                              timeFrame={ timeframe }\n                          />\n                      ) }\n                  </CardBody>\n              </TopCard>\n              <CardContainer>\n                  <Card>\n                      <CardBody style={ { padding: 0 } }>\n                          <CardTitle style={ { padding: 0 } }>\n                              <h2 style={ { marginLeft: '20px' } }>\n                      Job Runs by Organization\n                              </h2>\n                          </CardTitle>\n                          { isLoading && <LoadingState /> }\n                          { !isLoading && pieChart1Data.length <= 0 && <NoData /> }\n                          { !isLoading && pieChart1Data.length > 0 && (\n                              <PieChart\n                                  margin={ { top: 20, right: 20, bottom: 0, left: 20 } }\n                                  id=\"d3-donut-1-chart-root\"\n                                  data={ pieChart1Data }\n                                  timeFrame={ timeframe }\n                              />\n                          ) }\n                      </CardBody>\n                  </Card>\n                  <Card>\n                      <CardBody style={ { padding: 0 } }>\n                          <CardTitle style={ { padding: 0 } }>\n                              <h2 style={ { marginLeft: '20px' } }>\n                      Usage by Organization (Tasks)\n                              </h2>\n                          </CardTitle>\n                          { isLoading && <LoadingState /> }\n                          { !isLoading && pieChart2Data.length <= 0 && <NoData /> }\n                          { !isLoading && pieChart2Data.length > 0 && (\n                              <PieChart\n                                  margin={ { top: 20, right: 20, bottom: 0, left: 20 } }\n                                  id=\"d3-donut-2-chart-root\"\n                                  data={ pieChart2Data }\n                                  timeFrame={ timeframe }\n                              />\n                          ) }\n                      </CardBody>\n                  </Card>\n              </CardContainer>\n          </Main>\n        </>\n            ) }\n        </React.Fragment>\n    );\n};\n\nexport default OrganizationStatistics;\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst NoResults = () => {\n    return (\n        <EmptyState variant={ EmptyStateVariant.full }>\n            <EmptyStateIcon icon={ SearchIcon } />\n            <Title size=\"lg\" headingLevel=\"h4\">\n                No results found\n            </Title>\n            <EmptyStateBody>\n                No results match the filter criteria. Remove all filters or clear all filters to show results.\n            </EmptyStateBody>\n        </EmptyState>\n    );\n};\n\nexport default NoResults;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from '@patternfly/react-core';\nimport {\n    CheckCircleIcon,\n    ExclamationCircleIcon,\n    ClockIcon,\n    SyncAltIcon,\n    ExclamationTriangleIcon\n} from '@patternfly/react-icons';\n\nconst JobStatus = ({ status }) => {\n    const capitalized = (str) => str.charAt(0).toUpperCase() + str.slice(1);\n\n    const getColor = () => {\n        switch (status) {\n            case 'successful':\n                return 'green';\n            case 'failed':\n            case 'error':\n                return 'red';\n            case 'running':\n            case 'pending':\n                return 'blue';\n            case 'canceled':\n                return 'orange';\n            // case new, waiting\n            default: return 'grey';\n        }\n    };\n\n    const getIcon = () => {\n        switch (status) {\n            case 'successful':\n                return <CheckCircleIcon />;\n            case 'failed':\n            case 'error':\n                return <ExclamationCircleIcon />;\n            case 'running':\n                return <SyncAltIcon />;\n            case 'canceled':\n                return <ExclamationTriangleIcon />;\n            // case new, waiting, pending\n            default: return <ClockIcon />;\n        }\n    };\n\n    return (\n        <Label variant=\"outline\" color={ getColor() } icon={ getIcon() }>{ capitalized(status) }</Label>\n    );\n};\n\nJobStatus.propTypes = {\n    status: PropTypes.oneOf([\n        'successful',\n        'failed', 'error',\n        'running',\n        'new', 'waiting', 'pending', 'canceled'\n    ])\n};\n\nexport default JobStatus;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    DataListCell as PFDataListCell,\n    DataListContent,\n    DataList,\n    DataListItem,\n    DataListItemRow,\n    DataListItemCells as PFDataListItemCells,\n    DataListToggle as PFDataListToggle,\n    Tooltip\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkIcon } from '@patternfly/react-icons';\n\nimport LoadingState from '../Components/LoadingState';\nimport { formatDateTime, formatJobType } from '../Utilities/helpers';\nimport JobStatus from './JobStatus';\n\nconst headerLabels = [\n    'Id/Name',\n    'Status',\n    'Cluster',\n    'Organization',\n    'Type'\n];\n\nconst ExternalLinkIcon = styled(PFExternalLinkIcon)`\n    margin-left: 7px;\n    color: var(--pf-global--Color--400);\n`;\n\nconst DataListCell = styled(PFDataListCell)`\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    text-align: center;\n`;\n\nconst DataListCellHeader = styled(DataListCell)`\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    font-weight: bold;\n`;\n\nconst DataListItemCells = styled(PFDataListItemCells)`\n    align-items: center;\n`;\n\nconst DataListToggle = styled(PFDataListToggle)`\n    align-items: center;\n`;\n\nconst mobileBreakpoint = 765;\n\nconst buildHeader = labels => (\n    <DataListItem>\n        <DataListItemRow style={ { paddingLeft: '80px' } }>\n            <DataListItemCells\n                dataListCells={ labels.map(label => (\n                    <DataListCellHeader key={ label }>\n                        { label }\n                        { label === 'Id/Name' &&\n                              <ExternalLinkIcon />\n                        }\n                    </DataListCellHeader>\n                ))\n                }\n            />\n        </DataListItemRow>\n    </DataListItem>\n);\n\nconst buildListRow = (items, ariaLabel, ariaLabelledBy, windowWidth) => {\n    const [ isExpanded, setIsExpanded ] = useState([]);\n\n    return (\n        <>\n            { items.map((item, count) => {\n                const toggle = id => {\n                    const expanded = isExpanded;\n                    const idx = expanded.indexOf(id);\n                    const newExpanded =\n            idx >= 0\n                ? [\n                    ...expanded.slice(0, idx),\n                    ...expanded.slice(idx + 1, expanded.length)\n                ]\n                : [ ...expanded, id ];\n                    setIsExpanded(newExpanded);\n                };\n\n                return (\n                    <DataListItem key={ item.id.id } aria-labelledby={ ariaLabelledBy } isExpanded={ isExpanded.includes(`${item.id.id}-toggle`) } >\n                        <DataListItemRow key={ item.id.id }>\n                            <DataListToggle\n                                id={ `${item.id.id}-toggle` }\n                                aria-controls={ `${item.id.id}-expand` }\n                                onClick={ () => toggle(`${item.id.id}-toggle`) }\n                                isExpanded={ isExpanded.includes(`${item.id.id}-toggle`) }\n                            />\n                            <DataListItemCells\n                                dataListCells={ [\n                                    <DataListCell key={ count++ }>\n                                        <a href={ item.id.tower_link } target='_blank' rel='noopener noreferrer'>\n                                            { windowWidth < mobileBreakpoint &&\n                                             <span style={ { color: 'initial', fontWeight: 'bold' } }>\n                                                 Id/Name<ExternalLinkIcon />:\n                                             </span>\n                                            }\n                                            &nbsp;\n                                            { `${item.id.id} - ${item.id.template_name}` }\n                                        </a>\n                                    </DataListCell>,\n                                    <DataListCell key={ count++ }>\n\n                                        { windowWidth <= mobileBreakpoint &&\n                                            <span style={ { color: 'initial', fontWeight: 'bold' } }>Status:</span>\n                                        }\n                                            &nbsp;\n                                        <JobStatus status={ item.status } />\n                                    </DataListCell>,\n                                    <Tooltip key={ count++ } content={ <p>{ item.cluster_name }</p> }>\n                                        <DataListCell>\n                                            { windowWidth <= mobileBreakpoint &&\n                                            <span style={ { color: 'initial', fontWeight: 'bold' } }>Cluster:</span>\n                                            }\n                                            &nbsp;\n                                            { item.cluster_name }\n                                        </DataListCell>\n                                    </Tooltip>,\n                                    <DataListCell key={ count++ }>\n                                        { windowWidth <= mobileBreakpoint &&\n                                         <span style={ { color: 'initial', fontWeight: 'bold' } }>Organization:</span>\n                                        }\n                                        &nbsp;\n                                        { item.org_name }\n                                    </DataListCell>,\n                                    <DataListCell key={ count++ }>\n                                        { windowWidth <= mobileBreakpoint &&\n                                         <span style={ { color: 'initial', fontWeight: 'bold' } }>Type:</span>\n                                        }\n                                         &nbsp;\n                                        { formatJobType(item.job_type) }\n                                    </DataListCell>\n                                ] }\n                            />\n                        </DataListItemRow>\n                        <DataListContent\n                            aria-label={ `${item.id.id}-details` }\n                            id={ '${item.id.id}' }\n                            isHidden={ !isExpanded.includes(`${item.id.id}-toggle`) }\n                        >\n                            <DataListItemCells\n                                dataListCells={ [\n                                    <DataListCell key={ count++ }>\n                                        Created: { formatDateTime(item.created) }\n                                    </DataListCell>,\n                                    <DataListCell key={ count++ }>\n                                        Started: { formatDateTime(item.started) }\n                                    </DataListCell>,\n                                    <DataListCell key={ count++ }>\n                                        Finished: { formatDateTime(item.finished) }\n                                    </DataListCell>\n                                ] }\n                            />\n                        </DataListContent>\n                    </DataListItem>\n                );\n            }) }\n        </>\n    );\n};\n\nconst AllJobsTemplate = ({ jobs }) => {\n    const [ windowWidth, setWindowWidth ] = useState(window.innerWidth);\n\n    const onResize = () => setWindowWidth(window.innerWidth);\n\n    useEffect(() => {\n        window.addEventListener('resize', onResize);\n        return () => window.removeEventListener('resize', onResize);\n    }, []);\n\n    return buildListRow(jobs, 'All jobs view', 'all-jobs', windowWidth);\n};\n\nconst JobExplorerList = ({ jobs }) => {\n    const [ windowWidth, setWindowWidth ] = useState(window.innerWidth);\n\n    const onResize = () => setWindowWidth(window.innerWidth);\n\n    useEffect(() => {\n        window.addEventListener('resize', onResize);\n        return () => window.removeEventListener('resize', onResize);\n    }, []);\n\n    return (\n        <>\n            {jobs.length <= 0 && <LoadingState />}\n            <DataList isCompact>\n                { windowWidth >= mobileBreakpoint && buildHeader(headerLabels) }\n                <AllJobsTemplate jobs={ jobs } windowWidth={ windowWidth }/>\n            </DataList>\n        </>\n    );\n};\n\nJobExplorerList.propTypes = {\n    jobs: PropTypes.array,\n    windowWidth: PropTypes.number\n};\n\nAllJobsTemplate.propTypes = {\n    jobs: PropTypes.array,\n    windowWidth: PropTypes.number\n};\n\nexport default JobExplorerList;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { parse, stringify } from 'query-string';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { Paths } from '../../paths';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoResults from '../../Components/NoResults';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport {\n    preflightRequest,\n    readJobExplorer,\n    readJobExplorerOptions\n} from '../../Api';\nimport { jobExplorer } from '../../Utilities/constants';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    Pagination,\n    PaginationVariant\n} from '@patternfly/react-core';\n\nimport JobExplorerList from '../../Components/JobExplorerList';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\nconst perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '15', value: 15 },\n    { title: '20', value: 20 },\n    { title: '25', value: 25 }\n];\n\nconst initialQueryParams = {\n    ...jobExplorer.defaultParams,\n    attributes: jobExplorer.attributes\n};\n\nconst optionsMapper = options => {\n    const { groupBy, attributes, ...rest } = options;\n    return rest;\n};\n\nconst JobExplorer = ({\n    location: { search },\n    history\n}) => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [{\n        isLoading,\n        isSuccess,\n        error,\n        data: { meta = {}, items: data = []}\n    }, setData ] = useApi({ meta: {}, items: []});\n    const [ currPage, setCurrPage ] = useState(1);\n    const [ options, setOptions ] = useApi({}, optionsMapper);\n\n    let initialSearchParams = parse(search, { arrayFormat: 'bracket', parseBooleans: true });\n    let combined = { ...initialQueryParams, ...initialSearchParams };\n    const {\n        queryParams,\n        setLimit,\n        setOffset,\n        setFromToolbar\n    } = useQueryParams(combined);\n\n    const updateURL = () => {\n        const { jobExplorer } = Paths;\n        const search = stringify(queryParams, { arrayFormat: 'bracket' });\n        history.replace({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    useEffect(() => {\n        insights.chrome.appNavClick({ id: 'job-explorer', secondaryNav: true });\n\n        window.insights.chrome.auth.getUser()\n        .then(() =>\n            preflightRequest()\n            .catch((error) => { setPreFlightError({ preflightError: error }); })\n            // Loading is set false when the data also loaded\n        );\n    }, []);\n\n    useEffect(() => {\n        setData(readJobExplorer({ params: queryParams }),);\n        setOptions(readJobExplorerOptions({ params: queryParams }));\n        updateURL();\n    }, [ queryParams ]);\n\n    const returnOffsetVal = page => (page - 1) * queryParams.limit;\n\n    const handleSetPage = page => {\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    const handlePerPageSelect = (perPage, page) => {\n        setLimit(perPage);\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={ 'Job Explorer' } />\n            </PageHeader>\n\n            { preflightError && (\n                <Main>\n                    <EmptyState { ...preflightError } />\n                </Main>\n            ) }\n\n            { !preflightError && (\n                <Main>\n                    <Card>\n                        <CardBody>\n                            <FilterableToolbar\n                                categories={ options.data }\n                                filters={ queryParams }\n                                setFilters={ setFromToolbar }\n                                pagination={\n                                    <Pagination\n                                        itemCount={ meta && meta.count ? meta.count : 0 }\n                                        widgetId=\"pagination-options-menu-top\"\n                                        perPageOptions={ perPageOptions }\n                                        perPage={ queryParams.limit }\n                                        page={ currPage }\n                                        variant={ PaginationVariant.top }\n                                        onPerPageSelect={ (_event, perPage, page) => {\n                                            handlePerPageSelect(perPage, page);\n                                        } }\n                                        onSetPage={ (_event, pageNumber) => {\n                                            handleSetPage(pageNumber);\n                                        } }\n                                        isCompact\n                                    />\n                                }\n                                hasSettings\n                            />\n                            { error && <ApiErrorState message={ error.error } /> }\n                            { isLoading && <LoadingState /> }\n                            { isSuccess && data.length <= 0 && <NoResults /> }\n                            { isSuccess && data.length > 0 && <JobExplorerList jobs={ data } /> }\n                            <Pagination\n                                itemCount={ meta && meta.count ? meta.count : 0 }\n                                widgetId=\"pagination-options-menu-bottom\"\n                                perPageOptions={ perPageOptions }\n                                perPage={ queryParams.limit }\n                                page={ currPage }\n                                variant={ PaginationVariant.bottom }\n                                onPerPageSelect={ (_event, perPage, page) => {\n                                    handlePerPageSelect(perPage, page);\n                                } }\n                                onSetPage={ (_event, pageNumber) => {\n                                    handleSetPage(pageNumber);\n                                } }\n                                style={ { marginTop: '20px' } }\n                            />\n                        </CardBody>\n                    </Card>\n                </Main>\n            ) }\n        </React.Fragment>\n    );\n};\n\nJobExplorer.propTypes = {\n    location: PropTypes.object,\n    history: PropTypes.object\n};\n\nexport default JobExplorer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nimport {\n    NotificationDrawerList as PFNotificationDrawerList,\n    NotificationDrawerListItem as PFNotificationDrawerListItem,\n    NotificationDrawerListItemBody,\n    NotificationDrawerListItemHeader\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkAltIcon } from '@patternfly/react-icons';\nimport LoadingState from '../Components/LoadingState';\nimport { capitalize } from '../Utilities/helpers';\n\nconst ExternalLinkAltIcon = styled(PFExternalLinkAltIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n  font-size: 14px;\n`;\n\nconst NotificationDrawerListItem = styled(PFNotificationDrawerListItem)`\n  border-top: 1px solid var(--pf-global--BorderColor--light-100\n    );\n  border-bottom::nth-child(odd): 1px solid var(--pf-global--BorderColor--light-100\n    );\n  box-shadow: none;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst NotificationDrawerList = styled(PFNotificationDrawerList)`\n    &:last-child {\n      border-bottom: 1px solid var(--pf-global--BorderColor--light-100\n        );\n    }\n`;\n\nconst stringifyDate = (date) => {\n    const day = moment(date);\n    const oneHour = 60 * 60 * 1000;\n    const now = moment().utc();\n\n    if (now.isAfter(day)) {\n        return `${now.diff(day, 'days')} day(s) ago.`;\n    }\n\n    if (day.isSame(now, 'day')) {\n        if (day.valueOf() > oneHour) {\n            return  `${day.diff(now, 'hours') } hour(s) ago.`;\n        }\n\n        return `${now.diff(day, 'minutes')} minute(s) ago.`;\n    }\n};\n\nconst AllNotificationTemplate = ({ notifications }) =>\n    notifications.map(\n        ({ date, message, label, notification_id: id, tower_url: url }) => {\n            if (label === '' || label === 'notice') {\n                return (\n                    <NotificationDrawerListItem\n                        variant=\"info\"\n                        key={ date + '-' + id }\n                    >\n                        <NotificationDrawerListItemHeader\n                            variant=\"info\"\n                            title={\n                            <>\n                              { url ? (\n                                  <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                                      { capitalize(label) }\n                                      <ExternalLinkAltIcon />\n                                  </a>\n                              ) : capitalize(label) }\n                            </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody>\n                            { message }{ ' ' }\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n\n            if (label === 'error') {\n                return (\n                    <NotificationDrawerListItem\n                        variant=\"danger\"\n                        key={ date + '-' + id }\n                    >\n                        <NotificationDrawerListItemHeader\n                            variant=\"danger\"\n                            title={\n                            <>\n                              { url ? (\n                                  <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                                      { capitalize(label) }\n                                      <ExternalLinkAltIcon />\n                                  </a>\n                              ) : capitalize(label) }\n                            </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody timestamp={ stringifyDate(date) }>\n                            { message }{ ' ' }\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n\n            if (label === 'warning') {\n                return (\n                    <NotificationDrawerListItem\n                        variant=\"warning\"\n                        key={ date + '-' + id }\n                    >\n                        <NotificationDrawerListItemHeader\n                            variant=\"warning\"\n                            title={\n                            <>\n                              { url ? (\n                                  <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                                      { capitalize(label) }\n                                      <ExternalLinkAltIcon />\n                                  </a>\n                              ) : capitalize(label) }\n                            </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody timestamp={ stringifyDate(date) }>\n                            { message }{ ' ' }\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n        }\n    );\n\nconst ErrorNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'error')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem\n            variant=\"danger\"\n            key={ date + '-' + id }\n        >\n            <NotificationDrawerListItemHeader\n                variant=\"danger\"\n                title={\n                <>\n                  { url ? (\n                      <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                          { capitalize(label) }\n                          <ExternalLinkAltIcon />\n                      </a>\n                  ) : capitalize(label) }\n                </>\n                }\n            >\n            </NotificationDrawerListItemHeader>\n            <NotificationDrawerListItemBody timestamp={ stringifyDate(date) }>\n                { message }{ ' ' }\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst NoticeNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'notice')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem\n            variant=\"info\"\n            key={ date + '-' + id }\n        >\n            <NotificationDrawerListItemHeader\n                variant=\"info\"\n                title={\n                <>\n                  { url ? (\n                      <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                          { capitalize(label) }\n                          <ExternalLinkAltIcon />\n                      </a>\n                  ) : capitalize(label) }\n                </>\n                }\n            >\n            </NotificationDrawerListItemHeader>\n            <NotificationDrawerListItemBody  timestamp={ stringifyDate(date) }>\n                { message }{ ' ' }\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst WarningNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'warning')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem\n            variant=\"warning\"\n            key={ date + '-' + id }\n        >\n            <NotificationDrawerListItemHeader\n                variant=\"warning\"\n                title={\n                <>\n                  { url ? (\n                      <a target=\"_blank\" rel=\"noopener noreferrer\" href={ url }>\n                          { capitalize(label) }\n                          <ExternalLinkAltIcon />\n                      </a>\n                  ) : capitalize(label) }\n                </>\n                }\n            >\n            </NotificationDrawerListItemHeader>\n            <NotificationDrawerListItemBody  timestamp={ stringifyDate(date) }>\n                { message }{ ' ' }\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst NotificationsList = ({ filterBy, notifications }) => (\n  <>\n    <NotificationDrawerList>\n        { notifications.length <= 0 && <LoadingState /> }\n        { filterBy === '' && (\n            <AllNotificationTemplate notifications={ notifications } />\n        ) }\n        { filterBy === 'notice' && (\n            <NoticeNotificationTemplate notifications={ notifications } />\n        ) }\n        { filterBy === 'error' && (\n            <ErrorNotificationTemplate notifications={ notifications } />\n        ) }\n        { filterBy === 'warning' && (\n            <WarningNotificationTemplate notifications={ notifications } />\n        ) }\n    </NotificationDrawerList>\n  </>\n);\n\nAllNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nErrorNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nWarningNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nNotificationsList.propTypes = {\n    notifications: PropTypes.array,\n    filterBy: PropTypes.string\n};\n\nexport default NotificationsList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoData from '../../Components/NoData';\nimport { preflightRequest, readClusters, readNotifications } from '../../Api';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle,\n    FormSelect,\n    FormSelectOption,\n    Pagination,\n    PaginationVariant,\n    NotificationDrawer\n} from '@patternfly/react-core';\n\nimport NotificationsList from '../../Components/NotificationsList';\n\nconst CardTitle = styled(PFCardTitle)`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n`;\n\nconst DropdownGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-end;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n\n  select {\n    margin: 0 10px;\n    width: 150px;\n\n    @media screen and (max-width: 1035px) {\n      margin: 10px 10px 0 0;\n    }\n\n    @media screen and (max-width: 865px) {\n      width: 100%;\n    }\n  }\n`;\n\nconst notificationOptions = [\n    {\n        value: 'please choose',\n        label: 'Select Notification Severity',\n        disabled: true\n    },\n    { value: 'error', label: 'View Critical', disabled: false },\n    { value: 'warning', label: 'View Warning', disabled: false },\n    { value: 'notice', label: 'View Notice', disabled: false },\n    { value: '', label: 'View All', disabled: false }\n];\n\nconst perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 }\n];\n\nfunction formatClusterName(data) {\n    const defaultClusterOptions = [\n        { value: 'please choose', label: 'Select cluster', disabled: true },\n        { value: '', label: 'All Clusters', disabled: false },\n        { value: -1, label: 'Unassociated', disabled: false }\n    ];\n    return data.reduce(\n        (formatted, { label, cluster_id: id, install_uuid: uuid }) => {\n            if (label.length === 0) {\n                formatted.push({ value: id, label: uuid, disabled: false });\n            } else {\n                formatted.push({ value: id, label, disabled: false });\n            }\n\n            return formatted;\n        },\n        defaultClusterOptions\n    );\n}\n\nconst initialQueryParams = {\n    limit: 5,\n    offset: 0\n};\n\nconst Notifications = () => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [ notificationsData, setNotificationsData ] = useState([]);\n    const [ clusterOptions, setClusterOptions ] = useState([]);\n    const [ selectedCluster, setSelectedCluster ] = useState('');\n    const [ firstRender, setFirstRender ] = useState(true);\n    const [ isLoading, setIsLoading ] = useState(true);\n    const [ meta, setMeta ] = useState({});\n    const [ currPage, setCurrPage ] = useState(1);\n    const {\n        queryParams,\n        setId,\n        setLimit,\n        setOffset,\n        setSeverity\n    } = useQueryParams(initialQueryParams);\n\n    useEffect(() => {\n        if (firstRender) {\n            return;\n        }\n\n        const getData = () => {\n            return readNotifications({ params: queryParams });\n        };\n\n        const update = async () => {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            getData().then(\n                ({ notifications: notificationsData = [], meta }) => {\n                    setNotificationsData(notificationsData);\n                    setMeta(meta);\n                    setIsLoading(false);\n                }\n            );\n        };\n\n        update();\n    }, [ queryParams ]);\n\n    useEffect(() => {\n        insights.chrome.appNavClick({ id: 'notifications', secondaryNav: true });\n\n        let ignore = false;\n        const fetchEndpoints = () => {\n            return Promise.all(\n                [ readClusters(), readNotifications({ params: queryParams }) ].map(p =>\n                    p.catch(() => [])\n                )\n            );\n        };\n\n        async function initializeWithPreflight() {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            await preflightRequest().catch(error => {\n                setPreFlightError({ preflightError: error });\n            });\n            fetchEndpoints().then(\n                ([\n                    { templates: clustersData = []},\n                    { notifications: notificationsData = [], meta }\n                ]) => {\n                    if (!ignore) {\n                        const clusterOptions = formatClusterName(clustersData);\n                        setClusterOptions(clusterOptions);\n                        setNotificationsData(notificationsData);\n                        setMeta(meta);\n                        setFirstRender(false);\n                        setIsLoading(false);\n                    }\n                }\n            );\n        }\n\n        initializeWithPreflight();\n        return () => (ignore = true);\n    }, []);\n\n    const returnOffsetVal = page => {\n        let offsetVal = (page - 1) * queryParams.limit;\n        return offsetVal;\n    };\n\n    const handleSetPage = page => {\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    const handlePerPageSelect = (perPage, page) => {\n        setLimit(perPage);\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={ 'Notifications' } />\n            </PageHeader>\n            { preflightError && (\n                <Main>\n                    <EmptyState { ...preflightError } />\n                </Main>\n            ) }\n            { !preflightError && (\n        <>\n          <Main>\n              <Card>\n                  <CardTitle>\n                      <DropdownGroup>\n                          <FormSelect\n                              name=\"selectedCluster\"\n                              value={ selectedCluster }\n                              onChange={ value => {\n                                  setSelectedCluster(value);\n                                  setId(value);\n                                  setOffset(0);\n                                  setCurrPage(1);\n                              } }\n                              aria-label=\"Select Cluster\"\n                          >\n                              { clusterOptions.map(({ value, label, disabled }, index) => (\n                                  <FormSelectOption\n                                      isDisabled={ disabled }\n                                      key={ index }\n                                      value={ value }\n                                      label={ label }\n                                  />\n                              )) }\n                          </FormSelect>\n                          <FormSelect\n                              name=\"selectedNotification\"\n                              value={ queryParams.severity || '' }\n                              onChange={ value => {\n                                  setSeverity(value);\n                                  setOffset(0);\n                                  setCurrPage(1);\n                              } }\n                              aria-label=\"Select Notification Type\"\n                          >\n                              { notificationOptions.map(\n                                  ({ disabled, value, label }, index) => (\n                                      <FormSelectOption\n                                          isDisabled={ disabled }\n                                          key={ index }\n                                          value={ value }\n                                          label={ label }\n                                      />\n                                  )\n                              ) }\n                          </FormSelect>\n                      </DropdownGroup>\n                      <Pagination\n                          itemCount={ meta && meta.count ? meta.count : 0 }\n                          widgetId=\"pagination-options-menu-top\"\n                          perPageOptions={ perPageOptions }\n                          perPage={ queryParams.limit }\n                          page={ currPage }\n                          variant={ PaginationVariant.top }\n                          onPerPageSelect={ (_event, perPage, page) => {\n                              handlePerPageSelect(perPage, page);\n                          } }\n                          onSetPage={ (_event, pageNumber) => {\n                              handleSetPage(pageNumber);\n                          } }\n                          isCompact\n                      />\n                  </CardTitle>\n                  <CardBody>\n                      { isLoading && <LoadingState /> }\n                      { !isLoading && notificationsData.length <= 0 && <NoData /> }\n                      { !isLoading && notificationsData.length > 0 && (\n                          <NotificationDrawer>\n                              <NotificationsList\n                                  filterBy={ queryParams.severity || '' }\n                                  options={ notificationOptions }\n                                  notifications={ notificationsData }\n                              />\n                          </NotificationDrawer>\n                      ) }\n                      <Pagination\n                          itemCount={ meta && meta.count ? meta.count : 0 }\n                          widgetId=\"pagination-options-menu-bottom\"\n                          perPageOptions={ perPageOptions }\n                          perPage={ queryParams.limit }\n                          page={ currPage }\n                          variant={ PaginationVariant.bottom }\n                          onPerPageSelect={ (_event, perPage, page) => {\n                              handlePerPageSelect(perPage, page);\n                          } }\n                          onSetPage={ (_event, pageNumber) => {\n                              handleSetPage(pageNumber);\n                          } }\n                          style={ { marginTop: '20px' } }\n                      />\n                  </CardBody>\n              </Card>\n          </Main>\n        </>\n            ) }\n        </React.Fragment>\n    );\n};\n\nexport default Notifications;\n","import moment from 'moment';\n\n/*\n * isNumeric - return true if input is a real number\n */\nexport function isNumeric(val) {\n    if (val === 0 || val === '0') {\n        return true;\n    }\n\n    if (parseInt(val)) {\n        return true;\n    }\n\n    if (parseFloat(val)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function trimStr(str) {\n    return str.toString().replace(/['\"]+/g, '');\n}\n\nexport function formatDateTime(dateTime) {\n    return moment(new Date(dateTime).toISOString()).format('M/D/YYYY h:mm:ssa');\n}\n\nexport function formatDate(date) {\n    return moment(date).format('YYYY-MM-DD');\n}\n\nexport function formatSeconds(seconds) {\n    return moment().startOf('day')\n    .seconds(seconds)\n    .format('H:mm:ss');\n}\n\nexport function getTotal(data) {\n    if (!data) {\n        return;\n    } else {\n        let total = 0;\n        data.forEach(datum => {\n            total += parseInt(datum.count);\n        });\n        return total;\n    }\n}\n\nexport function formatPercentage(val) {\n    if (isNaN(val)) {\n        return;\n    }\n\n    return `${val}%`;\n}\n\nexport const capitalize = (s) => {\n    if (typeof s !== 'string') {return '';}\n\n    return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport function calculateDelta(a, b) {\n    if (!isNumeric(a) || !isNumeric(b)) {\n        return 0;\n    }\n\n    // never return less than zero ...\n    if ((b - a) < 0) {\n        return 0;\n    }\n\n    return b - a;\n}\n\nexport function convertMinsToMs(mins) {\n    if (!parseInt(mins)) {\n        return 0;\n    }\n\n    return mins * 60000;\n}\n\nexport function convertMsToMins(ms) {\n    if (!parseInt(ms)) {\n        return 0;\n    }\n\n    return ms / 60000;\n}\n\nexport function convertSecondsToMins(seconds) {\n    if (!parseInt(seconds)) {\n        return 0;\n    }\n\n    return seconds / 60;\n}\n\nexport function convertMinsToSeconds(mins) {\n    if (!parseInt(mins) || parseInt(mins) < 0) {\n        return 0;\n    }\n\n    return +parseInt(mins) * 60;\n}\n\nexport function convertSecondsToHours(seconds) {\n    if (!parseInt(seconds)) {\n        return 0;\n    }\n\n    return seconds / 3600;\n}\n\nexport function convertWithCommas(arr, key) {\n    const split = arr.reduce((strs, datum) => { strs.push(datum[key]); return strs; }, []);\n    return split.join(', ');\n}\n\nexport function formatJobType(type) {\n    return (type === 'job' ? 'Playbook run' : 'Workflow job');\n}\n\nexport function formatJobStatus(status) {\n    return (status === 'successful' ? 'Success' : 'Failed');\n}\n\nexport function formatJobDetailsURL(baseURL, jobId) {\n    const subDirectory1 = 'job';\n    const subDirectory2 = 'details';\n    return `${baseURL}/#/${subDirectory1}/${jobId}/${subDirectory2}/`;\n}\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst DefaultLoadingState = () => (\n    <EmptyState variant={ EmptyStateVariant.full }>\n        <EmptyStateIcon icon={ CubesIcon } />\n        <Title headingLevel=\"h5\" size=\"lg\">\n            Loading...\n        </Title>\n        <EmptyStateBody>\n            Please wait.\n        </EmptyStateBody>\n    </EmptyState>\n);\n\nexport default DefaultLoadingState;\n","import { stringify } from 'query-string';\n\nconst apiVersion = 'v0';\nconst barChartEndpoint = `/api/tower-analytics/${apiVersion}/chart30/`;\nconst clustersEndpoint = `/api/tower-analytics/${apiVersion}/clusters/`;\nconst groupedBarChartEndpoint = `/api/tower-analytics/${apiVersion}/jobs_by_date_and_org_30/`;\nconst modulesEndpoint = `/api/tower-analytics/${apiVersion}/modules/`;\nconst notificationsEndPoint = `/api/tower-analytics/${apiVersion}/notifications/`;\nconst pieChart1Endpoint = `/api/tower-analytics/${apiVersion}/job_runs_by_org_30/`;\nconst pieChart2Endpoint = `/api/tower-analytics/${apiVersion}/job_events_by_org_30/`;\nconst preflightEndpoint = `/api/tower-analytics/${apiVersion}/authorized/`;\nconst templateJobsEndpoint = `/api/tower-analytics/${apiVersion}/template_jobs/`;\nconst templatesEndPoint = `/api/tower-analytics/${apiVersion}/templates/`;\nconst jobExplorerEndpoint = '/api/tower-analytics/v1/job_explorer/';\nconst jobExplorerOptionsEndpoint = '/api/tower-analytics/v1/job_explorer_options/';\nconst ROIEndpoint = '/api/tower-analytics/v1/roi_templates/';\nconst ROITemplatesOptionsEndpoint = '/api/tower-analytics/v1/roi_templates_options/';\n\nfunction getAbsoluteUrl() {\n    const url = window.location.href;\n    let arr = url.split('/');\n    arr.pop();\n    return arr.join('/');\n}\n\nfunction handleResponse(response) {\n    return response.json().then(json => {\n        if (response.ok) {\n            return json;\n        }\n\n        if (response.status === 404 || response.status === 401) {\n            return Promise.reject({\n                status: response.status,\n                message: json\n            });\n        } else {\n            return Promise.reject(json);\n        }\n    });\n}\n\nexport const readTemplateJobs = (id, { params = {}}) => {\n    if (!id) {\n        return;\n    }\n\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(templateJobsEndpoint + id + '/', formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const preflightRequest = () => {\n    return fetch(preflightEndpoint).then(handleResponse);\n};\n\nexport const readClusters = () => {\n    return fetch(clustersEndpoint).then(handleResponse);\n};\n\nexport const readChart30 = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(barChartEndpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readJobsByDateAndOrg = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(groupedBarChartEndpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readModules = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(modulesEndpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readTemplates = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(templatesEndPoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readNotifications = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(notificationsEndPoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readJobExplorerOptions = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(jobExplorerOptionsEndpoint, formattedUrl);\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readJobExplorer = ({ params = {}}) => {\n    const { limit, offset, sort_by } = params;\n    const paginationParams = {\n        limit,\n        offset,\n        sort_by\n    };\n    const qs = stringify(paginationParams);\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(jobExplorerEndpoint, formattedUrl);\n    url.search = qs;\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readJobRunsByOrg = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(pieChart1Endpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readJobEventsByOrg = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(pieChart2Endpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readROI = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(ROIEndpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readROIOptions = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(ROITemplatesOptionsEndpoint, formattedUrl);\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n","import { useReducer } from 'react';\nimport moment from 'moment';\n\nimport { formatDate } from '../Utilities/helpers';\n\nexport const useQueryParams = initial => {\n    const paramsReducer = (state, { type, value }) => {\n        switch (type) {\n            /* v0 api reducers */\n            case 'SET_STARTDATE':\n                return { ...state, startDate: value };\n            case 'SET_ENDDATE':\n                return { ...state, endDate: value };\n            case 'SET_ID':\n                if (!parseInt(value)) {\n                    const { id: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, id: parseInt(value) };\n            case 'SET_LIMIT':\n                if (!parseInt(value.limit)) {\n                    const { limit: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, limit: parseInt(value.limit) };\n            /* v1 api reducers */\n            case 'SET_OFFSET':\n            case 'SET_ATTRIBUTES':\n            case 'SET_JOB_TYPE':\n            case 'SET_STATUS':\n            case 'SET_ORG':\n            case 'SET_CLUSTER':\n            case 'SET_TEMPLATE':\n            case 'SET_SORTBY':\n            case 'SET_ROOT_WORKFLOWS_AND_JOBS':\n                return { ...state, ...value };\n            case 'SET_QUICK_DATE_RANGE': {\n                let newState = { ...state };\n                if (value !== 'custom') {\n                    newState = { ...newState, start_date: null, end_date: null };\n                }\n\n                newState = { ...newState, ...value };\n                return newState;\n            }\n\n            case 'SET_SEVERITY':\n                if (value.severity === '') {\n                    const { severity: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, ...value };\n            case 'SET_START_DATE':\n            case 'SET_END_DATE': {\n                let newValues = {};\n                Object.entries(value).forEach(([ key, value ]) => {\n                    newValues[key] = formatDate(value);\n                });\n                return { ...state, ...newValues };\n            }\n\n            case 'RESET_FILTER':\n                return { ...state,\n                    status: [],\n                    quick_date_range: '',\n                    job_type: [],\n                    org_id: [],\n                    cluster_id: [],\n                    template_id: [],\n                    sort_by: '',\n                    start_date: '',\n                    end_date: '',\n                    only_root_workflows_and_standalone_jobs: false\n                };\n            default:\n                throw new Error();\n        }\n    };\n\n    const [ queryParams, dispatch ] = useReducer(paramsReducer, { ...initial });\n\n    const actionMapper = {\n        status: 'SET_STATUS',\n        quick_date_range: 'SET_QUICK_DATE_RANGE',\n        job_type: 'SET_JOB_TYPE',\n        org_id: 'SET_ORG',\n        cluster_id: 'SET_CLUSTER',\n        template_id: 'SET_TEMPLATE',\n        sort_by: 'SET_SORTBY',\n        start_date: 'SET_START_DATE',\n        end_date: 'SET_END_DATE',\n        only_root_workflows_and_standalone_jobs: 'SET_ROOT_WORKFLOWS_AND_JOBS'\n    };\n\n    return {\n        queryParams,\n        dispatch,\n        setLimit: limit => dispatch({ type: 'SET_LIMIT', value: { limit }}),\n        setOffset: offset => dispatch({ type: 'SET_OFFSET', value: { offset }}),\n        setSeverity: severity => dispatch({ type: 'SET_SEVERITY', value: { severity }}),\n        setFromToolbar: (varName, value = null) => {\n            if (!varName) {\n                dispatch({ type: 'RESET_FILTER' });\n            } else {\n                dispatch({ type: actionMapper[varName], value: { [varName]: value }});\n            }\n        },\n        /* v0 api usage after this line */\n        setEndDate: () => {\n            const endDate = moment().format('YYYY-MM-DD');\n            dispatch({ type: 'SET_ENDDATE', value: endDate });\n        },\n        setId: value => dispatch({ type: 'SET_ID', value }),\n        setStartDate: days => {\n            let startDate;\n            if (days === 7) {\n                startDate = moment()\n                .subtract(1, 'week')\n                .format('YYYY-MM-DD');\n            }\n\n            if (days === 14) {\n                startDate = moment()\n                .subtract(2, 'weeks')\n                .format('YYYY-MM-DD');\n            }\n\n            if (days === 31) {\n                startDate = moment()\n                .subtract(1, 'month')\n                .format('YYYY-MM-DD');\n            } else {\n                startDate = moment()\n                .subtract(days, 'days')\n                .format('YYYY-MM-DD');\n            }\n\n            dispatch({ type: 'SET_STARTDATE', value: startDate });\n        },\n        setStartDateAsString: value => dispatch({ type: 'SET_STARTDATE', value })\n    };\n};\n"],"sourceRoot":""}