{"version":3,"sources":["webpack:///./src/Api.js","webpack:///./src/Utilities/useQueryParams.js","webpack:///./src/Components/EmptyState.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Utilities/useApi.js","webpack:///./src/Charts/BaseChart.js","webpack:///./src/Components/NoData.js","webpack:///./src/Components/ApiErrorState.js","webpack:///./src/Components/Toolbar/CategoryDropdown.js","webpack:///./src/Components/Toolbar/CustomDateSelector.js","webpack:///./src/Components/Toolbar/constants.js","webpack:///./src/Components/Toolbar/ToolbarFilterItem.js","webpack:///./src/Components/Toolbar/helpers.js","webpack:///./src/Components/Toolbar/Toolbar.js","webpack:///./src/Components/Toolbar/index.js","webpack:///./src/Utilities/useRedirect.js","webpack:///./node_modules/moment/locale sync ^\\.\\/.*$","webpack:///./src/Utilities/Legend.js","webpack:///./src/Charts/GroupedBarChart/GroupedBarChart.js","webpack:///./src/Charts/GroupedBarChart/OrgsTooltip.js","webpack:///./src/Charts/GroupedBarChart/HostsTooltip.js","webpack:///./src/Charts/PieChart.js","webpack:///./src/Containers/OrganizationStatistics/OrganizationStatistics.js","webpack:///./src/Utilities/colors.ts","webpack:///./src/Utilities/Tooltip.js","webpack:///./src/Charts/BarChart.js","webpack:///./src/Charts/LineChart.js","webpack:///./src/Components/ModulesList.js","webpack:///./src/Components/ModalContents.js","webpack:///./src/Components/TemplatesList.js","webpack:///./src/Containers/Clusters/Clusters.js","webpack:///./src/Charts/ROITopTemplates.js","webpack:///./src/Containers/AutomationCalculator/helpers.js","webpack:///./src/Containers/AutomationCalculator/TotalSavings.js","webpack:///./src/Containers/AutomationCalculator/CalculationCost.js","webpack:///./src/Containers/AutomationCalculator/AutomationFormula.js","webpack:///./src/Containers/AutomationCalculator/TopTemplates.js","webpack:///./src/Containers/AutomationCalculator/AutomationCalculator.js","webpack:///./src/Components/NoResults.js","webpack:///./src/Components/JobStatus.js","webpack:///./src/Components/JobExplorerList.js","webpack:///./src/Containers/JobExplorer/JobExplorer.js","webpack:///./src/Components/NotificationsList.js","webpack:///./src/Containers/Notifications/Notifications.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Components/LoadingState.js"],"names":["jobExplorerEndpoint","getAbsoluteUrl","arr","window","location","href","split","pop","join","handleResponse","response","json","then","ok","status","Promise","reject","message","preflightRequest","fetch","readOrgOptions","_ref","_ref$params","params","url","URL","method","body","JSON","stringify","readHostAcrossOrg","_ref2","_ref2$params","combined","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_0___default","attributes","group_by_time","group_by","sort_by","concat","search","Object","query_string__WEBPACK_IMPORTED_MODULE_1__","limit","readJobsByDateAndOrg","_ref3","_ref3$params","readJobRunsByOrg","_ref4","_ref4$params","include_others","readJobEventsByOrg","_ref5","_ref5$params","granularity","readClusters","readNotifications","_ref6","_ref6$params","formattedUrl","keys","forEach","key","searchParams","append","readJobExplorerOptions","_ref7","_ref7$params","readClustersOptions","_ref8","_ref8$params","readJobExplorer","_ref9","_ref9$params","paginationParams","offset","qs","readEventExplorer","_ref10","_ref10$params","readROI","_ref12","_ref12$params","readROIOptions","_ref13","_ref13$params","useQueryParams","initial","_useReducer","react__WEBPACK_IMPORTED_MODULE_4__","state","type","value","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_3___default","startDate","endDate","parseInt","id","_babel_runtime_helpers_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2___default","severity","newState","start_date","end_date","newValues","entries","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_1___default","_Utilities_helpers__WEBPACK_IMPORTED_MODULE_6__","Error","_useReducer2","queryParams","dispatch","actionMapper","quick_date_range","job_type","org_id","cluster_id","template_id","only_root_workflows_and_standalone_jobs","setLimit","setOffset","setFromToolbar","varName","arguments","length","undefined","_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default","setSeverity","setEndDate","moment__WEBPACK_IMPORTED_MODULE_5___default","format","setId","setStartDate","days","subtract","setStartDateAsString","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_patternfly_react_core_dist_js_components_Button_Button_js__WEBPACK_IMPORTED_MODULE_2__","_patternfly_react_core_dist_js_components_Title_Title_js__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_core_dist_js_components_EmptyState_EmptyState_js__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateIcon_js__WEBPACK_IMPORTED_MODULE_5__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateBody_js__WEBPACK_IMPORTED_MODULE_6__","_patternfly_react_icons_dist_js_icons_wrench_icon__WEBPACK_IMPORTED_MODULE_7__","_patternfly_react_icons_dist_js_icons_wrench_icon__WEBPACK_IMPORTED_MODULE_7___default","DefaultEmptyState","error","preflightError","a","createElement","variant","full","icon","Fragment","headingLevel","size","target","rel","onClick","reload","propTypes","object","__webpack_exports__","d","jobExplorer","roi","organizationStatistics","clusters","defaultParams","dataFetchReducer","action","_babel_runtime_helpers_objectSpread__WEBPACK_IMPORTED_MODULE_1___default","isLoading","isSuccess","data","payload","initialData","postprocess","_useState","react__WEBPACK_IMPORTED_MODULE_2__","_useState2","_babel_runtime_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_0___default","request","setRequest","didCancel","insights","chrome","auth","getUser","catch","e","initializeChart","Chart","BaseChart","props","margin","react__WEBPACK_IMPORTED_MODULE_1___default","_babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_0___default","getWidth","d3__WEBPACK_IMPORTED_MODULE_3__","style","left","right","getHeight","top","bottom","prop_types__WEBPACK_IMPORTED_MODULE_2___default","string","element","_patternfly_react_core_dist_js_components_Title_Title_js__WEBPACK_IMPORTED_MODULE_1__","_patternfly_react_core_dist_js_components_EmptyState_EmptyState_js__WEBPACK_IMPORTED_MODULE_2__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateIcon_js__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_4___default","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateBody_js__WEBPACK_IMPORTED_MODULE_3__","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateIcon_js__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_core_dist_js_components_Title_Title_js__WEBPACK_IMPORTED_MODULE_5__","_patternfly_react_icons_dist_js_icons_exclamation_circle_icon__WEBPACK_IMPORTED_MODULE_6__","_patternfly_react_icons_dist_js_icons_exclamation_circle_icon__WEBPACK_IMPORTED_MODULE_6___default","_patternfly_react_tokens__WEBPACK_IMPORTED_MODULE_7__","ApiErrorState","small","color","CategoryDropdown_CategoryDropdown","selected","_ref$setSelected","setSelected","_ref$categories","categories","react","slicedToArray_default","isExpanded","setIsExpanded","react_default","ToolbarItem","Select","isOpen","aria-label","onToggle","onSelect","_event","selection","selections","placeholderText","map","name","SelectOption","prop_types_default","array","func","Toolbar_CategoryDropdown","CustomDateSelector_CustomDateSelector","_ref$onInputChange","onInputChange","_ref$startDate","_ref$endDate","InputGroup","TextInput","onChange","Toolbar_CustomDateSelector","optionsForCategories","isSingle","placeholder","ToolbarFilterItem_SelectOption","styled_components_browser_esm","_templateObject","ToolbarFilterItem_renderValues","values","description","marginLeft","ToolbarFilterItem_ToolbarFilterItem","categoryKey","_ref2$filter","filter","_ref2$values","_ref2$isVisible","isVisible","_ref2$hasChips","hasChips","setFilter","expanded","setExpanded","options","ToolbarFilter","data-cy","showToolbarItem","chips","item","comparator","val","i","handleSingleChips","reduce","acc","Number","isInteger","cmpItem","push","handleCheckboxChips","categoryName","deleteChip","valueToDelete","keyToDelete","find","filteredArr","event","includes","toConsumableArray_default","hasInlineFilter","onFilter","textInput","toLowerCase","maxHeight","isRequired","any","bool","Toolbar_ToolbarFilterItem","Toolbar_FilterableToolbar","filters","setFilters","_ref$pagination","pagination","_ref$hasSettings","hasSettings","settingsExpanded","setSettingsExpanded","restCategories","objectWithoutProperties_default","filterCategories","obj","_useState3","_useState4","currentCategory","setCurrentCategory","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarContent","Button","filter_icon_default","ToolbarGroup","el","sort_amount_down_icon_default","isActive","cog_icon_default","visibility","default","lg","Card","isFlat","backgroundColor","CardHeader","CardActions","times_icon_default","CardTitle","CardBody","Switch","label","labelOff","isChecked","Tooltip","position","content","question_circle_icon_default","Toolbar_Toolbar","_paths__WEBPACK_IMPORTED_MODULE_0__","history","path","query","arrayFormat","pathname","./af","./af.js","./ar","./ar-dz","./ar-dz.js","./ar-kw","./ar-kw.js","./ar-ly","./ar-ly.js","./ar-ma","./ar-ma.js","./ar-sa","./ar-sa.js","./ar-tn","./ar-tn.js","./ar.js","./az","./az.js","./be","./be.js","./bg","./bg.js","./bm","./bm.js","./bn","./bn.js","./bo","./bo.js","./br","./br.js","./bs","./bs.js","./ca","./ca.js","./cs","./cs.js","./cv","./cv.js","./cy","./cy.js","./da","./da.js","./de","./de-at","./de-at.js","./de-ch","./de-ch.js","./de.js","./dv","./dv.js","./el","./el.js","./en-SG","./en-SG.js","./en-au","./en-au.js","./en-ca","./en-ca.js","./en-gb","./en-gb.js","./en-ie","./en-ie.js","./en-il","./en-il.js","./en-nz","./en-nz.js","./eo","./eo.js","./es","./es-do","./es-do.js","./es-us","./es-us.js","./es.js","./et","./et.js","./eu","./eu.js","./fa","./fa.js","./fi","./fi.js","./fo","./fo.js","./fr","./fr-ca","./fr-ca.js","./fr-ch","./fr-ch.js","./fr.js","./fy","./fy.js","./ga","./ga.js","./gd","./gd.js","./gl","./gl.js","./gom-latn","./gom-latn.js","./gu","./gu.js","./he","./he.js","./hi","./hi.js","./hr","./hr.js","./hu","./hu.js","./hy-am","./hy-am.js","./id","./id.js","./is","./is.js","./it","./it-ch","./it-ch.js","./it.js","./ja","./ja.js","./jv","./jv.js","./ka","./ka.js","./kk","./kk.js","./km","./km.js","./kn","./kn.js","./ko","./ko.js","./ku","./ku.js","./ky","./ky.js","./lb","./lb.js","./lo","./lo.js","./lt","./lt.js","./lv","./lv.js","./me","./me.js","./mi","./mi.js","./mk","./mk.js","./ml","./ml.js","./mn","./mn.js","./mr","./mr.js","./ms","./ms-my","./ms-my.js","./ms.js","./mt","./mt.js","./my","./my.js","./nb","./nb.js","./ne","./ne.js","./nl","./nl-be","./nl-be.js","./nl.js","./nn","./nn.js","./pa-in","./pa-in.js","./pl","./pl.js","./pt","./pt-br","./pt-br.js","./pt.js","./ro","./ro.js","./ru","./ru.js","./sd","./sd.js","./se","./se.js","./si","./si.js","./sk","./sk.js","./sl","./sl.js","./sq","./sq.js","./sr","./sr-cyrl","./sr-cyrl.js","./sr.js","./ss","./ss.js","./sv","./sv.js","./sw","./sw.js","./ta","./ta.js","./te","./te.js","./tet","./tet.js","./tg","./tg.js","./th","./th.js","./tl-ph","./tl-ph.js","./tlh","./tlh.js","./tr","./tr.js","./tzl","./tzl.js","./tzm","./tzm-latn","./tzm-latn.js","./tzm.js","./ug-cn","./ug-cn.js","./uk","./uk.js","./ur","./ur.js","./uz","./uz-latn","./uz-latn.js","./uz.js","./vi","./vi.js","./x-pseudo","./x-pseudo.js","./yo","./yo.js","./zh-cn","./zh-cn.js","./zh-hk","./zh-hk.js","./zh-tw","./zh-tw.js","webpackContext","req","webpackContextResolve","code","resolve","module","exports","Container","div","height","LegendDetail","_templateObject2","Wrapper","_templateObject3","Color","attrs","_templateObject4","Title","span","_templateObject5","SubTitle","_templateObject6","Legend_Switch","_templateObject7","Legend_Legend","handleChange","_isChecked","parseFloat","index","count","some","Utilities_Legend","GroupedBarChart_Wrapper","GroupedBarChart_templateObject","formatDate","date","pieces","GroupedBarChart_GroupedBarChart","_ref$onClick","TooltipClass","orgsList","items","colors","org","colorFunc","slice","selectedIds","setSelectedIds","timeout","draw","d3","remove","unformattedData","timeFrame","formatted","selectedOrgs","width","x0","range","padding","x1","y","maxTicks","Math","round","ticks","xAxis","tickValues","tickFormat","yAxis","tickSize","svg","attr","dates","selectedOrgNames","tooltip","domain","bandwidth","call","selectAll","text","yLabel","exit","enter","bars","merge","subEnter","on","this","darker","handleMouseOver","handleMouseOut","resize","clearTimeout","setTimeout","addEventListener","removeEventListener","number","Charts_GroupedBarChart_GroupedBarChart","OrgsTooltip_formatDate","OrgsTooltip_OrgsTooltip","OrgsTooltip","_this","classCallCheck_default","defineProperty_default","orgName","jobs","x","pageX","node","getBoundingClientRect","pageY","formatTooltipDate","toolTipWidth","toolTipBase","chartWidth","flipped","jobsWidth","getComputedTextLength","adjustedWidth","maxTextPerc","boxWidth","overage","boundingBox","toolTipPoint","clickMore","interrupt","transition","delay","textWidthThreshold","HostsTooltip_formatDate","HostsTooltip_HostsTooltip","HostsTooltip","PieChart_Wrapper","PieChart_templateObject","PieChart_Tooltip","perc","percSuccess","drawn","percent","success_rate","maxLength","percentageTotal","percentageSuccess","boundingBOx","showSuccess","boundingHeight","boundingWidth","PieChart_PieChart","sort","b","radius","min","filteredData","total","helpers","donutTooltip","pie","arc","outerRadius","innerRadius","classed","Charts_PieChart","OrganizationStatistics_CardTitle","OrganizationStatistics_templateObject","CardContainer","OrganizationStatistics_templateObject2","TopCard","OrganizationStatistics_templateObject3","OrganizationStatistics_optionsMapper","meta","rest","inventory_id","objectSpread_default","pieChartMapper","attrName","_ref4$items","chartMapper","api","Api","toJobExplorer","formattedDate","OrganizationStatistics_OrganizationStatistics","useRedirect","_useApi","useApi","_useApi2","preflight","setPreflight","activeTabKey","setActiveTabKey","_useApi3","_ref$dates","orgsChartMapper","_useApi4","orgs","setOrgs","_useApi5","_useApi6","setJobs","_useApi7","_useApi8","tasks","setTasks","_useApi9","_useApi10","setOptions","_useQueryParams","constants","appNavClick","secondaryNav","apiPromise","PageHeader","title","Main","EmptyState","Tabs","activeKey","_","tabIndex","Tab","eventKey","LoadingState","NoData","Utilities_Tooltip","opts","success","fail","RAN","FAIL","TOTAL","DATE","failed","successful","successTextWidth","failTextWidth","circleSuccess","circleFail","failedIcon","successIcon","successText","failText","BarChart_BarChart","BarChart","possibleConstructorReturn_default","getPrototypeOf_default","bind","assertThisInitialized_default","init","redirectToJobExplorer","formattedData","paths","_this$props","orgId","initialQueryParams","templateId","query_string","_this2","setState","parseTime","created_date","successful_count","failed_count","Date","rangeRound","barTooltip","layers","order","stack","layer","_d","duration","ease","prevProps","Charts_BarChart","react_router","LineChart_LineChart","LineChart","updateCluster","clusterId","attrTween","tweenDash","l","getTotalLength","t","successLine","curve","failLine","defined","isNaN","vertical","handleMouseMove","intersectX","cx","baseVal","Charts_LineChart","ModulesList_DataListCell","DataListCell","ModulesList_DataListItem","DataListItem","DataCellEnd","ModulesList_ModulesList","modules","DataList","overflow","background","aria-labelledby","border","host_task_count","Components_ModulesList","ModalContents_success","circle_icon_default","marginRight","ModalContents_fail","ModalContents_DataListCell","ModalContents_templateObject","ModalContents_DataListItem","ModalContents_templateObject2","ModalContents_DataCellEnd","ModalContents_templateObject3","PFDataListItemNoBorder","DataListItemCompact","DataListCellCompact","DataListFocus","DataCellEndCompact","_templateObject8","ModalContents_ModalContents","selectedId","handleModal","qp","jobType","handleCloseBtn","_useApi2$0$data$items","relatedJobs","setRelatedJobs","_useApi4$0$data$items2","stats","setStats","relatedTemplateJobsParams","agreggateTemplateParams","Modal","onClose","actions","total_count","elapsed","toISOString","substr","formatTotalTime","totalCount","ceil","formatAvgRun","successCount","formatSuccessRate","most_failed_tasks","percentage","total_failed_count","task_name","formatTopFailedTask","most_failed_steps","template_name","formatTopFailedStep","Label","component","job","cluster_name","started","Components_ModalContents","TemplatesList_DataListCell","TemplatesList_templateObject","TemplatesList_DataListItem","TemplatesList_templateObject2","TemplatesList_DataCellEnd","TemplatesList_templateObject3","TemplatesList_TemplatesList","templates","setSelectedId","isModalOpen","setIsModalOpen","Components_TemplatesList","initialTopTemplateParams","initialTopWorkflowParams","initialModuleParams","setPreFlightError","_useApi2$","_useApi2$$data$items","chartData","setData","_useApi4$0$data$items","setTemplates","_useApi6$0$data$items","workflows","setWorkflows","_useApi8$0$data$items","setModules","groupBy","_useApi10$0$data","initialOptionsParams","optionsQueryParams","topTemplatesParams","topWorkflowParams","topModuleParams","_initializeWithPreflight","asyncToGenerator_default","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","apply","initializeWithPreflight","className","display","marginTop","ROITopTemplates_Tooltip","savings","manualCost","automationCost","scrollLeftOffset","scrollLeft","formatDollars","delta","automatedCost","nameWidth","savingsWidth","manualCostWidth","automationCostWidth","widestTextElem","amount","toFixed","toString","replace","ROITopTemplates_TopTemplatesSavings","TopTemplatesSavings","_this3","formatYAxisValue","taskNames","ROITopTemplates","BorderedCardTitle","TotalSavings_TotalSavings","_ref$totalSavings","totalSavings","borderTop","paddingBottom","floatToStringWithCommas","AutomationCalculator_TotalSavings","InputAndText","CalculationCost_templateObject","validFloat","floatValue","CalculationCost_CalculationCost","_ref$costManual","costManual","_ref$setCostManual","setCostManual","_ref$costAutomation","costAutomation","_ref$setCostAutomatio","setCostAutomation","InputGroupText","dollar_sign_icon_default","paddingTop","AutomationCalculator_CalculationCost","AutomationCalculator_AutomationFormula","TemplateDetail","TopTemplates_templateObject","TemplateDetailSubTitle","em","TooltipWrapper","IconGroup","TopTemplates_InputAndText","TopTemplates_QuestionIconTooltip","details","Popover","bodyContent","k","info_circle_icon_default","TopTemplates_TopTemplates","_ref2$data","_ref2$sortBy","sortBy","_ref2$setDataRunTime","setDataRunTime","_ref2$setEnabled","setEnabled","_ref2$redirectToJobEx","flex","Tooltip_Tooltip","avgRunTime","minutes","successful_hosts_total","trimmed","sortAttribute","TopTemplates_showSortAttr","enabled","toggle_off_icon_default","toggle_on_icon_default","deselectedIds","setDeselectedIds","AutomationCalculator_TopTemplates","AutomationCalculator_templateObject","WrapperLeft","AutomationCalculator_templateObject2","WrapperRight","AutomationCalculator_templateObject3","filterDisabled","AutomationCalculator_updateDeltaCost","successful_elapsed_total","AutomationCalculator_AutomationCalculator","_ref$items","AutomationCalculator_mapApi","fetchApi","setDataInApi","seconds","updatedData","textAlign","paddingLeft","sum","curr","computeTotalSavings","flexDirection","setUnfilteredData","Components_NoResults","EmptyState_EmptyState","EmptyStateIcon","search_icon_default","EmptyStateBody","JobStatus_JobStatus","getColor","check_circle_icon_default","exclamation_circle_icon_default","sync_alt_icon_default","exclamation_triangle_icon_default","clock_icon_default","getIcon","str","charAt","toUpperCase","capitalized","oneOf","Components_JobStatus","headerLabels","ExternalLinkIcon","external_link_alt_icon_default","JobExplorerList_DataListCell","DataListCellHeader","JobExplorerList_DataListItemCells","DataListItemCells","JobExplorerList_DataListToggle","DataListToggle","JobExplorerList_buildListRow","ariaLabel","ariaLabelledBy","windowWidth","DataListItemRow","aria-controls","idx","indexOf","newExpanded","toggle","dataListCells","tower_link","fontWeight","org_name","DataListContent","isHidden","created","finished","JobExplorerList_AllJobsTemplate","innerWidth","setWindowWidth","onResize","JobExplorerList_JobExplorerList","_useState5","_useState6","isCompact","labels","JobExplorerList_buildHeader","Components_JobExplorerList","perPageOptions","JobExplorer_optionsMapper","JobExplorer_JobExplorer","_useApi2$$data","_useApi2$$data$meta","currPage","setCurrPage","initialSearchParams","parseBooleans","updateURL","returnOffsetVal","page","handleSetPage","nextOffset","handlePerPageSelect","perPage","Pagination","itemCount","widgetId","onPerPageSelect","onSetPage","pageNumber","ExternalLinkAltIcon","NotificationsList_NotificationDrawerListItem","NotificationDrawerListItem","NotificationsList_NotificationDrawerList","NotificationDrawerList","NotificationsList_stringifyDate","day","moment_default","now","utc","isAfter","diff","isSame","valueOf","NotificationsList_AllNotificationTemplate","notifications","notification_id","tower_url","NotificationDrawerListItemHeader","NotificationDrawerListItemBody","timestamp","NotificationsList_ErrorNotificationTemplate","notification","NotificationsList_NoticeNotificationTemplate","NotificationsList_WarningNotificationTemplate","NotificationsList_NotificationsList","filterBy","Components_NotificationsList","Notifications_CardTitle","Notifications_templateObject","DropdownGroup","Notifications_templateObject2","notificationOptions","disabled","formatClusterName","uuid","install_uuid","notificationsData","setNotificationsData","clusterOptions","setClusterOptions","_useState7","_useState8","selectedCluster","setSelectedCluster","_useState9","_useState10","firstRender","setFirstRender","_useState11","_useState12","setIsLoading","_useState13","_useState14","setMeta","_useState15","_useState16","_ref3$notifications","update","ignore","fetchEndpoints","all","p","_callee2","_context2","_ref5$0$templates","clustersData","_ref5$","_ref5$$notifications","FormSelect","FormSelectOption","isDisabled","NotificationDrawer","trimStr","formatDateTime","formatSeconds","getTotal","capitalize","calculateDelta","convertSecondsToMins","convertMinsToSeconds","convertSecondsToHours","formatJobType","moment__WEBPACK_IMPORTED_MODULE_0__","moment__WEBPACK_IMPORTED_MODULE_0___default","isNumeric","dateTime","startOf","datum","s","mins","_patternfly_react_core_dist_js_components_EmptyState_EmptyStateBody_js__WEBPACK_IMPORTED_MODULE_4__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_5__","_patternfly_react_icons_dist_js_icons_cubes_icon__WEBPACK_IMPORTED_MODULE_5___default"],"mappings":"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AAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,UAAA,IACAC,aAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,aAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,YAAA,IACAC,eAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UAAA,IACAC,OAAA,IACAC,UA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","file":"js/automation_analytics.758494f4bf90501b6687.js","sourcesContent":["import { stringify } from 'query-string';\n\nconst clustersEndpoint = `/api/tower-analytics/v0/clusters/`;\nconst notificationsEndPoint = `/api/tower-analytics/v0/notifications/`;\nconst preflightEndpoint = `/api/tower-analytics/v0/authorized/`;\n\nconst jobExplorerEndpoint = '/api/tower-analytics/v1/job_explorer/';\nconst jobExplorerOptionsEndpoint =\n  '/api/tower-analytics/v1/job_explorer_options/';\nconst ROIEndpoint = '/api/tower-analytics/v1/roi_templates/';\nconst ROITemplatesOptionsEndpoint = '/api/tower-analytics/v1/roi_templates_options/';\nconst orgOptionsEndpoint = '/api/tower-analytics/v1/dashboard_organization_statistics_options/';\nconst hostExplorerEndpoint = '/api/tower-analytics/v1/host_explorer';\nconst clustersOptionsEndpoint = '/api/tower-analytics/v1/dashboard_clusters_options/';\nconst eventExplorerEndpoint = '/api/tower-analytics/v1/event_explorer/';\n\nfunction getAbsoluteUrl() {\n    const url = window.location.href;\n    let arr = url.split('/');\n    arr.pop();\n    return arr.join('/');\n}\n\nfunction handleResponse(response) {\n    return response.json().then(json => {\n        if (response.ok) {\n            return json;\n        }\n\n        if (response.status === 404 || response.status === 401) {\n            return Promise.reject({\n                status: response.status,\n                message: json\n            });\n        } else {\n            return Promise.reject(json);\n        }\n    });\n}\n\nexport const preflightRequest = () => {\n    return fetch(preflightEndpoint).then(handleResponse);\n};\n\n/* Section: Orgs page */\nexport const readOrgOptions = ({ params = {}}) => {\n    let url = new URL(orgOptionsEndpoint, getAbsoluteUrl());\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readHostAcrossOrg = ({ params = {}}) => {\n    const combined = {\n        ...params,\n        attributes: [ 'total_unique_host_count' ],\n        group_by_time: true,\n        group_by: 'org',\n        sort_by: `host_task_count:${params.sort_by}`\n    };\n\n    let url = new URL(hostExplorerEndpoint, getAbsoluteUrl());\n    url.search = stringify({\n        limit: combined.limit,\n        sort_by: combined.sort_by\n    });\n\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(combined)\n    }).then(handleResponse);\n};\n\nexport const readJobsByDateAndOrg = ({ params = {}}) => {\n    const combined = {\n        ...params,\n        attributes: [ 'total_count' ],\n        group_by_time: true,\n        group_by: 'org',\n        sort_by: `total_count:${params.sort_by}`\n    };\n\n    let url = new URL(jobExplorerEndpoint, getAbsoluteUrl());\n    url.search = stringify({\n        limit: combined.limit,\n        sort_by: combined.sort_by\n    });\n\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(combined)\n    }).then(handleResponse);\n};\n\nexport const readJobRunsByOrg = ({ params = {}}) => {\n    const combined = {\n        ...params,\n        group_by: 'org',\n        include_others: true,\n        attributes: [ 'host_count' ],\n        sort_by: `total_count:${params.sort_by}`\n    };\n\n    let url = new URL(jobExplorerEndpoint, getAbsoluteUrl());\n    url.search = stringify({\n        limit: combined.limit,\n        sort_by: combined.sort_by\n    });\n\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(combined)\n    }).then(handleResponse);\n};\n\nexport const readJobEventsByOrg = ({ params = {}}) => {\n    const combined = {\n        ...params,\n        group_by: 'org',\n        include_others: true,\n        granularity: 'daily',\n        attributes: [ 'host_task_count' ],\n        sort_by: `host_task_count:${params.sort_by}`\n    };\n\n    let url = new URL(jobExplorerEndpoint, getAbsoluteUrl());\n    url.search = stringify({\n        limit: combined.limit,\n        sort_by: combined.sort_by\n    });\n\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(combined)\n    }).then(handleResponse);\n};\n/* End of section: Orgs page */\n\n// used in Notifications.js\nexport const readClusters = () => {\n    return fetch(clustersEndpoint).then(handleResponse);\n};\n\nexport const readNotifications = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(notificationsEndPoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url).then(handleResponse);\n};\n\nexport const readJobExplorerOptions = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(jobExplorerOptionsEndpoint, formattedUrl);\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readClustersOptions = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(clustersOptionsEndpoint, formattedUrl);\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readJobExplorer = ({ params = {}}) => {\n    const { limit, offset, sort_by } = params;\n    const paginationParams = {\n        limit,\n        offset,\n        sort_by\n    };\n    const qs = stringify(paginationParams);\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(jobExplorerEndpoint, formattedUrl);\n    url.search = qs;\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readEventExplorer = ({ params = {}}) => {\n    const { limit, offset, sort_by } = params;\n    const paginationParams = {\n        limit,\n        offset,\n        sort_by\n    };\n    const qs = stringify(paginationParams);\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(eventExplorerEndpoint, formattedUrl);\n    url.search = qs;\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readClustersBarChart = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(jobExplorerEndpoint, formattedUrl);\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readROI = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(ROIEndpoint, formattedUrl);\n    Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n\nexport const readROIOptions = ({ params = {}}) => {\n    const formattedUrl = getAbsoluteUrl();\n    let url = new URL(ROITemplatesOptionsEndpoint, formattedUrl);\n    return fetch(url, {\n        method: 'POST',\n        body: JSON.stringify(params)\n    }).then(handleResponse);\n};\n","import { useReducer } from 'react';\nimport moment from 'moment';\n\nimport { formatDate } from '../Utilities/helpers';\n\nexport const useQueryParams = initial => {\n    const paramsReducer = (state, { type, value }) => {\n        switch (type) {\n            /* v0 api reducers */\n            case 'SET_STARTDATE':\n                return { ...state, startDate: value };\n            case 'SET_ENDDATE':\n                return { ...state, endDate: value };\n            case 'SET_ID':\n                if (!parseInt(value)) {\n                    const { id: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, id: parseInt(value) };\n            case 'SET_LIMIT':\n                if (!parseInt(value.limit)) {\n                    const { limit: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, limit: parseInt(value.limit) };\n            case 'SET_SEVERITY':\n                if (value.severity === '') {\n                    const { severity: ignored, ...rest } = state;\n                    return rest;\n                }\n\n                return { ...state, ...value };\n\n                /* v1 api reducers */\n            case 'SET_OFFSET':\n            case 'SET_ATTRIBUTES':\n            case 'SET_JOB_TYPE':\n            case 'SET_STATUS':\n            case 'SET_ORG':\n            case 'SET_CLUSTER':\n            case 'SET_TEMPLATE':\n            case 'SET_SORTBY':\n            case 'SET_ROOT_WORKFLOWS_AND_JOBS':\n                return { ...state, ...value };\n            case 'SET_QUICK_DATE_RANGE': {\n                let newState = { ...state };\n                if (value !== 'custom') {\n                    newState = { ...newState, start_date: null, end_date: null };\n                }\n\n                newState = { ...newState, ...value };\n                return newState;\n            }\n\n            case 'SET_START_DATE':\n            case 'SET_END_DATE': {\n                let newValues = {};\n                Object.entries(value).forEach(([ key, value ]) => {\n                    newValues[key] = formatDate(value);\n                });\n                return { ...state, ...newValues };\n            }\n\n            case 'REINITIALIZE':\n                return { ...value };\n            case 'RESET_FILTER':\n                return {\n                    ...state,\n                    ...initial\n                };\n            default:\n                throw new Error();\n        }\n    };\n\n    const [ queryParams, dispatch ] = useReducer(paramsReducer, { ...initial });\n\n    const actionMapper = {\n        status: 'SET_STATUS',\n        quick_date_range: 'SET_QUICK_DATE_RANGE',\n        job_type: 'SET_JOB_TYPE',\n        org_id: 'SET_ORG',\n        cluster_id: 'SET_CLUSTER',\n        template_id: 'SET_TEMPLATE',\n        sort_by: 'SET_SORTBY',\n        start_date: 'SET_START_DATE',\n        end_date: 'SET_END_DATE',\n        only_root_workflows_and_standalone_jobs: 'SET_ROOT_WORKFLOWS_AND_JOBS'\n    };\n\n    return {\n        queryParams,\n        dispatch,\n        setLimit: limit => dispatch({ type: 'SET_LIMIT', value: { limit }}),\n        setOffset: offset => dispatch({ type: 'SET_OFFSET', value: { offset }}),\n        setFromToolbar: (varName, value = null) => {\n            if (!varName) {\n                dispatch({ type: 'RESET_FILTER' });\n            } else {\n                dispatch({ type: actionMapper[varName], value: { [varName]: value }});\n            }\n        },\n        /* v0 api usage after this line */\n        setSeverity: severity =>\n            dispatch({ type: 'SET_SEVERITY', value: { severity }}),\n        setEndDate: () => {\n            const endDate = moment().format('YYYY-MM-DD');\n            dispatch({ type: 'SET_ENDDATE', value: endDate });\n        },\n        setId: value => dispatch({ type: 'SET_ID', value }),\n        setStartDate: days => {\n            let startDate;\n            if (days === 7) {\n                startDate = moment()\n                .subtract(1, 'week')\n                .format('YYYY-MM-DD');\n            }\n\n            if (days === 14) {\n                startDate = moment()\n                .subtract(2, 'weeks')\n                .format('YYYY-MM-DD');\n            }\n\n            if (days === 31) {\n                startDate = moment()\n                .subtract(1, 'month')\n                .format('YYYY-MM-DD');\n            } else {\n                startDate = moment()\n                .subtract(days, 'days')\n                .format('YYYY-MM-DD');\n            }\n\n            dispatch({ type: 'SET_STARTDATE', value: startDate });\n        },\n        setStartDateAsString: value => dispatch({ type: 'SET_STARTDATE', value })\n    };\n};\n","/*eslint max-len: [\"error\", { \"ignoreStrings\": true }]*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Button,\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { WrenchIcon } from '@patternfly/react-icons';\n\nconst DefaultEmptyState = ({ preflightError: error }) => (\n    <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={WrenchIcon} />\n        {error.status === 404 && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n          No data found\n                </Title>\n                <EmptyStateBody>\n          Please visit{' '}\n                    <a\n                        href=\"https://docs.ansible.com/ansible-tower/latest/html/administration/usability_data_collection.html#automation-analytics\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n            here\n                    </a>{' '}\n          to learn how to enable Automation Analytics.\n                </EmptyStateBody>\n            </>\n        )}\n        {error.status === 401 && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n          Not authorized\n                </Title>\n                <EmptyStateBody>\n          You do not have the correct permissions to view this page.\n                </EmptyStateBody>\n            </>\n        )}\n        {!error.status && (\n            <>\n                <Title headingLevel=\"h5\" size=\"lg\">\n          Something went wrong, please try reloading the page\n                </Title>\n                <Button variant=\"primary\" onClick={() => window.location.reload()}>\n          Reload\n                </Button>\n            </>\n        )}\n    </EmptyState>\n);\n\nDefaultEmptyState.propTypes = {\n    preflightError: PropTypes.object\n};\n\nexport default DefaultEmptyState;\n","export const jobExplorer = {\n    attributes: [\n        'id',\n        'status',\n        'job_type',\n        'started',\n        'finished',\n        'elapsed',\n        'created',\n        'cluster_name',\n        'org_name',\n        'most_failed_tasks'\n    ],\n    defaultParams: {\n        status: [ 'successful', 'failed' ],\n        quick_date_range: 'last_30_days',\n        job_type: [ 'workflowjob', 'job' ],\n        org_id: [],\n        cluster_id: [],\n        template_id: [],\n        sort_by: 'created:desc',\n        start_date: null,\n        end_date: null,\n        only_root_workflows_and_standalone_jobs: false,\n        limit: 5\n    }\n};\n\nexport const roi = {\n    defaultParams: {\n        status: [ 'successful' ],\n        org_id: [],\n        cluster_id: [],\n        template_id: [],\n        quick_date_range: 'roi_last_year',\n        job_type: [ 'job' ],\n        sort_by: 'template_productivity_score:desc',\n        start_date: null,\n        end_date: null,\n        limit: 25,\n        only_root_workflows_and_standalone_jobs: true,\n        attributes: [\n            'successful_hosts_total',\n            'successful_elapsed_total',\n            'total_org_count',\n            'total_cluster_count'\n        ],\n        group_by: 'template',\n        group_by_time: false,\n        granularity: 'monthly'\n    }\n};\n\nexport const organizationStatistics = {\n    defaultParams: {\n        status: [],\n        org_id: [],\n        quick_date_range: 'last_30_days',\n        sort_by: 'desc',\n        limit: 5,\n        job_type: [ 'workflowjob', 'job' ],\n        cluster_id: [],\n        template_id: [],\n        start_date: null,\n        end_date: null\n    }\n};\n\nexport const clusters = {\n    defaultParams: {\n        status: [ 'successful', 'failed' ],\n        quick_date_range: 'last_30_days',\n        job_type: [ 'workflowjob', 'job' ],\n        group_by_time: true,\n        org_id: [],\n        cluster_id: [],\n        template_id: [],\n        only_root_workflows_and_standalone_jobs: false\n    }\n};\n","import { useState, useEffect, useReducer } from 'react';\n\nconst dataFetchReducer = (state, action) => {\n    switch (action.type) {\n        case 'FETCH_INIT':\n            return {\n                ...state,\n                isLoading: true,\n                isSuccess: false,\n                error: null\n            };\n        case 'FETCH_SUCCESS':\n            return {\n                ...state,\n                isLoading: false,\n                isSuccess: true,\n                error: null,\n                data: action.payload\n            };\n        case 'FETCH_FAILURE':\n            return {\n                ...state,\n                isLoading: false,\n                isSuccess: false,\n                error: action.payload\n            };\n        case 'UPDATE_DATA':\n            return {\n                ...state,\n                data: action.payload\n            };\n        default:\n            throw new Error();\n    }\n};\n\nconst useApi = (initialData, postprocess = d => d) => {\n    const [ request, setRequest ] = useState(null);\n\n    const [ state, dispatch ] = useReducer(dataFetchReducer, {\n        isLoading: false,\n        isSuccess: false,\n        error: null,\n        data: initialData\n    });\n\n    useEffect(() => {\n    // Prevent fetching nothing\n        if (!request) {\n            return;\n        }\n\n        // Initialize\n        let didCancel = false;\n        dispatch({ type: 'FETCH_INIT' });\n\n        // Fetching\n        window.insights.chrome.auth.getUser().then(() =>\n            request\n            .then(data => {\n                if (!didCancel) {\n                    dispatch({\n                        type: 'FETCH_SUCCESS',\n                        payload: postprocess(data)\n                    });\n                }\n            })\n            .catch(e => {\n                if (!didCancel) {\n                    dispatch({ type: 'FETCH_FAILURE', payload: e });\n                }\n            })\n        );\n\n        return () => {\n            didCancel = true;\n        };\n    }, [ request ]);\n\n    const setData = data => {\n        dispatch({ type: 'UPDATE_DATA', payload: data });\n    };\n\n    return [ state, setRequest, setData ];\n};\n\nexport default useApi;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nconst initializeChart = Chart => {\n    const BaseChart = props => {\n        const { id, margin } = props;\n\n        const getWidth = () => {\n            let width;\n            width =\n        parseInt(d3.select('#' + id).style('width')) -\n          margin.left -\n          margin.right || 700;\n            return width;\n        };\n\n        const getHeight = () => {\n            let height;\n            height =\n        parseInt(d3.select('#' + id).style('height')) -\n          margin.top -\n          margin.bottom || 450;\n            return height;\n        };\n\n        return <Chart {...props} getWidth={getWidth} getHeight={getHeight} />;\n    };\n\n    BaseChart.propTypes = {\n        id: PropTypes.string,\n        margin: PropTypes.object\n    };\n\n    return BaseChart;\n};\n\ninitializeChart.propTypes = {\n    Chart: PropTypes.element\n};\n\nexport default initializeChart;\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst NoData = () => (\n    <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={CubesIcon} />\n        <Title headingLevel=\"h5\" size=\"lg\">\n      No Data\n        </Title>\n    </EmptyState>\n);\n\nexport default NoData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    EmptyState,\n    EmptyStateBody,\n    EmptyStateIcon,\n    EmptyStateVariant,\n    Title\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { global_danger_color_200 as globalDangerColor200 } from '@patternfly/react-tokens';\n\nconst ApiErrorState = ({ message }) => (\n    <EmptyState variant={EmptyStateVariant.small}>\n        <EmptyStateIcon\n            icon={ExclamationCircleIcon}\n            color={globalDangerColor200.value}\n        />\n        <Title headingLevel=\"h2\" size=\"lg\">\n      Error\n        </Title>\n        <EmptyStateBody>{message}</EmptyStateBody>\n    </EmptyState>\n);\n\nApiErrorState.propTypes = {\n    message: PropTypes.string\n};\n\nexport default ApiErrorState;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarItem, Select, SelectOption } from '@patternfly/react-core';\n\nconst CategoryDropdown = ({\n    selected,\n    setSelected = () => {},\n    categories = []\n}) => {\n    const [ isExpanded, setIsExpanded ] = useState(false);\n\n    return (\n        <ToolbarItem>\n            <Select\n                isOpen={isExpanded}\n                variant={'single'}\n                aria-label={'Categories'}\n                onToggle={() => setIsExpanded(!isExpanded)}\n                onSelect={(_event, selection) => {\n                    setSelected(selection);\n                    setIsExpanded(false);\n                }}\n                selections={selected}\n                placeholderText={'Filter by'}\n            >\n                {categories.map(({ key, name }) => (\n                    <SelectOption key={key} value={key}>\n                        {name}\n                    </SelectOption>\n                ))}\n            </Select>\n        </ToolbarItem>\n    );\n};\n\nCategoryDropdown.propTypes = {\n    categories: PropTypes.array,\n    selected: PropTypes.string,\n    setSelected: PropTypes.func\n};\n\nexport default CategoryDropdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, TextInput } from '@patternfly/react-core';\n\nconst CustomDateSelector = ({\n    onInputChange = () => {},\n    startDate = '',\n    endDate = ''\n}) => {\n    return (\n        <>\n            <InputGroup>\n                <TextInput\n                    name=\"startDate\"\n                    id=\"startDate\"\n                    type=\"date\"\n                    aria-label=\"Start Date\"\n                    value={startDate}\n                    onChange={e => onInputChange('start_date', e)}\n                />\n            </InputGroup>\n            <InputGroup>\n                <TextInput\n                    name=\"endDate\"\n                    id=\"endDate\"\n                    type=\"date\"\n                    aria-label=\"End Date\"\n                    value={endDate}\n                    onChange={e => onInputChange('end_date', e)}\n                />\n            </InputGroup>\n        </>\n    );\n};\n\nCustomDateSelector.propTypes = {\n    startDate: PropTypes.string,\n    endDate: PropTypes.string,\n    onInputChange: PropTypes.func\n};\n\nexport default CustomDateSelector;\n","export const optionsForCategories = {\n    status: {\n        isSingle: false,\n        name: 'Status',\n        placeholder: 'Filter by job status'\n    },\n    quick_date_range: {\n        isSingle: true,\n        name: 'Date',\n        placeholder: 'Filter by date'\n    },\n    job_type: {\n        isSingle: false,\n        name: 'Job',\n        placeholder: 'Filter by job type'\n    },\n    org_id: {\n        isSingle: false,\n        name: 'Organization',\n        placeholder: 'Filter by organization'\n    },\n    cluster_id: {\n        isSingle: false,\n        name: 'Cluster',\n        placeholder: 'Filter by cluster'\n    },\n    template_id: {\n        isSingle: false,\n        name: 'Template',\n        placeholder: 'Filter by template'\n    },\n    sort_by: {\n        isSingle: true,\n        name: 'Sort by',\n        placeholder: 'Sort by attribute'\n    }\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    ToolbarFilter,\n    Select,\n    SelectOption as PFSelectOption\n} from '@patternfly/react-core';\n\nimport {\n    handleCheckboxChips,\n    handleSingleChips\n} from './helpers';\nimport { optionsForCategories } from './constants';\nimport styled from 'styled-components';\n\nconst SelectOption = styled(PFSelectOption)`\n    display: block;\n    overflow-x: hidden;\n    text-overflow: ellipsis;\n    max-width: 300px;\n`;\n\nconst renderValues = values =>\n    values && values.map(({ key, value, description }) => (\n        <SelectOption key={ key } value={ key } description={ description }>\n            <span style={{ marginLeft: 5 }}>{ value } </span>\n        </SelectOption>\n    ));\n\nconst ToolbarFilterItem = ({\n    categoryKey,\n    filter = null,\n    values = [],\n    isVisible = true,\n    hasChips = true,\n    setFilter\n}) => {\n    const [ expanded, setExpanded ] = useState(false);\n    const options = optionsForCategories[categoryKey];\n\n    const onDelete = (name, valueToDelete) => {\n        const single = optionsForCategories[categoryKey].isSingle;\n\n        if (single) {\n            setFilter(null);\n        } else {\n            const keyToDelete = values.find(({ value }) => value === valueToDelete)\n            .key;\n            const filteredArr = filter.filter(value => value !== keyToDelete);\n            setFilter(filteredArr);\n        }\n    };\n\n    const handleChips = () => {\n        if (options.isSingle) {\n            return handleSingleChips(filter, values);\n        } else {\n            return handleCheckboxChips(filter, values);\n        }\n    };\n\n    const onSelect = (event, selection) => {\n        if (options.isSingle) {\n            setFilter(selection);\n            setExpanded(false);\n        } else {\n            setFilter(!filter.includes(selection)\n                ? [ ...filter, selection ]\n                : filter.filter(value => value !== selection)\n            );\n        }\n    };\n\n    const onFilter = event => {\n        const textInput = event.target.value;\n        if (textInput === '') {\n            return renderValues(values);\n        } else {\n            return renderValues(\n                values.filter(({ value }) =>\n                    value.toLowerCase().includes(textInput.toLowerCase())\n                )\n            );\n        }\n    };\n\n    return (\n        <ToolbarFilter\n            data-cy={categoryKey}\n            key={categoryKey}\n            showToolbarItem={isVisible}\n            chips={hasChips ? handleChips() : []}\n            categoryName={options.name}\n            deleteChip={hasChips ? onDelete : null}\n        >\n            <Select\n                variant={options.isSingle ? 'single' : 'checkbox'}\n                aria-label={categoryKey}\n                onToggle={() => setExpanded(!expanded)}\n                onSelect={onSelect}\n                selections={filter}\n                isOpen={expanded}\n                hasInlineFilter\n                placeholderText={options.placeholder}\n                onFilter={ onFilter }\n                maxHeight={ '1000%' }\n            >\n                { renderValues(values) }\n            </Select>\n        </ToolbarFilter>\n    );\n};\n\nToolbarFilterItem.propTypes = {\n    categoryKey: PropTypes.string.isRequired,\n    filter: PropTypes.any,\n    values: PropTypes.array,\n    isVisible: PropTypes.bool,\n    hasChips: PropTypes.bool,\n    setFilter: PropTypes.func.isRequired\n};\n\nexport default ToolbarFilterItem;\n","/**\n * Get comparator values if their key is in the item list\n */\nexport const handleCheckboxChips = (item, comparator) => {\n    if (item && comparator) {\n        return item.reduce((acc, i) => {\n            Number.isInteger(parseInt(i)) ? (i = parseInt(i)) : i;\n\n            comparator.forEach(cmpItem => {\n                if (cmpItem.key === i) {\n                    acc.push(cmpItem.value);\n                }\n            });\n\n            return acc;\n        }, []);\n    }\n\n    return [];\n};\n\n/**\n * Convert a list of objects to a list of the last value if defined\n */\nexport const handleSingleChips = (item, comparator) => {\n    if (item && typeof item === 'string' && comparator) {\n        let val;\n        comparator.forEach(i => {\n            if (i.key === item) {\n                val = i.value;\n            }\n        });\n\n        if (val !== undefined) {\n            return [ val ];\n        }\n    }\n\n    return [];\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    Toolbar,\n    ToolbarContent,\n    ToolbarGroup,\n    Button,\n    ToolbarItem,\n    Tooltip,\n    Switch\n} from '@patternfly/react-core';\nimport {\n    Card,\n    CardTitle,\n    CardBody,\n    CardActions,\n    CardHeader\n} from '@patternfly/react-core';\nimport {\n    FilterIcon,\n    SortAmountDownIcon,\n    CogIcon,\n    QuestionCircleIcon,\n    TimesIcon\n} from '@patternfly/react-icons';\n\nimport CategoryDropdown from './CategoryDropdown';\nimport CustomDateSelector from './CustomDateSelector';\nimport { optionsForCategories } from './constants';\nimport ToolbarFilterItem from './ToolbarFilterItem';\n\nconst FilterableToolbar = ({\n    categories,\n    filters,\n    setFilters,\n    pagination = null,\n    hasSettings = false\n}) => {\n    const [ settingsExpanded, setSettingsExpanded ] = useState(false);\n    const { quick_date_range, sort_by, ...restCategories } = categories;\n\n    // Filter out elements which are not in the option object.\n    const filterCategories = Object.keys(restCategories)\n    .filter(key => Object.keys(optionsForCategories).includes(key))\n    .reduce((obj, key) => {\n        obj[key] = restCategories[key];\n        return obj;\n    }, {});\n\n    const [ currentCategory, setCurrentCategory ] = useState(\n        Object.keys(filterCategories)[0]\n    );\n\n    const onInputChange = (type, value) => {\n        setFilters(type, value);\n    };\n\n    const FilterCategoriesGroup = () => (\n        <ToolbarGroup variant=\"filter-group\">\n            <CategoryDropdown\n                selected={currentCategory}\n                setSelected={setCurrentCategory}\n                categories={Object.keys(filterCategories).map(el => ({\n                    key: el,\n                    name: optionsForCategories[el].name\n                }))}\n            />\n            {Object.keys(filterCategories).map(key => (\n                <ToolbarFilterItem\n                    key={key}\n                    categoryKey={key}\n                    filter={filters[key]}\n                    values={categories[key]}\n                    isVisible={currentCategory === key}\n                    setFilter={value => setFilters(key, value)}\n                />\n            ))}\n        </ToolbarGroup>\n    );\n\n    const QuickDateGroup = () => (\n        <ToolbarGroup variant=\"filter-group\">\n            <ToolbarFilterItem\n                categoryKey=\"quick_date_range\"\n                filter={filters.quick_date_range}\n                values={quick_date_range}\n                setFilter={value => setFilters('quick_date_range', value)}\n                hasChips={false}\n            />\n            {filters.quick_date_range &&\n            filters.quick_date_range.includes('custom') && (\n                <CustomDateSelector\n                    startDate={filters.start_date ? filters.start_date : ''}\n                    endDate={filters.end_date ? filters.end_date : ''}\n                    onInputChange={onInputChange}\n                />\n            )}\n        </ToolbarGroup>\n    );\n\n    const SortByGroup = () => (\n        <ToolbarGroup variant=\"filter-group\">\n            <ToolbarFilterItem\n                categoryKey=\"sort_by\"\n                filter={filters.sort_by}\n                values={sort_by}\n                setFilter={value => setFilters('sort_by', value)}\n                hasChips={false}\n            />\n            <Button variant=\"control\">\n                <SortAmountDownIcon />\n            </Button>\n        </ToolbarGroup>\n    );\n\n    /* TODO: For future work: make settings more modular for different pages */\n    const Settings = () => (\n        <Card isFlat style={{ backgroundColor: '#EEEEEE' }}>\n            <CardHeader>\n                <CardActions>\n                    <Button\n                        variant=\"plain\"\n                        onClick={() => setSettingsExpanded(!settingsExpanded)}\n                    >\n                        <TimesIcon />\n                    </Button>\n                </CardActions>\n                <CardTitle>Settings</CardTitle>\n            </CardHeader>\n            <CardBody>\n                <Switch\n                    id=\"showRootWorkflowJobs\"\n                    label=\"Ignore nested workflows and jobs\"\n                    labelOff=\"Ignore nested workflows and jobs\"\n                    isChecked={filters.only_root_workflows_and_standalone_jobs}\n                    onChange={val => {\n                        setFilters('only_root_workflows_and_standalone_jobs', val);\n                    }}\n                />\n                <Tooltip\n                    position={'top'}\n                    content={\n                        <div>\n                            {' '}\n              If enabled, nested workflows and jobs will not be included in the\n              overall totals. Enable this option to filter out duplicate\n              entries.\n                        </div>\n                    }\n                >\n                    <QuestionCircleIcon />\n                </Tooltip>\n            </CardBody>\n        </Card>\n    );\n\n    return (\n        <>\n            <Toolbar\n                id=\"filterable-toolbar-with-chip-groups\"\n                clearAllFilters={() => {\n                    setFilters(null, null);\n                }}\n                collapseListedFiltersBreakpoint=\"xl\"\n            >\n                <ToolbarContent>\n                    <Button variant=\"control\">\n                        <FilterIcon />\n                    </Button>\n                    {Object.keys(filterCategories).length > 0 && (\n                        <FilterCategoriesGroup />\n                    )}\n                    {quick_date_range && <QuickDateGroup />}\n                    {sort_by && <SortByGroup />}\n                    {hasSettings && (\n                        <ToolbarItem>\n                            <Button\n                                variant=\"plain\"\n                                onClick={() => setSettingsExpanded(!settingsExpanded)}\n                                aria-label=\"settings\"\n                                isActive={settingsExpanded}\n                            >\n                                <CogIcon />\n                            </Button>\n                        </ToolbarItem>\n                    )}\n                    {pagination && (\n                        <ToolbarItem\n                            variant=\"pagination\"\n                            visibility={{ default: 'hidden', lg: 'visible' }}\n                        >\n                            {pagination}\n                        </ToolbarItem>\n                    )}\n                </ToolbarContent>\n                {settingsExpanded && <Settings />}\n            </Toolbar>\n        </>\n    );\n};\n\nFilterableToolbar.propTypes = {\n    categories: PropTypes.object.isRequired,\n    filters: PropTypes.object.isRequired,\n    setFilters: PropTypes.func.isRequired,\n    pagination: PropTypes.object,\n    hasSettings: PropTypes.bool\n};\n\nexport default FilterableToolbar;\n","import Toolbar from './Toolbar';\n\nexport default Toolbar;\n","import { Paths } from '../paths';\nimport { stringify } from 'query-string';\n\nconst useRedirect = (history, path) => query => {\n    const search = stringify(query, { arrayFormat: 'bracket' });\n    history.push({\n        pathname: Paths[path],\n        search\n    });\n};\n\nexport default useRedirect;\n","var map = {\n\t\"./af\": 189,\n\t\"./af.js\": 189,\n\t\"./ar\": 190,\n\t\"./ar-dz\": 191,\n\t\"./ar-dz.js\": 191,\n\t\"./ar-kw\": 192,\n\t\"./ar-kw.js\": 192,\n\t\"./ar-ly\": 193,\n\t\"./ar-ly.js\": 193,\n\t\"./ar-ma\": 194,\n\t\"./ar-ma.js\": 194,\n\t\"./ar-sa\": 195,\n\t\"./ar-sa.js\": 195,\n\t\"./ar-tn\": 196,\n\t\"./ar-tn.js\": 196,\n\t\"./ar.js\": 190,\n\t\"./az\": 197,\n\t\"./az.js\": 197,\n\t\"./be\": 198,\n\t\"./be.js\": 198,\n\t\"./bg\": 199,\n\t\"./bg.js\": 199,\n\t\"./bm\": 200,\n\t\"./bm.js\": 200,\n\t\"./bn\": 201,\n\t\"./bn.js\": 201,\n\t\"./bo\": 202,\n\t\"./bo.js\": 202,\n\t\"./br\": 203,\n\t\"./br.js\": 203,\n\t\"./bs\": 204,\n\t\"./bs.js\": 204,\n\t\"./ca\": 205,\n\t\"./ca.js\": 205,\n\t\"./cs\": 206,\n\t\"./cs.js\": 206,\n\t\"./cv\": 207,\n\t\"./cv.js\": 207,\n\t\"./cy\": 208,\n\t\"./cy.js\": 208,\n\t\"./da\": 209,\n\t\"./da.js\": 209,\n\t\"./de\": 210,\n\t\"./de-at\": 211,\n\t\"./de-at.js\": 211,\n\t\"./de-ch\": 212,\n\t\"./de-ch.js\": 212,\n\t\"./de.js\": 210,\n\t\"./dv\": 213,\n\t\"./dv.js\": 213,\n\t\"./el\": 214,\n\t\"./el.js\": 214,\n\t\"./en-SG\": 215,\n\t\"./en-SG.js\": 215,\n\t\"./en-au\": 216,\n\t\"./en-au.js\": 216,\n\t\"./en-ca\": 217,\n\t\"./en-ca.js\": 217,\n\t\"./en-gb\": 218,\n\t\"./en-gb.js\": 218,\n\t\"./en-ie\": 219,\n\t\"./en-ie.js\": 219,\n\t\"./en-il\": 220,\n\t\"./en-il.js\": 220,\n\t\"./en-nz\": 221,\n\t\"./en-nz.js\": 221,\n\t\"./eo\": 222,\n\t\"./eo.js\": 222,\n\t\"./es\": 223,\n\t\"./es-do\": 224,\n\t\"./es-do.js\": 224,\n\t\"./es-us\": 225,\n\t\"./es-us.js\": 225,\n\t\"./es.js\": 223,\n\t\"./et\": 226,\n\t\"./et.js\": 226,\n\t\"./eu\": 227,\n\t\"./eu.js\": 227,\n\t\"./fa\": 228,\n\t\"./fa.js\": 228,\n\t\"./fi\": 229,\n\t\"./fi.js\": 229,\n\t\"./fo\": 230,\n\t\"./fo.js\": 230,\n\t\"./fr\": 231,\n\t\"./fr-ca\": 232,\n\t\"./fr-ca.js\": 232,\n\t\"./fr-ch\": 233,\n\t\"./fr-ch.js\": 233,\n\t\"./fr.js\": 231,\n\t\"./fy\": 234,\n\t\"./fy.js\": 234,\n\t\"./ga\": 235,\n\t\"./ga.js\": 235,\n\t\"./gd\": 236,\n\t\"./gd.js\": 236,\n\t\"./gl\": 237,\n\t\"./gl.js\": 237,\n\t\"./gom-latn\": 238,\n\t\"./gom-latn.js\": 238,\n\t\"./gu\": 239,\n\t\"./gu.js\": 239,\n\t\"./he\": 240,\n\t\"./he.js\": 240,\n\t\"./hi\": 241,\n\t\"./hi.js\": 241,\n\t\"./hr\": 242,\n\t\"./hr.js\": 242,\n\t\"./hu\": 243,\n\t\"./hu.js\": 243,\n\t\"./hy-am\": 244,\n\t\"./hy-am.js\": 244,\n\t\"./id\": 245,\n\t\"./id.js\": 245,\n\t\"./is\": 246,\n\t\"./is.js\": 246,\n\t\"./it\": 247,\n\t\"./it-ch\": 248,\n\t\"./it-ch.js\": 248,\n\t\"./it.js\": 247,\n\t\"./ja\": 249,\n\t\"./ja.js\": 249,\n\t\"./jv\": 250,\n\t\"./jv.js\": 250,\n\t\"./ka\": 251,\n\t\"./ka.js\": 251,\n\t\"./kk\": 252,\n\t\"./kk.js\": 252,\n\t\"./km\": 253,\n\t\"./km.js\": 253,\n\t\"./kn\": 254,\n\t\"./kn.js\": 254,\n\t\"./ko\": 255,\n\t\"./ko.js\": 255,\n\t\"./ku\": 256,\n\t\"./ku.js\": 256,\n\t\"./ky\": 257,\n\t\"./ky.js\": 257,\n\t\"./lb\": 258,\n\t\"./lb.js\": 258,\n\t\"./lo\": 259,\n\t\"./lo.js\": 259,\n\t\"./lt\": 260,\n\t\"./lt.js\": 260,\n\t\"./lv\": 261,\n\t\"./lv.js\": 261,\n\t\"./me\": 262,\n\t\"./me.js\": 262,\n\t\"./mi\": 263,\n\t\"./mi.js\": 263,\n\t\"./mk\": 264,\n\t\"./mk.js\": 264,\n\t\"./ml\": 265,\n\t\"./ml.js\": 265,\n\t\"./mn\": 266,\n\t\"./mn.js\": 266,\n\t\"./mr\": 267,\n\t\"./mr.js\": 267,\n\t\"./ms\": 268,\n\t\"./ms-my\": 269,\n\t\"./ms-my.js\": 269,\n\t\"./ms.js\": 268,\n\t\"./mt\": 270,\n\t\"./mt.js\": 270,\n\t\"./my\": 271,\n\t\"./my.js\": 271,\n\t\"./nb\": 272,\n\t\"./nb.js\": 272,\n\t\"./ne\": 273,\n\t\"./ne.js\": 273,\n\t\"./nl\": 274,\n\t\"./nl-be\": 275,\n\t\"./nl-be.js\": 275,\n\t\"./nl.js\": 274,\n\t\"./nn\": 276,\n\t\"./nn.js\": 276,\n\t\"./pa-in\": 277,\n\t\"./pa-in.js\": 277,\n\t\"./pl\": 278,\n\t\"./pl.js\": 278,\n\t\"./pt\": 279,\n\t\"./pt-br\": 280,\n\t\"./pt-br.js\": 280,\n\t\"./pt.js\": 279,\n\t\"./ro\": 281,\n\t\"./ro.js\": 281,\n\t\"./ru\": 282,\n\t\"./ru.js\": 282,\n\t\"./sd\": 283,\n\t\"./sd.js\": 283,\n\t\"./se\": 284,\n\t\"./se.js\": 284,\n\t\"./si\": 285,\n\t\"./si.js\": 285,\n\t\"./sk\": 286,\n\t\"./sk.js\": 286,\n\t\"./sl\": 287,\n\t\"./sl.js\": 287,\n\t\"./sq\": 288,\n\t\"./sq.js\": 288,\n\t\"./sr\": 289,\n\t\"./sr-cyrl\": 290,\n\t\"./sr-cyrl.js\": 290,\n\t\"./sr.js\": 289,\n\t\"./ss\": 291,\n\t\"./ss.js\": 291,\n\t\"./sv\": 292,\n\t\"./sv.js\": 292,\n\t\"./sw\": 293,\n\t\"./sw.js\": 293,\n\t\"./ta\": 294,\n\t\"./ta.js\": 294,\n\t\"./te\": 295,\n\t\"./te.js\": 295,\n\t\"./tet\": 296,\n\t\"./tet.js\": 296,\n\t\"./tg\": 297,\n\t\"./tg.js\": 297,\n\t\"./th\": 298,\n\t\"./th.js\": 298,\n\t\"./tl-ph\": 299,\n\t\"./tl-ph.js\": 299,\n\t\"./tlh\": 300,\n\t\"./tlh.js\": 300,\n\t\"./tr\": 301,\n\t\"./tr.js\": 301,\n\t\"./tzl\": 302,\n\t\"./tzl.js\": 302,\n\t\"./tzm\": 303,\n\t\"./tzm-latn\": 304,\n\t\"./tzm-latn.js\": 304,\n\t\"./tzm.js\": 303,\n\t\"./ug-cn\": 305,\n\t\"./ug-cn.js\": 305,\n\t\"./uk\": 306,\n\t\"./uk.js\": 306,\n\t\"./ur\": 307,\n\t\"./ur.js\": 307,\n\t\"./uz\": 308,\n\t\"./uz-latn\": 309,\n\t\"./uz-latn.js\": 309,\n\t\"./uz.js\": 308,\n\t\"./vi\": 310,\n\t\"./vi.js\": 310,\n\t\"./x-pseudo\": 311,\n\t\"./x-pseudo.js\": 311,\n\t\"./yo\": 312,\n\t\"./yo.js\": 312,\n\t\"./zh-cn\": 313,\n\t\"./zh-cn.js\": 313,\n\t\"./zh-hk\": 314,\n\t\"./zh-hk.js\": 314,\n\t\"./zh-tw\": 315,\n\t\"./zh-tw.js\": 315\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 352;","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Switch as PFSwitch } from '@patternfly/react-core';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  overflow: auto;\n  width: 100%;\n  height: ${props => props.height};\n`;\n\nconst LegendDetail = styled.div`\n  display: flex;\n  padding: 7.5px 15px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  overflow: auto;\n`;\n\nconst Color = styled.div.attrs(props => ({\n    color: props.color || 'black'\n}))`\n  min-width: 12px;\n  height: 12px;\n  background: ${props => props.color};\n  margin-right: 20px;\n`;\n\nconst Title = styled.span`\n  font-size: 15px;\n  display: inline-block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n`;\n\nconst SubTitle = styled.span`\n  font-size: 15px;\n  margin-left: 20px;\n`;\n\nconst Switch = styled(PFSwitch)`\n  margin-left: 20px;\n\n  svg {\n    display: none;\n  }\n`;\n\nconst Legend = ({\n    data,\n    selected,\n    height,\n    onToggle\n}) => {\n    const handleChange = (_isChecked, { target: { value }}) => { onToggle(parseFloat(value)); };\n\n    return (\n        <Container height={ height }>\n            { data.map(\n                ({ name, value, id, count }, index) => (\n                    <LegendDetail key={ index }>\n                        <Wrapper>\n                            <Color color={ value } />\n                            <Title>{ name }</Title>\n                        </Wrapper>\n                        { count && (\n                            <SubTitle>{ count }</SubTitle>\n                        ) }\n                        { selected && (\n                            <Switch\n                                isChecked={ selected.some(selection => selection === id) }\n                                onChange={ handleChange }\n                                aria-label={ name }\n                                value={ id }\n                                key={ index }\n                            />\n                        ) }\n                    </LegendDetail>\n                )) }\n        </Container>\n    );\n};\n\nLegend.propTypes = {\n    data: PropTypes.array,\n    selected: PropTypes.array,\n    onToggle: PropTypes.func,\n    height: PropTypes.string\n};\n\nexport default Legend;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport styled from 'styled-components';\n\nimport initializeChart from '.././BaseChart';\nimport Legend from '../../Utilities/Legend';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nconst formatDate = date => {\n    const pieces = date.split('-');\n    return `${pieces[1]}/${pieces[2]}`;\n};\n\nconst GroupedBarChart = ({\n    onClick = null,\n    TooltipClass,\n    ...props\n}) => {\n    const orgsList = props.data[0].items;\n    const colors = orgsList.map(org => {\n        const name = org.id === -1 ? 'Others' : org.name;\n        return {\n            name,\n            value: props.colorFunc(name),\n            id: org.id\n        };\n    });\n    const [ selectedIds, setSelectedIds ] = useState(\n        orgsList.map(({ id }) => id).slice(0, 8)\n    );\n    let timeout = null;\n\n    const handleToggle = id => {\n        if (selectedIds.includes(id)) {\n            setSelectedIds(selectedIds.filter(el => el !== id));\n        } else {\n            setSelectedIds([ ...selectedIds, id ]);\n        }\n    };\n\n    const draw = () => {\n        // Clear our chart container element first\n        d3.selectAll('#' + props.id + ' > *').remove();\n        let { data: unformattedData, timeFrame } = props;\n        const data = unformattedData.reduce((formatted, { date, items }) => {\n            const selectedOrgs = items.filter(({ id }) => selectedIds.includes(id));\n            return formatted.concat({ date, selectedOrgs });\n        }, []);\n        const width = props.getWidth();\n        const height = props.getHeight();\n        // x scale of entire chart\n        const x0 = d3\n        .scaleBand()\n        .range([ 0, width ])\n        .padding(0.35);\n        // x scale of individual grouped bars\n        const x1 = d3.scaleBand();\n        const y = d3.scaleLinear().range([ height, 0 ]);\n        // format our X Axis ticks\n        const maxTicks = Math.round(data.length / (timeFrame / 2));\n        let ticks = data.map(d => d.date);\n        if (timeFrame === 31) {\n            ticks = data\n            .map((d, i) => (i % maxTicks === 0 ? d.date : undefined))\n            .filter(item => item);\n        }\n\n        const xAxis = d3\n        .axisBottom(x0)\n        .tickValues(ticks)\n        .tickFormat(formatDate);\n\n        const yAxis = d3\n        .axisLeft(y)\n        .ticks(8)\n        .tickSize(-width, 0, 0);\n\n        const svg = d3\n        .select('#' + props.id)\n        .append('svg')\n        .attr('width', width + props.margin.left + props.margin.right)\n        .attr('height', height + props.margin.bottom + props.margin.top)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          props.margin.left +\n          ',' +\n          props.margin.top +\n          ')'\n        );\n\n        const dates = data.map(d => d.date);\n        const selectedOrgNames = data[0].selectedOrgs.map(d => d.name);\n        const tooltip = new TooltipClass({\n            svg: '#' + props.id\n        });\n        x0.domain(dates);\n        x1.domain(selectedOrgNames).range([ 0, x0.bandwidth() ]); // unsorted\n        y.domain([\n            0,\n            d3.max(data, date => d3.max(date.selectedOrgs, d => d.value * 1.15)) || 8\n        ]);\n\n        // add y axis\n        svg\n        .append('g')\n        .attr('class', 'y axis')\n        .call(yAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7')\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 6)\n        .attr('dy', '.71em')\n        .style('text-anchor', 'end')\n        .style('font-weight', 'bold')\n        .text('Value');\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text(props.yLabel);\n\n        // add x axis\n        svg\n        .append('g')\n        .attr('class', 'x axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(xAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' + width / 2 + ' ,' + (height + props.margin.top + 25) + ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n        // add the groups\n        let slice = svg.selectAll('.slice').data(data);\n        slice.exit().remove();\n\n        const enter = slice\n        .enter()\n        .append('g')\n        .attr('class', 'g foo')\n        .attr('transform', d => 'translate(' + x0(d.date) + ',0)');\n        slice = slice.merge(enter);\n        // add the individual bars\n        let bars = slice.selectAll('rect').data(function(d) {\n            return d.selectedOrgs;\n        });\n        bars.exit().remove();\n\n        const color = props.colorFunc;\n        const subEnter = bars\n        .enter()\n        .append('rect')\n        .attr('width', x1.bandwidth())\n        .attr('x', function(d) {\n            return x1(d.name);\n        }) // unsorted\n        .style('fill', function(d) {\n            return color(d.name);\n        })\n        .attr('y', function(d) {\n            return y(d.value);\n        })\n        .attr('height', function(d) {\n            return height - y(d.value);\n        })\n        .on('mouseover', function(d) {\n            d3.select(this).style('cursor', onClick ? 'pointer' : 'default');\n            d3.select(this).style('fill', d3.rgb(color(d.name)).darker(1));\n            tooltip.handleMouseOver();\n        })\n        .on('mousemove', tooltip.handleMouseOver)\n        .on('mouseout', function(d) {\n            d3.select(this).style('fill', color(d.name));\n            tooltip.handleMouseOut();\n        })\n        .on('click', onClick);\n        bars = bars.merge(subEnter);\n    };\n\n    const init = () => {\n        draw();\n    };\n\n    const resize = () => {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => { draw(); }, 500);\n    };\n\n    useEffect(() => {\n        init();\n        window.addEventListener('resize', resize);\n\n        return () => {\n            clearTimeout(timeout);\n            window.removeEventListener('resize', resize);\n        };\n    }, []);\n\n    useEffect(() => { draw(); }, [ props.data, selectedIds ]);\n\n    return (\n        <Wrapper>\n            <div id={ props.id } />\n            { colors.length > 0 && (\n                <Legend\n                    id={ `${props.id}-legend` }\n                    data={ colors }\n                    selected={ selectedIds }\n                    onToggle={ handleToggle }\n                    height=\"350px\"\n                />\n            ) }\n        </Wrapper>\n    );\n};\n\nGroupedBarChart.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    timeFrame: PropTypes.number,\n    colorFunc: PropTypes.func,\n    yLabel: PropTypes.string,\n    onClick: PropTypes.func,\n    TooltipClass: PropTypes.any.isRequired\n};\n\nexport default initializeChart(GroupedBarChart);\n","import * as d3 from 'd3';\n\nconst formatDate = date => {\n    const pieces = date.split('-');\n    return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class OrgsTooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        this.draw();\n    }\n\n    draw() {\n        this.width = 125;\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 125;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', 68)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.date = this.toolTipBase\n        .append('text')\n        .attr('x', 20)\n        .attr('y', 14)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Date');\n        this.jobs = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 72)\n        .attr('y', 14)\n        .text('0 Jobs');\n        this.orgName = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', -1)\n        .attr('font-size', 12)\n        .text('Org');\n        this.clickMore = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 20)\n        .attr('y', 30)\n        .attr('font-size', 12)\n        .text('Click for details');\n    }\n\n  handleMouseOver = d => {\n      let date;\n      let orgName;\n      let jobs;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      if (!d) {\n          return;\n      } else {\n          const maxLength = 16;\n          date = d.date;\n          orgName = d.name;\n          jobs = d.value;\n          if (d.name.length > maxLength) {\n              orgName = d.name.slice(0, maxLength).concat('...');\n          }\n      }\n\n      const formatTooltipDate = formatDate;\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n\n      this.date.text('' + formatTooltipDate(date));\n      this.orgName.text('' + orgName);\n      this.jobs.text('' + jobs + ' Jobs');\n      this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n      const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n      const threshold = 45;\n      const overage = maxTextPerc / threshold;\n      let adjustedWidth;\n      if (maxTextPerc > threshold) {\n          adjustedWidth = this.boxWidth * overage;\n      } else {\n          adjustedWidth = this.boxWidth;\n      }\n\n      this.boundingBox.attr('width', adjustedWidth);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n          this.boundingBox.attr('x', -adjustedWidth - 20);\n          this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n          this.orgName.attr('x', -adjustedWidth - 7);\n          this.clickMore.attr('x', -adjustedWidth - 7);\n          this.date.attr('x', -adjustedWidth - 7);\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n          this.boundingBox.attr('x', 10);\n          this.orgName.attr('x', 20);\n          this.clickMore.attr('x', 20);\n          this.jobs.attr('x', adjustedWidth / 2);\n          this.date.attr('x', 20);\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import * as d3 from 'd3';\n\nconst formatDate = date => {\n    const pieces = date.split('-');\n    return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class HostsTooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        this.draw();\n    }\n\n    draw() {\n        this.width = 125;\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 125;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', 68)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.date = this.toolTipBase\n        .append('text')\n        .attr('x', 20)\n        .attr('y', 14)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Date');\n        this.jobs = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 72)\n        .attr('y', 14)\n        .text('0 Jobs');\n        this.orgName = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', -1)\n        .attr('font-size', 12)\n        .text('Org');\n        this.clickMore = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 20)\n        .attr('y', 30)\n        .attr('font-size', 12)\n        .text('Click for details');\n    }\n\n  handleMouseOver = d => {\n      let date;\n      let orgName;\n      let jobs;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      if (!d) {\n          return;\n      } else {\n          const maxLength = 16;\n          date = d.date;\n          orgName = d.name;\n          jobs = d.value;\n          if (d.name.length > maxLength) {\n              orgName = d.name.slice(0, maxLength).concat('...');\n          }\n      }\n\n      const formatTooltipDate = formatDate;\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n\n      this.date.text('' + formatTooltipDate(date));\n      this.orgName.text('' + orgName);\n      this.jobs.text('' + jobs + ' Hosts');\n      this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n      const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n      const threshold = 45;\n      const overage = maxTextPerc / threshold;\n      let adjustedWidth;\n      if (maxTextPerc > threshold) {\n          adjustedWidth = this.boxWidth * overage;\n      } else {\n          adjustedWidth = this.boxWidth;\n      }\n\n      this.boundingBox.attr('width', adjustedWidth);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n          this.boundingBox.attr('x', -adjustedWidth - 20);\n          this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n          this.orgName.attr('x', -adjustedWidth - 7);\n          this.clickMore.attr('x', -adjustedWidth - 7);\n          this.date.attr('x', -adjustedWidth - 7);\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n          this.boundingBox.attr('x', 10);\n          this.orgName.attr('x', 20);\n          this.clickMore.attr('x', 20);\n          this.jobs.attr('x', adjustedWidth / 2);\n          this.date.attr('x', 20);\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport { getTotal } from '../Utilities/helpers';\nimport Legend from '../Utilities/Legend';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        // defer drawing until we know the data shape\n        this.drawn = false;\n        // show the success rate or not\n        this.showSuccess = false;\n    }\n\n    draw(d) {\n    // chart1 has success rate data and chart2 does not ...\n        this.showSuccess = d && d.data && 'success_rate' in d.data ? true : false;\n        const boundingHeight = this.showSuccess ? 70 : 52;\n        const boundingWidth = this.showSuccess ? 120 : 108;\n\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBOx = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', boundingHeight)\n        .attr('width', boundingWidth)\n        .attr('fill', '#393f44');\n        this.orgName = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 0)\n        .text('Organization');\n        this.percentageTotal = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 16)\n        .text('0');\n        this.percentageSuccess = null;\n        if (this.showSuccess) {\n            this.percentageSuccess = this.toolTipBase\n            .append('text')\n            .attr('fill', 'white')\n            .attr('font-size', 12)\n            .attr('font-weight', 800)\n            .attr('x', 20)\n            .attr('y', 30)\n            .text('');\n        }\n    }\n\n  handleMouseOver = d => {\n      // treat draw() as a singleton to avoid a painted window effect\n      if (this.drawn !== true) {\n          this.draw(d);\n          this.drawn = true;\n      }\n\n      let perc;\n      let percSuccess;\n      let orgName;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      if (!d) {\n          return;\n      }\n\n      if (d && d.data) {\n          const maxLength = 16;\n          perc = d.data.percent;\n          percSuccess = d.data.success_rate;\n          orgName = d.data.name;\n          if (d.data.name.length > maxLength) {\n              orgName = d.data.name.slice(0, maxLength - 3).concat('...');\n          }\n      }\n\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n\n      this.percentageTotal.text('' + perc + '%');\n      if (percSuccess && this.percentageSuccess) {\n          this.percentageSuccess.text('(' + percSuccess + '% successful)');\n      }\n\n      this.orgName.text(' ' + orgName);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, -10) rotate(45)');\n          this.boundingBOx.attr('x', -125);\n          this.orgName.attr('x', -112);\n          this.percentageTotal.attr('x', -112);\n          if (this.showSuccess) {\n              this.percentageSuccess.attr('x', -112);\n          }\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, -10) rotate(45)');\n          this.boundingBOx.attr('x', 10);\n          this.orgName.attr('x', 20);\n          this.percentageTotal.attr('x', 20);\n          if (this.showSuccess) {\n              this.percentageSuccess.attr('x', 20);\n          }\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nconst PieChart = ({\n    data,\n    id,\n    colorFunc: color,\n    margin,\n    getWidth,\n    getHeight\n}) => {\n    const colors = data.map(org => {\n        const name = org.id === -1 ? 'Others' : org.name;\n        return {\n            id: org.id,\n            name,\n            value: color(name),\n            count: Math.round(org.count)\n        };\n    }).sort((a, b) => (a.count > b.count) ? 1 : ((b.count > a.count) ? -1 : 0));\n\n    const [ selectedIds, setSelectedIds ] = useState(\n        data.map(({ id }) => id).slice(0, 8));\n\n    let timeout = null;\n\n    const handleToggle = id => {\n        if (selectedIds.includes(id)) {\n            setSelectedIds(selectedIds.filter(el => el !== id));\n        } else {\n            setSelectedIds([ ...selectedIds, id ]);\n        }\n    };\n\n    const draw = () => {\n        d3.selectAll('#' + id + ' > *').remove();\n        const width = getWidth();\n        const height = getHeight();\n        const svg = d3\n        .select('#' + id)\n        .append('svg')\n        .attr('width', width + margin.left + margin.right)\n        .attr('height', height + margin.bottom)\n        .append('g');\n\n        svg.append('g').attr('class', 'slices');\n        svg.append('g').attr('class', 'labels');\n        svg.append('g').attr('class', 'lines');\n        const radius = Math.min(width, height) / 2;\n        const filteredData = data.filter(({ id }) => selectedIds.includes(id));\n        const total = getTotal(filteredData);\n        filteredData.forEach(function(d) {\n            d.count = +d.count;\n            d.percent = +Math.round((d.count / total) * 100);\n        });\n        const donutTooltip = new Tooltip({\n            svg: '#' + id\n        });\n        const pie = d3\n        .pie()\n        .sort(null)\n        .value(d => d.count);\n        const arc = d3\n        .arc()\n        .outerRadius(radius - 10) // controls top positioning of chart\n        .innerRadius(0);\n\n        svg.attr(\n            'transform',\n            'translate(' +\n        (width + margin.left + margin.right) / 2 +\n        ',' +\n        (height + margin.top + margin.bottom) / 2 +\n        ')'\n        );\n\n        svg\n        .selectAll('path')\n        .data(pie(filteredData))\n        .enter()\n        .append('path')\n        .attr('d', arc)\n        .attr('fill', d => color(d.data.name));\n\n        svg\n        .selectAll('path')\n        .on('mouseover', function(d) {\n            d3.select(this).style('fill', d3.rgb(color(d.data.name)).darker(1));\n            donutTooltip.handleMouseOver(d);\n        })\n        .on('mouseout', function(d) {\n            d3.select(this).style('fill', color(d.data.name));\n            donutTooltip.handleMouseOut();\n        })\n        .on('mousemove', donutTooltip.handleMouseOver);\n\n        svg.append('g').classed('labels', true);\n        svg.append('g').classed('lines', true);\n    };\n\n    const init = () => {\n        draw();\n    };\n\n    const resize = () => {\n        clearTimeout(timeout);\n        timeout = setTimeout(() => { draw(); }, 500);\n    };\n\n    useEffect(() => {\n        init();\n        window.addEventListener('resize', resize);\n\n        return () => {\n            clearTimeout(timeout);\n            window.removeEventListener('resize', resize);\n        };\n    }, []);\n\n    useEffect(() => { draw(); }, [ data, selectedIds ]);\n\n    return (\n        <Wrapper>\n            <div id={ id } />\n            { colors.length > 0 && (\n                <Legend\n                    id={ `${id}-legend` }\n                    data={ colors }\n                    selected={ selectedIds }\n                    onToggle={ handleToggle }\n                    height=\"300px\"\n                />\n            ) }\n        </Wrapper>\n    );\n};\n\nPieChart.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    timeFrame: PropTypes.number,\n    colorFunc: PropTypes.func\n};\n\nexport default initializeChart(PieChart);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { formatDate as dateForJobExplorer } from '../../Utilities/helpers';\n\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport {\n    preflightRequest,\n    readJobsByDateAndOrg,\n    readHostAcrossOrg,\n    readJobRunsByOrg,\n    readJobEventsByOrg,\n    readOrgOptions\n} from '../../Api';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle,\n    Tabs,\n    Tab\n} from '@patternfly/react-core';\n\nimport {\n    GroupedBarChart,\n    OrgsTooltip,\n    HostsTooltip\n} from '../../Charts/GroupedBarChart/';\nimport PieChart from '../../Charts/PieChart';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport { organizationStatistics as constants } from '../../Utilities/constants';\n\n// For chart colors\nimport { pfmulti } from '../../Utilities/colors';\nimport { scaleOrdinal } from 'd3';\n\nconst CardTitle = styled(PFCardTitle)`\n  border-bottom: 2px solid #ebebeb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &&& {\n    min-height: 60px;\n    --pf-c-card--first-child--PaddingTop: 10px;\n    --pf-c-card__header--not-last-child--PaddingBottom: 10px;\n\n    h3 {\n      font-size: 0.875em;\n    }\n  }\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  overflow: hidden;\n\n  .pf-c-card {\n    width: 50%;\n    margin-top: 20px;\n    overflow: auto;\n  }\n\n  .pf-c-card:first-of-type {\n    margin-right: 20px;\n  }\n`;\n\nconst TopCard = styled(Card)`\n  min-height: 500px;\n`;\n\nconst colorFunc = scaleOrdinal(pfmulti);\n\nconst optionsMapper = options => {\n    const { meta, inventory_id, ...rest } = options;\n    return { ...rest, sort_by: meta.sort_by };\n};\n\nconst orgsChartMapper = attrName => ({ dates: data = []}) =>\n    data.map(({ date, items }) => ({\n        date,\n        items: items.map(({ id, [attrName]: value, name }) => ({\n            id,\n            date,\n            value,\n            name: id === -1 ? 'Others' : (name || 'No organization')\n        }))\n    }));\n\nconst pieChartMapper = attrName => ({ items = []}) =>\n    items.map(({ id, [attrName]: count, name }) => ({\n        id,\n        count,\n        name: id === -1 ? 'Others' : name || 'No organization'\n    }));\n\nconst redirectToJobExplorer = toJobExplorer => ({ date, id }) => {\n    if (id === -1) {\n        // disable clicking on \"others\" block\n        return;\n    }\n\n    const formattedDate = dateForJobExplorer(date);\n    const initialQueryParams = {\n        quick_date_range: 'custom',\n        start_date: formattedDate,\n        end_date: formattedDate,\n        status: [\n            'successful',\n            'failed',\n            'new',\n            'pending',\n            'waiting',\n            'error',\n            'canceled',\n            'running'\n        ],\n        org_id: [ id ]\n    };\n\n    toJobExplorer(initialQueryParams);\n};\n\nconst chartMapper = [\n    {\n        api: readJobsByDateAndOrg,\n        attr: 'total_count',\n        label: 'Jobs across organizations',\n        onClick: redirectToJobExplorer,\n        tooltip: OrgsTooltip\n    },\n    {\n        api: readHostAcrossOrg,\n        attr: 'total_unique_host_count',\n        label: 'Hosts across organizations',\n        onClick: () => null,\n        tooltip: HostsTooltip\n    }\n];\n\nconst OrganizationStatistics = ({ history }) => {\n    const toJobExplorer = useRedirect(history, 'jobExplorer');\n    const [ preflight, setPreflight ] = useApi(null);\n    const [ activeTabKey, setActiveTabKey ] = useState(0);\n    const [ orgs, setOrgs ] = useApi([], orgsChartMapper(chartMapper[activeTabKey].attr));\n    const [ jobs, setJobs ] = useApi([], pieChartMapper('host_count'));\n    const [ tasks, setTasks ] = useApi([], pieChartMapper('host_task_count'));\n    const [ options, setOptions ] = useApi({}, optionsMapper);\n    const { queryParams, setFromToolbar } = useQueryParams(\n        constants.defaultParams\n    );\n\n    const handleTabClick = (_, tabIndex) => { setActiveTabKey(tabIndex); };\n\n    useEffect(() => {\n        insights.chrome.appNavClick({\n            id: 'organization-statistics',\n            secondaryNav: true\n        });\n        setPreflight(preflightRequest());\n        setOptions(readOrgOptions({ params: queryParams }));\n    }, []);\n\n    useEffect(() => {\n        const apiPromise = chartMapper[activeTabKey].api;\n        setOrgs(apiPromise({ params: queryParams }));\n    }, [ queryParams, activeTabKey ]);\n\n    useEffect(() => {\n        setJobs(readJobRunsByOrg({ params: queryParams }));\n        setTasks(readJobEventsByOrg({ params: queryParams }));\n    }, [ queryParams ]);\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={'Organization Statistics'} />\n                <FilterableToolbar\n                    categories={options.data}\n                    filters={queryParams}\n                    setFilters={setFromToolbar}\n                />\n            </PageHeader>\n            {preflight.error && (\n                <Main>\n                    <EmptyState preflightError={preflight.error} />\n                </Main>\n            )}\n            {preflight.isSuccess && (\n                <React.Fragment>\n                    <Main>\n                        <TopCard>\n                            <Tabs activeKey={ activeTabKey } onSelect={ handleTabClick }>\n                                <Tab eventKey={ 0 } title={ 'Orgs' }/>\n                                <Tab eventKey={ 1 } title={ 'Hosts' }/>\n                            </Tabs>\n                            <CardBody>\n                                {orgs.isLoading && <LoadingState />}\n                                {orgs.error && <ApiErrorState message={orgs.error.error} />}\n                                {orgs.isSuccess && orgs.data.length <= 0 && <NoData />}\n                                {orgs.isSuccess && orgs.data.length > 0 && (\n                                    <GroupedBarChart\n                                        margin={{ top: 20, right: 20, bottom: 50, left: 50 }}\n                                        id=\"d3-grouped-bar-chart-root\"\n                                        data={ orgs.data }\n                                        history={ history }\n                                        timeFrame={ orgs.data .length }\n                                        colorFunc={ colorFunc }\n                                        yLabel={ chartMapper[activeTabKey].label }\n                                        onClick={ chartMapper[activeTabKey].onClick(toJobExplorer) }\n                                        TooltipClass={ chartMapper[activeTabKey].tooltip }\n                                    />\n                                )}\n                            </CardBody>\n                        </TopCard>\n                        <CardContainer>\n                            <Card>\n                                <CardBody style={{ padding: 0 }}>\n                                    <CardTitle style={{ padding: 0 }}>\n                                        <h2 style={{ marginLeft: '20px' }}>\n                                            Job Runs by Organization\n                                        </h2>\n                                    </CardTitle>\n                                    {jobs.isLoading && <LoadingState />}\n                                    {jobs.error && <ApiErrorState message={jobs.error.error} />}\n                                    {jobs.isSuccess && jobs.data.length <= 0 && <NoData />}\n                                    {jobs.isSuccess && jobs.data.length > 0 && (\n                                        <PieChart\n                                            margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                                            id=\"d3-donut-1-chart-root\"\n                                            data={jobs.data}\n                                            timeFrame={jobs.data.length}\n                                            colorFunc={colorFunc}\n                                        />\n                                    )}\n                                </CardBody>\n                            </Card>\n                            <Card>\n                                <CardBody style={{ padding: 0 }}>\n                                    <CardTitle style={{ padding: 0 }}>\n                                        <h2 style={{ marginLeft: '20px' }}>\n                                            Usage by Organization (Tasks)\n                                        </h2>\n                                    </CardTitle>\n                                    {tasks.isLoading && <LoadingState />}\n                                    {tasks.error && <ApiErrorState message={tasks.error.error} />}\n                                    {tasks.isSuccess && tasks.data.length <= 0 && <NoData />}\n                                    {tasks.isSuccess && tasks.data.length > 0 && (\n                                        <PieChart\n                                            margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                                            id=\"d3-donut-2-chart-root\"\n                                            data={tasks.data}\n                                            timeFrame={tasks.data.length}\n                                            colorFunc={colorFunc}\n                                        />\n                                    )}\n                                </CardBody>\n                            </Card>\n                        </CardContainer>\n                    </Main>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n};\n\nOrganizationStatistics.propTypes = {\n    history: PropTypes.object\n};\n\nexport default OrganizationStatistics;\n","var pfmulti = [\n    '#06C',\n    '#4CB140',\n    '#009596',\n    '#5752D1',\n    '#F4C145',\n    '#EC7A08',\n    '#8BC1F7',\n    '#23511E',\n    '#A2D9D9',\n    '#2A265F',\n    '#F9E0A2',\n    '#8F4700',\n    '#002F5D'\n];\nexport { pfmulti };\n","import * as d3 from 'd3';\n\nclass Tooltip {\n    constructor(opts) {\n        this.svg = opts.svg;\n        this.colors = opts.colors;\n        this.draw();\n    }\n\n    draw() {\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 145;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, -10) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -41)\n        .attr('rx', 2)\n        .attr('height', 110)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.circleSuccess = this.toolTipBase\n        .append('circle')\n        .attr('cx', 26)\n        .attr('cy', 0)\n        .attr('r', 8)\n        .attr('stroke', 'white')\n        .attr('fill', 'white');\n        this.circleFail = this.toolTipBase\n        .append('circle')\n        .attr('cx', 26)\n        .attr('cy', 26)\n        .attr('r', 8)\n        .attr('stroke', 'white')\n        .attr('fill', 'white');\n        this.successText = this.toolTipBase\n        .append('text')\n        .attr('x', 43)\n        .attr('y', 4)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Successful');\n        this.failText = this.toolTipBase\n        .append('text')\n        .attr('x', 43)\n        .attr('y', 28)\n        .attr('font-size', 12)\n        .attr('fill', 'white')\n        .text('Failed');\n        this.successIcon = this.toolTipBase\n        .append('text')\n        .attr('class', 'fas fa-sm')\n        .attr('fill', this.colors(1))\n        .attr('x', 19)\n        .attr('y', 5)\n        .text('\\uf058');\n        this.failedIcon = this.toolTipBase\n        .append('text')\n        .attr('class', 'fas fa-sm')\n        .attr('fill', this.colors(0))\n        .attr('x', 20)\n        .attr('y', 31)\n        .text('\\uf06a');\n        this.jobs = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 137)\n        .attr('y', -21)\n        .attr('font-size', 12)\n        .attr('text-anchor', 'end')\n        .text('No jobs');\n        this.successful = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 122)\n        .attr('y', 4)\n        .text('0');\n        this.failed = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 122)\n        .attr('y', 28)\n        .text('0');\n        this.date = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('stroke', 'white')\n        .attr('x', 20)\n        .attr('y', -21)\n        .attr('font-size', 12)\n        .text('Never');\n        this.clickMore = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('x', 20)\n        .attr('y', 55)\n        .attr('font-size', 12)\n        .text('Click for details');\n    }\n\n  handleMouseOver = d => {\n      let success = 0;\n      let fail = 0;\n      let total = 0;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      10;\n      const formatTooltipDate = d3.timeFormat('%m/%d');\n      if (!d) {\n          return;\n      }\n\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n      if (d) {\n          success = d.RAN || 0;\n          fail = d.FAIL || 0;\n          total = d.TOTAL || 0;\n          this.date.text(formatTooltipDate(d.DATE || null));\n      }\n\n      if (d && d.data) {\n          success = d.data.RAN || 0;\n          fail = d.data.FAIL || 0;\n          total = d.data.TOTAL || 0;\n          this.date.text(formatTooltipDate(d.data.DATE || null));\n      }\n\n      this.jobs.text('' + total + ' jobs');\n      this.jobsWidth = this.jobs.node().getComputedTextLength();\n      this.failed.text('' + fail);\n      this.successful.text('' + success);\n      this.successTextWidth = this.successful.node().getComputedTextLength();\n      this.failTextWidth = this.failed.node().getComputedTextLength();\n\n      const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n      const threshold = 40;\n      const overage = maxTextPerc / threshold;\n      let adjustedWidth;\n      if (maxTextPerc > threshold) {\n          adjustedWidth = this.boxWidth * overage;\n      } else {\n          adjustedWidth = this.boxWidth;\n      }\n\n      this.boundingBox.attr('width', adjustedWidth);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n          this.boundingBox.attr('x', -adjustedWidth - 20);\n          this.circleSuccess.attr('cx', -adjustedWidth);\n          this.circleFail.attr('cx', -adjustedWidth);\n          this.failedIcon.attr('x', -adjustedWidth - 7);\n          this.successIcon.attr('x', -adjustedWidth - 7);\n          this.successText.attr('x', -adjustedWidth + 17);\n          this.failText.attr('x', -adjustedWidth + 17);\n          this.successful.attr('x', -this.successTextWidth - 20 - 12);\n          this.failed.attr('x', -this.failTextWidth - 20 - 12);\n          this.date.attr('x', -adjustedWidth - 5);\n          this.jobs.attr('x', -this.jobsWidth / 2 - 7);\n          this.clickMore.attr('x', -adjustedWidth);\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n          this.boundingBox.attr('x', 10);\n          this.circleSuccess.attr('cx', 26);\n          this.circleFail.attr('cx', 26);\n          this.failedIcon.attr('x', 19);\n          this.successIcon.attr('x', 19);\n          this.successText.attr('x', 43);\n          this.failText.attr('x', 43);\n          this.successful.attr('x', adjustedWidth - this.successTextWidth);\n          this.failed.attr('x', adjustedWidth - this.failTextWidth);\n          this.date.attr('x', 20);\n          this.jobs.attr('x', adjustedWidth);\n          this.clickMore.attr('x', 20);\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nexport default Tooltip;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { stringify } from 'query-string';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\n\nclass BarChart extends Component {\n    constructor(props) {\n        super(props);\n        this.draw = this.draw.bind(this);\n        this.init = this.init.bind(this);\n        this.resize = this.resize.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.state = {\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    redirectToJobExplorer({ data: { DATE: date }}) {\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const { orgId, templateId } = this.props;\n        const initialQueryParams = {\n            start_date: formattedDate,\n            end_date: formattedDate,\n            quick_date_range: 'custom',\n            status: [ 'failed', 'successful' ],\n            template_id: templateId,\n            org_id: orgId\n        };\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    }\n\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => {\n                this.init();\n            }, 500)\n        });\n    }\n\n    init() {\n        this.draw();\n    }\n\n    // Methods\n    draw() {\n    // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const parseTime = d3.timeParse('%Y-%m-%d');\n        let { data: unformattedData } = this.props;\n        const data = unformattedData.reduce(\n            (formatted, { created_date, successful_count, failed_count }) => {\n                let DATE = parseTime(created_date) || new Date();\n                let RAN = +successful_count || 0;\n                let FAIL = +failed_count || 0;\n                let TOTAL = +successful_count + failed_count || 0;\n                return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n            },\n            []\n        );\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n        const x = d3\n        .scaleBand()\n        .rangeRound([ 0, width ])\n        .padding(0.35); // percentage\n        const y = d3.scaleLinear().range([ height, 0 ]);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n        //[fail, success]\n        let colors = d3.scaleOrdinal([ '#6EC664', '#A30000' ]);\n\n        const barTooltip = new Tooltip({\n            svg: '#' + this.props.id,\n            colors\n        });\n        const status = [ 'FAIL', 'RAN' ];\n\n        // stack our data\n        const stack = d3\n        .stack()\n        .keys(status)\n        .order(d3.stackOrderNone)\n        .offset(d3.stackOffsetNone);\n\n        const layers = stack(data);\n        // Scale the range of the data\n        x.domain(layers[0].map(d => d.data.DATE));\n        y.domain([ 0, d3.max(layers[layers.length - 1], d => d[1] * 1.15) || 8 ]);\n        // Add the Y Axis\n        svg\n        .append('g')\n        .attr('class', 'y-axis')\n        .call(d3.axisLeft(y).tickSize(-width, 0, 0))\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.y-axis .tick text').attr('x', -5);\n        // text label for the y axis\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Jobs across all clusters');\n        // Add the X Axis\n        let ticks;\n        const maxTicks = Math.round(data.length / (data.length / 2));\n        ticks = data.map(d => d.DATE);\n        if (data.length > 14) {\n            ticks = data\n            .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n            .filter(item => item);\n        }\n\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(\n            d3\n            .axisBottom(x)\n            .tickValues(ticks)\n            .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n        // text label for the x axis\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n\n        const layer = svg\n        .selectAll('layer')\n        .data(layers)\n        .enter()\n        .append('g')\n        .attr('class', 'layer')\n        .style('fill', (_d, i) => colors(i));\n        layer\n        .selectAll('rect')\n        .data(d => d)\n        .enter()\n        .append('rect')\n        .attr('x', d => x(d.data.DATE))\n        .attr('y', d => y(d[0]))\n        .attr('height', 0)\n        .attr('width', x.bandwidth() - 1)\n        .transition()\n        .duration(550)\n        .ease(d3.easeCubic)\n        .attr('y', d => y(d[1]))\n        .attr('height', d => y(d[0]) - y(d[1]));\n        layer\n        .selectAll('rect')\n        .on('mouseover', barTooltip.handleMouseOver)\n        .on('mousemove', barTooltip.handleMouseOver)\n        .on('mouseout', barTooltip.handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.data !== this.props.data) {\n            this.init();\n        }\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        return <div id={this.props.id} />;\n    }\n}\n\nBarChart.propTypes = {\n    id: PropTypes.string,\n    templateId: PropTypes.array,\n    orgId: PropTypes.array,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    history: PropTypes.object\n};\n\nexport default initializeChart(withRouter(BarChart));\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport initializeChart from './BaseChart';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\nimport { stringify } from 'query-string';\nimport * as d3 from 'd3';\n\nclass LineChart extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.updateCluster = this.updateCluster.bind(this);\n        this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n        this.state = {\n            formattedData: [],\n            timeout: null\n        };\n    }\n\n    redirectToJobExplorer({ DATE: date }) {\n        const { jobExplorer } = Paths;\n        const formattedDate = formatDate(date);\n        const { clusterId, templateId, orgId } = this.props;\n        const initialQueryParams = {\n            start_date: formattedDate,\n            end_date: formattedDate,\n            quick_date_range: 'custom',\n            status: [ 'failed', 'successful' ],\n            cluster_id: clusterId,\n            org_id: orgId,\n            template_id: templateId\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        this.props.history.push({\n            pathname: jobExplorer,\n            search\n        });\n    }\n\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => {\n                this.init();\n            }, 500)\n        });\n    }\n\n    updateCluster() {\n        this.init();\n    }\n    init() {\n        this.draw();\n    }\n    // Methods\n    draw() {\n    // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const width = this.props.getWidth();\n        const height = this.props.getHeight();\n\n        function transition(path) {\n            path\n            .transition()\n            .duration(1000)\n            .attrTween('stroke-dasharray', tweenDash);\n        }\n\n        function tweenDash() {\n            const l = this.getTotalLength();\n            const i = d3.interpolateString('0,' + l, l + ',' + l);\n            return function(t) {\n                return i(t);\n            };\n        }\n\n        const x = d3.scaleTime().rangeRound([ 0, width ]);\n        const y = d3.scaleLinear().range([ height, 0 ]);\n\n        //[success, fail, total]\n        let colors = d3.scaleOrdinal([ '#6EC664', '#A30000', '#06C' ]);\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n        .attr('z', 100)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n        // Tooltip\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id,\n            colors\n        });\n        const { data: unformattedData } = this.props;\n        const parseTime = d3.timeParse('%Y-%m-%d');\n\n        const data = unformattedData.reduce(\n            (formatted, { created_date, successful_count, failed_count }) => {\n                let DATE = parseTime(created_date) || new Date();\n                let RAN = +successful_count || 0;\n                let FAIL = +failed_count || 0;\n                let TOTAL = +successful_count + failed_count || 0;\n                return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n            },\n            []\n        );\n        // Scale the range of the data\n        x.domain(\n            d3.extent(data, function(d) {\n                return d.DATE;\n            })\n        );\n        y.domain([\n            0,\n            d3.max(data, function(d) {\n                return d.TOTAL * 1.15 || 8;\n            })\n        ]);\n\n        const successLine = d3\n        .line()\n        .curve(d3.curveMonotoneX)\n        .x(function(d) {\n            return x(d.DATE);\n        })\n        .y(function(d) {\n            return y(d.RAN);\n        });\n\n        const failLine = d3\n        .line()\n        .defined(d => !isNaN(d.FAIL))\n        .curve(d3.curveMonotoneX)\n        .x(function(d) {\n            return x(d.DATE);\n        })\n        .y(function(d) {\n            return y(d.FAIL);\n        });\n        // Add the Y Axis\n        svg\n        .append('g')\n        .attr('class', 'y-axis')\n        .call(\n            d3\n            .axisLeft(y)\n            .ticks(10)\n            .tickSize(-width)\n        )\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.y-axis .tick text').attr('x', -5);\n\n        // text label for the y axis\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Job runs');\n        // Add the X Axis\n        let ticks;\n        const maxTicks = Math.round(data.length / (data.length / 2));\n        ticks = data.map(d => d.DATE);\n        if (data.length > 14) {\n            ticks = data\n            .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n            .filter(item => item);\n        }\n\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(\n            d3\n            .axisBottom(x)\n            .tickValues(ticks)\n            .tickSize(-height)\n            .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n        ) // \"Jan-01\"\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7');\n        svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n        // text label for the x axis\n        svg\n        .append('text')\n        .attr(\n            'transform',\n            'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n        )\n        .style('text-anchor', 'middle')\n        .text('Date');\n        const vertical = svg\n        .append('path')\n        .attr('class', 'mouse-line')\n        .style('stroke', 'black')\n        .style('stroke-width', '3px')\n        .style('stroke-dasharray', '3, 3')\n        .style('opacity', '0');\n\n        const handleMouseOver = function(d) {\n            tooltip.handleMouseOver(d);\n            // show vertical line\n            vertical.transition().style('opacity', '1');\n        };\n\n        const handleMouseMove = function() {\n            let intersectX = this.cx.baseVal.value;\n            vertical.attr('d', function() {\n                let d = 'M' + intersectX + ',' + height;\n                d += ' ' + intersectX + ',' + 0;\n                return d;\n            });\n        };\n\n        const handleMouseOut = function() {\n            // hide tooltip\n            tooltip.handleMouseOut();\n            // hide vertical line\n            vertical.transition().style('opacity', 0);\n        };\n\n        // Add the successLine path.\n        svg\n        .append('path')\n        .data([ data ])\n        .attr('class', 'line')\n        .style('fill', 'none')\n        .style('stroke', () => colors(1))\n        .attr('stroke-width', 2)\n        .attr('d', successLine)\n        .call(transition);\n\n        // Add the failLine path.\n        svg\n        .append('path')\n        .data([ data ])\n        .attr('class', 'line')\n        .style('fill', 'none')\n        .style('stroke', () => colors(0))\n        .attr('stroke-width', 2)\n        .attr('d', failLine)\n        .call(transition);\n        svg\n        .selectAll('dot')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('r', 3)\n        .style('stroke', () => colors(1))\n        .style('fill', () => colors(1))\n        .attr('cx', function(d) {\n            return x(d.DATE);\n        })\n        .attr('cy', function(d) {\n            return y(d.RAN);\n        })\n\n        .on('mouseover', handleMouseOver)\n        .on('mousemove', handleMouseMove)\n        .on('mouseout', handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n        // create our failLine circles\n        svg\n        .selectAll('dot')\n        .data(data)\n        .enter()\n        .append('circle')\n        .attr('r', 3)\n        .style('stroke', () => colors(0))\n        .style('fill', () => colors(0))\n        .attr('cx', function(d) {\n            return x(d.DATE);\n        })\n        .attr('cy', function(d) {\n            return y(d.FAIL);\n        })\n        .on('mouseover', handleMouseOver)\n        .on('mousemove', handleMouseMove)\n        .on('mouseout', handleMouseOut)\n        .on('click', this.redirectToJobExplorer);\n    }\n\n    componentDidMount() {\n        this.updateCluster();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.data !== this.props.data) {\n            this.updateCluster();\n        }\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    render() {\n        return <div id={this.props.id} />;\n    }\n}\n\nLineChart.propTypes = {\n    id: PropTypes.string,\n    clusterId: PropTypes.array,\n    templateId: PropTypes.array,\n    orgId: PropTypes.array,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func,\n    history: PropTypes.object\n};\n\nexport default initializeChart(withRouter(LineChart));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { trimStr } from '../Utilities/helpers';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell\n} from '@patternfly/react-core';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst ModulesList = ({ modules, isLoading }) => (\n    <DataList\n        aria-label=\"Top Modules\"\n        style={{\n            maxHeight: '400px',\n            overflow: 'auto',\n            height: '400px',\n            background: 'white'\n        }}\n    >\n        <DataListItem aria-labelledby=\"top-modules-header\">\n            <DataListCell>\n                <h3>Top modules</h3>\n            </DataListCell>\n            <DataCellEnd>\n                <h3>Usage</h3>\n            </DataCellEnd>\n        </DataListItem>\n        {isLoading && (\n            <PFDataListItem\n                aria-labelledby=\"modules-loading\"\n                key={isLoading}\n                style={{ border: 'none' }}\n            >\n                <PFDataListCell>\n                    <LoadingState />\n                </PFDataListCell>\n            </PFDataListItem>\n        )}\n        {!isLoading && modules.length <= 0 && (\n            <PFDataListItem\n                aria-labelledby=\"modules-no-data\"\n                key={isLoading}\n                style={{ border: 'none' }}\n            >\n                <PFDataListCell>\n                    <NoData />\n                </PFDataListCell>\n            </PFDataListItem>\n        )}\n        {!isLoading &&\n      modules\n      .filter(module => module.name !== null)\n      .map(({ name, host_task_count }, index) => (\n          <DataListItem aria-labelledby=\"top-modules-detail\" key={index}>\n              <DataListCell>\n                  <span>{trimStr(name)}</span>\n              </DataListCell>\n              <DataCellEnd>{host_task_count}</DataCellEnd>\n          </DataListItem>\n      ))}\n    </DataList>\n);\n\nModulesList.propTypes = {\n    modules: PropTypes.array,\n    isLoading: PropTypes.bool\n};\n\nexport default ModulesList;\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport { Paths } from '../paths';\nimport { stringify } from 'query-string';\nimport useApi from '../Utilities/useApi';\nimport { formatDateTime, formatSeconds } from '../Utilities/helpers';\nimport { readJobExplorer } from '../Api';\n\nimport {\n    Button,\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell,\n    Label,\n    Modal\n} from '@patternfly/react-core';\n\nimport { CircleIcon } from '@patternfly/react-icons';\n\nconst success = (\n    <CircleIcon\n        size=\"sm\"\n        key=\"5\"\n        style={{ color: 'rgb(110, 198, 100)', marginRight: '5px' }}\n    />\n);\nconst fail = (\n    <>\n        <CircleIcon\n            size=\"sm\"\n            key=\"5\"\n            style={{ color: 'rgb(163, 0, 0)', marginRight: '5px' }}\n        />\n        <span id=\"fail-icon\">!</span>\n    </>\n);\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\nconst PFDataListItemNoBorder = styled(PFDataListItem)`\n  border-bottom: none;\n  margin-bottom: -20px;\n`;\nconst DataListItemCompact = styled(DataListItem)`\n  padding: 0;\n  > .pf-c-data-list__cell {\n    font-weight: 600;\n  }\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst DataListCellCompact = styled(DataListCell)`\n  padding: 7px;\n`;\n\nconst DataListFocus = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-gap: 10px;\n  padding: var(--pf-global--spacer--lg);\n  background: #ebebeb;\n  border: 1px solid #ccc;\n  border-top: none;\n  margin-bottom: 20px;\n`;\nconst DataCellEndCompact = styled(DataCellEnd)`\n  padding: 7px !important;\n`;\n\nconst formatTopFailedTask = data => {\n    if (!data) {\n        return;\n    }\n\n    if (data && data[0]) {\n        const percentage = Math.ceil(\n            (data[0].failed_count / data[0].total_failed_count) * 100\n        );\n        return `${data[0].task_name} ${percentage}%`;\n    }\n\n    return `Unavailable`;\n};\n\nconst formatTopFailedStep = data => {\n    if (!data) {\n        return;\n    }\n\n    if (data && data[0]) {\n        const percentage = Math.ceil(\n            (data[0].failed_count / data[0].total_failed_count) * 100\n        );\n        return `${data[0].template_name} ${percentage}%`;\n    }\n\n    return `Unavailable`;\n};\n\nconst formatSuccessRate = (successCount, totalCount) =>\n    Math.ceil((successCount / totalCount) * 100) + '%';\nconst formatAvgRun = (elapsed, totalCount) =>\n    new Date(Math.ceil(elapsed / totalCount) * 1000).toISOString().substr(11, 8);\nconst formatTotalTime = elapsed =>\n    new Date(elapsed * 1000).toISOString().substr(11, 8);\n\nconst ModalContents = ({\n    selectedId,\n    isOpen,\n    handleModal,\n    qp,\n    jobType,\n    handleCloseBtn\n}) => {\n    const [\n        {\n            data: { items: relatedJobs = []}\n        },\n        setRelatedJobs\n    ] = useApi({ items: []});\n    const [\n        {\n            data: {\n                items: [ stats = 0 ]\n            }\n        },\n        setStats\n    ] = useApi({ items: []});\n\n    let history = useHistory();\n\n    const redirectToJobExplorer = () => {\n        const { jobExplorer } = Paths;\n        const initialQueryParams = {\n            template_id: [ selectedId ],\n            status: [\n                'successful',\n                'failed',\n                'new',\n                'pending',\n                'waiting',\n                'error',\n                'canceled',\n                'running'\n            ],\n            job_type: [ 'job' ],\n            quick_date_range: 'last_30_days'\n        };\n\n        const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n        history.push({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    const relatedTemplateJobsParams = {\n        ...qp,\n        template_id: [ selectedId ],\n        attributes: [\n            'id',\n            'status',\n            'job_type',\n            'started',\n            'finished',\n            'elapsed',\n            'created',\n            'cluster_name',\n            'org_name'\n        ],\n        group_by_time: false,\n        limit: 5,\n        sort_by: 'created:asc',\n        quick_date_range: qp.quick_date_range\n            ? qp.quick_date_range\n            : 'last_30_days',\n        job_type: [ jobType ]\n    };\n\n    const agreggateTemplateParams = {\n        group_by: 'template',\n        template_id: [ selectedId ],\n        attributes: [\n            'elapsed',\n            'job_type',\n            'successful_count',\n            'failed_count',\n            'total_count',\n            jobType === 'job' ? 'most_failed_tasks' : 'most_failed_steps'\n        ],\n        status: qp.status,\n        quick_date_range: qp.quick_date_range\n            ? qp.quick_date_range\n            : 'last_30_days',\n        job_type: [ jobType ]\n    };\n\n    useEffect(() => {\n        if (selectedId) {\n            setStats(readJobExplorer({ params: agreggateTemplateParams }));\n            setRelatedJobs(readJobExplorer({ params: relatedTemplateJobsParams }));\n        }\n    }, [ selectedId ]);\n\n    return (\n        <Modal\n            aria-label=\"modal\"\n            width={'80%'}\n            title={stats.name ? stats.name : 'no-template-name'}\n            isOpen={isOpen}\n            onClose={() => {\n                handleModal(false);\n                handleCloseBtn(null);\n            }}\n            actions={[\n                <Button\n                    key=\"cancel\"\n                    variant=\"secondary\"\n                    onClick={() => {\n                        handleModal(false);\n                        handleCloseBtn(null);\n                    }}\n                >\n          Close\n                </Button>\n            ]}\n        >\n            <DataList aria-label=\"Selected Template Details\">\n                <PFDataListItemNoBorder aria-labelledby=\"Selected Template Statistics\">\n                    <DataListFocus>\n                        <div aria-labelledby=\"job runs\">\n                            <b style={{ marginRight: '10px' }}>Number of runs</b>\n                            {stats.total_count ? stats.total_count : 'Unavailable'}\n                        </div>\n                        <div aria-labelledby=\"total time\">\n                            <b style={{ marginRight: '10px' }}>Total time</b>\n                            {stats.elapsed ? formatTotalTime(stats.elapsed) : 'Unavailable'}\n                        </div>\n                        <div aria-labelledby=\"Avg Time\">\n                            <b style={{ marginRight: '10px' }}>Avg time</b>\n                            {stats.elapsed\n                                ? formatAvgRun(stats.elapsed, stats.total_count)\n                                : 'Unavailable'}\n                        </div>\n                        <div aria-labelledby=\"success rate\">\n                            <b style={{ marginRight: '10px' }}>Success rate</b>\n                            {!isNaN(stats.successful_count)\n                                ? formatSuccessRate(stats.successful_count, stats.total_count)\n                                : 'Unavailable'}\n                        </div>\n                        {stats.most_failed_tasks && (\n                            <div aria-labelledby=\"most failed task\">\n                                <b style={{ marginRight: '10px' }}>Most failed task</b>\n                                {stats.most_failed_tasks\n                                    ? formatTopFailedTask(stats.most_failed_tasks)\n                                    : 'Unavailable'}\n                            </div>\n                        )}\n                        {stats.most_failed_steps && (\n                            <div aria-labelledby=\"most failed step\">\n                                <b style={{ marginRight: '10px' }}>Most failed step</b>\n                                {stats.most_failed_steps\n                                    ? formatTopFailedStep(stats.most_failed_steps)\n                                    : 'Unavailable'}\n                            </div>\n                        )}\n                    </DataListFocus>\n                </PFDataListItemNoBorder>\n                <DataListItemCompact>\n                    <DataListCellCompact key=\"last5jobs\">\n                        <Label variant=\"outline\">Last 5 jobs</Label>\n                    </DataListCellCompact>\n          ,\n                    <DataCellEndCompact>\n                        <Button\n                            component=\"a\"\n                            onClick={redirectToJobExplorer}\n                            variant=\"link\"\n                        >\n              View all jobs\n                        </Button>\n                    </DataCellEndCompact>\n                </DataListItemCompact>\n                <DataListItemCompact aria-labelledby=\"datalist header\">\n                    <PFDataListCell key=\"job heading\">Id/Name</PFDataListCell>\n                    <PFDataListCell key=\"cluster heading\">Cluster</PFDataListCell>\n                    <PFDataListCell key=\"start time heading\">Start Time</PFDataListCell>\n                    <PFDataListCell key=\"total time heading\">Total Time</PFDataListCell>\n                </DataListItemCompact>\n                {relatedJobs.length <= 0 && <LoadingState />}\n                {relatedJobs.length > 0 &&\n          relatedJobs.map((job, index) => (\n              <DataListItem\n                  style={{ padding: '10px 0' }}\n                  key={`job-details-${index}`}\n                  aria-labelledby=\"job details\"\n              >\n                  <PFDataListCell key=\"job name\">\n                      {job.status === 'successful' ? success : fail} {job.id.id} -{' '}\n                      {job.id.template_name}\n                  </PFDataListCell>\n                  <PFDataListCell key=\"job cluster\">\n                      {job.cluster_name}\n                  </PFDataListCell>\n                  <PFDataListCell key=\"start time\">\n                      {formatDateTime(job.started)}\n                  </PFDataListCell>\n                  <PFDataListCell key=\"total time\">\n                      {formatSeconds(job.elapsed)}\n                  </PFDataListCell>\n              </DataListItem>\n          ))}\n            </DataList>\n        </Modal>\n    );\n};\n\nModalContents.propTypes = {\n    selectedId: PropTypes.number,\n    qp: PropTypes.object,\n    jobType: PropTypes.string,\n    handleCloseBtn: PropTypes.func,\n    isOpen: PropTypes.bool,\n    handleModal: PropTypes.func\n};\n\nexport default ModalContents;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n    DataList,\n    DataListItem as PFDataListItem,\n    DataListCell as PFDataListCell\n} from '@patternfly/react-core';\n\nimport ModalContents from './ModalContents';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst TemplatesList = ({ templates, isLoading, qp, title, jobType }) => {\n    const [ selectedId, setSelectedId ] = useState(null);\n    const [ isModalOpen, setIsModalOpen ] = useState(false);\n\n    return (\n        <>\n            <DataList\n                aria-label=\"Top Templates\"\n                style={{\n                    maxHeight: '400px',\n                    overflow: 'auto',\n                    height: '400px',\n                    background: 'white'\n                }}\n            >\n                <DataListItem aria-labelledby=\"top-templates-header\">\n                    <DataListCell>\n                        <h3>{title}</h3>\n                    </DataListCell>\n                    <DataCellEnd>\n                        <h3>Usage</h3>\n                    </DataCellEnd>\n                </DataListItem>\n                {isLoading && (\n                    <PFDataListItem\n                        aria-labelledby=\"templates-loading\"\n                        key={isLoading}\n                        style={{ border: 'none' }}\n                    >\n                        <PFDataListCell>\n                            <LoadingState />\n                        </PFDataListCell>\n                    </PFDataListItem>\n                )}\n                {!isLoading && templates.length <= 0 && (\n                    <PFDataListItem\n                        aria-labelledby=\"templates-no-data\"\n                        key={isLoading}\n                        style={{ border: 'none' }}\n                    >\n                        <PFDataListCell>\n                            <NoData />\n                        </PFDataListCell>\n                    </PFDataListItem>\n                )}\n                {!isLoading &&\n          templates.map(({ name, total_count, id }, index) => (\n              <DataListItem aria-labelledby=\"top-templates-detail\" key={index}>\n                  <DataListCell>\n                      <a\n                          onClick={() => {\n                              setIsModalOpen(true);\n                              setSelectedId(id);\n                          }}\n                      >\n                          {name}\n                      </a>\n                  </DataListCell>\n                  <DataCellEnd>{total_count}</DataCellEnd>\n              </DataListItem>\n          ))}\n            </DataList>\n            <ModalContents\n                isOpen={isModalOpen}\n                handleModal={setIsModalOpen}\n                selectedId={selectedId}\n                qp={qp}\n                jobType={jobType}\n                handleCloseBtn={setSelectedId}\n            />\n        </>\n    );\n};\n\nTemplatesList.propTypes = {\n    templates: PropTypes.array,\n    isLoading: PropTypes.bool,\n    queryParams: PropTypes.object,\n    title: PropTypes.string\n};\n\nexport default TemplatesList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport {\n    preflightRequest,\n    readClustersOptions,\n    readJobExplorer,\n    readEventExplorer\n} from '../../Api';\n\nimport { jobExplorer } from '../../Utilities/constants';\nimport useApi from '../../Utilities/useApi';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle\n} from '@patternfly/react-core';\n\nimport BarChart from '../../Charts/BarChart';\nimport LineChart from '../../Charts/LineChart';\nimport ModulesList from '../../Components/ModulesList';\nimport TemplatesList from '../../Components/TemplatesList';\nimport FilterableToolbar from '../../Components/Toolbar';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport { clusters } from '../../Utilities/constants';\n\nconst initialTopTemplateParams = {\n    group_by: 'template',\n    limit: 10,\n    job_type: [ 'job' ],\n    group_by_time: false,\n    status: [ 'successful', 'failed' ]\n};\n\nconst initialTopWorkflowParams = {\n    group_by: 'template',\n    limit: 10,\n    job_type: [ 'workflowjob' ],\n    group_by_time: false,\n    status: [ 'successful', 'failed' ]\n};\n\nconst initialModuleParams = {\n    group_by: 'module',\n    sort_by: 'host_task_count:desc',\n    limit: 10\n};\n\nconst Clusters = () => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n\n    const optionsMapper = options => {\n        const { groupBy, attributes, ...rest } = options;\n        return rest;\n    };\n\n    const { queryParams, setFromToolbar } = useQueryParams({\n        ...clusters.defaultParams\n    });\n\n    const [\n        {\n            isLoading,\n            isSuccess,\n            error,\n            data: { items: chartData = []}\n        },\n        setData\n    ] = useApi({ items: []});\n\n    const [\n        {\n            data: { items: templates = []}\n        },\n        setTemplates\n    ] = useApi({ items: []});\n    const [\n        {\n            data: { items: workflows = []}\n        },\n        setWorkflows\n    ] = useApi({ items: []});\n    const [\n        {\n            data: { items: modules = []}\n        },\n        setModules\n    ] = useApi({ items: []});\n    const [{ data: options = []}, setOptions ] = useApi({}, optionsMapper);\n\n    const initialOptionsParams = {\n        attributes: jobExplorer.attributes\n    };\n\n    const { queryParams: optionsQueryParams } = useQueryParams(\n        initialOptionsParams\n    );\n\n    const {\n        cluster_id,\n        org_id,\n        template_id,\n        quick_date_range,\n        start_date,\n        end_date\n    } = queryParams;\n\n    const topTemplatesParams = {\n        cluster_id,\n        org_id,\n        template_id,\n        quick_date_range,\n        start_date,\n        end_date,\n        ...initialTopTemplateParams\n    };\n\n    const topWorkflowParams = {\n        cluster_id,\n        org_id,\n        template_id,\n        quick_date_range,\n        start_date,\n        end_date,\n        ...initialTopWorkflowParams\n    };\n\n    const topModuleParams = {\n        cluster_id,\n        org_id,\n        template_id,\n        quick_date_range,\n        start_date,\n        end_date,\n        ...initialModuleParams\n    };\n\n    useEffect(() => {\n        async function initializeWithPreflight() {\n            await window.insights.chrome.auth.getUser();\n            await preflightRequest().catch(error => {\n                setPreFlightError({ preflightError: error });\n            });\n            setOptions(readClustersOptions({ params: optionsQueryParams }));\n        }\n\n        initializeWithPreflight();\n    }, []);\n\n    // Get and update the data\n    useEffect(() => {\n        const fetchEndpoints = () => {\n            setData(readJobExplorer({ params: queryParams }));\n            setTemplates(readJobExplorer({ params: topTemplatesParams }));\n            setWorkflows(readJobExplorer({ params: topWorkflowParams }));\n            setModules(readEventExplorer({ params: topModuleParams }));\n        };\n\n        fetchEndpoints();\n    }, [ queryParams ]);\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={'Clusters'} />\n                <FilterableToolbar\n                    categories={options}\n                    filters={queryParams}\n                    setFilters={setFromToolbar}\n                />\n            </PageHeader>\n            {preflightError && (\n                <Main>\n                    <EmptyState {...preflightError} />\n                </Main>\n            )}\n            {error && (\n                <Main>\n                    <ApiErrorState message={error.error} />\n                </Main>\n            )}\n            {!preflightError && !error && (\n                <>\n                    <Main>\n                        <Card>\n                            <PFCardTitle>\n                                <h2>Job status</h2>\n                            </PFCardTitle>\n                            <CardBody>\n                                {isLoading && <LoadingState />}\n                                {queryParams.cluster_id.length <= 0 && isSuccess && (\n                                    <BarChart\n                                        margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                                        id=\"d3-bar-chart-root\"\n                                        data={chartData}\n                                        templateId={queryParams.template_id}\n                                        orgId={queryParams.org_id}\n                                    />\n                                )}\n                                {queryParams.cluster_id.length > 0 && isSuccess && (\n                                    <LineChart\n                                        margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                                        id=\"d3-line-chart-root\"\n                                        data={chartData}\n                                        clusterId={queryParams.cluster_id}\n                                        templateId={queryParams.template_id}\n                                        orgId={queryParams.org_id}\n                                    />\n                                )}\n                            </CardBody>\n                        </Card>\n                        <div\n                            className=\"dataCard\"\n                            style={{ display: 'flex', marginTop: '20px' }}\n                        >\n                            <TemplatesList\n                                qp={queryParams}\n                                templates={workflows}\n                                isLoading={isLoading}\n                                title={'Top workflows'}\n                                jobType={'workflowjob'}\n                            />\n                            <TemplatesList\n                                qp={queryParams}\n                                templates={templates}\n                                isLoading={isLoading}\n                                title={'Top templates'}\n                                jobType={'job'}\n                            />\n                            <ModulesList modules={modules} isLoading={isLoading} />\n                        </div>\n                    </Main>\n                </>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default Clusters;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\n\nclass Tooltip {\n    constructor(props) {\n        this.svg = props.svg;\n        this.draw();\n    }\n\n    formatDollars(amount) {\n        return parseFloat(amount)\n        .toFixed(2)\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    }\n\n    draw() {\n        this.width = 125;\n        this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n        this.toolTipBase.attr('id', 'svg-chart-Tooltip-base-' + this.svg.slice(1));\n        this.toolTipBase.attr('overflow', 'visible');\n        this.toolTipBase.style('opacity', 0);\n        this.toolTipBase.style('pointer-events', 'none');\n        this.toolTipBase.attr('transform', 'translate(100, 100)');\n        this.boxWidth = 125;\n        this.textWidthThreshold = 20;\n\n        this.toolTipPoint = this.toolTipBase\n        .append('rect')\n        .attr('transform', 'translate(10, 0) rotate(45)')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('height', 20)\n        .attr('width', 20)\n        .attr('fill', '#393f44');\n        this.boundingBox = this.toolTipBase\n        .append('rect')\n        .attr('x', 10)\n        .attr('y', -23)\n        .attr('rx', 2)\n        .attr('height', 92)\n        .attr('width', this.boxWidth)\n        .attr('fill', '#393f44');\n        this.name = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', -2)\n        .text('Template name');\n        this.savings = this.toolTipBase\n        .append('text')\n        .attr('x', 20)\n        .attr('y', 52)\n        .attr('font-size', 12)\n        .attr('font-weight', 'bold')\n        .attr('fill', 'white')\n        .text('Total savings $0');\n        this.manualCost = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', 16)\n        .text('Manual cost $0');\n        this.automationCost = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('x', 20)\n        .attr('y', 34)\n        .text('Automation cost $0');\n    }\n\n  handleMouseOver = d => {\n      let name;\n      let savings;\n      let manualCost;\n      let automationCost;\n      const scrollLeftOffset = d3.select('#d3-roi-chart-root').node().scrollLeft;\n      const x =\n      d3.event.pageX -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().x +\n      10 +\n      scrollLeftOffset;\n      const y =\n      d3.event.pageY -\n      d3\n      .select(this.svg)\n      .node()\n      .getBoundingClientRect().y -\n      30;\n      if (!d) {\n          return;\n      } else {\n          savings = this.formatDollars(d.delta);\n          name = d.name;\n          manualCost = this.formatDollars(d.manualCost);\n          automationCost = this.formatDollars(d.automatedCost);\n      }\n\n      const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n      const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n      const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n      const flipped = overflow < (x / chartWidth) * 100;\n      this.name.text('' + name);\n      this.savings.text('Total savings $' + savings);\n      this.manualCost.text('Manual Cost $' + manualCost);\n      this.automationCost.text('Automation Cost $' + automationCost);\n      this.nameWidth = this.name.node().getComputedTextLength();\n      this.savingsWidth = this.savings.node().getComputedTextLength();\n      this.manualCostWidth = this.manualCost.node().getComputedTextLength();\n      this.automationCostWidth = this.automationCost\n      .node()\n      .getComputedTextLength();\n      this.widestTextElem = d3.max([\n          this.nameWidth,\n          this.savingsWidth,\n          this.automationCostWidth,\n          this.manualCostWidth\n      ]);\n\n      const maxTextPerc = (this.widestTextElem / this.boxWidth) * 100;\n      const threshold = 85;\n      const overage = maxTextPerc / threshold;\n      let adjustedWidth;\n      if (maxTextPerc > threshold) {\n          adjustedWidth = this.boxWidth * overage;\n      } else {\n          adjustedWidth = this.boxWidth;\n      }\n\n      this.boundingBox.attr('width', adjustedWidth);\n      this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n      if (flipped) {\n          this.toolTipPoint.attr('transform', 'translate(-20, 15) rotate(45)');\n          this.boundingBox.attr('x', -adjustedWidth - 20);\n          this.name.attr('x', -(toolTipWidth - 7));\n          this.savings.attr('x', -(toolTipWidth - 7));\n          this.manualCost.attr('x', -(toolTipWidth - 7));\n          this.automationCost.attr('x', -(toolTipWidth - 7));\n      } else {\n          this.toolTipPoint.attr('transform', 'translate(10, 15) rotate(45)');\n          this.boundingBox.attr('x', 10);\n          this.name.attr('x', 20);\n          this.savings.attr('x', 20);\n          this.manualCost.attr('x', 20);\n          this.automationCost.attr('x', 20);\n      }\n\n      this.toolTipBase.style('opacity', 1);\n      this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n      this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass TopTemplatesSavings extends Component {\n    constructor(props) {\n        super(props);\n        this.init = this.init.bind(this);\n        this.draw = this.draw.bind(this);\n        this.resize = this.resize.bind(this);\n        this.state = {\n            timeout: null\n        };\n    }\n\n    // Methods\n    resize() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        this.setState({\n            timeout: setTimeout(() => {\n                this.init();\n            }, 500)\n        });\n    }\n\n    init() {\n        this.draw();\n    }\n\n    draw() {\n    // Use PF chart color\n        const color = '#0066CC'; //blue\n        // Clear our chart container element first\n        d3.selectAll('#' + this.props.id + ' > *').remove();\n        const { data } = this.props;\n        let width;\n        // adjust chart width to support larger datasets\n        if (data.length >= 15) {\n            const containerWidth = d3.select('.automation-wrapper').node();\n            width =\n        containerWidth.getBoundingClientRect().width -\n        this.props.margin.left -\n        this.props.margin.right;\n        } else {\n            width = this.props.getWidth();\n        }\n\n        const height = this.props.getHeight();\n        const x = d3\n        .scaleBand()\n        .rangeRound([ 0, width ])\n        .padding(0.45);\n        const y = d3.scaleLinear().range([ height, 0 ]);\n        // format our X Axis ticks\n        let ticks;\n        ticks = data.map(d => d.name);\n        const formatYAxisValue = d3.format('.2s');\n        const xAxis = d3.axisBottom(x).tickValues(ticks);\n\n        const yAxis = d3\n        .axisLeft(y)\n        .ticks(8)\n        .tickFormat(d => formatYAxisValue(d).replace('G', 'B'))\n        .tickSize(-width, 0, 0);\n\n        const svg = d3\n        .select('#' + this.props.id)\n        .append('svg')\n        .attr('width', width + this.props.margin.left + this.props.margin.right)\n        .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n        .append('g')\n        .attr(\n            'transform',\n            'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n        );\n\n        const taskNames = data.map(d => d.name);\n        const tooltip = new Tooltip({\n            svg: '#' + this.props.id\n        });\n        x.domain(taskNames);\n        y.domain([ 0, d3.max(data, d => d.delta * 1.15) || 8 ]);\n\n        // add y axis\n        svg\n        .append('g')\n        .attr('class', 'y axis')\n        .call(yAxis)\n        .selectAll('line')\n        .attr('stroke', '#d7d7d7')\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 6)\n        .attr('dy', '.71em')\n        .style('text-anchor', 'end')\n        .style('font-weight', 'bold')\n        .text('Value');\n        svg\n        .append('text')\n        .attr('transform', 'rotate(-90)')\n        .attr('y', 0 - this.props.margin.left)\n        .attr('x', 0 - height / 2)\n        .attr('dy', '1em')\n        .style('text-anchor', 'middle')\n        .text('Savings per template ($)');\n\n        // add x axis\n        svg\n        .append('g')\n        .attr('class', 'x-axis')\n        .attr('transform', 'translate(0,' + height + ')')\n        .call(xAxis)\n        .selectAll('text')\n        .style('text-anchor', 'start')\n        .attr('dx', '0.75em')\n        .attr('dy', -x.bandwidth() / 1.45 - 8)\n        .attr('transform', 'rotate(-90)');\n\n        svg.selectAll('.x-axis line').attr('stroke', 'transparent');\n\n        svg\n        .selectAll('.bar')\n        .data(data)\n        .enter()\n        .append('rect')\n        .attr('x', d => x(d.name))\n        .attr('width', x.bandwidth())\n        .attr('y', d => y(d.delta))\n        .style('fill', () => color)\n        .attr('height', d => height - y(d.delta))\n        .on('mouseover', function(d) {\n            d3.select(this).style('fill', d3.rgb(color).darker(1));\n            tooltip.handleMouseOver(d);\n        })\n        .on('mousemove', tooltip.handleMouseOver)\n        .on('mouseout', function() {\n            d3.select(this).style('fill', color);\n            tooltip.handleMouseOut();\n        });\n    }\n\n    componentDidMount() {\n        this.init();\n        // Call the resize function whenever a resize event occurs\n        window.addEventListener('resize', this.resize);\n    }\n\n    componentWillUnmount() {\n        const { timeout } = this.state;\n        clearTimeout(timeout);\n        window.removeEventListener('resize', this.resize);\n    }\n\n    componentDidUpdate() {\n        this.init();\n    }\n\n    render() {\n        return <div id={this.props.id} />;\n    }\n}\n\nTopTemplatesSavings.propTypes = {\n    id: PropTypes.string,\n    data: PropTypes.array,\n    margin: PropTypes.object,\n    getHeight: PropTypes.func,\n    getWidth: PropTypes.func\n};\n\nexport default initializeChart(TopTemplatesSavings);\n","import styled from 'styled-components';\nimport { CardTitle } from '@patternfly/react-core';\n\nexport const BorderedCardTitle = styled(CardTitle)`\n  border-bottom: 1px solid #d7d7d7;\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle, Title } from '@patternfly/react-core';\n\nconst floatToStringWithCommas = total =>\n    total\n    .toFixed(2)\n    .toString()\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\nconst TotalSavings = ({ totalSavings = 0 }) => (\n    <Card style={{ borderTop: '3px solid #2B9AF3' }}>\n        <CardTitle style={{ paddingBottom: '0' }}>Total savings</CardTitle>\n        <CardBody>\n            <Title\n                headingLevel=\"h3\"\n                size=\"4xl\"\n                style={{ color: 'var(--pf-global--success-color--200)' }}\n            >\n                {floatToStringWithCommas(totalSavings)}\n            </Title>\n        </CardBody>\n    </Card>\n);\n\nTotalSavings.propTypes = {\n    totalSavings: PropTypes.number\n};\n\nexport default TotalSavings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    Card,\n    CardBody,\n    InputGroup,\n    InputGroupText,\n    TextInput\n} from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst validFloat = value => {\n    const floatValue = parseFloat(value);\n    return floatValue && floatValue >= 0 ? value : '';\n};\n\nconst CalculationCost = ({\n    costManual = '0',\n    setCostManual = () => {},\n    costAutomation = '0',\n    setCostAutomation = () => {}\n}) => (\n    <Card>\n        <CardTitle>Calculate your automation</CardTitle>\n        <CardBody>\n            <InputAndText>\n                <p>Manual cost of automation</p>\n                <em style={{ color: 'var(--pf-global--Color--dark-200)' }}>\n          (e.g. average salary of mid-level Software Engineer)\n                </em>\n                <InputGroup style={{ width: '50%' }}>\n                    <InputGroupText>\n                        <DollarSignIcon />\n                    </InputGroupText>\n                    <TextInput\n                        id=\"manual-cost\"\n                        type=\"number\"\n                        aria-label=\"manual-cost\"\n                        value={costManual}\n                        onChange={e => setCostManual(validFloat(e))}\n                    />\n                    <InputGroupText>/hr</InputGroupText>\n                </InputGroup>\n            </InputAndText>\n            <InputAndText style={{ paddingTop: '10px' }}>\n                <p>Automated process cost</p>\n                <InputGroup style={{ width: '50%' }}>\n                    <InputGroupText>\n                        <DollarSignIcon />\n                    </InputGroupText>\n                    <TextInput\n                        id=\"automation-cost\"\n                        type=\"number\"\n                        aria-label=\"automation-cost\"\n                        value={costAutomation}\n                        onChange={e => setCostAutomation(validFloat(e))}\n                    />\n                    <InputGroupText>/hr</InputGroupText>\n                </InputGroup>\n            </InputAndText>\n        </CardBody>\n    </Card>\n);\n\nCalculationCost.propTypes = {\n    costManual: PropTypes.string,\n    setCostManual: PropTypes.func,\n    costAutomation: PropTypes.string,\n    setCostAutomation: PropTypes.func\n};\n\nexport default CalculationCost;\n","import React from 'react';\n\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst AutomationFormula = () => (\n    <Card style={{ height: '100%' }}>\n        <CardTitle>Automation formula</CardTitle>\n        <CardBody>\n            <p>\n                <b>Manual cost for template x</b> =\n                <em>\n          (time for a manual run on one host in hours * (sum of all hosts across\n          all job runs) ) * cost per hour\n                </em>\n            </p>\n            <p>\n                <b>Automation cost for template x</b> =\n                <em>\n          cost of automation per hour * sum of total elapsed hours for a\n          template\n                </em>\n            </p>\n            <p>\n                <b>Savings</b> =\n                <em>Sum of (manual cost - automation cost) across all templates</em>\n            </p>\n        </CardBody>\n    </Card>\n);\n\nexport default AutomationFormula;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    Button,\n    Card,\n    CardBody,\n    InputGroup,\n    InputGroupText,\n    TextInput,\n    Tooltip,\n    Popover\n} from '@patternfly/react-core';\nimport {\n    InfoCircleIcon,\n    ToggleOnIcon,\n    ToggleOffIcon\n} from '@patternfly/react-icons';\n\nimport {\n    convertSecondsToMins,\n    convertMinsToSeconds,\n    capitalize\n} from '../../Utilities/helpers';\n\nconst TemplateDetail = styled.div`\n  em {\n    display: block;\n    padding: 5px 0;\n  }\n\n  @media (max-width: 1490px) {\n    display: block;\n\n    em {\n      padding: 10px 0;\n      display: block;\n    }\n  }\n`;\n\nconst TemplateDetailSubTitle = styled.em`\n  color: var(--pf-global--Color--dark-200);\n`;\n\nconst TooltipWrapper = styled.div`\n  p {\n    text-align: left;\n  }\n`;\n\nconst IconGroup = styled.div`\n  & svg {\n    fill: var(--pf-global--Color--dark-200);\n\n    :hover {\n      cursor: pointer;\n    }\n\n    :first-of-type {\n      margin-right: 10px;\n      margin-left: 10px;\n\n      @media (max-width: 1350px) {\n        margin-left: 0;\n      }\n    }\n  }\n`;\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst showSortAttr = (details, sortBy) => {\n    const trimmed = sortBy.split(':')[0];\n    const sortAttribute = Object.keys(details).map(k =>\n        k === trimmed ? `${details[k]}` : null\n    );\n\n    return (\n        <TemplateDetailSubTitle>\n            {capitalize(trimmed.split('_').join(' '))}: {sortAttribute}\n        </TemplateDetailSubTitle>\n    );\n};\n\nconst QuestionIconTooltip = ({ details }) => (\n    <Popover\n        aria-label=\"template detail popover\"\n        position=\"left\"\n        bodyContent={\n            <TooltipWrapper>\n                {Object.keys(details).map((k, i) => (\n                    <p key={i}>\n                        <b>{capitalize(k.split('_').join(' '))}</b>: {details[k]}\n                    </p>\n                ))}\n            </TooltipWrapper>\n        }\n    >\n        <InfoCircleIcon />\n    </Popover>\n);\n\nQuestionIconTooltip.propTypes = {\n    details: PropTypes.object\n};\n\nconst TopTemplates = ({\n    data = [],\n    sortBy = '',\n    setDataRunTime = () => {},\n    setEnabled = () => {},\n    redirectToJobExplorer = () => {}\n}) => (\n    <Card style={{ overflow: 'auto', flex: '1 1 0' }} className=\"top-templates\">\n        <CardBody>\n            <p>Enter the time it takes to run the following templates manually.</p>\n            {data.map(d => (\n                <div key={d.id}>\n                    <Tooltip content={'List of jobs for this template for past 30 days'}>\n                        <Button\n                            style={{ padding: '15px 0 10px' }}\n                            component=\"a\"\n                            onClick={() => redirectToJobExplorer(d.id)}\n                            variant=\"link\"\n                        >\n                            {d.name}\n                        </Button>\n                    </Tooltip>\n                    <TemplateDetail>\n                        <InputAndText key={d.id}>\n                            <InputGroup>\n                                <TextInput\n                                    id={d.id}\n                                    type=\"number\"\n                                    aria-label=\"time run manually\"\n                                    value={convertSecondsToMins(d.avgRunTime)}\n                                    onChange={minutes =>\n                                        setDataRunTime(convertMinsToSeconds(minutes), d.id)\n                                    }\n                                />\n                                <InputGroupText>min</InputGroupText>\n                            </InputGroup>\n                        </InputAndText>\n                        <TemplateDetailSubTitle>\n                            x {d.successful_hosts_total} host runs\n                        </TemplateDetailSubTitle>\n                        {showSortAttr(d, sortBy)}\n                        <IconGroup>\n                            <QuestionIconTooltip\n                                details={d}\n                            />\n                            { !d.enabled && <ToggleOffIcon onClick={ () => setEnabled(d.id)(true) } /> }\n                            { d.enabled && <ToggleOnIcon onClick={ () => setEnabled(d.id)(false) } /> }\n                        </IconGroup>\n                    </TemplateDetail>\n                    <p style={{ color: '#486B00' }}>${d.delta.toFixed(2)}</p>\n                </div>\n            ))}\n        </CardBody>\n    </Card>\n);\n\nTopTemplates.propTypes = {\n    data: PropTypes.array,\n    setDataRunTime: PropTypes.func,\n    redirectToJobExplorer: PropTypes.func,\n    deselectedIds: PropTypes.array,\n    setDeselectedIds: PropTypes.func,\n    setEnabled: PropTypes.func,\n    sortBy: PropTypes.string\n};\n\nexport default TopTemplates;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\nimport { Card, CardBody } from '@patternfly/react-core';\n\n// Imports from custom components\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\n// Imports from API\nimport { preflightRequest, readROI, readROIOptions } from '../../Api';\n\n// Imports from utilities\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { roi as roiConst } from '../../Utilities/constants';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { calculateDelta, convertSecondsToHours } from '../../Utilities/helpers';\n\n// Chart\nimport TopTemplatesSavings from '../../Charts/ROITopTemplates';\n\n// Local imports\nimport { BorderedCardTitle } from './helpers';\nimport TotalSavings from './TotalSavings';\nimport CalculationCost from './CalculationCost';\nimport AutomationFormula from './AutomationFormula';\nimport TopTemplates from './TopTemplates';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 5fr 2fr;\n  height: 100%;\n`;\n\nconst WrapperLeft = styled.div`\n  flex: 5;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n`;\n\nconst WrapperRight = styled.div`\n  flex: 2;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst mapApi = ({ items = []}) =>\n    items.map(el => ({\n        ...el,\n        delta: 0,\n        avgRunTime: 3600,\n        manualCost: 0,\n        automatedCost: 0,\n        enabled: true\n    }));\n\nconst filterDisabled = data => data.filter(({ enabled }) => enabled);\n\nconst updateDeltaCost = (data, costAutomation, costManual) =>\n    data.map(el => {\n        const manualCost =\n      convertSecondsToHours(el.avgRunTime) *\n      el.successful_hosts_total *\n      parseFloat(costManual);\n        const automatedCost =\n      convertSecondsToHours(el.successful_elapsed_total) *\n      parseFloat(costAutomation);\n        const delta = calculateDelta(automatedCost, manualCost);\n\n        return { ...el, delta, manualCost, automatedCost };\n    });\n\nconst computeTotalSavings = data =>\n    data.reduce((sum, curr) => sum + curr.delta, 0);\n\nconst AutomationCalculator = ({ history }) => {\n    const toJobExplorer = useRedirect(history, 'jobExplorer');\n    const [ costManual, setCostManual ] = useState('50');\n    const [ costAutomation, setCostAutomation ] = useState('20');\n\n    const [ preflight, setPreflight ] = useApi(null);\n    const [ options, setOptions ] = useApi({});\n    const [ api, fetchApi, setDataInApi ] = useApi([], data =>\n        updateDeltaCost(mapApi(data), costAutomation, costManual)\n    );\n\n    const { queryParams, setFromToolbar } = useQueryParams(\n        roiConst.defaultParams\n    );\n\n    /**\n   * Modifies one elements avgRunTime in the unfilteredData\n   * and updates all calculated fields.\n   * Used in top templates.\n   */\n    const setDataRunTime = (seconds, id) => {\n        const updatedData = api.data.map(el => {\n            if (el.id === id) {\n                el.avgRunTime = seconds;\n                const updatedDelta = updateDeltaCost(\n                    [ el ],\n                    costAutomation,\n                    costManual\n                )[0];\n                return updatedDelta;\n            } else {\n                return el;\n            }\n        });\n\n        setDataInApi(updatedData);\n    };\n\n    const setEnabled = id => value => {\n        setDataInApi(api.data.map(el =>\n            el.id === id\n                ? { ...el, enabled: value }\n                : el\n        ));\n    };\n\n    useEffect(() => {\n        setPreflight(preflightRequest());\n        setOptions(readROIOptions({ params: queryParams }));\n    }, []);\n\n    /**\n   * Recalculates the delta and costs in the data after the cost is changed.\n   */\n    useEffect(() => {\n        setDataInApi(updateDeltaCost(api.data, costAutomation, costManual));\n    }, [ costAutomation, costManual ]);\n\n    /**\n   * Get data from API depending on the queryParam.\n   */\n    useEffect(() => {\n        fetchApi(readROI({ params: queryParams }));\n    }, [ queryParams ]);\n\n    /**\n   * Function to redirect to the job explorer page\n   * with the same filters as is used here.\n   */\n    const redirectToJobExplorer = templateId => {\n        const initialQueryParams = {\n            quick_date_range: 'last_30_days',\n            template_id: [ templateId ]\n        };\n        toJobExplorer(initialQueryParams);\n    };\n\n    const renderLeft = () => (\n        <WrapperLeft>\n            <Main style={{ paddingBottom: '0' }}>\n                <Card>\n                    <BorderedCardTitle>Automation savings</BorderedCardTitle>\n                    <CardBody>\n                        {api.isLoading && <LoadingState />}\n                        {api.error && <ApiErrorState message={api.error.error} />}\n                        {api.isSuccess && api.data.length <= 0 && <NoData />}\n                        {api.isSuccess && api.data.length > 0 && (\n                            <React.Fragment>\n                                <TopTemplatesSavings\n                                    margin={{ top: 20, right: 20, bottom: 20, left: 70 }}\n                                    id=\"d3-roi-chart-root\"\n                                    data={filterDisabled(api.data)}\n                                />\n                                <p style={{ textAlign: 'center' }}>Templates</p>\n                            </React.Fragment>\n                        )}\n                    </CardBody>\n                </Card>\n            </Main>\n            <Main>\n                <AutomationFormula />\n            </Main>\n        </WrapperLeft>\n    );\n\n    const renderRight = () => (\n        <WrapperRight>\n            <Main style={{ paddingBottom: '0', paddingLeft: '0' }}>\n                <TotalSavings totalSavings={computeTotalSavings(filterDisabled(api.data))} />\n            </Main>\n            <Main\n                style={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    flex: '1 1 0',\n                    paddingLeft: '0'\n                }}\n            >\n                <CalculationCost\n                    costManual={costManual}\n                    setCostManual={setCostManual}\n                    costAutomation={costAutomation}\n                    setCostAutomation={setCostAutomation}\n                />\n                <TopTemplates\n                    redirectToJobExplorer={redirectToJobExplorer}\n                    data={api.data}\n                    setDataRunTime={setDataRunTime}\n                    setUnfilteredData={api.data}\n                    setEnabled={setEnabled}\n                    sortBy={queryParams.sort_by}\n                />\n            </Main>\n        </WrapperRight>\n    );\n\n    return (\n        <React.Fragment>\n            <PageHeader style={{ flex: '0' }}>\n                <PageHeaderTitle title={'Automation Calculator'} />\n                <FilterableToolbar\n                    categories={options.data}\n                    filters={queryParams}\n                    setFilters={setFromToolbar}\n                />\n            </PageHeader>\n            {preflight.error && (\n                <Main>\n                    <EmptyState preflightError={preflight.error} />\n                </Main>\n            )}\n            {preflight.isSuccess && (\n                <React.Fragment>\n                    <Wrapper className=\"automation-wrapper\">\n                        {renderLeft()}\n                        {renderRight()}\n                    </Wrapper>\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n};\n\nAutomationCalculator.propTypes = {\n    history: PropTypes.object\n};\n\nexport default AutomationCalculator;\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst NoResults = () => {\n    return (\n        <EmptyState variant={EmptyStateVariant.full}>\n            <EmptyStateIcon icon={SearchIcon} />\n            <Title size=\"lg\" headingLevel=\"h4\">\n        No results found\n            </Title>\n            <EmptyStateBody>\n        No results match the filter criteria. Remove all filters or clear all\n        filters to show results.\n            </EmptyStateBody>\n        </EmptyState>\n    );\n};\n\nexport default NoResults;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from '@patternfly/react-core';\nimport {\n    CheckCircleIcon,\n    ExclamationCircleIcon,\n    ClockIcon,\n    SyncAltIcon,\n    ExclamationTriangleIcon\n} from '@patternfly/react-icons';\n\nconst JobStatus = ({ status }) => {\n    const capitalized = str => str.charAt(0).toUpperCase() + str.slice(1);\n\n    const getColor = () => {\n        switch (status) {\n            case 'successful':\n                return 'green';\n            case 'failed':\n            case 'error':\n                return 'red';\n            case 'running':\n            case 'pending':\n                return 'blue';\n            case 'canceled':\n                return 'orange';\n                // case new, waiting\n            default:\n                return 'grey';\n        }\n    };\n\n    const getIcon = () => {\n        switch (status) {\n            case 'successful':\n                return <CheckCircleIcon />;\n            case 'failed':\n            case 'error':\n                return <ExclamationCircleIcon />;\n            case 'running':\n                return <SyncAltIcon />;\n            case 'canceled':\n                return <ExclamationTriangleIcon />;\n                // case new, waiting, pending\n            default:\n                return <ClockIcon />;\n        }\n    };\n\n    return (\n        <Label variant=\"outline\" color={getColor()} icon={getIcon()}>\n            {capitalized(status)}\n        </Label>\n    );\n};\n\nJobStatus.propTypes = {\n    status: PropTypes.oneOf([\n        'successful',\n        'failed',\n        'error',\n        'running',\n        'new',\n        'waiting',\n        'pending',\n        'canceled'\n    ])\n};\n\nexport default JobStatus;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n    DataListCell as PFDataListCell,\n    DataListContent,\n    DataList,\n    DataListItem,\n    DataListItemRow,\n    DataListItemCells as PFDataListItemCells,\n    DataListToggle as PFDataListToggle,\n    Tooltip\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkIcon } from '@patternfly/react-icons';\n\nimport LoadingState from '../Components/LoadingState';\nimport { formatDateTime, formatJobType } from '../Utilities/helpers';\nimport JobStatus from './JobStatus';\n\nconst headerLabels = [ 'Id/Name', 'Status', 'Cluster', 'Organization', 'Type' ];\n\nconst ExternalLinkIcon = styled(PFExternalLinkIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n`;\n\nconst DataListCell = styled(PFDataListCell)`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  text-align: center;\n`;\n\nconst DataListCellHeader = styled(DataListCell)`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  font-weight: bold;\n`;\n\nconst DataListItemCells = styled(PFDataListItemCells)`\n  align-items: center;\n`;\n\nconst DataListToggle = styled(PFDataListToggle)`\n  align-items: center;\n`;\n\nconst mobileBreakpoint = 765;\n\nconst buildHeader = labels => (\n    <DataListItem>\n        <DataListItemRow style={{ paddingLeft: '80px' }}>\n            <DataListItemCells\n                dataListCells={labels.map(label => (\n                    <DataListCellHeader key={label}>\n                        {label}\n                        {label === 'Id/Name' && <ExternalLinkIcon />}\n                    </DataListCellHeader>\n                ))}\n            />\n        </DataListItemRow>\n    </DataListItem>\n);\n\nconst buildListRow = (items, ariaLabel, ariaLabelledBy, windowWidth) => {\n    const [ isExpanded, setIsExpanded ] = useState([]);\n\n    return (\n        <>\n            {items.map((item, count) => {\n                const toggle = id => {\n                    const expanded = isExpanded;\n                    const idx = expanded.indexOf(id);\n                    const newExpanded =\n            idx >= 0\n                ? [\n                    ...expanded.slice(0, idx),\n                    ...expanded.slice(idx + 1, expanded.length)\n                ]\n                : [ ...expanded, id ];\n                    setIsExpanded(newExpanded);\n                };\n\n                return (\n                    <DataListItem\n                        key={item.id.id}\n                        aria-labelledby={ariaLabelledBy}\n                        isExpanded={isExpanded.includes(`${item.id.id}-toggle`)}\n                    >\n                        <DataListItemRow key={item.id.id}>\n                            <DataListToggle\n                                id={`${item.id.id}-toggle`}\n                                aria-controls={`${item.id.id}-expand`}\n                                onClick={() => toggle(`${item.id.id}-toggle`)}\n                                isExpanded={isExpanded.includes(`${item.id.id}-toggle`)}\n                            />\n                            <DataListItemCells\n                                dataListCells={[\n                                    <DataListCell key={count++}>\n                                        <a\n                                            href={item.id.tower_link}\n                                            target=\"_blank\"\n                                            rel=\"noopener noreferrer\"\n                                        >\n                                            {windowWidth < mobileBreakpoint && (\n                                                <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                          Id/Name\n                                                    <ExternalLinkIcon />:\n                                                </span>\n                                            )}\n                      &nbsp;\n                                            {`${item.id.id} - ${item.id.template_name}`}\n                                        </a>\n                                    </DataListCell>,\n                                    <DataListCell key={count++}>\n                                        {windowWidth <= mobileBreakpoint && (\n                                            <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Status:\n                                            </span>\n                                        )}\n                    &nbsp;\n                                        <JobStatus status={item.status} />\n                                    </DataListCell>,\n                                    <Tooltip key={count++} content={<p>{item.cluster_name}</p>}>\n                                        <DataListCell>\n                                            {windowWidth <= mobileBreakpoint && (\n                                                <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                          Cluster:\n                                                </span>\n                                            )}\n                      &nbsp;\n                                            {item.cluster_name}\n                                        </DataListCell>\n                                    </Tooltip>,\n                                    <DataListCell key={count++}>\n                                        {windowWidth <= mobileBreakpoint && (\n                                            <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Organization:\n                                            </span>\n                                        )}\n                    &nbsp;\n                                        {item.org_name}\n                                    </DataListCell>,\n                                    <DataListCell key={count++}>\n                                        {windowWidth <= mobileBreakpoint && (\n                                            <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Type:\n                                            </span>\n                                        )}\n                    &nbsp;\n                                        {formatJobType(item.job_type)}\n                                    </DataListCell>\n                                ]}\n                            />\n                        </DataListItemRow>\n                        <DataListContent\n                            aria-label={`${item.id.id}-details`}\n                            id={'${item.id.id}'}\n                            isHidden={!isExpanded.includes(`${item.id.id}-toggle`)}\n                        >\n                            <DataListItemCells\n                                dataListCells={[\n                                    <DataListCell key={count++}>\n                    Created: {formatDateTime(item.created)}\n                                    </DataListCell>,\n                                    <DataListCell key={count++}>\n                    Started: {formatDateTime(item.started)}\n                                    </DataListCell>,\n                                    <DataListCell key={count++}>\n                    Finished: {formatDateTime(item.finished)}\n                                    </DataListCell>\n                                ]}\n                            />\n                        </DataListContent>\n                    </DataListItem>\n                );\n            })}\n        </>\n    );\n};\n\nconst AllJobsTemplate = ({ jobs }) => {\n    const [ windowWidth, setWindowWidth ] = useState(window.innerWidth);\n\n    const onResize = () => setWindowWidth(window.innerWidth);\n\n    useEffect(() => {\n        window.addEventListener('resize', onResize);\n        return () => window.removeEventListener('resize', onResize);\n    }, []);\n\n    return buildListRow(jobs, 'All jobs view', 'all-jobs', windowWidth);\n};\n\nconst JobExplorerList = ({ jobs }) => {\n    const [ windowWidth, setWindowWidth ] = useState(window.innerWidth);\n\n    const onResize = () => setWindowWidth(window.innerWidth);\n\n    useEffect(() => {\n        window.addEventListener('resize', onResize);\n        return () => window.removeEventListener('resize', onResize);\n    }, []);\n\n    return (\n        <>\n            {jobs.length <= 0 && <LoadingState />}\n            <DataList isCompact>\n                {windowWidth >= mobileBreakpoint && buildHeader(headerLabels)}\n                <AllJobsTemplate jobs={jobs} windowWidth={windowWidth} />\n            </DataList>\n        </>\n    );\n};\n\nJobExplorerList.propTypes = {\n    jobs: PropTypes.array,\n    windowWidth: PropTypes.number\n};\n\nAllJobsTemplate.propTypes = {\n    jobs: PropTypes.array,\n    windowWidth: PropTypes.number\n};\n\nexport default JobExplorerList;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { parse, stringify } from 'query-string';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { Paths } from '../../paths';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoResults from '../../Components/NoResults';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport {\n    preflightRequest,\n    readJobExplorer,\n    readJobExplorerOptions\n} from '../../Api';\nimport { jobExplorer } from '../../Utilities/constants';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    Pagination,\n    PaginationVariant\n} from '@patternfly/react-core';\n\nimport JobExplorerList from '../../Components/JobExplorerList';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\nconst perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '15', value: 15 },\n    { title: '20', value: 20 },\n    { title: '25', value: 25 }\n];\n\nconst initialQueryParams = {\n    ...jobExplorer.defaultParams,\n    attributes: jobExplorer.attributes\n};\n\nconst optionsMapper = options => {\n    const { groupBy, attributes, ...rest } = options;\n    return rest;\n};\n\nconst JobExplorer = ({ location: { search }, history }) => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [\n        {\n            isLoading,\n            isSuccess,\n            error,\n            data: { meta = {}, items: data = []}\n        },\n        setData\n    ] = useApi({ meta: {}, items: []});\n    const [ currPage, setCurrPage ] = useState(1);\n    const [ options, setOptions ] = useApi({}, optionsMapper);\n\n    const {\n        queryParams,\n        setLimit,\n        setOffset,\n        setFromToolbar,\n        dispatch\n    } = useQueryParams(initialQueryParams);\n\n    const updateURL = () => {\n        const { jobExplorer } = Paths;\n        const search = stringify(queryParams, { arrayFormat: 'bracket' });\n        history.replace({\n            pathname: jobExplorer,\n            search\n        });\n    };\n\n    useEffect(() => {\n        insights.chrome.appNavClick({ id: 'job-explorer', secondaryNav: true });\n\n        window.insights.chrome.auth.getUser().then(\n            () =>\n                preflightRequest().catch(error => {\n                    setPreFlightError({ preflightError: error });\n                })\n            // Loading is set false when the data also loaded\n        );\n\n        const initialSearchParams = parse(search, {\n            arrayFormat: 'bracket',\n            parseBooleans: true\n        });\n\n        dispatch({ type: 'REINITIALIZE', value: {\n            ...initialQueryParams,\n            ...initialSearchParams\n        }});\n    }, []);\n\n    useEffect(() => {\n        setData(readJobExplorer({ params: queryParams }));\n        setOptions(readJobExplorerOptions({ params: queryParams }));\n        updateURL();\n    }, [ queryParams ]);\n\n    const returnOffsetVal = page => (page - 1) * queryParams.limit;\n\n    const handleSetPage = page => {\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    const handlePerPageSelect = (perPage, page) => {\n        setLimit(perPage);\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={'Job Explorer'} />\n            </PageHeader>\n\n            {preflightError && (\n                <Main>\n                    <EmptyState {...preflightError} />\n                </Main>\n            )}\n\n            {!preflightError && (\n                <Main>\n                    <Card>\n                        <CardBody>\n                            <FilterableToolbar\n                                categories={options.data}\n                                filters={queryParams}\n                                setFilters={setFromToolbar}\n                                pagination={\n                                    <Pagination\n                                        itemCount={meta && meta.count ? meta.count : 0}\n                                        widgetId=\"pagination-options-menu-top\"\n                                        perPageOptions={perPageOptions}\n                                        perPage={queryParams.limit}\n                                        page={currPage}\n                                        variant={PaginationVariant.top}\n                                        onPerPageSelect={(_event, perPage, page) => {\n                                            handlePerPageSelect(perPage, page);\n                                        }}\n                                        onSetPage={(_event, pageNumber) => {\n                                            handleSetPage(pageNumber);\n                                        }}\n                                        isCompact\n                                    />\n                                }\n                                hasSettings\n                            />\n                            {error && <ApiErrorState message={error.error} />}\n                            {isLoading && <LoadingState />}\n                            {isSuccess && data.length <= 0 && <NoResults />}\n                            {isSuccess && data.length > 0 && <JobExplorerList jobs={data} />}\n                            <Pagination\n                                itemCount={meta && meta.count ? meta.count : 0}\n                                widgetId=\"pagination-options-menu-bottom\"\n                                perPageOptions={perPageOptions}\n                                perPage={queryParams.limit}\n                                page={currPage}\n                                variant={PaginationVariant.bottom}\n                                onPerPageSelect={(_event, perPage, page) => {\n                                    handlePerPageSelect(perPage, page);\n                                }}\n                                onSetPage={(_event, pageNumber) => {\n                                    handleSetPage(pageNumber);\n                                }}\n                                style={{ marginTop: '20px' }}\n                            />\n                        </CardBody>\n                    </Card>\n                </Main>\n            )}\n        </React.Fragment>\n    );\n};\n\nJobExplorer.propTypes = {\n    location: PropTypes.object,\n    history: PropTypes.object\n};\n\nexport default JobExplorer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nimport {\n    NotificationDrawerList as PFNotificationDrawerList,\n    NotificationDrawerListItem as PFNotificationDrawerListItem,\n    NotificationDrawerListItemBody,\n    NotificationDrawerListItemHeader\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkAltIcon } from '@patternfly/react-icons';\nimport LoadingState from '../Components/LoadingState';\nimport { capitalize } from '../Utilities/helpers';\n\nconst ExternalLinkAltIcon = styled(PFExternalLinkAltIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n  font-size: 14px;\n`;\n\nconst NotificationDrawerListItem = styled(PFNotificationDrawerListItem)`\n  border-top: 1px solid var(--pf-global--BorderColor--light-100\n    );\n  border-bottom::nth-child(odd): 1px solid var(--pf-global--BorderColor--light-100\n    );\n  box-shadow: none;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst NotificationDrawerList = styled(PFNotificationDrawerList)`\n  &:last-child {\n    border-bottom: 1px solid var(--pf-global--BorderColor--light-100);\n  }\n`;\n\nconst stringifyDate = date => {\n    const day = moment(date);\n    const oneHour = 60 * 60 * 1000;\n    const now = moment().utc();\n\n    if (now.isAfter(day)) {\n        return `${now.diff(day, 'days')} day(s) ago.`;\n    }\n\n    if (day.isSame(now, 'day')) {\n        if (day.valueOf() > oneHour) {\n            return `${day.diff(now, 'hours')} hour(s) ago.`;\n        }\n\n        return `${now.diff(day, 'minutes')} minute(s) ago.`;\n    }\n};\n\nconst AllNotificationTemplate = ({ notifications }) =>\n    notifications.map(\n        ({ date, message, label, notification_id: id, tower_url: url }) => {\n            if (label === '' || label === 'notice') {\n                return (\n                    <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n                        <NotificationDrawerListItemHeader\n                            variant=\"info\"\n                            title={\n                                <>\n                                    {url ? (\n                                        <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                            {capitalize(label)}\n                                            <ExternalLinkAltIcon />\n                                        </a>\n                                    ) : (\n                                        capitalize(label)\n                                    )}\n                                </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody>\n                            {message}{' '}\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n\n            if (label === 'error') {\n                return (\n                    <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n                        <NotificationDrawerListItemHeader\n                            variant=\"danger\"\n                            title={\n                                <>\n                                    {url ? (\n                                        <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                            {capitalize(label)}\n                                            <ExternalLinkAltIcon />\n                                        </a>\n                                    ) : (\n                                        capitalize(label)\n                                    )}\n                                </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                            {message}{' '}\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n\n            if (label === 'warning') {\n                return (\n                    <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n                        <NotificationDrawerListItemHeader\n                            variant=\"warning\"\n                            title={\n                                <>\n                                    {url ? (\n                                        <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                            {capitalize(label)}\n                                            <ExternalLinkAltIcon />\n                                        </a>\n                                    ) : (\n                                        capitalize(label)\n                                    )}\n                                </>\n                            }\n                        />\n                        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                            {message}{' '}\n                        </NotificationDrawerListItemBody>\n                    </NotificationDrawerListItem>\n                );\n            }\n        }\n    );\n\nconst ErrorNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'error')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n                variant=\"danger\"\n                title={\n                    <>\n                        {url ? (\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                {capitalize(label)}\n                                <ExternalLinkAltIcon />\n                            </a>\n                        ) : (\n                            capitalize(label)\n                        )}\n                    </>\n                }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                {message}{' '}\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst NoticeNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'notice')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n                variant=\"info\"\n                title={\n                    <>\n                        {url ? (\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                {capitalize(label)}\n                                <ExternalLinkAltIcon />\n                            </a>\n                        ) : (\n                            capitalize(label)\n                        )}\n                    </>\n                }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                {message}{' '}\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst WarningNotificationTemplate = ({ notifications }) =>\n    notifications\n    .filter(notification => notification.label === 'warning')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n        <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n                variant=\"warning\"\n                title={\n                    <>\n                        {url ? (\n                            <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                                {capitalize(label)}\n                                <ExternalLinkAltIcon />\n                            </a>\n                        ) : (\n                            capitalize(label)\n                        )}\n                    </>\n                }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n                {message}{' '}\n            </NotificationDrawerListItemBody>\n        </NotificationDrawerListItem>\n    ));\n\nconst NotificationsList = ({ filterBy, notifications }) => (\n    <>\n        <NotificationDrawerList>\n            {notifications.length <= 0 && <LoadingState />}\n            {filterBy === '' && (\n                <AllNotificationTemplate notifications={notifications} />\n            )}\n            {filterBy === 'notice' && (\n                <NoticeNotificationTemplate notifications={notifications} />\n            )}\n            {filterBy === 'error' && (\n                <ErrorNotificationTemplate notifications={notifications} />\n            )}\n            {filterBy === 'warning' && (\n                <WarningNotificationTemplate notifications={notifications} />\n            )}\n        </NotificationDrawerList>\n    </>\n);\n\nAllNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nErrorNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nWarningNotificationTemplate.propTypes = {\n    notifications: PropTypes.array\n};\n\nNotificationsList.propTypes = {\n    notifications: PropTypes.array,\n    filterBy: PropTypes.string\n};\n\nexport default NotificationsList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoData from '../../Components/NoData';\nimport { preflightRequest, readClusters, readNotifications } from '../../Api';\n\nimport {\n    Main,\n    PageHeader,\n    PageHeaderTitle\n} from '@redhat-cloud-services/frontend-components';\n\nimport {\n    Card,\n    CardBody,\n    CardTitle as PFCardTitle,\n    FormSelect,\n    FormSelectOption,\n    Pagination,\n    PaginationVariant,\n    NotificationDrawer\n} from '@patternfly/react-core';\n\nimport NotificationsList from '../../Components/NotificationsList';\n\nconst CardTitle = styled(PFCardTitle)`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n`;\n\nconst DropdownGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-end;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n\n  select {\n    margin: 0 10px;\n    width: 150px;\n\n    @media screen and (max-width: 1035px) {\n      margin: 10px 10px 0 0;\n    }\n\n    @media screen and (max-width: 865px) {\n      width: 100%;\n    }\n  }\n`;\n\nconst notificationOptions = [\n    {\n        value: 'please choose',\n        label: 'Select Notification Severity',\n        disabled: true\n    },\n    { value: 'error', label: 'View Critical', disabled: false },\n    { value: 'warning', label: 'View Warning', disabled: false },\n    { value: 'notice', label: 'View Notice', disabled: false },\n    { value: '', label: 'View All', disabled: false }\n];\n\nconst perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '20', value: 20 },\n    { title: '50', value: 50 },\n    { title: '100', value: 100 }\n];\n\nfunction formatClusterName(data) {\n    const defaultClusterOptions = [\n        { value: 'please choose', label: 'Select cluster', disabled: true },\n        { value: '', label: 'All Clusters', disabled: false },\n        { value: -1, label: 'Unassociated', disabled: false }\n    ];\n    return data.reduce(\n        (formatted, { label, cluster_id: id, install_uuid: uuid }) => {\n            if (label.length === 0) {\n                formatted.push({ value: id, label: uuid, disabled: false });\n            } else {\n                formatted.push({ value: id, label, disabled: false });\n            }\n\n            return formatted;\n        },\n        defaultClusterOptions\n    );\n}\n\nconst initialQueryParams = {\n    limit: 5,\n    offset: 0\n};\n\nconst Notifications = () => {\n    const [ preflightError, setPreFlightError ] = useState(null);\n    const [ notificationsData, setNotificationsData ] = useState([]);\n    const [ clusterOptions, setClusterOptions ] = useState([]);\n    const [ selectedCluster, setSelectedCluster ] = useState('');\n    const [ firstRender, setFirstRender ] = useState(true);\n    const [ isLoading, setIsLoading ] = useState(true);\n    const [ meta, setMeta ] = useState({});\n    const [ currPage, setCurrPage ] = useState(1);\n    const {\n        queryParams,\n        setId,\n        setLimit,\n        setOffset,\n        setSeverity\n    } = useQueryParams(initialQueryParams);\n\n    useEffect(() => {\n        if (firstRender) {\n            return;\n        }\n\n        const getData = () => {\n            return readNotifications({ params: queryParams });\n        };\n\n        const update = async () => {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            getData().then(({ notifications: notificationsData = [], meta }) => {\n                setNotificationsData(notificationsData);\n                setMeta(meta);\n                setIsLoading(false);\n            });\n        };\n\n        update();\n    }, [ queryParams ]);\n\n    useEffect(() => {\n        insights.chrome.appNavClick({ id: 'notifications', secondaryNav: true });\n\n        let ignore = false;\n        const fetchEndpoints = () => {\n            return Promise.all(\n                [ readClusters(), readNotifications({ params: queryParams }) ].map(p =>\n                    p.catch(() => [])\n                )\n            );\n        };\n\n        async function initializeWithPreflight() {\n            setIsLoading(true);\n            await window.insights.chrome.auth.getUser();\n            await preflightRequest().catch(error => {\n                setPreFlightError({ preflightError: error });\n            });\n            fetchEndpoints().then(\n                ([\n                    { templates: clustersData = []},\n                    { notifications: notificationsData = [], meta }\n                ]) => {\n                    if (!ignore) {\n                        const clusterOptions = formatClusterName(clustersData);\n                        setClusterOptions(clusterOptions);\n                        setNotificationsData(notificationsData);\n                        setMeta(meta);\n                        setFirstRender(false);\n                        setIsLoading(false);\n                    }\n                }\n            );\n        }\n\n        initializeWithPreflight();\n        return () => (ignore = true);\n    }, []);\n\n    const returnOffsetVal = page => {\n        let offsetVal = (page - 1) * queryParams.limit;\n        return offsetVal;\n    };\n\n    const handleSetPage = page => {\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    const handlePerPageSelect = (perPage, page) => {\n        setLimit(perPage);\n        const nextOffset = returnOffsetVal(page);\n        setOffset(nextOffset);\n        setCurrPage(page);\n    };\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title={'Notifications'} />\n            </PageHeader>\n            {preflightError && (\n                <Main>\n                    <EmptyState {...preflightError} />\n                </Main>\n            )}\n            {!preflightError && (\n                <>\n                    <Main>\n                        <Card>\n                            <CardTitle>\n                                <DropdownGroup>\n                                    <FormSelect\n                                        name=\"selectedCluster\"\n                                        value={selectedCluster}\n                                        onChange={value => {\n                                            setSelectedCluster(value);\n                                            setId(value);\n                                            setOffset(0);\n                                            setCurrPage(1);\n                                        }}\n                                        aria-label=\"Select Cluster\"\n                                    >\n                                        {clusterOptions.map(({ value, label, disabled }, index) => (\n                                            <FormSelectOption\n                                                isDisabled={disabled}\n                                                key={index}\n                                                value={value}\n                                                label={label}\n                                            />\n                                        ))}\n                                    </FormSelect>\n                                    <FormSelect\n                                        name=\"selectedNotification\"\n                                        value={queryParams.severity || ''}\n                                        onChange={value => {\n                                            setSeverity(value);\n                                            setOffset(0);\n                                            setCurrPage(1);\n                                        }}\n                                        aria-label=\"Select Notification Type\"\n                                    >\n                                        {notificationOptions.map(\n                                            ({ disabled, value, label }, index) => (\n                                                <FormSelectOption\n                                                    isDisabled={disabled}\n                                                    key={index}\n                                                    value={value}\n                                                    label={label}\n                                                />\n                                            )\n                                        )}\n                                    </FormSelect>\n                                </DropdownGroup>\n                                <Pagination\n                                    itemCount={meta && meta.count ? meta.count : 0}\n                                    widgetId=\"pagination-options-menu-top\"\n                                    perPageOptions={perPageOptions}\n                                    perPage={queryParams.limit}\n                                    page={currPage}\n                                    variant={PaginationVariant.top}\n                                    onPerPageSelect={(_event, perPage, page) => {\n                                        handlePerPageSelect(perPage, page);\n                                    }}\n                                    onSetPage={(_event, pageNumber) => {\n                                        handleSetPage(pageNumber);\n                                    }}\n                                    isCompact\n                                />\n                            </CardTitle>\n                            <CardBody>\n                                {isLoading && <LoadingState />}\n                                {!isLoading && notificationsData.length <= 0 && <NoData />}\n                                {!isLoading && notificationsData.length > 0 && (\n                                    <NotificationDrawer>\n                                        <NotificationsList\n                                            filterBy={queryParams.severity || ''}\n                                            options={notificationOptions}\n                                            notifications={notificationsData}\n                                        />\n                                    </NotificationDrawer>\n                                )}\n                                <Pagination\n                                    itemCount={meta && meta.count ? meta.count : 0}\n                                    widgetId=\"pagination-options-menu-bottom\"\n                                    perPageOptions={perPageOptions}\n                                    perPage={queryParams.limit}\n                                    page={currPage}\n                                    variant={PaginationVariant.bottom}\n                                    onPerPageSelect={(_event, perPage, page) => {\n                                        handlePerPageSelect(perPage, page);\n                                    }}\n                                    onSetPage={(_event, pageNumber) => {\n                                        handleSetPage(pageNumber);\n                                    }}\n                                    style={{ marginTop: '20px' }}\n                                />\n                            </CardBody>\n                        </Card>\n                    </Main>\n                </>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default Notifications;\n","import moment from 'moment';\n\n/*\n * isNumeric - return true if input is a real number\n */\nexport function isNumeric(val) {\n    if (val === 0 || val === '0') {\n        return true;\n    }\n\n    if (parseInt(val)) {\n        return true;\n    }\n\n    if (parseFloat(val)) {\n        return true;\n    }\n\n    return false;\n}\n\nexport function trimStr(str) {\n    return str.toString().replace(/['\"]+/g, '');\n}\n\nexport function formatDateTime(dateTime) {\n    return moment(new Date(dateTime).toISOString()).format('M/D/YYYY h:mm:ssa');\n}\n\nexport function formatDate(date) {\n    return moment(date).format('YYYY-MM-DD');\n}\n\nexport function formatSeconds(seconds) {\n    return moment()\n    .startOf('day')\n    .seconds(seconds)\n    .format('H:mm:ss');\n}\n\nexport function getTotal(data) {\n    if (!data) {\n        return;\n    } else {\n        let total = 0;\n        data.forEach(datum => {\n            total += parseInt(datum.count);\n        });\n        return total;\n    }\n}\n\nexport function formatPercentage(val) {\n    if (isNaN(val)) {\n        return;\n    }\n\n    return `${val}%`;\n}\n\nexport const capitalize = s => {\n    if (typeof s !== 'string') {\n        return '';\n    }\n\n    return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport function calculateDelta(a, b) {\n    if (!isNumeric(a) || !isNumeric(b)) {\n        return 0;\n    }\n\n    // never return less than zero ...\n    if (b - a < 0) {\n        return 0;\n    }\n\n    return b - a;\n}\n\nexport function convertMinsToMs(mins) {\n    if (!parseInt(mins)) {\n        return 0;\n    }\n\n    return mins * 60000;\n}\n\nexport function convertMsToMins(ms) {\n    if (!parseInt(ms)) {\n        return 0;\n    }\n\n    return ms / 60000;\n}\n\nexport function convertSecondsToMins(seconds) {\n    if (!parseInt(seconds)) {\n        return 0;\n    }\n\n    return seconds / 60;\n}\n\nexport function convertMinsToSeconds(mins) {\n    if (!parseInt(mins) || parseInt(mins) < 0) {\n        return 0;\n    }\n\n    return +parseInt(mins) * 60;\n}\n\nexport function convertSecondsToHours(seconds) {\n    if (!parseInt(seconds)) {\n        return 0;\n    }\n\n    return seconds / 3600;\n}\n\nexport function convertWithCommas(arr, key) {\n    const split = arr.reduce((strs, datum) => {\n        strs.push(datum[key]);\n        return strs;\n    }, []);\n    return split.join(', ');\n}\n\nexport function formatJobType(type) {\n    return type === 'job' ? 'Playbook run' : 'Workflow job';\n}\n\nexport function formatJobStatus(status) {\n    return status === 'successful' ? 'Success' : 'Failed';\n}\n\nexport function formatJobDetailsURL(baseURL, jobId) {\n    const subDirectory1 = 'job';\n    const subDirectory2 = 'details';\n    return `${baseURL}/#/${subDirectory1}/${jobId}/${subDirectory2}/`;\n}\n","import React from 'react';\nimport {\n    Title,\n    EmptyState,\n    EmptyStateVariant,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst DefaultLoadingState = () => (\n    <EmptyState variant={EmptyStateVariant.full}>\n        <EmptyStateIcon icon={CubesIcon} />\n        <Title headingLevel=\"h5\" size=\"lg\">\n      Loading...\n        </Title>\n        <EmptyStateBody>Please wait.</EmptyStateBody>\n    </EmptyState>\n);\n\nexport default DefaultLoadingState;\n"],"sourceRoot":""}