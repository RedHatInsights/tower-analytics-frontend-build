{"version":3,"file":"js/542.98b751b8e983722fa739.js","mappings":"0NAKMA,EAAkB,SAACC,GACvB,IAAMC,EAAY,SAACC,GACjB,IAAQC,EAAeD,EAAfC,GAAIC,EAAWF,EAAXE,OAoBNC,GAAWC,EAAAA,EAAAA,eAEjB,OACEC,IAAAA,cAACP,GAAKQ,EAAAA,EAAAA,GAAA,GACAN,EAAK,CACTO,SAvBa,WAMf,OAHEC,SAASC,EAAAA,GAAU,IAAMR,GAAIS,MAAM,UACjCR,EAAOS,KACPT,EAAOU,OAAS,GAEtB,EAiBIC,UAfc,WAMhB,OAHEL,SAASC,EAAAA,GAAU,IAAMR,GAAIS,MAAM,WACjCR,EAAOY,IACPZ,EAAOa,QAAU,GAEvB,EASIZ,SAAUA,IAGhB,EAOA,OALAJ,EAAUiB,UAAY,CACpBf,GAAIgB,IAAAA,OACJf,OAAQe,IAAAA,QAGHlB,CACT,EAEAF,EAAgBmB,UAAY,CAC1BlB,MAAOmB,IAAAA,SAGT,S,4YC7CMC,EAAYC,EAAAA,QAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0GAKhB,SAACtB,GAAK,OAAKA,EAAMuB,MAAM,IAG7BC,EAAeL,EAAAA,QAAOC,IAAGK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,+GAOzBI,EAAUP,EAAAA,QAAOC,IAAGO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,uEAMpBM,EAAQT,EAAAA,QAAOC,IAAIS,OAAM,SAAC7B,GAAK,MAAM,CACzC8B,MAAO9B,EAAM8B,OAAS,QACvB,GAFaX,CAEXY,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,0FAGa,SAACtB,GAAK,OAAKA,EAAM8B,KAAK,IAIhCE,EAAQb,EAAAA,QAAOc,KAAIC,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,sJASnBa,EAAWhB,EAAAA,QAAOc,KAAIG,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,gGAOtBe,EAAS,SAAHC,GAAwD,IAAlDC,EAAID,EAAJC,KAAMC,EAAQF,EAARE,SAAUjB,EAAMe,EAANf,OAAQkB,EAAQH,EAARG,SAAUC,EAASJ,EAATI,UAClD,OACErC,IAAAA,cAACa,EAAS,CAACK,OAAQA,GAChBgB,EAAKI,KAAI,SAAAC,EAA6BC,GAAK,IAA/BC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MAAO9C,EAAE2C,EAAF3C,GAAI+C,EAAKJ,EAALI,MAAK,OACjC3C,IAAAA,cAACmB,EAAY,CAACyB,IAAKJ,GACjBxC,IAAAA,cAACqB,EAAO,KACNrB,IAAAA,cAACuB,EAAK,CAACE,MAAOiB,IACd1C,IAAAA,cAAC2B,EAAK,KAAEc,IAETE,GAAS3C,IAAAA,cAAC8B,EAAQ,KAAEa,GACpBR,GACCnC,IAAAA,cAAC6C,EAAAA,EAAM,CACLC,UAAWX,EAASY,MAAK,SAACC,GAAS,OAAKA,IAAcpD,CAAE,IACxDqD,SAAU,kBAAMb,EAASxC,EAAG,EAC5B,gBAAAsD,OAAeb,EAAS,KAAAa,OAAIT,GAC5BC,MAAO9C,EACPgD,IAAKJ,IAGI,IAIvB,EAEAR,EAAOrB,UAAY,CACjBuB,KAAMtB,IAAAA,MAAgBuC,WACtBhB,SAAUvB,IAAAA,MAAgBuC,WAC1Bf,SAAUxB,IAAAA,KAAeuC,WACzBjC,OAAQN,IAAAA,OAAiBuC,WACzBd,UAAWzB,IAAAA,OAAiBuC,YAG9B,U,4CC7EM9B,EAAUP,EAAAA,QAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,wGAOpBmC,EAAa,SAACC,GAClB,IAAMC,EAASD,EAAKE,MAAM,KAC1B,MAAO,GAAPL,OAAUI,EAAO,GAAE,KAAAJ,OAAII,EAAO,GAChC,EAEME,EAAkB,SAAHvB,GAKf,IAAAwB,EAAAxB,EAJJyB,QAAAA,OAAO,IAAAD,EAAG,KAAIA,EACdE,EAAY1B,EAAZ0B,aACAC,EAAM3B,EAAN2B,OACGjE,GAAKkE,EAAAA,EAAAA,GAAA5B,EAAA6B,GAEFC,EAASH,EAAOtB,KAAI,SAAAC,GAAkB,IAAf3C,EAAE2C,EAAF3C,GAC3B,MAAO,CACL6C,KAFiCF,EAAJE,MAET,kBACpBC,MAAO/C,EAAMqE,UAAUpE,GACvBA,GAAAA,EAEJ,IACAqE,GAAsCC,EAAAA,EAAAA,UACpCN,EAAOtB,KAAI,SAAA6B,GAAK,OAAAA,EAAFvE,EAAW,IAAEwE,MAAM,EAAG,IACrCC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAFMM,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAG9BI,EAAU,KAURC,EAAO,WAEXtE,EAAAA,IAAa,IAAMT,EAAMC,GAAK,QAAQ+E,SACtC,IACMzC,EAD0BvC,EAA1BuC,KACuB0C,QAAO,SAACC,EAASC,GAAsB,IAAlBzB,EAAIyB,EAAJzB,KAC1C0B,EADqDD,EAALE,MAC3BC,QAAO,SAAAC,GAAA,IAAGtF,EAAEsF,EAAFtF,GAAE,OAAO2E,EAAYY,SAASvF,EAAG,IACtE,OAAOiF,EAAU3B,OAAO,CAAEG,KAAAA,EAAM0B,aAAAA,GAClC,GAAG,IACGK,EAAQzF,EAAMO,WACdgB,EAASvB,EAAMa,YAEf6E,EAAKjF,EAAAA,MAAekF,MAAM,CAAC,EAAGF,IAAQG,QAAQ,KAE9CC,EAAKpF,EAAAA,MACLqF,EAAIrF,EAAAA,MAAiBkF,MAAM,CAACpE,EAAQ,IAEpCwE,EAAmBC,KAAKC,MAAM1D,EAAK2D,QAAU3D,EAAK2D,OAAS,IAC3DC,EAAoBH,KAAKC,MAAM1D,EAAK2D,QAAU3D,EAAK2D,OAAS,IAC9DE,EAAQ7D,EAAKI,KAAI,SAAC0D,GAAC,OAAKA,EAAE3C,IAAI,IAC9BnB,EAAK2D,OAAS,KAChBE,EAAQ7D,EACLI,KAAI,SAAC0D,EAAGC,GAAC,OACRA,GAAK/D,EAAK2D,OAAS,GAAKC,EAAoBJ,IAAsB,EAC9DM,EAAE3C,UACF6C,CAAS,IAEdjB,QAAO,SAACkB,GAAI,OAAKA,CAAI,KAG1B,IAAMC,EAAQhG,EAAAA,IAAciF,GAAIgB,WAAWN,GAAOO,WAAWlD,GAEvDmD,EAAQnG,EAAAA,IAAYqF,GAAGM,MAAM,GAAGS,UAAUpB,EAAO,EAAG,GAEpDqB,EAAMrG,EAAAA,GACF,IAAMT,EAAMC,IACnB8G,OAAO,OACPC,KAAK,QAASvB,EAAQzF,EAAME,OAAOS,KAAOX,EAAME,OAAOU,OACvDoG,KAAK,SAAUzF,EAASvB,EAAME,OAAOa,OAASf,EAAME,OAAOY,KAC3DiG,OAAO,KACPC,KACC,YACA,aAAehH,EAAME,OAAOS,KAAO,IAAMX,EAAME,OAAOY,IAAM,KAG1DmG,EAAQ1E,EAAKI,KAAI,SAAC0D,GAAC,OAAKA,EAAE3C,IAAI,IAC9BwD,EAAU,IAAIlD,EAAa,CAC/B8C,IAAK,IAAM9G,EAAMC,KAEnByF,EAAGyB,OAAOF,GACVpB,EAAGsB,OAAOvC,GAAae,MAAM,CAAC,EAAGD,EAAG0B,cACpCtB,EAAEqB,OAAO,CACP,EACA1G,EAAAA,IAAO8B,GAAM,SAACmB,GAAI,OAChBjD,EAAAA,IAAOiD,EAAK0B,cAAc,SAACiB,GAAC,OAAe,KAAVA,EAAEtD,KAAY,GAAC,KAC7C,IAIP+D,EACGC,OAAO,KACPC,KAAK,QAAS,UACdK,KAAKT,GACLU,UAAU,QACVN,KAAK,SAAU,WACfD,OAAO,QACPC,KAAK,YAAa,eAClBA,KAAK,IAAK,GACVA,KAAK,KAAM,SACXtG,MAAM,cAAe,OACrBA,MAAM,cAAe,QACrB6G,KAAK,SACRT,EACGC,OAAO,QACPC,KAAK,YAAa,eAClBA,KAAK,IAAK,EAAIhH,EAAME,OAAOS,MAC3BqG,KAAK,IAAK,EAAIzF,EAAS,GACvByF,KAAK,KAAM,OACXtG,MAAM,cAAe,UACrB6G,KAAKvH,EAAMwH,QAGdV,EACGC,OAAO,KACPC,KAAK,QAAS,UACdA,KAAK,YAAa,eAAiBzF,EAAS,KAC5C8F,KAAKZ,GACLa,UAAU,QACVN,KAAK,SAAU,WAClBF,EACGC,OAAO,QACPC,KACC,YACA,aAAevB,EAAQ,EAAI,MAAQlE,EAASvB,EAAME,OAAOY,IAAM,IAAM,KAEtEJ,MAAM,cAAe,UACrB6G,KAAK,QAER,IAAI9C,EAAQqC,EAAIQ,UAAU,UAAU/E,KAAKA,GACzCkC,EAAMgD,OAAOzC,SAEb,IAAM0C,EAAQjD,EACXiD,QACAX,OAAO,KACPC,KAAK,QAAS,SACdA,KAAK,aAAa,SAACX,GAAC,MAAK,aAAeX,EAAGW,EAAE3C,MAAQ,KAAK,IAGzDiE,GAFJlD,EAAQA,EAAMmD,MAAMF,IAEHJ,UAAU,QAAQ/E,MAAK,SAAU8D,GAChD,OAAOA,EAAEjB,YACX,IACAuC,EAAKF,OAAOzC,SAEZ,IAAMlD,EAAQ9B,EAAMqE,UACdwD,EAAWF,EACdD,QACAX,OAAO,QACPC,KAAK,QAASnB,EAAGuB,aACjBJ,KAAK,KAAK,SAAUX,GACnB,OAAOR,EAAGQ,EAAEpG,GACd,IACCS,MAAM,QAAQ,SAAU2F,GACvB,OAAOvE,EAAMuE,EAAEpG,GACjB,IACC+G,KAAK,KAAK,SAAUX,GACnB,OAAOP,EAAEO,EAAEtD,MACb,IACCiE,KAAK,UAAU,SAAUX,GACxB,OAAO9E,EAASuE,EAAEO,EAAEtD,MACtB,IACC+E,GAAG,aAAa,SAAUzB,GACzBA,EAAE0B,YAAc1B,EAAEvD,KAAKkF,SAAS,UAChCvH,EAAAA,GAAUwH,MAAMvH,MACd,SACAqD,GAAWsC,EAAE0B,WAAa,UAAY,WAExCtH,EAAAA,GAAUwH,MAAMvH,MAAM,OAAQD,EAAAA,IAAOqB,EAAMuE,EAAEpG,KAAKiI,OAAO,IACzDhB,EAAQiB,gBAAgB9B,EAC1B,IACCyB,GAAG,YAAaZ,EAAQiB,iBACxBL,GAAG,YAAY,SAAUzB,GACxB5F,EAAAA,GAAUwH,MAAMvH,MAAM,OAAQoB,EAAMuE,EAAEpG,KACtCiH,EAAQkB,gBACV,IACCN,GAAG,QAAS/D,GACf4D,EAAOA,EAAKC,MAAMC,EACpB,EAMMQ,EAAS,WACbC,aAAaxD,GACbA,EAAUyD,YAAW,WACnBxD,GACF,GAAG,IACL,EAgBA,OAdAyD,EAAAA,EAAAA,YAAU,WAIR,OAdAzD,IAYA0D,OAAOC,iBAAiB,SAAUL,GAE3B,WACLC,aAAaxD,GACb2D,OAAOE,oBAAoB,SAAUN,EACvC,CACF,GAAG,KAEHG,EAAAA,EAAAA,YAAU,WACRzD,GACF,GAAG,CAAC/E,EAAMuC,KAAMqC,IAGdvE,IAAAA,cAACqB,EAAO,KACNrB,IAAAA,cAAA,OAAKJ,GAAID,EAAMC,KACdmE,EAAO8B,OAAS,GACf7F,IAAAA,cAACgC,EAAM,CACLpC,GAAE,GAAAsD,OAAKvD,EAAMC,GAAE,WACfsC,KAAM6B,EACN5B,SAAUoC,EACVnC,SA5La,SAACxC,GAChB2E,EAAYY,SAASvF,GACvB4E,EAAeD,EAAYU,QAAO,SAACsD,GAAE,OAAKA,IAAO3I,CAAE,KAEnD4E,EAAe,GAADtB,QAAAsF,EAAAA,EAAAA,GAAKjE,GAAW,CAAE3E,IAEpC,EAuLQsB,OAAO,QACPmB,UAAS,GAAAa,OAAKvD,EAAMC,GAAE,aAKhC,EAEA4D,EAAgB7C,UAAY,CAC1Bf,GAAIgB,IAAAA,OACJsB,KAAMtB,IAAAA,MACNgD,OAAQhD,IAAAA,MACRf,OAAQe,IAAAA,OACRJ,UAAWI,IAAAA,KACXV,SAAUU,IAAAA,KACVoD,UAAWpD,IAAAA,KACXuG,OAAQvG,IAAAA,OACR8C,QAAS9C,IAAAA,KACT+C,aAAc/C,IAAAA,IAAcuC,YAG9BK,EAAgBiF,aAAe,CAC7B7E,OAAQ,IAGV,SAAepE,EAAAA,EAAAA,GAAgBgE,G,+BC1PzBJ,GAAa,SAACC,GAClB,IAAMC,EAASD,EAAKE,MAAM,KAC1B,MAAO,GAAPL,OAAUI,EAAO,GAAE,KAAAJ,OAAII,EAAO,GAChC,EAEqBoF,GAAW,WAC9B,SAAAA,EAAY/I,GAAO,IAAAgJ,EAAA,MAAAC,EAAAA,GAAAA,GAAA,KAAAF,IAAAG,EAAAA,EAAAA,GAAA,wBAiED,SAAC7C,GACjB,IAAI3C,EACAyF,EACAC,EACEC,EACJ5I,EAAAA,IAAS6I,MACT7I,EAAAA,GAAUuI,EAAKlC,KAAKyC,OAAOC,wBAAwBH,EACnD,GACIvD,EACJrF,EAAAA,IAASgJ,MACThJ,EAAAA,GAAUuI,EAAKlC,KAAKyC,OAAOC,wBAAwB1D,EACnD,GACF,GAAKO,EAAL,CAIE3C,EAAO2C,EAAE3C,KACTyF,EAAU9C,EAAEvD,KACZsG,EAAO/C,EAAEtD,MACLsD,EAAEvD,KAAKoD,OAJO,KAKhBiD,EAAU9C,EAAEvD,KAAK2B,MAAM,EALP,IAKqBlB,OAAO,QAO5C8C,EAAE0B,YACJiB,EAAKU,YAAY1C,KAAK,SAAU,IAChCgC,EAAKU,YAAY1C,KAAK,KAAM,IAC5BgC,EAAKtF,KAAKsD,KAAK,IAAK,IACpBgC,EAAKI,KAAKpC,KAAK,IAAK,IACpBgC,EAAKG,QAAQnC,KAAK,KAAK,GACvBgC,EAAKW,UAAUpC,KAAK,uBAEpByB,EAAKU,YAAY1C,KAAK,SAAU,IAChCgC,EAAKU,YAAY1C,KAAK,KAAM,IAC5BgC,EAAKtF,KAAKsD,KAAK,IAAK,IACpBgC,EAAKI,KAAKpC,KAAK,IAAK,IACpBgC,EAAKG,QAAQnC,KAAK,IAAK,IACvBgC,EAAKW,UAAUpC,KAAK,KAGtB,IAAMqC,EAAoBnG,GACpBoG,EAAeb,EAAKc,YAAYP,OAAOC,wBAAwB/D,MAC/DsE,EAAatJ,EAAAA,GACTuI,EAAKlC,IAAM,SAClByC,OACAC,wBAAwB/D,MAErBuE,EADW,IAAOH,EAAeE,EAAc,IACzBV,EAAIU,EAAc,IAE9Cf,EAAKtF,KAAK6D,KAAK,GAAKqC,EAAkBlG,IACtCsF,EAAKG,QAAQ5B,KAAK,GAAK4B,GACvBH,EAAKI,KAAK7B,KAAU6B,EAAO,SAC3BJ,EAAKiB,UAAYjB,EAAKI,KAAKG,OAAOW,wBAElC,IAGIC,EAHEC,EAAepB,EAAKiB,UAAYjB,EAAKqB,SAAY,IAEjDC,EAAUF,EADE,GAIhBD,EADEC,EAHc,GAIApB,EAAKqB,SAAWC,EAEhBtB,EAAKqB,SAGvBrB,EAAKU,YAAY1C,KAAK,QAASmD,GAC/BnB,EAAKc,YAAY9C,KAAK,YAAa,aAAeqC,EAAI,IAAMvD,EAAI,KAC5DkE,GACFhB,EAAKuB,aAAavD,KAAK,YAAa,gCACpCgC,EAAKU,YAAY1C,KAAK,KAAMmD,EAAgB,IAC5CnB,EAAKI,KAAKpC,KAAK,KAAMgC,EAAKiB,UAAY,GAAK,GAC3CjB,EAAKG,QAAQnC,KAAK,KAAMmD,EAAgB,GACxCnB,EAAKtF,KAAKsD,KAAK,KAAMmD,EAAgB,GACrCnB,EAAKW,UAAU3C,KAAK,KAAMmD,EAAgB,KAE1CnB,EAAKuB,aAAavD,KAAK,YAAa,+BACpCgC,EAAKU,YAAY1C,KAAK,IAAK,IAC3BgC,EAAKG,QAAQnC,KAAK,IAAK,IACvBgC,EAAKI,KAAKpC,KAAK,IAAKmD,EAAgB,GACpCnB,EAAKtF,KAAKsD,KAAK,IAAK,IACpBgC,EAAKW,UAAU3C,KAAK,IAAK,KAG3BgC,EAAKc,YAAYpJ,MAAM,UAAW,GAClCsI,EAAKc,YAAYU,WAhEjB,CAiEF,KAACtB,EAAAA,EAAAA,GAAA,uBAEgB,WACfF,EAAKc,YACFW,aACAC,MAAM,IACNhK,MAAM,UAAW,GACjBA,MAAM,iBAAkB,OAC7B,IA/JEuH,KAAKnB,IAAM9G,EAAM8G,IACjBmB,KAAKlD,MACP,CA4DC,OA5DA4F,EAAAA,GAAAA,GAAA5B,EAAA,EAAA9F,IAAA,OAAAF,MAED,WACEkF,KAAKxC,MAAQ,IACbwC,KAAK6B,YAAcrJ,EAAAA,GAAUwH,KAAKnB,IAAM,SAASC,OAAO,KACxDkB,KAAK6B,YAAY9C,KAAK,KAAM,0BAA4BiB,KAAKnB,IAAIrC,MAAM,IACvEwD,KAAK6B,YAAY9C,KAAK,WAAY,WAClCiB,KAAK6B,YAAYpJ,MAAM,UAAW,GAClCuH,KAAK6B,YAAYpJ,MAAM,iBAAkB,QACzCuH,KAAK6B,YAAY9C,KAAK,YAAa,uBACnCiB,KAAKoC,SAAW,IAEhBpC,KAAK2C,mBAAqB,GAE1B3C,KAAKsC,aAAetC,KAAK6B,YACtB/C,OAAO,QACPC,KAAK,YAAa,iCAClBA,KAAK,IAAK,GACVA,KAAK,IAAK,GACVA,KAAK,SAAU,IACfA,KAAK,QAAS,IACdA,KAAK,OAAQ,WAChBiB,KAAKyB,YAAczB,KAAK6B,YACrB/C,OAAO,QACPC,KAAK,IAAK,IACVA,KAAK,KAAM,IACXA,KAAK,KAAM,GACXA,KAAK,SAAU,IACfA,KAAK,QAASiB,KAAKoC,UACnBrD,KAAK,OAAQ,WAChBiB,KAAKvE,KAAOuE,KAAK6B,YACd/C,OAAO,QACPC,KAAK,IAAK,IACVA,KAAK,IAAK,IACVA,KAAK,YAAa,IAClBA,KAAK,OAAQ,SACbO,KAAK,QACRU,KAAKmB,KAAOnB,KAAK6B,YACd/C,OAAO,QACPC,KAAK,OAAQ,SACbA,KAAK,YAAa,IAClBA,KAAK,IAAK,IACVA,KAAK,IAAK,IACVO,KAAK,UACRU,KAAKkB,QAAUlB,KAAK6B,YACjB/C,OAAO,QACPC,KAAK,OAAQ,SACbA,KAAK,cAAe,KACpBA,KAAK,IAAK,IACVA,KAAK,IAAK,IACVA,KAAK,YAAa,IAClBO,KAAK,OAERU,KAAK0B,UAAY1B,KAAK6B,YACnB/C,OAAO,QACPC,KAAK,OAAQ,SACbA,KAAK,IAAK,IACVA,KAAK,IAAK,IACVA,KAAK,YAAa,IAClBO,KAAK,GACV,KAACwB,CAAA,CAhE6B,GCL1BtF,GAAa,SAACC,GAClB,IAAMC,EAASD,EAAKE,MAAM,KAC1B,MAAO,GAAPL,OAAUI,EAAO,GAAE,KAAAJ,OAAII,EAAO,GAChC,EAEqBkH,GAAY,WAC/B,SAAAA,EAAY7K,GAAO,IAAAgJ,EAAA,MAAAC,EAAAA,GAAAA,GAAA,KAAA4B,IAAA3B,EAAAA,EAAAA,GAAA,wBAwDD,SAAC7C,GACjB,IAAI3C,EACAyF,EACAC,EACEC,EACJ5I,EAAAA,IAAS6I,MACT7I,EAAAA,GAAUuI,EAAKlC,KAAKyC,OAAOC,wBAAwBH,EACnD,GACIvD,EACJrF,EAAAA,IAASgJ,MACThJ,EAAAA,GAAUuI,EAAKlC,KAAKyC,OAAOC,wBAAwB1D,EACnD,GACF,GAAKO,EAAL,CAIE3C,EAAO2C,EAAE3C,KACTyF,EAAU9C,EAAEvD,KACZsG,EAAO/C,EAAEtD,MACLsD,EAAEvD,KAAKoD,OAJO,KAKhBiD,EAAU9C,EAAEvD,KAAK2B,MAAM,EALP,IAKqBlB,OAAO,QAIhD,IAAMqG,EAAoBnG,GACpBoG,EAAeb,EAAKc,YAAYP,OAAOC,wBAAwB/D,MAC/DsE,EAAatJ,EAAAA,GACTuI,EAAKlC,IAAM,SAClByC,OACAC,wBAAwB/D,MAErBuE,EADW,IAAOH,EAAeE,EAAc,IACzBV,EAAIU,EAAc,IAE9Cf,EAAKtF,KAAK6D,KAAK,GAAKqC,EAAkBlG,IACtCsF,EAAKG,QAAQ5B,KAAK,GAAK4B,GACvBH,EAAKI,KAAK7B,KAAU6B,EAAO,UAC3BJ,EAAKiB,UAAYjB,EAAKI,KAAKG,OAAOW,wBAElC,IAGIC,EAHEC,EAAepB,EAAKiB,UAAYjB,EAAKqB,SAAY,IAEjDC,EAAUF,EADE,GAIhBD,EADEC,EAHc,GAIApB,EAAKqB,SAAWC,EAEhBtB,EAAKqB,SAGvBrB,EAAKU,YAAY1C,KAAK,QAASmD,GAC/BnB,EAAKc,YAAY9C,KAAK,YAAa,aAAeqC,EAAI,IAAMvD,EAAI,KAC5DkE,GACFhB,EAAKuB,aAAavD,KAAK,YAAa,gCACpCgC,EAAKU,YAAY1C,KAAK,KAAMmD,EAAgB,IAC5CnB,EAAKI,KAAKpC,KAAK,KAAMgC,EAAKiB,UAAY,GAAK,GAC3CjB,EAAKG,QAAQnC,KAAK,KAAMmD,EAAgB,GACxCnB,EAAKtF,KAAKsD,KAAK,KAAMmD,EAAgB,KAErCnB,EAAKuB,aAAavD,KAAK,YAAa,+BACpCgC,EAAKU,YAAY1C,KAAK,IAAK,IAC3BgC,EAAKG,QAAQnC,KAAK,IAAK,IACvBgC,EAAKI,KAAKpC,KAAK,IAAKmD,EAAgB,GACpCnB,EAAKtF,KAAKsD,KAAK,IAAK,KAGtBgC,EAAKc,YAAYpJ,MAAM,UAAW,GAClCsI,EAAKc,YAAYU,WA3CjB,CA4CF,KAACtB,EAAAA,EAAAA,GAAA,uBAEgB,WACfF,EAAKc,YACFW,aACAC,MAAM,IACNhK,MAAM,UAAW,GACjBA,MAAM,iBAAkB,OAC7B,IAjIEuH,KAAKnB,IAAM9G,EAAM8G,IACjBmB,KAAKlD,MACP,CAmDC,OAnDA4F,EAAAA,GAAAA,GAAAE,EAAA,EAAA5H,IAAA,OAAAF,MAED,WACEkF,KAAKxC,MAAQ,IACbwC,KAAK6B,YAAcrJ,EAAAA,GAAUwH,KAAKnB,IAAM,SAASC,OAAO,KACxDkB,KAAK6B,YAAY9C,KAAK,KAAM,0BAA4BiB,KAAKnB,IAAIrC,MAAM,IACvEwD,KAAK6B,YAAY9C,KAAK,WAAY,WAClCiB,KAAK6B,YAAYpJ,MAAM,UAAW,GAClCuH,KAAK6B,YAAYpJ,MAAM,iBAAkB,QACzCuH,KAAK6B,YAAY9C,KAAK,YAAa,uBACnCiB,KAAKoC,SAAW,IAChBpC,KAAK2C,mBAAqB,GAE1B3C,KAAKsC,aAAetC,KAAK6B,YACtB/C,OAAO,QACPC,KAAK,YAAa,iCAClBA,KAAK,IAAK,GACVA,KAAK,IAAK,GACVA,KAAK,SAAU,IACfA,KAAK,QAAS,IACdA,KAAK,OAAQ,WAChBiB,KAAKyB,YAAczB,KAAK6B,YACrB/C,OAAO,QACPC,KAAK,IAAK,IACVA,KAAK,KAAM,IACXA,KAAK,KAAM,GACXA,KAAK,SAAU,IACfA,KAAK,QAASiB,KAAKoC,UACnBrD,KAAK,OAAQ,WAChBiB,KAAKvE,KAAOuE,KAAK6B,YACd/C,OAAO,QACPC,KAAK,IAAK,IACVA,KAAK,IAAK,IACVA,KAAK,YAAa,IAClBA,KAAK,OAAQ,SACbO,KAAK,QACRU,KAAKmB,KAAOnB,KAAK6B,YACd/C,OAAO,QACPC,KAAK,OAAQ,SACbA,KAAK,YAAa,IAClBA,KAAK,IAAK,IACVA,KAAK,IAAK,IACVO,KAAK,UACRU,KAAKkB,QAAUlB,KAAK6B,YACjB/C,OAAO,QACPC,KAAK,OAAQ,SACbA,KAAK,cAAe,KACpBA,KAAK,IAAK,IACVA,KAAK,IAAK,IACVA,KAAK,YAAa,IAClBO,KAAK,MACV,KAACsD,CAAA,CAvD8B,GCC3BnJ,GAAUP,EAAAA,QAAOC,IAAGC,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,qEAMpBwJ,GAAO,WACX,SAAAA,EAAY9K,GAAO,IAAAgJ,EAAA,MAAAC,EAAAA,GAAAA,GAAA,KAAA6B,IAAA5B,EAAAA,EAAAA,GAAA,wBAkED,SAAC7C,GAOjB,IAAI0E,EACAC,EACA7B,GAPe,IAAfH,EAAKiC,QACPjC,EAAKjE,KAAKsB,GACV2C,EAAKiC,OAAQ,GAMf,IAAM5B,EACJ5I,EAAAA,IAAS6I,MACT7I,EAAAA,GAAUuI,EAAKlC,KAAKyC,OAAOC,wBAAwBH,EACnD,GACIvD,EACJrF,EAAAA,IAASgJ,MACThJ,EAAAA,GAAUuI,EAAKlC,KAAKyC,OAAOC,wBAAwB1D,EACnD,GACF,GAAKO,EAAL,CAIIA,GAAKA,EAAE9D,OAETwI,EAAO1E,EAAE9D,KAAK2I,QACdF,EAAc3E,EAAE9D,KAAK4I,aACrBhC,EAAU9C,EAAE9D,KAAKO,KACbuD,EAAE9D,KAAKO,KAAKoD,OAJE,KAKhBiD,EAAU9C,EAAE9D,KAAKO,KAAK2B,MAAM,EAAG2G,IAAe7H,OAAO,SAIzD,IAAMsG,EAAeb,EAAKc,YAAYP,OAAOC,wBAAwB/D,MAC/DsE,EAAatJ,EAAAA,GACTuI,EAAKlC,IAAM,SAClByC,OACAC,wBAAwB/D,MAErBuE,EADW,IAAOH,EAAeE,EAAc,IACzBV,EAAIU,EAAc,IAE9Cf,EAAKqC,gBAAgB9D,KAAUwD,EAAO,KAClCC,GAAehC,EAAKsC,mBACtBtC,EAAKsC,kBAAkB/D,KAAK,IAAMyD,EAAc,iBAGlDhC,EAAKG,QAAQ5B,KAAK,IAAM4B,GACxBH,EAAKc,YAAY9C,KAAK,YAAa,aAAeqC,EAAI,IAAMvD,EAAI,KAC5DkE,GACFhB,EAAKuB,aAAavD,KAAK,YAAa,kCACpCgC,EAAKuC,YAAYvE,KAAK,KAAM,KAC5BgC,EAAKG,QAAQnC,KAAK,KAAM,KACxBgC,EAAKqC,gBAAgBrE,KAAK,KAAM,KAC5BgC,EAAKwC,aACPxC,EAAKsC,kBAAkBtE,KAAK,KAAM,OAGpCgC,EAAKuB,aAAavD,KAAK,YAAa,iCACpCgC,EAAKuC,YAAYvE,KAAK,IAAK,IAC3BgC,EAAKG,QAAQnC,KAAK,IAAK,IACvBgC,EAAKqC,gBAAgBrE,KAAK,IAAK,IAC3BgC,EAAKwC,aACPxC,EAAKsC,kBAAkBtE,KAAK,IAAK,KAIrCgC,EAAKc,YAAYpJ,MAAM,UAAW,GAClCsI,EAAKc,YAAYU,WA9CjB,CA+CF,KAACtB,EAAAA,EAAAA,GAAA,uBAEgB,WACfF,EAAKc,YACFW,aACAC,MAAM,IACNhK,MAAM,UAAW,GACjBA,MAAM,iBAAkB,OAC7B,IA5IEuH,KAAKnB,IAAM9G,EAAM8G,IAEjBmB,KAAKgD,OAAQ,EAEbhD,KAAKuD,aAAc,CACrB,CA0DC,OA1DAb,EAAAA,GAAAA,GAAAG,EAAA,EAAA7H,IAAA,OAAAF,MAED,SAAKsD,GAEH4B,KAAKuD,eAAcnF,GAAKA,EAAE9D,MAAQ,iBAAkB8D,EAAE9D,MACtD,IAAMkJ,EAAiBxD,KAAKuD,YAAc,GAAK,GACzCE,EAAgBzD,KAAKuD,YAAc,IAAM,IAE/CvD,KAAK6B,YAAcrJ,EAAAA,GAAUwH,KAAKnB,IAAM,SAASC,OAAO,KACxDkB,KAAK6B,YAAY9C,KAAK,KAAM,0BAA4BiB,KAAKnB,IAAIrC,MAAM,IACvEwD,KAAK6B,YAAY9C,KAAK,WAAY,WAClCiB,KAAK6B,YAAYpJ,MAAM,UAAW,GAClCuH,KAAK6B,YAAYpJ,MAAM,iBAAkB,QACzCuH,KAAK6B,YAAY9C,KAAK,YAAa,uBAEnCiB,KAAKsC,aAAetC,KAAK6B,YACtB/C,OAAO,QACPC,KAAK,YAAa,iCAClBA,KAAK,IAAK,GACVA,KAAK,IAAK,GACVA,KAAK,SAAU,IACfA,KAAK,QAAS,IACdA,KAAK,OAAQ,WAChBiB,KAAKsD,YAActD,KAAK6B,YACrB/C,OAAO,QACPC,KAAK,IAAK,IACVA,KAAK,KAAM,IACXA,KAAK,KAAM,GACXA,KAAK,SAAUyE,GACfzE,KAAK,QAAS0E,GACd1E,KAAK,OAAQ,WAChBiB,KAAKkB,QAAUlB,KAAK6B,YACjB/C,OAAO,QACPC,KAAK,OAAQ,SACbA,KAAK,YAAa,IAClBA,KAAK,cAAe,KACpBA,KAAK,IAAK,IACVA,KAAK,IAAK,GACVO,KAAK,gBACRU,KAAKoD,gBAAkBpD,KAAK6B,YACzB/C,OAAO,QACPC,KAAK,OAAQ,SACbA,KAAK,YAAa,IAClBA,KAAK,cAAe,KACpBA,KAAK,IAAK,IACVA,KAAK,IAAK,IACVO,KAAK,KACRU,KAAKqD,kBAAoB,KACrBrD,KAAKuD,cACPvD,KAAKqD,kBAAoBrD,KAAK6B,YAC3B/C,OAAO,QACPC,KAAK,OAAQ,SACbA,KAAK,YAAa,IAClBA,KAAK,cAAe,KACpBA,KAAK,IAAK,IACVA,KAAK,IAAK,IACVO,KAAK,IAEZ,KAACuD,CAAA,CAjEU,GAiJPa,GAAW,SAAHrJ,GAOR,IANJC,EAAID,EAAJC,KACAtC,EAAEqC,EAAFrC,GACW6B,EAAKQ,EAAhB+B,UACAnE,EAAMoC,EAANpC,OACAK,EAAQ+B,EAAR/B,SACAM,EAASyB,EAATzB,UAEMuD,EAAS7B,EACZI,KAAI,SAAAC,GAAyB,IAAtB3C,EAAE2C,EAAF3C,GAAI6C,EAAIF,EAAJE,KAAME,EAAKJ,EAALI,MAChB,MAAO,CACL/C,GAAAA,EACA6C,KAAAA,EACAC,MAAOjB,EAAM7B,GACb+C,MAAOgD,KAAKC,MAAMjD,GAEtB,IACC4I,MAAK,SAACC,EAAGC,GAAC,OAAMD,EAAE7I,MAAQ8I,EAAE9I,MAAQ,EAAI8I,EAAE9I,MAAQ6I,EAAE7I,OAAS,EAAI,CAAC,IAErEsB,GAAsCC,EAAAA,EAAAA,UACpChC,EAAKI,KAAI,SAAA6B,GAAK,OAAAA,EAAFvE,EAAW,IAAEwE,MAAM,EAAG,IACnCC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAFMM,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAI9BI,EAAU,KAURC,EAAO,WACXtE,EAAAA,IAAa,IAAMR,EAAK,QAAQ+E,SAChC,IAAMS,EAAQlF,IACRgB,EAASV,IACTiG,EAAMrG,EAAAA,GACF,IAAMR,GACb8G,OAAO,OACPC,KAAK,QAASvB,EAAQvF,EAAOS,KAAOT,EAAOU,OAC3CoG,KAAK,SAAUzF,EAASrB,EAAOa,QAC/BgG,OAAO,KAEVD,EAAIC,OAAO,KAAKC,KAAK,QAAS,UAC9BF,EAAIC,OAAO,KAAKC,KAAK,QAAS,UAC9BF,EAAIC,OAAO,KAAKC,KAAK,QAAS,SAC9B,IAAM+E,EAAS/F,KAAKgG,IAAIvG,EAAOlE,GAAU,EACnC0K,EAAe1J,EAAK+C,QAAO,SAAAH,GAAA,IAAGlF,EAAEkF,EAAFlF,GAAE,OAAO2E,EAAYY,SAASvF,EAAG,IAC/DiM,GAAQC,EAAAA,EAAAA,IAASF,GACvBA,EAAaG,SAAQ,SAAU/F,GAC7BA,EAAErD,OAASqD,EAAErD,MACbqD,EAAE6E,SAAWlF,KAAKC,MAAOI,EAAErD,MAAQkJ,EAAS,IAC9C,IACA,IAAMG,EAAe,IAAIvB,GAAQ,CAC/BhE,IAAK,IAAM7G,IAEPqM,EAAM7L,EAAAA,MAETmL,KAAK,MACL7I,OAAM,SAACsD,GAAC,OAAKA,EAAErD,KAAK,IACjBuJ,EAAM9L,EAAAA,MAET+L,YAAYT,EAAS,IACrBU,YAAY,GAEf3F,EAAIE,KACF,YACA,cACGvB,EAAQvF,EAAOS,KAAOT,EAAOU,OAAS,EACvC,KACCW,EAASrB,EAAOY,IAAMZ,EAAOa,QAAU,EACxC,KAGJ+F,EACGQ,UAAU,QACV/E,KAAK+J,EAAIL,IACTvE,QACAX,OAAO,QACPC,KAAK,IAAKuF,GACVvF,KAAK,QAAQ,SAACX,GAAC,OAAKvE,EAAMuE,EAAE9D,KAAKtC,GAAG,IAEvC6G,EACGQ,UAAU,QACVQ,GAAG,aAAa,SAAUzB,GACzB5F,EAAAA,GAAUwH,MAAMvH,MAAM,OAAQD,EAAAA,IAAOqB,EAAMuE,EAAE9D,KAAKtC,KAAKiI,OAAO,IAC9DmE,EAAalE,gBAAgB9B,EAC/B,IACCyB,GAAG,YAAY,SAAUzB,GACxB5F,EAAAA,GAAUwH,MAAMvH,MAAM,OAAQoB,EAAMuE,EAAE9D,KAAKtC,KAC3CoM,EAAajE,gBACf,IACCN,GAAG,YAAauE,EAAalE,iBAEhCrB,EAAIC,OAAO,KAAK2F,QAAQ,UAAU,GAClC5F,EAAIC,OAAO,KAAK2F,QAAQ,SAAS,EACnC,EAMMrE,EAAS,WACbC,aAAaxD,GACbA,EAAUyD,YAAW,WACnBxD,GACF,GAAG,IACL,EAgBA,OAdAyD,EAAAA,EAAAA,YAAU,WAIR,OAdAzD,IAYA0D,OAAOC,iBAAiB,SAAUL,GAE3B,WACLC,aAAaxD,GACb2D,OAAOE,oBAAoB,SAAUN,EACvC,CACF,GAAG,KAEHG,EAAAA,EAAAA,YAAU,WACRzD,GACF,GAAG,CAACxC,EAAMqC,IAGRvE,IAAAA,cAACqB,GAAO,KACNrB,IAAAA,cAAA,OAAKJ,GAAIA,IACRmE,EAAO8B,OAAS,GACf7F,IAAAA,cAACgC,EAAM,CACLpC,GAAE,GAAAsD,OAAKtD,EAAE,WACTsC,KAAM6B,EACN5B,SAAUoC,EACVnC,SA3Ga,SAACxC,GAChB2E,EAAYY,SAASvF,GACvB4E,EAAeD,EAAYU,QAAO,SAACsD,GAAE,OAAKA,IAAO3I,CAAE,KAEnD4E,EAAe,GAADtB,QAAAsF,EAAAA,EAAAA,GAAKjE,GAAW,CAAE3E,IAEpC,EAsGQsB,OAAO,QACPmB,UAAS,GAAAa,OAAKtD,EAAE,aAK1B,EAEA0L,GAAS3K,UAAY,CACnBf,GAAIgB,IAAAA,OACJsB,KAAMtB,IAAAA,MACNf,OAAQe,IAAAA,OACRJ,UAAWI,IAAAA,KACXV,SAAUU,IAAAA,KACVoD,UAAWpD,IAAAA,MAGb,UAAepB,EAAAA,EAAAA,GAAgB8L,I,itBCjQ/B,IAAMgB,IAAUxL,EAAAA,EAAAA,SAAO,KAAPA,CAAYE,KAAAA,IAAAC,EAAAA,EAAAA,GAAA,wCAItB+C,IAAYuI,EAAAA,EAAAA,KCxDF,CACd,OACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,YD6CIC,GAAkB,WAA+B,IAAnBC,EAAIC,UAAA7G,OAAA,EAAA6G,UAAA,QAAAxG,EAAEyG,EAAQD,UAAA7G,OAAA,EAAA6G,UAAA,QAAAxG,EAC1CU,GADqB8F,UAAA7G,OAAA,QAAAK,IAAAwG,UAAA,GAAAA,UAAA,GAAG,IACXpK,KAAI,SAAAL,GAAA,IAAGoB,EAAIpB,EAAJoB,KAAM2B,EAAK/C,EAAL+C,MAAK,MAAQ,CAC3C3B,KAAAA,EACA2B,MAAOA,EAAM1C,KAAI,SAAAC,GAAA,IAAG3C,EAAE2C,EAAF3C,GAAgB8C,EAAKH,EAAhBoK,GAAkBlK,EAAIF,EAAJE,KAAI,MAAQ,CACrD7C,GAAAA,EACAyD,KAAAA,EACAX,MAAAA,EACAD,KAAMA,GAAQ,kBACf,IACF,IAKD,OAJAgK,EAAK7I,OAAOtB,KAAI,SAACiG,GAAE,OAAAqE,GAAAA,GAAA,GACdrE,GAAE,IACL9F,KAAM8F,EAAG9F,MAAQ,mBAAiB,IAE7BmE,CACT,EAEMiG,GAAiB,WAA0B,IAAbF,EAAQD,UAAA7G,OAAA,EAAA6G,UAAA,QAAAxG,EAM1C,OAN2BwG,UAAA7G,OAAA,QAAAK,IAAAwG,UAAA,GAAAA,UAAA,GAAG,IACXpK,KAAI,SAAA6B,GAA8B,MAAQ,CAC3DvE,GAD0BuE,EAAFvE,GAExB+C,MAF6CwB,EAAhBwI,GAG7BlK,KAHmD0B,EAAJ1B,MAGjC,kBACf,GAEH,EA4BMqK,GAAc,CAClB,CACEC,IAAKC,EAAAA,GACLrG,KAAM,cACNsG,MAAO,4BACPvJ,QA9BF,SAACwJ,GAAW,OACZ,SAAApI,GAAkB,IAAfzB,EAAIyB,EAAJzB,KAAMzD,EAAEkF,EAAFlF,GACDE,GAAWC,EAAAA,EAAAA,eACjB,IAAY,IAARH,EAAJ,CAK8CsN,EAAtCC,aAAsCD,EAAxBE,WAAtB,IAAqCC,GAAIxJ,EAAAA,EAAAA,GAAKqJ,EAAWpJ,IACnDwJ,GAAgBC,EAAAA,EAAAA,IAAmBlK,GACnCmK,GAAkB3E,EAAAA,EAAAA,GAAA,GACrB4E,EAAAA,GAAiBb,GAAAA,GAAAA,GAAA,GACbc,GAAAA,GAAYC,eACZN,GAAI,IACPO,iBAAkB,SAClBC,WAAYP,EACZQ,SAAUR,EACVS,OAAQ,GACRC,OAAQ,CAACpO,MAIbE,GAASmO,EAAAA,EAAAA,IAAUC,GAAAA,EAAMR,YAAYS,QAAQ,IAAK,IAAKX,GAhBvD,CAiBF,CAAC,EAQC3G,QAAS6B,IAEX,CACEqE,IAAKqB,EAAAA,GACLzH,KAAM,0BACNsG,MAAO,6BACPvJ,QAAS,kBAAM,IAAI,EACnBmD,QAAS2D,KA8Nb,SA1N+B,WAC7B,IA+HmB6D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EA/HnBzK,GAAwCC,EAAAA,EAAAA,UAAS,GAAEG,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GAA5C0K,EAAYtK,EAAA,GAAEuK,EAAevK,EAAA,GAGpCwK,GAAwCC,EAAAA,EAAAA,IACtCC,GAAAA,GAAUpB,eADJT,EAAW2B,EAAX3B,YAAa8B,EAAcH,EAAdG,eAIfC,EAAoBrC,GAAAA,GAAA,GACrBM,GAAW,IACdgC,WAAY,CAAC,mBACbC,SAAU,MACVC,gBAAgB,EAChBjC,aAAc,kBACdC,WAAY,SAGRiC,EAAkBzC,GAAAA,GAAA,GACnBM,GAAW,IACdgC,WAAY,CAAC,eACbC,SAAU,MACVC,gBAAgB,EAChBjC,aAAc,cACdC,WAAY,SAGRkC,EAAsB1C,GAAAA,GAAA,GACvBM,GAAW,IACdgC,WAAY,CAAC,eACbC,SAAU,MACVI,eAAe,EACfpC,aAAc,cACdC,WAAY,SAGRoC,EAAmB5C,GAAAA,GAAA,GACpBM,GAAW,IACdgC,WAAY,CAAC,2BACbC,SAAU,MACVI,eAAe,EACfpC,aAAc,kBACdC,WAAY,SAGdqC,GAMIC,EAAAA,GAAAA,IAAW1C,EAAAA,GAAiB,IALtBjE,EAAI0G,EAAZE,OACOC,EAASH,EAAhBI,MACWC,EAAaL,EAAxBM,UACWC,EAAaP,EAAxBQ,UACSC,EAAOT,EAAhBU,QAGFC,GAAiDV,EAAAA,GAAAA,IAC/CW,EAAAA,GACA,CAAC,GAFaC,EAAOF,EAAfT,OAA0BY,EAAUH,EAAnBD,QAKzBK,GAMId,EAAAA,GAAAA,KAAUe,EAAAA,EAAAA,GAAAC,IAAAA,MAAC,SAAAC,IAAA,IAAAC,EAAAlE,UAAA,OAAAgE,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAmB,GACf,KADWH,EAAA/K,OAAA,QAAAK,IAAA0K,EAAA,GAAAA,EAAA,GAAG,GACb,CAAAC,EAAAE,KAAA,eAAAF,EAAAG,OAAA,UACThE,EAAAA,EAAAA,IAAgBsC,IAAuB,cAAAuB,EAAAG,OAAA,UAEvC5C,EAAAA,EAAAA,IAAiBoB,IAAoB,wBAAAqB,EAAAI,OAAA,GAAAN,EAAA,KAE7C,IAXOO,EAAIV,EAAZb,OACOwB,EAASX,EAAhBX,MACWuB,EAAaZ,EAAxBT,UACWsB,EAAab,EAAxBP,UACSqB,EAAOd,EAAhBL,QASFoB,GAMI7B,EAAAA,GAAAA,IAAW1C,EAAAA,GAAiB,IALtBwE,EAAKD,EAAb5B,OACO8B,GAAUF,EAAjB1B,MACW6B,GAAcH,EAAzBxB,UACW4B,GAAcJ,EAAzBtB,UACS2B,GAAQL,EAAjBpB,QAiIF,OA1HAhI,EAAAA,EAAAA,YAAU,WACRmJ,EAAQ3C,EACV,GAAG,CAACA,KAEJxG,EAAAA,EAAAA,YAAU,WACRmJ,EAAQ3C,GACRiD,GAAS3C,GACTsB,EAAWrD,GACXgD,EAAQb,EACV,GAAG,CAACnC,IAkHFlN,IAAAA,cAAAA,IAAAA,SAAA,KACEA,IAAAA,cAAC6R,EAAAA,WAAU,CAACC,MAAO,4BACnB9R,IAAAA,cAAC+R,GAAAA,EAAiB,CAChBC,WAAY1B,EACZ2B,QAAS/E,EACTgF,WAAYlD,IAEdhP,IAAAA,cAACmS,EAAAA,GAAW,KApFdnS,IAAAA,cAACoS,EAAAA,EAAI,CAACC,WAAS,GACbrS,IAAAA,cAACsS,EAAAA,EAAQ,CAAC1Q,KAAM,IAnClB5B,IAAAA,cAACuS,EAAAA,EAAK,CACJC,QAASC,EAAAA,EAAaC,QACtBZ,MAAM,2EACNa,YACE3S,IAAAA,cAAAA,IAAAA,SAAA,KACEA,IAAAA,cAAC4S,EAAAA,EAAe,KACd5S,IAAAA,cAAC6S,EAAAA,KAAI,CACHC,GACE,cAAgBC,GAAAA,EAAYC,WAAW,0BAE1C,iCAIHhT,IAAAA,cAAC4S,EAAAA,EAAe,KACd5S,IAAAA,cAAC6S,EAAAA,KAAI,CACHC,GACE,cACAC,GAAAA,EAAYC,WAAW,mCAE1B,wCAMR,0JAUChT,IAAAA,cAACsS,EAAAA,EAAQ,CAAC1Q,KAAM,IACd5B,IAAAA,cAACiT,EAAAA,EAAI,KACHjT,IAAAA,cAACkT,EAAAA,EAAI,CAACC,UAAWxE,EAAcyE,SAtDhB,SAACC,EAAGC,GACzB1E,EAAgB0E,EAClB,GAqDUtT,IAAAA,cAACuT,EAAAA,EAAG,CAACC,SAAU,EAAG1B,MAAO,SACzB9R,IAAAA,cAACuT,EAAAA,EAAG,CAACC,SAAU,EAAG1B,MAAO,WAE3B9R,IAAAA,cAACyT,EAAAA,EAAQ,KACNrC,GAAiBpR,IAAAA,cAAC0T,GAAAA,EAAY,MAC9BvC,GAAanR,IAAAA,cAAC2T,GAAAA,EAAa,CAACC,QAASzC,EAAUtB,MAAMA,QACrDwB,IAA2B,QAAVhD,EAAA6C,EAAKtK,aAAK,IAAAyH,OAAA,EAAVA,EAAYxI,SAAU,GAAK7F,IAAAA,cAAC6T,GAAAA,EAAM,MACnDxC,IAA2B,QAAV/C,EAAA4C,EAAKtK,aAAK,IAAA0H,OAAA,EAAVA,EAAYzI,QAAS,GACrC7F,IAAAA,cAACwD,EAAe,CACd3D,OAAQ,CAAEY,IAAK,GAAIF,MAAO,GAAIG,OAAQ,GAAIJ,KAAM,IAChDV,GAAG,4BACHsC,KAAMsK,GACJ0E,EAAKtK,MACLsK,EAAKzE,KACLK,GAAY6B,GAAchI,MAE5B/C,OAAQsN,EAAKzE,KAAK7I,OAClBI,UAAWA,GACXmD,OAAQ2F,GAAY6B,GAAc1B,MAClCvJ,QAASoJ,GAAY6B,GAAcjL,QAAQwJ,GAC3CvJ,aAAcmJ,GAAY6B,GAAc9H,aAMlD7G,IAAAA,cAACsS,EAAAA,EAAQ,CAAC1Q,KAAM,GACd5B,IAAAA,cAACiT,EAAAA,EAAI,KACHjT,IAAAA,cAAC8T,EAAAA,EAAS,KACR9T,IAAAA,cAAA,UAAI,6BAENA,IAAAA,cAACsM,GAAO,MACRtM,IAAAA,cAACyT,EAAAA,EAAQ,KACN3D,GAAiB9P,IAAAA,cAAC0T,GAAAA,EAAY,MAC9B9D,GAAa5P,IAAAA,cAAC2T,GAAAA,EAAa,CAACC,QAAShE,EAAUC,MAAMA,QACrDG,IAA2B,QAAVzB,EAAAxF,EAAK/D,aAAK,IAAAuJ,OAAA,EAAVA,EAAY1I,SAAU,GAAK7F,IAAAA,cAAC6T,GAAAA,EAAM,MACnD7D,IAA2B,QAAVxB,EAAAzF,EAAK/D,aAAK,IAAAwJ,OAAA,EAAVA,EAAY3I,QAAS,GACrC7F,IAAAA,cAACsL,GAAQ,CACPzL,OAAQ,CAAEY,IAAK,GAAIF,MAAO,GAAIG,OAAQ,EAAGJ,KAAM,IAC/CV,GAAG,wBACHsC,KAAM2K,GAAe9D,EAAK/D,MAAO,eACjChB,UAAWA,QAMrBhE,IAAAA,cAACsS,EAAAA,EAAQ,CAAC1Q,KAAM,GACd5B,IAAAA,cAACiT,EAAAA,EAAI,KACHjT,IAAAA,cAAC8T,EAAAA,EAAS,KACR9T,IAAAA,cAAA,UAAI,kCAENA,IAAAA,cAACsM,GAAO,MACRtM,IAAAA,cAACyT,EAAAA,EAAQ,KACN/B,IAAkB1R,IAAAA,cAAC0T,GAAAA,EAAY,MAC/BjC,IAAczR,IAAAA,cAAC2T,GAAAA,EAAa,CAACC,QAASnC,GAAW5B,MAAMA,QACvD8B,KAA6B,QAAXlD,EAAA+C,EAAMxM,aAAK,IAAAyJ,OAAA,EAAXA,EAAa5I,SAAU,GAAK7F,IAAAA,cAAC6T,GAAAA,EAAM,MACrDlC,KAA6B,QAAXjD,EAAA8C,EAAMxM,aAAK,IAAA0J,OAAA,EAAXA,EAAa7I,QAAS,GACvC7F,IAAAA,cAACsL,GAAQ,CACPzL,OAAQ,CAAEY,IAAK,GAAIF,MAAO,GAAIG,OAAQ,EAAGJ,KAAM,IAC/CV,GAAG,wBACHsC,KAAM2K,GAAe2E,EAAMxM,MAAO,mBAClChB,UAAWA,UAoB3B,C,iHE7UA,MAUA,EAV+D,IAC7D,kBAAC,IAAU,CAACwO,QAAS,IAAkBuB,KAAM1T,MAAO,CAAE2T,UAAW,UAC/D,kBAAC,IAAc,CAACC,KAAM,OACtB,kBAAC,IAAK,CAACC,aAAa,KAAKC,KAAK,MAAI,cAGlC,kBAAC,IAAc,qB,iHCDnB,MAUA,EAVyC,EAAGrC,QAAOsC,aACjD,kBAAC,IAAU,CAAC5B,QAAS,IAAkBuB,KAAM1T,MAAO,CAAE2T,UAAW,UAC/D,kBAAC,IAAc,CAACC,KAAM,OACtB,kBAAC,IAAK,CAACC,aAAa,KAAKC,KAAK,MAC3BrC,GAAgB,WAElBsC,GAAW,kBAAC,IAAc,KAAEA,G,mCCrBjC,MAIA,EAJc,CACZpB,WAAaqB,GAAyB,GAAGA,I,6DCG5B,SAAS7L,EAAmB8L,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,EAClD,CDES,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,oBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,EACtH,CFGmC,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,uIACtB,CHG8F,EAC9F,C","sources":["webpack:///./src/Charts/BaseChart.js","webpack:///./src/Charts/Utilities/Legend.js","webpack:///./src/Charts/GroupedBarChart/GroupedBarChart.js","webpack:///./src/Charts/GroupedBarChart/OrgsTooltip.js","webpack:///./src/Charts/GroupedBarChart/HostsTooltip.js","webpack:///./src/Charts/PieChart.js","webpack:///./src/Containers/OrganizationStatistics/OrganizationStatistics.js","webpack:///./src/Charts/Utilities/colors.ts","webpack:///./src/Components/ApiStatus/LoadingState.tsx","webpack:///./src/Components/ApiStatus/NoData.tsx","webpack:///./src/Containers/Reports/paths.ts","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport { useNavigate } from 'react-router-dom';\n\nconst initializeChart = (Chart) => {\n  const BaseChart = (props) => {\n    const { id, margin } = props;\n\n    const getWidth = () => {\n      let width;\n      width =\n        parseInt(d3.select('#' + id).style('width')) -\n          margin.left -\n          margin.right || 700;\n      return width;\n    };\n\n    const getHeight = () => {\n      let height;\n      height =\n        parseInt(d3.select('#' + id).style('height')) -\n          margin.top -\n          margin.bottom || 450;\n      return height;\n    };\n\n    const navigate = useNavigate();\n\n    return (\n      <Chart\n        {...props}\n        getWidth={getWidth}\n        getHeight={getHeight}\n        navigate={navigate}\n      />\n    );\n  };\n\n  BaseChart.propTypes = {\n    id: PropTypes.string,\n    margin: PropTypes.object,\n  };\n\n  return BaseChart;\n};\n\ninitializeChart.propTypes = {\n  Chart: PropTypes.element,\n};\n\nexport default initializeChart;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Switch } from '@patternfly/react-core';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  overflow: auto;\n  width: 100%;\n  height: ${(props) => props.height};\n`;\n\nconst LegendDetail = styled.div`\n  display: flex;\n  padding: 7.5px 15px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  overflow: auto;\n`;\n\nconst Color = styled.div.attrs((props) => ({\n  color: props.color || 'black',\n}))`\n  min-width: 12px;\n  height: 12px;\n  background: ${(props) => props.color};\n  margin-right: 20px;\n`;\n\nconst Title = styled.span`\n  font-size: 15px;\n  display: inline-block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n`;\n\nconst SubTitle = styled.span`\n  font-size: 15px;\n  margin-left: auto;\n  margin-right: 0;\n  padding-right: 10px;\n`;\n\nconst Legend = ({ data, selected, height, onToggle, chartName }) => {\n  return (\n    <Container height={height}>\n      {data.map(({ name, value, id, count }, index) => (\n        <LegendDetail key={index}>\n          <Wrapper>\n            <Color color={value} />\n            <Title>{name}</Title>\n          </Wrapper>\n          {count && <SubTitle>{count}</SubTitle>}\n          {selected && (\n            <Switch\n              isChecked={selected.some((selection) => selection === id)}\n              onChange={() => onToggle(id)}\n              aria-label={`${chartName}-${name}`}\n              value={id}\n              key={index}\n            />\n          )}\n        </LegendDetail>\n      ))}\n    </Container>\n  );\n};\n\nLegend.propTypes = {\n  data: PropTypes.array.isRequired,\n  selected: PropTypes.array.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  height: PropTypes.string.isRequired,\n  chartName: PropTypes.string.isRequired,\n};\n\nexport default Legend;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport styled from 'styled-components';\n\nimport initializeChart from '.././BaseChart';\nimport Legend from '../Utilities/Legend';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nconst GroupedBarChart = ({\n  onClick = null,\n  TooltipClass,\n  legend,\n  ...props\n}) => {\n  const colors = legend.map(({ id, name }) => {\n    return {\n      name: name ? name : 'No organization',\n      value: props.colorFunc(id),\n      id,\n    };\n  });\n  const [selectedIds, setSelectedIds] = useState(\n    legend.map(({ id }) => id).slice(0, 8)\n  );\n  let timeout = null;\n\n  const handleToggle = (id) => {\n    if (selectedIds.includes(id)) {\n      setSelectedIds(selectedIds.filter((el) => el !== id));\n    } else {\n      setSelectedIds([...selectedIds, id]);\n    }\n  };\n\n  const draw = () => {\n    // Clear our chart container element first\n    d3.selectAll('#' + props.id + ' > *').remove();\n    let { data: unformattedData } = props;\n    const data = unformattedData.reduce((formatted, { date, items }) => {\n      const selectedOrgs = items.filter(({ id }) => selectedIds.includes(id));\n      return formatted.concat({ date, selectedOrgs });\n    }, []);\n    const width = props.getWidth();\n    const height = props.getHeight();\n    // x scale of entire chart\n    const x0 = d3.scaleBand().range([0, width]).padding(0.35);\n    // x scale of individual grouped bars\n    const x1 = d3.scaleBand();\n    const y = d3.scaleLinear().range([height, 0]);\n    // format our X Axis ticks\n    const maxTicksOneMonth = Math.round(data.length / (data.length / 2));\n    const maxTicksTwoMonths = Math.round(data.length / (data.length / 4));\n    let ticks = data.map((d) => d.date);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) =>\n          i % (data.length > 31 ? maxTicksTwoMonths : maxTicksOneMonth) === 0\n            ? d.date\n            : undefined\n        )\n        .filter((item) => item);\n    }\n\n    const xAxis = d3.axisBottom(x0).tickValues(ticks).tickFormat(formatDate);\n\n    const yAxis = d3.axisLeft(y).ticks(8).tickSize(-width, 0, 0);\n\n    const svg = d3\n      .select('#' + props.id)\n      .append('svg')\n      .attr('width', width + props.margin.left + props.margin.right)\n      .attr('height', height + props.margin.bottom + props.margin.top)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' + props.margin.left + ',' + props.margin.top + ')'\n      );\n\n    const dates = data.map((d) => d.date);\n    const tooltip = new TooltipClass({\n      svg: '#' + props.id,\n    });\n    x0.domain(dates);\n    x1.domain(selectedIds).range([0, x0.bandwidth()]);\n    y.domain([\n      0,\n      d3.max(data, (date) =>\n        d3.max(date.selectedOrgs, (d) => d.value * 1.15)\n      ) || 8,\n    ]);\n\n    // add y axis\n    svg\n      .append('g')\n      .attr('class', 'y axis')\n      .call(yAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7')\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 6)\n      .attr('dy', '.71em')\n      .style('text-anchor', 'end')\n      .style('font-weight', 'bold')\n      .text('Value');\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text(props.yLabel);\n\n    // add x axis\n    svg\n      .append('g')\n      .attr('class', 'x axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' + width / 2 + ' ,' + (height + props.margin.top + 25) + ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n    // add the groups\n    let slice = svg.selectAll('.slice').data(data);\n    slice.exit().remove();\n\n    const enter = slice\n      .enter()\n      .append('g')\n      .attr('class', 'g foo')\n      .attr('transform', (d) => 'translate(' + x0(d.date) + ',0)');\n    slice = slice.merge(enter);\n    // add the individual bars\n    let bars = slice.selectAll('rect').data(function (d) {\n      return d.selectedOrgs;\n    });\n    bars.exit().remove();\n\n    const color = props.colorFunc;\n    const subEnter = bars\n      .enter()\n      .append('rect')\n      .attr('width', x1.bandwidth())\n      .attr('x', function (d) {\n        return x1(d.id);\n      }) // unsorted\n      .style('fill', function (d) {\n        return color(d.id);\n      })\n      .attr('y', function (d) {\n        return y(d.value);\n      })\n      .attr('height', function (d) {\n        return height - y(d.value);\n      })\n      .on('mouseover', function (d) {\n        d.moreDetail = !d.name.endsWith('Others');\n        d3.select(this).style(\n          'cursor',\n          onClick && d.moreDetail ? 'pointer' : 'default'\n        );\n        d3.select(this).style('fill', d3.rgb(color(d.id)).darker(1));\n        tooltip.handleMouseOver(d);\n      })\n      .on('mousemove', tooltip.handleMouseOver)\n      .on('mouseout', function (d) {\n        d3.select(this).style('fill', color(d.id));\n        tooltip.handleMouseOut();\n      })\n      .on('click', onClick);\n    bars = bars.merge(subEnter);\n  };\n\n  const init = () => {\n    draw();\n  };\n\n  const resize = () => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      draw();\n    }, 500);\n  };\n\n  useEffect(() => {\n    init();\n    window.addEventListener('resize', resize);\n\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [props.data, selectedIds]);\n\n  return (\n    <Wrapper>\n      <div id={props.id} />\n      {colors.length > 0 && (\n        <Legend\n          id={`${props.id}-legend`}\n          data={colors}\n          selected={selectedIds}\n          onToggle={handleToggle}\n          height=\"350px\"\n          chartName={`${props.id}-legend`}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nGroupedBarChart.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  legend: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  colorFunc: PropTypes.func,\n  yLabel: PropTypes.string,\n  onClick: PropTypes.func,\n  TooltipClass: PropTypes.any.isRequired,\n};\n\nGroupedBarChart.defaultProps = {\n  legend: [],\n};\n\nexport default initializeChart(GroupedBarChart);\n","import * as d3 from 'd3';\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class OrgsTooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -12)\n      .attr('rx', 2)\n      .attr('height', 50)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 25)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Date');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 72)\n      .attr('y', 25)\n      .text('0 Jobs');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 10)\n      .attr('font-size', 12)\n      .text('Org');\n\n    this.clickMore = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 20)\n      .attr('y', 30)\n      .attr('font-size', 12)\n      .text('');\n  }\n\n  handleMouseOver = (d) => {\n    let date;\n    let orgName;\n    let jobs;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    } else {\n      const maxLength = 16;\n      date = d.date;\n      orgName = d.name;\n      jobs = d.value;\n      if (d.name.length > maxLength) {\n        orgName = d.name.slice(0, maxLength).concat('...');\n      }\n    }\n\n    let yAdjust = -11;\n\n    // Include 'Click for details' if more detail is available\n    if (d.moreDetail) {\n      this.boundingBox.attr('height', 68);\n      this.boundingBox.attr('y', -23);\n      this.date.attr('y', 25 + yAdjust);\n      this.jobs.attr('y', 25 + yAdjust);\n      this.orgName.attr('y', 10 + yAdjust);\n      this.clickMore.text('Click for details');\n    } else {\n      this.boundingBox.attr('height', 50);\n      this.boundingBox.attr('y', -12);\n      this.date.attr('y', 25);\n      this.jobs.attr('y', 25);\n      this.orgName.attr('y', 10);\n      this.clickMore.text('');\n    }\n\n    const formatTooltipDate = formatDate;\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.date.text('' + formatTooltipDate(date));\n    this.orgName.text('' + orgName);\n    this.jobs.text('' + jobs + ' Jobs');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 45;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n      this.orgName.attr('x', -adjustedWidth - 7);\n      this.date.attr('x', -adjustedWidth - 7);\n      this.clickMore.attr('x', -adjustedWidth - 7);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth / 2);\n      this.date.attr('x', 20);\n      this.clickMore.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import * as d3 from 'd3';\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class HostsTooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -12)\n      .attr('rx', 2)\n      .attr('height', 50)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 25)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Date');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 72)\n      .attr('y', 25)\n      .text('0 Jobs');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 10)\n      .attr('font-size', 12)\n      .text('Org');\n  }\n\n  handleMouseOver = (d) => {\n    let date;\n    let orgName;\n    let jobs;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    } else {\n      const maxLength = 16;\n      date = d.date;\n      orgName = d.name;\n      jobs = d.value;\n      if (d.name.length > maxLength) {\n        orgName = d.name.slice(0, maxLength).concat('...');\n      }\n    }\n\n    const formatTooltipDate = formatDate;\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.date.text('' + formatTooltipDate(date));\n    this.orgName.text('' + orgName);\n    this.jobs.text('' + jobs + ' Hosts');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 45;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n      this.orgName.attr('x', -adjustedWidth - 7);\n      this.date.attr('x', -adjustedWidth - 7);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth / 2);\n      this.date.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport { getTotal } from '../Utilities/helpers';\nimport Legend from './Utilities/Legend';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nclass Tooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    // defer drawing until we know the data shape\n    this.drawn = false;\n    // show the success rate or not\n    this.showSuccess = false;\n  }\n\n  draw(d) {\n    // chart1 has success rate data and chart2 does not ...\n    this.showSuccess = d && d.data && 'success_rate' in d.data ? true : false;\n    const boundingHeight = this.showSuccess ? 70 : 52;\n    const boundingWidth = this.showSuccess ? 120 : 108;\n\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBOx = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', boundingHeight)\n      .attr('width', boundingWidth)\n      .attr('fill', '#393f44');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 0)\n      .text('Organization');\n    this.percentageTotal = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 16)\n      .text('0');\n    this.percentageSuccess = null;\n    if (this.showSuccess) {\n      this.percentageSuccess = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 30)\n        .text('');\n    }\n  }\n\n  handleMouseOver = (d) => {\n    // treat draw() as a singleton to avoid a painted window effect\n    if (this.drawn !== true) {\n      this.draw(d);\n      this.drawn = true;\n    }\n\n    let perc;\n    let percSuccess;\n    let orgName;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    }\n\n    if (d && d.data) {\n      const maxLength = 16;\n      perc = d.data.percent;\n      percSuccess = d.data.success_rate;\n      orgName = d.data.name;\n      if (d.data.name.length > maxLength) {\n        orgName = d.data.name.slice(0, maxLength - 3).concat('...');\n      }\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.percentageTotal.text('' + perc + '%');\n    if (percSuccess && this.percentageSuccess) {\n      this.percentageSuccess.text('(' + percSuccess + '% successful)');\n    }\n\n    this.orgName.text(' ' + orgName);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, -10) rotate(45)');\n      this.boundingBOx.attr('x', -125);\n      this.orgName.attr('x', -112);\n      this.percentageTotal.attr('x', -112);\n      if (this.showSuccess) {\n        this.percentageSuccess.attr('x', -112);\n      }\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, -10) rotate(45)');\n      this.boundingBOx.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.percentageTotal.attr('x', 20);\n      if (this.showSuccess) {\n        this.percentageSuccess.attr('x', 20);\n      }\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nconst PieChart = ({\n  data,\n  id,\n  colorFunc: color,\n  margin,\n  getWidth,\n  getHeight,\n}) => {\n  const colors = data\n    .map(({ id, name, count }) => {\n      return {\n        id,\n        name,\n        value: color(id),\n        count: Math.round(count),\n      };\n    })\n    .sort((a, b) => (a.count > b.count ? 1 : b.count > a.count ? -1 : 0));\n\n  const [selectedIds, setSelectedIds] = useState(\n    data.map(({ id }) => id).slice(0, 8)\n  );\n\n  let timeout = null;\n\n  const handleToggle = (id) => {\n    if (selectedIds.includes(id)) {\n      setSelectedIds(selectedIds.filter((el) => el !== id));\n    } else {\n      setSelectedIds([...selectedIds, id]);\n    }\n  };\n\n  const draw = () => {\n    d3.selectAll('#' + id + ' > *').remove();\n    const width = getWidth();\n    const height = getHeight();\n    const svg = d3\n      .select('#' + id)\n      .append('svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.bottom)\n      .append('g');\n\n    svg.append('g').attr('class', 'slices');\n    svg.append('g').attr('class', 'labels');\n    svg.append('g').attr('class', 'lines');\n    const radius = Math.min(width, height) / 2;\n    const filteredData = data.filter(({ id }) => selectedIds.includes(id));\n    const total = getTotal(filteredData);\n    filteredData.forEach(function (d) {\n      d.count = +d.count;\n      d.percent = +Math.round((d.count / total) * 100);\n    });\n    const donutTooltip = new Tooltip({\n      svg: '#' + id,\n    });\n    const pie = d3\n      .pie()\n      .sort(null)\n      .value((d) => d.count);\n    const arc = d3\n      .arc()\n      .outerRadius(radius - 10) // controls top positioning of chart\n      .innerRadius(0);\n\n    svg.attr(\n      'transform',\n      'translate(' +\n        (width + margin.left + margin.right) / 2 +\n        ',' +\n        (height + margin.top + margin.bottom) / 2 +\n        ')'\n    );\n\n    svg\n      .selectAll('path')\n      .data(pie(filteredData))\n      .enter()\n      .append('path')\n      .attr('d', arc)\n      .attr('fill', (d) => color(d.data.id));\n\n    svg\n      .selectAll('path')\n      .on('mouseover', function (d) {\n        d3.select(this).style('fill', d3.rgb(color(d.data.id)).darker(1));\n        donutTooltip.handleMouseOver(d);\n      })\n      .on('mouseout', function (d) {\n        d3.select(this).style('fill', color(d.data.id));\n        donutTooltip.handleMouseOut();\n      })\n      .on('mousemove', donutTooltip.handleMouseOver);\n\n    svg.append('g').classed('labels', true);\n    svg.append('g').classed('lines', true);\n  };\n\n  const init = () => {\n    draw();\n  };\n\n  const resize = () => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      draw();\n    }, 500);\n  };\n\n  useEffect(() => {\n    init();\n    window.addEventListener('resize', resize);\n\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [data, selectedIds]);\n\n  return (\n    <Wrapper>\n      <div id={id} />\n      {colors.length > 0 && (\n        <Legend\n          id={`${id}-legend`}\n          data={colors}\n          selected={selectedIds}\n          onToggle={handleToggle}\n          height=\"300px\"\n          chartName={`${id}-legend`}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nPieChart.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  colorFunc: PropTypes.func,\n};\n\nexport default initializeChart(PieChart);\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nimport {\n  useQueryParams,\n  createUrl,\n  DEFAULT_NAMESPACE,\n} from '../../QueryParams/';\nimport { formatDate as dateForJobExplorer } from '../../Utilities/helpers';\n\nimport { readJobExplorer, readHostExplorer, readOrgOptions } from '../../Api/';\n\nimport { PageHeader } from '@ansible/ansible-ui-framework';\n\nimport { Link, useNavigate } from 'react-router-dom';\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  Tabs,\n  Tab,\n  Grid,\n  GridItem,\n  Alert,\n  AlertVariant,\n  AlertActionLink,\n  PageSection,\n} from '@patternfly/react-core';\n\nimport {\n  GroupedBarChart,\n  OrgsTooltip,\n  HostsTooltip,\n} from '../../Charts/GroupedBarChart/';\nimport PieChart from '../../Charts/PieChart';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport {\n  jobExplorer,\n  organizationStatistics as constants,\n} from '../../Utilities/constants';\nimport reportPaths from '../Reports/paths';\n\n// For chart colors\nimport { pfmulti } from '../../Charts/Utilities/colors';\nimport { scaleOrdinal } from 'd3';\nimport useRequest from '../../Utilities/useRequest';\n\nimport ApiErrorState from '../../Components/ApiStatus/ApiErrorState';\nimport LoadingState from '../../Components/ApiStatus/LoadingState';\nimport NoData from '../../Components/ApiStatus/NoData';\nimport { Paths } from '../../paths';\n\nconst Divider = styled('hr')`\n  border: 1px solid #ebebeb;\n`;\n\nconst colorFunc = scaleOrdinal(pfmulti);\n\nconst orgsChartMapper = (data = [], meta, attrName) => {\n  const dates = data.map(({ date, items }) => ({\n    date,\n    items: items.map(({ id, [attrName]: value, name }) => ({\n      id,\n      date,\n      value,\n      name: name || 'No organization',\n    })),\n  }));\n  meta.legend.map((el) => ({\n    ...el,\n    name: el.name || 'No organization',\n  }));\n  return dates;\n};\n\nconst pieChartMapper = (items = [], attrName) => {\n  const data = items.map(({ id, [attrName]: count, name }) => ({\n    id,\n    count,\n    name: name || 'No organization',\n  }));\n  return data;\n};\n\nconst navigateToJobExplorer =\n  (queryParams) =>\n  ({ date, id }) => {\n    const navigate = useNavigate();\n    if (id === -1) {\n      // disable clicking on \"others\" block\n      return;\n    }\n\n    const { sort_options, sort_order, ...rest } = queryParams;\n    const formattedDate = dateForJobExplorer(date);\n    const initialQueryParams = {\n      [DEFAULT_NAMESPACE]: {\n        ...jobExplorer.defaultParams,\n        ...rest,\n        quick_date_range: 'custom',\n        start_date: formattedDate,\n        end_date: formattedDate,\n        status: [],\n        org_id: [id],\n      },\n    };\n\n    navigate(createUrl(Paths.jobExplorer.replace('/', ''), initialQueryParams));\n  };\n\nconst chartMapper = [\n  {\n    api: readJobExplorer,\n    attr: 'total_count',\n    label: 'Jobs across organizations',\n    onClick: navigateToJobExplorer,\n    tooltip: OrgsTooltip,\n  },\n  {\n    api: readHostExplorer,\n    attr: 'total_unique_host_count',\n    label: 'Hosts across organizations',\n    onClick: () => null,\n    tooltip: HostsTooltip,\n  },\n];\n\nconst OrganizationStatistics = () => {\n  const [activeTabKey, setActiveTabKey] = useState(0);\n\n  // params from toolbar/searchbar\n  const { queryParams, setFromToolbar } = useQueryParams(\n    constants.defaultParams\n  );\n\n  const jobEventsByOrgParams = {\n    ...queryParams,\n    attributes: ['host_task_count'],\n    group_by: 'org',\n    include_others: true,\n    sort_options: 'host_task_count',\n    sort_order: 'desc',\n  };\n\n  const jobRunsByOrgParams = {\n    ...queryParams,\n    attributes: ['total_count'],\n    group_by: 'org',\n    include_others: true,\n    sort_options: 'total_count',\n    sort_order: 'desc',\n  };\n\n  const jobsByDateAndOrgParams = {\n    ...queryParams,\n    attributes: ['total_count'],\n    group_by: 'org',\n    group_by_time: true,\n    sort_options: 'total_count',\n    sort_order: 'desc',\n  };\n\n  const hostAcrossOrgParams = {\n    ...queryParams,\n    attributes: ['total_unique_host_count'],\n    group_by: 'org',\n    group_by_time: true,\n    sort_options: 'host_task_count',\n    sort_order: 'desc',\n  };\n\n  const {\n    result: jobs,\n    error: jobsError,\n    isLoading: jobsIsLoading,\n    isSuccess: jobsIsSuccess,\n    request: setJobs,\n  } = useRequest(readJobExplorer, []);\n\n  const { result: options, request: setOptions } = useRequest(\n    readOrgOptions,\n    {}\n  );\n\n  const {\n    result: orgs,\n    error: orgsError,\n    isLoading: orgsIsLoading,\n    isSuccess: orgsIsSuccess,\n    request: setOrgs,\n  } = useRequest(async (tabIndex = 0) => {\n    if (tabIndex === 0) {\n      return readJobExplorer(jobsByDateAndOrgParams);\n    } else {\n      return readHostExplorer(hostAcrossOrgParams);\n    }\n  }, []);\n\n  const {\n    result: tasks,\n    error: tasksError,\n    isLoading: tasksIsLoading,\n    isSuccess: tasksIsSuccess,\n    request: setTasks,\n  } = useRequest(readJobExplorer, []);\n\n  const handleTabClick = (_, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  useEffect(() => {\n    setOrgs(activeTabKey);\n  }, [activeTabKey]);\n\n  useEffect(() => {\n    setOrgs(activeTabKey);\n    setTasks(jobEventsByOrgParams);\n    setOptions(queryParams);\n    setJobs(jobRunsByOrgParams);\n  }, [queryParams]);\n\n  const renderDeprecationWarning = () => (\n    <Alert\n      variant={AlertVariant.warning}\n      title=\"The organization statistics page will be deprecated in a future release.\"\n      actionLinks={\n        <>\n          <AlertActionLink>\n            <Link\n              to={\n                '../reports/' + reportPaths.getDetails('hosts_by_organization')\n              }\n            >\n              Hosts by organization report\n            </Link>\n          </AlertActionLink>\n          <AlertActionLink>\n            <Link\n              to={\n                '../reports/' +\n                reportPaths.getDetails('jobs_and_tasks_by_organization')\n              }\n            >\n              Jobs/Tasks by organization report\n            </Link>\n          </AlertActionLink>\n        </>\n      }\n    >\n      The organization statistics page has been converted to a set of reports.\n      Please use our new, more full-featured reports by following the links\n      below.\n    </Alert>\n  );\n\n  const renderContent = () => (\n    <Grid hasGutter>\n      <GridItem span={12}>{renderDeprecationWarning()}</GridItem>\n      <GridItem span={12}>\n        <Card>\n          <Tabs activeKey={activeTabKey} onSelect={handleTabClick}>\n            <Tab eventKey={0} title={'Jobs'} />\n            <Tab eventKey={1} title={'Hosts'} />\n          </Tabs>\n          <CardBody>\n            {orgsIsLoading && <LoadingState />}\n            {orgsError && <ApiErrorState message={orgsError.error.error} />}\n            {orgsIsSuccess && orgs.dates?.length <= 0 && <NoData />}\n            {orgsIsSuccess && orgs.dates?.length > 0 && (\n              <GroupedBarChart\n                margin={{ top: 20, right: 20, bottom: 50, left: 50 }}\n                id=\"d3-grouped-bar-chart-root\"\n                data={orgsChartMapper(\n                  orgs.dates,\n                  orgs.meta,\n                  chartMapper[activeTabKey].attr\n                )}\n                legend={orgs.meta.legend}\n                colorFunc={colorFunc}\n                yLabel={chartMapper[activeTabKey].label}\n                onClick={chartMapper[activeTabKey].onClick(queryParams)}\n                TooltipClass={chartMapper[activeTabKey].tooltip}\n              />\n            )}\n          </CardBody>\n        </Card>\n      </GridItem>\n      <GridItem span={6}>\n        <Card>\n          <CardTitle>\n            <h2>Job Runs by Organization</h2>\n          </CardTitle>\n          <Divider />\n          <CardBody>\n            {jobsIsLoading && <LoadingState />}\n            {jobsError && <ApiErrorState message={jobsError.error.error} />}\n            {jobsIsSuccess && jobs.items?.length <= 0 && <NoData />}\n            {jobsIsSuccess && jobs.items?.length > 0 && (\n              <PieChart\n                margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                id=\"d3-donut-1-chart-root\"\n                data={pieChartMapper(jobs.items, 'total_count')}\n                colorFunc={colorFunc}\n              />\n            )}\n          </CardBody>\n        </Card>\n      </GridItem>\n      <GridItem span={6}>\n        <Card>\n          <CardTitle>\n            <h2>Usage by Organization (Tasks)</h2>\n          </CardTitle>\n          <Divider />\n          <CardBody>\n            {tasksIsLoading && <LoadingState />}\n            {tasksError && <ApiErrorState message={tasksError.error.error} />}\n            {tasksIsSuccess && tasks.items?.length <= 0 && <NoData />}\n            {tasksIsSuccess && tasks.items?.length > 0 && (\n              <PieChart\n                margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                id=\"d3-donut-2-chart-root\"\n                data={pieChartMapper(tasks.items, 'host_task_count')}\n                colorFunc={colorFunc}\n              />\n            )}\n          </CardBody>\n        </Card>\n      </GridItem>\n    </Grid>\n  );\n\n  return (\n    <>\n      <PageHeader title={'Organization Statistics'} />\n      <FilterableToolbar\n        categories={options}\n        filters={queryParams}\n        setFilters={setFromToolbar}\n      />\n      <PageSection>{renderContent()}</PageSection>\n    </>\n  );\n};\n\nexport default OrganizationStatistics;\n","const pfmulti = [\n  '#06C',\n  '#4CB140',\n  '#009596',\n  '#5752D1',\n  '#F4C145',\n  '#EC7A08',\n  '#8BC1F7',\n  '#23511E',\n  '#A2D9D9',\n  '#2A265F',\n  '#F9E0A2',\n  '#8F4700',\n  '#002F5D',\n];\n\nexport { pfmulti };\n","import React, { FunctionComponent } from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst LoadingState: FunctionComponent<Record<string, never>> = () => (\n  <EmptyState variant={EmptyStateVariant.full} style={{ minHeight: '400px' }}>\n    <EmptyStateIcon icon={CubesIcon} />\n    <Title headingLevel=\"h5\" size=\"lg\">\n      Loading...\n    </Title>\n    <EmptyStateBody>Please wait.</EmptyStateBody>\n  </EmptyState>\n);\n\nexport default LoadingState;\n","import React, { FunctionComponent } from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\ninterface Props {\n  title?: string | Record<string, any>;\n  subtext?: string | Record<string, any>;\n}\n\nconst NoData: FunctionComponent<Props> = ({ title, subtext }) => (\n  <EmptyState variant={EmptyStateVariant.full} style={{ minHeight: '400px' }}>\n    <EmptyStateIcon icon={CubesIcon} />\n    <Title headingLevel=\"h5\" size=\"lg\">\n      {title ? title : 'No Data'}\n    </Title>\n    {subtext && <EmptyStateBody>{subtext}</EmptyStateBody>}\n  </EmptyState>\n);\n\nexport default NoData;\n","const paths = {\n  getDetails: (slug: string): string => `${slug}`,\n};\n\nexport default paths;\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["initializeChart","Chart","BaseChart","props","id","margin","navigate","useNavigate","React","_extends","getWidth","parseInt","d3","style","left","right","getHeight","top","bottom","propTypes","PropTypes","Container","styled","div","_templateObject","_taggedTemplateLiteral","height","LegendDetail","_templateObject2","Wrapper","_templateObject3","Color","attrs","color","_templateObject4","Title","span","_templateObject5","SubTitle","_templateObject6","Legend","_ref","data","selected","onToggle","chartName","map","_ref2","index","name","value","count","key","Switch","isChecked","some","selection","onChange","concat","isRequired","formatDate","date","pieces","split","GroupedBarChart","_ref$onClick","onClick","TooltipClass","legend","_objectWithoutProperties","_excluded","colors","colorFunc","_useState","useState","_ref3","slice","_useState2","_slicedToArray","selectedIds","setSelectedIds","timeout","draw","remove","reduce","formatted","_ref4","selectedOrgs","items","filter","_ref5","includes","width","x0","range","padding","x1","y","maxTicksOneMonth","Math","round","length","maxTicksTwoMonths","ticks","d","i","undefined","item","xAxis","tickValues","tickFormat","yAxis","tickSize","svg","append","attr","dates","tooltip","domain","bandwidth","call","selectAll","text","yLabel","exit","enter","bars","merge","subEnter","on","moreDetail","endsWith","this","darker","handleMouseOver","handleMouseOut","resize","clearTimeout","setTimeout","useEffect","window","addEventListener","removeEventListener","el","_toConsumableArray","defaultProps","OrgsTooltip","_this","_classCallCheck","_defineProperty","orgName","jobs","x","pageX","node","getBoundingClientRect","pageY","boundingBox","clickMore","formatTooltipDate","toolTipWidth","toolTipBase","chartWidth","flipped","jobsWidth","getComputedTextLength","adjustedWidth","maxTextPerc","boxWidth","overage","toolTipPoint","interrupt","transition","delay","_createClass","textWidthThreshold","HostsTooltip","Tooltip","perc","percSuccess","drawn","percent","success_rate","maxLength","percentageTotal","percentageSuccess","boundingBOx","showSuccess","boundingHeight","boundingWidth","PieChart","sort","a","b","radius","min","filteredData","total","getTotal","forEach","donutTooltip","pie","arc","outerRadius","innerRadius","classed","Divider","scaleOrdinal","orgsChartMapper","meta","arguments","attrName","_objectSpread","pieChartMapper","chartMapper","api","readJobExplorer","label","queryParams","sort_options","sort_order","rest","formattedDate","dateForJobExplorer","initialQueryParams","DEFAULT_NAMESPACE","jobExplorer","defaultParams","quick_date_range","start_date","end_date","status","org_id","createUrl","Paths","replace","readHostExplorer","_orgs$dates","_orgs$dates2","_jobs$items","_jobs$items2","_tasks$items","_tasks$items2","activeTabKey","setActiveTabKey","_useQueryParams","useQueryParams","constants","setFromToolbar","jobEventsByOrgParams","attributes","group_by","include_others","jobRunsByOrgParams","jobsByDateAndOrgParams","group_by_time","hostAcrossOrgParams","_useRequest","useRequest","result","jobsError","error","jobsIsLoading","isLoading","jobsIsSuccess","isSuccess","setJobs","request","_useRequest2","readOrgOptions","options","setOptions","_useRequest3","_asyncToGenerator","_regeneratorRuntime","_callee","_args","_context","prev","next","abrupt","stop","orgs","orgsError","orgsIsLoading","orgsIsSuccess","setOrgs","_useRequest4","tasks","tasksError","tasksIsLoading","tasksIsSuccess","setTasks","PageHeader","title","FilterableToolbar","categories","filters","setFilters","PageSection","Grid","hasGutter","GridItem","Alert","variant","AlertVariant","warning","actionLinks","AlertActionLink","Link","to","reportPaths","getDetails","Card","Tabs","activeKey","onSelect","_","tabIndex","Tab","eventKey","CardBody","LoadingState","ApiErrorState","message","NoData","CardTitle","full","minHeight","icon","headingLevel","size","subtext","slug","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}