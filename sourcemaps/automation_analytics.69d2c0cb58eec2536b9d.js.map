{"version":3,"sources":["webpack:///./src/Charts/BaseChart.js","webpack:///./src/Components/AlertModal/AlertModal.js","webpack:///./src/Components/ApiErrorState.js","webpack:///./src/Components/Breadcrumbs.js","webpack:///./src/Components/EmptyState.js","webpack:///./src/Components/ErrorDetail/ErrorDetail.js","webpack:///./src/Components/JobStatus.js","webpack:///./src/Components/LoadingState.js","webpack:///./src/Components/NoData.js","webpack:///./src/Components/NoResults.js","webpack:///./src/Components/Toolbar/constants.js","webpack:///./src/Components/Toolbar/Groups/CategoryDropdown.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/Select.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/helpers.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/Date.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/Text.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/index.js","webpack:///./src/Components/Toolbar/Groups/FiltersCategoriesGroup.js","webpack:///./src/Components/Toolbar/Groups/QuickDateGroup.js","webpack:///./src/Components/Toolbar/Groups/SortByGroup.js","webpack:///./src/Components/Toolbar/Groups/SettingsPanel.js","webpack:///./src/Components/Toolbar/Toolbar.js","webpack:///./src/Components/Toolbar/index.js","webpack:///./src/Charts/ROITopTemplates.js","webpack:///./src/Containers/AutomationCalculator/helpers.js","webpack:///./src/Containers/AutomationCalculator/TotalSavings.js","webpack:///./src/Containers/AutomationCalculator/CalculationCost.js","webpack:///./src/Containers/AutomationCalculator/AutomationFormula.js","webpack:///./src/Containers/AutomationCalculator/TopTemplates.js","webpack:///./src/Containers/AutomationCalculator/AutomationCalculator.js","webpack:///./src/Utilities/Tooltip.js","webpack:///./src/Charts/BarChart.js","webpack:///./src/Charts/LineChart.js","webpack:///./src/Components/ModulesList.js","webpack:///./src/Components/Breakdown.js","webpack:///./src/Components/ModalContents.js","webpack:///./src/Components/TemplatesList.js","webpack:///./src/Containers/Clusters/Clusters.js","webpack:///./src/Components/JobExplorerListRow.js","webpack:///./src/Components/JobExplorerList.js","webpack:///./src/Containers/JobExplorer/JobExplorer.js","webpack:///./src/Components/NotificationsList.js","webpack:///./src/Containers/Notifications/Notifications.js","webpack:///./src/Utilities/Legend.js","webpack:///./src/Charts/GroupedBarChart/GroupedBarChart.js","webpack:///./src/Charts/GroupedBarChart/OrgsTooltip.js","webpack:///./src/Charts/GroupedBarChart/HostsTooltip.js","webpack:///./src/Charts/PieChart.js","webpack:///./src/Containers/OrganizationStatistics/OrganizationStatistics.js","webpack:///./src/Utilities/colors.ts","webpack:///./src/Containers/SavingsPlanner/Add/index.js","webpack:///./src/Components/CardActionsRow.js","webpack:///./src/Components/DeleteButton/DeleteButton.js","webpack:///./src/Components/RoutedTabs.js","webpack:///./src/Containers/SavingsPlanner/Details/DetailsTab/index.js","webpack:///./src/Utilities/hoursFormatter.ts","webpack:///./src/Containers/SavingsPlanner/Details/StatisticsTab/TotalSavings/index.tsx","webpack:///./src/Containers/SavingsPlanner/Details/StatisticsTab/FormulaDescription/index.tsx","webpack:///./src/Containers/SavingsPlanner/Details/StatisticsTab/index.tsx","webpack:///./src/Containers/SavingsPlanner/Edit/index.js","webpack:///./src/Containers/SavingsPlanner/Details/Details.js","webpack:///./src/Components/EmptyList.js","webpack:///./src/Containers/SavingsPlanner/List/ListItem/index.js","webpack:///./src/Components/Toolbar/ToolbarDeleteButton.js","webpack:///./src/Containers/SavingsPlanner/List/List.js","webpack:///./src/Utilities/useSelected.js","webpack:///./src/Containers/SavingsPlanner/Shared/constants.js","webpack:///./src/Containers/SavingsPlanner/Shared/usePlanData.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/Steps/Details/index.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/Steps/Tasks/index.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/Steps/Templates/index.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/index.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Utilities/getRelatedResourceDeleteDetails.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Utilities/useApi.js","webpack:///./src/Utilities/useQueryParams.js","webpack:///./src/Utilities/useRedirect.js","webpack:///./src/Utilities/useRequest.js","webpack:///./src/Utilities/useIsMounted.js","webpack:////home/travis/build/RedHatInsights/tower-analytics-frontend/node_modules/moment/locale|sync|/^\\.\\/.*$/","webpack:///./src/Components/Pagination/Pagination.tsx","webpack:///./src/Components/Pagination/index.ts","webpack:///./src/Utilities/currencyFormatter.ts"],"names":["initializeChart","Chart","BaseChart","props","id","margin","history","useHistory","getWidth","parseInt","d3","style","left","right","getHeight","top","bottom","propTypes","PropTypes","ExclamationCircleIcon","styled","PFExclamationCircleIcon","TimesCircleIcon","PFTimesCircleIcon","InfoCircleIcon","PFInfoCircleIcon","CheckCircleIcon","PFCheckCircleIcon","ExclamationTriangleIcon","PFExclamationTriangleIcon","Header","AlertModal","isOpen","title","label","variant","children","variantIcons","danger","size","error","info","success","warning","customHeader","Title","headingLevel","Modal","header","aria-label","aria-labelledby","ApiErrorState","message","EmptyState","EmptyStateVariant","EmptyStateIcon","icon","color","globalDangerColor200","EmptyStateBody","Breadcrumbs","items","current","Breadcrumb","map","navigate","basePathNavigate","getBaseName","BreadcrumbItem","key","to","BreadcrumbHeading","DefaultEmptyState","preflightError","WrenchIcon","status","href","target","rel","Button","onClick","window","location","reload","Card","PFCard","CardBody","PFCardBody","Expandable","PFExpandable","ErrorDetail","useState","isExpanded","setIsExpanded","Array","isArray","length","toggleText","onToggle","m","JobStatus","str","Label","getColor","getIcon","charAt","toUpperCase","slice","CubesIcon","SearchIcon","optionsForCategories","type","isSingle","name","placeholder","hasChips","quick_date_range","start_date","end_date","job_type","org_id","cluster_id","template_id","sort_options","automation_status","frequency_period","category","inventory_id","CategoryDropdown","selected","setSelected","categories","ToolbarItem","Select","onSelect","_event","selection","selections","placeholderText","SelectOption","value","OptionSpan","renderValues","values","description","Tooltip","content","item","comparator","val","categoryKey","selectOptions","isVisible","setValue","expanded","setExpanded","options","ToolbarFilter","data-cy","showToolbarItem","chips","forEach","i","undefined","reduce","acc","Number","isInteger","cmpItem","push","handleCheckboxChips","categoryName","deleteChip","_","valueToDelete","keyToDelete","find","filteredArr","filter","SelectVariant","includes","hasInlineFilter","onFilter","textInput","toLowerCase","maxHeight","isRequired","Date","InputGroup","TextInput","onChange","Text","searchVal","setSearchVal","useEffect","onKeyDown","e","preventDefault","components","select","date","text","ToolbarInput","SelectedInput","FilterCategoriesGroup","filterCategories","filters","setFilters","Object","keys","currentCategory","setCurrentCategory","ToolbarGroup","el","QuickDateGroup","SortByGroup","sort_order","SettingsPanel","settingsExpanded","setSettingsExpanded","isFlat","backgroundColor","CardHeader","CardActions","CardTitle","Switch","labelOff","isChecked","only_root_workflows_and_standalone_jobs","position","FilterableToolbar","pagination","hasSettings","additionalControls","hideQuickDateRange","hideSortOptions","restCategories","obj","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarContent","isActive","control","idx","visibility","default","lg","d","savings","manualCost","automationCost","scrollLeftOffset","node","scrollLeft","x","svg","getBoundingClientRect","y","currencyFormatter","delta","automatedCost","toolTipWidth","toolTipBase","width","chartWidth","flipped","nameWidth","getComputedTextLength","savingsWidth","manualCostWidth","automationCostWidth","widestTextElem","adjustedWidth","maxTextPerc","boxWidth","overage","boundingBox","attr","toolTipPoint","interrupt","transition","delay","this","draw","append","textWidthThreshold","TopTemplatesSavings","init","bind","resize","state","timeout","clearTimeout","setState","setTimeout","remove","data","ticks","height","rangeRound","padding","range","formatYAxisValue","xAxis","tickValues","yAxis","tickFormat","replace","tickSize","taskNames","tooltip","domain","call","selectAll","bandwidth","enter","on","darker","handleMouseOver","handleMouseOut","addEventListener","removeEventListener","Component","BorderedCardTitle","TotalSavings","totalSavings","borderTop","paddingBottom","InputAndText","validFloat","floatValue","parseFloat","CalculationCost","costManual","setCostManual","costAutomation","setCostAutomation","InputGroupText","paddingTop","TemplateDetail","TemplateDetailSubTitle","TooltipWrapper","IconGroup","QuestionIconTooltip","details","Popover","bodyContent","k","capitalize","split","join","TopTemplates","sortBy","setDataRunTime","setEnabled","redirectToJobExplorer","component","convertSecondsToMins","avgRunTime","minutes","convertMinsToSeconds","successful_hosts_total","trimmed","sortAttribute","showSortAttr","enabled","deselectedIds","setDeselectedIds","filterDisabled","updateDeltaCost","convertSecondsToHours","successful_elapsed_total","calculateDelta","AutomationCalculator","toJobExplorer","useRedirect","useApi","preflight","setPreflight","setOptions","api","fetchApi","setDataInApi","useQueryParams","roiConst","queryParams","setFromToolbar","preflightRequest","readROIOptions","params","readROI","NotAuthorized","notAuthorizedParams","PageHeader","PageHeaderTitle","Main","isSuccess","Grid","hasGutter","className","GridItem","span","Stack","StackItem","isLoading","LoadingState","NoData","textAlign","isFilled","sum","curr","overflow","templateId","seconds","updatedData","setUnfilteredData","sort_by","opts","fail","total","formatTooltipDate","RAN","FAIL","TOTAL","DATE","jobs","jobsWidth","failed","successful","successTextWidth","failTextWidth","circleSuccess","circleFail","failedIcon","successIcon","successText","failText","clickMore","colors","BarChart","formattedData","jobExplorer","Paths","formattedDate","formatDate","initialQueryParams","search","stringify","arrayFormat","pathname","parseTime","formatted","created_date","successful_count","failed_count","concat","barTooltip","layers","order","offset","stack","maxTicks","Math","round","layer","_d","duration","ease","prevProps","LineChart","updateCluster","path","attrTween","tweenDash","l","getTotalLength","t","unformattedData","successLine","curve","failLine","defined","isNaN","vertical","handleMouseMove","intersectX","cx","baseVal","DataListCell","PFDataListCell","DataListItem","PFDataListItem","DataCellEnd","ModulesList","modules","DataList","background","border","module","index","host_task_count","trimStr","BarContainer","Bar","LabelsContainer","Square","Breakdown","categoryCount","categoryColor","totalCount","accumulated","currentVal","sortedCategories","sort","barSpacing","remainingSpace","ActionContainer","formatTopFailedTask","percentage","ceil","total_failed_count","task_name","formatSuccessRate","successCount","formatTotalTime","elapsed","toISOString","substr","ModalContents","selectedId","handleModal","qp","jobType","relatedJobs","setRelatedJobs","setSynchJobs","stats","setStats","setSynchStats","relatedTemplateJobsParams","attributes","group_by_time","limit","agreggateTemplateParams","group_by","readJobExplorer","cancelled","canceled_count","error_count","new","new_count","pending","pending_count","running","running_count","waiting","waiting_count","global_palette_green_200","global_palette_black_850","global_palette_orange_300","global_palette_red_100","global_palette_cyan_200","global_palette_purple_300","global_palette_blue_300","global_palette_light_green_200","descriptionStats","total_count","formatJobType","most_failed_tasks","cleanup","ModalVariant","onClose","NoResults","DescriptionList","isHorizontal","columnModifier","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","Divider","marginTop","marginBottom","TableComposable","Thead","Tr","heading","Th","Tbody","job","Td","template_name","cluster_name","formatDateTime","finished","TemplatesList","templates","setSelectedId","isModalOpen","setIsModalOpen","displayJobType","initialTopTemplateParams","initialTopWorkflowParams","initialModuleParams","setPreFlightError","clusters","chartData","setData","setTemplates","workflows","setWorkflows","setModules","initialOptionsParams","optionsQueryParams","topTemplatesParams","topWorkflowParams","topModuleParams","readClustersOptions","initializeWithPreflight","readEventExplorer","JobExplorerListRow","expandedInfo","created","started","expand","rowIndex","tower_link","org_name","colSpan","ExpandableRowContent","cols","JobExplorerList","head","JobExplorer","meta","setFromPagination","dispatch","insights","chrome","appNavClick","secondaryNav","initialSearchParams","parse","parseBooleans","parseNumbers","readJobExplorerOptions","updateURL","Pagination","count","setPagination","isCompact","PaginationVariant","ExternalLinkAltIcon","PFExternalLinkAltIcon","NotificationDrawerListItem","PFNotificationDrawerListItem","NotificationDrawerList","PFNotificationDrawerList","stringifyDate","day","moment","now","utc","isAfter","diff","isSame","valueOf","AllNotificationTemplate","notifications","notification_id","url","tower_url","NotificationDrawerListItemHeader","NotificationDrawerListItemBody","timestamp","ErrorNotificationTemplate","notification","NoticeNotificationTemplate","WarningNotificationTemplate","NotificationsList","filterBy","PFCardTitle","DropdownGroup","notificationOptions","disabled","formatClusterName","uuid","install_uuid","notificationsData","setNotificationsData","clusterOptions","setClusterOptions","selectedCluster","setSelectedCluster","firstRender","setFirstRender","setIsLoading","setMeta","setId","setSeverity","readNotifications","then","ignore","fetchEndpoints","Promise","all","readClusters","p","clustersData","FormSelect","FormSelectOption","isDisabled","severity","NotificationDrawer","Container","LegendDetail","Wrapper","Color","SubTitle","Legend","chartName","some","pieces","GroupedBarChart","TooltipClass","legend","colorFunc","selectedIds","setSelectedIds","selectedOrgs","x0","x1","maxTicksOneMonth","maxTicksTwoMonths","dates","yLabel","exit","bars","merge","subEnter","moreDetail","endsWith","defaultProps","OrgsTooltip","orgName","HostsTooltip","perc","percSuccess","drawn","percent","success_rate","maxLength","percentageTotal","percentageSuccess","boundingBOx","showSuccess","boundingHeight","boundingWidth","PieChart","a","b","radius","min","filteredData","getTotal","donutTooltip","pie","arc","outerRadius","innerRadius","classed","scaleOrdinal","pieChartMapper","attrName","chartMapper","rest","dateForJobExplorer","readHostExplorer","OrganizationStatistics","activeTabKey","setActiveTabKey","orgs","setOrgs","setJobs","tasks","setTasks","constants","jobEventsByOrgParams","include_others","jobRunsByOrgParams","jobsByDateAndOrgParams","hostAcrossOrgParams","readOrgOptions","readJobsOrHosts","Tabs","activeKey","tabIndex","Tab","eventKey","readPlanOptions","canWrite","rbac","perms","write","Redirect","CardActionsWrapper","CardActionsRow","WarningMessage","Alert","DeleteButton","onConfirm","modalTitle","ouiaId","deleteMessage","deleteDetailsRequests","disabledTooltip","setIsOpen","deleteMessageError","setDeleteMessageError","deleteDetails","setDeleteDetails","toggleModal","getRelatedResourceDeleteCounts","results","detail","spinnerAriaValueText","actions","isInline","entries","Badge","RoutedTabs","tabsArray","defaultTabId","useLocation","tab","link","getActiveTabId","match","TabTitleText","role","arrayOf","shape","number","string","oneOfType","PFDivider","DetailsTab","plans","hosts","manual_time","modified","template_details","renderOptionsBasedValue","labelsAndValues","Name","Description","Frequency","Template","showTemplate","useRequest","useCallback","deletePlan","deletePlans","request","deleteError","relatedResourceDeleteRequests","readPlan","Error","isDeleteDisabled","result","deleteDetailsError","fetchDeleteDetails","useDismissableError","dismissError","List","task","ListItem","CardFooter","n","toFixed","toLocaleString","_a","_b","_c","isMoney","isPlain","CostsText","CodeBlock","CodeBlockCode","SavingsText","ButtonVariant","__assign","assign","s","arguments","prototype","hasOwnProperty","apply","yearLabels","initial","year1","year2","year3","cost","benefit","net","StatisticsTab","setIsMoney","barChartData","charts","kind","parent","domainPadding","themeColor","cursor","stickToAxis","mouseFollow","legendTooltip","legendData","childName","symbol","fill","titleProperyForLegend","customFnc","datum","grid","stroke","axisLabel","barRatio","barWidth","labelName","strokeWidth","functions","fetchFnc","resolve","year","total_costs","projections","monetary_stats","total_benefits","cumulative_net_benefits","total_hours_spent_risk_adjusted","time_stats","total_hours_saved","cumulative_time_net_benefits","response_type","getChartData","ToggleGroup","ToggleGroupItem","buttonId","isSelected","schema","Edit","useParams","Form","locationState","pageTitle","onEdit","indexOf","breadcrumbUrl","breadcrumbsItems","Route","exact","EmptyList","canAdd","AddCircleOIcon","CardLabel","Small","Checkbox","PFCheckbox","CardDetail","template","plan","handleSelect","projectedSavings","isCardKebabOpen","setIsCardKebabOpen","useRouteMatch","kebabDropDownItems","DropdownItem","CardHeaderMain","Link","Dropdown","toggle","KebabToggle","dropdownItems","row","requiredField","username","image","ToolbarDeleteButton","itemsUnableToDelete","itemsToDelete","pluralizedItemName","onDelete","errorMessage","cannotDelete","Boolean","warningMessage","PageContainer","Footer","FlexMain","savingsPlanner","combinedOptions","readPlans","list","isAllSelected","prevState","useSelected","useDeleteItems","qsConfig","allItemsSelected","fetchItems","deleteLoading","deletionError","deleteItems","clearDeletionError","handleDelete","Gallery","minWidths","sm","md","xl","convertTasks","task_order","Details","formData","categoryIsOpen","setCategoryIsOpen","manualTimeIsOpen","setManualTimeIsOpen","frequencyPeriodIsOpen","setFrequencyPeriodIsOpen","FormGroup","fieldId","newName","newDescription","newHosts","TaskSection","TaskTitle","TaskDeleteButton","DeleteTaskActionSection","DataListAction","TaskRow","DataListItemRow","Tasks","taskToAdd","setTaskToAdd","liveText","setLiveText","appendTask","trimmedTask","trim","newTaskName","onDragFinish","newItemOrder","onDragStart","newId","onDragMove","oldIndex","newIndex","onDragCancel","itemOrder","DataListControl","DataListDragButton","aria-describedby","aria-pressed","DataListItemCells","dataListCells","removeTask","aria-live","ListFooter","Templates","formDispatch","hash","queryParamsDispatch","sortParams","direction","onSort","_ev","_idx","dir","data-testid","event","startStep","setStartStep","apiResponse","reset","useReducer","requestPayload","hourly_rate","frequency_per_period","usePlanData","steps","step_number","nextButtonText","CustomFooter","WizardFooter","WizardContextConsumer","activeStep","onNext","onBack","onSave","step","onStepChange","newStep","updatePlan","createPlan","plan_created","Wizard","navAriaLabel","mainAriaLabel","onGoToStep","footer","startAtStep","defaultParams","roi","organizationStatistics","requests","hasCount","savingsPlan","readRecordApi","isNumeric","toString","dateTime","format","mins","dataFetchReducer","action","payload","initialData","postprocess","setRequest","didCancel","initialWithCalculatedParams","startDate","endDate","newState","newValues","actionMapper","varName","setEndDate","setStartDate","days","subtract","setStartDateAsString","query","makeRequest","initialValue","setResult","setError","isMounted","useRef","useIsMounted","response","showError","setShowError","requestError","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","exports","perPageOptions","getOwnPropertySymbols","propertyIsEnumerable","__rest","currentPage","floor","returnOffsetVal","page","itemCount","widgetId","perPage","onPerPageSelect","onSetPage","Intl","NumberFormat","currency"],"mappings":"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","file":"js/automation_analytics.bb7a97e521b6a54ac954.js","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nconst initializeChart = (Chart) => {\n  const BaseChart = (props) => {\n    const { id, margin } = props;\n\n    const getWidth = () => {\n      let width;\n      width =\n        parseInt(d3.select('#' + id).style('width')) -\n          margin.left -\n          margin.right || 700;\n      return width;\n    };\n\n    const getHeight = () => {\n      let height;\n      height =\n        parseInt(d3.select('#' + id).style('height')) -\n          margin.top -\n          margin.bottom || 450;\n      return height;\n    };\n\n    let history = useHistory();\n\n    return (\n      <Chart\n        {...props}\n        getWidth={getWidth}\n        getHeight={getHeight}\n        history={history}\n      />\n    );\n  };\n\n  BaseChart.propTypes = {\n    id: PropTypes.string,\n    margin: PropTypes.object,\n  };\n\n  return BaseChart;\n};\n\ninitializeChart.propTypes = {\n  Chart: PropTypes.element,\n};\n\nexport default initializeChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Modal, Title } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon as PFCheckCircleIcon,\n  ExclamationCircleIcon as PFExclamationCircleIcon,\n  ExclamationTriangleIcon as PFExclamationTriangleIcon,\n  InfoCircleIcon as PFInfoCircleIcon,\n  TimesCircleIcon as PFTimesCircleIcon,\n} from '@patternfly/react-icons';\nimport styled from 'styled-components';\n\nconst ExclamationCircleIcon = styled(PFExclamationCircleIcon)`\n  color: var(--pf-global--danger-color--100);\n`;\n\nconst TimesCircleIcon = styled(PFTimesCircleIcon)`\n  color: var(--pf-global--danger-color--100);\n`;\n\nconst InfoCircleIcon = styled(PFInfoCircleIcon)`\n  color: var(--pf-global--info-color--100);\n`;\n\nconst CheckCircleIcon = styled(PFCheckCircleIcon)`\n  color: var(--pf-global--success-color--100);\n`;\n\nconst ExclamationTriangleIcon = styled(PFExclamationTriangleIcon)`\n  color: var(--pf-global--warning-color--100);\n`;\n\nconst Header = styled.div`\n  display: flex;\n  svg {\n    margin-right: 16px;\n  }\n`;\n\nconst AlertModal = ({\n  isOpen,\n  title,\n  label = 'Alert modal',\n  variant = 'warning',\n  children,\n  ...props\n}) => {\n  const variantIcons = {\n    danger: <ExclamationCircleIcon size=\"lg\" />,\n    error: <TimesCircleIcon size=\"lg\" />,\n    info: <InfoCircleIcon size=\"lg\" />,\n    success: <CheckCircleIcon size=\"lg\" />,\n    warning: <ExclamationTriangleIcon size=\"lg\" />,\n  };\n\n  const customHeader = (\n    <Header>\n      {variant ? variantIcons[variant] : null}\n      <Title id=\"alert-modal-header-label\" size=\"2xl\" headingLevel=\"h2\">\n        {title}\n      </Title>\n    </Header>\n  );\n\n  return (\n    <Modal\n      header={customHeader}\n      aria-label={label}\n      aria-labelledby=\"alert-modal-header-label\"\n      isOpen={!!isOpen}\n      variant=\"small\"\n      title={title}\n      {...props}\n    >\n      {children}\n    </Modal>\n  );\n};\n\nAlertModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  variant: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default AlertModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { global_danger_color_200 as globalDangerColor200 } from '@patternfly/react-tokens';\n\nconst ApiErrorState = ({ message }) => (\n  <EmptyState variant={EmptyStateVariant.small}>\n    <EmptyStateIcon\n      icon={ExclamationCircleIcon}\n      color={globalDangerColor200.value}\n    />\n    <Title headingLevel=\"h2\" size=\"lg\">\n      Error\n    </Title>\n    <EmptyStateBody>{message}</EmptyStateBody>\n  </EmptyState>\n);\n\nApiErrorState.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default ApiErrorState;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbHeading,\n} from '@patternfly/react-core';\n\nimport getBaseName from '../Utilities/getBaseName';\n\nconst Breadcrumbs = ({ items = [], current = null }) => {\n  return (\n    <Breadcrumb>\n      {items.map(({ title, navigate }) => {\n        const basePathNavigate = getBaseName() + navigate;\n        return (\n          <BreadcrumbItem key={title} to={basePathNavigate}>\n            {title}\n          </BreadcrumbItem>\n        );\n      })}\n      {current && <BreadcrumbHeading>{current}</BreadcrumbHeading>}\n    </Breadcrumb>\n  );\n};\n\nBreadcrumbs.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      navigate: PropTypes.any,\n      title: PropTypes.node,\n    })\n  ),\n  current: PropTypes.node,\n};\n\nexport default Breadcrumbs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { WrenchIcon } from '@patternfly/react-icons';\n\nconst DefaultEmptyState = ({ preflightError: error }) => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={WrenchIcon} />\n    {error.status === 404 && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          No data found\n        </Title>\n        <EmptyStateBody>\n          Please visit{' '}\n          <a\n            href=\"https://docs.ansible.com/ansible-tower/latest/html/administration/usability_data_collection.html#automation-analytics\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            here\n          </a>{' '}\n          to learn how to enable Automation Analytics.\n        </EmptyStateBody>\n      </>\n    )}\n    {error.status === 401 && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          Not authorized\n        </Title>\n        <EmptyStateBody>\n          You do not have the correct permissions to view this page.\n        </EmptyStateBody>\n      </>\n    )}\n    {!error.status && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          Something went wrong, please try reloading the page\n        </Title>\n        <Button variant=\"primary\" onClick={() => window.location.reload()}>\n          Reload\n        </Button>\n      </>\n    )}\n  </EmptyState>\n);\n\nDefaultEmptyState.propTypes = {\n  preflightError: PropTypes.object,\n};\n\nexport default DefaultEmptyState;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Card as PFCard,\n  CardBody as PFCardBody,\n  ExpandableSection as PFExpandable,\n} from '@patternfly/react-core';\n\nconst Card = styled(PFCard)`\n  background-color: var(--pf-global--BackgroundColor--200);\n  overflow-wrap: break-word;\n`;\n\nconst CardBody = styled(PFCardBody)`\n  max-height: 200px;\n  overflow: scroll;\n`;\n\nconst Expandable = styled(PFExpandable)`\n  text-align: left;\n\n  & .pf-c-expandable__toggle {\n    padding-left: 10px;\n    margin-left: 5px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n`;\n\nfunction ErrorDetail({ error }) {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const handleToggle = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  return (\n    <>\n      {Array.isArray(error) && error.length && (\n        <Expandable\n          toggleText={'Details'}\n          onToggle={handleToggle}\n          isExpanded={isExpanded}\n        >\n          <Card>\n            <CardBody>\n              <ul>\n                {error.map((m) =>\n                  typeof m === 'string' ? <li key={m}>{m}</li> : null\n                )}\n              </ul>\n            </CardBody>\n          </Card>\n        </Expandable>\n      )}\n    </>\n  );\n}\n\nErrorDetail.propTypes = {\n  error: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default ErrorDetail;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ClockIcon,\n  SyncAltIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\n\nconst JobStatus = ({ status }) => {\n  const capitalized = (str) => str.charAt(0).toUpperCase() + str.slice(1);\n\n  const getColor = () => {\n    switch (status) {\n      case 'successful':\n        return 'green';\n      case 'failed':\n      case 'error':\n        return 'red';\n      case 'running':\n      case 'pending':\n        return 'blue';\n      case 'canceled':\n        return 'orange';\n      // case new, waiting\n      default:\n        return 'grey';\n    }\n  };\n\n  const getIcon = () => {\n    switch (status) {\n      case 'successful':\n        return <CheckCircleIcon />;\n      case 'failed':\n      case 'error':\n        return <ExclamationCircleIcon />;\n      case 'running':\n        return <SyncAltIcon />;\n      case 'canceled':\n        return <ExclamationTriangleIcon />;\n      // case new, waiting, pending\n      default:\n        return <ClockIcon />;\n    }\n  };\n\n  return (\n    <Label variant=\"outline\" color={getColor()} icon={getIcon()}>\n      {capitalized(status)}\n    </Label>\n  );\n};\n\nJobStatus.propTypes = {\n  status: PropTypes.oneOf([\n    'successful',\n    'failed',\n    'error',\n    'running',\n    'new',\n    'waiting',\n    'pending',\n    'canceled',\n  ]),\n};\n\nexport default JobStatus;\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst DefaultLoadingState = () => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={CubesIcon} />\n    <Title headingLevel=\"h5\" size=\"lg\">\n      Loading...\n    </Title>\n    <EmptyStateBody>Please wait.</EmptyStateBody>\n  </EmptyState>\n);\n\nexport default DefaultLoadingState;\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst NoData = () => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={CubesIcon} />\n    <Title headingLevel=\"h5\" size=\"lg\">\n      No Data\n    </Title>\n  </EmptyState>\n);\n\nexport default NoData;\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst NoResults = () => {\n  return (\n    <EmptyState variant={EmptyStateVariant.full}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title size=\"lg\" headingLevel=\"h4\">\n        No results found\n      </Title>\n      <EmptyStateBody>\n        No results match the filter criteria. Remove all filters or clear all\n        filters to show results.\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n\nexport default NoResults;\n","export const optionsForCategories = {\n  status: {\n    type: 'select',\n    isSingle: false,\n    name: 'Status',\n    placeholder: 'Filter by job status',\n    hasChips: true,\n  },\n  quick_date_range: {\n    type: 'select',\n    isSingle: true,\n    name: 'Date',\n    placeholder: 'Filter by date',\n    hasChips: false,\n  },\n  start_date: {\n    type: 'date',\n    name: 'Start date',\n    hasChips: false,\n  },\n  end_date: {\n    type: 'date',\n    name: 'End date',\n    hasChips: false,\n  },\n  job_type: {\n    type: 'select',\n    isSingle: false,\n    name: 'Job',\n    placeholder: 'Filter by job type',\n    hasChips: true,\n  },\n  org_id: {\n    type: 'select',\n    isSingle: false,\n    name: 'Organization',\n    placeholder: 'Filter by organization',\n    hasChips: true,\n  },\n  cluster_id: {\n    type: 'select',\n    isSingle: false,\n    name: 'Cluster',\n    placeholder: 'Filter by cluster',\n    hasChips: true,\n  },\n  template_id: {\n    type: 'select',\n    isSingle: false,\n    name: 'Template',\n    placeholder: 'Filter by template',\n    hasChips: true,\n  },\n  sort_options: {\n    type: 'select',\n    isSingle: true,\n    name: 'Sort by',\n    placeholder: 'Sort by attribute',\n    hasChips: false,\n  },\n  automation_status: {\n    type: 'select',\n    isSingle: false,\n    name: 'Automation status',\n    placeholder: 'Filter by automation status',\n    hasChips: true,\n  },\n  frequency_period: {\n    type: 'select',\n    isSingle: false,\n    name: 'Frequency',\n    placeholder: 'Filter by frequency',\n    hasChips: true,\n  },\n  category: {\n    type: 'select',\n    isSingle: false,\n    name: 'Category',\n    placeholder: 'Filter by category',\n    hasChips: true,\n  },\n  inventory_id: {\n    type: 'select',\n    isSingle: false,\n    name: 'Inventory',\n    placeholder: 'Filter by inventory',\n    hasChips: true,\n  },\n  name: {\n    type: 'text',\n    name: 'Search by name',\n    hasChips: true,\n  },\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarItem, Select, SelectOption } from '@patternfly/react-core';\n\nconst CategoryDropdown = ({\n  selected,\n  setSelected = () => {},\n  categories = [],\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <ToolbarItem>\n      <Select\n        isOpen={isExpanded}\n        variant={'single'}\n        aria-label={'Categories'}\n        onToggle={() => setIsExpanded(!isExpanded)}\n        onSelect={(_event, selection) => {\n          setSelected(selection);\n          setIsExpanded(false);\n        }}\n        selections={selected}\n        placeholderText={'Filter by'}\n      >\n        {categories.map(({ key, name }) => (\n          <SelectOption key={key} value={key}>\n            {name}\n          </SelectOption>\n        ))}\n      </Select>\n    </ToolbarItem>\n  );\n};\n\nCategoryDropdown.propTypes = {\n  categories: PropTypes.array,\n  selected: PropTypes.string,\n  setSelected: PropTypes.func,\n};\n\nexport default CategoryDropdown;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Tooltip,\n  ToolbarFilter,\n  Select as PFSelect,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\n\nimport { handleCheckboxChips, handleSingleChips } from './helpers';\nimport { optionsForCategories } from '../../constants';\nimport styled from 'styled-components';\n\nconst OptionSpan = styled('span')`\n  display: block;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n  max-width: 300px;\n`;\n\nconst renderValues = (values) =>\n  values &&\n  values.map(({ key, value, description }) => (\n    <SelectOption key={key} value={key} description={description}>\n      <Tooltip content={<div>{value}</div>}>\n        <OptionSpan>{value}</OptionSpan>\n      </Tooltip>\n    </SelectOption>\n  ));\n\nconst Select = ({\n  categoryKey,\n  value,\n  selectOptions,\n  isVisible = true,\n  setValue,\n}) => {\n  const [expanded, setExpanded] = useState(false);\n  const options = optionsForCategories[categoryKey];\n\n  const onDelete = (_, valueToDelete) => {\n    const single = optionsForCategories[categoryKey].isSingle;\n\n    if (single) {\n      setValue(null);\n    } else {\n      const keyToDelete = selectOptions.find(\n        ({ value }) => value === valueToDelete\n      ).key;\n      const filteredArr = value.filter((value) => value !== keyToDelete);\n      setValue(filteredArr);\n    }\n  };\n\n  const onFilter = (_, textInput) => {\n    if (textInput === '') {\n      return renderValues(selectOptions);\n    } else {\n      return renderValues(\n        selectOptions.filter(({ value }) =>\n          value.toLowerCase().includes(textInput.toLowerCase())\n        )\n      );\n    }\n  };\n\n  const handleChips = () => {\n    if (options.isSingle) {\n      return handleSingleChips(value, selectOptions);\n    } else {\n      return handleCheckboxChips(value, selectOptions);\n    }\n  };\n\n  const onSelect = (_, selection) => {\n    if (options.isSingle) {\n      setValue(selection);\n      setExpanded(false);\n    } else {\n      setValue(\n        !value.includes(selection)\n          ? [...value, selection]\n          : value.filter((value) => value !== selection)\n      );\n    }\n  };\n\n  return (\n    <ToolbarFilter\n      data-cy={categoryKey}\n      key={categoryKey}\n      showToolbarItem={isVisible}\n      chips={options.hasChips ? handleChips() : []}\n      categoryName={options.name}\n      deleteChip={options.hasChips ? onDelete : null}\n    >\n      <PFSelect\n        variant={\n          options.isSingle ? SelectVariant.single : SelectVariant.checkbox\n        }\n        aria-label={options.name}\n        onToggle={() => setExpanded(!expanded)}\n        onSelect={onSelect}\n        selections={value}\n        isOpen={expanded}\n        hasInlineFilter\n        placeholderText={options.placeholder}\n        onFilter={onFilter}\n        maxHeight={'1000%'}\n      >\n        {renderValues(selectOptions)}\n      </PFSelect>\n    </ToolbarFilter>\n  );\n};\n\nSelect.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]).isRequired,\n  selectOptions: PropTypes.array,\n  isVisible: PropTypes.bool,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default Select;\n","/**\n * Get comparator values if their key is in the item list\n */\nexport const handleCheckboxChips = (item, comparator) => {\n  if (item && comparator) {\n    return item.reduce((acc, i) => {\n      Number.isInteger(parseInt(i)) ? (i = parseInt(i)) : i;\n\n      comparator.forEach((cmpItem) => {\n        if (cmpItem.key === i) {\n          acc.push(cmpItem.value);\n        }\n      });\n\n      return acc;\n    }, []);\n  }\n\n  return [];\n};\n\n/**\n * Convert a list of objects to a list of the last value if defined\n */\nexport const handleSingleChips = (item, comparator) => {\n  if (item && typeof item === 'string' && comparator) {\n    let val;\n    comparator.forEach((i) => {\n      if (i.key === item) {\n        val = i.value;\n      }\n    });\n\n    if (val !== undefined) {\n      return [val];\n    }\n  }\n\n  return [];\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, TextInput } from '@patternfly/react-core';\nimport { optionsForCategories } from '../../constants';\n\nconst Date = ({ categoryKey, value = '', setValue = () => {} }) => {\n  const options = optionsForCategories[categoryKey];\n\n  return (\n    <InputGroup>\n      <TextInput\n        type=\"date\"\n        aria-label={options.name}\n        value={value}\n        onChange={setValue}\n      />\n    </InputGroup>\n  );\n};\n\nDate.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default Date;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ToolbarFilter,\n  TextInput,\n  InputGroup,\n  Button,\n} from '@patternfly/react-core';\n\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { optionsForCategories } from '../../constants';\n\nconst Text = ({ categoryKey, isVisible = true, value = '', setValue }) => {\n  const [searchVal, setSearchVal] = useState(value);\n  const options = optionsForCategories[categoryKey];\n\n  const onDelete = () => {\n    setValue('');\n  };\n\n  const handleChips = () => {\n    return value ? [value] : [];\n  };\n\n  useEffect(() => {\n    setSearchVal(value);\n  }, [value]);\n\n  return (\n    <ToolbarFilter\n      data-cy={categoryKey}\n      key={categoryKey}\n      showToolbarItem={isVisible}\n      chips={options.hasChips ? handleChips() : []}\n      categoryName={options.name}\n      deleteChip={options.hasChips ? onDelete : null}\n    >\n      <InputGroup>\n        <TextInput\n          type=\"search\"\n          aria-label={options.name}\n          value={searchVal}\n          onChange={setSearchVal}\n          onKeyDown={(e) => {\n            if (e.key && e.key === 'Enter') {\n              e.preventDefault();\n              setValue(searchVal);\n            }\n          }}\n        />\n        <Button\n          variant=\"control\"\n          aria-label={`Search button for ${options.name}`}\n          onClick={() => {\n            setValue(searchVal);\n          }}\n        >\n          <SearchIcon />\n        </Button>\n      </InputGroup>\n    </ToolbarFilter>\n  );\n};\n\nText.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.any,\n  isVisible: PropTypes.bool,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default Text;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Select from './Select';\nimport Date from './Date';\nimport Text from './Text';\nimport { optionsForCategories } from '../../constants';\n\nconst components = {\n  select: Select,\n  date: Date,\n  text: Text,\n};\n\nconst ToolbarInput = ({\n  categoryKey,\n  value,\n  selectOptions,\n  isVisible = true,\n  setValue,\n}) => {\n  const options = optionsForCategories[categoryKey];\n  const SelectedInput = components[options.type];\n\n  const defaultValue = () => {\n    if (value) {\n      return value;\n    } else if (options.type !== 'select') {\n      return '';\n    } else if (options.isSingle) {\n      return '';\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <SelectedInput\n      categoryKey={categoryKey}\n      value={defaultValue()}\n      selectOptions={selectOptions}\n      isVisible={isVisible}\n      setValue={setValue}\n    />\n  );\n};\n\nToolbarInput.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  selectOptions: PropTypes.array,\n  isVisible: PropTypes.bool,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default ToolbarInput;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarGroup } from '@patternfly/react-core';\n\nimport CategoryDropdown from './CategoryDropdown';\nimport ToolbarInput from './ToolbarInput/';\nimport { optionsForCategories } from '../constants';\n\nconst FilterCategoriesGroup = ({ filterCategories, filters, setFilters }) => {\n  const [currentCategory, setCurrentCategory] = useState(\n    Object.keys(filterCategories)[0]\n  );\n\n  return (\n    <ToolbarGroup variant=\"filter-group\">\n      <CategoryDropdown\n        selected={currentCategory}\n        setSelected={setCurrentCategory}\n        categories={Object.keys(filterCategories).map((el) => ({\n          key: el,\n          name: optionsForCategories[el].name,\n        }))}\n      />\n      {Object.keys(filterCategories).map((key) => (\n        <ToolbarInput\n          key={key}\n          categoryKey={key}\n          value={filters[key]}\n          selectOptions={filterCategories[key]}\n          isVisible={currentCategory === key}\n          setValue={(value) => setFilters(key, value)}\n        />\n      ))}\n    </ToolbarGroup>\n  );\n};\n\nFilterCategoriesGroup.propTypes = {\n  filterCategories: PropTypes.object.isRequired,\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n};\n\nexport default FilterCategoriesGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarGroup } from '@patternfly/react-core';\n\nimport ToolbarInput from './ToolbarInput/';\n\nconst QuickDateGroup = ({ filters, setFilters, values }) => (\n  <ToolbarGroup variant=\"filter-group\">\n    <ToolbarInput\n      categoryKey=\"quick_date_range\"\n      value={filters.quick_date_range}\n      selectOptions={values}\n      setValue={(value) => setFilters('quick_date_range', value)}\n    />\n    {filters.quick_date_range && filters.quick_date_range.includes('custom') && (\n      <>\n        <ToolbarInput\n          categoryKey=\"start_date\"\n          value={filters.start_date}\n          setValue={(e) => setFilters('start_date', e)}\n        />\n        <ToolbarInput\n          categoryKey=\"end_date\"\n          value={filters.end_date}\n          setValue={(e) => setFilters('end_date', e)}\n        />\n      </>\n    )}\n  </ToolbarGroup>\n);\n\nQuickDateGroup.propTypes = {\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  values: PropTypes.array.isRequired,\n};\n\nexport default QuickDateGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarGroup, Button } from '@patternfly/react-core';\nimport { SortAmountDownIcon, SortAmountUpIcon } from '@patternfly/react-icons';\n\nimport ToolbarInput from './ToolbarInput';\n\nconst SortByGroup = ({ filters, setFilters, sort_options }) => (\n  <ToolbarGroup variant=\"filter-group\">\n    <ToolbarInput\n      categoryKey=\"sort_options\"\n      value={filters.sort_options}\n      selectOptions={sort_options}\n      setValue={(value) => setFilters('sort_options', value)}\n    />\n    <Button\n      variant=\"control\"\n      onClick={() =>\n        setFilters('sort_order', filters.sort_order === 'asc' ? 'desc' : 'asc')\n      }\n    >\n      {filters.sort_order === 'asc' && <SortAmountUpIcon />}\n      {filters.sort_order === 'desc' && <SortAmountDownIcon />}\n    </Button>\n  </ToolbarGroup>\n);\n\nSortByGroup.propTypes = {\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  sort_options: PropTypes.array.isRequired,\n};\n\nexport default SortByGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, Switch } from '@patternfly/react-core';\nimport {\n  Card,\n  CardTitle,\n  CardBody,\n  CardActions,\n  CardHeader,\n} from '@patternfly/react-core';\nimport { QuestionCircleIcon, TimesIcon } from '@patternfly/react-icons';\n\n/* TODO: For future work: make settings more modular for different pages */\nconst SettingsPanel = ({\n  filters,\n  setFilters,\n  settingsExpanded,\n  setSettingsExpanded,\n}) => (\n  <Card isFlat style={{ backgroundColor: '#EEEEEE' }}>\n    <CardHeader>\n      <CardActions>\n        <Button\n          variant=\"plain\"\n          onClick={() => setSettingsExpanded(!settingsExpanded)}\n        >\n          <TimesIcon />\n        </Button>\n      </CardActions>\n      <CardTitle>Settings</CardTitle>\n    </CardHeader>\n    <CardBody>\n      <Switch\n        id=\"showRootWorkflowJobs\"\n        label=\"Ignore nested workflows and jobs\"\n        labelOff=\"Ignore nested workflows and jobs\"\n        isChecked={filters.only_root_workflows_and_standalone_jobs}\n        onChange={(val) => {\n          setFilters('only_root_workflows_and_standalone_jobs', val);\n        }}\n      />\n      <Tooltip\n        position={'top'}\n        content={\n          <div>\n            {' '}\n            If enabled, nested workflows and jobs will not be included in the\n            overall totals. Enable this option to filter out duplicate entries.\n          </div>\n        }\n      >\n        <QuestionCircleIcon />\n      </Tooltip>\n    </CardBody>\n  </Card>\n);\n\nSettingsPanel.propTypes = {\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  settingsExpanded: PropTypes.bool.isRequired,\n  setSettingsExpanded: PropTypes.func.isRequired,\n};\n\nexport default SettingsPanel;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  Button,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { FilterIcon, CogIcon } from '@patternfly/react-icons';\n\nimport { optionsForCategories } from './constants';\nimport {\n  FilterCategoriesGroup,\n  QuickDateGroup,\n  SortByGroup,\n  SettingsPanel,\n} from './Groups/';\n\nconst FilterableToolbar = ({\n  categories,\n  filters,\n  setFilters,\n  pagination = null,\n  hasSettings = false,\n  additionalControls = [],\n  hideQuickDateRange = false,\n  hideSortOptions = false,\n}) => {\n  const [settingsExpanded, setSettingsExpanded] = useState(false);\n  const { quick_date_range, sort_options, ...restCategories } = categories;\n\n  // Filter out elements which are not in the option object.\n  const filterCategories = Object.keys(restCategories)\n    .filter((key) => Object.keys(optionsForCategories).includes(key))\n    .reduce((obj, key) => {\n      obj[key] = restCategories[key];\n      return obj;\n    }, {});\n\n  return (\n    <>\n      <Toolbar\n        id=\"filterable-toolbar-with-chip-groups\"\n        clearAllFilters={() => {\n          setFilters(null, null);\n        }}\n        collapseListedFiltersBreakpoint=\"xl\"\n      >\n        <ToolbarContent>\n          <Button variant=\"control\">\n            <FilterIcon />\n          </Button>\n          {Object.keys(filterCategories).length > 0 && (\n            <FilterCategoriesGroup\n              filterCategories={filterCategories}\n              filters={filters}\n              setFilters={setFilters}\n            />\n          )}\n          {!hideQuickDateRange && quick_date_range && (\n            <QuickDateGroup\n              filters={filters}\n              setFilters={setFilters}\n              values={quick_date_range}\n            />\n          )}\n          {!hideSortOptions && sort_options && (\n            <SortByGroup\n              filters={filters}\n              setFilters={setFilters}\n              sort_options={sort_options}\n            />\n          )}\n          {hasSettings && (\n            <ToolbarItem>\n              <Button\n                variant=\"plain\"\n                onClick={() => setSettingsExpanded(!settingsExpanded)}\n                aria-label=\"settings\"\n                isActive={settingsExpanded}\n              >\n                <CogIcon />\n              </Button>\n            </ToolbarItem>\n          )}\n          {additionalControls.length > 0 && (\n            <ToolbarGroup>\n              {additionalControls.map((control, idx) => (\n                <ToolbarItem key={idx}>{control}</ToolbarItem>\n              ))}\n            </ToolbarGroup>\n          )}\n          {pagination && (\n            <ToolbarItem\n              variant=\"pagination\"\n              visibility={{ default: 'hidden', lg: 'visible' }}\n            >\n              {pagination}\n            </ToolbarItem>\n          )}\n        </ToolbarContent>\n        {settingsExpanded && (\n          <SettingsPanel\n            filters={filters}\n            setFilters={setFilters}\n            settingsExpanded={settingsExpanded}\n            setSettingsExpanded={setSettingsExpanded}\n          />\n        )}\n      </Toolbar>\n    </>\n  );\n};\n\nFilterableToolbar.propTypes = {\n  categories: PropTypes.object.isRequired,\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  pagination: PropTypes.object,\n  hasSettings: PropTypes.bool,\n  additionalControls: PropTypes.array,\n  hideSortOptions: PropTypes.bool,\n  hideQuickDateRange: PropTypes.bool,\n};\n\nexport default FilterableToolbar;\n","import Toolbar from './Toolbar';\nexport default Toolbar;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport currencyFormatter from '../Utilities/currencyFormatter';\n\nclass Tooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip-base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, 0) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', 92)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.name = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', -2)\n      .text('Template name');\n    this.savings = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 52)\n      .attr('font-size', 12)\n      .attr('font-weight', 'bold')\n      .attr('fill', 'white')\n      .text('Total savings $0');\n    this.manualCost = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', 16)\n      .text('Manual cost $0');\n    this.automationCost = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', 34)\n      .text('Automation cost $0');\n  }\n\n  handleMouseOver = (d) => {\n    let name;\n    let savings;\n    let manualCost;\n    let automationCost;\n    const scrollLeftOffset = d3.select('#d3-roi-chart-root').node().scrollLeft;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10 +\n      scrollLeftOffset;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      30;\n    if (!d) {\n      return;\n    } else {\n      savings = currencyFormatter(+d.delta);\n      name = d.name;\n      manualCost = currencyFormatter(+d.manualCost);\n      automationCost = currencyFormatter(+d.automatedCost);\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n    this.name.text('' + name);\n    this.savings.text(`Total savings ${savings}`);\n    this.manualCost.text(`Manual Cost ${manualCost}`);\n    this.automationCost.text(`Automation Cost ${automationCost}`);\n    this.nameWidth = this.name.node().getComputedTextLength();\n    this.savingsWidth = this.savings.node().getComputedTextLength();\n    this.manualCostWidth = this.manualCost.node().getComputedTextLength();\n    this.automationCostWidth = this.automationCost\n      .node()\n      .getComputedTextLength();\n    this.widestTextElem = d3.max([\n      this.nameWidth,\n      this.savingsWidth,\n      this.automationCostWidth,\n      this.manualCostWidth,\n    ]);\n\n    const maxTextPerc = (this.widestTextElem / this.boxWidth) * 100;\n    const threshold = 85;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 15) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.name.attr('x', -(toolTipWidth - 7));\n      this.savings.attr('x', -(toolTipWidth - 7));\n      this.manualCost.attr('x', -(toolTipWidth - 7));\n      this.automationCost.attr('x', -(toolTipWidth - 7));\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 15) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.name.attr('x', 20);\n      this.savings.attr('x', 20);\n      this.manualCost.attr('x', 20);\n      this.automationCost.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass TopTemplatesSavings extends Component {\n  constructor(props) {\n    super(props);\n    this.init = this.init.bind(this);\n    this.draw = this.draw.bind(this);\n    this.resize = this.resize.bind(this);\n    this.state = {\n      timeout: null,\n    };\n  }\n\n  // Methods\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  init() {\n    this.draw();\n  }\n\n  draw() {\n    // Use PF chart color\n    const color = '#0066CC'; //blue\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const { data } = this.props;\n    let width;\n    // adjust chart width to support larger datasets\n    if (data.length >= 15) {\n      const containerWidth = d3.select('.automation-wrapper').node();\n      width =\n        containerWidth.getBoundingClientRect().width -\n        this.props.margin.left -\n        this.props.margin.right;\n    } else {\n      width = this.props.getWidth();\n    }\n\n    const height = this.props.getHeight();\n    const x = d3.scaleBand().rangeRound([0, width]).padding(0.45);\n    const y = d3.scaleLinear().range([height, 0]);\n    // format our X Axis ticks\n    let ticks;\n    ticks = data.map((d) => d.name);\n    const formatYAxisValue = d3.format('.2s');\n    const xAxis = d3.axisBottom(x).tickValues(ticks);\n\n    const yAxis = d3\n      .axisLeft(y)\n      .ticks(8)\n      .tickFormat((d) => formatYAxisValue(d).replace('G', 'B'))\n      .tickSize(-width, 0, 0);\n\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n\n    const taskNames = data.map((d) => d.name);\n    const tooltip = new Tooltip({\n      svg: '#' + this.props.id,\n    });\n    x.domain(taskNames);\n    y.domain([0, d3.max(data, (d) => d.delta * 1.15) || 8]);\n\n    // add y axis\n    svg\n      .append('g')\n      .attr('class', 'y axis')\n      .call(yAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7')\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 6)\n      .attr('dy', '.71em')\n      .style('text-anchor', 'end')\n      .style('font-weight', 'bold')\n      .text('Value');\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Savings per template ($)');\n\n    // add x axis\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n      .selectAll('text')\n      .style('text-anchor', 'start')\n      .attr('dx', '0.75em')\n      .attr('dy', -x.bandwidth() / 1.45 - 8)\n      .attr('transform', 'rotate(-90)');\n\n    svg.selectAll('.x-axis line').attr('stroke', 'transparent');\n\n    svg\n      .selectAll('.bar')\n      .data(data)\n      .enter()\n      .append('rect')\n      .attr('x', (d) => x(d.name))\n      .attr('width', x.bandwidth())\n      .attr('y', (d) => y(d.delta))\n      .style('fill', () => color)\n      .attr('height', (d) => height - y(d.delta))\n      .on('mouseover', function (d) {\n        d3.select(this).style('fill', d3.rgb(color).darker(1));\n        tooltip.handleMouseOver(d);\n      })\n      .on('mousemove', tooltip.handleMouseOver)\n      .on('mouseout', function () {\n        d3.select(this).style('fill', color);\n        tooltip.handleMouseOut();\n      });\n  }\n\n  componentDidMount() {\n    this.init();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate() {\n    this.init();\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nTopTemplatesSavings.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n};\n\nexport default initializeChart(TopTemplatesSavings);\n","import styled from 'styled-components';\nimport { CardTitle } from '@patternfly/react-core';\n\nexport const BorderedCardTitle = styled(CardTitle)`\n  border-bottom: 1px solid #d7d7d7;\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle, Title } from '@patternfly/react-core';\nimport currencyFormatter from '../../Utilities/currencyFormatter';\n\nconst TotalSavings = ({ totalSavings = 0 }) => (\n  <Card style={{ borderTop: '3px solid #2B9AF3' }}>\n    <CardTitle style={{ paddingBottom: '0' }}>Total savings</CardTitle>\n    <CardBody>\n      <Title\n        headingLevel=\"h3\"\n        size=\"4xl\"\n        style={{ color: 'var(--pf-global--success-color--200)' }}\n      >\n        {currencyFormatter(totalSavings)}\n      </Title>\n    </CardBody>\n  </Card>\n);\n\nTotalSavings.propTypes = {\n  totalSavings: PropTypes.number,\n};\n\nexport default TotalSavings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Card,\n  CardBody,\n  InputGroup,\n  InputGroupText,\n  TextInput,\n} from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst validFloat = (value) => {\n  const floatValue = parseFloat(value);\n  return floatValue && floatValue >= 0 ? value : '';\n};\n\nconst CalculationCost = ({\n  costManual = '0',\n  setCostManual = () => {},\n  costAutomation = '0',\n  setCostAutomation = () => {},\n}) => (\n  <Card>\n    <CardTitle>Calculate your automation</CardTitle>\n    <CardBody>\n      <InputAndText>\n        <p>Manual cost of automation</p>\n        <em style={{ color: 'var(--pf-global--Color--dark-200)' }}>\n          (e.g. average salary of mid-level Software Engineer)\n        </em>\n        <InputGroup style={{ width: '50%' }}>\n          <InputGroupText>\n            <DollarSignIcon />\n          </InputGroupText>\n          <TextInput\n            id=\"manual-cost\"\n            type=\"number\"\n            aria-label=\"manual-cost\"\n            value={costManual}\n            onChange={(e) => setCostManual(validFloat(e))}\n          />\n          <InputGroupText>/hr</InputGroupText>\n        </InputGroup>\n      </InputAndText>\n      <InputAndText style={{ paddingTop: '10px' }}>\n        <p>Automated process cost</p>\n        <InputGroup style={{ width: '50%' }}>\n          <InputGroupText>\n            <DollarSignIcon />\n          </InputGroupText>\n          <TextInput\n            id=\"automation-cost\"\n            type=\"number\"\n            aria-label=\"automation-cost\"\n            value={costAutomation}\n            onChange={(e) => setCostAutomation(validFloat(e))}\n          />\n          <InputGroupText>/hr</InputGroupText>\n        </InputGroup>\n      </InputAndText>\n    </CardBody>\n  </Card>\n);\n\nCalculationCost.propTypes = {\n  costManual: PropTypes.string,\n  setCostManual: PropTypes.func,\n  costAutomation: PropTypes.string,\n  setCostAutomation: PropTypes.func,\n};\n\nexport default CalculationCost;\n","import React from 'react';\n\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst AutomationFormula = () => (\n  <Card style={{ height: '100%' }}>\n    <CardTitle>Automation formula</CardTitle>\n    <CardBody>\n      <p>\n        <b>Manual cost for template x</b> =\n        <em>\n          (time for a manual run on one host in hours * (sum of all hosts across\n          all job runs) ) * cost per hour\n        </em>\n      </p>\n      <p>\n        <b>Automation cost for template x</b> =\n        <em>\n          cost of automation per hour * sum of total elapsed hours for a\n          template\n        </em>\n      </p>\n      <p>\n        <b>Savings</b> =\n        <em>Sum of (manual cost - automation cost) across all templates</em>\n      </p>\n    </CardBody>\n  </Card>\n);\n\nexport default AutomationFormula;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  InputGroup,\n  InputGroupText,\n  TextInput,\n  Tooltip,\n  Popover,\n} from '@patternfly/react-core';\nimport {\n  InfoCircleIcon,\n  ToggleOnIcon,\n  ToggleOffIcon,\n} from '@patternfly/react-icons';\n\nimport {\n  convertSecondsToMins,\n  convertMinsToSeconds,\n  capitalize,\n} from '../../Utilities/helpers';\n\nimport currencyFormatter from '../../Utilities/currencyFormatter';\n\nconst TemplateDetail = styled.div`\n  em {\n    display: block;\n    padding: 5px 0;\n  }\n\n  @media (max-width: 1490px) {\n    display: block;\n\n    em {\n      padding: 10px 0;\n      display: block;\n    }\n  }\n`;\n\nconst TemplateDetailSubTitle = styled.em`\n  color: var(--pf-global--Color--dark-200);\n`;\n\nconst TooltipWrapper = styled.div`\n  p {\n    text-align: left;\n  }\n`;\n\nconst IconGroup = styled.div`\n  & svg {\n    fill: var(--pf-global--Color--dark-200);\n\n    :hover {\n      cursor: pointer;\n    }\n\n    :first-of-type {\n      margin-right: 10px;\n      margin-left: 10px;\n\n      @media (max-width: 1350px) {\n        margin-left: 0;\n      }\n    }\n  }\n`;\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst showSortAttr = (details, sortBy) => {\n  const trimmed = sortBy.split(':')[0];\n  const sortAttribute = Object.keys(details).map((k) =>\n    k === trimmed ? `${details[k]}` : null\n  );\n\n  return (\n    <TemplateDetailSubTitle>\n      {capitalize(trimmed.split('_').join(' '))}: {sortAttribute}\n    </TemplateDetailSubTitle>\n  );\n};\n\nconst QuestionIconTooltip = ({ details }) => (\n  <Popover\n    aria-label=\"template detail popover\"\n    position=\"left\"\n    bodyContent={\n      <TooltipWrapper>\n        {Object.keys(details).map((k, i) => (\n          <p key={i}>\n            <b>{capitalize(k.split('_').join(' '))}</b>: {details[k]}\n          </p>\n        ))}\n      </TooltipWrapper>\n    }\n  >\n    <InfoCircleIcon />\n  </Popover>\n);\n\nQuestionIconTooltip.propTypes = {\n  details: PropTypes.object,\n};\n\nconst TopTemplates = ({\n  data = [],\n  sortBy = '',\n  setDataRunTime = () => {},\n  setEnabled = () => {},\n  redirectToJobExplorer = () => {},\n}) => (\n  <Card>\n    <CardBody>\n      <p>Enter the time it takes to run the following templates manually.</p>\n      {data.map((d) => (\n        <div key={d.id}>\n          <Tooltip content={'List of jobs for this template for past 30 days'}>\n            <Button\n              style={{ padding: '15px 0 10px' }}\n              component=\"a\"\n              onClick={() => redirectToJobExplorer(d.id)}\n              variant=\"link\"\n            >\n              {d.name}\n            </Button>\n          </Tooltip>\n          <TemplateDetail>\n            <InputAndText key={d.id}>\n              <InputGroup>\n                <TextInput\n                  id={d.id}\n                  type=\"number\"\n                  aria-label=\"time run manually\"\n                  value={convertSecondsToMins(d.avgRunTime)}\n                  onChange={(minutes) =>\n                    setDataRunTime(convertMinsToSeconds(minutes), d.id)\n                  }\n                />\n                <InputGroupText>min</InputGroupText>\n              </InputGroup>\n            </InputAndText>\n            <TemplateDetailSubTitle>\n              x {d.successful_hosts_total} host runs\n            </TemplateDetailSubTitle>\n            {showSortAttr(d, sortBy)}\n            <IconGroup>\n              <QuestionIconTooltip details={d} />\n              {!d.enabled && (\n                <ToggleOffIcon onClick={() => setEnabled(d.id)(true)} />\n              )}\n              {d.enabled && (\n                <ToggleOnIcon onClick={() => setEnabled(d.id)(false)} />\n              )}\n            </IconGroup>\n          </TemplateDetail>\n          <p style={{ color: '#486B00' }}>{currencyFormatter(+d.delta)}</p>\n        </div>\n      ))}\n    </CardBody>\n  </Card>\n);\n\nTopTemplates.propTypes = {\n  data: PropTypes.array,\n  setDataRunTime: PropTypes.func,\n  redirectToJobExplorer: PropTypes.func,\n  deselectedIds: PropTypes.array,\n  setDeselectedIds: PropTypes.func,\n  setEnabled: PropTypes.func,\n  sortBy: PropTypes.string,\n};\n\nexport default TopTemplates;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport {\n  Card,\n  CardBody,\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n} from '@patternfly/react-core';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\n// Imports from custom components\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\n// Imports from API\nimport { preflightRequest, readROI, readROIOptions } from '../../Api/';\n\n// Imports from utilities\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { roi as roiConst } from '../../Utilities/constants';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { calculateDelta, convertSecondsToHours } from '../../Utilities/helpers';\n\n// Chart\nimport TopTemplatesSavings from '../../Charts/ROITopTemplates';\n\n// Local imports\nimport { BorderedCardTitle } from './helpers';\nimport TotalSavings from './TotalSavings';\nimport CalculationCost from './CalculationCost';\nimport AutomationFormula from './AutomationFormula';\nimport TopTemplates from './TopTemplates';\n\nconst mapApi = ({ items = [] }) =>\n  items.map((el) => ({\n    ...el,\n    delta: 0,\n    avgRunTime: 3600,\n    manualCost: 0,\n    automatedCost: 0,\n    enabled: true,\n  }));\n\nconst filterDisabled = (data) => data.filter(({ enabled }) => enabled);\n\nconst updateDeltaCost = (data, costAutomation, costManual) =>\n  data.map((el) => {\n    const manualCost =\n      convertSecondsToHours(el.avgRunTime) *\n      el.successful_hosts_total *\n      parseFloat(costManual);\n    const automatedCost =\n      convertSecondsToHours(el.successful_elapsed_total) *\n      parseFloat(costAutomation);\n    const delta = calculateDelta(automatedCost, manualCost);\n\n    return { ...el, delta, manualCost, automatedCost };\n  });\n\nconst computeTotalSavings = (data) =>\n  data.reduce((sum, curr) => sum + curr.delta, 0);\n\nconst AutomationCalculator = ({ history }) => {\n  const toJobExplorer = useRedirect(history, 'jobExplorer');\n  const [costManual, setCostManual] = useState('50');\n  const [costAutomation, setCostAutomation] = useState('20');\n\n  const [preflight, setPreflight] = useApi(null);\n  const [options, setOptions] = useApi({});\n  const [api, fetchApi, setDataInApi] = useApi([], (data) =>\n    updateDeltaCost(mapApi(data), costAutomation, costManual)\n  );\n\n  const { queryParams, setFromToolbar } = useQueryParams(\n    roiConst.defaultParams\n  );\n\n  /**\n   * Modifies one elements avgRunTime in the unfilteredData\n   * and updates all calculated fields.\n   * Used in top templates.\n   */\n  const setDataRunTime = (seconds, id) => {\n    const updatedData = api.data.map((el) => {\n      if (el.id === id) {\n        el.avgRunTime = seconds;\n        const updatedDelta = updateDeltaCost(\n          [el],\n          costAutomation,\n          costManual\n        )[0];\n        return updatedDelta;\n      } else {\n        return el;\n      }\n    });\n\n    setDataInApi(updatedData);\n  };\n\n  const setEnabled = (id) => (value) => {\n    setDataInApi(\n      api.data.map((el) => (el.id === id ? { ...el, enabled: value } : el))\n    );\n  };\n\n  useEffect(() => {\n    setPreflight(preflightRequest());\n    setOptions(readROIOptions({ params: queryParams }));\n  }, []);\n\n  /**\n   * Recalculates the delta and costs in the data after the cost is changed.\n   */\n  useEffect(() => {\n    setDataInApi(updateDeltaCost(api.data, costAutomation, costManual));\n  }, [costAutomation, costManual]);\n\n  /**\n   * Get data from API depending on the queryParam.\n   */\n  useEffect(() => {\n    fetchApi(readROI({ params: queryParams }));\n  }, [queryParams]);\n\n  /**\n   * Function to redirect to the job explorer page\n   * with the same filters as is used here.\n   */\n  const redirectToJobExplorer = (templateId) => {\n    const initialQueryParams = {\n      quick_date_range: 'last_30_days',\n      template_id: [templateId],\n    };\n    toJobExplorer(initialQueryParams);\n  };\n\n  const renderLeft = () => (\n    <Stack hasGutter>\n      <StackItem>\n        <Card>\n          <BorderedCardTitle>Automation savings</BorderedCardTitle>\n          <CardBody>\n            {api.isLoading && <LoadingState />}\n            {api.error && <ApiErrorState message={api.error.error} />}\n            {api.isSuccess && api.data.length <= 0 && <NoData />}\n            {api.isSuccess && api.data.length > 0 && (\n              <React.Fragment>\n                <TopTemplatesSavings\n                  margin={{ top: 20, right: 20, bottom: 20, left: 70 }}\n                  id=\"d3-roi-chart-root\"\n                  data={filterDisabled(api.data)}\n                />\n                <p style={{ textAlign: 'center' }}>Templates</p>\n              </React.Fragment>\n            )}\n          </CardBody>\n        </Card>\n      </StackItem>\n      <StackItem isFilled>\n        <AutomationFormula />\n      </StackItem>\n    </Stack>\n  );\n\n  const renderRight = () => (\n    <Stack hasGutter>\n      <StackItem>\n        <TotalSavings\n          totalSavings={computeTotalSavings(filterDisabled(api.data))}\n        />\n      </StackItem>\n      <StackItem>\n        <Stack>\n          <StackItem>\n            <CalculationCost\n              costManual={costManual}\n              setCostManual={setCostManual}\n              costAutomation={costAutomation}\n              setCostAutomation={setCostAutomation}\n            />\n          </StackItem>\n          <StackItem style={{ overflow: 'auto', maxHeight: '48vh' }}>\n            <TopTemplates\n              redirectToJobExplorer={redirectToJobExplorer}\n              data={api.data}\n              setDataRunTime={setDataRunTime}\n              setUnfilteredData={api.data}\n              setEnabled={setEnabled}\n              sortBy={queryParams.sort_by}\n            />\n          </StackItem>\n        </Stack>\n      </StackItem>\n    </Stack>\n  );\n\n  if (preflight?.error?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  const renderContents = () => {\n    if (preflight.error) return <EmptyState preflightError={preflight.error} />;\n    else if (preflight.isSuccess)\n      return (\n        <Grid hasGutter className=\"automation-wrapper\">\n          <GridItem span={9}>{renderLeft()}</GridItem>\n          <GridItem span={3}>{renderRight()}</GridItem>\n        </Grid>\n      );\n    else return <></>;\n  };\n\n  return (\n    <>\n      <PageHeader>\n        <PageHeaderTitle title={'Automation Calculator'} />\n        <FilterableToolbar\n          categories={options.data}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      <Main>{renderContents()}</Main>\n    </>\n  );\n};\n\nAutomationCalculator.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default AutomationCalculator;\n","import * as d3 from 'd3';\n\nclass Tooltip {\n  constructor(opts) {\n    this.svg = opts.svg;\n    this.colors = opts.colors;\n    this.draw();\n  }\n\n  draw() {\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 145;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -41)\n      .attr('rx', 2)\n      .attr('height', 110)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.circleSuccess = this.toolTipBase\n      .append('circle')\n      .attr('cx', 26)\n      .attr('cy', 0)\n      .attr('r', 8)\n      .attr('stroke', 'white')\n      .attr('fill', 'white');\n    this.circleFail = this.toolTipBase\n      .append('circle')\n      .attr('cx', 26)\n      .attr('cy', 26)\n      .attr('r', 8)\n      .attr('stroke', 'white')\n      .attr('fill', 'white');\n    this.successText = this.toolTipBase\n      .append('text')\n      .attr('x', 43)\n      .attr('y', 4)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Successful');\n    this.failText = this.toolTipBase\n      .append('text')\n      .attr('x', 43)\n      .attr('y', 28)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Failed');\n    this.successIcon = this.toolTipBase\n      .append('text')\n      .attr('class', 'fas fa-sm')\n      .attr('fill', this.colors(1))\n      .attr('x', 19)\n      .attr('y', 5)\n      .text('\\uf058');\n    this.failedIcon = this.toolTipBase\n      .append('text')\n      .attr('class', 'fas fa-sm')\n      .attr('fill', this.colors(0))\n      .attr('x', 20)\n      .attr('y', 31)\n      .text('\\uf06a');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 137)\n      .attr('y', -21)\n      .attr('font-size', 12)\n      .attr('text-anchor', 'end')\n      .text('No jobs');\n    this.successful = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 122)\n      .attr('y', 4)\n      .text('0');\n    this.failed = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 122)\n      .attr('y', 28)\n      .text('0');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('stroke', 'white')\n      .attr('x', 20)\n      .attr('y', -21)\n      .attr('font-size', 12)\n      .text('Never');\n    this.clickMore = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 20)\n      .attr('y', 55)\n      .attr('font-size', 12)\n      .text('Click for details');\n  }\n\n  handleMouseOver = (d) => {\n    let success = 0;\n    let fail = 0;\n    let total = 0;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    const formatTooltipDate = d3.timeFormat('%m/%d');\n    if (!d) {\n      return;\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n    if (d) {\n      success = d.RAN || 0;\n      fail = d.FAIL || 0;\n      total = d.TOTAL || 0;\n      this.date.text(formatTooltipDate(d.DATE || null));\n    }\n\n    if (d && d.data) {\n      success = d.data.RAN || 0;\n      fail = d.data.FAIL || 0;\n      total = d.data.TOTAL || 0;\n      this.date.text(formatTooltipDate(d.data.DATE || null));\n    }\n\n    this.jobs.text('' + total + ' jobs');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n    this.failed.text('' + fail);\n    this.successful.text('' + success);\n    this.successTextWidth = this.successful.node().getComputedTextLength();\n    this.failTextWidth = this.failed.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 40;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.circleSuccess.attr('cx', -adjustedWidth);\n      this.circleFail.attr('cx', -adjustedWidth);\n      this.failedIcon.attr('x', -adjustedWidth - 7);\n      this.successIcon.attr('x', -adjustedWidth - 7);\n      this.successText.attr('x', -adjustedWidth + 17);\n      this.failText.attr('x', -adjustedWidth + 17);\n      this.successful.attr('x', -this.successTextWidth - 20 - 12);\n      this.failed.attr('x', -this.failTextWidth - 20 - 12);\n      this.date.attr('x', -adjustedWidth - 5);\n      this.jobs.attr('x', -this.jobsWidth / 2 - 7);\n      this.clickMore.attr('x', -adjustedWidth);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.circleSuccess.attr('cx', 26);\n      this.circleFail.attr('cx', 26);\n      this.failedIcon.attr('x', 19);\n      this.successIcon.attr('x', 19);\n      this.successText.attr('x', 43);\n      this.failText.attr('x', 43);\n      this.successful.attr('x', adjustedWidth - this.successTextWidth);\n      this.failed.attr('x', adjustedWidth - this.failTextWidth);\n      this.date.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth);\n      this.clickMore.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nexport default Tooltip;\n","import React, { Component } from 'react';\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { stringify } from 'query-string';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\n\nclass BarChart extends Component {\n  constructor(props) {\n    super(props);\n    this.draw = this.draw.bind(this);\n    this.init = this.init.bind(this);\n    this.resize = this.resize.bind(this);\n    this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n    this.state = {\n      formattedData: [],\n      timeout: null,\n    };\n  }\n\n  redirectToJobExplorer({ data: { DATE: date } }) {\n    const { jobExplorer } = Paths;\n    const formattedDate = formatDate(date);\n    const initialQueryParams = {\n      start_date: formattedDate,\n      end_date: formattedDate,\n      quick_date_range: 'custom',\n      status: ['failed', 'successful'],\n      template_id: this.props.queryParams.template_id,\n      org_id: this.props.queryParams.org_id,\n      job_type: this.props.queryParams.job_type,\n    };\n\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    this.props.history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  }\n\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  init() {\n    this.draw();\n  }\n\n  // Methods\n  draw() {\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const parseTime = d3.timeParse('%Y-%m-%d');\n    let { data: unformattedData } = this.props;\n    const data = unformattedData.reduce(\n      (formatted, { created_date, successful_count, failed_count }) => {\n        let DATE = parseTime(created_date) || new Date();\n        let RAN = +successful_count || 0;\n        let FAIL = +failed_count || 0;\n        let TOTAL = +successful_count + failed_count || 0;\n        return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n      },\n      []\n    );\n    const width = this.props.getWidth();\n    const height = this.props.getHeight();\n    const x = d3.scaleBand().rangeRound([0, width]).padding(0.35); // percentage\n    const y = d3.scaleLinear().range([height, 0]);\n\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n    //[fail, success]\n    let colors = d3.scaleOrdinal(['#6EC664', '#A30000']);\n\n    const barTooltip = new Tooltip({\n      svg: '#' + this.props.id,\n      colors,\n    });\n    const status = ['FAIL', 'RAN'];\n\n    // stack our data\n    const stack = d3\n      .stack()\n      .keys(status)\n      .order(d3.stackOrderNone)\n      .offset(d3.stackOffsetNone);\n\n    const layers = stack(data);\n    // Scale the range of the data\n    x.domain(layers[0].map((d) => d.data.DATE));\n    y.domain([0, d3.max(layers[layers.length - 1], (d) => d[1] * 1.15) || 8]);\n    // Add the Y Axis\n    svg\n      .append('g')\n      .attr('class', 'y-axis')\n      .call(d3.axisLeft(y).tickSize(-width, 0, 0))\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.y-axis .tick text').attr('x', -5);\n    // text label for the y axis\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Jobs across all clusters');\n    // Add the X Axis\n    let ticks;\n    const maxTicks = Math.round(data.length / (data.length / 2));\n    ticks = data.map((d) => d.DATE);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n        .filter((item) => item);\n    }\n\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(\n        d3.axisBottom(x).tickValues(ticks).tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n      )\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n    // text label for the x axis\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n\n    const layer = svg\n      .selectAll('layer')\n      .data(layers)\n      .enter()\n      .append('g')\n      .attr('class', 'layer')\n      .style('fill', (_d, i) => colors(i));\n    layer\n      .selectAll('rect')\n      .data((d) => d)\n      .enter()\n      .append('rect')\n      .attr('x', (d) => x(d.data.DATE))\n      .attr('y', (d) => y(d[0]))\n      .attr('height', 0)\n      .attr('width', x.bandwidth() - 1)\n      .transition()\n      .duration(550)\n      .ease(d3.easeCubic)\n      .attr('y', (d) => y(d[1]))\n      .attr('height', (d) => y(d[0]) - y(d[1]));\n    layer\n      .selectAll('rect')\n      .on('mouseover', barTooltip.handleMouseOver)\n      .on('mousemove', barTooltip.handleMouseOver)\n      .on('mouseout', barTooltip.handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n  }\n\n  componentDidMount() {\n    this.init();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      this.init();\n    }\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nBarChart.propTypes = {\n  id: PropTypes.string,\n  queryParams: PropTypes.object,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  history: PropTypes.object,\n};\n\nexport default initializeChart(BarChart);\n","import React, { Component } from 'react';\nimport initializeChart from './BaseChart';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\nimport { stringify } from 'query-string';\nimport * as d3 from 'd3';\n\nclass LineChart extends Component {\n  constructor(props) {\n    super(props);\n    this.init = this.init.bind(this);\n    this.draw = this.draw.bind(this);\n    this.resize = this.resize.bind(this);\n    this.updateCluster = this.updateCluster.bind(this);\n    this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n    this.state = {\n      formattedData: [],\n      timeout: null,\n    };\n  }\n\n  redirectToJobExplorer({ DATE: date }) {\n    const { jobExplorer } = Paths;\n    const formattedDate = formatDate(date);\n    const initialQueryParams = {\n      start_date: formattedDate,\n      end_date: formattedDate,\n      quick_date_range: 'custom',\n      status: ['failed', 'successful'],\n      cluster_id: this.props.queryParams.cluster_id,\n      org_id: this.props.queryParams.org_id,\n      template_id: this.props.queryParams.template_id,\n      job_type: this.props.queryParams.job_type,\n    };\n\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    this.props.history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  }\n\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  updateCluster() {\n    this.init();\n  }\n  init() {\n    this.draw();\n  }\n  // Methods\n  draw() {\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const width = this.props.getWidth();\n    const height = this.props.getHeight();\n\n    function transition(path) {\n      path.transition().duration(1000).attrTween('stroke-dasharray', tweenDash);\n    }\n\n    function tweenDash() {\n      const l = this.getTotalLength();\n      const i = d3.interpolateString('0,' + l, l + ',' + l);\n      return function (t) {\n        return i(t);\n      };\n    }\n\n    const x = d3.scaleTime().rangeRound([0, width]);\n    const y = d3.scaleLinear().range([height, 0]);\n\n    //[success, fail, total]\n    let colors = d3.scaleOrdinal(['#6EC664', '#A30000', '#06C']);\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n      .attr('z', 100)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n    // Tooltip\n    const tooltip = new Tooltip({\n      svg: '#' + this.props.id,\n      colors,\n    });\n    const { data: unformattedData } = this.props;\n    const parseTime = d3.timeParse('%Y-%m-%d');\n\n    const data = unformattedData.reduce(\n      (formatted, { created_date, successful_count, failed_count }) => {\n        let DATE = parseTime(created_date) || new Date();\n        let RAN = +successful_count || 0;\n        let FAIL = +failed_count || 0;\n        let TOTAL = +successful_count + failed_count || 0;\n        return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n      },\n      []\n    );\n    // Scale the range of the data\n    x.domain(\n      d3.extent(data, function (d) {\n        return d.DATE;\n      })\n    );\n    y.domain([\n      0,\n      d3.max(data, function (d) {\n        return d.TOTAL * 1.15 || 8;\n      }),\n    ]);\n\n    const successLine = d3\n      .line()\n      .curve(d3.curveMonotoneX)\n      .x(function (d) {\n        return x(d.DATE);\n      })\n      .y(function (d) {\n        return y(d.RAN);\n      });\n\n    const failLine = d3\n      .line()\n      .defined((d) => !isNaN(d.FAIL))\n      .curve(d3.curveMonotoneX)\n      .x(function (d) {\n        return x(d.DATE);\n      })\n      .y(function (d) {\n        return y(d.FAIL);\n      });\n    // Add the Y Axis\n    svg\n      .append('g')\n      .attr('class', 'y-axis')\n      .call(d3.axisLeft(y).ticks(10).tickSize(-width))\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.y-axis .tick text').attr('x', -5);\n\n    // text label for the y axis\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Job runs');\n    // Add the X Axis\n    let ticks;\n    const maxTicks = Math.round(data.length / (data.length / 2));\n    ticks = data.map((d) => d.DATE);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n        .filter((item) => item);\n    }\n\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(\n        d3\n          .axisBottom(x)\n          .tickValues(ticks)\n          .tickSize(-height)\n          .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n      ) // \"Jan-01\"\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n    // text label for the x axis\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n    const vertical = svg\n      .append('path')\n      .attr('class', 'mouse-line')\n      .style('stroke', 'black')\n      .style('stroke-width', '3px')\n      .style('stroke-dasharray', '3, 3')\n      .style('opacity', '0');\n\n    const handleMouseOver = function (d) {\n      tooltip.handleMouseOver(d);\n      // show vertical line\n      vertical.transition().style('opacity', '1');\n    };\n\n    const handleMouseMove = function () {\n      let intersectX = this.cx.baseVal.value;\n      vertical.attr('d', function () {\n        let d = 'M' + intersectX + ',' + height;\n        d += ' ' + intersectX + ',' + 0;\n        return d;\n      });\n    };\n\n    const handleMouseOut = function () {\n      // hide tooltip\n      tooltip.handleMouseOut();\n      // hide vertical line\n      vertical.transition().style('opacity', 0);\n    };\n\n    // Add the successLine path.\n    svg\n      .append('path')\n      .data([data])\n      .attr('class', 'line')\n      .style('fill', 'none')\n      .style('stroke', () => colors(1))\n      .attr('stroke-width', 2)\n      .attr('d', successLine)\n      .call(transition);\n\n    // Add the failLine path.\n    svg\n      .append('path')\n      .data([data])\n      .attr('class', 'line')\n      .style('fill', 'none')\n      .style('stroke', () => colors(0))\n      .attr('stroke-width', 2)\n      .attr('d', failLine)\n      .call(transition);\n    svg\n      .selectAll('dot')\n      .data(data)\n      .enter()\n      .append('circle')\n      .attr('r', 3)\n      .style('stroke', () => colors(1))\n      .style('fill', () => colors(1))\n      .attr('cx', function (d) {\n        return x(d.DATE);\n      })\n      .attr('cy', function (d) {\n        return y(d.RAN);\n      })\n\n      .on('mouseover', handleMouseOver)\n      .on('mousemove', handleMouseMove)\n      .on('mouseout', handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n    // create our failLine circles\n    svg\n      .selectAll('dot')\n      .data(data)\n      .enter()\n      .append('circle')\n      .attr('r', 3)\n      .style('stroke', () => colors(0))\n      .style('fill', () => colors(0))\n      .attr('cx', function (d) {\n        return x(d.DATE);\n      })\n      .attr('cy', function (d) {\n        return y(d.FAIL);\n      })\n      .on('mouseover', handleMouseOver)\n      .on('mousemove', handleMouseMove)\n      .on('mouseout', handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n  }\n\n  componentDidMount() {\n    this.updateCluster();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      this.updateCluster();\n    }\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nLineChart.propTypes = {\n  id: PropTypes.string,\n  queryParams: PropTypes.object,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  history: PropTypes.object,\n};\n\nexport default initializeChart(LineChart);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { trimStr } from '../Utilities/helpers';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n  DataList,\n  DataListItem as PFDataListItem,\n  DataListCell as PFDataListCell,\n} from '@patternfly/react-core';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst ModulesList = ({ modules, isLoading }) => (\n  <DataList\n    aria-label=\"Top Modules\"\n    style={{\n      maxHeight: '400px',\n      overflow: 'auto',\n      height: '400px',\n      background: 'white',\n    }}\n  >\n    <DataListItem aria-labelledby=\"top-modules-header\">\n      <DataListCell>\n        <h3>Top modules</h3>\n      </DataListCell>\n      <DataCellEnd>\n        <h3>Usage</h3>\n      </DataCellEnd>\n    </DataListItem>\n    {isLoading && (\n      <PFDataListItem\n        aria-labelledby=\"modules-loading\"\n        key={isLoading}\n        style={{ border: 'none' }}\n      >\n        <PFDataListCell>\n          <LoadingState />\n        </PFDataListCell>\n      </PFDataListItem>\n    )}\n    {!isLoading && modules.length <= 0 && (\n      <PFDataListItem\n        aria-labelledby=\"modules-no-data\"\n        key={isLoading}\n        style={{ border: 'none' }}\n      >\n        <PFDataListCell>\n          <NoData />\n        </PFDataListCell>\n      </PFDataListItem>\n    )}\n    {!isLoading &&\n      modules\n        .filter((module) => module.name !== null)\n        .map(({ name, host_task_count }, index) => (\n          <DataListItem aria-labelledby=\"top-modules-detail\" key={index}>\n            <DataListCell>\n              <span>{trimStr(name)}</span>\n            </DataListCell>\n            <DataCellEnd>{host_task_count}</DataCellEnd>\n          </DataListItem>\n        ))}\n  </DataList>\n);\n\nModulesList.propTypes = {\n  modules: PropTypes.array,\n  isLoading: PropTypes.bool,\n};\n\nexport default ModulesList;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst BarContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  width: 100%;\n  max-width: 100%;\n  height: 1rem;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst Bar = styled.div`\n  height: 100%;\n`;\n\nconst LabelsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  margin-bottom: 1rem;\n`;\n\nconst Label = styled.div`\n  padding-left: 2rem;\n  display: flex;\n  align-items: center;\n`;\n\nconst Square = styled.div`\n  width: 0.75rem;\n  height: 0.75rem;\n  margin-right: 0.5rem;\n`;\n\nconst whiteSpace = 0.15; // Currently in percent of total bar width\n\nfunction title(str) {\n  return str[0].toUpperCase() + str.slice(1).toLowerCase();\n}\n\nconst Breakdown = ({ categoryCount = {}, categoryColor }) => {\n  const totalCount = Object.values(categoryCount).reduce(\n    (accumulated, currentVal) => accumulated + currentVal\n  );\n\n  const sortedCategories = Object.keys(categoryCount)\n    .filter((category) => categoryCount[category] > 0)\n    .sort((category) => {\n      if (categoryCount[category] < categoryCount[category]) {\n        return 1; // Normally should be -1, but we want descending order\n      }\n      if (categoryCount[category] > categoryCount[category]) {\n        return -1;\n      }\n      return 0;\n    })\n    .map((category) => {\n      return {\n        name: category,\n        barSpacing: categoryCount[category] / totalCount,\n        color: categoryColor[category],\n      };\n    });\n\n  const remainingSpace = 1 - ((sortedCategories.length - 1) * whiteSpace) / 100;\n\n  return (\n    <>\n      <BarContainer>\n        {sortedCategories.map(({ barSpacing, color }, idx) => {\n          if (idx < sortedCategories.length - 1) {\n            return (\n              <React.Fragment key={idx}>\n                <Bar\n                  style={{\n                    backgroundColor: color,\n                    width: `${barSpacing * 100 * remainingSpace}%`,\n                  }}\n                />\n                <Bar\n                  style={{\n                    backgroundColor: 'transparent',\n                    width: `${whiteSpace}%`,\n                  }}\n                />\n              </React.Fragment>\n            );\n          } else {\n            return (\n              <React.Fragment key={idx}>\n                <Bar\n                  style={{\n                    backgroundColor: color,\n                    width: `${barSpacing * 100 * remainingSpace}%`,\n                  }}\n                />\n              </React.Fragment>\n            );\n          }\n        })}\n      </BarContainer>\n      <LabelsContainer>\n        {sortedCategories.map(({ name, color }) => (\n          <Label key={`label-${name}`}>\n            <Square style={{ backgroundColor: color }} />\n            <p>{title(name)}</p>\n          </Label>\n        ))}\n      </LabelsContainer>\n    </>\n  );\n};\n\nBreakdown.propTypes = {\n  categoryColor: PropTypes.object,\n  categoryCount: PropTypes.object,\n};\n\nexport default Breakdown;\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport ApiErrorState from '../Components/ApiErrorState';\nimport NoResults from './NoResults';\nimport Breakdown from '../Components/Breakdown';\nimport JobStatus from '../Components/JobStatus';\nimport { Paths } from '../paths';\nimport { stringify } from 'query-string';\nimport useApi from '../Utilities/useApi';\nimport { formatDateTime, formatJobType } from '../Utilities/helpers';\nimport { readJobExplorer } from '../Api/';\n\nimport { Button, Modal, ModalVariant } from '@patternfly/react-core';\nimport {\n  global_palette_blue_300,\n  global_palette_green_200,\n  global_palette_red_100,\n  global_palette_black_850,\n  global_palette_orange_300,\n  global_palette_purple_300,\n  global_palette_cyan_200,\n  global_palette_light_green_200,\n} from '@patternfly/react-tokens';\n\nimport {\n  DescriptionList,\n  DescriptionListTerm,\n  DescriptionListGroup,\n  DescriptionListDescription,\n  Divider,\n} from '@patternfly/react-core';\n\nimport {\n  TableComposable,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n} from '@patternfly/react-table';\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 2rem;\n`;\n\nconst formatTopFailedTask = (data) => {\n  if (!data) {\n    return;\n  }\n\n  if (data && data[0]) {\n    const percentage = Math.ceil(\n      (data[0].failed_count / data[0].total_failed_count) * 100\n    );\n    return `${data[0].task_name} ${percentage}%`;\n  }\n\n  return `Unavailable`;\n};\n\nconst formatSuccessRate = (successCount, totalCount) =>\n  Math.ceil((successCount / totalCount) * 100) + '%';\nconst formatAvgRun = (elapsed, totalCount) =>\n  new Date(Math.ceil(elapsed / totalCount) * 1000).toISOString().substr(11, 8);\nconst formatTotalTime = (elapsed) =>\n  new Date(elapsed * 1000).toISOString().substr(11, 8);\n\nconst ModalContents = ({ selectedId, isOpen, handleModal, qp, jobType }) => {\n  const [\n    {\n      isLoading,\n      isSuccess,\n      error,\n      data: { items: relatedJobs = [] },\n    },\n    setRelatedJobs,\n    setSynchJobs,\n  ] = useApi({ items: [] });\n  const [\n    {\n      data: {\n        items: [stats = 0],\n      },\n    },\n    setStats,\n    setSynchStats,\n  ] = useApi({ items: [] });\n\n  let history = useHistory();\n\n  const redirectToJobExplorer = () => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      template_id: [selectedId],\n      status: [\n        'successful',\n        'failed',\n        'new',\n        'pending',\n        'waiting',\n        'error',\n        'canceled',\n        'running',\n      ],\n      job_type: [jobType],\n      quick_date_range: 'last_30_days',\n    };\n\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const relatedTemplateJobsParams = {\n    ...qp,\n    template_id: [selectedId],\n    attributes: [\n      'id',\n      'status',\n      'job_type',\n      'started',\n      'finished',\n      'elapsed',\n      'created',\n      'cluster_name',\n      'org_name',\n    ],\n    group_by_time: false,\n    limit: 5,\n    sort_by: 'created:desc',\n    quick_date_range: qp.quick_date_range\n      ? qp.quick_date_range\n      : 'last_30_days',\n    job_type: [jobType],\n  };\n\n  const agreggateTemplateParams = {\n    group_by: 'template',\n    template_id: [selectedId],\n    attributes: [\n      'elapsed',\n      'job_type',\n      'successful_count',\n      'failed_count',\n      'error_count',\n      'waiting_count',\n      'pending_count',\n      'canceled_count',\n      'new_count',\n      'running_count',\n      'total_count',\n      jobType === 'job' ? 'most_failed_tasks' : 'most_failed_steps',\n    ],\n    status: qp.status,\n    quick_date_range: qp.quick_date_range\n      ? qp.quick_date_range\n      : 'last_30_days',\n    job_type: [jobType],\n  };\n\n  useEffect(() => {\n    setStats(readJobExplorer({ params: agreggateTemplateParams }));\n    setRelatedJobs(readJobExplorer({ params: relatedTemplateJobsParams }));\n  }, [selectedId]);\n\n  const tableCols = ['Id/Name', 'Status', 'Cluster', 'Finished', 'Total time'];\n\n  const categoryCount = stats\n    ? {\n        success: stats.successful_count,\n        cancelled: stats.canceled_count,\n        error: stats.error_count,\n        failed: stats.failed_count,\n        new: stats.new_count,\n        pending: stats.pending_count,\n        running: stats.running_count,\n        waiting: stats.waiting_count,\n      }\n    : null;\n\n  const categoryColor = {\n    success: global_palette_green_200.value,\n    cancelled: global_palette_black_850.value,\n    error: global_palette_orange_300.value,\n    failed: global_palette_red_100.value,\n    new: global_palette_cyan_200.value,\n    pending: global_palette_purple_300.value,\n    running: global_palette_blue_300.value,\n    waiting: global_palette_light_green_200.value,\n  };\n\n  const descriptionStats = [\n    {\n      label: 'Number of runs',\n      id: 'total-runs',\n      value: stats.total_count ? stats.total_count : 'Unavailable',\n    },\n    {\n      label: 'Total time',\n      id: 'total-time',\n      value: stats.elapsed ? formatTotalTime(stats.elapsed) : 'Unavailable',\n    },\n    {\n      label: 'Average time',\n      id: 'avg-time',\n      value: stats.elapsed\n        ? formatAvgRun(stats.elapsed, stats.total_count)\n        : 'Unavailable',\n    },\n    {\n      label: 'Type',\n      id: 'type',\n      value: jobType ? formatJobType(jobType) : 'Unavailable',\n    },\n    {\n      label: 'Success rate',\n      id: 'success-rate',\n      value: !isNaN(stats.successful_count)\n        ? formatSuccessRate(stats.successful_count, stats.total_count)\n        : 'Unavailable',\n    },\n    {\n      label: 'Most failed task',\n      id: 'most-failed',\n      value: stats.most_failed_tasks\n        ? formatTopFailedTask(stats.most_failed_tasks)\n        : 'Unavailable',\n    },\n  ];\n\n  const cleanup = () => {\n    handleModal(false);\n    setSynchStats({ items: [] });\n    setSynchJobs({ items: [] });\n  };\n\n  return (\n    <Modal\n      aria-label=\"modal\"\n      variant={ModalVariant.medium}\n      title={stats.name ? stats.name : 'No template name'}\n      isOpen={isOpen}\n      onClose={cleanup}\n    >\n      {isLoading && <LoadingState />}\n      {error && <ApiErrorState message={error.error} />}\n      {isSuccess && relatedJobs.length <= 0 && <NoResults />}\n      {isSuccess && relatedJobs.length > 0 && (\n        <>\n          {categoryCount && (\n            <Breakdown\n              categoryCount={categoryCount}\n              categoryColor={categoryColor}\n            />\n          )}\n\n          <DescriptionList isHorizontal columnModifier={{ lg: '3Col' }}>\n            {descriptionStats.map(({ label, id, value }) => (\n              <DescriptionListGroup className={id} key={label}>\n                <DescriptionListTerm>{label}</DescriptionListTerm>\n                <DescriptionListDescription>{value}</DescriptionListDescription>\n              </DescriptionListGroup>\n            ))}\n          </DescriptionList>\n\n          <Divider\n            component=\"div\"\n            style={{ marginTop: '2rem', marginBottom: '1.5rem' }}\n          />\n          <p>\n            <strong>Last 5 jobs</strong>\n          </p>\n\n          <TableComposable\n            aria-label=\"Template information table\"\n            variant=\"compact\"\n          >\n            <Thead>\n              <Tr>\n                {tableCols.map((heading, idx) => (\n                  <Th key={idx}>{heading}</Th>\n                ))}\n              </Tr>\n            </Thead>\n            <Tbody>\n              {relatedJobs.map((job, idx) => (\n                <Tr key={`job-detail-${idx}`}>\n                  <Td>{`${job.id.id} - ${job.id.template_name}`}</Td>\n                  <Td>\n                    <JobStatus status={job.status} />\n                  </Td>\n                  <Td>{job.cluster_name}</Td>\n                  <Td>{formatDateTime(job.finished)}</Td>\n                  <Td>{formatTotalTime(job.elapsed)}</Td>\n                </Tr>\n              ))}\n            </Tbody>\n          </TableComposable>\n        </>\n      )}\n\n      <ActionContainer>\n        <Button\n          key=\"cancel\"\n          variant=\"secondary\"\n          onClick={() => {\n            cleanup();\n          }}\n        >\n          Close\n        </Button>\n\n        <Button component=\"a\" onClick={redirectToJobExplorer} variant=\"link\">\n          View all jobs\n        </Button>\n      </ActionContainer>\n    </Modal>\n  );\n};\n\nModalContents.propTypes = {\n  selectedId: PropTypes.number.isRequired,\n  qp: PropTypes.object.isRequired,\n  jobType: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  handleModal: PropTypes.func.isRequired,\n};\n\nexport default ModalContents;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n  DataList,\n  DataListItem as PFDataListItem,\n  DataListCell as PFDataListCell,\n} from '@patternfly/react-core';\n\nimport ModalContents from './ModalContents';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst TemplatesList = ({ templates, isLoading, qp, title, jobType }) => {\n  const [selectedId, setSelectedId] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const displayJobType = (type) => {\n    return type === 'job' ? 'templates' : 'workflows';\n  };\n\n  return (\n    <>\n      <DataList\n        aria-label={`Top ${displayJobType(jobType)}`}\n        style={{\n          maxHeight: '400px',\n          overflow: 'auto',\n          height: '400px',\n          background: 'white',\n        }}\n      >\n        <DataListItem aria-labelledby={`top-${displayJobType(jobType)}-header`}>\n          <DataListCell>\n            <h3>{title}</h3>\n          </DataListCell>\n          <DataCellEnd>\n            <h3>Usage</h3>\n          </DataCellEnd>\n        </DataListItem>\n        {isLoading && (\n          <PFDataListItem\n            aria-labelledby={`${displayJobType(jobType)}-loading`}\n            key={isLoading}\n            style={{ border: 'none' }}\n          >\n            <PFDataListCell>\n              <LoadingState />\n            </PFDataListCell>\n          </PFDataListItem>\n        )}\n        {!isLoading && templates.length <= 0 && (\n          <PFDataListItem\n            aria-labelledby={`${displayJobType(jobType)}-no-data`}\n            key={isLoading}\n            style={{ border: 'none' }}\n          >\n            <PFDataListCell>\n              <NoData />\n            </PFDataListCell>\n          </PFDataListItem>\n        )}\n        {!isLoading &&\n          templates.map(({ name, total_count, id }, index) => (\n            <DataListItem\n              aria-labelledby={`top-${displayJobType(jobType)}-detail`}\n              key={index}\n            >\n              <DataListCell>\n                <a\n                  onClick={() => {\n                    setIsModalOpen(true);\n                    setSelectedId(id);\n                  }}\n                >\n                  {name}\n                </a>\n              </DataListCell>\n              <DataCellEnd>{total_count}</DataCellEnd>\n            </DataListItem>\n          ))}\n      </DataList>\n      {selectedId && (\n        <ModalContents\n          isOpen={isModalOpen}\n          handleModal={setIsModalOpen}\n          selectedId={selectedId}\n          qp={qp}\n          jobType={jobType}\n        />\n      )}\n    </>\n  );\n};\n\nTemplatesList.propTypes = {\n  templates: PropTypes.array,\n  isLoading: PropTypes.bool,\n  queryParams: PropTypes.object,\n  title: PropTypes.string,\n  qp: PropTypes.object,\n  jobType: PropTypes.string,\n};\n\nexport default TemplatesList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport {\n  preflightRequest,\n  readClustersOptions,\n  readJobExplorer,\n  readEventExplorer,\n} from '../../Api/';\n\nimport { jobExplorer } from '../../Utilities/constants';\nimport useApi from '../../Utilities/useApi';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  Grid,\n  GridItem,\n} from '@patternfly/react-core';\n\nimport BarChart from '../../Charts/BarChart';\nimport LineChart from '../../Charts/LineChart';\nimport ModulesList from '../../Components/ModulesList';\nimport TemplatesList from '../../Components/TemplatesList';\nimport FilterableToolbar from '../../Components/Toolbar';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport { clusters } from '../../Utilities/constants';\n\nconst initialTopTemplateParams = {\n  group_by: 'template',\n  limit: 10,\n  job_type: ['job'],\n  group_by_time: false,\n  status: ['successful', 'failed'],\n};\n\nconst initialTopWorkflowParams = {\n  group_by: 'template',\n  limit: 10,\n  job_type: ['workflowjob'],\n  group_by_time: false,\n  status: ['successful', 'failed'],\n};\n\nconst initialModuleParams = {\n  group_by: 'module',\n  sort_by: 'host_task_count:desc',\n  limit: 10,\n};\n\nconst Clusters = () => {\n  const [preflightError, setPreFlightError] = useState(null);\n\n  const { queryParams, setFromToolbar } = useQueryParams({\n    ...clusters.defaultParams,\n  });\n\n  const [\n    {\n      isLoading,\n      isSuccess,\n      error,\n      data: { items: chartData = [] },\n    },\n    setData,\n  ] = useApi({ items: [] });\n\n  const [\n    {\n      data: { items: templates = [] },\n    },\n    setTemplates,\n  ] = useApi({ items: [] });\n  const [\n    {\n      data: { items: workflows = [] },\n    },\n    setWorkflows,\n  ] = useApi({ items: [] });\n  const [\n    {\n      data: { items: modules = [] },\n    },\n    setModules,\n  ] = useApi({ items: [] });\n  const [{ data: options = [] }, setOptions] = useApi({});\n\n  const initialOptionsParams = {\n    attributes: jobExplorer.attributes,\n  };\n\n  const { queryParams: optionsQueryParams } =\n    useQueryParams(initialOptionsParams);\n\n  const {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n  } = queryParams;\n\n  const topTemplatesParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialTopTemplateParams,\n  };\n\n  const topWorkflowParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialTopWorkflowParams,\n  };\n\n  const topModuleParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialModuleParams,\n  };\n\n  useEffect(() => {\n    async function initializeWithPreflight() {\n      await preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n      setOptions(readClustersOptions({ params: optionsQueryParams }));\n    }\n\n    initializeWithPreflight();\n  }, []);\n\n  // Get and update the data\n  useEffect(() => {\n    const fetchEndpoints = () => {\n      setData(readJobExplorer({ params: queryParams }));\n      setTemplates(readJobExplorer({ params: topTemplatesParams }));\n      setWorkflows(readJobExplorer({ params: topWorkflowParams }));\n      setModules(readEventExplorer({ params: topModuleParams }));\n    };\n    fetchEndpoints();\n  }, [queryParams]);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  const renderContent = () => {\n    if (preflightError) return <EmptyState {...preflightError} />;\n\n    if (error) return <ApiErrorState message={error.error} />;\n\n    // Warning: we are not checking if ALL the api succeed\n    // this can cause an unsurfaced error when only some of them fails\n    return (\n      <Grid hasGutter>\n        <GridItem span={12}>\n          <Card>\n            <CardTitle>\n              <h2>Job status</h2>\n            </CardTitle>\n            <CardBody>\n              {isLoading && <LoadingState />}\n              {queryParams.cluster_id.length <= 0 && isSuccess && (\n                <BarChart\n                  margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                  id=\"d3-bar-chart-root\"\n                  data={chartData}\n                  queryParams={queryParams}\n                />\n              )}\n              {queryParams.cluster_id.length > 0 && isSuccess && (\n                <LineChart\n                  margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                  id=\"d3-line-chart-root\"\n                  data={chartData}\n                  queryParams={queryParams}\n                />\n              )}\n            </CardBody>\n          </Card>\n        </GridItem>\n        <GridItem span={4}>\n          <TemplatesList\n            qp={queryParams}\n            templates={workflows}\n            isLoading={isLoading}\n            title={'Top workflows'}\n            jobType={'workflowjob'}\n          />\n        </GridItem>\n        <GridItem span={4}>\n          <TemplatesList\n            qp={queryParams}\n            templates={templates}\n            isLoading={isLoading}\n            title={'Top templates'}\n            jobType={'job'}\n          />\n        </GridItem>\n        <GridItem span={4}>\n          <ModulesList modules={modules} isLoading={isLoading} />\n        </GridItem>\n      </Grid>\n    );\n  };\n\n  return (\n    <>\n      <PageHeader>\n        <PageHeaderTitle title={'Clusters'} />\n        <FilterableToolbar\n          categories={options}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      <Main>{renderContent()}</Main>\n    </>\n  );\n};\n\nexport default Clusters;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Tr, Td, ExpandableRowContent } from '@patternfly/react-table';\n\nimport { formatDateTime, formatJobType } from '../Utilities/helpers';\nimport JobStatus from './JobStatus';\nimport {\n  DescriptionList,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  DescriptionListDescription,\n} from '@patternfly/react-core';\n\nconst JobExplorerListRow = ({ job }) => {\n  const [expanded, setExpanded] = useState(false);\n  const handleExpansion = () => {\n    setExpanded(!expanded);\n  };\n\n  const expandedInfo = [\n    {\n      label: 'Created',\n      value: job.created ? formatDateTime(job.created) : 'Unavailable',\n    },\n    {\n      label: 'Started',\n      value: job.created ? formatDateTime(job.started) : 'Unavailable',\n    },\n    {\n      label: 'Finished',\n      value: job.created ? formatDateTime(job.finished) : 'Unavailable',\n    },\n  ];\n  return (\n    <>\n      <Tr>\n        <Td\n          expand={{\n            rowIndex: job.id.id,\n            isExpanded: expanded,\n            onToggle: handleExpansion,\n          }}\n        />\n        <Td\n          href={job.id.tower_link}\n        >{`${job.id.id} - ${job.id.template_name}`}</Td>\n        <Td>\n          <JobStatus status={job.status} />\n        </Td>\n        <Td>{job.cluster_name}</Td>\n        <Td>{job.org_name}</Td>\n        <Td>{formatJobType(job.job_type)}</Td>\n      </Tr>\n      <Tr isExpanded={expanded}>\n        <Td colSpan={6}>\n          <ExpandableRowContent>\n            <DescriptionList isHorizontal columnModifier={{ lg: '3Col' }}>\n              {expandedInfo.map(({ label, value }) => (\n                <DescriptionListGroup key={label}>\n                  <DescriptionListTerm>{label}</DescriptionListTerm>\n                  <DescriptionListDescription>\n                    {value}\n                  </DescriptionListDescription>\n                </DescriptionListGroup>\n              ))}\n            </DescriptionList>\n          </ExpandableRowContent>\n        </Td>\n      </Tr>\n    </>\n  );\n};\n\nJobExplorerListRow.propTypes = {\n  job: PropTypes.object.isRequired,\n};\n\nexport default JobExplorerListRow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TableComposable, Thead, Tbody, Tr, Th } from '@patternfly/react-table';\nimport JobExplorerListRow from './JobExplorerListRow';\n\nconst cols = ['Id/Name', 'Status', 'Cluster', 'Organization', 'Type'];\n\nconst JobExplorerList = ({ jobs }) => {\n  return (\n    <TableComposable aria-label=\"Job Explorer Table\" variant=\"compact\">\n      <Thead>\n        <Tr>\n          <Th />\n          {cols.map((head, idx) => (\n            <Th key={`col-${idx}`}>{head}</Th>\n          ))}\n        </Tr>\n      </Thead>\n      <Tbody>\n        {jobs.map((job) => (\n          <JobExplorerListRow job={job} key={job.id.id} />\n        ))}\n      </Tbody>\n    </TableComposable>\n  );\n};\n\nJobExplorerList.propTypes = {\n  jobs: PropTypes.array.isRequired,\n};\n\nexport default JobExplorerList;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { parse, stringify } from 'query-string';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { Paths } from '../../paths';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoResults from '../../Components/NoResults';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport Pagination from '../../Components/Pagination';\n\nimport {\n  preflightRequest,\n  readJobExplorer,\n  readJobExplorerOptions,\n} from '../../Api/';\nimport { jobExplorer } from '../../Utilities/constants';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport { Card, CardBody, PaginationVariant } from '@patternfly/react-core';\n\nimport JobExplorerList from '../../Components/JobExplorerList';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\nconst initialQueryParams = {\n  ...jobExplorer.defaultParams,\n  attributes: jobExplorer.attributes,\n};\n\nconst JobExplorer = ({ location: { search }, history }) => {\n  const [preflightError, setPreFlightError] = useState(null);\n  const [\n    {\n      isLoading,\n      isSuccess,\n      error,\n      data: { meta = {}, items: data = [] },\n    },\n    setData,\n  ] = useApi({ meta: {}, items: [] });\n  const [options, setOptions] = useApi({});\n\n  const { queryParams, setFromPagination, setFromToolbar, dispatch } =\n    useQueryParams(initialQueryParams);\n\n  const updateURL = () => {\n    const { jobExplorer } = Paths;\n    const search = stringify(queryParams, { arrayFormat: 'bracket' });\n    history.replace({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'job-explorer', secondaryNav: true });\n\n    preflightRequest().catch((error) => {\n      setPreFlightError({ preflightError: error });\n    });\n\n    const initialSearchParams = parse(search, {\n      arrayFormat: 'bracket',\n      parseBooleans: true,\n      parseNumbers: true,\n    });\n\n    dispatch({\n      type: 'REINITIALIZE',\n      value: {\n        ...initialQueryParams,\n        ...initialSearchParams,\n      },\n    });\n  }, []);\n\n  useEffect(() => {\n    setData(readJobExplorer({ params: queryParams }));\n    setOptions(readJobExplorerOptions({ params: queryParams }));\n    updateURL();\n  }, [queryParams]);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Job Explorer'} />\n      </PageHeader>\n\n      {preflightError && (\n        <Main>\n          <EmptyState {...preflightError} />\n        </Main>\n      )}\n\n      {!preflightError && (\n        <Main>\n          <Card>\n            <CardBody>\n              <FilterableToolbar\n                categories={options.data}\n                filters={queryParams}\n                setFilters={setFromToolbar}\n                pagination={\n                  <Pagination\n                    count={meta?.count}\n                    params={{\n                      limit: queryParams.limit,\n                      offset: queryParams.offset,\n                    }}\n                    setPagination={setFromPagination}\n                    isCompact\n                  />\n                }\n                hasSettings\n              />\n              {error && <ApiErrorState message={error.error} />}\n              {isLoading && <LoadingState />}\n              {isSuccess && data.length <= 0 && <NoResults />}\n              {isSuccess && data.length > 0 && <JobExplorerList jobs={data} />}\n              <Pagination\n                count={meta?.count}\n                params={{\n                  limit: queryParams.limit,\n                  offset: queryParams.offset,\n                }}\n                setPagination={setFromPagination}\n                variant={PaginationVariant.bottom}\n              />\n            </CardBody>\n          </Card>\n        </Main>\n      )}\n    </React.Fragment>\n  );\n};\n\nJobExplorer.propTypes = {\n  location: PropTypes.object,\n  history: PropTypes.object,\n};\n\nexport default JobExplorer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nimport {\n  NotificationDrawerList as PFNotificationDrawerList,\n  NotificationDrawerListItem as PFNotificationDrawerListItem,\n  NotificationDrawerListItemBody,\n  NotificationDrawerListItemHeader,\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkAltIcon } from '@patternfly/react-icons';\nimport LoadingState from '../Components/LoadingState';\nimport { capitalize } from '../Utilities/helpers';\n\nconst ExternalLinkAltIcon = styled(PFExternalLinkAltIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n  font-size: 14px;\n`;\n\nconst NotificationDrawerListItem = styled(PFNotificationDrawerListItem)`\n  border-top: 1px solid var(--pf-global--BorderColor--light-100\n    );\n  border-bottom::nth-child(odd): 1px solid var(--pf-global--BorderColor--light-100\n    );\n  box-shadow: none;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst NotificationDrawerList = styled(PFNotificationDrawerList)`\n  &:last-child {\n    border-bottom: 1px solid var(--pf-global--BorderColor--light-100);\n  }\n`;\n\nconst stringifyDate = (date) => {\n  const day = moment(date);\n  const oneHour = 60 * 60 * 1000;\n  const now = moment().utc();\n\n  if (now.isAfter(day)) {\n    return `${now.diff(day, 'days')} day(s) ago.`;\n  }\n\n  if (day.isSame(now, 'day')) {\n    if (day.valueOf() > oneHour) {\n      return `${day.diff(now, 'hours')} hour(s) ago.`;\n    }\n\n    return `${now.diff(day, 'minutes')} minute(s) ago.`;\n  }\n};\n\nconst AllNotificationTemplate = ({ notifications }) =>\n  notifications.map(\n    ({ date, message, label, notification_id: id, tower_url: url }) => {\n      if (label === '' || label === 'notice') {\n        return (\n          <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"info\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n\n      if (label === 'error') {\n        return (\n          <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"danger\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n\n      if (label === 'warning') {\n        return (\n          <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"warning\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n    }\n  );\n\nconst ErrorNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'error')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"danger\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst NoticeNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'notice')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"info\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst WarningNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'warning')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"warning\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst NotificationsList = ({ filterBy, notifications }) => (\n  <>\n    <NotificationDrawerList>\n      {notifications.length <= 0 && <LoadingState />}\n      {filterBy === '' && (\n        <AllNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'notice' && (\n        <NoticeNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'error' && (\n        <ErrorNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'warning' && (\n        <WarningNotificationTemplate notifications={notifications} />\n      )}\n    </NotificationDrawerList>\n  </>\n);\n\nAllNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nErrorNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nWarningNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nNotificationsList.propTypes = {\n  notifications: PropTypes.array,\n  filterBy: PropTypes.string,\n};\n\nexport default NotificationsList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoData from '../../Components/NoData';\nimport { preflightRequest, readClusters, readNotifications } from '../../Api/';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle as PFCardTitle,\n  FormSelect,\n  FormSelectOption,\n  PaginationVariant,\n  NotificationDrawer,\n} from '@patternfly/react-core';\n\nimport NotificationsList from '../../Components/NotificationsList';\nimport Pagination from '../../Components/Pagination';\n\nconst CardTitle = styled(PFCardTitle)`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n`;\n\nconst DropdownGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-end;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n\n  select {\n    margin: 0 10px;\n    width: 150px;\n\n    @media screen and (max-width: 1035px) {\n      margin: 10px 10px 0 0;\n    }\n\n    @media screen and (max-width: 865px) {\n      width: 100%;\n    }\n  }\n`;\n\nconst notificationOptions = [\n  {\n    value: 'please choose',\n    label: 'Select Notification Severity',\n    disabled: true,\n  },\n  { value: 'error', label: 'View Critical', disabled: false },\n  { value: 'warning', label: 'View Warning', disabled: false },\n  { value: 'notice', label: 'View Notice', disabled: false },\n  { value: '', label: 'View All', disabled: false },\n];\n\nfunction formatClusterName(data) {\n  const defaultClusterOptions = [\n    { value: 'please choose', label: 'Select cluster', disabled: true },\n    { value: '', label: 'All Clusters', disabled: false },\n    { value: -1, label: 'Unassociated', disabled: false },\n  ];\n  return data.reduce(\n    (formatted, { label, cluster_id: id, install_uuid: uuid }) => {\n      if (label.length === 0) {\n        formatted.push({ value: id, label: uuid, disabled: false });\n      } else {\n        formatted.push({ value: id, label, disabled: false });\n      }\n\n      return formatted;\n    },\n    defaultClusterOptions\n  );\n}\n\nconst initialQueryParams = {\n  limit: 5,\n  offset: 0,\n};\n\nconst Notifications = () => {\n  const [preflightError, setPreFlightError] = useState(null);\n  const [notificationsData, setNotificationsData] = useState([]);\n  const [clusterOptions, setClusterOptions] = useState([]);\n  const [selectedCluster, setSelectedCluster] = useState('');\n  const [firstRender, setFirstRender] = useState(true);\n  const [isLoading, setIsLoading] = useState(true);\n  const [meta, setMeta] = useState({});\n  const { queryParams, setId, setFromPagination, setSeverity } =\n    useQueryParams(initialQueryParams);\n\n  useEffect(() => {\n    if (firstRender) {\n      return;\n    }\n\n    const getData = () => {\n      return readNotifications({ params: queryParams });\n    };\n\n    const update = () => {\n      setIsLoading(true);\n      getData().then(({ notifications: notificationsData = [], meta }) => {\n        setNotificationsData(notificationsData);\n        setMeta(meta);\n        setIsLoading(false);\n      });\n    };\n\n    update();\n  }, [queryParams]);\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'notifications', secondaryNav: true });\n\n    let ignore = false;\n    const fetchEndpoints = () => {\n      return Promise.all(\n        [readClusters(), readNotifications({ params: queryParams })].map((p) =>\n          p.catch(() => [])\n        )\n      );\n    };\n\n    async function initializeWithPreflight() {\n      setIsLoading(true);\n      await preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n      fetchEndpoints().then(\n        ([\n          { templates: clustersData = [] },\n          { notifications: notificationsData = [], meta },\n        ]) => {\n          if (!ignore) {\n            const clusterOptions = formatClusterName(clustersData);\n            setClusterOptions(clusterOptions);\n            setNotificationsData(notificationsData);\n            setMeta(meta);\n            setFirstRender(false);\n            setIsLoading(false);\n          }\n        }\n      );\n    }\n\n    initializeWithPreflight();\n    return () => (ignore = true);\n  }, []);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Notifications'} />\n      </PageHeader>\n      {preflightError && (\n        <Main>\n          <EmptyState {...preflightError} />\n        </Main>\n      )}\n      {!preflightError && (\n        <>\n          <Main>\n            <Card>\n              <CardTitle>\n                <DropdownGroup>\n                  <FormSelect\n                    name=\"selectedCluster\"\n                    value={selectedCluster}\n                    onChange={(value) => {\n                      setSelectedCluster(value);\n                      setId(value);\n                      setFromPagination(0);\n                    }}\n                    aria-label=\"Select Cluster\"\n                  >\n                    {clusterOptions.map(({ value, label, disabled }, index) => (\n                      <FormSelectOption\n                        isDisabled={disabled}\n                        key={index}\n                        value={value}\n                        label={label}\n                      />\n                    ))}\n                  </FormSelect>\n                  <FormSelect\n                    name=\"selectedNotification\"\n                    value={queryParams.severity || ''}\n                    onChange={(value) => {\n                      setSeverity(value);\n                      setFromPagination(0);\n                    }}\n                    aria-label=\"Select Notification Type\"\n                  >\n                    {notificationOptions.map(\n                      ({ disabled, value, label }, index) => (\n                        <FormSelectOption\n                          isDisabled={disabled}\n                          key={index}\n                          value={value}\n                          label={label}\n                        />\n                      )\n                    )}\n                  </FormSelect>\n                </DropdownGroup>\n                <Pagination\n                  count={meta?.count}\n                  params={{\n                    limit: queryParams.limit,\n                    offset: queryParams.offset,\n                  }}\n                  setPagination={setFromPagination}\n                  isCompact\n                />\n              </CardTitle>\n              <CardBody>\n                {isLoading && <LoadingState />}\n                {!isLoading && notificationsData.length <= 0 && <NoData />}\n                {!isLoading && notificationsData.length > 0 && (\n                  <NotificationDrawer>\n                    <NotificationsList\n                      filterBy={queryParams.severity || ''}\n                      options={notificationOptions}\n                      notifications={notificationsData}\n                    />\n                  </NotificationDrawer>\n                )}\n                <Pagination\n                  count={meta?.count}\n                  params={{\n                    limit: queryParams.limit,\n                    offset: queryParams.offset,\n                  }}\n                  setPagination={setFromPagination}\n                  variant={PaginationVariant.bottom}\n                />\n              </CardBody>\n            </Card>\n          </Main>\n        </>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Notifications;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Switch } from '@patternfly/react-core';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  overflow: auto;\n  width: 100%;\n  height: ${(props) => props.height};\n`;\n\nconst LegendDetail = styled.div`\n  display: flex;\n  padding: 7.5px 15px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  overflow: auto;\n`;\n\nconst Color = styled.div.attrs((props) => ({\n  color: props.color || 'black',\n}))`\n  min-width: 12px;\n  height: 12px;\n  background: ${(props) => props.color};\n  margin-right: 20px;\n`;\n\nconst Title = styled.span`\n  font-size: 15px;\n  display: inline-block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n`;\n\nconst SubTitle = styled.span`\n  font-size: 15px;\n  margin-left: auto;\n  margin-right: 0;\n  padding-right: 10px;\n`;\n\nconst Legend = ({ data, selected, height, onToggle, chartName }) => {\n  return (\n    <Container height={height}>\n      {data.map(({ name, value, id, count }, index) => (\n        <LegendDetail key={index}>\n          <Wrapper>\n            <Color color={value} />\n            <Title>{name}</Title>\n          </Wrapper>\n          {count && <SubTitle>{count}</SubTitle>}\n          {selected && (\n            <Switch\n              isChecked={selected.some((selection) => selection === id)}\n              onChange={() => onToggle(id)}\n              aria-label={`${chartName}-${name}`}\n              value={id}\n              key={index}\n            />\n          )}\n        </LegendDetail>\n      ))}\n    </Container>\n  );\n};\n\nLegend.propTypes = {\n  data: PropTypes.array.isRequired,\n  selected: PropTypes.array.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  height: PropTypes.string.isRequired,\n  chartName: PropTypes.string.isRequired,\n};\n\nexport default Legend;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport styled from 'styled-components';\n\nimport initializeChart from '.././BaseChart';\nimport Legend from '../../Utilities/Legend';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nconst GroupedBarChart = ({\n  onClick = null,\n  TooltipClass,\n  legend,\n  ...props\n}) => {\n  const colors = legend.map(({ id, name }) => {\n    return {\n      name,\n      value: props.colorFunc(id),\n      id,\n    };\n  });\n  const [selectedIds, setSelectedIds] = useState(\n    legend.map(({ id }) => id).slice(0, 8)\n  );\n  let timeout = null;\n\n  const handleToggle = (id) => {\n    if (selectedIds.includes(id)) {\n      setSelectedIds(selectedIds.filter((el) => el !== id));\n    } else {\n      setSelectedIds([...selectedIds, id]);\n    }\n  };\n\n  const draw = () => {\n    // Clear our chart container element first\n    d3.selectAll('#' + props.id + ' > *').remove();\n    let { data: unformattedData } = props;\n    const data = unformattedData.reduce((formatted, { date, items }) => {\n      const selectedOrgs = items.filter(({ id }) => selectedIds.includes(id));\n      return formatted.concat({ date, selectedOrgs });\n    }, []);\n    const width = props.getWidth();\n    const height = props.getHeight();\n    // x scale of entire chart\n    const x0 = d3.scaleBand().range([0, width]).padding(0.35);\n    // x scale of individual grouped bars\n    const x1 = d3.scaleBand();\n    const y = d3.scaleLinear().range([height, 0]);\n    // format our X Axis ticks\n    const maxTicksOneMonth = Math.round(data.length / (data.length / 2));\n    const maxTicksTwoMonths = Math.round(data.length / (data.length / 4));\n    let ticks = data.map((d) => d.date);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) =>\n          i % (data.length > 31 ? maxTicksTwoMonths : maxTicksOneMonth) === 0\n            ? d.date\n            : undefined\n        )\n        .filter((item) => item);\n    }\n\n    const xAxis = d3.axisBottom(x0).tickValues(ticks).tickFormat(formatDate);\n\n    const yAxis = d3.axisLeft(y).ticks(8).tickSize(-width, 0, 0);\n\n    const svg = d3\n      .select('#' + props.id)\n      .append('svg')\n      .attr('width', width + props.margin.left + props.margin.right)\n      .attr('height', height + props.margin.bottom + props.margin.top)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' + props.margin.left + ',' + props.margin.top + ')'\n      );\n\n    const dates = data.map((d) => d.date);\n    const tooltip = new TooltipClass({\n      svg: '#' + props.id,\n    });\n    x0.domain(dates);\n    x1.domain(selectedIds).range([0, x0.bandwidth()]);\n    y.domain([\n      0,\n      d3.max(data, (date) =>\n        d3.max(date.selectedOrgs, (d) => d.value * 1.15)\n      ) || 8,\n    ]);\n\n    // add y axis\n    svg\n      .append('g')\n      .attr('class', 'y axis')\n      .call(yAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7')\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 6)\n      .attr('dy', '.71em')\n      .style('text-anchor', 'end')\n      .style('font-weight', 'bold')\n      .text('Value');\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text(props.yLabel);\n\n    // add x axis\n    svg\n      .append('g')\n      .attr('class', 'x axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' + width / 2 + ' ,' + (height + props.margin.top + 25) + ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n    // add the groups\n    let slice = svg.selectAll('.slice').data(data);\n    slice.exit().remove();\n\n    const enter = slice\n      .enter()\n      .append('g')\n      .attr('class', 'g foo')\n      .attr('transform', (d) => 'translate(' + x0(d.date) + ',0)');\n    slice = slice.merge(enter);\n    // add the individual bars\n    let bars = slice.selectAll('rect').data(function (d) {\n      return d.selectedOrgs;\n    });\n    bars.exit().remove();\n\n    const color = props.colorFunc;\n    const subEnter = bars\n      .enter()\n      .append('rect')\n      .attr('width', x1.bandwidth())\n      .attr('x', function (d) {\n        return x1(d.id);\n      }) // unsorted\n      .style('fill', function (d) {\n        return color(d.id);\n      })\n      .attr('y', function (d) {\n        return y(d.value);\n      })\n      .attr('height', function (d) {\n        return height - y(d.value);\n      })\n      .on('mouseover', function (d) {\n        d.moreDetail = !d.name.endsWith('Others');\n        d3.select(this).style(\n          'cursor',\n          onClick && d.moreDetail ? 'pointer' : 'default'\n        );\n        d3.select(this).style('fill', d3.rgb(color(d.id)).darker(1));\n        tooltip.handleMouseOver(d);\n      })\n      .on('mousemove', tooltip.handleMouseOver)\n      .on('mouseout', function (d) {\n        d3.select(this).style('fill', color(d.id));\n        tooltip.handleMouseOut();\n      })\n      .on('click', onClick);\n    bars = bars.merge(subEnter);\n  };\n\n  const init = () => {\n    draw();\n  };\n\n  const resize = () => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      draw();\n    }, 500);\n  };\n\n  useEffect(() => {\n    init();\n    window.addEventListener('resize', resize);\n\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [props.data, selectedIds]);\n\n  return (\n    <Wrapper>\n      <div id={props.id} />\n      {colors.length > 0 && (\n        <Legend\n          id={`${props.id}-legend`}\n          data={colors}\n          selected={selectedIds}\n          onToggle={handleToggle}\n          height=\"350px\"\n          chartName={`${props.id}-legend`}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nGroupedBarChart.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  legend: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  colorFunc: PropTypes.func,\n  yLabel: PropTypes.string,\n  onClick: PropTypes.func,\n  TooltipClass: PropTypes.any.isRequired,\n};\n\nGroupedBarChart.defaultProps = {\n  legend: [],\n};\n\nexport default initializeChart(GroupedBarChart);\n","import * as d3 from 'd3';\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class OrgsTooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -12)\n      .attr('rx', 2)\n      .attr('height', 50)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 25)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Date');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 72)\n      .attr('y', 25)\n      .text('0 Jobs');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 10)\n      .attr('font-size', 12)\n      .text('Org');\n\n    this.clickMore = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 20)\n      .attr('y', 30)\n      .attr('font-size', 12)\n      .text('');\n  }\n\n  handleMouseOver = (d) => {\n    let date;\n    let orgName;\n    let jobs;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    } else {\n      const maxLength = 16;\n      date = d.date;\n      orgName = d.name;\n      jobs = d.value;\n      if (d.name.length > maxLength) {\n        orgName = d.name.slice(0, maxLength).concat('...');\n      }\n    }\n\n    let yAdjust = -11;\n\n    // Include 'Click for details' if more detail is available\n    if (d.moreDetail) {\n      this.boundingBox.attr('height', 68);\n      this.boundingBox.attr('y', -23);\n      this.date.attr('y', 25 + yAdjust);\n      this.jobs.attr('y', 25 + yAdjust);\n      this.orgName.attr('y', 10 + yAdjust);\n      this.clickMore.text('Click for details');\n    } else {\n      this.boundingBox.attr('height', 50);\n      this.boundingBox.attr('y', -12);\n      this.date.attr('y', 25);\n      this.jobs.attr('y', 25);\n      this.orgName.attr('y', 10);\n      this.clickMore.text('');\n    }\n\n    const formatTooltipDate = formatDate;\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.date.text('' + formatTooltipDate(date));\n    this.orgName.text('' + orgName);\n    this.jobs.text('' + jobs + ' Jobs');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 45;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n      this.orgName.attr('x', -adjustedWidth - 7);\n      this.date.attr('x', -adjustedWidth - 7);\n      this.clickMore.attr('x', -adjustedWidth - 7);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth / 2);\n      this.date.attr('x', 20);\n      this.clickMore.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import * as d3 from 'd3';\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class HostsTooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -12)\n      .attr('rx', 2)\n      .attr('height', 50)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 25)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Date');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 72)\n      .attr('y', 25)\n      .text('0 Jobs');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 10)\n      .attr('font-size', 12)\n      .text('Org');\n  }\n\n  handleMouseOver = (d) => {\n    let date;\n    let orgName;\n    let jobs;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    } else {\n      const maxLength = 16;\n      date = d.date;\n      orgName = d.name;\n      jobs = d.value;\n      if (d.name.length > maxLength) {\n        orgName = d.name.slice(0, maxLength).concat('...');\n      }\n    }\n\n    const formatTooltipDate = formatDate;\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.date.text('' + formatTooltipDate(date));\n    this.orgName.text('' + orgName);\n    this.jobs.text('' + jobs + ' Hosts');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 45;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n      this.orgName.attr('x', -adjustedWidth - 7);\n      this.date.attr('x', -adjustedWidth - 7);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth / 2);\n      this.date.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport { getTotal } from '../Utilities/helpers';\nimport Legend from '../Utilities/Legend';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nclass Tooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    // defer drawing until we know the data shape\n    this.drawn = false;\n    // show the success rate or not\n    this.showSuccess = false;\n  }\n\n  draw(d) {\n    // chart1 has success rate data and chart2 does not ...\n    this.showSuccess = d && d.data && 'success_rate' in d.data ? true : false;\n    const boundingHeight = this.showSuccess ? 70 : 52;\n    const boundingWidth = this.showSuccess ? 120 : 108;\n\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBOx = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', boundingHeight)\n      .attr('width', boundingWidth)\n      .attr('fill', '#393f44');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 0)\n      .text('Organization');\n    this.percentageTotal = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 16)\n      .text('0');\n    this.percentageSuccess = null;\n    if (this.showSuccess) {\n      this.percentageSuccess = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 30)\n        .text('');\n    }\n  }\n\n  handleMouseOver = (d) => {\n    // treat draw() as a singleton to avoid a painted window effect\n    if (this.drawn !== true) {\n      this.draw(d);\n      this.drawn = true;\n    }\n\n    let perc;\n    let percSuccess;\n    let orgName;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    }\n\n    if (d && d.data) {\n      const maxLength = 16;\n      perc = d.data.percent;\n      percSuccess = d.data.success_rate;\n      orgName = d.data.name;\n      if (d.data.name.length > maxLength) {\n        orgName = d.data.name.slice(0, maxLength - 3).concat('...');\n      }\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.percentageTotal.text('' + perc + '%');\n    if (percSuccess && this.percentageSuccess) {\n      this.percentageSuccess.text('(' + percSuccess + '% successful)');\n    }\n\n    this.orgName.text(' ' + orgName);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, -10) rotate(45)');\n      this.boundingBOx.attr('x', -125);\n      this.orgName.attr('x', -112);\n      this.percentageTotal.attr('x', -112);\n      if (this.showSuccess) {\n        this.percentageSuccess.attr('x', -112);\n      }\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, -10) rotate(45)');\n      this.boundingBOx.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.percentageTotal.attr('x', 20);\n      if (this.showSuccess) {\n        this.percentageSuccess.attr('x', 20);\n      }\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nconst PieChart = ({\n  data,\n  id,\n  colorFunc: color,\n  margin,\n  getWidth,\n  getHeight,\n}) => {\n  const colors = data\n    .map(({ id, name, count }) => {\n      return {\n        id,\n        name,\n        value: color(id),\n        count: Math.round(count),\n      };\n    })\n    .sort((a, b) => (a.count > b.count ? 1 : b.count > a.count ? -1 : 0));\n\n  const [selectedIds, setSelectedIds] = useState(\n    data.map(({ id }) => id).slice(0, 8)\n  );\n\n  let timeout = null;\n\n  const handleToggle = (id) => {\n    if (selectedIds.includes(id)) {\n      setSelectedIds(selectedIds.filter((el) => el !== id));\n    } else {\n      setSelectedIds([...selectedIds, id]);\n    }\n  };\n\n  const draw = () => {\n    d3.selectAll('#' + id + ' > *').remove();\n    const width = getWidth();\n    const height = getHeight();\n    const svg = d3\n      .select('#' + id)\n      .append('svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.bottom)\n      .append('g');\n\n    svg.append('g').attr('class', 'slices');\n    svg.append('g').attr('class', 'labels');\n    svg.append('g').attr('class', 'lines');\n    const radius = Math.min(width, height) / 2;\n    const filteredData = data.filter(({ id }) => selectedIds.includes(id));\n    const total = getTotal(filteredData);\n    filteredData.forEach(function (d) {\n      d.count = +d.count;\n      d.percent = +Math.round((d.count / total) * 100);\n    });\n    const donutTooltip = new Tooltip({\n      svg: '#' + id,\n    });\n    const pie = d3\n      .pie()\n      .sort(null)\n      .value((d) => d.count);\n    const arc = d3\n      .arc()\n      .outerRadius(radius - 10) // controls top positioning of chart\n      .innerRadius(0);\n\n    svg.attr(\n      'transform',\n      'translate(' +\n        (width + margin.left + margin.right) / 2 +\n        ',' +\n        (height + margin.top + margin.bottom) / 2 +\n        ')'\n    );\n\n    svg\n      .selectAll('path')\n      .data(pie(filteredData))\n      .enter()\n      .append('path')\n      .attr('d', arc)\n      .attr('fill', (d) => color(d.data.id));\n\n    svg\n      .selectAll('path')\n      .on('mouseover', function (d) {\n        d3.select(this).style('fill', d3.rgb(color(d.data.id)).darker(1));\n        donutTooltip.handleMouseOver(d);\n      })\n      .on('mouseout', function (d) {\n        d3.select(this).style('fill', color(d.data.id));\n        donutTooltip.handleMouseOut();\n      })\n      .on('mousemove', donutTooltip.handleMouseOver);\n\n    svg.append('g').classed('labels', true);\n    svg.append('g').classed('lines', true);\n  };\n\n  const init = () => {\n    draw();\n  };\n\n  const resize = () => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      draw();\n    }, 500);\n  };\n\n  useEffect(() => {\n    init();\n    window.addEventListener('resize', resize);\n\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [data, selectedIds]);\n\n  return (\n    <Wrapper>\n      <div id={id} />\n      {colors.length > 0 && (\n        <Legend\n          id={`${id}-legend`}\n          data={colors}\n          selected={selectedIds}\n          onToggle={handleToggle}\n          height=\"300px\"\n          chartName={`${id}-legend`}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nPieChart.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  colorFunc: PropTypes.func,\n};\n\nexport default initializeChart(PieChart);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { formatDate as dateForJobExplorer } from '../../Utilities/helpers';\n\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport {\n  preflightRequest,\n  readJobExplorer,\n  readHostExplorer,\n  readOrgOptions,\n} from '../../Api/';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  Tabs,\n  Tab,\n  Grid,\n  GridItem,\n} from '@patternfly/react-core';\n\nimport {\n  GroupedBarChart,\n  OrgsTooltip,\n  HostsTooltip,\n} from '../../Charts/GroupedBarChart/';\nimport PieChart from '../../Charts/PieChart';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport { organizationStatistics as constants } from '../../Utilities/constants';\n\n// For chart colors\nimport { pfmulti } from '../../Utilities/colors';\nimport { scaleOrdinal } from 'd3';\n\nconst Divider = styled('hr')`\n  border: 1px solid #ebebeb;\n`;\n\nconst colorFunc = scaleOrdinal(pfmulti);\n\nconst orgsChartMapper =\n  (attrName) =>\n  ({ dates: data = [], meta }) => ({\n    data: data.map(({ date, items }) => ({\n      date,\n      items: items.map(({ id, [attrName]: value, name }) => ({\n        id,\n        date,\n        value,\n        name: name || 'No organization',\n      })),\n    })),\n    legend: meta.legend.map((el) => ({\n      ...el,\n      name: el.name || 'No organization',\n    })),\n  });\n\nconst pieChartMapper =\n  (attrName) =>\n  ({ items = [] }) =>\n    items.map(({ id, [attrName]: count, name }) => ({\n      id,\n      count,\n      name: name || 'No organization',\n    }));\n\nconst redirectToJobExplorer =\n  (toJobExplorer, queryParams) =>\n  ({ date, id }) => {\n    if (id === -1) {\n      // disable clicking on \"others\" block\n      return;\n    }\n\n    const { sort_by, ...rest } = queryParams;\n    const formattedDate = dateForJobExplorer(date);\n    const initialQueryParams = {\n      ...rest,\n      quick_date_range: 'custom',\n      start_date: formattedDate,\n      end_date: formattedDate,\n      status: [\n        'successful',\n        'failed',\n        'new',\n        'pending',\n        'waiting',\n        'error',\n        'canceled',\n        'running',\n      ],\n      org_id: [id],\n    };\n\n    toJobExplorer(initialQueryParams);\n  };\n\nconst chartMapper = [\n  {\n    api: readJobExplorer,\n    attr: 'total_count',\n    label: 'Jobs across organizations',\n    onClick: redirectToJobExplorer,\n    tooltip: OrgsTooltip,\n  },\n  {\n    api: readHostExplorer,\n    attr: 'total_unique_host_count',\n    label: 'Hosts across organizations',\n    onClick: () => null,\n    tooltip: HostsTooltip,\n  },\n];\n\nconst OrganizationStatistics = ({ history }) => {\n  const toJobExplorer = useRedirect(history, 'jobExplorer');\n  const [preflight, setPreflight] = useApi(null);\n  const [activeTabKey, setActiveTabKey] = useState(0);\n  const [orgs, setOrgs] = useApi(\n    [],\n    orgsChartMapper(chartMapper[activeTabKey].attr)\n  );\n  const [jobs, setJobs] = useApi([], pieChartMapper('total_count'));\n  const [tasks, setTasks] = useApi([], pieChartMapper('host_task_count'));\n  const [options, setOptions] = useApi({});\n  const { queryParams, setFromToolbar } = useQueryParams(\n    constants.defaultParams\n  );\n\n  const jobEventsByOrgParams = {\n    ...queryParams,\n    attributes: ['host_task_count'],\n    group_by: 'org',\n    include_others: true,\n    sort_by: `host_task_count:desc`,\n  };\n\n  const jobRunsByOrgParams = {\n    ...queryParams,\n    attributes: ['total_count'],\n    group_by: 'org',\n    include_others: true,\n    sort_by: `total_count:desc`,\n  };\n\n  const jobsByDateAndOrgParams = {\n    ...queryParams,\n    attributes: ['total_count'],\n    group_by: 'org',\n    group_by_time: true,\n    sort_by: `total_count:desc`,\n  };\n\n  const hostAcrossOrgParams = {\n    ...queryParams,\n    attributes: ['total_unique_host_count'],\n    group_by: 'org',\n    group_by_time: true,\n    sort_by: `host_task_count:desc`,\n  };\n\n  const handleTabClick = (_, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({\n      id: 'organization-statistics',\n      secondaryNav: true,\n    });\n    setPreflight(preflightRequest());\n    setOptions(readOrgOptions({ params: queryParams }));\n  }, []);\n\n  useEffect(() => {\n    const { api: readJobsOrHosts } = chartMapper[activeTabKey];\n    const params =\n      activeTabKey === 0 ? jobsByDateAndOrgParams : hostAcrossOrgParams;\n    setOrgs(readJobsOrHosts({ params }));\n  }, [queryParams, activeTabKey]);\n\n  useEffect(() => {\n    setJobs(readJobExplorer({ params: jobRunsByOrgParams }));\n    setTasks(readJobExplorer({ params: jobEventsByOrgParams }));\n  }, [queryParams]);\n\n  if (preflight?.error?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  const renderContent = () => {\n    if (preflight.error) return <EmptyState preflightError={preflight.error} />;\n\n    if (preflight.isSuccess)\n      return (\n        <Grid hasGutter>\n          <GridItem span={12}>\n            <Card>\n              <Tabs activeKey={activeTabKey} onSelect={handleTabClick}>\n                <Tab eventKey={0} title={'Jobs'} />\n                <Tab eventKey={1} title={'Hosts'} />\n              </Tabs>\n              <CardBody>\n                {orgs.isLoading && <LoadingState />}\n                {orgs.error && <ApiErrorState message={orgs.error.error} />}\n                {orgs.isSuccess && orgs.data?.data.length <= 0 && <NoData />}\n                {orgs.isSuccess && orgs.data?.data.length > 0 && (\n                  <GroupedBarChart\n                    margin={{ top: 20, right: 20, bottom: 50, left: 50 }}\n                    id=\"d3-grouped-bar-chart-root\"\n                    data={orgs.data.data}\n                    legend={orgs.data.legend}\n                    history={history}\n                    colorFunc={colorFunc}\n                    yLabel={chartMapper[activeTabKey].label}\n                    onClick={chartMapper[activeTabKey].onClick(\n                      toJobExplorer,\n                      queryParams\n                    )}\n                    TooltipClass={chartMapper[activeTabKey].tooltip}\n                  />\n                )}\n              </CardBody>\n            </Card>\n          </GridItem>\n          <GridItem span={6}>\n            <Card>\n              <CardTitle>\n                <h2>Job Runs by Organization</h2>\n              </CardTitle>\n              <Divider />\n              <CardBody>\n                {jobs.isLoading && <LoadingState />}\n                {jobs.error && <ApiErrorState message={jobs.error.error} />}\n                {jobs.isSuccess && jobs.data.length <= 0 && <NoData />}\n                {jobs.isSuccess && jobs.data.length > 0 && (\n                  <PieChart\n                    margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                    id=\"d3-donut-1-chart-root\"\n                    data={jobs.data}\n                    colorFunc={colorFunc}\n                  />\n                )}\n              </CardBody>\n            </Card>\n          </GridItem>\n          <GridItem span={6}>\n            <Card>\n              <CardTitle>\n                <h2>Usage by Organization (Tasks)</h2>\n              </CardTitle>\n              <Divider />\n              <CardBody>\n                {tasks.isLoading && <LoadingState />}\n                {tasks.error && <ApiErrorState message={tasks.error.error} />}\n                {tasks.isSuccess && tasks.data.length <= 0 && <NoData />}\n                {tasks.isSuccess && tasks.data.length > 0 && (\n                  <PieChart\n                    margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                    id=\"d3-donut-2-chart-root\"\n                    data={tasks.data}\n                    colorFunc={colorFunc}\n                  />\n                )}\n              </CardBody>\n            </Card>\n          </GridItem>\n        </Grid>\n      );\n\n    return '';\n  };\n\n  return (\n    <>\n      <PageHeader>\n        <PageHeaderTitle title={'Organization Statistics'} />\n        <FilterableToolbar\n          categories={options.data}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      <Main>{renderContent()}</Main>\n    </>\n  );\n};\n\nOrganizationStatistics.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default OrganizationStatistics;\n","var pfmulti = [\n    '#06C',\n    '#4CB140',\n    '#009596',\n    '#5752D1',\n    '#F4C145',\n    '#EC7A08',\n    '#8BC1F7',\n    '#23511E',\n    '#A2D9D9',\n    '#2A265F',\n    '#F9E0A2',\n    '#8F4700',\n    '#002F5D',\n];\nexport { pfmulti };\n","import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { Card, CardBody } from '@patternfly/react-core';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport Breadcrumbs from '../../../Components/Breadcrumbs';\n\nimport useApi from '../../../Utilities/useApi';\n\nimport { readPlanOptions } from '../../../Api/';\n\nimport Form from '../Shared/Form';\n\nimport { Paths } from '../../../paths';\n\nconst Add = () => {\n  const [options, setOptions] = useApi({});\n  useEffect(() => {\n    setOptions(readPlanOptions());\n  }, []);\n  const canWrite =\n    options.isSuccess &&\n    (options.data?.meta?.rbac?.perms?.write === true ||\n      options.data?.meta?.rbac?.perms?.all === true);\n  const title = 'Create new plan';\n\n  const showAdd = () => (\n    <>\n      <PageHeader>\n        <Breadcrumbs\n          items={[{ title: 'Savings Planner', navigate: '/savings-planner' }]}\n        />\n        <PageHeaderTitle title={title} />\n      </PageHeader>\n      <Main>\n        <Card>\n          <CardBody>\n            <Form title={title} options={options} />\n          </CardBody>\n        </Card>\n      </Main>\n    </>\n  );\n  if (options.isSuccess) {\n    return canWrite ? showAdd() : <Redirect to={Paths.savingsPlanner} />;\n  }\n  return null;\n};\n\nexport default Add;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { CardActions } from '@patternfly/react-core';\nimport styled from 'styled-components';\n\nconst CardActionsWrapper = styled.div`\n  margin-top: 20px;\n  --pf-c-card__actions--PaddingLeft: 0;\n`;\n\nconst CardActionsRow = ({ children }) => {\n  return (\n    <CardActionsWrapper>\n      <CardActions>{children}</CardActions>\n    </CardActionsWrapper>\n  );\n};\n\nCardActionsRow.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default CardActionsRow;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\nimport { Button, Badge, Alert, Tooltip } from '@patternfly/react-core';\nimport AlertModal from '../AlertModal';\nimport { getRelatedResourceDeleteCounts } from '../../Utilities/getRelatedResourceDeleteDetails';\nimport ErrorDetail from '../ErrorDetail';\n\nconst WarningMessage = styled(Alert)`\n  margin-top: 10px;\n`;\n\nconst Label = styled.span`\n  && {\n    margin-right: 10px;\n  }\n`;\n\nconst DeleteButton = ({\n  onConfirm,\n  modalTitle = 'Delete',\n  name = '',\n  variant = 'secondary',\n  isDisabled = false,\n  ouiaId = null,\n  deleteMessage = 'Delete?',\n  deleteDetailsRequests = [],\n  disabledTooltip = 'This item cannot be deleted',\n  children,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [deleteMessageError, setDeleteMessageError] = useState();\n  const [deleteDetails, setDeleteDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const toggleModal = async (isModalOpen) => {\n    setIsLoading(true);\n    if (deleteDetailsRequests.length > 0 && isModalOpen) {\n      const { results, error } = await getRelatedResourceDeleteCounts(\n        deleteDetailsRequests\n      );\n      if (error) {\n        setDeleteMessageError(error);\n      } else {\n        setDeleteDetails(results);\n      }\n    }\n    setIsLoading(false);\n    setIsOpen(isModalOpen);\n  };\n\n  if (deleteMessageError) {\n    return (\n      <AlertModal\n        isOpen={!!deleteMessageError}\n        variant={'error'}\n        title={'Error!'}\n        onClose={() => {\n          toggleModal(false);\n          setDeleteMessageError();\n        }}\n      >\n        <ErrorDetail error={deleteMessageError.detail} />\n      </AlertModal>\n    );\n  }\n\n  return (\n    <>\n      {disabledTooltip ? (\n        <Tooltip content={disabledTooltip} position=\"top\">\n          <div>\n            <Button\n              spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n              variant={variant || 'secondary'}\n              aria-label={'Delete'}\n              isDisabled={isDisabled}\n              onClick={() => toggleModal(true)}\n              ouiaId={ouiaId}\n            >\n              {children || 'Delete'}\n            </Button>\n          </div>\n        </Tooltip>\n      ) : (\n        <Button\n          ouiaId={ouiaId}\n          spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n          variant={variant || 'secondary'}\n          aria-label={'Delete'}\n          isDisabled={isDisabled}\n          onClick={() => toggleModal(true)}\n        >\n          {children || 'Delete'}\n        </Button>\n      )}\n      <AlertModal\n        isOpen={isOpen}\n        title={modalTitle}\n        variant=\"danger\"\n        onClose={() => toggleModal(false)}\n        actions={[\n          <Button\n            ouiaId=\"delete-modal-confirm\"\n            key=\"delete\"\n            variant=\"danger\"\n            aria-label={'Confirm Delete'}\n            isDisabled={isDisabled}\n            onClick={() => {\n              onConfirm();\n              toggleModal(false);\n            }}\n          >\n            {'Delete'}\n          </Button>,\n          <Button\n            ouiaId=\"delete-modal-cancel\"\n            key=\"cancel\"\n            variant=\"link\"\n            aria-label={'Cancel'}\n            onClick={() => toggleModal(false)}\n          >\n            {'Cancel'}\n          </Button>,\n        ]}\n      >\n        {'Are you sure you want to delete:'}\n        <br />\n        <strong>{name}</strong>\n        {Object.values(deleteDetails).length > 0 && (\n          <WarningMessage\n            variant=\"warning\"\n            isInline\n            title={\n              <div>\n                <div aria-label={deleteMessage}>{deleteMessage}</div>\n                <br />\n                {Object.entries(deleteDetails).map(([key, value]) => (\n                  <div aria-label={`${key}: ${value}`} key={key}>\n                    <Label>{key}</Label> <Badge>{value}</Badge>\n                  </div>\n                ))}\n              </div>\n            }\n          />\n        )}\n      </AlertModal>\n    </>\n  );\n};\n\nDeleteButton.propTypes = {\n  onConfirm: PropTypes.func.isRequired,\n  modalTitle: PropTypes.string,\n  name: PropTypes.string,\n  variant: PropTypes.object,\n  isDisabled: PropTypes.bool,\n  ouiaId: PropTypes.string,\n  deleteMessage: PropTypes.string,\n  deleteDetailsRequests: PropTypes.array,\n  disabledTooltip: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nexport default DeleteButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { shape, string, number, arrayOf, node, oneOfType } from 'prop-types';\nimport { Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst RoutedTabs = ({ tabsArray, defaultTabId }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const getActiveTabId = (defaultTabId) => {\n    return (\n      tabsArray.find((tab) => tab.link === location.pathname)?.id ||\n      defaultTabId\n    );\n  };\n\n  const handleTabSelect = (_, eventKey) => {\n    const match = tabsArray.find((tab) => tab.id === eventKey);\n    if (match) {\n      history.push(match.link);\n    }\n  };\n\n  return (\n    <Tabs activeKey={getActiveTabId(defaultTabId)} onSelect={handleTabSelect}>\n      {tabsArray.map((tab) => (\n        <Tab\n          aria-label={typeof tab.name === 'string' ? tab.name : `${tab.id} tab`}\n          eventKey={tab.id}\n          key={tab.id}\n          link={tab.link}\n          title={<TabTitleText>{tab.name}</TabTitleText>}\n          role=\"tab\"\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nRoutedTabs.propTypes = {\n  defaultTabId: PropTypes.number,\n  tabsArray: arrayOf(\n    shape({\n      id: number.isRequired,\n      link: string.isRequired,\n      name: oneOfType([string.isRequired, node.isRequired]),\n    })\n  ).isRequired,\n};\n\nRoutedTabs.defaultProps = {\n  defaultTabId: 1,\n};\n\nexport default RoutedTabs;\n","import React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\nimport { Paths } from '../../../../paths';\nimport { stringify } from 'query-string';\n\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { Button } from '@patternfly/react-core';\n\nimport {\n  CardBody as PFCardBody,\n  CardFooter,\n  DescriptionList,\n  DescriptionListTerm,\n  DescriptionListGroup,\n  DescriptionListDescription,\n  Divider as PFDivider,\n  Label,\n  List,\n  ListItem,\n} from '@patternfly/react-core';\nimport CardActionsRow from '../../../../Components/CardActionsRow';\nimport {\n  relatedResourceDeleteRequests,\n  getRelatedResourceDeleteCounts,\n} from '../../../../Utilities/getRelatedResourceDeleteDetails';\nimport { deletePlan, readPlan } from '../../../../Api/';\nimport useRequest, {\n  useDismissableError,\n} from '../../../../Utilities/useRequest';\nimport DeleteButton from '../../../../Components/DeleteButton/DeleteButton';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { formatDateTime } from '../../../../Utilities/helpers';\nimport RoutedTabs from '../../../../Components/RoutedTabs';\nimport AlertModal from '../../../../Components/AlertModal/AlertModal';\nimport ErrorDetail from '../../../../Components/ErrorDetail/ErrorDetail';\nimport JobStatus from '../../../../Components/JobStatus';\n\nconst CardBody = styled(PFCardBody)`\n  min-height: 500px;\n  padding: 0;\n  padding-bottom: 20px;\n\n  &:first-child {\n    padding-top: 0;\n  }\n`;\n\nconst Divider = styled(PFDivider)`\n  padding-top: 24px;\n`;\n\nconst DetailsTab = ({ tabsArray, plans, canWrite, options }) => {\n  const { pathname } = useLocation();\n  const history = useHistory();\n  const {\n    id,\n    automation_status,\n    category,\n    description,\n    frequency_period,\n    hosts,\n    manual_time,\n    modified,\n    name,\n    tasks,\n    template_details,\n    template_id,\n  } = plans[0];\n\n  const redirectToJobExplorer = (templateId) => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      quick_date_range: 'last_30_days',\n      status: ['failed', 'successful'],\n      template_id: [templateId],\n    };\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const showTemplate = (template_details) => {\n    if (!template_details.id) {\n      return;\n    }\n\n    return (\n      <a onClick={() => redirectToJobExplorer(template_details.id)}>\n        {template_details.name}\n      </a>\n    );\n  };\n\n  const renderOptionsBasedValue = (key, val) => {\n    const fromOptionsValue = (options.data[key] || []).find(\n      ({ key: apiValue }) => apiValue === val\n    );\n    return (fromOptionsValue || {}).value;\n  };\n\n  const labelsAndValues = {\n    Name: name || undefined,\n    'Automation type': category\n      ? renderOptionsBasedValue('category', category)\n      : undefined,\n    Description: description || undefined,\n    'Manual time': manual_time\n      ? renderOptionsBasedValue('manual_time', manual_time)\n      : undefined,\n    'Run on hosts': hosts || undefined,\n    Frequency: frequency_period\n      ? renderOptionsBasedValue('frequency_period', frequency_period)\n      : undefined,\n    Template: template_id ? showTemplate(template_details) : undefined,\n    'Last job status':\n      automation_status.status && automation_status.status !== 'None' ? (\n        <JobStatus status={automation_status.status} />\n      ) : (\n        <Label variant=\"outline\" color=\"red\" icon={<ExclamationCircleIcon />}>\n          Not Running\n        </Label>\n      ),\n    'Last updated': modified ? (\n      <span>{formatDateTime(modified)}</span>\n    ) : undefined,\n  };\n\n  const { request: deletePlans, error: deleteError } = useRequest(\n    useCallback(async () => {\n      await deletePlan({ id });\n      history.push(`/savings-planner`);\n    }, [id, history])\n  );\n\n  const {\n    result: { isDeleteDisabled },\n    error: deleteDetailsError,\n    request: fetchDeleteDetails,\n  } = useRequest(\n    useCallback(async () => {\n      const { results: deleteDetails, error } =\n        await getRelatedResourceDeleteCounts(\n          relatedResourceDeleteRequests.savingsPlan(plans[0], readPlan)\n        );\n      if (error) {\n        throw new Error(error);\n      }\n      if (deleteDetails) {\n        return { isDeleteDisabled: true };\n      }\n      return { isDeleteDisabled: false };\n    }, [plans[0]]),\n    { isDeleteDisabled: false }\n  );\n\n  useEffect(() => {\n    fetchDeleteDetails();\n  }, [fetchDeleteDetails]);\n  const { error, dismissError } = useDismissableError(\n    deleteError || deleteDetailsError\n  );\n\n  return (\n    <>\n      {plans && (\n        <>\n          <CardBody>\n            <RoutedTabs tabsArray={tabsArray} />\n            <div style={{ padding: '1rem' }}>\n              <DescriptionList isHorizontal columnModifier={{ lg: '3Col' }}>\n                {Object.keys(labelsAndValues).map(\n                  (key, i) =>\n                    labelsAndValues[key] !== undefined && (\n                      <DescriptionListGroup key={i}>\n                        <DescriptionListTerm>{key}</DescriptionListTerm>\n                        <DescriptionListDescription>\n                          {labelsAndValues[key]}\n                        </DescriptionListDescription>\n                      </DescriptionListGroup>\n                    )\n                )}\n              </DescriptionList>\n              {tasks.length > 0 && (\n                <DescriptionList>\n                  <Divider component=\"div\" />\n                  <DescriptionListGroup key={tasks}>\n                    <DescriptionListTerm>Tasks</DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <List component=\"ol\" type=\"1\">\n                        {tasks.map(({ id, task }) => (\n                          <ListItem key={id}>{task}</ListItem>\n                        ))}\n                      </List>\n                    </DescriptionListDescription>\n                  </DescriptionListGroup>\n                </DescriptionList>\n              )}\n            </div>\n          </CardBody>\n          {canWrite && (\n            <CardFooter>\n              <CardActionsRow>\n                <Button\n                  key=\"edit-plan-button\"\n                  variant=\"primary\"\n                  aria-label=\"Edit plan\"\n                  onClick={() => {\n                    history.push({\n                      pathname: `${pathname.split('/details')[0]}/edit`,\n                    });\n                  }}\n                >\n                  Edit\n                </Button>\n                <DeleteButton\n                  key={'delete-plan-button'}\n                  name={name}\n                  modalTitle={'Delete Plan'}\n                  onConfirm={deletePlans}\n                  disabledTooltip={\n                    isDeleteDisabled && 'This plan cannot be deleted'\n                  }\n                >\n                  {'Delete'}\n                </DeleteButton>\n              </CardActionsRow>\n              {error && (\n                <AlertModal\n                  isOpen={!!error}\n                  onClose={dismissError}\n                  title={'Error'}\n                  variant=\"error\"\n                >\n                  <ErrorDetail error={error.detail} />\n                </AlertModal>\n              )}\n            </CardFooter>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nDetailsTab.propTypes = {\n  plans: PropTypes.array,\n  tabsArray: PropTypes.array,\n  canWrite: PropTypes.bool.isRequired,\n  options: PropTypes.object.isRequired,\n};\n\nexport default DetailsTab;\n","var hoursFormatter = function (n) {\n    return (+n.toFixed(0)).toLocaleString() + \" hours\";\n}; /* 2,500 hours */\nexport default hoursFormatter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle, Title } from '@patternfly/react-core';\nimport currencyFormatter from '../../../../../Utilities/currencyFormatter';\nimport hoursFormatter from '../../../../../Utilities/hoursFormatter';\nvar TotalSavings = function (_a) {\n    var _b = _a.value, value = _b === void 0 ? 0 : _b, _c = _a.isMoney, isMoney = _c === void 0 ? true : _c;\n    return (React.createElement(Card, { isPlain: true },\n        React.createElement(CardTitle, { style: { paddingBottom: '0' } }, \"Total savings\"),\n        React.createElement(CardBody, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"4xl\", style: { color: isMoney ? '#81C46B' : '#0063CF' } }, isMoney ? \"\" + currencyFormatter(value) : \"\" + hoursFormatter(value)))));\n};\nTotalSavings.propTypes = {\n    value: PropTypes.number,\n    isMoney: PropTypes.bool,\n};\nexport default TotalSavings;\n","import React, { useState } from 'react';\nimport { Button, ButtonVariant, CodeBlock, CodeBlockCode, Modal, ModalVariant, } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nvar CostsText = function () { return (React.createElement(React.Fragment, null,\n    React.createElement(\"p\", null,\n        React.createElement(\"strong\", null, \"Cost\")),\n    React.createElement(\"p\", null, \"The cost includes the hours spent in implementation, deployment, training and other expenditures for creating, maintaining and running the automation. These hours (cost of investment) are usually higher at the onset, and will be greatly reduced once the automation has been created and only maintenance is required.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"For the initial period and the first year, we assume approximately 10 hours spent on each host, as well as some buffer time and a 40% risk adjustment to account for unforeseen situations.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"For the next two years after the first year, we assume 4 hours spent on each host, as well as a 40% risk adjustment to account for unforeseen situations.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate cost for the initial period and year 1:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"C1 = (time for a manual run on one host in hours * 10) + buffer time\\nC2 = C1 * 40% risk adjustment\\ninitial cost = (C1 + C2) * (cost per hour in USD if applicable, based on display)\\nyear 1 cost = (C1 + C2) * (cost per hour in USD if applicable, based on display)\")),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate cost for years 2 and 3:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"C1 = (time for a manual run on one host in hours * 4)\\nC2 = C1 * 40% risk adjustment\\nyear 2 cost = (C1 + C2) * (cost per hour in USD if applicable, based on display)\\nyear 3 cost = (C1 + C2) * (cost per hour in USD if applicable, based on display)\")))); };\nvar SavingsText = function () { return (React.createElement(React.Fragment, null,\n    React.createElement(\"p\", null,\n        React.createElement(\"strong\", null, \"Savings\")),\n    React.createElement(\"p\", null, \"The savings indicates the time and money saved as a result of automating the plan.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"We assume 50% productivity recapture to account for the productivity that is usually gained by repeated manual implementation of a task over a period of time. We also add a -5% risk adjustment for unforeseen situations that might arise and need to be handled. We also assume a 15% year over year growth in savings.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"Money savings for the initial period is 0, so there is no formula necessary.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate savings for year 0:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"initial period savings = 0 - initial cost\")),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used for savings for year 1:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"S1 = (number of hosts * (manual time in minutes / 60) * yearly frequency of automation)\\nS2 = S1 * 50% productivity recapture\\nS3 = S2 * 5% risk adjustment * (cost per hour in USD if applicable, based on display)\\nyear 1 savings = S2 - S3 - year 1 cost\")),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate savings for year 2:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"S1 = year 1 savings * 15% growth\\nyear 2 savings = year 1 savings + S1 - year 2 cost\")),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate savings for year 3:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"S2 = year 2 savings * 15% growth\\nyear 3 savings = year 2 savings + S2 - year 3 cost\")))); };\nvar FormulaDescription = function () {\n    var _a = useState(false), isOpen = _a[0], setIsOpen = _a[1];\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Button, { variant: \"link\", onClick: function () { return setIsOpen(true); }, icon: React.createElement(InfoCircleIcon, null) }, \"Automation formula\"),\n        React.createElement(Modal, { title: \"Automation formula\", isOpen: isOpen, onClose: function () { return setIsOpen(false); }, variant: ModalVariant.medium, actions: [\n                React.createElement(Button, { key: \"cancel\", variant: ButtonVariant.primary, onClick: function () { return setIsOpen(false); } }, \"Close\"),\n            ] },\n            React.createElement(\"p\", null, \"We use risk-adjusted factors to create the 3-year projection of cost and savings related to automation. While we aim to provide as accurate an account of the cost and savings as possible, actual values may differ in practice. The following information breaks down where we get the data, the risk-adjustment factors we use, the assumptions we make, and the formula used to compute the values as displayed in the chart.\"),\n            React.createElement(\"br\", null),\n            React.createElement(CostsText, null),\n            React.createElement(\"br\", null),\n            React.createElement(SavingsText, null))));\n};\nexport default FormulaDescription;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardActions, CardBody, CardHeader, CardTitle, Grid, GridItem, List, ListItem, ToggleGroup, ToggleGroupItem, } from '@patternfly/react-core';\nimport { SquareFullIcon } from '@patternfly/react-icons';\nimport ChartRenderer, { functions, ChartKind, ChartThemeColor, ChartType, ChartTopLevelType, ApiType, } from 'react-json-chart-builder';\nimport RoutedTabs from '../../../../Components/RoutedTabs';\nimport TotalSavings from './TotalSavings';\nimport FormulaDescription from './FormulaDescription';\nimport currencyFormatter from '../../../../Utilities/currencyFormatter';\nimport hoursFormatter from '../../../../Utilities/hoursFormatter';\nvar yearLabels = {\n    initial: 'Initial',\n    year1: 'Year 1',\n    year2: 'Year 2',\n    year3: 'Year 3',\n};\nvar getChartData = function (data) {\n    var statsData = Object.keys(yearLabels).map(function (year) { return ({\n        year: yearLabels[year],\n        total_costs: +data.projections.monetary_stats.total_costs[year] * -1,\n        total_benefits: +data.projections.monetary_stats.total_benefits[year],\n        cumulative_net_benefits: +data.projections.monetary_stats.cumulative_net_benefits[year],\n        total_hours_spent_risk_adjusted: +data.projections.time_stats.total_hours_spent_risk_adjusted[year] * -1,\n        total_hours_saved: +data.projections.time_stats.total_hours_saved[year],\n        cumulative_time_net_benefits: +data.projections.time_stats.cumulative_time_net_benefits[year],\n    }); });\n    return { items: statsData, type: ApiType.nonGrouped, response_type: '' };\n};\nvar constants = function (isMoney) { return ({\n    cost: {\n        key: isMoney ? 'total_costs' : 'total_hours_spent_risk_adjusted',\n        color: '#8B8D8F',\n    },\n    benefit: {\n        key: isMoney ? 'total_benefits' : 'total_hours_saved',\n        color: isMoney ? '#81C46B' : '#0063CF',\n    },\n    net: {\n        key: isMoney ? 'cumulative_net_benefits' : 'cumulative_time_net_benefits',\n        color: '#EE7A00',\n    },\n}); };\nvar StatisticsTab = function (_a) {\n    var tabsArray = _a.tabsArray, data = _a.data;\n    var _b = useState(true), isMoney = _b[0], setIsMoney = _b[1];\n    var customTooltipFormatting = function (datum) {\n        return isMoney ? currencyFormatter(+datum.y) : hoursFormatter(+datum.y);\n    };\n    var computeTotalSavings = function (d) {\n        return isMoney\n            ? d.projections.monetary_stats.cumulative_net_benefits.year3\n            : d.projections.time_stats.cumulative_time_net_benefits.year3;\n    };\n    var barChartData = {\n        charts: [\n            {\n                id: 1000,\n                kind: ChartKind.wrapper,\n                type: ChartTopLevelType.chart,\n                parent: null,\n                props: {\n                    height: 600,\n                    domainPadding: {\n                        x: 100,\n                    },\n                    padding: {\n                        bottom: 60,\n                        left: 80,\n                    },\n                    themeColor: ChartThemeColor.gray,\n                },\n                tooltip: {\n                    cursor: true,\n                    stickToAxis: 'x',\n                    mouseFollow: true,\n                    legendTooltip: {\n                        legendData: [\n                            {\n                                childName: constants(isMoney).benefit.key,\n                                name: 'Savings',\n                                symbol: {\n                                    fill: constants(isMoney).benefit.color,\n                                },\n                            },\n                            {\n                                childName: constants(isMoney).cost.key,\n                                name: 'Costs',\n                                symbol: {\n                                    fill: constants(isMoney).cost.color,\n                                },\n                            },\n                            {\n                                childName: constants(isMoney).net.key,\n                                name: 'Cumulative savings',\n                                symbol: {\n                                    fill: constants(isMoney).net.color,\n                                },\n                            },\n                        ],\n                        titleProperyForLegend: 'year',\n                    },\n                    customFnc: customTooltipFormatting,\n                },\n                xAxis: {\n                    label: 'Time',\n                },\n                yAxis: {\n                    label: isMoney ? 'Money Saved' : 'Hours Saved',\n                    tickFormat: 'formatNumberAsK',\n                    style: {\n                        grid: { stroke: '#D2D2D2' },\n                        axisLabel: { padding: 60 },\n                    },\n                },\n            },\n            {\n                id: 1001,\n                kind: ChartKind.stack,\n                parent: 1000,\n                props: {},\n            },\n            {\n                id: 1102,\n                kind: ChartKind.simple,\n                type: ChartType.bar,\n                name: constants(isMoney).benefit.key,\n                parent: 1001,\n                props: {\n                    x: 'year',\n                    y: constants(isMoney).benefit.key,\n                    barRatio: 0.8,\n                    barWidth: 0,\n                    style: {\n                        data: {\n                            fill: constants(isMoney).benefit.color,\n                            width: 120,\n                        },\n                    },\n                },\n                tooltip: {\n                    labelName: '',\n                },\n            },\n            {\n                id: 1101,\n                kind: ChartKind.simple,\n                type: ChartType.bar,\n                name: constants(isMoney).cost.key,\n                parent: 1001,\n                props: {\n                    x: 'year',\n                    y: constants(isMoney).cost.key,\n                    barRatio: 0.8,\n                    barWidth: 0,\n                    style: {\n                        data: {\n                            fill: constants(isMoney).cost.color,\n                            width: 120,\n                        },\n                    },\n                },\n                tooltip: {\n                    labelName: '',\n                },\n            },\n            {\n                id: 1002,\n                kind: ChartKind.simple,\n                type: ChartType.line,\n                name: constants(isMoney).net.key,\n                parent: 1000,\n                props: {\n                    x: 'year',\n                    y: constants(isMoney).net.key,\n                    style: {\n                        data: {\n                            stroke: constants(isMoney).net.color,\n                            strokeWidth: 5,\n                        },\n                    },\n                },\n                tooltip: {\n                    labelName: '',\n                },\n            },\n        ],\n        functions: __assign(__assign({}, functions), { fetchFnc: function () {\n                return new Promise(function (resolve) {\n                    resolve(getChartData(data));\n                });\n            } }),\n    };\n    var renderLeft = function () { return (React.createElement(Card, { isPlain: true },\n        React.createElement(CardHeader, null,\n            React.createElement(CardActions, null,\n                React.createElement(ToggleGroup, { \"aria-label\": \"toggleButton\" },\n                    React.createElement(ToggleGroupItem, { text: \"Money\", buttonId: \"money\", isSelected: isMoney, onChange: function () { return setIsMoney(true); } }),\n                    React.createElement(ToggleGroupItem, { text: \"Time\", buttonId: \"time\", isSelected: !isMoney, onChange: function () { return setIsMoney(false); } }))),\n            React.createElement(CardTitle, null, data.name)),\n        React.createElement(CardBody, null,\n            React.createElement(ChartRenderer, { schema: barChartData.charts, functions: barChartData.functions })))); };\n    var renderRight = function () { return (React.createElement(React.Fragment, null,\n        React.createElement(TotalSavings, { value: computeTotalSavings(data), isMoney: isMoney }),\n        React.createElement(Card, { isPlain: true },\n            React.createElement(CardBody, null,\n                React.createElement(List, { isPlain: true },\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).benefit.color }) }, \"Savings from automating this plan\"),\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).cost.color }) }, \"Costs from creating, maintaining and running the automation\"),\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).net.color }) }, \"Cumulative savings over time\")))),\n        React.createElement(FormulaDescription, null))); };\n    return (React.createElement(Card, null,\n        React.createElement(RoutedTabs, { tabsArray: tabsArray }),\n        React.createElement(Grid, null,\n            React.createElement(GridItem, { span: 9 }, renderLeft()),\n            React.createElement(GridItem, { span: 3 }, renderRight()))));\n};\nStatisticsTab.propTypes = {\n    /* eslint-disable-next-line */\n    /* @ts-ignore: Validation error */\n    data: PropTypes.object.isRequired,\n    tabsArray: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        link: PropTypes.string.isRequired,\n        name: PropTypes.node.isRequired,\n    }).isRequired).isRequired,\n};\nexport default StatisticsTab;\n","import React, { useEffect } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport useApi from '../../../Utilities/useApi';\n\nimport { readPlanOptions } from '../../../Api/';\nimport { Paths } from '../../../paths';\n\nimport Form from '../Shared/Form';\n\nconst Edit = ({ data }) => {\n  const [options, setOptions] = useApi({});\n  const { id } = useParams();\n\n  useEffect(() => {\n    setOptions(readPlanOptions());\n  }, []);\n\n  const canWrite =\n    options.isSuccess &&\n    (options.data?.meta?.rbac?.perms?.write === true ||\n      options.data?.meta?.rbac?.perms?.all === true);\n\n  const showEdit = () => (\n    <>\n      <Form title=\"Edit plan\" options={options} data={data} />\n    </>\n  );\n\n  if (options.isSuccess) {\n    return canWrite ? (\n      showEdit()\n    ) : (\n      <Redirect to={`${Paths.savingsPlanner}/${id}`} />\n    );\n  }\n  return null;\n};\n\nEdit.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default Edit;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, useLocation, Route, Switch } from 'react-router-dom';\nimport { CaretLeftIcon } from '@patternfly/react-icons';\nimport { Card } from '@patternfly/react-core';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\n\nimport DetailsTab from './DetailsTab';\nimport StatisticsTab from './StatisticsTab';\nimport SavingsPlanner from '../List';\nimport ApiErrorState from '../../../Components/ApiErrorState';\nimport { notAuthorizedParams } from '../../../Utilities/constants';\n\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nimport Breadcrumbs from '../../../Components/Breadcrumbs';\n\nimport { preflightRequest, readPlan, readPlanOptions } from '../../../Api/';\n\nimport useApi from '../../../Utilities/useApi';\n\nimport SavingsPlanEdit from '../Edit';\n\nconst Details = () => {\n  const { id } = useParams();\n  const { state: locationState } = useLocation();\n  const [preflightError, setPreFlightError] = useState(null);\n  let pageTitle = 'Details';\n  let onEdit = false;\n  if (locationState?.reload) {\n    onEdit = true;\n  }\n  if (location.pathname.indexOf('/statistics') !== -1) {\n    pageTitle = 'Statistics';\n  } else if (location.pathname.indexOf('/edit') !== -1) {\n    pageTitle = 'Edit plan';\n  }\n  const [selectedId, setSelectedId] = useState(id);\n  const [\n    {\n      isSuccess,\n      error,\n      data: { rbac = {}, items: plans = [] },\n    },\n    setData,\n  ] = useApi({ rbac: {}, items: [] });\n  const [options, setOptions] = useApi({});\n  const queryParams = { id: [selectedId] };\n\n  useEffect(() => {\n    setSelectedId(id);\n    preflightRequest().catch((error) => {\n      setPreFlightError({ preflightError: error });\n    });\n    const fetchEndpoints = () => {\n      setData(readPlan({ params: queryParams }));\n      setOptions(readPlanOptions());\n    };\n\n    fetchEndpoints();\n  }, [locationState]);\n\n  const canWrite =\n    isSuccess && (rbac.perms?.write === true || rbac.perms?.all === true);\n  const tabsArray = [\n    {\n      id: 0,\n      name: (\n        <>\n          <CaretLeftIcon />\n          {'Back to Plans'}\n        </>\n      ),\n      link: `/savings-planner`,\n    },\n    { id: 1, name: 'Details', link: `/savings-planner/${selectedId}/details` },\n    {\n      id: 2,\n      name: 'Statistics',\n      link: `/savings-planner/${selectedId}/statistics`,\n    },\n  ];\n\n  const breadcrumbUrl = `/savings-planner/${selectedId}`;\n  const breadcrumbsItems = isSuccess\n    ? [\n        { title: 'Savings Planner', navigate: '/savings-planner' },\n        { title: plans[0].name, navigate: breadcrumbUrl },\n      ]\n    : [];\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n  return (\n    <>\n      {error && (\n        <>\n          <ApiErrorState message={error.error} />\n        </>\n      )}\n      {isSuccess && options.isSuccess && (\n        <>\n          <PageHeader>\n            <Breadcrumbs items={breadcrumbsItems} />\n            <PageHeaderTitle title={pageTitle} />\n          </PageHeader>\n          <Main>\n            <Card>\n              <Switch>\n                <Route path=\"/savings-planner/:id/statistics\">\n                  <StatisticsTab\n                    tabsArray={tabsArray}\n                    data={plans[0]}\n                    queryParams={queryParams}\n                  />\n                </Route>\n                {!onEdit && (\n                  <Route path=\"/savings-planner/:id/details\">\n                    <DetailsTab\n                      plans={plans}\n                      tabsArray={tabsArray}\n                      canWrite={canWrite}\n                      options={options}\n                    />\n                  </Route>\n                )}\n                <Route path=\"/savings-planner/:id/edit\">\n                  <SavingsPlanEdit data={plans[0]} />\n                </Route>\n                <Route path=\"/savings-planner/:id\">\n                  <DetailsTab\n                    plans={plans}\n                    tabsArray={tabsArray}\n                    canWrite={canWrite}\n                    options={options}\n                  />\n                </Route>\n                <Route exact path=\"/savings-planner\">\n                  <SavingsPlanner />\n                </Route>\n              </Switch>\n            </Card>\n          </Main>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Details;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Title,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Button,\n} from '@patternfly/react-core';\nimport { AddCircleOIcon, SearchIcon } from '@patternfly/react-icons';\nimport { useHistory } from 'react-router-dom';\n\nconst EmptyList = ({\n  label = '',\n  title = 'No items found.',\n  message = '',\n  canAdd = false,\n  path,\n}) => {\n  const history = useHistory();\n\n  return (\n    <EmptyState variant=\"full\">\n      <EmptyStateIcon icon={canAdd ? AddCircleOIcon : SearchIcon} />\n      <Title size=\"lg\" headingLevel=\"h3\">\n        {title}\n      </Title>\n      <EmptyStateBody>{message}</EmptyStateBody>\n      {canAdd && (\n        <Button\n          key=\"add-item-button\"\n          variant=\"primary\"\n          aria-label={label}\n          onClick={() => {\n            history.push({\n              pathname: path,\n            });\n          }}\n        >\n          {label}\n        </Button>\n      )}\n    </EmptyState>\n  );\n};\n\nEmptyList.propTypes = {\n  canAdd: PropTypes.bool,\n  label: PropTypes.string,\n  message: PropTypes.string,\n  title: PropTypes.string,\n  path: PropTypes.string.isRequired,\n};\n\nexport default EmptyList;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {\n  Card,\n  CardHeader,\n  CardHeaderMain,\n  CardActions,\n  CardTitle as PFCardTitle,\n  CardBody,\n  CardFooter,\n  Checkbox as PFCheckbox,\n  Dropdown,\n  DropdownItem,\n  KebabToggle,\n  Label,\n} from '@patternfly/react-core';\n\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport styled from 'styled-components';\nimport { stringify } from 'query-string';\n\nimport { Link, useRouteMatch } from 'react-router-dom';\n\nimport { Paths } from '../../../../paths';\n\nimport currencyFormatter from '../../../../Utilities/currencyFormatter';\nimport { formatDateTime } from '../../../../Utilities/helpers';\n\nimport JobStatus from '../../../../Components/JobStatus';\n\nconst CardTitle = styled(PFCardTitle)`\n  word-break: break-word;\n`;\n\nconst CardLabel = styled.span`\n  margin-right: 5px;\n  font-weight: bold;\n`;\n\nconst Small = styled.small`\n  display: block;\n  margin-bottom: 10px;\n  color: #6a6e73;\n`;\n\nconst Checkbox = styled(PFCheckbox)`\n  &.pf-c-check.pf-m-standalone {\n    margin-top: -3px;\n  }\n`;\n\nconst CardDetail = styled.div`\n  display: flex;\n  min-height: 30px;\n  align-items: center;\n`;\n\nconst ListItem = ({\n  isSuccess,\n  plan,\n  selected = [],\n  handleSelect = () => {},\n  canWrite,\n  options,\n}) => {\n  const {\n    id,\n    automation_status,\n    category,\n    description,\n    frequency_period,\n    modified,\n    name,\n    template_details,\n    projections,\n  } = plan;\n\n  const projectedSavings =\n    projections?.monetary_stats?.cumulative_net_benefits?.year3;\n\n  const [isCardKebabOpen, setIsCardKebabOpen] = useState(false);\n  const match = useRouteMatch();\n  let history = useHistory();\n\n  const redirectToJobExplorer = (templateId) => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      quick_date_range: 'last_30_days',\n      status: ['failed', 'successful'],\n      template_id: [templateId],\n    };\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const renderTemplateLink = (template) => {\n    return template && isSuccess ? (\n      <a onClick={() => redirectToJobExplorer(template.id)}>{template.name}</a>\n    ) : null;\n  };\n\n  const renderOptionsBasedValue = (key, val) => {\n    return options.data[key].find(({ key: apiValue }) => apiValue === val)\n      .value;\n  };\n\n  const kebabDropDownItems = [\n    <React.Fragment key={id}>\n      <DropdownItem\n        key=\"edit\"\n        onClick={() => history.push(`${match.url}/${id}/edit`)}\n        position=\"right\"\n      >\n        Edit\n      </DropdownItem>\n      <DropdownItem\n        key=\"link\"\n        onClick={() => history.push(`${match.url}/${id}/edit#tasks`)}\n        position=\"right\"\n      >\n        Manage tasks\n      </DropdownItem>\n      <DropdownItem\n        key=\"link\"\n        onClick={() => history.push(`${match.url}/${id}/edit#link_template`)}\n        position=\"right\"\n      >\n        Link template\n      </DropdownItem>\n    </React.Fragment>,\n  ];\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardHeaderMain>\n          <CardTitle>\n            <Link to={`${match.url}/${id}`}>{name}</Link>\n          </CardTitle>\n        </CardHeaderMain>\n        {canWrite && (\n          <CardActions>\n            <Dropdown\n              onSelect={() => {}}\n              toggle={\n                <KebabToggle\n                  onToggle={() => setIsCardKebabOpen(!isCardKebabOpen)}\n                />\n              }\n              isOpen={isCardKebabOpen}\n              isPlain\n              dropdownItems={kebabDropDownItems}\n              position={'right'}\n            />\n            <Checkbox\n              onChange={() => handleSelect(plan)}\n              isChecked={selected.some((row) => row.id === plan.id)}\n              aria-label=\"card checkbox\"\n              id=\"check-1\"\n              name=\"check1\"\n            />\n          </CardActions>\n        )}\n      </CardHeader>\n      <CardBody>\n        {description ? <Small>{description}</Small> : null}\n        <CardDetail>\n          <CardLabel>Frequency</CardLabel>{' '}\n          {frequency_period ? (\n            renderOptionsBasedValue('frequency_period', frequency_period)\n          ) : (\n            <span>None</span>\n          )}\n        </CardDetail>\n        <CardDetail>\n          <CardLabel>Template</CardLabel>{' '}\n          {Object.keys(template_details || {}).length !== 0 ? (\n            renderTemplateLink(template_details)\n          ) : (\n            <span>\n              None -{' '}\n              <a\n                onClick={() =>\n                  history.push(`${match.url}/${id}/edit#link_template`)\n                }\n              >\n                Link template\n              </a>\n            </span>\n          )}\n        </CardDetail>\n        <CardDetail>\n          <CardLabel>Last job status</CardLabel>\n          {automation_status.status !== 'None' ? (\n            <JobStatus status={automation_status.status} />\n          ) : (\n            <Label\n              variant=\"outline\"\n              color=\"red\"\n              icon={<ExclamationCircleIcon />}\n            >\n              Not Running\n            </Label>\n          )}\n        </CardDetail>\n        {projectedSavings && (\n          <CardDetail>\n            <CardLabel>Projected savings</CardLabel>\n            <a onClick={() => history.push(`${match.url}/${id}/statistics`)}>\n              {currencyFormatter(+projectedSavings)}\n            </a>\n          </CardDetail>\n        )}\n        <CardDetail>\n          <CardLabel>Last updated</CardLabel>{' '}\n          <span>{formatDateTime(modified)}</span>\n        </CardDetail>\n      </CardBody>\n      <CardFooter>\n        <Label>{renderOptionsBasedValue('category', category)}</Label>\n      </CardFooter>\n    </Card>\n  );\n};\n\nListItem.propTypes = {\n  isSuccess: PropTypes.bool.isRequired,\n  canWrite: PropTypes.bool.isRequired,\n  selected: PropTypes.array,\n  handleSelect: PropTypes.func,\n  plan: PropTypes.object,\n  options: PropTypes.object,\n};\n\nexport default ListItem;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport AlertModal from '../AlertModal';\n\nimport { getRelatedResourceDeleteCounts } from '../../Utilities/getRelatedResourceDeleteDetails';\n\nimport ErrorDetail from '../ErrorDetail';\n\nconst requiredField = (props) => {\n  const { name, username, image } = props;\n  if (!name && !username && !image) {\n    return new Error(\n      `One of 'name', 'username' or 'image' is required by ItemToDelete component.`\n    );\n  }\n  if (name) {\n    PropTypes.checkPropTypes(\n      {\n        name: PropTypes.string,\n      },\n      { name: props.name },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  if (username) {\n    PropTypes.checkPropTypes(\n      {\n        username: PropTypes.string,\n      },\n      { username: props.username },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  if (image) {\n    PropTypes.checkPropTypes(\n      {\n        image: PropTypes.string,\n      },\n      { image: props.image },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  return null;\n};\n\nconst ToolbarDeleteButton = ({\n  itemsToDelete,\n  pluralizedItemName = 'Items',\n  onDelete,\n  errorMessage = 'Error while deleting',\n  deleteDetailsRequests = [],\n  cannotDelete = (item) => !item,\n}) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [deleteDetails, setDeleteDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [deleteMessageError, setDeleteMessageError] = useState('');\n  const handleDelete = () => {\n    onDelete();\n    toggleModal();\n  };\n\n  const toggleModal = async (isOpen) => {\n    setIsLoading(true);\n    setDeleteDetails(null);\n    if (\n      isOpen &&\n      itemsToDelete.length === 1 &&\n      deleteDetailsRequests?.length > 0\n    ) {\n      const { results, error } = await getRelatedResourceDeleteCounts(\n        deleteDetailsRequests\n      );\n\n      if (error) {\n        setDeleteMessageError(error);\n      } else {\n        setDeleteDetails(results);\n      }\n    }\n    setIsLoading(false);\n    setIsModalOpen(isOpen);\n  };\n\n  const renderTooltip = () => {\n    const itemsUnableToDelete = itemsToDelete\n      .filter(cannotDelete)\n      .map((item) => item.name || item.username)\n      .join(', ');\n\n    if (itemsToDelete.some(cannotDelete)) {\n      return (\n        <div>\n          {errorMessage ? (\n            <>\n              <span>{errorMessage}</span>\n              <span>{`: ${itemsUnableToDelete}`}</span>\n            </>\n          ) : (\n            `You do not have permission to delete ${pluralizedItemName}: ${itemsUnableToDelete}`\n          )}\n        </div>\n      );\n    }\n    if (itemsToDelete.length) {\n      return 'Delete';\n    }\n    return 'Select a plan to delete';\n  };\n\n  const modalTitle = `Delete ${pluralizedItemName}?`;\n\n  const isDisabled =\n    itemsToDelete.length === 0 || itemsToDelete.some(cannotDelete);\n\n  if (deleteMessageError) {\n    return (\n      <AlertModal\n        isOpen={!!deleteMessageError}\n        title={'Error!'}\n        onClose={() => {\n          toggleModal(false);\n          setDeleteMessageError();\n        }}\n      >\n        <ErrorDetail error={deleteMessageError.detail} />\n      </AlertModal>\n    );\n  }\n\n  return (\n    <>\n      <Tooltip content={renderTooltip()} position=\"top\">\n        <div>\n          <Button\n            variant=\"secondary\"\n            ouiaId=\"delete-button\"\n            spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n            aria-label={'Delete'}\n            onClick={() => toggleModal(true)}\n            isDisabled={isDisabled}\n          >\n            {'Delete'}\n          </Button>\n        </div>\n      </Tooltip>\n\n      {isModalOpen && (\n        <AlertModal\n          variant=\"danger\"\n          title={modalTitle}\n          isOpen={isModalOpen}\n          onClose={() => toggleModal(false)}\n          actions={[\n            <Button\n              ouiaId=\"delete-modal-confirm\"\n              key=\"delete\"\n              variant=\"danger\"\n              aria-label={'confirm delete'}\n              isDisabled={Boolean(deleteDetails)}\n              onClick={handleDelete}\n            >\n              {'Delete'}\n            </Button>,\n            <Button\n              key=\"cancel\"\n              variant=\"link\"\n              aria-label={'cancel delete'}\n              onClick={() => toggleModal(false)}\n            >\n              {'Cancel'}\n            </Button>,\n          ]}\n        >\n          <div>{'This action will delete the following:'}</div>\n          {itemsToDelete.map((item) => (\n            <span key={item.id}>\n              <strong>{item.name || item.username || item.image}</strong>\n              <br />\n            </span>\n          ))}\n        </AlertModal>\n      )}\n    </>\n  );\n};\n\nToolbarDeleteButton.propTypes = {\n  itemsToDelete: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: requiredField,\n      username: requiredField,\n      image: requiredField,\n    })\n  ).isRequired,\n  pluralizedItemName: PropTypes.string,\n  onDelete: PropTypes.func.isRequired,\n  errorMessage: PropTypes.string,\n  warningMessage: PropTypes.node,\n  deleteDetailsRequests: PropTypes.array,\n  cannotDelete: PropTypes.func,\n  deleteMessage: PropTypes.string,\n};\n\nexport default ToolbarDeleteButton;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport { Button, Gallery, PaginationVariant } from '@patternfly/react-core';\n\nimport {\n  deletePlan,\n  preflightRequest,\n  readPlanOptions,\n  readPlans,\n} from '../../../Api/';\nimport FilterableToolbar from '../../../Components/Toolbar';\nimport ApiErrorState from '../../../Components/ApiErrorState';\nimport LoadingState from '../../../Components/LoadingState';\nimport EmptyState from '../../../Components/EmptyState';\nimport EmptyList from '../../../Components/EmptyList';\nimport Pagination from '../../../Components/Pagination';\nimport PlanCard from './ListItem';\nimport { useQueryParams } from '../../../Utilities/useQueryParams';\nimport useApi from '../../../Utilities/useApi';\nimport { savingsPlanner } from '../../../Utilities/constants';\nimport { notAuthorizedParams } from '../../../Utilities/constants';\n\nimport ToolbarDeleteButton from '../../../Components/Toolbar/ToolbarDeleteButton';\nimport useSelected from '../../../Utilities/useSelected';\nimport { useDeleteItems } from '../../../Utilities/useRequest';\nimport ErrorDetail from '../../../Components/ErrorDetail';\nimport AlertModal from '../../../Components/AlertModal';\n\nconst PageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 76px);\n`;\n\nconst Footer = styled.div`\n  flex-shrink: 0;\n`;\n\nconst FlexMain = styled(Main)`\n  flex-grow: 1;\n`;\n\nconst List = () => {\n  const history = useHistory();\n  const { pathname } = useLocation();\n\n  const { queryParams, setFromPagination, setFromToolbar } = useQueryParams(\n    savingsPlanner.defaultParams\n  );\n  const [\n    {\n      isLoading,\n      isSuccess,\n      error,\n      data: { meta = {}, items: data = [] },\n    },\n    setData,\n  ] = useApi({ meta: {}, items: [] });\n  const [options, setOptions] = useApi({});\n  const [preflightError, setPreFlightError] = useState(null);\n\n  const combinedOptions = {\n    ...options.data,\n    name: [{ key: 'name', value: null }],\n  };\n\n  const fetchEndpoints = () => {\n    preflightRequest().catch((error) => {\n      setPreFlightError({ preflightError: error });\n    });\n    setData(readPlans({ params: queryParams }));\n    setOptions(readPlanOptions());\n  };\n\n  useEffect(() => {\n    fetchEndpoints();\n  }, [queryParams]);\n\n  const canWrite =\n    options.isSuccess &&\n    (options.data?.meta?.rbac?.perms?.write === true ||\n      options.data?.meta?.rbac?.perms?.all === true);\n\n  const { selected, isAllSelected, handleSelect, setSelected } =\n    useSelected(data);\n\n  const {\n    isLoading: deleteLoading,\n    deletionError,\n    deleteItems: deleteItems,\n    clearDeletionError,\n  } = useDeleteItems(\n    useCallback(async () => {\n      return Promise.all(selected.map((plan) => deletePlan({ id: plan.id })));\n    }, [selected]),\n    {\n      qsConfig: queryParams,\n      allItemsSelected: isAllSelected,\n      fetchItems: fetchEndpoints,\n    }\n  );\n\n  const handleDelete = async () => {\n    await deleteItems();\n    setSelected([]);\n  };\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  const renderContent = () => {\n    if (preflightError) return <EmptyState {...preflightError} />;\n\n    if (error) return <ApiErrorState message={error.error} />;\n\n    if (isLoading || deleteLoading) return <LoadingState />;\n\n    if (isSuccess && data.length === 0 && !(isLoading || deleteLoading))\n      return (\n        <EmptyList\n          label={'Add plan'}\n          title={'No plans found'}\n          message={\n            canWrite\n              ? 'Update the applied filters or add a new plan.'\n              : 'Update the applied filters.'\n          }\n          canAdd={canWrite}\n          path={`${pathname}/add`}\n        />\n      );\n\n    if (isSuccess && !(isLoading || deleteLoading))\n      return (\n        <Gallery\n          hasGutter\n          minWidths={{\n            sm: '307px',\n            md: '307px',\n            lg: '307px',\n            xl: '307px',\n            '2xl': '307px',\n          }}\n        >\n          {options.isSuccess &&\n            data.map((datum) => (\n              <PlanCard\n                key={datum.id}\n                isSuccess={options.isSuccess}\n                selected={selected}\n                plan={datum}\n                handleSelect={handleSelect}\n                canWrite={canWrite}\n                options={options}\n              />\n            ))}\n        </Gallery>\n      );\n\n    return <></>;\n  };\n\n  return (\n    <PageContainer>\n      <PageHeader>\n        <PageHeaderTitle title={'Savings Planner'} />\n        <FilterableToolbar\n          categories={combinedOptions}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n          additionalControls={[\n            ...(canWrite\n              ? [\n                  <Button\n                    key=\"add-plan-button\"\n                    variant=\"primary\"\n                    aria-label=\"Add plan\"\n                    onClick={() => {\n                      history.push({\n                        pathname: `${pathname}/add`,\n                      });\n                    }}\n                  >\n                    Add plan\n                  </Button>,\n                ]\n              : []),\n            canWrite && isSuccess && data.length > 0 && (\n              <ToolbarDeleteButton\n                key=\"delete-plan-button\"\n                onDelete={handleDelete}\n                itemsToDelete={selected}\n                pluralizedItemName={'Savings plan'}\n              />\n            ),\n          ]}\n          pagination={\n            isSuccess && data.length > 0 ? (\n              <Pagination\n                count={meta?.total_count}\n                params={{\n                  limit: queryParams.limit,\n                  offset: queryParams.offset,\n                }}\n                setPagination={setFromPagination}\n                isCompact\n              />\n            ) : (\n              <div></div>\n            )\n          }\n        />\n      </PageHeader>\n      <FlexMain>{renderContent()}</FlexMain>\n      {data.length > 0 && !(isLoading || deleteLoading) && (\n        <Footer>\n          <Pagination\n            count={meta?.total_count}\n            params={{\n              limit: queryParams.limit,\n              offset: queryParams.offset,\n            }}\n            setPagination={setFromPagination}\n            variant={PaginationVariant.bottom}\n          />\n        </Footer>\n      )}\n      {deletionError && (\n        <AlertModal\n          aria-label={'Deletion error'}\n          isOpen={deletionError}\n          onClose={clearDeletionError}\n          title={'Error'}\n          variant=\"error\"\n        >\n          {'Failed to delete one or more plans.'}\n          <ErrorDetail error={deletionError.detail} />\n        </AlertModal>\n      )}\n    </PageContainer>\n  );\n};\n\nexport default List;\n","import { useState } from 'react';\n\n/**\n * useSelected hook provides a way to read and update a selected list\n * Param: array of list items\n * Returns: {\n *  selected: array of selected list items\n *  isAllSelected: boolean that indicates if all items are selected\n *  handleSelect: function that adds and removes items from selected list\n *  setSelected: setter function\n * }\n */\n\nexport default function useSelected(list = []) {\n  const [selected, setSelected] = useState([]);\n  const isAllSelected = selected.length > 0 && selected.length === list.length;\n\n  const handleSelect = (row) => {\n    if (selected.some((s) => s.id === row.id)) {\n      setSelected((prevState) => [...prevState.filter((i) => i.id !== row.id)]);\n    } else {\n      setSelected((prevState) => [...prevState, row]);\n    }\n  };\n  return { selected, isAllSelected, handleSelect, setSelected };\n}\n","export const actions = {\n  SET_NAME: 'SET_NAME',\n  SET_CATEGORY: 'SET_CATEGORY',\n  SET_DESCRIPTION: 'SET_DESCRIPTION',\n  SET_MANUAL_TIME: 'SET_MANUAL_TIME',\n  SET_HOSTS: 'SET_HOSTS',\n  SET_FREQUENCY_PERIOD: 'SET_FREQUENCY_PERIOD',\n  SET_TASKS: 'SET_TASKS',\n  SET_TEMPLATE_ID: 'SET_TEMPLATE_ID',\n};\n","import { useReducer } from 'react';\n\nimport { actions } from './constants';\n\nconst formatPayload = (data) => {\n  data.tasks = data.tasks.map((task, index) => ({\n    task,\n    task_order: index + 1,\n  }));\n\n  if (!data.hosts || data.hosts === '') {\n    data.hosts = 1;\n  }\n\n  // these two are fields the api expects but we don't\n  // have form elements for in the MVP.\n  data.hourly_rate = 50;\n  data.frequency_per_period = 1;\n\n  return data;\n};\n\nconst convertTasks = (tasks = []) => {\n  if (tasks?.length) {\n    return tasks\n      .sort((a, b) => a.task_order - b.task_order)\n      .map(({ task }) => task);\n  }\n  return undefined;\n};\n\nconst usePlanData = (initial) => {\n  const formReducer = (state, { type, value }) => {\n    switch (type) {\n      /* v1 api reducers */\n      case actions.SET_NAME:\n        return {\n          ...state,\n          name: value,\n        };\n      case actions.SET_CATEGORY:\n        return {\n          ...state,\n          category: value,\n        };\n      case actions.SET_DESCRIPTION:\n        return {\n          ...state,\n          description: value,\n        };\n      case actions.SET_MANUAL_TIME:\n        return {\n          ...state,\n          manual_time: value,\n        };\n\n      case actions.SET_HOSTS:\n        return {\n          ...state,\n          hosts: value,\n        };\n      case actions.SET_FREQUENCY_PERIOD:\n        return {\n          ...state,\n          frequency_period: value,\n        };\n      case actions.SET_TASKS:\n        return {\n          ...state,\n          tasks: value,\n        };\n      case actions.SET_TEMPLATE_ID:\n        return {\n          ...state,\n          template_id: value,\n        };\n      default:\n        throw new Error(\n          `usePlanData reducer action type ${type} was not found.`\n        );\n    }\n  };\n\n  const [formData, dispatch] = useReducer(formReducer, {\n    name: initial?.name || '',\n    category: initial?.category || 'system',\n    description: initial?.description || '',\n    manual_time: initial?.manual_time || 240,\n    hosts: initial?.hosts || 1,\n    frequency_period: initial?.frequency_period || 'weekly',\n    tasks: convertTasks(initial?.tasks) || [],\n    template_id: initial?.template_id || -2,\n  });\n\n  return {\n    formData,\n    requestPayload: formatPayload({ ...formData }),\n    dispatch,\n  };\n};\n\nexport default usePlanData;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Form,\n  FormGroup,\n  Grid,\n  Select,\n  SelectOption,\n  TextInput,\n} from '@patternfly/react-core';\n\nimport { actions } from '../../../constants';\n\nconst Details = ({ options, formData, dispatch }) => {\n  const { name, category, description, manual_time, hosts, frequency_period } =\n    formData;\n\n  const [categoryIsOpen, setCategoryIsOpen] = useState(false);\n  const [manualTimeIsOpen, setManualTimeIsOpen] = useState(false);\n  const [frequencyPeriodIsOpen, setFrequencyPeriodIsOpen] = useState(false);\n\n  return (\n    <Form>\n      {options?.data && (\n        <Grid hasGutter md={6}>\n          <FormGroup\n            label=\"What do you want to automate?\"\n            isRequired\n            fieldId=\"name-field\"\n          >\n            <TextInput\n              isRequired\n              placeholder=\"Example: Provision NGINX server\"\n              type=\"text\"\n              id=\"name-field\"\n              name=\"name\"\n              value={name}\n              onChange={(newName) =>\n                dispatch({\n                  type: actions.SET_NAME,\n                  value: newName,\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup label=\"What type of task is it?\" fieldId=\"category-field\">\n            <Select\n              id=\"category-field\"\n              isOpen={categoryIsOpen}\n              variant={'single'}\n              aria-label={'Plan category selector'}\n              maxHeight={390}\n              onToggle={() => setCategoryIsOpen(!categoryIsOpen)}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_CATEGORY,\n                  value: selection,\n                });\n                setCategoryIsOpen(false);\n              }}\n              selections={category}\n            >\n              {(options.data?.category || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n          <FormGroup\n            label=\"Enter a description of your automation plan\"\n            fieldId=\"description-field\"\n          >\n            <TextInput\n              type=\"text\"\n              placeholder=\"Place description here\"\n              id=\"description-field\"\n              name=\"description\"\n              value={description}\n              onChange={(newDescription) =>\n                dispatch({\n                  type: actions.SET_DESCRIPTION,\n                  value: newDescription,\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"How long does it take to do this manually?\"\n            fieldId=\"manual-time-field\"\n          >\n            <Select\n              id=\"manual-time-field\"\n              isOpen={manualTimeIsOpen}\n              variant={'single'}\n              placeholderText=\"Select amount\"\n              aria-label={'Plan time selector'}\n              onToggle={() => setManualTimeIsOpen(!manualTimeIsOpen)}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_MANUAL_TIME,\n                  value: selection,\n                });\n                setManualTimeIsOpen(false);\n              }}\n              selections={manual_time}\n            >\n              {(options.data?.manual_time || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n          <FormGroup\n            label=\"How many hosts do you plan to run this on?\"\n            fieldId=\"hosts-field\"\n          >\n            <TextInput\n              type=\"number\"\n              placeholder=\"Enter number of hosts\"\n              id=\"hosts-field\"\n              name=\"hosts\"\n              value={hosts}\n              onChange={(newHosts) =>\n                dispatch({\n                  type: actions.SET_HOSTS,\n                  value: newHosts,\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"How often do you do this?\"\n            fieldId=\"frequency-period-field\"\n          >\n            <Select\n              id=\"frequency-period-field\"\n              isOpen={frequencyPeriodIsOpen}\n              variant={'single'}\n              placeholderText=\"Select frequency period\"\n              aria-label={'Plan frequency period selector'}\n              onToggle={() => {\n                setFrequencyPeriodIsOpen(!frequencyPeriodIsOpen);\n              }}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_FREQUENCY_PERIOD,\n                  value: selection,\n                });\n                setFrequencyPeriodIsOpen(false);\n              }}\n              selections={frequency_period}\n            >\n              {(options.data?.frequency_period || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n        </Grid>\n      )}\n    </Form>\n  );\n};\n\nDetails.propTypes = {\n  options: PropTypes.object.isRequired,\n  formData: PropTypes.object.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Details;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  DataList,\n  DataListAction,\n  DataListItem,\n  DataListCell,\n  DataListItemRow,\n  DataListControl,\n  DataListDragButton,\n  DataListItemCells,\n  Form,\n  FormGroup,\n  Grid,\n  InputGroup,\n  TextInput,\n  Title,\n} from '@patternfly/react-core';\nimport { PlusIcon, TimesIcon } from '@patternfly/react-icons';\n\nimport { actions } from '../../../constants';\n\nconst TaskSection = styled.div`\n  margin-top: 20px;\n`;\n\nconst TaskTitle = styled(Title)`\n  margin-bottom: 10px;\n`;\n\nconst TaskDeleteButton = styled(Button)`\n  padding: 0 16px;\n`;\n\nconst DeleteTaskActionSection = styled(DataListAction)`\n  padding: 6px 0;\n`;\n\nconst TaskRow = styled(DataListItemRow)`\n  align-items: center;\n`;\n\nconst Tasks = ({ tasks, dispatch }) => {\n  const setTasks = (val) => {\n    dispatch({ type: actions.SET_TASKS, value: val });\n  };\n\n  const [taskToAdd, setTaskToAdd] = useState('');\n\n  const [liveText, setLiveText] = useState('');\n  const [id, setId] = useState('');\n\n  const onDragStart = (newId) => {\n    setId(newId);\n    setLiveText(`Dragging started for task ${newId}.`);\n  };\n\n  const onDragMove = (oldIndex, newIndex) => {\n    setLiveText(\n      `Dragging task ${id}.  Task ${oldIndex} is now task ${newIndex}.`\n    );\n  };\n\n  const onDragCancel = () => {\n    setLiveText('Dragging cancelled. Tasks list order is unchanged.');\n  };\n\n  const onDragFinish = (newItemOrder) => {\n    setLiveText('Dragging finsihed');\n    setTasks([...newItemOrder]);\n  };\n\n  const appendTask = () => {\n    const trimmedTask = taskToAdd.trim();\n    if (trimmedTask !== '') {\n      setTasks([...tasks, trimmedTask]);\n      setTaskToAdd('');\n    }\n  };\n\n  const handleTextKeyDown = (e) => {\n    if (e.key && e.key === 'Enter') {\n      e.preventDefault();\n      appendTask();\n    }\n  };\n\n  const removeTask = (task) => {\n    setTasks(tasks.filter((t) => t !== task));\n  };\n\n  return (\n    <>\n      <Form>\n        <Grid hasGutter md={6}>\n          <FormGroup\n            label=\"What tasks do you need to accomplish this plan?\"\n            fieldId=\"task-field\"\n          >\n            <InputGroup>\n              <TextInput\n                placeholder=\"Enter a description of each task\"\n                type=\"text\"\n                id=\"task-field\"\n                name=\"task\"\n                value={taskToAdd}\n                onChange={(newTaskName) => setTaskToAdd(newTaskName)}\n                onKeyDown={handleTextKeyDown}\n              />\n              <Button\n                onClick={appendTask}\n                isDisabled={taskToAdd.trim() === ''}\n                variant=\"control\"\n                aria-label=\"Add task\"\n              >\n                <PlusIcon />\n              </Button>\n            </InputGroup>\n          </FormGroup>\n        </Grid>\n      </Form>\n      {tasks.length > 0 && (\n        <TaskSection>\n          <TaskTitle headingLevel=\"h4\" size=\"xl\">\n            Tasks\n          </TaskTitle>\n          <DataList\n            aria-label=\"Draggable list to reorder and remove tasks.\"\n            isCompact\n            onDragFinish={onDragFinish}\n            onDragStart={onDragStart}\n            onDragMove={onDragMove}\n            onDragCancel={onDragCancel}\n            itemOrder={tasks}\n          >\n            {tasks.map((task, index) => (\n              <DataListItem\n                aria-labelledby={`cell-${index + 1}`}\n                id={task}\n                key={index + 1}\n              >\n                <TaskRow>\n                  <DataListControl>\n                    <DataListDragButton\n                      aria-label=\"Reorder\"\n                      aria-labelledby={`cell-${index + 1}`}\n                      aria-describedby=\"Press space or enter to begin dragging, and use the arrow keys to navigate up or down. Press enter to confirm the drag, or any other key to cancel the drag operation.\"\n                      aria-pressed=\"false\"\n                    />\n                  </DataListControl>\n                  <DataListItemCells\n                    dataListCells={[\n                      <DataListCell key={index + 1}>\n                        <span id={`cell-${index + 1}`}>{`${\n                          index + 1\n                        }. ${task}`}</span>\n                      </DataListCell>,\n                    ]}\n                  />\n                  <DeleteTaskActionSection aria-label=\"Actions\">\n                    <TaskDeleteButton\n                      onClick={() => removeTask(task)}\n                      variant=\"plain\"\n                      aria-label=\"Delete\"\n                    >\n                      <TimesIcon />\n                    </TaskDeleteButton>\n                  </DeleteTaskActionSection>\n                </TaskRow>\n              </DataListItem>\n            ))}\n          </DataList>\n        </TaskSection>\n      )}\n      <div className=\"pf-screen-reader\" aria-live=\"assertive\">\n        {liveText}\n      </div>\n    </>\n  );\n};\n\nTasks.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Tasks;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { parse, stringify } from 'query-string';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  Form,\n  FormGroup,\n  PaginationVariant,\n} from '@patternfly/react-core';\nimport {\n  TableComposable,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n} from '@patternfly/react-table';\n\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nimport LoadingState from '../../../../../../Components/LoadingState';\nimport EmptyState from '../../../../../../Components/EmptyState';\nimport NoResults from '../../../../../../Components/NoResults';\nimport ApiErrorState from '../../../../../../Components/ApiErrorState';\nimport Pagination from '../../../../../../Components/Pagination';\n\nimport { notAuthorizedParams } from '../../../../../../Utilities/constants';\nimport { useQueryParams } from '../../../../../../Utilities/useQueryParams';\nimport useApi from '../../../../../../Utilities/useApi';\n\nimport {\n  preflightRequest,\n  readJobExplorer,\n  readJobExplorerOptions,\n} from '../../../../../../Api/';\n\nimport FilterableToolbar from '../../../../../../Components/Toolbar/';\n\nimport { actions } from '../../../constants';\n\nconst ListFooter = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst initialQueryParams = {\n  group_by: 'template',\n  limit: 10,\n  group_by_time: false,\n  offset: 0,\n  sort_options: 'name',\n  sort_order: 'asc',\n  sort_by: 'name:asc',\n};\n\nconst Templates = ({ template_id, dispatch: formDispatch }) => {\n  const { pathname, hash, search } = useLocation();\n  const history = useHistory();\n\n  const [preflightError, setPreFlightError] = useState(null);\n  const [\n    {\n      isLoading,\n      isSuccess,\n      error,\n      data: { meta = {}, items: templates = [] },\n    },\n    setData,\n  ] = useApi({ meta: {}, items: [] });\n  const [options, setOptions] = useApi({});\n\n  const {\n    queryParams,\n    setFromPagination,\n    setFromToolbar,\n    dispatch: queryParamsDispatch,\n  } = useQueryParams(initialQueryParams);\n\n  const onSort = (_ev, _idx, dir) => {\n    queryParamsDispatch({\n      type: 'SET_SORT_ORDER',\n      value: { sort_order: dir },\n    });\n  };\n\n  const sortParams = {\n    sort: {\n      sortBy: {\n        direction: queryParams.sort_order,\n      },\n      onSort,\n    },\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'job-explorer', secondaryNav: true });\n\n    preflightRequest().catch((error) => {\n      setPreFlightError({ preflightError: error });\n    });\n\n    const initialSearchParams = parse(search, {\n      arrayFormat: 'bracket',\n      parseBooleans: true,\n      parseNumbers: true,\n    });\n\n    queryParamsDispatch({\n      type: 'REINITIALIZE',\n      value: {\n        ...initialQueryParams,\n        ...initialSearchParams,\n      },\n    });\n  }, []);\n  useEffect(() => {\n    setData(readJobExplorer({ params: queryParams }));\n    setOptions(readJobExplorerOptions({ params: queryParams }));\n    history.replace({\n      pathname,\n      hash,\n      search: stringify(queryParams, { arrayFormat: 'bracket' }),\n    });\n  }, [queryParams]);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n  return (\n    <>\n      {preflightError && <EmptyState {...preflightError} />}\n\n      {!preflightError && (\n        <Form>\n          <FormGroup\n            label=\"Link a template to this plan:\"\n            fieldId=\"template-link-field\"\n          >\n            <FilterableToolbar\n              hideQuickDateRange\n              hideSortOptions\n              categories={options.data}\n              filters={queryParams}\n              setFilters={setFromToolbar}\n              pagination={\n                <Pagination\n                  count={meta?.count}\n                  params={{\n                    limit: queryParams.limit,\n                    offset: queryParams.offset,\n                  }}\n                  setPagination={setFromPagination}\n                  isCompact\n                />\n              }\n            />\n            {error && <ApiErrorState message={error.error} />}\n            {isLoading && <LoadingState />}\n            {isSuccess && templates.length <= 0 && <NoResults />}\n            {isSuccess && templates.length > 0 && (\n              <TableComposable\n                aria-label=\"Template link table\"\n                variant=\"compact\"\n              >\n                <Thead>\n                  <Tr>\n                    <Th />\n                    <Th {...sortParams}>Name</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {templates.map(({ id, name }) => (\n                    <Tr key={`template-detail-${id}`}>\n                      <Td\n                        data-testid={`radio-${id}`}\n                        key={`template-detail-${id}-radio-td`}\n                        select={{\n                          rowIndex: id,\n                          onSelect: (event, isSelected, value) =>\n                            formDispatch({\n                              type: actions.SET_TEMPLATE_ID,\n                              value,\n                            }),\n                          isSelected: template_id === id,\n                          variant: 'radio',\n                        }}\n                      />\n                      <Td>{name}</Td>\n                    </Tr>\n                  ))}\n                </Tbody>\n              </TableComposable>\n            )}\n            <ListFooter>\n              <div>\n                {template_id !== -2 && (\n                  <Button\n                    key=\"clear-selection-button\"\n                    variant=\"link\"\n                    aria-label=\"Clear selection\"\n                    onClick={() => {\n                      formDispatch({\n                        type: actions.SET_TEMPLATE_ID,\n                        value: -2,\n                      });\n                    }}\n                  >\n                    Clear selection\n                  </Button>\n                )}\n              </div>\n              <Pagination\n                count={meta?.count}\n                params={{\n                  limit: queryParams.limit,\n                  offset: queryParams.offset,\n                }}\n                setPagination={setFromPagination}\n                variant={PaginationVariant.bottom}\n              />\n            </ListFooter>\n          </FormGroup>\n        </Form>\n      )}\n    </>\n  );\n};\n\nTemplates.propTypes = {\n  template_id: PropTypes.number.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Templates;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory, useLocation, Redirect } from 'react-router-dom';\n\nimport {\n  Button,\n  Tooltip,\n  Wizard,\n  WizardFooter,\n  WizardContextConsumer,\n} from '@patternfly/react-core';\n\nimport { Paths } from '../../../../paths';\n\nimport useApi from '../../../../Utilities/useApi';\nimport usePlanData from '../usePlanData';\n\nimport { createPlan, updatePlan } from '../../../../Api/';\n\nimport AlertModal from '../../../../Components/AlertModal/AlertModal';\nimport ErrorDetail from '../../../../Components/ErrorDetail/ErrorDetail';\n\nimport Details from './Steps/Details';\nimport Tasks from './Steps/Tasks';\nimport Templates from './Steps/Templates';\n\nconst Form = ({ title, options, data = {} }) => {\n  const history = useHistory();\n  const { hash, pathname } = useLocation();\n\n  const [startStep, setStartStep] = useState(null);\n\n  const [\n    { isSuccess, data: apiResponse, error },\n    setData,\n    // eslint-disable-next-line no-unused-vars\n    _throwThisAway,\n    reset,\n  ] = useApi(null);\n  const { formData, requestPayload, dispatch } = usePlanData(data);\n\n  const steps = [\n    {\n      step_number: 1,\n      id: 'details',\n      name: 'Details',\n      component: (\n        <Details options={options} formData={formData} dispatch={dispatch} />\n      ),\n    },\n    {\n      step_number: 2,\n      id: 'tasks',\n      name: 'Tasks',\n      component: <Tasks tasks={formData.tasks} dispatch={dispatch} />,\n    },\n    {\n      step_number: 3,\n      id: 'link_template',\n      name: 'Link template',\n      component: (\n        <Templates template_id={formData.template_id} dispatch={dispatch} />\n      ),\n      nextButtonText: 'Save',\n    },\n  ];\n\n  const CustomFooter = (\n    <WizardFooter>\n      <WizardContextConsumer>\n        {({ activeStep, onNext, onBack, onClose }) => {\n          if (activeStep.step_number !== 3) {\n            return (\n              <>\n                <Button variant=\"primary\" type=\"submit\" onClick={onNext}>\n                  Next\n                </Button>\n                {activeStep.step_number !== 1 && (\n                  <Button variant=\"secondary\" onClick={onBack}>\n                    Back\n                  </Button>\n                )}\n                <Button variant=\"link\" onClick={onClose}>\n                  Cancel\n                </Button>\n              </>\n            );\n          }\n          // Final step buttons\n          return (\n            <>\n              <Tooltip\n                content={\n                  !formData.name || !formData.name === ''\n                    ? 'In order to save this plan, you must enter a name in the details step'\n                    : 'Save this plan'\n                }\n                position=\"top\"\n              >\n                <div>\n                  <Button\n                    variant=\"primary\"\n                    type=\"submit\"\n                    onClick={onSave}\n                    isDisabled={!formData.name || !formData.name === ''}\n                  >\n                    Save\n                  </Button>\n                </div>\n              </Tooltip>\n              <Button variant=\"secondary\" onClick={onBack}>\n                Back\n              </Button>\n              <Button variant=\"link\" onClick={onClose}>\n                Cancel\n              </Button>\n            </>\n          );\n        }}\n      </WizardContextConsumer>\n    </WizardFooter>\n  );\n\n  useEffect(() => {\n    if (pathname.indexOf('/add') === -1 && hash) {\n      setStartStep(steps.find((step) => `#${step.id}` === hash).step_number);\n    } else {\n      history.replace({\n        hash: 'details',\n      });\n      setStartStep(1);\n    }\n  }, []);\n\n  const onStepChange = (newStep) => {\n    history.replace({\n      hash: newStep.id,\n    });\n  };\n\n  const onSave = () => {\n    data?.id\n      ? setData(\n          updatePlan({\n            id: data?.id,\n            params: requestPayload,\n          })\n        )\n      : setData(\n          createPlan({\n            params: requestPayload,\n          })\n        );\n  };\n\n  const onClose = () => {\n    if (location.pathname.indexOf('/edit') !== -1) {\n      history.push({\n        pathname: `${Paths.savingsPlanner}/${data?.id}`,\n      });\n    } else {\n      history.push({\n        pathname: Paths.savingsPlanner,\n      });\n    }\n  };\n\n  return (\n    <>\n      {isSuccess && (\n        <Redirect\n          to={{\n            pathname: `${Paths.savingsPlanner}/${\n              apiResponse.id || apiResponse.plan_created.id\n            }`,\n            state: { reload: true },\n          }}\n        />\n      )}\n      {startStep && (\n        <Wizard\n          navAriaLabel={`${title} steps`}\n          mainAriaLabel={`${title} content`}\n          steps={steps}\n          onGoToStep={onStepChange}\n          onNext={onStepChange}\n          onBack={onStepChange}\n          onSave={onSave}\n          onClose={onClose}\n          footer={CustomFooter}\n          startAtStep={startStep}\n          height=\"calc(100vh - 240px)\"\n        />\n      )}\n      {error && (\n        <AlertModal\n          isOpen={!!error}\n          onClose={() => reset()}\n          title={'Error'}\n          variant=\"error\"\n        >\n          {'There was an error saving the plan.'}\n          <ErrorDetail error={error.detail} />\n        </AlertModal>\n      )}\n    </>\n  );\n};\n\nForm.propTypes = {\n  title: PropTypes.string.isRequired,\n  options: PropTypes.object.isRequired,\n  data: PropTypes.object,\n};\n\nForm.defaultProps = {\n  data: {},\n};\n\nexport default Form;\n","export const jobExplorer = {\n  attributes: [\n    'id',\n    'status',\n    'job_type',\n    'started',\n    'finished',\n    'elapsed',\n    'created',\n    'cluster_name',\n    'org_name',\n    'most_failed_tasks',\n  ],\n  defaultParams: {\n    status: ['successful', 'failed'],\n    quick_date_range: 'last_30_days',\n    job_type: ['workflowjob', 'job'],\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    sort_options: 'created',\n    sort_order: 'desc',\n    only_root_workflows_and_standalone_jobs: false,\n    limit: 5,\n    offset: 0,\n  },\n};\n\nexport const roi = {\n  defaultParams: {\n    status: ['successful'],\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    quick_date_range: 'roi_last_year',\n    job_type: ['job'],\n    sort_options: 'template_productivity_score',\n    sort_order: 'desc',\n    start_date: null,\n    end_date: null,\n    limit: 25,\n    only_root_workflows_and_standalone_jobs: true,\n    attributes: [\n      'successful_hosts_total',\n      'successful_elapsed_total',\n      'total_org_count',\n      'total_cluster_count',\n    ],\n    group_by: 'template',\n    group_by_time: false,\n  },\n};\n\nexport const organizationStatistics = {\n  defaultParams: {\n    status: [],\n    org_id: [],\n    quick_date_range: 'last_30_days',\n    limit: 5,\n    offset: 0,\n    job_type: ['workflowjob', 'job'],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    start_date: null,\n    end_date: null,\n  },\n};\n\nexport const clusters = {\n  defaultParams: {\n    status: ['successful', 'failed'],\n    quick_date_range: 'last_30_days',\n    job_type: ['workflowjob', 'job'],\n    group_by_time: true,\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    only_root_workflows_and_standalone_jobs: false,\n  },\n};\n\nexport const savingsPlanner = {\n  defaultParams: {\n    template_id: [],\n    inventory_id: [],\n    automation_status: [],\n    category: [],\n    frequency_period: [],\n    name: '',\n    limit: 10,\n    offset: 0,\n    sort_options: 'modified',\n    sort_order: 'desc',\n  },\n};\n\nexport const notAuthorizedParams = {\n  title: 'RBAC Access Denied',\n  description:\n    'User does not have privileges to perform this action. Contact your organization adminstrator(s) for more information.',\n};\n","export async function getRelatedResourceDeleteCounts(requests) {\n  const results = {};\n  let error = null;\n  let hasCount = false;\n\n  try {\n    await Promise.all(\n      requests.map(async ({ request, label }) => {\n        const {\n          items: { count },\n        } = await request();\n        if (count > 0) {\n          results[label] = count;\n          hasCount = true;\n        }\n      })\n    );\n  } catch (err) {\n    error = err;\n  }\n\n  return {\n    results: hasCount && results,\n    error,\n  };\n}\n\nexport const relatedResourceDeleteRequests = {\n  savingsPlan: (selected, readRecordApi) => [\n    {\n      request: async () =>\n        readRecordApi({\n          params: { id: [selected.id] },\n        }),\n      label: 'Plan',\n    },\n  ],\n};\n","import moment from 'moment';\n\n/*\n * isNumeric - return true if input is a real number\n */\nexport function isNumeric(val) {\n  if (val === 0 || val === '0') {\n    return true;\n  }\n\n  if (parseInt(val)) {\n    return true;\n  }\n\n  if (parseFloat(val)) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function trimStr(str) {\n  return str.toString().replace(/['\"]+/g, '');\n}\n\nexport function formatDateTime(dateTime) {\n  return moment(new Date(dateTime).toISOString()).format('M/D/YYYY h:mm:ssa');\n}\n\nexport function formatDate(date) {\n  return moment(date).format('YYYY-MM-DD');\n}\n\nexport function formatSeconds(seconds) {\n  return moment().startOf('day').seconds(seconds).format('H:mm:ss');\n}\n\nexport function getTotal(data) {\n  if (!data) {\n    return;\n  } else {\n    let total = 0;\n    data.forEach((datum) => {\n      total += parseInt(datum.count);\n    });\n    return total;\n  }\n}\n\nexport function formatPercentage(val) {\n  if (isNaN(val)) {\n    return;\n  }\n\n  return `${val}%`;\n}\n\nexport const capitalize = (s) => {\n  if (typeof s !== 'string') {\n    return '';\n  }\n\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport function calculateDelta(a, b) {\n  if (!isNumeric(a) || !isNumeric(b)) {\n    return 0;\n  }\n\n  // never return less than zero ...\n  if (b - a < 0) {\n    return 0;\n  }\n\n  return b - a;\n}\n\nexport function convertMinsToMs(mins) {\n  if (!parseInt(mins)) {\n    return 0;\n  }\n\n  return mins * 60000;\n}\n\nexport function convertMsToMins(ms) {\n  if (!parseInt(ms)) {\n    return 0;\n  }\n\n  return ms / 60000;\n}\n\nexport function convertSecondsToMins(seconds) {\n  if (!parseInt(seconds)) {\n    return 0;\n  }\n\n  return seconds / 60;\n}\n\nexport function convertMinsToSeconds(mins) {\n  if (!parseInt(mins) || parseInt(mins) < 0) {\n    return 0;\n  }\n\n  return +parseInt(mins) * 60;\n}\n\nexport function convertSecondsToHours(seconds) {\n  if (!parseInt(seconds)) {\n    return 0;\n  }\n\n  return seconds / 3600;\n}\n\nexport function convertWithCommas(arr, key) {\n  const split = arr.reduce((strs, datum) => {\n    strs.push(datum[key]);\n    return strs;\n  }, []);\n  return split.join(', ');\n}\n\nexport function formatJobType(type) {\n  return type === 'job' ? 'Playbook run' : 'Workflow job';\n}\n\nexport function formatJobStatus(status) {\n  return status === 'successful' ? 'Success' : 'Failed';\n}\n\nexport function formatJobDetailsURL(baseURL, jobId) {\n  const subDirectory1 = 'job';\n  const subDirectory2 = 'details';\n  return `${baseURL}/#/${subDirectory1}/${jobId}/${subDirectory2}/`;\n}\n","import { useState, useEffect, useReducer } from 'react';\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return {\n        ...state,\n        isLoading: true,\n        isSuccess: false,\n        error: null,\n      };\n    case 'RESET':\n      return {\n        ...state,\n        isLoading: true,\n        isSuccess: false,\n        error: null,\n        data: action.payload,\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isSuccess: true,\n        error: null,\n        data: action.payload,\n      };\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        isSuccess: false,\n        error: action.payload,\n      };\n    case 'UPDATE_DATA':\n      return {\n        ...state,\n        data: action.payload,\n      };\n    default:\n      throw new Error();\n  }\n};\n\nconst useApi = (initialData, postprocess = (d) => d) => {\n  const [request, setRequest] = useState(null);\n\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isSuccess: false,\n    error: null,\n    data: initialData,\n  });\n\n  useEffect(() => {\n    // Prevent fetching nothing\n    if (!request) {\n      return;\n    }\n\n    // Initialize\n    let didCancel = false;\n    dispatch({ type: 'FETCH_INIT' });\n\n    // Fetching\n    request\n      .then((data) => {\n        if (!didCancel) {\n          dispatch({\n            type: 'FETCH_SUCCESS',\n            payload: postprocess(data),\n          });\n        }\n      })\n      .catch((e) => {\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_FAILURE', payload: e });\n        }\n      });\n\n    return () => {\n      didCancel = true;\n    };\n  }, [request]);\n\n  const setData = (data) => {\n    dispatch({ type: 'UPDATE_DATA', payload: data });\n  };\n\n  const reset = () => {\n    dispatch({ type: 'RESET', payload: initialData });\n  };\n\n  return [state, setRequest, setData, reset];\n};\n\nexport default useApi;\n","import { useReducer } from 'react';\nimport moment from 'moment';\n\nimport { formatDate } from '../Utilities/helpers';\n\nexport const useQueryParams = (initial) => {\n  const initialWithCalculatedParams = {\n    ...initial,\n    ...(initial.sort_options &&\n      initial.sort_order && {\n        sort_by: `${initial.sort_options}:${initial.sort_order}`,\n      }),\n  };\n\n  const paramsReducer = (state, { type, value }) => {\n    switch (type) {\n      /* v0 api reducers */\n      case 'SET_STARTDATE':\n        return { ...state, startDate: value };\n      case 'SET_ENDDATE':\n        return { ...state, endDate: value };\n      case 'SET_ID':\n        if (!parseInt(value)) {\n          const { id: ignored, ...rest } = state;\n          return rest;\n        }\n\n        return { ...state, id: parseInt(value) };\n      case 'SET_SEVERITY':\n        if (value.severity === '') {\n          const { severity: ignored, ...rest } = state;\n          return rest;\n        }\n\n        return { ...state, ...value };\n\n      /* v1 api reducers */\n      case 'SET_LIMIT':\n        return isNaN(value)\n          ? { ...state, limit: 5 } // Defaults back to 5\n          : { ...state, limit: parseInt(value) };\n      case 'SET_OFFSET':\n        return isNaN(value)\n          ? { ...state, offset: 0 } // Defaults back to 0\n          : { ...state, offset: parseInt(value) };\n      case 'SET_ATTRIBUTES':\n      case 'SET_JOB_TYPE':\n      case 'SET_STATUS':\n      case 'SET_ORG':\n      case 'SET_CLUSTER':\n      case 'SET_TEMPLATE':\n      case 'SET_AUTOMATION_STATUS':\n      case 'SET_CATEGORY':\n      case 'SET_FREQUENCY':\n      case 'SET_NAME':\n      case 'SET_ROOT_WORKFLOWS_AND_JOBS':\n      case 'SET_INVENTORY':\n        return { ...state, ...value };\n      case 'SET_QUICK_DATE_RANGE': {\n        let newState = { ...state };\n        if (value !== 'custom') {\n          newState = { ...newState, start_date: null, end_date: null };\n        }\n\n        newState = { ...newState, ...value };\n        return newState;\n      }\n\n      case 'SET_START_DATE':\n      case 'SET_END_DATE': {\n        let newValues = {};\n        Object.entries(value).forEach(([key, value]) => {\n          newValues[key] = formatDate(value);\n        });\n        return { ...state, ...newValues };\n      }\n\n      case 'SET_SORT_OPTIONS': {\n        return {\n          ...state,\n          sort_options: value.sort_options,\n          ...(state.sort_order && {\n            sort_by: `${value.sort_options}:${state.sort_order}`,\n          }), // Update sort by\n        };\n      }\n\n      case 'SET_SORT_ORDER': {\n        return {\n          ...state,\n          sort_order: value.sort_order,\n          ...(state.sort_options && {\n            sort_by: `${state.sort_options}:${value.sort_order}`,\n          }), // Update sort by\n        };\n      }\n\n      case 'REINITIALIZE':\n        return { ...value };\n      case 'RESET_FILTER':\n        return { ...initialWithCalculatedParams };\n      default:\n        throw new Error(`The query params reducer action (${type}) not found.`);\n    }\n  };\n\n  const [queryParams, dispatch] = useReducer(paramsReducer, {\n    ...initialWithCalculatedParams,\n  });\n\n  const actionMapper = {\n    status: 'SET_STATUS',\n    quick_date_range: 'SET_QUICK_DATE_RANGE',\n    job_type: 'SET_JOB_TYPE',\n    org_id: 'SET_ORG',\n    cluster_id: 'SET_CLUSTER',\n    template_id: 'SET_TEMPLATE',\n    sort_order: 'SET_SORT_ORDER',\n    sort_options: `SET_SORT_OPTIONS`,\n    start_date: 'SET_START_DATE',\n    end_date: 'SET_END_DATE',\n    automation_status: 'SET_AUTOMATION_STATUS',\n    category: 'SET_CATEGORY',\n    frequency_period: 'SET_FREQUENCY',\n    name: 'SET_NAME',\n    only_root_workflows_and_standalone_jobs: 'SET_ROOT_WORKFLOWS_AND_JOBS',\n    inventory_id: 'SET_INVENTORY',\n  };\n\n  return {\n    queryParams,\n    dispatch,\n    setFromToolbar: (varName, value = null) => {\n      if (!varName) {\n        dispatch({ type: 'RESET_FILTER' });\n      } else {\n        dispatch({ type: actionMapper[varName], value: { [varName]: value } });\n      }\n    },\n    setFromPagination: (offset, limit = null) => {\n      dispatch({ type: 'SET_OFFSET', value: offset });\n      if (limit) {\n        dispatch({ type: 'SET_LIMIT', value: limit });\n      }\n    },\n    /* v0 api usage after this line */\n    setSeverity: (severity) =>\n      dispatch({ type: 'SET_SEVERITY', value: { severity } }),\n    setEndDate: () => {\n      const endDate = moment().format('YYYY-MM-DD');\n      dispatch({ type: 'SET_ENDDATE', value: endDate });\n    },\n    setId: (value) => dispatch({ type: 'SET_ID', value }),\n    setStartDate: (days) => {\n      let startDate;\n      if (days === 7) {\n        startDate = moment().subtract(1, 'week').format('YYYY-MM-DD');\n      }\n\n      if (days === 14) {\n        startDate = moment().subtract(2, 'weeks').format('YYYY-MM-DD');\n      }\n\n      if (days === 31) {\n        startDate = moment().subtract(1, 'month').format('YYYY-MM-DD');\n      } else {\n        startDate = moment().subtract(days, 'days').format('YYYY-MM-DD');\n      }\n\n      dispatch({ type: 'SET_STARTDATE', value: startDate });\n    },\n    setStartDateAsString: (value) => dispatch({ type: 'SET_STARTDATE', value }),\n  };\n};\n","import { Paths } from '../paths';\nimport { stringify } from 'query-string';\n\nconst useRedirect = (history, path) => (query) => {\n  const search = stringify(query, { arrayFormat: 'bracket' });\n  history.push({\n    pathname: Paths[path],\n    search,\n  });\n};\n\nexport default useRedirect;\n","import { useEffect, useState, useCallback } from 'react';\nimport useIsMounted from './useIsMounted';\n\n/*\n * The useRequest hook accepts a request function and returns an object with\n * five values:\n *   request: a function to call to invoke the request\n *   result: the value returned from the request function (once invoked)\n *   isLoading: boolean state indicating whether the request is in active/in flight\n *   error: any caught error resulting from the request\n *   setValue: setter to explicitly set the result value\n *\n * The hook also accepts an optional second parameter which is a default\n * value to set as result before the first time the request is made.\n */\nexport default function useRequest(makeRequest, initialValue) {\n  const [result, setResult] = useState(initialValue);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const isMounted = useIsMounted();\n\n  return {\n    result,\n    error,\n    isLoading,\n    request: useCallback(\n      async (...args) => {\n        setIsLoading(true);\n        try {\n          const response = await makeRequest(...args);\n          if (isMounted.current) {\n            setResult(response);\n            setError(null);\n          }\n        } catch (err) {\n          if (isMounted.current) {\n            setError(err);\n            setResult(initialValue);\n          }\n        } finally {\n          if (isMounted.current) {\n            setIsLoading(false);\n          }\n        }\n      },\n      [makeRequest]\n    ),\n    setValue: setResult,\n  };\n}\n\n/*\n * Provides controls for \"dismissing\" an error message\n *\n * Params: an error object\n * Returns: { error, dismissError }\n *   The returned error object is the same object passed in via the paremeter,\n *   until the dismissError function is called, at which point the returned\n *   error will be set to null on the subsequent render.\n */\nexport function useDismissableError(error) {\n  const [showError, setShowError] = useState(false);\n\n  useEffect(() => {\n    if (error) {\n      setShowError(true);\n    }\n  }, [error]);\n\n  return {\n    error: showError ? error : null,\n    dismissError: () => {\n      setShowError(false);\n    },\n  };\n}\n\n/*\n * Hook to assist with deletion of items from a paginated item list. The page\n * url will be navigated back one page on a paginated list if needed to prevent\n * the UI from re-loading an empty set and displaying a \"No items found\"\n * message.\n *\n * Params: a callback function that will be invoked in order to delete items,\n *   and an object with structure { qsConfig, allItemsSelected, fetchItems }\n * Returns: { isLoading, deleteItems, deletionError, clearDeletionError }\n */\nexport function useDeleteItems(\n  makeRequest,\n  { qsConfig = null, fetchItems = null } = {}\n) {\n  const {\n    error: requestError,\n    isLoading,\n    request,\n  } = useRequest(makeRequest, null);\n  const { error, dismissError } = useDismissableError(requestError);\n  const deleteItems = async () => {\n    await request();\n    if (!qsConfig) {\n      return;\n    }\n    fetchItems();\n  };\n\n  return {\n    isLoading,\n    deleteItems,\n    deletionError: error,\n    clearDeletionError: dismissError,\n  };\n}\n","import { useEffect, useRef } from 'react';\n\nexport default function useIsMounted() {\n  const isMounted = useRef(null);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  });\n  return isMounted;\n}\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PFPagination } from '@patternfly/react-core';\nvar perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '15', value: 15 },\n    { title: '20', value: 20 },\n    { title: '25', value: 25 },\n];\nvar Pagination = function (_a) {\n    var _b = _a.count, count = _b === void 0 ? 0 : _b, params = _a.params, setPagination = _a.setPagination, props = __rest(_a, [\"count\", \"params\", \"setPagination\"]);\n    var offset = params.offset, limit = params.limit;\n    var currentPage = Math.floor(offset / limit + 1);\n    var returnOffsetVal = function (page) { return (page - 1) * limit; };\n    return (React.createElement(PFPagination, __assign({ itemCount: count, widgetId: \"aa-pagination\", perPageOptions: perPageOptions, perPage: limit, page: currentPage, onPerPageSelect: function (_event, perPage, page) {\n            setPagination(returnOffsetVal(page), perPage);\n        }, onSetPage: function (_event, page) {\n            setPagination(returnOffsetVal(page));\n        } }, props)));\n};\nPagination.propTypes = {\n    count: PropTypes.number,\n    params: PropTypes.exact({\n        offset: PropTypes.number.isRequired,\n        limit: PropTypes.number.isRequired,\n    }).isRequired,\n    setPagination: PropTypes.func.isRequired,\n};\nexport default Pagination;\n","import Pagination from './Pagination';\nexport default Pagination;\n","var currencyFormatter = function (n) {\n    var formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n    });\n    return formatter.format(n); /* $2,500.00 */\n};\nexport default currencyFormatter;\n"],"sourceRoot":""}