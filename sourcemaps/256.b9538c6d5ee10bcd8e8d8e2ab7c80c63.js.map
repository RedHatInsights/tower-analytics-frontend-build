{"version":3,"file":"js/256.244860b3d8faa9d61719.js","mappings":"gSAkBA,MA4EA,EA5E0D,KACxD,MAAMA,EAAOC,SAASC,SAASC,MAAM,KAAKC,OAGxCC,OAAQC,EACRC,QAASC,EAAW,UACpBC,EAAS,UACTC,EAAS,MACTC,IACE,SAAWC,gBACU,QAAWZ,IAClBM,QACf,CAAC,IAEJ,IAAAO,YAAU,KACRL,GAAa,GACZ,CAACR,IAEJ,MAAMc,EAAmB,CACvB,CAAEC,MAAO,UAAWC,GAAI,yCAsD1B,MAnDe,MACb,GAAIP,EAAW,CACb,MAAM,KAAEQ,EAAI,YAAEC,EAAW,KAAEC,GAASb,EAAOc,YACrCC,EACJ,kBAAC,IAAU,CAACC,UAAW,GACpBH,EAAKI,KAAI,CAACC,EAAQC,KACjB,MAAMC,EAAM,KAAKC,MAAMC,GAAMA,EAAEC,MAAQL,IACvC,GAAIE,EACF,OACE,kBAAC,IAAO,CACNG,IAAK,WAAWJ,IAChBK,SAAU,IAAgBC,OAC1BC,QAASN,EAAIR,aAEb,kBAAC,IAAK,WAAUQ,EAAIT,KAAMY,IAAKJ,GAC5BC,EAAIT,M,KAQnB,OACE,mCAAc,UAAUjB,KACtB,kBAAC,EAAAiC,WAAU,WACA,UAAUjC,IACnBkC,YAAapB,EACbqB,MAAOlB,EACPC,YAAaA,EACbkB,OAAQf,IAEV,kBAAC,KAAW,MAAE,OAAaf,GAAQ,I,CAGlC,OAAII,EACF,qCACEC,EAEP,kBAAC,IAAQ,CACPwB,MAAM,4BACNE,KAAK,iDACLC,WAAW,yBACXC,KAAM,eAIH,oC,EAIJC,EAAQ,C","sources":["webpack:///./src/Containers/Reports/Details/index.tsx"],"sourcesContent":["import React, { FunctionComponent, useEffect } from 'react';\nimport Error404 from '../../../Components/Error404';\n\nimport { PageHeader } from '@ansible/ansible-ui-framework';\nimport {\n  Label,\n  LabelGroup,\n  PageSection,\n  Tooltip,\n  TooltipPosition,\n} from '@patternfly/react-core';\n\nimport getComponent from '../Layouts';\nimport { TAGS } from '../Shared/constants';\nimport { ReportSchema } from '../Layouts/types';\nimport useRequest from '../../../Utilities/useRequest';\nimport { readReport } from '../../../Api';\n\nconst Details: FunctionComponent<Record<string, never>> = () => {\n  const slug = location.pathname.split('/').pop() as string;\n\n  const {\n    result: report,\n    request: fetchReport,\n    isSuccess,\n    isLoading,\n    error,\n  } = useRequest(async () => {\n    const response = await readReport(slug);\n    return response.report as ReportSchema;\n  }, {} as ReportSchema);\n\n  useEffect(() => {\n    fetchReport();\n  }, [slug]);\n\n  const breadcrumbsItems = [\n    { label: 'Reports', to: 'ansible/automation-analytics/reports' },\n  ];\n\n  const render = () => {\n    if (isSuccess) {\n      const { name, description, tags } = report.layoutProps;\n      const reportTags = (\n        <LabelGroup numLabels={6}>\n          {tags.map((tagKey, idx) => {\n            const tag = TAGS.find((t) => t.key === tagKey);\n            if (tag) {\n              return (\n                <Tooltip\n                  key={`tooltip_${idx}`}\n                  position={TooltipPosition.bottom}\n                  content={tag.description}\n                >\n                  <Label data-cy={tag.name} key={idx}>\n                    {tag.name}\n                  </Label>\n                </Tooltip>\n              );\n            }\n          })}\n        </LabelGroup>\n      );\n      return (\n        <div data-cy={`header-${slug}`}>\n          <PageHeader\n            data-cy={`header-${slug}`}\n            breadcrumbs={breadcrumbsItems}\n            title={name}\n            description={description}\n            footer={reportTags}\n          />\n          <PageSection>{getComponent(report, true)}</PageSection>\n        </div>\n      );\n    } else if (isLoading) {\n      return <></>;\n    } else if (error) {\n      return (\n        <Error404\n          title=\"404: Page does not exist.\"\n          body=\"The report you are looking for does not exist.\"\n          buttonText=\"Return to Reports page\"\n          link={'../reports'}\n        />\n      );\n    } else {\n      return <></>;\n    }\n  };\n\n  return render();\n};\n\nexport default Details;\n"],"names":["slug","location","pathname","split","pop","result","report","request","fetchReport","isSuccess","isLoading","error","async","useEffect","breadcrumbsItems","label","to","name","description","tags","layoutProps","reportTags","numLabels","map","tagKey","idx","tag","find","t","key","position","bottom","content","PageHeader","breadcrumbs","title","footer","body","buttonText","link","render"],"sourceRoot":""}