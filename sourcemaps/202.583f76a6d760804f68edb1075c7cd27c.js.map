{"version":3,"file":"js/202.d58e7cb273956905c938.js","mappings":"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","sources":["webpack:///./src/Components/Breadcrumbs.js","webpack:///./src/Components/Chart/types.ts","webpack:///./src/Components/Chart/convertApi.ts","webpack:///./src/Components/Chart/index.tsx","webpack:///./src/Utilities/currencyFormatter.ts"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbHeading,\n} from '@patternfly/react-core';\n\nconst Breadcrumbs = ({ items = [], current = null }) => {\n  return (\n    <Breadcrumb>\n      {items.map(({ title, navigate }) => {\n        return (\n          <BreadcrumbItem key={title}>\n            <Link to={navigate}>{title}</Link>\n          </BreadcrumbItem>\n        );\n      })}\n      {current && <BreadcrumbHeading>{current}</BreadcrumbHeading>}\n    </Breadcrumb>\n  );\n};\n\nBreadcrumbs.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      navigate: PropTypes.any,\n      title: PropTypes.node,\n    })\n  ),\n  current: PropTypes.node,\n};\n\nexport default Breadcrumbs;\n","export var ApiType;\n(function (ApiType) {\n    ApiType[\"nonGrouped\"] = \"nonGrouped\";\n    ApiType[\"grouped\"] = \"grouped\";\n})(ApiType || (ApiType = {}));\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { v4 as uuidv4 } from 'uuid';\nimport { ApiType } from './types';\nexport var convertGroupedByData = function (data) {\n    var dates = data.dates;\n    var items = [];\n    dates.forEach(function (el) {\n        // Add items to the correct serie\n        el.items.forEach(function (item, idx) {\n            if (!items[idx]) {\n                items[idx] = {\n                    serie: [],\n                    hidden: false,\n                    name: uuidv4(),\n                };\n            }\n            items[idx].serie.push(__assign({ created_date: el.date }, item));\n        });\n    });\n    return items;\n};\nexport var convertApiToData = function (result) {\n    var _a;\n    var data = {\n        series: [],\n        legend: [],\n    };\n    if ('dates' in result) {\n        result.type = ApiType.grouped;\n    }\n    else {\n        result.type = ApiType.nonGrouped;\n    }\n    switch (result.type) {\n        case ApiType.grouped:\n            data.series = convertGroupedByData(result);\n            break;\n        case ApiType.nonGrouped:\n            data.series = [\n                {\n                    serie: result.items || result.meta.legend,\n                    hidden: false,\n                    name: uuidv4(),\n                },\n            ];\n            break;\n    }\n    if ((_a = result.meta) === null || _a === void 0 ? void 0 : _a.legend) {\n        data.legend = result.meta.legend.map(function (item) {\n            var s = data.series.find(function (_a) {\n                var serie = _a.serie;\n                return serie.find(function (_a) {\n                    var serieId = _a.id;\n                    return serieId === item.id;\n                });\n            });\n            return __assign(__assign({}, item), { childName: s && s.name ? s.name : '' });\n        });\n    }\n    return data;\n};\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useEffect, useState } from 'react';\nimport ChartBuilder, { functions, } from 'react-json-chart-builder';\nimport { useQueryParams } from '../../QueryParams';\nimport { convertApiToData } from './convertApi';\nvar customFunctions = function (specificFunctions) { return (__assign(__assign({}, functions), { axisFormat: __assign(__assign(__assign({}, functions.axisFormat), { formatAsYear: function (tick) {\n            return Intl.DateTimeFormat('en', { year: 'numeric' }).format(new Date(tick));\n        }, formatAsMonth: function (tick) {\n            return Intl.DateTimeFormat('en', { month: 'long' }).format(new Date(tick));\n        } }), specificFunctions === null || specificFunctions === void 0 ? void 0 : specificFunctions.axisFormat), labelFormat: __assign(__assign({}, functions.labelFormat), specificFunctions === null || specificFunctions === void 0 ? void 0 : specificFunctions.labelFormat) })); };\nvar applyHiddenFilter = function (chartData, chartSeriesHidden) {\n    if (chartSeriesHidden === void 0) { chartSeriesHidden = []; }\n    return (__assign(__assign({}, chartData), { series: chartData.series.map(function (series, index) { return (__assign(__assign({}, series), { hidden: !!chartSeriesHidden[index] })); }) }));\n};\nvar Chart = function (_a) {\n    var schema = _a.schema, data = _a.data, specificFunctions = _a.specificFunctions, _b = _a.namespace, namespace = _b === void 0 ? 'settings' : _b;\n    var _c = useQueryParams({\n        chartSeriesHiddenProps: [],\n    }, namespace), chartSeriesHiddenProps = _c.queryParams.chartSeriesHiddenProps, dispatch = _c.dispatch;\n    var _d = useState({\n        series: [],\n        legend: [],\n    }), chartData = _d[0], setChartData = _d[1];\n    var setChartDataHook = function (newChartData) {\n        dispatch({\n            type: 'SET_CHART_SERIES_HIDDEN_PROPS',\n            value: newChartData.series.map(function (_a) {\n                var hidden = _a.hidden;\n                return hidden;\n            }),\n        });\n        setChartData(newChartData);\n    };\n    useEffect(function () {\n        setChartData(applyHiddenFilter(convertApiToData(data), chartSeriesHiddenProps));\n    }, [data]);\n    return (React.createElement(ChartBuilder, { schema: schema, functions: customFunctions(specificFunctions), dataState: [chartData, setChartDataHook] }));\n};\nexport default Chart;\n","var currencyFormatter = function (n) {\n    var formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n    });\n    return formatter.format(n); /* $2,500.00 */\n};\nexport default currencyFormatter;\n"],"names":["Breadcrumbs","items","current","Breadcrumb","map","title","navigate","BreadcrumbItem","key","Link","to","BreadcrumbHeading","propTypes","PropTypes","ApiType","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","customFunctions","specificFunctions","axisFormat","formatAsYear","tick","Intl","DateTimeFormat","year","format","Date","formatAsMonth","month","labelFormat","_a","schema","data","_b","namespace","_c","chartSeriesHiddenProps","queryParams","dispatch","_d","useState","series","legend","chartData","setChartData","useEffect","chartSeriesHidden","index","hidden","applyHiddenFilter","result","type","grouped","nonGrouped","dates","forEach","el","item","idx","serie","name","push","created_date","date","convertGroupedByData","meta","find","id","childName","convertApiToData","functions","dataState","newChartData","value","NumberFormat","style","currency"],"sourceRoot":""}