{"version":3,"sources":["webpack:///./src/Api.js","webpack:///./src/Charts/BaseChart.js","webpack:///./src/Components/AlertModal/AlertModal.js","webpack:///./src/Components/ApiErrorState.js","webpack:///./src/Components/Breadcrumbs.js","webpack:///./src/Components/EmptyState.js","webpack:///./src/Components/ErrorDetail/ErrorDetail.js","webpack:///./src/Components/JobStatus.js","webpack:///./src/Components/LoadingState.js","webpack:///./src/Components/NoData.js","webpack:///./src/Components/NoResults.js","webpack:///./src/Components/Toolbar/constants.js","webpack:///./src/Components/Toolbar/Groups/CategoryDropdown.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/Select.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/helpers.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/Date.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/Text.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/index.js","webpack:///./src/Components/Toolbar/Groups/FiltersCategoriesGroup.js","webpack:///./src/Components/Toolbar/Groups/QuickDateGroup.js","webpack:///./src/Components/Toolbar/Groups/SortByGroup.js","webpack:///./src/Components/Toolbar/Groups/SettingsPanel.js","webpack:///./src/Components/Toolbar/Toolbar.js","webpack:///./src/Components/Toolbar/index.js","webpack:///./src/Charts/ROITopTemplates.js","webpack:///./src/Containers/AutomationCalculator/helpers.js","webpack:///./src/Containers/AutomationCalculator/TotalSavings.js","webpack:///./src/Containers/AutomationCalculator/CalculationCost.js","webpack:///./src/Containers/AutomationCalculator/AutomationFormula.js","webpack:///./src/Containers/AutomationCalculator/TopTemplates.js","webpack:///./src/Containers/AutomationCalculator/AutomationCalculator.js","webpack:///./src/Utilities/Tooltip.js","webpack:///./src/Charts/BarChart.js","webpack:///./src/Charts/LineChart.js","webpack:///./src/Components/ModulesList.js","webpack:///./src/Components/Breakdown.js","webpack:///./src/Components/ModalContents.js","webpack:///./src/Components/TemplatesList.js","webpack:///./src/Containers/Clusters/Clusters.js","webpack:///./src/Components/JobExplorerListRow.js","webpack:///./src/Components/JobExplorerList.js","webpack:///./src/Containers/JobExplorer/JobExplorer.js","webpack:///./src/Components/NotificationsList.js","webpack:///./src/Containers/Notifications/Notifications.js","webpack:///./src/Utilities/Legend.js","webpack:///./src/Charts/GroupedBarChart/GroupedBarChart.js","webpack:///./src/Charts/GroupedBarChart/OrgsTooltip.js","webpack:///./src/Charts/GroupedBarChart/HostsTooltip.js","webpack:///./src/Charts/PieChart.js","webpack:///./src/Containers/OrganizationStatistics/OrganizationStatistics.js","webpack:///./src/Utilities/colors.ts","webpack:///./src/Containers/SavingsPlanner/Add/index.js","webpack:///./src/Components/CardActionsRow.js","webpack:///./src/Components/DeleteButton/DeleteButton.js","webpack:///./src/Components/RoutedTabs.js","webpack:///./src/Containers/SavingsPlanner/Details/DetailsTab/index.js","webpack:///./src/Utilities/hoursFormatter.ts","webpack:///./src/Containers/SavingsPlanner/Details/StatisticsTab/TotalSavings/index.tsx","webpack:///./src/Containers/SavingsPlanner/Details/StatisticsTab/FormulaDescription/index.tsx","webpack:///./src/Containers/SavingsPlanner/Details/StatisticsTab/index.tsx","webpack:///./src/Containers/SavingsPlanner/Edit/index.js","webpack:///./src/Containers/SavingsPlanner/Details/Details.js","webpack:///./src/Components/EmptyList.js","webpack:///./src/Containers/SavingsPlanner/List/ListItem/index.js","webpack:///./src/Components/Toolbar/ToolbarDeleteButton.js","webpack:///./src/Containers/SavingsPlanner/List/List.js","webpack:///./src/Utilities/useSelected.js","webpack:///./src/Containers/SavingsPlanner/Shared/constants.js","webpack:///./src/Containers/SavingsPlanner/Shared/usePlanData.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/Steps/Details/index.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/Steps/Tasks/index.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/Steps/Templates/index.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/index.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Utilities/getRelatedResourceDeleteDetails.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Utilities/useApi.js","webpack:///./src/Utilities/useQueryParams.js","webpack:///./src/Utilities/useRedirect.js","webpack:///./src/Utilities/useRequest.js","webpack:///./src/Utilities/useIsMounted.js","webpack:////home/travis/build/RedHatInsights/tower-analytics-frontend/node_modules/moment/locale|sync|/^\\.\\/.*$/","webpack:///./src/Components/Pagination/Pagination.tsx","webpack:///./src/Components/Pagination/index.ts","webpack:///./src/Utilities/currencyFormatter.ts"],"names":["plansEndpoint","planEndpoint","handleResponse","response","json","then","ok","status","Promise","reject","message","error","authenticatedFetch","endpoint","options","window","insights","chrome","auth","getUser","fetch","preflightRequest","readJobExplorer","params","paginationParams","limit","offset","sort_by","qs","stringify","url","URL","location","origin","search","method","body","JSON","readEventExplorer","readROI","readHostExplorer","readPlans","createPlan","deletePlan","id","updatePlan","readPlan","readClustersOptions","readOrgOptions","readROIOptions","readPlanOptions","readClusters","readNotifications","Object","keys","forEach","key","searchParams","append","readJobExplorerOptions","initializeChart","Chart","BaseChart","props","margin","history","useHistory","getWidth","parseInt","d3","style","left","right","getHeight","top","bottom","propTypes","PropTypes","ExclamationCircleIcon","styled","PFExclamationCircleIcon","TimesCircleIcon","PFTimesCircleIcon","InfoCircleIcon","PFInfoCircleIcon","CheckCircleIcon","PFCheckCircleIcon","ExclamationTriangleIcon","PFExclamationTriangleIcon","Header","AlertModal","isOpen","title","label","variant","children","variantIcons","danger","size","info","success","warning","customHeader","Title","headingLevel","Modal","header","aria-label","aria-labelledby","ApiErrorState","EmptyState","EmptyStateVariant","EmptyStateIcon","icon","color","globalDangerColor200","EmptyStateBody","Breadcrumbs","items","current","Breadcrumb","map","navigate","basePathNavigate","getBaseName","BreadcrumbItem","to","BreadcrumbHeading","DefaultEmptyState","preflightError","WrenchIcon","href","target","rel","Button","onClick","reload","Card","PFCard","CardBody","PFCardBody","Expandable","PFExpandable","ErrorDetail","useState","isExpanded","setIsExpanded","Array","isArray","length","toggleText","onToggle","m","JobStatus","str","Label","getColor","getIcon","charAt","toUpperCase","slice","CubesIcon","SearchIcon","optionsForCategories","type","isSingle","name","placeholder","hasChips","quick_date_range","start_date","end_date","job_type","org_id","cluster_id","template_id","sort_options","automation_status","frequency_period","category","inventory_id","CategoryDropdown","selected","setSelected","categories","ToolbarItem","Select","onSelect","_event","selection","selections","placeholderText","SelectOption","value","OptionSpan","renderValues","values","description","item","comparator","val","categoryKey","selectOptions","isVisible","setValue","expanded","setExpanded","ToolbarFilter","data-cy","showToolbarItem","chips","i","undefined","reduce","acc","Number","isInteger","cmpItem","push","handleCheckboxChips","categoryName","deleteChip","_","valueToDelete","keyToDelete","find","filteredArr","filter","SelectVariant","includes","hasInlineFilter","onFilter","textInput","toLowerCase","maxHeight","isRequired","Date","InputGroup","TextInput","onChange","Text","searchVal","setSearchVal","useEffect","onKeyDown","e","preventDefault","components","select","date","text","ToolbarInput","SelectedInput","FilterCategoriesGroup","filterCategories","filters","setFilters","currentCategory","setCurrentCategory","ToolbarGroup","el","QuickDateGroup","SortByGroup","sort_order","SettingsPanel","settingsExpanded","setSettingsExpanded","isFlat","backgroundColor","CardHeader","CardActions","CardTitle","Switch","labelOff","isChecked","only_root_workflows_and_standalone_jobs","Tooltip","position","content","FilterableToolbar","pagination","hasSettings","additionalControls","hideQuickDateRange","hideSortOptions","restCategories","obj","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarContent","isActive","control","idx","visibility","default","lg","d","savings","manualCost","automationCost","scrollLeftOffset","node","scrollLeft","x","svg","getBoundingClientRect","y","currencyFormatter","delta","automatedCost","toolTipWidth","toolTipBase","width","chartWidth","flipped","nameWidth","getComputedTextLength","savingsWidth","manualCostWidth","automationCostWidth","widestTextElem","adjustedWidth","maxTextPerc","boxWidth","overage","boundingBox","attr","toolTipPoint","interrupt","transition","delay","this","draw","textWidthThreshold","TopTemplatesSavings","init","bind","resize","state","timeout","clearTimeout","setState","setTimeout","remove","data","ticks","height","rangeRound","padding","range","formatYAxisValue","xAxis","tickValues","yAxis","tickFormat","replace","tickSize","taskNames","tooltip","domain","call","selectAll","bandwidth","enter","on","darker","handleMouseOver","handleMouseOut","addEventListener","removeEventListener","Component","BorderedCardTitle","TotalSavings","totalSavings","borderTop","paddingBottom","InputAndText","validFloat","floatValue","parseFloat","CalculationCost","costManual","setCostManual","costAutomation","setCostAutomation","InputGroupText","paddingTop","TemplateDetail","TemplateDetailSubTitle","TooltipWrapper","IconGroup","QuestionIconTooltip","details","Popover","bodyContent","k","capitalize","split","join","TopTemplates","sortBy","setDataRunTime","setEnabled","redirectToJobExplorer","component","convertSecondsToMins","avgRunTime","minutes","convertMinsToSeconds","successful_hosts_total","trimmed","sortAttribute","showSortAttr","enabled","deselectedIds","setDeselectedIds","filterDisabled","updateDeltaCost","convertSecondsToHours","successful_elapsed_total","calculateDelta","AutomationCalculator","toJobExplorer","useRedirect","useApi","preflight","setPreflight","setOptions","api","fetchApi","setDataInApi","useQueryParams","roiConst","queryParams","setFromToolbar","NotAuthorized","notAuthorizedParams","PageHeader","PageHeaderTitle","Main","isSuccess","Grid","hasGutter","className","GridItem","span","Stack","StackItem","isLoading","LoadingState","NoData","textAlign","isFilled","sum","curr","overflow","templateId","seconds","updatedData","setUnfilteredData","opts","fail","total","formatTooltipDate","RAN","FAIL","TOTAL","DATE","jobs","jobsWidth","failed","successful","successTextWidth","failTextWidth","circleSuccess","circleFail","failedIcon","successIcon","successText","failText","clickMore","colors","BarChart","formattedData","jobExplorer","Paths","formattedDate","formatDate","initialQueryParams","arrayFormat","pathname","parseTime","formatted","created_date","successful_count","failed_count","concat","barTooltip","layers","order","stack","maxTicks","Math","round","layer","_d","duration","ease","prevProps","LineChart","updateCluster","path","attrTween","tweenDash","l","getTotalLength","t","unformattedData","successLine","curve","failLine","defined","isNaN","vertical","handleMouseMove","intersectX","cx","baseVal","DataListCell","PFDataListCell","DataListItem","PFDataListItem","DataCellEnd","ModulesList","modules","DataList","background","border","module","index","host_task_count","trimStr","BarContainer","Bar","LabelsContainer","Square","Breakdown","categoryCount","categoryColor","totalCount","accumulated","currentVal","sortedCategories","sort","barSpacing","remainingSpace","ActionContainer","formatTopFailedTask","percentage","ceil","total_failed_count","task_name","formatSuccessRate","successCount","formatTotalTime","elapsed","toISOString","substr","ModalContents","selectedId","handleModal","qp","jobType","relatedJobs","setRelatedJobs","setSynchJobs","stats","setStats","setSynchStats","relatedTemplateJobsParams","attributes","group_by_time","agreggateTemplateParams","group_by","cancelled","canceled_count","error_count","new","new_count","pending","pending_count","running","running_count","waiting","waiting_count","global_palette_green_200","global_palette_black_850","global_palette_orange_300","global_palette_red_100","global_palette_cyan_200","global_palette_purple_300","global_palette_blue_300","global_palette_light_green_200","descriptionStats","total_count","formatJobType","most_failed_tasks","cleanup","onClose","NoResults","DescriptionList","isHorizontal","columnModifier","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","Divider","marginTop","marginBottom","TableComposable","Thead","Tr","heading","Th","Tbody","job","Td","template_name","cluster_name","formatDateTime","finished","TemplatesList","templates","setSelectedId","isModalOpen","setIsModalOpen","displayJobType","initialTopTemplateParams","initialTopWorkflowParams","initialModuleParams","setPreFlightError","clusters","chartData","setData","setTemplates","workflows","setWorkflows","setModules","initialOptionsParams","optionsQueryParams","topTemplatesParams","topWorkflowParams","topModuleParams","initializeWithPreflight","display","JobExplorerListRow","expandedInfo","created","started","expand","rowIndex","tower_link","org_name","colSpan","ExpandableRowContent","cols","JobExplorerList","head","JobExplorer","meta","setFromPagination","dispatch","appNavClick","secondaryNav","initialSearchParams","parse","parseBooleans","parseNumbers","updateURL","Pagination","count","setPagination","isCompact","PaginationVariant","ExternalLinkAltIcon","PFExternalLinkAltIcon","NotificationDrawerListItem","PFNotificationDrawerListItem","NotificationDrawerList","PFNotificationDrawerList","stringifyDate","day","moment","now","utc","isAfter","diff","isSame","valueOf","AllNotificationTemplate","notifications","notification_id","tower_url","NotificationDrawerListItemHeader","NotificationDrawerListItemBody","timestamp","ErrorNotificationTemplate","notification","NoticeNotificationTemplate","WarningNotificationTemplate","NotificationsList","filterBy","PFCardTitle","DropdownGroup","notificationOptions","disabled","formatClusterName","uuid","install_uuid","notificationsData","setNotificationsData","clusterOptions","setClusterOptions","selectedCluster","setSelectedCluster","firstRender","setFirstRender","setIsLoading","setMeta","setId","setSeverity","ignore","fetchEndpoints","all","p","clustersData","FormSelect","FormSelectOption","isDisabled","severity","NotificationDrawer","Container","LegendDetail","Wrapper","Color","SubTitle","Legend","chartName","some","pieces","GroupedBarChart","TooltipClass","legend","colorFunc","selectedIds","setSelectedIds","selectedOrgs","x0","x1","maxTicksOneMonth","maxTicksTwoMonths","dates","yLabel","exit","bars","merge","subEnter","moreDetail","endsWith","defaultProps","OrgsTooltip","orgName","HostsTooltip","perc","percSuccess","drawn","percent","success_rate","maxLength","percentageTotal","percentageSuccess","boundingBOx","showSuccess","boundingHeight","boundingWidth","PieChart","a","b","radius","min","filteredData","getTotal","donutTooltip","pie","arc","outerRadius","innerRadius","classed","CardContainer","TopCard","scaleOrdinal","pieChartMapper","attrName","chartMapper","rest","dateForJobExplorer","OrganizationStatistics","activeTabKey","setActiveTabKey","orgs","setOrgs","setJobs","tasks","setTasks","constants","jobEventsByOrgParams","include_others","jobRunsByOrgParams","jobsByDateAndOrgParams","hostAcrossOrgParams","readJobsOrHosts","Tabs","activeKey","tabIndex","Tab","eventKey","marginLeft","canWrite","rbac","perms","write","Redirect","CardActionsWrapper","CardActionsRow","WarningMessage","Alert","DeleteButton","onConfirm","modalTitle","ouiaId","deleteMessage","deleteDetailsRequests","disabledTooltip","setIsOpen","deleteMessageError","setDeleteMessageError","deleteDetails","setDeleteDetails","toggleModal","getRelatedResourceDeleteCounts","results","detail","spinnerAriaValueText","actions","isInline","entries","Badge","RoutedTabs","tabsArray","defaultTabId","useLocation","tab","link","getActiveTabId","match","TabTitleText","role","arrayOf","shape","number","string","oneOfType","PFDivider","DetailsTab","plans","hosts","manual_time","modified","template_details","renderOptionsBasedValue","labelsAndValues","Name","Description","Frequency","Template","showTemplate","useRequest","useCallback","deletePlans","request","deleteError","relatedResourceDeleteRequests","Error","isDeleteDisabled","result","deleteDetailsError","fetchDeleteDetails","useDismissableError","dismissError","List","task","ListItem","CardFooter","n","toFixed","toLocaleString","_a","_b","_c","isMoney","isPlain","FormulaDescription","__assign","assign","s","arguments","prototype","hasOwnProperty","apply","yearLabels","initial","year1","year2","year3","cost","benefit","net","setIsMoney","barChartData","charts","kind","parent","domainPadding","themeColor","cursor","stickToAxis","mouseFollow","legendTooltip","legendData","childName","symbol","fill","titleProperyForLegend","customFnc","datum","grid","stroke","axisLabel","barRatio","barWidth","labelName","strokeWidth","functions","fetchFnc","resolve","year","total_costs","projections","monetary_stats","total_benefits","cumulative_net_benefits","total_hours_spent_risk_adjusted","time_stats","total_hours_saved","cumulative_time_net_benefits","response_type","getChartData","ToggleGroup","ToggleGroupItem","buttonId","isSelected","schema","Edit","useParams","Form","locationState","pageTitle","onEdit","indexOf","breadcrumbUrl","breadcrumbsItems","Route","exact","EmptyList","canAdd","AddCircleOIcon","CardLabel","Small","Checkbox","PFCheckbox","CardDetail","template","plan","handleSelect","projectedSavings","isCardKebabOpen","setIsCardKebabOpen","useRouteMatch","kebabDropDownItems","DropdownItem","CardHeaderMain","Link","Dropdown","toggle","KebabToggle","dropdownItems","row","requiredField","username","image","ToolbarDeleteButton","itemsUnableToDelete","itemsToDelete","pluralizedItemName","onDelete","errorMessage","cannotDelete","Boolean","warningMessage","PageContainer","FlexMain","Footer","savingsPlanner","combinedOptions","list","isAllSelected","prevState","useSelected","useDeleteItems","qsConfig","allItemsSelected","fetchItems","deleteLoading","deletionError","deleteItems","clearDeletionError","handleDelete","EmptyListIcon","Gallery","minWidths","sm","md","xl","convertTasks","task_order","Details","formData","categoryIsOpen","setCategoryIsOpen","manualTimeIsOpen","setManualTimeIsOpen","frequencyPeriodIsOpen","setFrequencyPeriodIsOpen","FormGroup","fieldId","newName","newDescription","newHosts","TaskSection","TaskTitle","TaskDeleteButton","DeleteTaskActionSection","DataListAction","TaskRow","DataListItemRow","Tasks","taskToAdd","setTaskToAdd","liveText","setLiveText","appendTask","trimmedTask","trim","newTaskName","onDragFinish","newItemOrder","onDragStart","newId","onDragMove","oldIndex","newIndex","onDragCancel","itemOrder","DataListControl","DataListDragButton","aria-describedby","aria-pressed","DataListItemCells","dataListCells","removeTask","aria-live","ListFooter","Templates","formDispatch","hash","queryParamsDispatch","event","startStep","setStartStep","apiResponse","reset","useReducer","requestPayload","hourly_rate","frequency_per_period","usePlanData","steps","step_number","nextButtonText","CustomFooter","WizardFooter","WizardContextConsumer","activeStep","onNext","onBack","onSave","step","onStepChange","newStep","plan_created","Wizard","navAriaLabel","mainAriaLabel","onGoToStep","footer","startAtStep","defaultParams","roi","organizationStatistics","requests","hasCount","savingsPlan","readRecordApi","isNumeric","toString","dateTime","format","mins","dataFetchReducer","action","payload","initialData","postprocess","setRequest","didCancel","initialWithCalculatedParams","startDate","endDate","newState","newValues","actionMapper","varName","setEndDate","setStartDate","days","subtract","setStartDateAsString","query","makeRequest","initialValue","setResult","setError","isMounted","useRef","useIsMounted","showError","setShowError","requestError","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","exports","perPageOptions","getOwnPropertySymbols","propertyIsEnumerable","__rest","currentPage","floor","returnOffsetVal","page","itemCount","widgetId","perPage","onPerPageSelect","onSetPage","Intl","NumberFormat","currency"],"mappings":"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","file":"js/automation_analytics.34514bbac207081e71b5.js","sourcesContent":["import { stringify } from 'query-string';\n/* v0 endpoints */\nconst clustersEndpoint = `/api/tower-analytics/v0/clusters/`;\nconst notificationsEndpoint = `/api/tower-analytics/v0/notifications/`;\nconst preflightEndpoint = `/api/tower-analytics/v0/authorized/`;\n\n/* v1 endpoints */\nconst jobExplorerEndpoint = '/api/tower-analytics/v1/job_explorer/';\nconst hostExplorerEndpoint = '/api/tower-analytics/v1/host_explorer/';\nconst eventExplorerEndpoint = '/api/tower-analytics/v1/event_explorer/';\nconst ROIEndpoint = '/api/tower-analytics/v1/roi_templates/';\nconst plansEndpoint = '/api/tower-analytics/v1/plans/';\nconst planEndpoint = '/api/tower-analytics/v1/plan/';\n\n/* page options endpoints */\nconst jobExplorerOptionsEndpoint =\n  '/api/tower-analytics/v1/job_explorer_options/';\nconst ROITemplatesOptionsEndpoint =\n  '/api/tower-analytics/v1/roi_templates_options/';\nconst orgOptionsEndpoint =\n  '/api/tower-analytics/v1/dashboard_organization_statistics_options/';\nconst clustersOptionsEndpoint =\n  '/api/tower-analytics/v1/dashboard_clusters_options/';\nconst planOptionsEndpoint = '/api/tower-analytics/v1/plan_options/';\n\nfunction handleResponse(response) {\n  return response.json().then((json) => {\n    if (response.ok) {\n      return json;\n    }\n\n    if (response.status === 404 || response.status === 401) {\n      return Promise.reject({\n        status: response.status,\n        message: json,\n      });\n    } else if (response.status === 403) {\n      return Promise.reject({\n        status: response.status,\n        error: 'RBAC access denied',\n      });\n    } else {\n      return Promise.reject(json);\n    }\n  });\n}\n\nfunction authenticatedFetch(endpoint, options) {\n  return window.insights.chrome.auth\n    .getUser()\n    .then(() => fetch(endpoint, options));\n}\n\nexport const preflightRequest = () => {\n  return authenticatedFetch(preflightEndpoint).then(handleResponse);\n};\n\nexport const readJobExplorer = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(jobExplorerEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readEventExplorer = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(eventExplorerEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readROI = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(ROIEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readHostExplorer = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(hostExplorerEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readPlans = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(plansEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const createPlan = ({ params = {} }) => {\n  let url = new URL(planEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const deletePlan = ({ params = {} }) => {\n  let url = new URL(`${planEndpoint}${params.id}/`, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'DELETE',\n  }).then(handleResponse);\n};\n\nexport const updatePlan = ({ id, params = {} }) => {\n  let url = new URL(`${planEndpoint}${id}/`, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'PUT',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readPlan = ({ params = {} }) => {\n  let url = new URL(plansEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readClustersOptions = ({ params = {} }) => {\n  let url = new URL(clustersOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readOrgOptions = ({ params = {} }) => {\n  let url = new URL(orgOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readROIOptions = ({ params = {} }) => {\n  let url = new URL(ROITemplatesOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readPlanOptions = () => {\n  let url = new URL(planOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'GET',\n  }).then(handleResponse);\n};\n\n// v0 endpoints used in Notifications.js\nexport const readClusters = () => {\n  return authenticatedFetch(clustersEndpoint).then(handleResponse);\n};\n\nexport const readNotifications = ({ params = {} }) => {\n  let url = new URL(notificationsEndpoint, window.location.origin);\n  Object.keys(params).forEach((key) =>\n    url.searchParams.append(key, params[key])\n  );\n  return authenticatedFetch(url).then(handleResponse);\n};\n\nexport const readJobExplorerOptions = ({ params = {} }) => {\n  let url = new URL(jobExplorerOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nconst initializeChart = (Chart) => {\n  const BaseChart = (props) => {\n    const { id, margin } = props;\n\n    const getWidth = () => {\n      let width;\n      width =\n        parseInt(d3.select('#' + id).style('width')) -\n          margin.left -\n          margin.right || 700;\n      return width;\n    };\n\n    const getHeight = () => {\n      let height;\n      height =\n        parseInt(d3.select('#' + id).style('height')) -\n          margin.top -\n          margin.bottom || 450;\n      return height;\n    };\n\n    let history = useHistory();\n\n    return (\n      <Chart\n        {...props}\n        getWidth={getWidth}\n        getHeight={getHeight}\n        history={history}\n      />\n    );\n  };\n\n  BaseChart.propTypes = {\n    id: PropTypes.string,\n    margin: PropTypes.object,\n  };\n\n  return BaseChart;\n};\n\ninitializeChart.propTypes = {\n  Chart: PropTypes.element,\n};\n\nexport default initializeChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Modal, Title } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon as PFCheckCircleIcon,\n  ExclamationCircleIcon as PFExclamationCircleIcon,\n  ExclamationTriangleIcon as PFExclamationTriangleIcon,\n  InfoCircleIcon as PFInfoCircleIcon,\n  TimesCircleIcon as PFTimesCircleIcon,\n} from '@patternfly/react-icons';\nimport styled from 'styled-components';\n\nconst ExclamationCircleIcon = styled(PFExclamationCircleIcon)`\n  color: var(--pf-global--danger-color--100);\n`;\n\nconst TimesCircleIcon = styled(PFTimesCircleIcon)`\n  color: var(--pf-global--danger-color--100);\n`;\n\nconst InfoCircleIcon = styled(PFInfoCircleIcon)`\n  color: var(--pf-global--info-color--100);\n`;\n\nconst CheckCircleIcon = styled(PFCheckCircleIcon)`\n  color: var(--pf-global--success-color--100);\n`;\n\nconst ExclamationTriangleIcon = styled(PFExclamationTriangleIcon)`\n  color: var(--pf-global--warning-color--100);\n`;\n\nconst Header = styled.div`\n  display: flex;\n  svg {\n    margin-right: 16px;\n  }\n`;\n\nconst AlertModal = ({\n  isOpen,\n  title,\n  label = 'Alert modal',\n  variant = 'warning',\n  children,\n  ...props\n}) => {\n  const variantIcons = {\n    danger: <ExclamationCircleIcon size=\"lg\" />,\n    error: <TimesCircleIcon size=\"lg\" />,\n    info: <InfoCircleIcon size=\"lg\" />,\n    success: <CheckCircleIcon size=\"lg\" />,\n    warning: <ExclamationTriangleIcon size=\"lg\" />,\n  };\n\n  const customHeader = (\n    <Header>\n      {variant ? variantIcons[variant] : null}\n      <Title id=\"alert-modal-header-label\" size=\"2xl\" headingLevel=\"h2\">\n        {title}\n      </Title>\n    </Header>\n  );\n\n  return (\n    <Modal\n      header={customHeader}\n      aria-label={label}\n      aria-labelledby=\"alert-modal-header-label\"\n      isOpen={!!isOpen}\n      variant=\"small\"\n      title={title}\n      {...props}\n    >\n      {children}\n    </Modal>\n  );\n};\n\nAlertModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  variant: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default AlertModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { global_danger_color_200 as globalDangerColor200 } from '@patternfly/react-tokens';\n\nconst ApiErrorState = ({ message }) => (\n  <EmptyState variant={EmptyStateVariant.small}>\n    <EmptyStateIcon\n      icon={ExclamationCircleIcon}\n      color={globalDangerColor200.value}\n    />\n    <Title headingLevel=\"h2\" size=\"lg\">\n      Error\n    </Title>\n    <EmptyStateBody>{message}</EmptyStateBody>\n  </EmptyState>\n);\n\nApiErrorState.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default ApiErrorState;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbHeading,\n} from '@patternfly/react-core';\n\nimport getBaseName from '../Utilities/getBaseName';\n\nconst Breadcrumbs = ({ items = [], current = null }) => {\n  return (\n    <Breadcrumb>\n      {items.map(({ title, navigate }) => {\n        const basePathNavigate = getBaseName() + navigate;\n        return (\n          <BreadcrumbItem key={title} to={basePathNavigate}>\n            {title}\n          </BreadcrumbItem>\n        );\n      })}\n      {current && <BreadcrumbHeading>{current}</BreadcrumbHeading>}\n    </Breadcrumb>\n  );\n};\n\nBreadcrumbs.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      navigate: PropTypes.any,\n      title: PropTypes.node,\n    })\n  ),\n  current: PropTypes.node,\n};\n\nexport default Breadcrumbs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { WrenchIcon } from '@patternfly/react-icons';\n\nconst DefaultEmptyState = ({ preflightError: error }) => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={WrenchIcon} />\n    {error.status === 404 && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          No data found\n        </Title>\n        <EmptyStateBody>\n          Please visit{' '}\n          <a\n            href=\"https://docs.ansible.com/ansible-tower/latest/html/administration/usability_data_collection.html#automation-analytics\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            here\n          </a>{' '}\n          to learn how to enable Automation Analytics.\n        </EmptyStateBody>\n      </>\n    )}\n    {error.status === 401 && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          Not authorized\n        </Title>\n        <EmptyStateBody>\n          You do not have the correct permissions to view this page.\n        </EmptyStateBody>\n      </>\n    )}\n    {!error.status && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          Something went wrong, please try reloading the page\n        </Title>\n        <Button variant=\"primary\" onClick={() => window.location.reload()}>\n          Reload\n        </Button>\n      </>\n    )}\n  </EmptyState>\n);\n\nDefaultEmptyState.propTypes = {\n  preflightError: PropTypes.object,\n};\n\nexport default DefaultEmptyState;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Card as PFCard,\n  CardBody as PFCardBody,\n  ExpandableSection as PFExpandable,\n} from '@patternfly/react-core';\n\nconst Card = styled(PFCard)`\n  background-color: var(--pf-global--BackgroundColor--200);\n  overflow-wrap: break-word;\n`;\n\nconst CardBody = styled(PFCardBody)`\n  max-height: 200px;\n  overflow: scroll;\n`;\n\nconst Expandable = styled(PFExpandable)`\n  text-align: left;\n\n  & .pf-c-expandable__toggle {\n    padding-left: 10px;\n    margin-left: 5px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n`;\n\nfunction ErrorDetail({ error }) {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const handleToggle = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  return (\n    <>\n      {Array.isArray(error) && error.length && (\n        <Expandable\n          toggleText={'Details'}\n          onToggle={handleToggle}\n          isExpanded={isExpanded}\n        >\n          <Card>\n            <CardBody>\n              <ul>\n                {error.map((m) =>\n                  typeof m === 'string' ? <li key={m}>{m}</li> : null\n                )}\n              </ul>\n            </CardBody>\n          </Card>\n        </Expandable>\n      )}\n    </>\n  );\n}\n\nErrorDetail.propTypes = {\n  error: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default ErrorDetail;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ClockIcon,\n  SyncAltIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\n\nconst JobStatus = ({ status }) => {\n  const capitalized = (str) => str.charAt(0).toUpperCase() + str.slice(1);\n\n  const getColor = () => {\n    switch (status) {\n      case 'successful':\n        return 'green';\n      case 'failed':\n      case 'error':\n        return 'red';\n      case 'running':\n      case 'pending':\n        return 'blue';\n      case 'canceled':\n        return 'orange';\n      // case new, waiting\n      default:\n        return 'grey';\n    }\n  };\n\n  const getIcon = () => {\n    switch (status) {\n      case 'successful':\n        return <CheckCircleIcon />;\n      case 'failed':\n      case 'error':\n        return <ExclamationCircleIcon />;\n      case 'running':\n        return <SyncAltIcon />;\n      case 'canceled':\n        return <ExclamationTriangleIcon />;\n      // case new, waiting, pending\n      default:\n        return <ClockIcon />;\n    }\n  };\n\n  return (\n    <Label variant=\"outline\" color={getColor()} icon={getIcon()}>\n      {capitalized(status)}\n    </Label>\n  );\n};\n\nJobStatus.propTypes = {\n  status: PropTypes.oneOf([\n    'successful',\n    'failed',\n    'error',\n    'running',\n    'new',\n    'waiting',\n    'pending',\n    'canceled',\n  ]),\n};\n\nexport default JobStatus;\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst DefaultLoadingState = () => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={CubesIcon} />\n    <Title headingLevel=\"h5\" size=\"lg\">\n      Loading...\n    </Title>\n    <EmptyStateBody>Please wait.</EmptyStateBody>\n  </EmptyState>\n);\n\nexport default DefaultLoadingState;\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst NoData = () => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={CubesIcon} />\n    <Title headingLevel=\"h5\" size=\"lg\">\n      No Data\n    </Title>\n  </EmptyState>\n);\n\nexport default NoData;\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst NoResults = () => {\n  return (\n    <EmptyState variant={EmptyStateVariant.full}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title size=\"lg\" headingLevel=\"h4\">\n        No results found\n      </Title>\n      <EmptyStateBody>\n        No results match the filter criteria. Remove all filters or clear all\n        filters to show results.\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n\nexport default NoResults;\n","export const optionsForCategories = {\n  status: {\n    type: 'select',\n    isSingle: false,\n    name: 'Status',\n    placeholder: 'Filter by job status',\n    hasChips: true,\n  },\n  quick_date_range: {\n    type: 'select',\n    isSingle: true,\n    name: 'Date',\n    placeholder: 'Filter by date',\n    hasChips: false,\n  },\n  start_date: {\n    type: 'date',\n    name: 'Start date',\n    hasChips: false,\n  },\n  end_date: {\n    type: 'date',\n    name: 'End date',\n    hasChips: false,\n  },\n  job_type: {\n    type: 'select',\n    isSingle: false,\n    name: 'Job',\n    placeholder: 'Filter by job type',\n    hasChips: true,\n  },\n  org_id: {\n    type: 'select',\n    isSingle: false,\n    name: 'Organization',\n    placeholder: 'Filter by organization',\n    hasChips: true,\n  },\n  cluster_id: {\n    type: 'select',\n    isSingle: false,\n    name: 'Cluster',\n    placeholder: 'Filter by cluster',\n    hasChips: true,\n  },\n  template_id: {\n    type: 'select',\n    isSingle: false,\n    name: 'Template',\n    placeholder: 'Filter by template',\n    hasChips: true,\n  },\n  sort_options: {\n    type: 'select',\n    isSingle: true,\n    name: 'Sort by',\n    placeholder: 'Sort by attribute',\n    hasChips: false,\n  },\n  automation_status: {\n    type: 'select',\n    isSingle: false,\n    name: 'Automation status',\n    placeholder: 'Filter by automation status',\n    hasChips: true,\n  },\n  frequency_period: {\n    type: 'select',\n    isSingle: false,\n    name: 'Frequency',\n    placeholder: 'Filter by frequency',\n    hasChips: true,\n  },\n  category: {\n    type: 'select',\n    isSingle: false,\n    name: 'Category',\n    placeholder: 'Filter by category',\n    hasChips: true,\n  },\n  inventory_id: {\n    type: 'select',\n    isSingle: false,\n    name: 'Inventory',\n    placeholder: 'Filter by inventory',\n    hasChips: true,\n  },\n  name: {\n    type: 'text',\n    name: 'Search by name',\n    hasChips: true,\n  },\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarItem, Select, SelectOption } from '@patternfly/react-core';\n\nconst CategoryDropdown = ({\n  selected,\n  setSelected = () => {},\n  categories = [],\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <ToolbarItem>\n      <Select\n        isOpen={isExpanded}\n        variant={'single'}\n        aria-label={'Categories'}\n        onToggle={() => setIsExpanded(!isExpanded)}\n        onSelect={(_event, selection) => {\n          setSelected(selection);\n          setIsExpanded(false);\n        }}\n        selections={selected}\n        placeholderText={'Filter by'}\n      >\n        {categories.map(({ key, name }) => (\n          <SelectOption key={key} value={key}>\n            {name}\n          </SelectOption>\n        ))}\n      </Select>\n    </ToolbarItem>\n  );\n};\n\nCategoryDropdown.propTypes = {\n  categories: PropTypes.array,\n  selected: PropTypes.string,\n  setSelected: PropTypes.func,\n};\n\nexport default CategoryDropdown;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ToolbarFilter,\n  Select as PFSelect,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\n\nimport { handleCheckboxChips, handleSingleChips } from './helpers';\nimport { optionsForCategories } from '../../constants';\nimport styled from 'styled-components';\n\nconst OptionSpan = styled('span')`\n  display: block;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n  max-width: 300px;\n`;\n\nconst renderValues = (values) =>\n  values &&\n  values.map(({ key, value, description }) => (\n    <SelectOption key={key} value={key} description={description}>\n      <OptionSpan>{value}</OptionSpan>\n    </SelectOption>\n  ));\n\nconst Select = ({\n  categoryKey,\n  value,\n  selectOptions,\n  isVisible = true,\n  setValue,\n}) => {\n  const [expanded, setExpanded] = useState(false);\n  const options = optionsForCategories[categoryKey];\n\n  const onDelete = (_, valueToDelete) => {\n    const single = optionsForCategories[categoryKey].isSingle;\n\n    if (single) {\n      setValue(null);\n    } else {\n      const keyToDelete = selectOptions.find(\n        ({ value }) => value === valueToDelete\n      ).key;\n      const filteredArr = value.filter((value) => value !== keyToDelete);\n      setValue(filteredArr);\n    }\n  };\n\n  const onFilter = (_, textInput) => {\n    if (textInput === '') {\n      return renderValues(selectOptions);\n    } else {\n      return renderValues(\n        selectOptions.filter(({ value }) =>\n          value.toLowerCase().includes(textInput.toLowerCase())\n        )\n      );\n    }\n  };\n\n  const handleChips = () => {\n    if (options.isSingle) {\n      return handleSingleChips(value, selectOptions);\n    } else {\n      return handleCheckboxChips(value, selectOptions);\n    }\n  };\n\n  const onSelect = (_, selection) => {\n    if (options.isSingle) {\n      setValue(selection);\n      setExpanded(false);\n    } else {\n      setValue(\n        !value.includes(selection)\n          ? [...value, selection]\n          : value.filter((value) => value !== selection)\n      );\n    }\n  };\n\n  return (\n    <ToolbarFilter\n      data-cy={categoryKey}\n      key={categoryKey}\n      showToolbarItem={isVisible}\n      chips={options.hasChips ? handleChips() : []}\n      categoryName={options.name}\n      deleteChip={options.hasChips ? onDelete : null}\n    >\n      <PFSelect\n        variant={\n          options.isSingle ? SelectVariant.single : SelectVariant.checkbox\n        }\n        aria-label={options.name}\n        onToggle={() => setExpanded(!expanded)}\n        onSelect={onSelect}\n        selections={value}\n        isOpen={expanded}\n        hasInlineFilter\n        placeholderText={options.placeholder}\n        onFilter={onFilter}\n        maxHeight={'1000%'}\n      >\n        {renderValues(selectOptions)}\n      </PFSelect>\n    </ToolbarFilter>\n  );\n};\n\nSelect.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]).isRequired,\n  selectOptions: PropTypes.array,\n  isVisible: PropTypes.bool,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default Select;\n","/**\n * Get comparator values if their key is in the item list\n */\nexport const handleCheckboxChips = (item, comparator) => {\n  if (item && comparator) {\n    return item.reduce((acc, i) => {\n      Number.isInteger(parseInt(i)) ? (i = parseInt(i)) : i;\n\n      comparator.forEach((cmpItem) => {\n        if (cmpItem.key === i) {\n          acc.push(cmpItem.value);\n        }\n      });\n\n      return acc;\n    }, []);\n  }\n\n  return [];\n};\n\n/**\n * Convert a list of objects to a list of the last value if defined\n */\nexport const handleSingleChips = (item, comparator) => {\n  if (item && typeof item === 'string' && comparator) {\n    let val;\n    comparator.forEach((i) => {\n      if (i.key === item) {\n        val = i.value;\n      }\n    });\n\n    if (val !== undefined) {\n      return [val];\n    }\n  }\n\n  return [];\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, TextInput } from '@patternfly/react-core';\nimport { optionsForCategories } from '../../constants';\n\nconst Date = ({ categoryKey, value = '', setValue = () => {} }) => {\n  const options = optionsForCategories[categoryKey];\n\n  return (\n    <InputGroup>\n      <TextInput\n        type=\"date\"\n        aria-label={options.name}\n        value={value}\n        onChange={setValue}\n      />\n    </InputGroup>\n  );\n};\n\nDate.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default Date;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ToolbarFilter,\n  TextInput,\n  InputGroup,\n  Button,\n} from '@patternfly/react-core';\n\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { optionsForCategories } from '../../constants';\n\nconst Text = ({ categoryKey, isVisible = true, value = '', setValue }) => {\n  const [searchVal, setSearchVal] = useState(value);\n  const options = optionsForCategories[categoryKey];\n\n  const onDelete = () => {\n    setValue('');\n  };\n\n  const handleChips = () => {\n    return value ? [value] : [];\n  };\n\n  useEffect(() => {\n    setSearchVal(value);\n  }, [value]);\n\n  return (\n    <ToolbarFilter\n      data-cy={categoryKey}\n      key={categoryKey}\n      showToolbarItem={isVisible}\n      chips={options.hasChips ? handleChips() : []}\n      categoryName={options.name}\n      deleteChip={options.hasChips ? onDelete : null}\n    >\n      <InputGroup>\n        <TextInput\n          type=\"search\"\n          aria-label={options.name}\n          value={searchVal}\n          onChange={setSearchVal}\n          onKeyDown={(e) => {\n            if (e.key && e.key === 'Enter') {\n              e.preventDefault();\n              setValue(searchVal);\n            }\n          }}\n        />\n        <Button\n          variant=\"control\"\n          aria-label={`Search button for ${options.name}`}\n          onClick={() => {\n            setValue(searchVal);\n          }}\n        >\n          <SearchIcon />\n        </Button>\n      </InputGroup>\n    </ToolbarFilter>\n  );\n};\n\nText.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.any,\n  isVisible: PropTypes.bool,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default Text;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Select from './Select';\nimport Date from './Date';\nimport Text from './Text';\nimport { optionsForCategories } from '../../constants';\n\nconst components = {\n  select: Select,\n  date: Date,\n  text: Text,\n};\n\nconst ToolbarInput = ({\n  categoryKey,\n  value,\n  selectOptions,\n  isVisible = true,\n  setValue,\n}) => {\n  const options = optionsForCategories[categoryKey];\n  const SelectedInput = components[options.type];\n\n  const defaultValue = () => {\n    if (value) {\n      return value;\n    } else if (options.type !== 'select') {\n      return '';\n    } else if (options.isSingle) {\n      return '';\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <SelectedInput\n      categoryKey={categoryKey}\n      value={defaultValue()}\n      selectOptions={selectOptions}\n      isVisible={isVisible}\n      setValue={setValue}\n    />\n  );\n};\n\nToolbarInput.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  selectOptions: PropTypes.array,\n  isVisible: PropTypes.bool,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default ToolbarInput;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarGroup } from '@patternfly/react-core';\n\nimport CategoryDropdown from './CategoryDropdown';\nimport ToolbarInput from './ToolbarInput/';\nimport { optionsForCategories } from '../constants';\n\nconst FilterCategoriesGroup = ({ filterCategories, filters, setFilters }) => {\n  const [currentCategory, setCurrentCategory] = useState(\n    Object.keys(filterCategories)[0]\n  );\n\n  return (\n    <ToolbarGroup variant=\"filter-group\">\n      <CategoryDropdown\n        selected={currentCategory}\n        setSelected={setCurrentCategory}\n        categories={Object.keys(filterCategories).map((el) => ({\n          key: el,\n          name: optionsForCategories[el].name,\n        }))}\n      />\n      {Object.keys(filterCategories).map((key) => (\n        <ToolbarInput\n          key={key}\n          categoryKey={key}\n          value={filters[key]}\n          selectOptions={filterCategories[key]}\n          isVisible={currentCategory === key}\n          setValue={(value) => setFilters(key, value)}\n        />\n      ))}\n    </ToolbarGroup>\n  );\n};\n\nFilterCategoriesGroup.propTypes = {\n  filterCategories: PropTypes.object.isRequired,\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n};\n\nexport default FilterCategoriesGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarGroup } from '@patternfly/react-core';\n\nimport ToolbarInput from './ToolbarInput/';\n\nconst QuickDateGroup = ({ filters, setFilters, values }) => (\n  <ToolbarGroup variant=\"filter-group\">\n    <ToolbarInput\n      categoryKey=\"quick_date_range\"\n      value={filters.quick_date_range}\n      selectOptions={values}\n      setValue={(value) => setFilters('quick_date_range', value)}\n    />\n    {filters.quick_date_range && filters.quick_date_range.includes('custom') && (\n      <>\n        <ToolbarInput\n          categoryKey=\"start_date\"\n          value={filters.start_date}\n          setValue={(e) => setFilters('start_date', e)}\n        />\n        <ToolbarInput\n          categoryKey=\"end_date\"\n          value={filters.end_date}\n          setValue={(e) => setFilters('end_date', e)}\n        />\n      </>\n    )}\n  </ToolbarGroup>\n);\n\nQuickDateGroup.propTypes = {\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  values: PropTypes.array.isRequired,\n};\n\nexport default QuickDateGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarGroup, Button } from '@patternfly/react-core';\nimport { SortAmountDownIcon, SortAmountUpIcon } from '@patternfly/react-icons';\n\nimport ToolbarInput from './ToolbarInput';\n\nconst SortByGroup = ({ filters, setFilters, sort_options }) => (\n  <ToolbarGroup variant=\"filter-group\">\n    <ToolbarInput\n      categoryKey=\"sort_options\"\n      value={filters.sort_options}\n      selectOptions={sort_options}\n      setValue={(value) => setFilters('sort_options', value)}\n    />\n    <Button\n      variant=\"control\"\n      onClick={() =>\n        setFilters('sort_order', filters.sort_order === 'asc' ? 'desc' : 'asc')\n      }\n    >\n      {filters.sort_order === 'asc' && <SortAmountUpIcon />}\n      {filters.sort_order === 'desc' && <SortAmountDownIcon />}\n    </Button>\n  </ToolbarGroup>\n);\n\nSortByGroup.propTypes = {\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  sort_options: PropTypes.array.isRequired,\n};\n\nexport default SortByGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, Switch } from '@patternfly/react-core';\nimport {\n  Card,\n  CardTitle,\n  CardBody,\n  CardActions,\n  CardHeader,\n} from '@patternfly/react-core';\nimport { QuestionCircleIcon, TimesIcon } from '@patternfly/react-icons';\n\n/* TODO: For future work: make settings more modular for different pages */\nconst SettingsPanel = ({\n  filters,\n  setFilters,\n  settingsExpanded,\n  setSettingsExpanded,\n}) => (\n  <Card isFlat style={{ backgroundColor: '#EEEEEE' }}>\n    <CardHeader>\n      <CardActions>\n        <Button\n          variant=\"plain\"\n          onClick={() => setSettingsExpanded(!settingsExpanded)}\n        >\n          <TimesIcon />\n        </Button>\n      </CardActions>\n      <CardTitle>Settings</CardTitle>\n    </CardHeader>\n    <CardBody>\n      <Switch\n        id=\"showRootWorkflowJobs\"\n        label=\"Ignore nested workflows and jobs\"\n        labelOff=\"Ignore nested workflows and jobs\"\n        isChecked={filters.only_root_workflows_and_standalone_jobs}\n        onChange={(val) => {\n          setFilters('only_root_workflows_and_standalone_jobs', val);\n        }}\n      />\n      <Tooltip\n        position={'top'}\n        content={\n          <div>\n            {' '}\n            If enabled, nested workflows and jobs will not be included in the\n            overall totals. Enable this option to filter out duplicate entries.\n          </div>\n        }\n      >\n        <QuestionCircleIcon />\n      </Tooltip>\n    </CardBody>\n  </Card>\n);\n\nSettingsPanel.propTypes = {\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  settingsExpanded: PropTypes.bool.isRequired,\n  setSettingsExpanded: PropTypes.func.isRequired,\n};\n\nexport default SettingsPanel;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  Button,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { FilterIcon, CogIcon } from '@patternfly/react-icons';\n\nimport { optionsForCategories } from './constants';\nimport {\n  FilterCategoriesGroup,\n  QuickDateGroup,\n  SortByGroup,\n  SettingsPanel,\n} from './Groups/';\n\nconst FilterableToolbar = ({\n  categories,\n  filters,\n  setFilters,\n  pagination = null,\n  hasSettings = false,\n  additionalControls = [],\n  hideQuickDateRange = false,\n  hideSortOptions = false,\n}) => {\n  const [settingsExpanded, setSettingsExpanded] = useState(false);\n  const { quick_date_range, sort_options, ...restCategories } = categories;\n\n  // Filter out elements which are not in the option object.\n  const filterCategories = Object.keys(restCategories)\n    .filter((key) => Object.keys(optionsForCategories).includes(key))\n    .reduce((obj, key) => {\n      obj[key] = restCategories[key];\n      return obj;\n    }, {});\n\n  return (\n    <>\n      <Toolbar\n        id=\"filterable-toolbar-with-chip-groups\"\n        clearAllFilters={() => {\n          setFilters(null, null);\n        }}\n        collapseListedFiltersBreakpoint=\"xl\"\n      >\n        <ToolbarContent>\n          <Button variant=\"control\">\n            <FilterIcon />\n          </Button>\n          {Object.keys(filterCategories).length > 0 && (\n            <FilterCategoriesGroup\n              filterCategories={filterCategories}\n              filters={filters}\n              setFilters={setFilters}\n            />\n          )}\n          {!hideQuickDateRange && quick_date_range && (\n            <QuickDateGroup\n              filters={filters}\n              setFilters={setFilters}\n              values={quick_date_range}\n            />\n          )}\n          {!hideSortOptions && sort_options && (\n            <SortByGroup\n              filters={filters}\n              setFilters={setFilters}\n              sort_options={sort_options}\n            />\n          )}\n          {hasSettings && (\n            <ToolbarItem>\n              <Button\n                variant=\"plain\"\n                onClick={() => setSettingsExpanded(!settingsExpanded)}\n                aria-label=\"settings\"\n                isActive={settingsExpanded}\n              >\n                <CogIcon />\n              </Button>\n            </ToolbarItem>\n          )}\n          {additionalControls.length > 0 && (\n            <ToolbarGroup>\n              {additionalControls.map((control, idx) => (\n                <ToolbarItem key={idx}>{control}</ToolbarItem>\n              ))}\n            </ToolbarGroup>\n          )}\n          {pagination && (\n            <ToolbarItem\n              variant=\"pagination\"\n              visibility={{ default: 'hidden', lg: 'visible' }}\n            >\n              {pagination}\n            </ToolbarItem>\n          )}\n        </ToolbarContent>\n        {settingsExpanded && (\n          <SettingsPanel\n            filters={filters}\n            setFilters={setFilters}\n            settingsExpanded={settingsExpanded}\n            setSettingsExpanded={setSettingsExpanded}\n          />\n        )}\n      </Toolbar>\n    </>\n  );\n};\n\nFilterableToolbar.propTypes = {\n  categories: PropTypes.object.isRequired,\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  pagination: PropTypes.object,\n  hasSettings: PropTypes.bool,\n  additionalControls: PropTypes.array,\n  hideSortOptions: PropTypes.bool,\n  hideQuickDateRange: PropTypes.bool,\n};\n\nexport default FilterableToolbar;\n","import Toolbar from './Toolbar';\nexport default Toolbar;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport currencyFormatter from '../Utilities/currencyFormatter';\n\nclass Tooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip-base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, 0) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', 92)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.name = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', -2)\n      .text('Template name');\n    this.savings = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 52)\n      .attr('font-size', 12)\n      .attr('font-weight', 'bold')\n      .attr('fill', 'white')\n      .text('Total savings $0');\n    this.manualCost = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', 16)\n      .text('Manual cost $0');\n    this.automationCost = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', 34)\n      .text('Automation cost $0');\n  }\n\n  handleMouseOver = (d) => {\n    let name;\n    let savings;\n    let manualCost;\n    let automationCost;\n    const scrollLeftOffset = d3.select('#d3-roi-chart-root').node().scrollLeft;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10 +\n      scrollLeftOffset;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      30;\n    if (!d) {\n      return;\n    } else {\n      savings = currencyFormatter(+d.delta);\n      name = d.name;\n      manualCost = currencyFormatter(+d.manualCost);\n      automationCost = currencyFormatter(+d.automatedCost);\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n    this.name.text('' + name);\n    this.savings.text(`Total savings ${savings}`);\n    this.manualCost.text(`Manual Cost ${manualCost}`);\n    this.automationCost.text(`Automation Cost ${automationCost}`);\n    this.nameWidth = this.name.node().getComputedTextLength();\n    this.savingsWidth = this.savings.node().getComputedTextLength();\n    this.manualCostWidth = this.manualCost.node().getComputedTextLength();\n    this.automationCostWidth = this.automationCost\n      .node()\n      .getComputedTextLength();\n    this.widestTextElem = d3.max([\n      this.nameWidth,\n      this.savingsWidth,\n      this.automationCostWidth,\n      this.manualCostWidth,\n    ]);\n\n    const maxTextPerc = (this.widestTextElem / this.boxWidth) * 100;\n    const threshold = 85;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 15) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.name.attr('x', -(toolTipWidth - 7));\n      this.savings.attr('x', -(toolTipWidth - 7));\n      this.manualCost.attr('x', -(toolTipWidth - 7));\n      this.automationCost.attr('x', -(toolTipWidth - 7));\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 15) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.name.attr('x', 20);\n      this.savings.attr('x', 20);\n      this.manualCost.attr('x', 20);\n      this.automationCost.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass TopTemplatesSavings extends Component {\n  constructor(props) {\n    super(props);\n    this.init = this.init.bind(this);\n    this.draw = this.draw.bind(this);\n    this.resize = this.resize.bind(this);\n    this.state = {\n      timeout: null,\n    };\n  }\n\n  // Methods\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  init() {\n    this.draw();\n  }\n\n  draw() {\n    // Use PF chart color\n    const color = '#0066CC'; //blue\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const { data } = this.props;\n    let width;\n    // adjust chart width to support larger datasets\n    if (data.length >= 15) {\n      const containerWidth = d3.select('.automation-wrapper').node();\n      width =\n        containerWidth.getBoundingClientRect().width -\n        this.props.margin.left -\n        this.props.margin.right;\n    } else {\n      width = this.props.getWidth();\n    }\n\n    const height = this.props.getHeight();\n    const x = d3.scaleBand().rangeRound([0, width]).padding(0.45);\n    const y = d3.scaleLinear().range([height, 0]);\n    // format our X Axis ticks\n    let ticks;\n    ticks = data.map((d) => d.name);\n    const formatYAxisValue = d3.format('.2s');\n    const xAxis = d3.axisBottom(x).tickValues(ticks);\n\n    const yAxis = d3\n      .axisLeft(y)\n      .ticks(8)\n      .tickFormat((d) => formatYAxisValue(d).replace('G', 'B'))\n      .tickSize(-width, 0, 0);\n\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n\n    const taskNames = data.map((d) => d.name);\n    const tooltip = new Tooltip({\n      svg: '#' + this.props.id,\n    });\n    x.domain(taskNames);\n    y.domain([0, d3.max(data, (d) => d.delta * 1.15) || 8]);\n\n    // add y axis\n    svg\n      .append('g')\n      .attr('class', 'y axis')\n      .call(yAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7')\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 6)\n      .attr('dy', '.71em')\n      .style('text-anchor', 'end')\n      .style('font-weight', 'bold')\n      .text('Value');\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Savings per template ($)');\n\n    // add x axis\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n      .selectAll('text')\n      .style('text-anchor', 'start')\n      .attr('dx', '0.75em')\n      .attr('dy', -x.bandwidth() / 1.45 - 8)\n      .attr('transform', 'rotate(-90)');\n\n    svg.selectAll('.x-axis line').attr('stroke', 'transparent');\n\n    svg\n      .selectAll('.bar')\n      .data(data)\n      .enter()\n      .append('rect')\n      .attr('x', (d) => x(d.name))\n      .attr('width', x.bandwidth())\n      .attr('y', (d) => y(d.delta))\n      .style('fill', () => color)\n      .attr('height', (d) => height - y(d.delta))\n      .on('mouseover', function (d) {\n        d3.select(this).style('fill', d3.rgb(color).darker(1));\n        tooltip.handleMouseOver(d);\n      })\n      .on('mousemove', tooltip.handleMouseOver)\n      .on('mouseout', function () {\n        d3.select(this).style('fill', color);\n        tooltip.handleMouseOut();\n      });\n  }\n\n  componentDidMount() {\n    this.init();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate() {\n    this.init();\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nTopTemplatesSavings.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n};\n\nexport default initializeChart(TopTemplatesSavings);\n","import styled from 'styled-components';\nimport { CardTitle } from '@patternfly/react-core';\n\nexport const BorderedCardTitle = styled(CardTitle)`\n  border-bottom: 1px solid #d7d7d7;\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle, Title } from '@patternfly/react-core';\nimport currencyFormatter from '../../Utilities/currencyFormatter';\n\nconst TotalSavings = ({ totalSavings = 0 }) => (\n  <Card style={{ borderTop: '3px solid #2B9AF3' }}>\n    <CardTitle style={{ paddingBottom: '0' }}>Total savings</CardTitle>\n    <CardBody>\n      <Title\n        headingLevel=\"h3\"\n        size=\"4xl\"\n        style={{ color: 'var(--pf-global--success-color--200)' }}\n      >\n        {currencyFormatter(totalSavings)}\n      </Title>\n    </CardBody>\n  </Card>\n);\n\nTotalSavings.propTypes = {\n  totalSavings: PropTypes.number,\n};\n\nexport default TotalSavings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Card,\n  CardBody,\n  InputGroup,\n  InputGroupText,\n  TextInput,\n} from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst validFloat = (value) => {\n  const floatValue = parseFloat(value);\n  return floatValue && floatValue >= 0 ? value : '';\n};\n\nconst CalculationCost = ({\n  costManual = '0',\n  setCostManual = () => {},\n  costAutomation = '0',\n  setCostAutomation = () => {},\n}) => (\n  <Card>\n    <CardTitle>Calculate your automation</CardTitle>\n    <CardBody>\n      <InputAndText>\n        <p>Manual cost of automation</p>\n        <em style={{ color: 'var(--pf-global--Color--dark-200)' }}>\n          (e.g. average salary of mid-level Software Engineer)\n        </em>\n        <InputGroup style={{ width: '50%' }}>\n          <InputGroupText>\n            <DollarSignIcon />\n          </InputGroupText>\n          <TextInput\n            id=\"manual-cost\"\n            type=\"number\"\n            aria-label=\"manual-cost\"\n            value={costManual}\n            onChange={(e) => setCostManual(validFloat(e))}\n          />\n          <InputGroupText>/hr</InputGroupText>\n        </InputGroup>\n      </InputAndText>\n      <InputAndText style={{ paddingTop: '10px' }}>\n        <p>Automated process cost</p>\n        <InputGroup style={{ width: '50%' }}>\n          <InputGroupText>\n            <DollarSignIcon />\n          </InputGroupText>\n          <TextInput\n            id=\"automation-cost\"\n            type=\"number\"\n            aria-label=\"automation-cost\"\n            value={costAutomation}\n            onChange={(e) => setCostAutomation(validFloat(e))}\n          />\n          <InputGroupText>/hr</InputGroupText>\n        </InputGroup>\n      </InputAndText>\n    </CardBody>\n  </Card>\n);\n\nCalculationCost.propTypes = {\n  costManual: PropTypes.string,\n  setCostManual: PropTypes.func,\n  costAutomation: PropTypes.string,\n  setCostAutomation: PropTypes.func,\n};\n\nexport default CalculationCost;\n","import React from 'react';\n\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst AutomationFormula = () => (\n  <Card style={{ height: '100%' }}>\n    <CardTitle>Automation formula</CardTitle>\n    <CardBody>\n      <p>\n        <b>Manual cost for template x</b> =\n        <em>\n          (time for a manual run on one host in hours * (sum of all hosts across\n          all job runs) ) * cost per hour\n        </em>\n      </p>\n      <p>\n        <b>Automation cost for template x</b> =\n        <em>\n          cost of automation per hour * sum of total elapsed hours for a\n          template\n        </em>\n      </p>\n      <p>\n        <b>Savings</b> =\n        <em>Sum of (manual cost - automation cost) across all templates</em>\n      </p>\n    </CardBody>\n  </Card>\n);\n\nexport default AutomationFormula;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  InputGroup,\n  InputGroupText,\n  TextInput,\n  Tooltip,\n  Popover,\n} from '@patternfly/react-core';\nimport {\n  InfoCircleIcon,\n  ToggleOnIcon,\n  ToggleOffIcon,\n} from '@patternfly/react-icons';\n\nimport {\n  convertSecondsToMins,\n  convertMinsToSeconds,\n  capitalize,\n} from '../../Utilities/helpers';\n\nimport currencyFormatter from '../../Utilities/currencyFormatter';\n\nconst TemplateDetail = styled.div`\n  em {\n    display: block;\n    padding: 5px 0;\n  }\n\n  @media (max-width: 1490px) {\n    display: block;\n\n    em {\n      padding: 10px 0;\n      display: block;\n    }\n  }\n`;\n\nconst TemplateDetailSubTitle = styled.em`\n  color: var(--pf-global--Color--dark-200);\n`;\n\nconst TooltipWrapper = styled.div`\n  p {\n    text-align: left;\n  }\n`;\n\nconst IconGroup = styled.div`\n  & svg {\n    fill: var(--pf-global--Color--dark-200);\n\n    :hover {\n      cursor: pointer;\n    }\n\n    :first-of-type {\n      margin-right: 10px;\n      margin-left: 10px;\n\n      @media (max-width: 1350px) {\n        margin-left: 0;\n      }\n    }\n  }\n`;\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst showSortAttr = (details, sortBy) => {\n  const trimmed = sortBy.split(':')[0];\n  const sortAttribute = Object.keys(details).map((k) =>\n    k === trimmed ? `${details[k]}` : null\n  );\n\n  return (\n    <TemplateDetailSubTitle>\n      {capitalize(trimmed.split('_').join(' '))}: {sortAttribute}\n    </TemplateDetailSubTitle>\n  );\n};\n\nconst QuestionIconTooltip = ({ details }) => (\n  <Popover\n    aria-label=\"template detail popover\"\n    position=\"left\"\n    bodyContent={\n      <TooltipWrapper>\n        {Object.keys(details).map((k, i) => (\n          <p key={i}>\n            <b>{capitalize(k.split('_').join(' '))}</b>: {details[k]}\n          </p>\n        ))}\n      </TooltipWrapper>\n    }\n  >\n    <InfoCircleIcon />\n  </Popover>\n);\n\nQuestionIconTooltip.propTypes = {\n  details: PropTypes.object,\n};\n\nconst TopTemplates = ({\n  data = [],\n  sortBy = '',\n  setDataRunTime = () => {},\n  setEnabled = () => {},\n  redirectToJobExplorer = () => {},\n}) => (\n  <Card>\n    <CardBody>\n      <p>Enter the time it takes to run the following templates manually.</p>\n      {data.map((d) => (\n        <div key={d.id}>\n          <Tooltip content={'List of jobs for this template for past 30 days'}>\n            <Button\n              style={{ padding: '15px 0 10px' }}\n              component=\"a\"\n              onClick={() => redirectToJobExplorer(d.id)}\n              variant=\"link\"\n            >\n              {d.name}\n            </Button>\n          </Tooltip>\n          <TemplateDetail>\n            <InputAndText key={d.id}>\n              <InputGroup>\n                <TextInput\n                  id={d.id}\n                  type=\"number\"\n                  aria-label=\"time run manually\"\n                  value={convertSecondsToMins(d.avgRunTime)}\n                  onChange={(minutes) =>\n                    setDataRunTime(convertMinsToSeconds(minutes), d.id)\n                  }\n                />\n                <InputGroupText>min</InputGroupText>\n              </InputGroup>\n            </InputAndText>\n            <TemplateDetailSubTitle>\n              x {d.successful_hosts_total} host runs\n            </TemplateDetailSubTitle>\n            {showSortAttr(d, sortBy)}\n            <IconGroup>\n              <QuestionIconTooltip details={d} />\n              {!d.enabled && (\n                <ToggleOffIcon onClick={() => setEnabled(d.id)(true)} />\n              )}\n              {d.enabled && (\n                <ToggleOnIcon onClick={() => setEnabled(d.id)(false)} />\n              )}\n            </IconGroup>\n          </TemplateDetail>\n          <p style={{ color: '#486B00' }}>{currencyFormatter(+d.delta)}</p>\n        </div>\n      ))}\n    </CardBody>\n  </Card>\n);\n\nTopTemplates.propTypes = {\n  data: PropTypes.array,\n  setDataRunTime: PropTypes.func,\n  redirectToJobExplorer: PropTypes.func,\n  deselectedIds: PropTypes.array,\n  setDeselectedIds: PropTypes.func,\n  setEnabled: PropTypes.func,\n  sortBy: PropTypes.string,\n};\n\nexport default TopTemplates;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport {\n  Card,\n  CardBody,\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n} from '@patternfly/react-core';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\n// Imports from custom components\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\n// Imports from API\nimport { preflightRequest, readROI, readROIOptions } from '../../Api';\n\n// Imports from utilities\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { roi as roiConst } from '../../Utilities/constants';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { calculateDelta, convertSecondsToHours } from '../../Utilities/helpers';\n\n// Chart\nimport TopTemplatesSavings from '../../Charts/ROITopTemplates';\n\n// Local imports\nimport { BorderedCardTitle } from './helpers';\nimport TotalSavings from './TotalSavings';\nimport CalculationCost from './CalculationCost';\nimport AutomationFormula from './AutomationFormula';\nimport TopTemplates from './TopTemplates';\n\nconst mapApi = ({ items = [] }) =>\n  items.map((el) => ({\n    ...el,\n    delta: 0,\n    avgRunTime: 3600,\n    manualCost: 0,\n    automatedCost: 0,\n    enabled: true,\n  }));\n\nconst filterDisabled = (data) => data.filter(({ enabled }) => enabled);\n\nconst updateDeltaCost = (data, costAutomation, costManual) =>\n  data.map((el) => {\n    const manualCost =\n      convertSecondsToHours(el.avgRunTime) *\n      el.successful_hosts_total *\n      parseFloat(costManual);\n    const automatedCost =\n      convertSecondsToHours(el.successful_elapsed_total) *\n      parseFloat(costAutomation);\n    const delta = calculateDelta(automatedCost, manualCost);\n\n    return { ...el, delta, manualCost, automatedCost };\n  });\n\nconst computeTotalSavings = (data) =>\n  data.reduce((sum, curr) => sum + curr.delta, 0);\n\nconst AutomationCalculator = ({ history }) => {\n  const toJobExplorer = useRedirect(history, 'jobExplorer');\n  const [costManual, setCostManual] = useState('50');\n  const [costAutomation, setCostAutomation] = useState('20');\n\n  const [preflight, setPreflight] = useApi(null);\n  const [options, setOptions] = useApi({});\n  const [api, fetchApi, setDataInApi] = useApi([], (data) =>\n    updateDeltaCost(mapApi(data), costAutomation, costManual)\n  );\n\n  const { queryParams, setFromToolbar } = useQueryParams(\n    roiConst.defaultParams\n  );\n\n  /**\n   * Modifies one elements avgRunTime in the unfilteredData\n   * and updates all calculated fields.\n   * Used in top templates.\n   */\n  const setDataRunTime = (seconds, id) => {\n    const updatedData = api.data.map((el) => {\n      if (el.id === id) {\n        el.avgRunTime = seconds;\n        const updatedDelta = updateDeltaCost(\n          [el],\n          costAutomation,\n          costManual\n        )[0];\n        return updatedDelta;\n      } else {\n        return el;\n      }\n    });\n\n    setDataInApi(updatedData);\n  };\n\n  const setEnabled = (id) => (value) => {\n    setDataInApi(\n      api.data.map((el) => (el.id === id ? { ...el, enabled: value } : el))\n    );\n  };\n\n  useEffect(() => {\n    setPreflight(preflightRequest());\n    setOptions(readROIOptions({ params: queryParams }));\n  }, []);\n\n  /**\n   * Recalculates the delta and costs in the data after the cost is changed.\n   */\n  useEffect(() => {\n    setDataInApi(updateDeltaCost(api.data, costAutomation, costManual));\n  }, [costAutomation, costManual]);\n\n  /**\n   * Get data from API depending on the queryParam.\n   */\n  useEffect(() => {\n    fetchApi(readROI({ params: queryParams }));\n  }, [queryParams]);\n\n  /**\n   * Function to redirect to the job explorer page\n   * with the same filters as is used here.\n   */\n  const redirectToJobExplorer = (templateId) => {\n    const initialQueryParams = {\n      quick_date_range: 'last_30_days',\n      template_id: [templateId],\n    };\n    toJobExplorer(initialQueryParams);\n  };\n\n  const renderLeft = () => (\n    <Stack hasGutter>\n      <StackItem>\n        <Card>\n          <BorderedCardTitle>Automation savings</BorderedCardTitle>\n          <CardBody>\n            {api.isLoading && <LoadingState />}\n            {api.error && <ApiErrorState message={api.error.error} />}\n            {api.isSuccess && api.data.length <= 0 && <NoData />}\n            {api.isSuccess && api.data.length > 0 && (\n              <React.Fragment>\n                <TopTemplatesSavings\n                  margin={{ top: 20, right: 20, bottom: 20, left: 70 }}\n                  id=\"d3-roi-chart-root\"\n                  data={filterDisabled(api.data)}\n                />\n                <p style={{ textAlign: 'center' }}>Templates</p>\n              </React.Fragment>\n            )}\n          </CardBody>\n        </Card>\n      </StackItem>\n      <StackItem isFilled>\n        <AutomationFormula />\n      </StackItem>\n    </Stack>\n  );\n\n  const renderRight = () => (\n    <Stack hasGutter>\n      <StackItem>\n        <TotalSavings\n          totalSavings={computeTotalSavings(filterDisabled(api.data))}\n        />\n      </StackItem>\n      <StackItem>\n        <Stack>\n          <StackItem>\n            <CalculationCost\n              costManual={costManual}\n              setCostManual={setCostManual}\n              costAutomation={costAutomation}\n              setCostAutomation={setCostAutomation}\n            />\n          </StackItem>\n          <StackItem style={{ overflow: 'auto', maxHeight: '48vh' }}>\n            <TopTemplates\n              redirectToJobExplorer={redirectToJobExplorer}\n              data={api.data}\n              setDataRunTime={setDataRunTime}\n              setUnfilteredData={api.data}\n              setEnabled={setEnabled}\n              sortBy={queryParams.sort_by}\n            />\n          </StackItem>\n        </Stack>\n      </StackItem>\n    </Stack>\n  );\n\n  if (preflight?.error?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  const renderContents = () => {\n    if (preflight.error) return <EmptyState preflightError={preflight.error} />;\n    else if (preflight.isSuccess)\n      return (\n        <Grid hasGutter className=\"automation-wrapper\">\n          <GridItem span={9}>{renderLeft()}</GridItem>\n          <GridItem span={3}>{renderRight()}</GridItem>\n        </Grid>\n      );\n    else return <></>;\n  };\n\n  return (\n    <>\n      <PageHeader>\n        <PageHeaderTitle title={'Automation Calculator'} />\n        <FilterableToolbar\n          categories={options.data}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      <Main>{renderContents()}</Main>\n    </>\n  );\n};\n\nAutomationCalculator.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default AutomationCalculator;\n","import * as d3 from 'd3';\n\nclass Tooltip {\n  constructor(opts) {\n    this.svg = opts.svg;\n    this.colors = opts.colors;\n    this.draw();\n  }\n\n  draw() {\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 145;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -41)\n      .attr('rx', 2)\n      .attr('height', 110)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.circleSuccess = this.toolTipBase\n      .append('circle')\n      .attr('cx', 26)\n      .attr('cy', 0)\n      .attr('r', 8)\n      .attr('stroke', 'white')\n      .attr('fill', 'white');\n    this.circleFail = this.toolTipBase\n      .append('circle')\n      .attr('cx', 26)\n      .attr('cy', 26)\n      .attr('r', 8)\n      .attr('stroke', 'white')\n      .attr('fill', 'white');\n    this.successText = this.toolTipBase\n      .append('text')\n      .attr('x', 43)\n      .attr('y', 4)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Successful');\n    this.failText = this.toolTipBase\n      .append('text')\n      .attr('x', 43)\n      .attr('y', 28)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Failed');\n    this.successIcon = this.toolTipBase\n      .append('text')\n      .attr('class', 'fas fa-sm')\n      .attr('fill', this.colors(1))\n      .attr('x', 19)\n      .attr('y', 5)\n      .text('\\uf058');\n    this.failedIcon = this.toolTipBase\n      .append('text')\n      .attr('class', 'fas fa-sm')\n      .attr('fill', this.colors(0))\n      .attr('x', 20)\n      .attr('y', 31)\n      .text('\\uf06a');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 137)\n      .attr('y', -21)\n      .attr('font-size', 12)\n      .attr('text-anchor', 'end')\n      .text('No jobs');\n    this.successful = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 122)\n      .attr('y', 4)\n      .text('0');\n    this.failed = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 122)\n      .attr('y', 28)\n      .text('0');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('stroke', 'white')\n      .attr('x', 20)\n      .attr('y', -21)\n      .attr('font-size', 12)\n      .text('Never');\n    this.clickMore = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 20)\n      .attr('y', 55)\n      .attr('font-size', 12)\n      .text('Click for details');\n  }\n\n  handleMouseOver = (d) => {\n    let success = 0;\n    let fail = 0;\n    let total = 0;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    const formatTooltipDate = d3.timeFormat('%m/%d');\n    if (!d) {\n      return;\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n    if (d) {\n      success = d.RAN || 0;\n      fail = d.FAIL || 0;\n      total = d.TOTAL || 0;\n      this.date.text(formatTooltipDate(d.DATE || null));\n    }\n\n    if (d && d.data) {\n      success = d.data.RAN || 0;\n      fail = d.data.FAIL || 0;\n      total = d.data.TOTAL || 0;\n      this.date.text(formatTooltipDate(d.data.DATE || null));\n    }\n\n    this.jobs.text('' + total + ' jobs');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n    this.failed.text('' + fail);\n    this.successful.text('' + success);\n    this.successTextWidth = this.successful.node().getComputedTextLength();\n    this.failTextWidth = this.failed.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 40;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.circleSuccess.attr('cx', -adjustedWidth);\n      this.circleFail.attr('cx', -adjustedWidth);\n      this.failedIcon.attr('x', -adjustedWidth - 7);\n      this.successIcon.attr('x', -adjustedWidth - 7);\n      this.successText.attr('x', -adjustedWidth + 17);\n      this.failText.attr('x', -adjustedWidth + 17);\n      this.successful.attr('x', -this.successTextWidth - 20 - 12);\n      this.failed.attr('x', -this.failTextWidth - 20 - 12);\n      this.date.attr('x', -adjustedWidth - 5);\n      this.jobs.attr('x', -this.jobsWidth / 2 - 7);\n      this.clickMore.attr('x', -adjustedWidth);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.circleSuccess.attr('cx', 26);\n      this.circleFail.attr('cx', 26);\n      this.failedIcon.attr('x', 19);\n      this.successIcon.attr('x', 19);\n      this.successText.attr('x', 43);\n      this.failText.attr('x', 43);\n      this.successful.attr('x', adjustedWidth - this.successTextWidth);\n      this.failed.attr('x', adjustedWidth - this.failTextWidth);\n      this.date.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth);\n      this.clickMore.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nexport default Tooltip;\n","import React, { Component } from 'react';\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { stringify } from 'query-string';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\n\nclass BarChart extends Component {\n  constructor(props) {\n    super(props);\n    this.draw = this.draw.bind(this);\n    this.init = this.init.bind(this);\n    this.resize = this.resize.bind(this);\n    this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n    this.state = {\n      formattedData: [],\n      timeout: null,\n    };\n  }\n\n  redirectToJobExplorer({ data: { DATE: date } }) {\n    const { jobExplorer } = Paths;\n    const formattedDate = formatDate(date);\n    const initialQueryParams = {\n      start_date: formattedDate,\n      end_date: formattedDate,\n      quick_date_range: 'custom',\n      status: ['failed', 'successful'],\n      template_id: this.props.queryParams.template_id,\n      org_id: this.props.queryParams.org_id,\n      job_type: this.props.queryParams.job_type,\n    };\n\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    this.props.history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  }\n\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  init() {\n    this.draw();\n  }\n\n  // Methods\n  draw() {\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const parseTime = d3.timeParse('%Y-%m-%d');\n    let { data: unformattedData } = this.props;\n    const data = unformattedData.reduce(\n      (formatted, { created_date, successful_count, failed_count }) => {\n        let DATE = parseTime(created_date) || new Date();\n        let RAN = +successful_count || 0;\n        let FAIL = +failed_count || 0;\n        let TOTAL = +successful_count + failed_count || 0;\n        return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n      },\n      []\n    );\n    const width = this.props.getWidth();\n    const height = this.props.getHeight();\n    const x = d3.scaleBand().rangeRound([0, width]).padding(0.35); // percentage\n    const y = d3.scaleLinear().range([height, 0]);\n\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n    //[fail, success]\n    let colors = d3.scaleOrdinal(['#6EC664', '#A30000']);\n\n    const barTooltip = new Tooltip({\n      svg: '#' + this.props.id,\n      colors,\n    });\n    const status = ['FAIL', 'RAN'];\n\n    // stack our data\n    const stack = d3\n      .stack()\n      .keys(status)\n      .order(d3.stackOrderNone)\n      .offset(d3.stackOffsetNone);\n\n    const layers = stack(data);\n    // Scale the range of the data\n    x.domain(layers[0].map((d) => d.data.DATE));\n    y.domain([0, d3.max(layers[layers.length - 1], (d) => d[1] * 1.15) || 8]);\n    // Add the Y Axis\n    svg\n      .append('g')\n      .attr('class', 'y-axis')\n      .call(d3.axisLeft(y).tickSize(-width, 0, 0))\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.y-axis .tick text').attr('x', -5);\n    // text label for the y axis\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Jobs across all clusters');\n    // Add the X Axis\n    let ticks;\n    const maxTicks = Math.round(data.length / (data.length / 2));\n    ticks = data.map((d) => d.DATE);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n        .filter((item) => item);\n    }\n\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(\n        d3.axisBottom(x).tickValues(ticks).tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n      )\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n    // text label for the x axis\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n\n    const layer = svg\n      .selectAll('layer')\n      .data(layers)\n      .enter()\n      .append('g')\n      .attr('class', 'layer')\n      .style('fill', (_d, i) => colors(i));\n    layer\n      .selectAll('rect')\n      .data((d) => d)\n      .enter()\n      .append('rect')\n      .attr('x', (d) => x(d.data.DATE))\n      .attr('y', (d) => y(d[0]))\n      .attr('height', 0)\n      .attr('width', x.bandwidth() - 1)\n      .transition()\n      .duration(550)\n      .ease(d3.easeCubic)\n      .attr('y', (d) => y(d[1]))\n      .attr('height', (d) => y(d[0]) - y(d[1]));\n    layer\n      .selectAll('rect')\n      .on('mouseover', barTooltip.handleMouseOver)\n      .on('mousemove', barTooltip.handleMouseOver)\n      .on('mouseout', barTooltip.handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n  }\n\n  componentDidMount() {\n    this.init();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      this.init();\n    }\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nBarChart.propTypes = {\n  id: PropTypes.string,\n  queryParams: PropTypes.object,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  history: PropTypes.object,\n};\n\nexport default initializeChart(BarChart);\n","import React, { Component } from 'react';\nimport initializeChart from './BaseChart';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\nimport { stringify } from 'query-string';\nimport * as d3 from 'd3';\n\nclass LineChart extends Component {\n  constructor(props) {\n    super(props);\n    this.init = this.init.bind(this);\n    this.draw = this.draw.bind(this);\n    this.resize = this.resize.bind(this);\n    this.updateCluster = this.updateCluster.bind(this);\n    this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n    this.state = {\n      formattedData: [],\n      timeout: null,\n    };\n  }\n\n  redirectToJobExplorer({ DATE: date }) {\n    const { jobExplorer } = Paths;\n    const formattedDate = formatDate(date);\n    const initialQueryParams = {\n      start_date: formattedDate,\n      end_date: formattedDate,\n      quick_date_range: 'custom',\n      status: ['failed', 'successful'],\n      cluster_id: this.props.queryParams.cluster_id,\n      org_id: this.props.queryParams.org_id,\n      template_id: this.props.queryParams.template_id,\n      job_type: this.props.queryParams.job_type,\n    };\n\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    this.props.history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  }\n\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  updateCluster() {\n    this.init();\n  }\n  init() {\n    this.draw();\n  }\n  // Methods\n  draw() {\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const width = this.props.getWidth();\n    const height = this.props.getHeight();\n\n    function transition(path) {\n      path.transition().duration(1000).attrTween('stroke-dasharray', tweenDash);\n    }\n\n    function tweenDash() {\n      const l = this.getTotalLength();\n      const i = d3.interpolateString('0,' + l, l + ',' + l);\n      return function (t) {\n        return i(t);\n      };\n    }\n\n    const x = d3.scaleTime().rangeRound([0, width]);\n    const y = d3.scaleLinear().range([height, 0]);\n\n    //[success, fail, total]\n    let colors = d3.scaleOrdinal(['#6EC664', '#A30000', '#06C']);\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n      .attr('z', 100)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n    // Tooltip\n    const tooltip = new Tooltip({\n      svg: '#' + this.props.id,\n      colors,\n    });\n    const { data: unformattedData } = this.props;\n    const parseTime = d3.timeParse('%Y-%m-%d');\n\n    const data = unformattedData.reduce(\n      (formatted, { created_date, successful_count, failed_count }) => {\n        let DATE = parseTime(created_date) || new Date();\n        let RAN = +successful_count || 0;\n        let FAIL = +failed_count || 0;\n        let TOTAL = +successful_count + failed_count || 0;\n        return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n      },\n      []\n    );\n    // Scale the range of the data\n    x.domain(\n      d3.extent(data, function (d) {\n        return d.DATE;\n      })\n    );\n    y.domain([\n      0,\n      d3.max(data, function (d) {\n        return d.TOTAL * 1.15 || 8;\n      }),\n    ]);\n\n    const successLine = d3\n      .line()\n      .curve(d3.curveMonotoneX)\n      .x(function (d) {\n        return x(d.DATE);\n      })\n      .y(function (d) {\n        return y(d.RAN);\n      });\n\n    const failLine = d3\n      .line()\n      .defined((d) => !isNaN(d.FAIL))\n      .curve(d3.curveMonotoneX)\n      .x(function (d) {\n        return x(d.DATE);\n      })\n      .y(function (d) {\n        return y(d.FAIL);\n      });\n    // Add the Y Axis\n    svg\n      .append('g')\n      .attr('class', 'y-axis')\n      .call(d3.axisLeft(y).ticks(10).tickSize(-width))\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.y-axis .tick text').attr('x', -5);\n\n    // text label for the y axis\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Job runs');\n    // Add the X Axis\n    let ticks;\n    const maxTicks = Math.round(data.length / (data.length / 2));\n    ticks = data.map((d) => d.DATE);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n        .filter((item) => item);\n    }\n\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(\n        d3\n          .axisBottom(x)\n          .tickValues(ticks)\n          .tickSize(-height)\n          .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n      ) // \"Jan-01\"\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n    // text label for the x axis\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n    const vertical = svg\n      .append('path')\n      .attr('class', 'mouse-line')\n      .style('stroke', 'black')\n      .style('stroke-width', '3px')\n      .style('stroke-dasharray', '3, 3')\n      .style('opacity', '0');\n\n    const handleMouseOver = function (d) {\n      tooltip.handleMouseOver(d);\n      // show vertical line\n      vertical.transition().style('opacity', '1');\n    };\n\n    const handleMouseMove = function () {\n      let intersectX = this.cx.baseVal.value;\n      vertical.attr('d', function () {\n        let d = 'M' + intersectX + ',' + height;\n        d += ' ' + intersectX + ',' + 0;\n        return d;\n      });\n    };\n\n    const handleMouseOut = function () {\n      // hide tooltip\n      tooltip.handleMouseOut();\n      // hide vertical line\n      vertical.transition().style('opacity', 0);\n    };\n\n    // Add the successLine path.\n    svg\n      .append('path')\n      .data([data])\n      .attr('class', 'line')\n      .style('fill', 'none')\n      .style('stroke', () => colors(1))\n      .attr('stroke-width', 2)\n      .attr('d', successLine)\n      .call(transition);\n\n    // Add the failLine path.\n    svg\n      .append('path')\n      .data([data])\n      .attr('class', 'line')\n      .style('fill', 'none')\n      .style('stroke', () => colors(0))\n      .attr('stroke-width', 2)\n      .attr('d', failLine)\n      .call(transition);\n    svg\n      .selectAll('dot')\n      .data(data)\n      .enter()\n      .append('circle')\n      .attr('r', 3)\n      .style('stroke', () => colors(1))\n      .style('fill', () => colors(1))\n      .attr('cx', function (d) {\n        return x(d.DATE);\n      })\n      .attr('cy', function (d) {\n        return y(d.RAN);\n      })\n\n      .on('mouseover', handleMouseOver)\n      .on('mousemove', handleMouseMove)\n      .on('mouseout', handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n    // create our failLine circles\n    svg\n      .selectAll('dot')\n      .data(data)\n      .enter()\n      .append('circle')\n      .attr('r', 3)\n      .style('stroke', () => colors(0))\n      .style('fill', () => colors(0))\n      .attr('cx', function (d) {\n        return x(d.DATE);\n      })\n      .attr('cy', function (d) {\n        return y(d.FAIL);\n      })\n      .on('mouseover', handleMouseOver)\n      .on('mousemove', handleMouseMove)\n      .on('mouseout', handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n  }\n\n  componentDidMount() {\n    this.updateCluster();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      this.updateCluster();\n    }\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nLineChart.propTypes = {\n  id: PropTypes.string,\n  queryParams: PropTypes.object,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  history: PropTypes.object,\n};\n\nexport default initializeChart(LineChart);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { trimStr } from '../Utilities/helpers';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n  DataList,\n  DataListItem as PFDataListItem,\n  DataListCell as PFDataListCell,\n} from '@patternfly/react-core';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst ModulesList = ({ modules, isLoading }) => (\n  <DataList\n    aria-label=\"Top Modules\"\n    style={{\n      maxHeight: '400px',\n      overflow: 'auto',\n      height: '400px',\n      background: 'white',\n    }}\n  >\n    <DataListItem aria-labelledby=\"top-modules-header\">\n      <DataListCell>\n        <h3>Top modules</h3>\n      </DataListCell>\n      <DataCellEnd>\n        <h3>Usage</h3>\n      </DataCellEnd>\n    </DataListItem>\n    {isLoading && (\n      <PFDataListItem\n        aria-labelledby=\"modules-loading\"\n        key={isLoading}\n        style={{ border: 'none' }}\n      >\n        <PFDataListCell>\n          <LoadingState />\n        </PFDataListCell>\n      </PFDataListItem>\n    )}\n    {!isLoading && modules.length <= 0 && (\n      <PFDataListItem\n        aria-labelledby=\"modules-no-data\"\n        key={isLoading}\n        style={{ border: 'none' }}\n      >\n        <PFDataListCell>\n          <NoData />\n        </PFDataListCell>\n      </PFDataListItem>\n    )}\n    {!isLoading &&\n      modules\n        .filter((module) => module.name !== null)\n        .map(({ name, host_task_count }, index) => (\n          <DataListItem aria-labelledby=\"top-modules-detail\" key={index}>\n            <DataListCell>\n              <span>{trimStr(name)}</span>\n            </DataListCell>\n            <DataCellEnd>{host_task_count}</DataCellEnd>\n          </DataListItem>\n        ))}\n  </DataList>\n);\n\nModulesList.propTypes = {\n  modules: PropTypes.array,\n  isLoading: PropTypes.bool,\n};\n\nexport default ModulesList;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst BarContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  width: 100%;\n  max-width: 100%;\n  height: 1rem;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst Bar = styled.div`\n  height: 100%;\n`;\n\nconst LabelsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  margin-bottom: 1rem;\n`;\n\nconst Label = styled.div`\n  padding-left: 2rem;\n  display: flex;\n  align-items: center;\n`;\n\nconst Square = styled.div`\n  width: 0.75rem;\n  height: 0.75rem;\n  margin-right: 0.5rem;\n`;\n\nconst whiteSpace = 0.15; // Currently in percent of total bar width\n\nfunction title(str) {\n  return str[0].toUpperCase() + str.slice(1).toLowerCase();\n}\n\nconst Breakdown = ({ categoryCount = {}, categoryColor }) => {\n  const totalCount = Object.values(categoryCount).reduce(\n    (accumulated, currentVal) => accumulated + currentVal\n  );\n\n  const sortedCategories = Object.keys(categoryCount)\n    .filter((category) => categoryCount[category] > 0)\n    .sort((category) => {\n      if (categoryCount[category] < categoryCount[category]) {\n        return 1; // Normally should be -1, but we want descending order\n      }\n      if (categoryCount[category] > categoryCount[category]) {\n        return -1;\n      }\n      return 0;\n    })\n    .map((category) => {\n      return {\n        name: category,\n        barSpacing: categoryCount[category] / totalCount,\n        color: categoryColor[category],\n      };\n    });\n\n  const remainingSpace = 1 - ((sortedCategories.length - 1) * whiteSpace) / 100;\n\n  return (\n    <>\n      <BarContainer>\n        {sortedCategories.map(({ barSpacing, color }, idx) => {\n          if (idx < sortedCategories.length - 1) {\n            return (\n              <React.Fragment key={idx}>\n                <Bar\n                  style={{\n                    backgroundColor: color,\n                    width: `${barSpacing * 100 * remainingSpace}%`,\n                  }}\n                />\n                <Bar\n                  style={{\n                    backgroundColor: 'transparent',\n                    width: `${whiteSpace}%`,\n                  }}\n                />\n              </React.Fragment>\n            );\n          } else {\n            return (\n              <React.Fragment key={idx}>\n                <Bar\n                  style={{\n                    backgroundColor: color,\n                    width: `${barSpacing * 100 * remainingSpace}%`,\n                  }}\n                />\n              </React.Fragment>\n            );\n          }\n        })}\n      </BarContainer>\n      <LabelsContainer>\n        {sortedCategories.map(({ name, color }) => (\n          <Label key={`label-${name}`}>\n            <Square style={{ backgroundColor: color }} />\n            <p>{title(name)}</p>\n          </Label>\n        ))}\n      </LabelsContainer>\n    </>\n  );\n};\n\nBreakdown.propTypes = {\n  categoryColor: PropTypes.object,\n  categoryCount: PropTypes.object,\n};\n\nexport default Breakdown;\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport ApiErrorState from '../Components/ApiErrorState';\nimport NoResults from './NoResults';\nimport Breakdown from '../Components/Breakdown';\nimport JobStatus from '../Components/JobStatus';\nimport { Paths } from '../paths';\nimport { stringify } from 'query-string';\nimport useApi from '../Utilities/useApi';\nimport { formatDateTime, formatJobType } from '../Utilities/helpers';\nimport { readJobExplorer } from '../Api';\n\nimport { Button, Modal } from '@patternfly/react-core';\nimport {\n  global_palette_blue_300,\n  global_palette_green_200,\n  global_palette_red_100,\n  global_palette_black_850,\n  global_palette_orange_300,\n  global_palette_purple_300,\n  global_palette_cyan_200,\n  global_palette_light_green_200,\n} from '@patternfly/react-tokens';\n\nimport {\n  DescriptionList,\n  DescriptionListTerm,\n  DescriptionListGroup,\n  DescriptionListDescription,\n  Divider,\n} from '@patternfly/react-core';\n\nimport {\n  TableComposable,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n} from '@patternfly/react-table';\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 2rem;\n`;\n\nconst formatTopFailedTask = (data) => {\n  if (!data) {\n    return;\n  }\n\n  if (data && data[0]) {\n    const percentage = Math.ceil(\n      (data[0].failed_count / data[0].total_failed_count) * 100\n    );\n    return `${data[0].task_name} ${percentage}%`;\n  }\n\n  return `Unavailable`;\n};\n\nconst formatSuccessRate = (successCount, totalCount) =>\n  Math.ceil((successCount / totalCount) * 100) + '%';\nconst formatAvgRun = (elapsed, totalCount) =>\n  new Date(Math.ceil(elapsed / totalCount) * 1000).toISOString().substr(11, 8);\nconst formatTotalTime = (elapsed) =>\n  new Date(elapsed * 1000).toISOString().substr(11, 8);\n\nconst ModalContents = ({ selectedId, isOpen, handleModal, qp, jobType }) => {\n  const [\n    {\n      isLoading,\n      isSuccess,\n      error,\n      data: { items: relatedJobs = [] },\n    },\n    setRelatedJobs,\n    setSynchJobs,\n  ] = useApi({ items: [] });\n  const [\n    {\n      data: {\n        items: [stats = 0],\n      },\n    },\n    setStats,\n    setSynchStats,\n  ] = useApi({ items: [] });\n\n  let history = useHistory();\n\n  const redirectToJobExplorer = () => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      template_id: [selectedId],\n      status: [\n        'successful',\n        'failed',\n        'new',\n        'pending',\n        'waiting',\n        'error',\n        'canceled',\n        'running',\n      ],\n      job_type: [jobType],\n      quick_date_range: 'last_30_days',\n    };\n\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const relatedTemplateJobsParams = {\n    ...qp,\n    template_id: [selectedId],\n    attributes: [\n      'id',\n      'status',\n      'job_type',\n      'started',\n      'finished',\n      'elapsed',\n      'created',\n      'cluster_name',\n      'org_name',\n    ],\n    group_by_time: false,\n    limit: 5,\n    sort_by: 'created:desc',\n    quick_date_range: qp.quick_date_range\n      ? qp.quick_date_range\n      : 'last_30_days',\n    job_type: [jobType],\n  };\n\n  const agreggateTemplateParams = {\n    group_by: 'template',\n    template_id: [selectedId],\n    attributes: [\n      'elapsed',\n      'job_type',\n      'successful_count',\n      'failed_count',\n      'error_count',\n      'waiting_count',\n      'pending_count',\n      'canceled_count',\n      'new_count',\n      'running_count',\n      'total_count',\n      jobType === 'job' ? 'most_failed_tasks' : 'most_failed_steps',\n    ],\n    status: qp.status,\n    quick_date_range: qp.quick_date_range\n      ? qp.quick_date_range\n      : 'last_30_days',\n    job_type: [jobType],\n  };\n\n  useEffect(() => {\n    setStats(readJobExplorer({ params: agreggateTemplateParams }));\n    setRelatedJobs(readJobExplorer({ params: relatedTemplateJobsParams }));\n  }, [selectedId]);\n\n  const tableCols = ['Id/Name', 'Status', 'Cluster', 'Finished', 'Total time'];\n\n  const categoryCount = stats\n    ? {\n        success: stats.successful_count,\n        cancelled: stats.canceled_count,\n        error: stats.error_count,\n        failed: stats.failed_count,\n        new: stats.new_count,\n        pending: stats.pending_count,\n        running: stats.running_count,\n        waiting: stats.waiting_count,\n      }\n    : null;\n\n  const categoryColor = {\n    success: global_palette_green_200.value,\n    cancelled: global_palette_black_850.value,\n    error: global_palette_orange_300.value,\n    failed: global_palette_red_100.value,\n    new: global_palette_cyan_200.value,\n    pending: global_palette_purple_300.value,\n    running: global_palette_blue_300.value,\n    waiting: global_palette_light_green_200.value,\n  };\n\n  const descriptionStats = [\n    {\n      label: 'Number of runs',\n      id: 'total-runs',\n      value: stats.total_count ? stats.total_count : 'Unavailable',\n    },\n    {\n      label: 'Total time',\n      id: 'total-time',\n      value: stats.elapsed ? formatTotalTime(stats.elapsed) : 'Unavailable',\n    },\n    {\n      label: 'Average time',\n      id: 'avg-time',\n      value: stats.elapsed\n        ? formatAvgRun(stats.elapsed, stats.total_count)\n        : 'Unavailable',\n    },\n    {\n      label: 'Type',\n      id: 'type',\n      value: jobType ? formatJobType(jobType) : 'Unavailable',\n    },\n    {\n      label: 'Success rate',\n      id: 'success-rate',\n      value: !isNaN(stats.successful_count)\n        ? formatSuccessRate(stats.successful_count, stats.total_count)\n        : 'Unavailable',\n    },\n    {\n      label: 'Most failed task',\n      id: 'most-failed',\n      value: stats.most_failed_tasks\n        ? formatTopFailedTask(stats.most_failed_tasks)\n        : 'Unavailable',\n    },\n  ];\n\n  const cleanup = () => {\n    handleModal(false);\n    setSynchStats({ items: [] });\n    setSynchJobs({ items: [] });\n  };\n\n  return (\n    <Modal\n      aria-label=\"modal\"\n      width={'80%'}\n      title={stats.name ? stats.name : 'No template name'}\n      isOpen={isOpen}\n      onClose={cleanup}\n    >\n      {isLoading && <LoadingState />}\n      {error && <ApiErrorState message={error.error} />}\n      {isSuccess && relatedJobs.length <= 0 && <NoResults />}\n      {isSuccess && relatedJobs.length > 0 && (\n        <>\n          {categoryCount && (\n            <Breakdown\n              categoryCount={categoryCount}\n              categoryColor={categoryColor}\n            />\n          )}\n\n          <DescriptionList isHorizontal columnModifier={{ lg: '3Col' }}>\n            {descriptionStats.map(({ label, id, value }) => (\n              <DescriptionListGroup className={id} key={label}>\n                <DescriptionListTerm>{label}</DescriptionListTerm>\n                <DescriptionListDescription>{value}</DescriptionListDescription>\n              </DescriptionListGroup>\n            ))}\n          </DescriptionList>\n\n          <Divider\n            component=\"div\"\n            style={{ marginTop: '2rem', marginBottom: '1.5rem' }}\n          />\n          <p>\n            <strong>Last 5 jobs</strong>\n          </p>\n\n          <TableComposable\n            aria-label=\"Template information table\"\n            variant=\"compact\"\n          >\n            <Thead>\n              <Tr>\n                {tableCols.map((heading, idx) => (\n                  <Th key={idx}>{heading}</Th>\n                ))}\n              </Tr>\n            </Thead>\n            <Tbody>\n              {relatedJobs.map((job, idx) => (\n                <Tr key={`job-detail-${idx}`}>\n                  <Td>{`${job.id.id} - ${job.id.template_name}`}</Td>\n                  <Td>\n                    <JobStatus status={job.status} />\n                  </Td>\n                  <Td>{job.cluster_name}</Td>\n                  <Td>{formatDateTime(job.finished)}</Td>\n                  <Td>{formatTotalTime(job.elapsed)}</Td>\n                </Tr>\n              ))}\n            </Tbody>\n          </TableComposable>\n        </>\n      )}\n\n      <ActionContainer>\n        <Button\n          key=\"cancel\"\n          variant=\"secondary\"\n          onClick={() => {\n            cleanup();\n          }}\n        >\n          Close\n        </Button>\n\n        <Button component=\"a\" onClick={redirectToJobExplorer} variant=\"link\">\n          View all jobs\n        </Button>\n      </ActionContainer>\n    </Modal>\n  );\n};\n\nModalContents.propTypes = {\n  selectedId: PropTypes.number.isRequired,\n  qp: PropTypes.object.isRequired,\n  jobType: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  handleModal: PropTypes.func.isRequired,\n};\n\nexport default ModalContents;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n  DataList,\n  DataListItem as PFDataListItem,\n  DataListCell as PFDataListCell,\n} from '@patternfly/react-core';\n\nimport ModalContents from './ModalContents';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst TemplatesList = ({ templates, isLoading, qp, title, jobType }) => {\n  const [selectedId, setSelectedId] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const displayJobType = (type) => {\n    return type === 'job' ? 'templates' : 'workflows';\n  };\n\n  return (\n    <>\n      <DataList\n        aria-label={`Top ${displayJobType(jobType)}`}\n        style={{\n          maxHeight: '400px',\n          overflow: 'auto',\n          height: '400px',\n          background: 'white',\n        }}\n      >\n        <DataListItem aria-labelledby={`top-${displayJobType(jobType)}-header`}>\n          <DataListCell>\n            <h3>{title}</h3>\n          </DataListCell>\n          <DataCellEnd>\n            <h3>Usage</h3>\n          </DataCellEnd>\n        </DataListItem>\n        {isLoading && (\n          <PFDataListItem\n            aria-labelledby={`${displayJobType(jobType)}-loading`}\n            key={isLoading}\n            style={{ border: 'none' }}\n          >\n            <PFDataListCell>\n              <LoadingState />\n            </PFDataListCell>\n          </PFDataListItem>\n        )}\n        {!isLoading && templates.length <= 0 && (\n          <PFDataListItem\n            aria-labelledby={`${displayJobType(jobType)}-no-data`}\n            key={isLoading}\n            style={{ border: 'none' }}\n          >\n            <PFDataListCell>\n              <NoData />\n            </PFDataListCell>\n          </PFDataListItem>\n        )}\n        {!isLoading &&\n          templates.map(({ name, total_count, id }, index) => (\n            <DataListItem\n              aria-labelledby={`top-${displayJobType(jobType)}-detail`}\n              key={index}\n            >\n              <DataListCell>\n                <a\n                  onClick={() => {\n                    setIsModalOpen(true);\n                    setSelectedId(id);\n                  }}\n                >\n                  {name}\n                </a>\n              </DataListCell>\n              <DataCellEnd>{total_count}</DataCellEnd>\n            </DataListItem>\n          ))}\n      </DataList>\n      {selectedId && (\n        <ModalContents\n          isOpen={isModalOpen}\n          handleModal={setIsModalOpen}\n          selectedId={selectedId}\n          qp={qp}\n          jobType={jobType}\n        />\n      )}\n    </>\n  );\n};\n\nTemplatesList.propTypes = {\n  templates: PropTypes.array,\n  isLoading: PropTypes.bool,\n  queryParams: PropTypes.object,\n  title: PropTypes.string,\n  qp: PropTypes.object,\n  jobType: PropTypes.string,\n};\n\nexport default TemplatesList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport {\n  preflightRequest,\n  readClustersOptions,\n  readJobExplorer,\n  readEventExplorer,\n} from '../../Api';\n\nimport { jobExplorer } from '../../Utilities/constants';\nimport useApi from '../../Utilities/useApi';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle as PFCardTitle,\n} from '@patternfly/react-core';\n\nimport BarChart from '../../Charts/BarChart';\nimport LineChart from '../../Charts/LineChart';\nimport ModulesList from '../../Components/ModulesList';\nimport TemplatesList from '../../Components/TemplatesList';\nimport FilterableToolbar from '../../Components/Toolbar';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport { clusters } from '../../Utilities/constants';\n\nconst initialTopTemplateParams = {\n  group_by: 'template',\n  limit: 10,\n  job_type: ['job'],\n  group_by_time: false,\n  status: ['successful', 'failed'],\n};\n\nconst initialTopWorkflowParams = {\n  group_by: 'template',\n  limit: 10,\n  job_type: ['workflowjob'],\n  group_by_time: false,\n  status: ['successful', 'failed'],\n};\n\nconst initialModuleParams = {\n  group_by: 'module',\n  sort_by: 'host_task_count:desc',\n  limit: 10,\n};\n\nconst Clusters = () => {\n  const [preflightError, setPreFlightError] = useState(null);\n\n  const { queryParams, setFromToolbar } = useQueryParams({\n    ...clusters.defaultParams,\n  });\n\n  const [\n    {\n      isLoading,\n      isSuccess,\n      error,\n      data: { items: chartData = [] },\n    },\n    setData,\n  ] = useApi({ items: [] });\n\n  const [\n    {\n      data: { items: templates = [] },\n    },\n    setTemplates,\n  ] = useApi({ items: [] });\n  const [\n    {\n      data: { items: workflows = [] },\n    },\n    setWorkflows,\n  ] = useApi({ items: [] });\n  const [\n    {\n      data: { items: modules = [] },\n    },\n    setModules,\n  ] = useApi({ items: [] });\n  const [{ data: options = [] }, setOptions] = useApi({});\n\n  const initialOptionsParams = {\n    attributes: jobExplorer.attributes,\n  };\n\n  const { queryParams: optionsQueryParams } =\n    useQueryParams(initialOptionsParams);\n\n  const {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n  } = queryParams;\n\n  const topTemplatesParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialTopTemplateParams,\n  };\n\n  const topWorkflowParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialTopWorkflowParams,\n  };\n\n  const topModuleParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialModuleParams,\n  };\n\n  useEffect(() => {\n    async function initializeWithPreflight() {\n      await preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n      setOptions(readClustersOptions({ params: optionsQueryParams }));\n    }\n\n    initializeWithPreflight();\n  }, []);\n\n  // Get and update the data\n  useEffect(() => {\n    const fetchEndpoints = () => {\n      setData(readJobExplorer({ params: queryParams }));\n      setTemplates(readJobExplorer({ params: topTemplatesParams }));\n      setWorkflows(readJobExplorer({ params: topWorkflowParams }));\n      setModules(readEventExplorer({ params: topModuleParams }));\n    };\n    fetchEndpoints();\n  }, [queryParams]);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Clusters'} />\n        <FilterableToolbar\n          categories={options}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      {(preflightError || error) && (\n        <Main>\n          {preflightError ? (\n            <EmptyState {...preflightError} />\n          ) : (\n            <ApiErrorState message={error.error} />\n          )}\n        </Main>\n      )}\n      {!preflightError && !error && (\n        <Main>\n          <Card>\n            <PFCardTitle>\n              <h2>Job status</h2>\n            </PFCardTitle>\n            <CardBody>\n              {isLoading && <LoadingState />}\n              {queryParams.cluster_id.length <= 0 && isSuccess && (\n                <BarChart\n                  margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                  id=\"d3-bar-chart-root\"\n                  data={chartData}\n                  queryParams={queryParams}\n                />\n              )}\n              {queryParams.cluster_id.length > 0 && isSuccess && (\n                <LineChart\n                  margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                  id=\"d3-line-chart-root\"\n                  data={chartData}\n                  queryParams={queryParams}\n                />\n              )}\n            </CardBody>\n          </Card>\n          <div\n            className=\"dataCard\"\n            style={{ display: 'flex', marginTop: '20px' }}\n          >\n            <TemplatesList\n              qp={queryParams}\n              templates={workflows}\n              isLoading={isLoading}\n              title={'Top workflows'}\n              jobType={'workflowjob'}\n            />\n            <TemplatesList\n              qp={queryParams}\n              templates={templates}\n              isLoading={isLoading}\n              title={'Top templates'}\n              jobType={'job'}\n            />\n            <ModulesList modules={modules} isLoading={isLoading} />\n          </div>\n        </Main>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Clusters;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Tr, Td, ExpandableRowContent } from '@patternfly/react-table';\n\nimport { formatDateTime, formatJobType } from '../Utilities/helpers';\nimport JobStatus from './JobStatus';\nimport {\n  DescriptionList,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  DescriptionListDescription,\n} from '@patternfly/react-core';\n\nconst JobExplorerListRow = ({ job }) => {\n  const [expanded, setExpanded] = useState(false);\n  const handleExpansion = () => {\n    setExpanded(!expanded);\n  };\n\n  const expandedInfo = [\n    {\n      label: 'Created',\n      value: job.created ? formatDateTime(job.created) : 'Unavailable',\n    },\n    {\n      label: 'Started',\n      value: job.created ? formatDateTime(job.started) : 'Unavailable',\n    },\n    {\n      label: 'Finished',\n      value: job.created ? formatDateTime(job.finished) : 'Unavailable',\n    },\n  ];\n  return (\n    <>\n      <Tr>\n        <Td\n          expand={{\n            rowIndex: job.id.id,\n            isExpanded: expanded,\n            onToggle: handleExpansion,\n          }}\n        />\n        <Td\n          href={job.id.tower_link}\n        >{`${job.id.id} - ${job.id.template_name}`}</Td>\n        <Td>\n          <JobStatus status={job.status} />\n        </Td>\n        <Td>{job.cluster_name}</Td>\n        <Td>{job.org_name}</Td>\n        <Td>{formatJobType(job.job_type)}</Td>\n      </Tr>\n      <Tr isExpanded={expanded}>\n        <Td colSpan={6}>\n          <ExpandableRowContent>\n            <DescriptionList isHorizontal columnModifier={{ lg: '3Col' }}>\n              {expandedInfo.map(({ label, value }) => (\n                <DescriptionListGroup key={label}>\n                  <DescriptionListTerm>{label}</DescriptionListTerm>\n                  <DescriptionListDescription>\n                    {value}\n                  </DescriptionListDescription>\n                </DescriptionListGroup>\n              ))}\n            </DescriptionList>\n          </ExpandableRowContent>\n        </Td>\n      </Tr>\n    </>\n  );\n};\n\nJobExplorerListRow.propTypes = {\n  job: PropTypes.object.isRequired,\n};\n\nexport default JobExplorerListRow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TableComposable, Thead, Tbody, Tr, Th } from '@patternfly/react-table';\nimport JobExplorerListRow from './JobExplorerListRow';\n\nconst cols = ['Id/Name', 'Status', 'Cluster', 'Organization', 'Type'];\n\nconst JobExplorerList = ({ jobs }) => {\n  return (\n    <TableComposable aria-label=\"Job Explorer Table\" variant=\"compact\">\n      <Thead>\n        <Tr>\n          <Th />\n          {cols.map((head, idx) => (\n            <Th key={`col-${idx}`}>{head}</Th>\n          ))}\n        </Tr>\n      </Thead>\n      <Tbody>\n        {jobs.map((job) => (\n          <JobExplorerListRow job={job} key={job.id.id} />\n        ))}\n      </Tbody>\n    </TableComposable>\n  );\n};\n\nJobExplorerList.propTypes = {\n  jobs: PropTypes.array.isRequired,\n};\n\nexport default JobExplorerList;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { parse, stringify } from 'query-string';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { Paths } from '../../paths';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoResults from '../../Components/NoResults';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport Pagination from '../../Components/Pagination';\n\nimport {\n  preflightRequest,\n  readJobExplorer,\n  readJobExplorerOptions,\n} from '../../Api';\nimport { jobExplorer } from '../../Utilities/constants';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport { Card, CardBody, PaginationVariant } from '@patternfly/react-core';\n\nimport JobExplorerList from '../../Components/JobExplorerList';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\nconst initialQueryParams = {\n  ...jobExplorer.defaultParams,\n  attributes: jobExplorer.attributes,\n};\n\nconst JobExplorer = ({ location: { search }, history }) => {\n  const [preflightError, setPreFlightError] = useState(null);\n  const [\n    {\n      isLoading,\n      isSuccess,\n      error,\n      data: { meta = {}, items: data = [] },\n    },\n    setData,\n  ] = useApi({ meta: {}, items: [] });\n  const [options, setOptions] = useApi({});\n\n  const { queryParams, setFromPagination, setFromToolbar, dispatch } =\n    useQueryParams(initialQueryParams);\n\n  const updateURL = () => {\n    const { jobExplorer } = Paths;\n    const search = stringify(queryParams, { arrayFormat: 'bracket' });\n    history.replace({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'job-explorer', secondaryNav: true });\n\n    preflightRequest().catch((error) => {\n      setPreFlightError({ preflightError: error });\n    });\n\n    const initialSearchParams = parse(search, {\n      arrayFormat: 'bracket',\n      parseBooleans: true,\n      parseNumbers: true,\n    });\n\n    dispatch({\n      type: 'REINITIALIZE',\n      value: {\n        ...initialQueryParams,\n        ...initialSearchParams,\n      },\n    });\n  }, []);\n\n  useEffect(() => {\n    setData(readJobExplorer({ params: queryParams }));\n    setOptions(readJobExplorerOptions({ params: queryParams }));\n    updateURL();\n  }, [queryParams]);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Job Explorer'} />\n      </PageHeader>\n\n      {preflightError && (\n        <Main>\n          <EmptyState {...preflightError} />\n        </Main>\n      )}\n\n      {!preflightError && (\n        <Main>\n          <Card>\n            <CardBody>\n              <FilterableToolbar\n                categories={options.data}\n                filters={queryParams}\n                setFilters={setFromToolbar}\n                pagination={\n                  <Pagination\n                    count={meta?.count}\n                    params={{\n                      limit: queryParams.limit,\n                      offset: queryParams.offset,\n                    }}\n                    setPagination={setFromPagination}\n                    isCompact\n                  />\n                }\n                hasSettings\n              />\n              {error && <ApiErrorState message={error.error} />}\n              {isLoading && <LoadingState />}\n              {isSuccess && data.length <= 0 && <NoResults />}\n              {isSuccess && data.length > 0 && <JobExplorerList jobs={data} />}\n              <Pagination\n                count={meta?.count}\n                params={{\n                  limit: queryParams.limit,\n                  offset: queryParams.offset,\n                }}\n                setPagination={setFromPagination}\n                variant={PaginationVariant.bottom}\n              />\n            </CardBody>\n          </Card>\n        </Main>\n      )}\n    </React.Fragment>\n  );\n};\n\nJobExplorer.propTypes = {\n  location: PropTypes.object,\n  history: PropTypes.object,\n};\n\nexport default JobExplorer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nimport {\n  NotificationDrawerList as PFNotificationDrawerList,\n  NotificationDrawerListItem as PFNotificationDrawerListItem,\n  NotificationDrawerListItemBody,\n  NotificationDrawerListItemHeader,\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkAltIcon } from '@patternfly/react-icons';\nimport LoadingState from '../Components/LoadingState';\nimport { capitalize } from '../Utilities/helpers';\n\nconst ExternalLinkAltIcon = styled(PFExternalLinkAltIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n  font-size: 14px;\n`;\n\nconst NotificationDrawerListItem = styled(PFNotificationDrawerListItem)`\n  border-top: 1px solid var(--pf-global--BorderColor--light-100\n    );\n  border-bottom::nth-child(odd): 1px solid var(--pf-global--BorderColor--light-100\n    );\n  box-shadow: none;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst NotificationDrawerList = styled(PFNotificationDrawerList)`\n  &:last-child {\n    border-bottom: 1px solid var(--pf-global--BorderColor--light-100);\n  }\n`;\n\nconst stringifyDate = (date) => {\n  const day = moment(date);\n  const oneHour = 60 * 60 * 1000;\n  const now = moment().utc();\n\n  if (now.isAfter(day)) {\n    return `${now.diff(day, 'days')} day(s) ago.`;\n  }\n\n  if (day.isSame(now, 'day')) {\n    if (day.valueOf() > oneHour) {\n      return `${day.diff(now, 'hours')} hour(s) ago.`;\n    }\n\n    return `${now.diff(day, 'minutes')} minute(s) ago.`;\n  }\n};\n\nconst AllNotificationTemplate = ({ notifications }) =>\n  notifications.map(\n    ({ date, message, label, notification_id: id, tower_url: url }) => {\n      if (label === '' || label === 'notice') {\n        return (\n          <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"info\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n\n      if (label === 'error') {\n        return (\n          <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"danger\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n\n      if (label === 'warning') {\n        return (\n          <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"warning\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n    }\n  );\n\nconst ErrorNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'error')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"danger\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst NoticeNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'notice')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"info\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst WarningNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'warning')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"warning\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst NotificationsList = ({ filterBy, notifications }) => (\n  <>\n    <NotificationDrawerList>\n      {notifications.length <= 0 && <LoadingState />}\n      {filterBy === '' && (\n        <AllNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'notice' && (\n        <NoticeNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'error' && (\n        <ErrorNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'warning' && (\n        <WarningNotificationTemplate notifications={notifications} />\n      )}\n    </NotificationDrawerList>\n  </>\n);\n\nAllNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nErrorNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nWarningNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nNotificationsList.propTypes = {\n  notifications: PropTypes.array,\n  filterBy: PropTypes.string,\n};\n\nexport default NotificationsList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoData from '../../Components/NoData';\nimport { preflightRequest, readClusters, readNotifications } from '../../Api';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle as PFCardTitle,\n  FormSelect,\n  FormSelectOption,\n  PaginationVariant,\n  NotificationDrawer,\n} from '@patternfly/react-core';\n\nimport NotificationsList from '../../Components/NotificationsList';\nimport Pagination from '../../Components/Pagination';\n\nconst CardTitle = styled(PFCardTitle)`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n`;\n\nconst DropdownGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-end;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n\n  select {\n    margin: 0 10px;\n    width: 150px;\n\n    @media screen and (max-width: 1035px) {\n      margin: 10px 10px 0 0;\n    }\n\n    @media screen and (max-width: 865px) {\n      width: 100%;\n    }\n  }\n`;\n\nconst notificationOptions = [\n  {\n    value: 'please choose',\n    label: 'Select Notification Severity',\n    disabled: true,\n  },\n  { value: 'error', label: 'View Critical', disabled: false },\n  { value: 'warning', label: 'View Warning', disabled: false },\n  { value: 'notice', label: 'View Notice', disabled: false },\n  { value: '', label: 'View All', disabled: false },\n];\n\nfunction formatClusterName(data) {\n  const defaultClusterOptions = [\n    { value: 'please choose', label: 'Select cluster', disabled: true },\n    { value: '', label: 'All Clusters', disabled: false },\n    { value: -1, label: 'Unassociated', disabled: false },\n  ];\n  return data.reduce(\n    (formatted, { label, cluster_id: id, install_uuid: uuid }) => {\n      if (label.length === 0) {\n        formatted.push({ value: id, label: uuid, disabled: false });\n      } else {\n        formatted.push({ value: id, label, disabled: false });\n      }\n\n      return formatted;\n    },\n    defaultClusterOptions\n  );\n}\n\nconst initialQueryParams = {\n  limit: 5,\n  offset: 0,\n};\n\nconst Notifications = () => {\n  const [preflightError, setPreFlightError] = useState(null);\n  const [notificationsData, setNotificationsData] = useState([]);\n  const [clusterOptions, setClusterOptions] = useState([]);\n  const [selectedCluster, setSelectedCluster] = useState('');\n  const [firstRender, setFirstRender] = useState(true);\n  const [isLoading, setIsLoading] = useState(true);\n  const [meta, setMeta] = useState({});\n  const { queryParams, setId, setFromPagination, setSeverity } =\n    useQueryParams(initialQueryParams);\n\n  useEffect(() => {\n    if (firstRender) {\n      return;\n    }\n\n    const getData = () => {\n      return readNotifications({ params: queryParams });\n    };\n\n    const update = () => {\n      setIsLoading(true);\n      getData().then(({ notifications: notificationsData = [], meta }) => {\n        setNotificationsData(notificationsData);\n        setMeta(meta);\n        setIsLoading(false);\n      });\n    };\n\n    update();\n  }, [queryParams]);\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'notifications', secondaryNav: true });\n\n    let ignore = false;\n    const fetchEndpoints = () => {\n      return Promise.all(\n        [readClusters(), readNotifications({ params: queryParams })].map((p) =>\n          p.catch(() => [])\n        )\n      );\n    };\n\n    async function initializeWithPreflight() {\n      setIsLoading(true);\n      await preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n      fetchEndpoints().then(\n        ([\n          { templates: clustersData = [] },\n          { notifications: notificationsData = [], meta },\n        ]) => {\n          if (!ignore) {\n            const clusterOptions = formatClusterName(clustersData);\n            setClusterOptions(clusterOptions);\n            setNotificationsData(notificationsData);\n            setMeta(meta);\n            setFirstRender(false);\n            setIsLoading(false);\n          }\n        }\n      );\n    }\n\n    initializeWithPreflight();\n    return () => (ignore = true);\n  }, []);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Notifications'} />\n      </PageHeader>\n      {preflightError && (\n        <Main>\n          <EmptyState {...preflightError} />\n        </Main>\n      )}\n      {!preflightError && (\n        <>\n          <Main>\n            <Card>\n              <CardTitle>\n                <DropdownGroup>\n                  <FormSelect\n                    name=\"selectedCluster\"\n                    value={selectedCluster}\n                    onChange={(value) => {\n                      setSelectedCluster(value);\n                      setId(value);\n                      setFromPagination(0);\n                    }}\n                    aria-label=\"Select Cluster\"\n                  >\n                    {clusterOptions.map(({ value, label, disabled }, index) => (\n                      <FormSelectOption\n                        isDisabled={disabled}\n                        key={index}\n                        value={value}\n                        label={label}\n                      />\n                    ))}\n                  </FormSelect>\n                  <FormSelect\n                    name=\"selectedNotification\"\n                    value={queryParams.severity || ''}\n                    onChange={(value) => {\n                      setSeverity(value);\n                      setFromPagination(0);\n                    }}\n                    aria-label=\"Select Notification Type\"\n                  >\n                    {notificationOptions.map(\n                      ({ disabled, value, label }, index) => (\n                        <FormSelectOption\n                          isDisabled={disabled}\n                          key={index}\n                          value={value}\n                          label={label}\n                        />\n                      )\n                    )}\n                  </FormSelect>\n                </DropdownGroup>\n                <Pagination\n                  count={meta?.count}\n                  params={{\n                    limit: queryParams.limit,\n                    offset: queryParams.offset,\n                  }}\n                  setPagination={setFromPagination}\n                  isCompact\n                />\n              </CardTitle>\n              <CardBody>\n                {isLoading && <LoadingState />}\n                {!isLoading && notificationsData.length <= 0 && <NoData />}\n                {!isLoading && notificationsData.length > 0 && (\n                  <NotificationDrawer>\n                    <NotificationsList\n                      filterBy={queryParams.severity || ''}\n                      options={notificationOptions}\n                      notifications={notificationsData}\n                    />\n                  </NotificationDrawer>\n                )}\n                <Pagination\n                  count={meta?.count}\n                  params={{\n                    limit: queryParams.limit,\n                    offset: queryParams.offset,\n                  }}\n                  setPagination={setFromPagination}\n                  variant={PaginationVariant.bottom}\n                />\n              </CardBody>\n            </Card>\n          </Main>\n        </>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Notifications;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Switch } from '@patternfly/react-core';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  overflow: auto;\n  width: 100%;\n  height: ${(props) => props.height};\n`;\n\nconst LegendDetail = styled.div`\n  display: flex;\n  padding: 7.5px 15px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  overflow: auto;\n`;\n\nconst Color = styled.div.attrs((props) => ({\n  color: props.color || 'black',\n}))`\n  min-width: 12px;\n  height: 12px;\n  background: ${(props) => props.color};\n  margin-right: 20px;\n`;\n\nconst Title = styled.span`\n  font-size: 15px;\n  display: inline-block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n`;\n\nconst SubTitle = styled.span`\n  font-size: 15px;\n  margin-left: auto;\n  margin-right: 0;\n  padding-right: 10px;\n`;\n\nconst Legend = ({ data, selected, height, onToggle, chartName }) => {\n  return (\n    <Container height={height}>\n      {data.map(({ name, value, id, count }, index) => (\n        <LegendDetail key={index}>\n          <Wrapper>\n            <Color color={value} />\n            <Title>{name}</Title>\n          </Wrapper>\n          {count && <SubTitle>{count}</SubTitle>}\n          {selected && (\n            <Switch\n              isChecked={selected.some((selection) => selection === id)}\n              onChange={() => onToggle(id)}\n              aria-label={`${chartName}-${name}`}\n              value={id}\n              key={index}\n            />\n          )}\n        </LegendDetail>\n      ))}\n    </Container>\n  );\n};\n\nLegend.propTypes = {\n  data: PropTypes.array.isRequired,\n  selected: PropTypes.array.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  height: PropTypes.string.isRequired,\n  chartName: PropTypes.string.isRequired,\n};\n\nexport default Legend;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport styled from 'styled-components';\n\nimport initializeChart from '.././BaseChart';\nimport Legend from '../../Utilities/Legend';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nconst GroupedBarChart = ({\n  onClick = null,\n  TooltipClass,\n  legend,\n  ...props\n}) => {\n  const colors = legend.map(({ id, name }) => {\n    return {\n      name,\n      value: props.colorFunc(id),\n      id,\n    };\n  });\n  const [selectedIds, setSelectedIds] = useState(\n    legend.map(({ id }) => id).slice(0, 8)\n  );\n  let timeout = null;\n\n  const handleToggle = (id) => {\n    if (selectedIds.includes(id)) {\n      setSelectedIds(selectedIds.filter((el) => el !== id));\n    } else {\n      setSelectedIds([...selectedIds, id]);\n    }\n  };\n\n  const draw = () => {\n    // Clear our chart container element first\n    d3.selectAll('#' + props.id + ' > *').remove();\n    let { data: unformattedData } = props;\n    const data = unformattedData.reduce((formatted, { date, items }) => {\n      const selectedOrgs = items.filter(({ id }) => selectedIds.includes(id));\n      return formatted.concat({ date, selectedOrgs });\n    }, []);\n    const width = props.getWidth();\n    const height = props.getHeight();\n    // x scale of entire chart\n    const x0 = d3.scaleBand().range([0, width]).padding(0.35);\n    // x scale of individual grouped bars\n    const x1 = d3.scaleBand();\n    const y = d3.scaleLinear().range([height, 0]);\n    // format our X Axis ticks\n    const maxTicksOneMonth = Math.round(data.length / (data.length / 2));\n    const maxTicksTwoMonths = Math.round(data.length / (data.length / 4));\n    let ticks = data.map((d) => d.date);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) =>\n          i % (data.length > 31 ? maxTicksTwoMonths : maxTicksOneMonth) === 0\n            ? d.date\n            : undefined\n        )\n        .filter((item) => item);\n    }\n\n    const xAxis = d3.axisBottom(x0).tickValues(ticks).tickFormat(formatDate);\n\n    const yAxis = d3.axisLeft(y).ticks(8).tickSize(-width, 0, 0);\n\n    const svg = d3\n      .select('#' + props.id)\n      .append('svg')\n      .attr('width', width + props.margin.left + props.margin.right)\n      .attr('height', height + props.margin.bottom + props.margin.top)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' + props.margin.left + ',' + props.margin.top + ')'\n      );\n\n    const dates = data.map((d) => d.date);\n    const tooltip = new TooltipClass({\n      svg: '#' + props.id,\n    });\n    x0.domain(dates);\n    x1.domain(selectedIds).range([0, x0.bandwidth()]);\n    y.domain([\n      0,\n      d3.max(data, (date) =>\n        d3.max(date.selectedOrgs, (d) => d.value * 1.15)\n      ) || 8,\n    ]);\n\n    // add y axis\n    svg\n      .append('g')\n      .attr('class', 'y axis')\n      .call(yAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7')\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 6)\n      .attr('dy', '.71em')\n      .style('text-anchor', 'end')\n      .style('font-weight', 'bold')\n      .text('Value');\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text(props.yLabel);\n\n    // add x axis\n    svg\n      .append('g')\n      .attr('class', 'x axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' + width / 2 + ' ,' + (height + props.margin.top + 25) + ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n    // add the groups\n    let slice = svg.selectAll('.slice').data(data);\n    slice.exit().remove();\n\n    const enter = slice\n      .enter()\n      .append('g')\n      .attr('class', 'g foo')\n      .attr('transform', (d) => 'translate(' + x0(d.date) + ',0)');\n    slice = slice.merge(enter);\n    // add the individual bars\n    let bars = slice.selectAll('rect').data(function (d) {\n      return d.selectedOrgs;\n    });\n    bars.exit().remove();\n\n    const color = props.colorFunc;\n    const subEnter = bars\n      .enter()\n      .append('rect')\n      .attr('width', x1.bandwidth())\n      .attr('x', function (d) {\n        return x1(d.id);\n      }) // unsorted\n      .style('fill', function (d) {\n        return color(d.id);\n      })\n      .attr('y', function (d) {\n        return y(d.value);\n      })\n      .attr('height', function (d) {\n        return height - y(d.value);\n      })\n      .on('mouseover', function (d) {\n        d.moreDetail = !d.name.endsWith('Others');\n        d3.select(this).style(\n          'cursor',\n          onClick && d.moreDetail ? 'pointer' : 'default'\n        );\n        d3.select(this).style('fill', d3.rgb(color(d.id)).darker(1));\n        tooltip.handleMouseOver(d);\n      })\n      .on('mousemove', tooltip.handleMouseOver)\n      .on('mouseout', function (d) {\n        d3.select(this).style('fill', color(d.id));\n        tooltip.handleMouseOut();\n      })\n      .on('click', onClick);\n    bars = bars.merge(subEnter);\n  };\n\n  const init = () => {\n    draw();\n  };\n\n  const resize = () => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      draw();\n    }, 500);\n  };\n\n  useEffect(() => {\n    init();\n    window.addEventListener('resize', resize);\n\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [props.data, selectedIds]);\n\n  return (\n    <Wrapper>\n      <div id={props.id} />\n      {colors.length > 0 && (\n        <Legend\n          id={`${props.id}-legend`}\n          data={colors}\n          selected={selectedIds}\n          onToggle={handleToggle}\n          height=\"350px\"\n          chartName={`${props.id}-legend`}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nGroupedBarChart.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  legend: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  colorFunc: PropTypes.func,\n  yLabel: PropTypes.string,\n  onClick: PropTypes.func,\n  TooltipClass: PropTypes.any.isRequired,\n};\n\nGroupedBarChart.defaultProps = {\n  legend: [],\n};\n\nexport default initializeChart(GroupedBarChart);\n","import * as d3 from 'd3';\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class OrgsTooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -12)\n      .attr('rx', 2)\n      .attr('height', 50)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 25)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Date');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 72)\n      .attr('y', 25)\n      .text('0 Jobs');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 10)\n      .attr('font-size', 12)\n      .text('Org');\n\n    this.clickMore = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 20)\n      .attr('y', 30)\n      .attr('font-size', 12)\n      .text('');\n  }\n\n  handleMouseOver = (d) => {\n    let date;\n    let orgName;\n    let jobs;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    } else {\n      const maxLength = 16;\n      date = d.date;\n      orgName = d.name;\n      jobs = d.value;\n      if (d.name.length > maxLength) {\n        orgName = d.name.slice(0, maxLength).concat('...');\n      }\n    }\n\n    let yAdjust = -11;\n\n    // Include 'Click for details' if more detail is available\n    if (d.moreDetail) {\n      this.boundingBox.attr('height', 68);\n      this.boundingBox.attr('y', -23);\n      this.date.attr('y', 25 + yAdjust);\n      this.jobs.attr('y', 25 + yAdjust);\n      this.orgName.attr('y', 10 + yAdjust);\n      this.clickMore.text('Click for details');\n    } else {\n      this.boundingBox.attr('height', 50);\n      this.boundingBox.attr('y', -12);\n      this.date.attr('y', 25);\n      this.jobs.attr('y', 25);\n      this.orgName.attr('y', 10);\n      this.clickMore.text('');\n    }\n\n    const formatTooltipDate = formatDate;\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.date.text('' + formatTooltipDate(date));\n    this.orgName.text('' + orgName);\n    this.jobs.text('' + jobs + ' Jobs');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 45;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n      this.orgName.attr('x', -adjustedWidth - 7);\n      this.date.attr('x', -adjustedWidth - 7);\n      this.clickMore.attr('x', -adjustedWidth - 7);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth / 2);\n      this.date.attr('x', 20);\n      this.clickMore.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import * as d3 from 'd3';\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class HostsTooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -12)\n      .attr('rx', 2)\n      .attr('height', 50)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 25)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Date');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 72)\n      .attr('y', 25)\n      .text('0 Jobs');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 10)\n      .attr('font-size', 12)\n      .text('Org');\n  }\n\n  handleMouseOver = (d) => {\n    let date;\n    let orgName;\n    let jobs;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    } else {\n      const maxLength = 16;\n      date = d.date;\n      orgName = d.name;\n      jobs = d.value;\n      if (d.name.length > maxLength) {\n        orgName = d.name.slice(0, maxLength).concat('...');\n      }\n    }\n\n    const formatTooltipDate = formatDate;\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.date.text('' + formatTooltipDate(date));\n    this.orgName.text('' + orgName);\n    this.jobs.text('' + jobs + ' Hosts');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 45;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n      this.orgName.attr('x', -adjustedWidth - 7);\n      this.date.attr('x', -adjustedWidth - 7);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth / 2);\n      this.date.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport { getTotal } from '../Utilities/helpers';\nimport Legend from '../Utilities/Legend';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nclass Tooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    // defer drawing until we know the data shape\n    this.drawn = false;\n    // show the success rate or not\n    this.showSuccess = false;\n  }\n\n  draw(d) {\n    // chart1 has success rate data and chart2 does not ...\n    this.showSuccess = d && d.data && 'success_rate' in d.data ? true : false;\n    const boundingHeight = this.showSuccess ? 70 : 52;\n    const boundingWidth = this.showSuccess ? 120 : 108;\n\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBOx = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', boundingHeight)\n      .attr('width', boundingWidth)\n      .attr('fill', '#393f44');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 0)\n      .text('Organization');\n    this.percentageTotal = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 16)\n      .text('0');\n    this.percentageSuccess = null;\n    if (this.showSuccess) {\n      this.percentageSuccess = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 30)\n        .text('');\n    }\n  }\n\n  handleMouseOver = (d) => {\n    // treat draw() as a singleton to avoid a painted window effect\n    if (this.drawn !== true) {\n      this.draw(d);\n      this.drawn = true;\n    }\n\n    let perc;\n    let percSuccess;\n    let orgName;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    }\n\n    if (d && d.data) {\n      const maxLength = 16;\n      perc = d.data.percent;\n      percSuccess = d.data.success_rate;\n      orgName = d.data.name;\n      if (d.data.name.length > maxLength) {\n        orgName = d.data.name.slice(0, maxLength - 3).concat('...');\n      }\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.percentageTotal.text('' + perc + '%');\n    if (percSuccess && this.percentageSuccess) {\n      this.percentageSuccess.text('(' + percSuccess + '% successful)');\n    }\n\n    this.orgName.text(' ' + orgName);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, -10) rotate(45)');\n      this.boundingBOx.attr('x', -125);\n      this.orgName.attr('x', -112);\n      this.percentageTotal.attr('x', -112);\n      if (this.showSuccess) {\n        this.percentageSuccess.attr('x', -112);\n      }\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, -10) rotate(45)');\n      this.boundingBOx.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.percentageTotal.attr('x', 20);\n      if (this.showSuccess) {\n        this.percentageSuccess.attr('x', 20);\n      }\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nconst PieChart = ({\n  data,\n  id,\n  colorFunc: color,\n  margin,\n  getWidth,\n  getHeight,\n}) => {\n  const colors = data\n    .map(({ id, name, count }) => {\n      return {\n        id,\n        name,\n        value: color(id),\n        count: Math.round(count),\n      };\n    })\n    .sort((a, b) => (a.count > b.count ? 1 : b.count > a.count ? -1 : 0));\n\n  const [selectedIds, setSelectedIds] = useState(\n    data.map(({ id }) => id).slice(0, 8)\n  );\n\n  let timeout = null;\n\n  const handleToggle = (id) => {\n    if (selectedIds.includes(id)) {\n      setSelectedIds(selectedIds.filter((el) => el !== id));\n    } else {\n      setSelectedIds([...selectedIds, id]);\n    }\n  };\n\n  const draw = () => {\n    d3.selectAll('#' + id + ' > *').remove();\n    const width = getWidth();\n    const height = getHeight();\n    const svg = d3\n      .select('#' + id)\n      .append('svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.bottom)\n      .append('g');\n\n    svg.append('g').attr('class', 'slices');\n    svg.append('g').attr('class', 'labels');\n    svg.append('g').attr('class', 'lines');\n    const radius = Math.min(width, height) / 2;\n    const filteredData = data.filter(({ id }) => selectedIds.includes(id));\n    const total = getTotal(filteredData);\n    filteredData.forEach(function (d) {\n      d.count = +d.count;\n      d.percent = +Math.round((d.count / total) * 100);\n    });\n    const donutTooltip = new Tooltip({\n      svg: '#' + id,\n    });\n    const pie = d3\n      .pie()\n      .sort(null)\n      .value((d) => d.count);\n    const arc = d3\n      .arc()\n      .outerRadius(radius - 10) // controls top positioning of chart\n      .innerRadius(0);\n\n    svg.attr(\n      'transform',\n      'translate(' +\n        (width + margin.left + margin.right) / 2 +\n        ',' +\n        (height + margin.top + margin.bottom) / 2 +\n        ')'\n    );\n\n    svg\n      .selectAll('path')\n      .data(pie(filteredData))\n      .enter()\n      .append('path')\n      .attr('d', arc)\n      .attr('fill', (d) => color(d.data.id));\n\n    svg\n      .selectAll('path')\n      .on('mouseover', function (d) {\n        d3.select(this).style('fill', d3.rgb(color(d.data.id)).darker(1));\n        donutTooltip.handleMouseOver(d);\n      })\n      .on('mouseout', function (d) {\n        d3.select(this).style('fill', color(d.data.id));\n        donutTooltip.handleMouseOut();\n      })\n      .on('mousemove', donutTooltip.handleMouseOver);\n\n    svg.append('g').classed('labels', true);\n    svg.append('g').classed('lines', true);\n  };\n\n  const init = () => {\n    draw();\n  };\n\n  const resize = () => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      draw();\n    }, 500);\n  };\n\n  useEffect(() => {\n    init();\n    window.addEventListener('resize', resize);\n\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [data, selectedIds]);\n\n  return (\n    <Wrapper>\n      <div id={id} />\n      {colors.length > 0 && (\n        <Legend\n          id={`${id}-legend`}\n          data={colors}\n          selected={selectedIds}\n          onToggle={handleToggle}\n          height=\"300px\"\n          chartName={`${id}-legend`}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nPieChart.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  colorFunc: PropTypes.func,\n};\n\nexport default initializeChart(PieChart);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { formatDate as dateForJobExplorer } from '../../Utilities/helpers';\n\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport {\n  preflightRequest,\n  readJobExplorer,\n  readHostExplorer,\n  readOrgOptions,\n} from '../../Api';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle as PFCardTitle,\n  Tabs,\n  Tab,\n} from '@patternfly/react-core';\n\nimport {\n  GroupedBarChart,\n  OrgsTooltip,\n  HostsTooltip,\n} from '../../Charts/GroupedBarChart/';\nimport PieChart from '../../Charts/PieChart';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport { organizationStatistics as constants } from '../../Utilities/constants';\n\n// For chart colors\nimport { pfmulti } from '../../Utilities/colors';\nimport { scaleOrdinal } from 'd3';\n\nconst CardTitle = styled(PFCardTitle)`\n  border-bottom: 2px solid #ebebeb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &&& {\n    min-height: 60px;\n    --pf-c-card--first-child--PaddingTop: 10px;\n    --pf-c-card__header--not-last-child--PaddingBottom: 10px;\n\n    h3 {\n      font-size: 0.875em;\n    }\n  }\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  overflow: hidden;\n\n  .pf-c-card {\n    width: 50%;\n    margin-top: 20px;\n    overflow: auto;\n  }\n\n  .pf-c-card:first-of-type {\n    margin-right: 20px;\n  }\n`;\n\nconst TopCard = styled(Card)`\n  min-height: 500px;\n`;\n\nconst colorFunc = scaleOrdinal(pfmulti);\n\nconst orgsChartMapper =\n  (attrName) =>\n  ({ dates: data = [], meta }) => ({\n    data: data.map(({ date, items }) => ({\n      date,\n      items: items.map(({ id, [attrName]: value, name }) => ({\n        id,\n        date,\n        value,\n        name: name || 'No organization',\n      })),\n    })),\n    legend: meta.legend.map((el) => ({\n      ...el,\n      name: el.name || 'No organization',\n    })),\n  });\n\nconst pieChartMapper =\n  (attrName) =>\n  ({ items = [] }) =>\n    items.map(({ id, [attrName]: count, name }) => ({\n      id,\n      count,\n      name: name || 'No organization',\n    }));\n\nconst redirectToJobExplorer =\n  (toJobExplorer, queryParams) =>\n  ({ date, id }) => {\n    if (id === -1) {\n      // disable clicking on \"others\" block\n      return;\n    }\n\n    const { sort_by, ...rest } = queryParams;\n    const formattedDate = dateForJobExplorer(date);\n    const initialQueryParams = {\n      ...rest,\n      quick_date_range: 'custom',\n      start_date: formattedDate,\n      end_date: formattedDate,\n      status: [\n        'successful',\n        'failed',\n        'new',\n        'pending',\n        'waiting',\n        'error',\n        'canceled',\n        'running',\n      ],\n      org_id: [id],\n    };\n\n    toJobExplorer(initialQueryParams);\n  };\n\nconst chartMapper = [\n  {\n    api: readJobExplorer,\n    attr: 'total_count',\n    label: 'Jobs across organizations',\n    onClick: redirectToJobExplorer,\n    tooltip: OrgsTooltip,\n  },\n  {\n    api: readHostExplorer,\n    attr: 'total_unique_host_count',\n    label: 'Hosts across organizations',\n    onClick: () => null,\n    tooltip: HostsTooltip,\n  },\n];\n\nconst OrganizationStatistics = ({ history }) => {\n  const toJobExplorer = useRedirect(history, 'jobExplorer');\n  const [preflight, setPreflight] = useApi(null);\n  const [activeTabKey, setActiveTabKey] = useState(0);\n  const [orgs, setOrgs] = useApi(\n    [],\n    orgsChartMapper(chartMapper[activeTabKey].attr)\n  );\n  const [jobs, setJobs] = useApi([], pieChartMapper('total_count'));\n  const [tasks, setTasks] = useApi([], pieChartMapper('host_task_count'));\n  const [options, setOptions] = useApi({});\n  const { queryParams, setFromToolbar } = useQueryParams(\n    constants.defaultParams\n  );\n\n  const jobEventsByOrgParams = {\n    ...queryParams,\n    attributes: ['host_task_count'],\n    group_by: 'org',\n    include_others: true,\n    sort_by: `host_task_count:desc`,\n  };\n\n  const jobRunsByOrgParams = {\n    ...queryParams,\n    attributes: ['total_count'],\n    group_by: 'org',\n    include_others: true,\n    sort_by: `total_count:desc`,\n  };\n\n  const jobsByDateAndOrgParams = {\n    ...queryParams,\n    attributes: ['total_count'],\n    group_by: 'org',\n    group_by_time: true,\n    sort_by: `total_count:desc`,\n  };\n\n  const hostAcrossOrgParams = {\n    ...queryParams,\n    attributes: ['total_unique_host_count'],\n    group_by: 'org',\n    group_by_time: true,\n    sort_by: `host_task_count:desc`,\n  };\n\n  const handleTabClick = (_, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({\n      id: 'organization-statistics',\n      secondaryNav: true,\n    });\n    setPreflight(preflightRequest());\n    setOptions(readOrgOptions({ params: queryParams }));\n  }, []);\n\n  useEffect(() => {\n    const { api: readJobsOrHosts } = chartMapper[activeTabKey];\n    const params =\n      activeTabKey === 0 ? jobsByDateAndOrgParams : hostAcrossOrgParams;\n    setOrgs(readJobsOrHosts({ params }));\n  }, [queryParams, activeTabKey]);\n\n  useEffect(() => {\n    setJobs(readJobExplorer({ params: jobRunsByOrgParams }));\n    setTasks(readJobExplorer({ params: jobEventsByOrgParams }));\n  }, [queryParams]);\n\n  if (preflight?.error?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Organization Statistics'} />\n        <FilterableToolbar\n          categories={options.data}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      {preflight.error && (\n        <Main>\n          <EmptyState preflightError={preflight.error} />\n        </Main>\n      )}\n      {preflight.isSuccess && (\n        <React.Fragment>\n          <Main>\n            <TopCard>\n              <Tabs activeKey={activeTabKey} onSelect={handleTabClick}>\n                <Tab eventKey={0} title={'Jobs'} />\n                <Tab eventKey={1} title={'Hosts'} />\n              </Tabs>\n              <CardBody>\n                {orgs.isLoading && <LoadingState />}\n                {orgs.error && <ApiErrorState message={orgs.error.error} />}\n                {orgs.isSuccess && orgs.data?.data.length <= 0 && <NoData />}\n                {orgs.isSuccess && orgs.data?.data.length > 0 && (\n                  <GroupedBarChart\n                    margin={{ top: 20, right: 20, bottom: 50, left: 50 }}\n                    id=\"d3-grouped-bar-chart-root\"\n                    data={orgs.data.data}\n                    legend={orgs.data.legend}\n                    history={history}\n                    colorFunc={colorFunc}\n                    yLabel={chartMapper[activeTabKey].label}\n                    onClick={chartMapper[activeTabKey].onClick(\n                      toJobExplorer,\n                      queryParams\n                    )}\n                    TooltipClass={chartMapper[activeTabKey].tooltip}\n                  />\n                )}\n              </CardBody>\n            </TopCard>\n            <CardContainer>\n              <Card>\n                <CardBody style={{ padding: 0 }}>\n                  <CardTitle style={{ padding: 0 }}>\n                    <h2 style={{ marginLeft: '20px' }}>\n                      Job Runs by Organization\n                    </h2>\n                  </CardTitle>\n                  {jobs.isLoading && <LoadingState />}\n                  {jobs.error && <ApiErrorState message={jobs.error.error} />}\n                  {jobs.isSuccess && jobs.data.length <= 0 && <NoData />}\n                  {jobs.isSuccess && jobs.data.length > 0 && (\n                    <PieChart\n                      margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                      id=\"d3-donut-1-chart-root\"\n                      data={jobs.data}\n                      colorFunc={colorFunc}\n                    />\n                  )}\n                </CardBody>\n              </Card>\n              <Card>\n                <CardBody style={{ padding: 0 }}>\n                  <CardTitle style={{ padding: 0 }}>\n                    <h2 style={{ marginLeft: '20px' }}>\n                      Usage by Organization (Tasks)\n                    </h2>\n                  </CardTitle>\n                  {tasks.isLoading && <LoadingState />}\n                  {tasks.error && <ApiErrorState message={tasks.error.error} />}\n                  {tasks.isSuccess && tasks.data.length <= 0 && <NoData />}\n                  {tasks.isSuccess && tasks.data.length > 0 && (\n                    <PieChart\n                      margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                      id=\"d3-donut-2-chart-root\"\n                      data={tasks.data}\n                      colorFunc={colorFunc}\n                    />\n                  )}\n                </CardBody>\n              </Card>\n            </CardContainer>\n          </Main>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nOrganizationStatistics.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default OrganizationStatistics;\n","var pfmulti = [\n    '#06C',\n    '#4CB140',\n    '#009596',\n    '#5752D1',\n    '#F4C145',\n    '#EC7A08',\n    '#8BC1F7',\n    '#23511E',\n    '#A2D9D9',\n    '#2A265F',\n    '#F9E0A2',\n    '#8F4700',\n    '#002F5D'\n];\nexport { pfmulti };\n","import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { Card, CardBody } from '@patternfly/react-core';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport Breadcrumbs from '../../../Components/Breadcrumbs';\n\nimport useApi from '../../../Utilities/useApi';\n\nimport { readPlanOptions } from '../../../Api';\n\nimport Form from '../Shared/Form';\n\nimport { Paths } from '../../../paths';\n\nconst Add = () => {\n  const [options, setOptions] = useApi({});\n  useEffect(() => {\n    setOptions(readPlanOptions());\n  }, []);\n  const canWrite =\n    options.isSuccess &&\n    (options.data?.meta?.rbac?.perms?.write === true ||\n      options.data?.meta?.rbac?.perms?.all === true);\n  const title = 'Create new plan';\n\n  const showAdd = () => (\n    <>\n      <PageHeader>\n        <Breadcrumbs\n          items={[{ title: 'Savings Planner', navigate: '/savings-planner' }]}\n        />\n        <PageHeaderTitle title={title} />\n      </PageHeader>\n      <Main>\n        <Card>\n          <CardBody>\n            <Form title={title} options={options} />\n          </CardBody>\n        </Card>\n      </Main>\n    </>\n  );\n  if (options.isSuccess) {\n    return canWrite ? showAdd() : <Redirect to={Paths.savingsPlanner} />;\n  }\n  return null;\n};\n\nexport default Add;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { CardActions } from '@patternfly/react-core';\nimport styled from 'styled-components';\n\nconst CardActionsWrapper = styled.div`\n  margin-top: 20px;\n  --pf-c-card__actions--PaddingLeft: 0;\n`;\n\nconst CardActionsRow = ({ children }) => {\n  return (\n    <CardActionsWrapper>\n      <CardActions>{children}</CardActions>\n    </CardActionsWrapper>\n  );\n};\n\nCardActionsRow.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default CardActionsRow;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\nimport { Button, Badge, Alert, Tooltip } from '@patternfly/react-core';\nimport AlertModal from '../AlertModal';\nimport { getRelatedResourceDeleteCounts } from '../../Utilities/getRelatedResourceDeleteDetails';\nimport ErrorDetail from '../ErrorDetail';\n\nconst WarningMessage = styled(Alert)`\n  margin-top: 10px;\n`;\n\nconst Label = styled.span`\n  && {\n    margin-right: 10px;\n  }\n`;\n\nconst DeleteButton = ({\n  onConfirm,\n  modalTitle = 'Delete',\n  name = '',\n  variant = 'secondary',\n  isDisabled = false,\n  ouiaId = null,\n  deleteMessage = 'Delete?',\n  deleteDetailsRequests = [],\n  disabledTooltip = 'This item cannot be deleted',\n  children,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [deleteMessageError, setDeleteMessageError] = useState();\n  const [deleteDetails, setDeleteDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const toggleModal = async (isModalOpen) => {\n    setIsLoading(true);\n    if (deleteDetailsRequests.length > 0 && isModalOpen) {\n      const { results, error } = await getRelatedResourceDeleteCounts(\n        deleteDetailsRequests\n      );\n      if (error) {\n        setDeleteMessageError(error);\n      } else {\n        setDeleteDetails(results);\n      }\n    }\n    setIsLoading(false);\n    setIsOpen(isModalOpen);\n  };\n\n  if (deleteMessageError) {\n    return (\n      <AlertModal\n        isOpen={!!deleteMessageError}\n        variant={'error'}\n        title={'Error!'}\n        onClose={() => {\n          toggleModal(false);\n          setDeleteMessageError();\n        }}\n      >\n        <ErrorDetail error={deleteMessageError.detail} />\n      </AlertModal>\n    );\n  }\n\n  return (\n    <>\n      {disabledTooltip ? (\n        <Tooltip content={disabledTooltip} position=\"top\">\n          <div>\n            <Button\n              spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n              variant={variant || 'secondary'}\n              aria-label={'Delete'}\n              isDisabled={isDisabled}\n              onClick={() => toggleModal(true)}\n              ouiaId={ouiaId}\n            >\n              {children || 'Delete'}\n            </Button>\n          </div>\n        </Tooltip>\n      ) : (\n        <Button\n          ouiaId={ouiaId}\n          spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n          variant={variant || 'secondary'}\n          aria-label={'Delete'}\n          isDisabled={isDisabled}\n          onClick={() => toggleModal(true)}\n        >\n          {children || 'Delete'}\n        </Button>\n      )}\n      <AlertModal\n        isOpen={isOpen}\n        title={modalTitle}\n        variant=\"danger\"\n        onClose={() => toggleModal(false)}\n        actions={[\n          <Button\n            ouiaId=\"delete-modal-confirm\"\n            key=\"delete\"\n            variant=\"danger\"\n            aria-label={'Confirm Delete'}\n            isDisabled={isDisabled}\n            onClick={() => {\n              onConfirm();\n              toggleModal(false);\n            }}\n          >\n            {'Delete'}\n          </Button>,\n          <Button\n            ouiaId=\"delete-modal-cancel\"\n            key=\"cancel\"\n            variant=\"link\"\n            aria-label={'Cancel'}\n            onClick={() => toggleModal(false)}\n          >\n            {'Cancel'}\n          </Button>,\n        ]}\n      >\n        {'Are you sure you want to delete:'}\n        <br />\n        <strong>{name}</strong>\n        {Object.values(deleteDetails).length > 0 && (\n          <WarningMessage\n            variant=\"warning\"\n            isInline\n            title={\n              <div>\n                <div aria-label={deleteMessage}>{deleteMessage}</div>\n                <br />\n                {Object.entries(deleteDetails).map(([key, value]) => (\n                  <div aria-label={`${key}: ${value}`} key={key}>\n                    <Label>{key}</Label> <Badge>{value}</Badge>\n                  </div>\n                ))}\n              </div>\n            }\n          />\n        )}\n      </AlertModal>\n    </>\n  );\n};\n\nDeleteButton.propTypes = {\n  onConfirm: PropTypes.func.isRequired,\n  modalTitle: PropTypes.string,\n  name: PropTypes.string,\n  variant: PropTypes.object,\n  isDisabled: PropTypes.bool,\n  ouiaId: PropTypes.string,\n  deleteMessage: PropTypes.string,\n  deleteDetailsRequests: PropTypes.array,\n  disabledTooltip: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nexport default DeleteButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { shape, string, number, arrayOf, node, oneOfType } from 'prop-types';\nimport { Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst RoutedTabs = ({ tabsArray, defaultTabId }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const getActiveTabId = (defaultTabId) => {\n    return (\n      tabsArray.find((tab) => tab.link === location.pathname)?.id ||\n      defaultTabId\n    );\n  };\n\n  const handleTabSelect = (_, eventKey) => {\n    const match = tabsArray.find((tab) => tab.id === eventKey);\n    if (match) {\n      history.push(match.link);\n    }\n  };\n\n  return (\n    <Tabs activeKey={getActiveTabId(defaultTabId)} onSelect={handleTabSelect}>\n      {tabsArray.map((tab) => (\n        <Tab\n          aria-label={typeof tab.name === 'string' ? tab.name : `${tab.id} tab`}\n          eventKey={tab.id}\n          key={tab.id}\n          link={tab.link}\n          title={<TabTitleText>{tab.name}</TabTitleText>}\n          role=\"tab\"\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nRoutedTabs.propTypes = {\n  defaultTabId: PropTypes.number,\n  tabsArray: arrayOf(\n    shape({\n      id: number.isRequired,\n      link: string.isRequired,\n      name: oneOfType([string.isRequired, node.isRequired]),\n    })\n  ).isRequired,\n};\n\nRoutedTabs.defaultProps = {\n  defaultTabId: 1,\n};\n\nexport default RoutedTabs;\n","import React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\nimport { Paths } from '../../../../paths';\nimport { stringify } from 'query-string';\n\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { Button } from '@patternfly/react-core';\n\nimport {\n  CardBody as PFCardBody,\n  CardFooter,\n  DescriptionList,\n  DescriptionListTerm,\n  DescriptionListGroup,\n  DescriptionListDescription,\n  Divider as PFDivider,\n  Label,\n  List,\n  ListItem,\n} from '@patternfly/react-core';\nimport CardActionsRow from '../../../../Components/CardActionsRow';\nimport {\n  relatedResourceDeleteRequests,\n  getRelatedResourceDeleteCounts,\n} from '../../../../Utilities/getRelatedResourceDeleteDetails';\nimport { deletePlan, readPlan } from '../../../../Api';\nimport useRequest, {\n  useDismissableError,\n} from '../../../../Utilities/useRequest';\nimport DeleteButton from '../../../../Components/DeleteButton/DeleteButton';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { formatDateTime } from '../../../../Utilities/helpers';\nimport RoutedTabs from '../../../../Components/RoutedTabs';\nimport AlertModal from '../../../../Components/AlertModal/AlertModal';\nimport ErrorDetail from '../../../../Components/ErrorDetail/ErrorDetail';\nimport JobStatus from '../../../../Components/JobStatus';\n\nconst CardBody = styled(PFCardBody)`\n  min-height: 500px;\n  padding: 0;\n  padding-bottom: 20px;\n\n  &:first-child {\n    padding-top: 0;\n  }\n`;\n\nconst Divider = styled(PFDivider)`\n  padding-top: 24px;\n`;\n\nconst DetailsTab = ({ tabsArray, plans, canWrite, options }) => {\n  const { pathname } = useLocation();\n  const history = useHistory();\n  const {\n    id,\n    automation_status,\n    category,\n    description,\n    frequency_period,\n    hosts,\n    manual_time,\n    modified,\n    name,\n    tasks,\n    template_details,\n    template_id,\n  } = plans[0];\n\n  const redirectToJobExplorer = (templateId) => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      quick_date_range: 'last_30_days',\n      status: ['failed', 'successful'],\n      template_id: [templateId],\n    };\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const showTemplate = (template_details) => {\n    if (!template_details.id) {\n      return;\n    }\n\n    return (\n      <a onClick={() => redirectToJobExplorer(template_details.id)}>\n        {template_details.name}\n      </a>\n    );\n  };\n\n  const renderOptionsBasedValue = (key, val) => {\n    const fromOptionsValue = (options.data[key] || []).find(\n      ({ key: apiValue }) => apiValue === val\n    );\n    return (fromOptionsValue || {}).value;\n  };\n\n  const labelsAndValues = {\n    Name: name || undefined,\n    'Automation type': category\n      ? renderOptionsBasedValue('category', category)\n      : undefined,\n    Description: description || undefined,\n    'Manual time': manual_time\n      ? renderOptionsBasedValue('manual_time', manual_time)\n      : undefined,\n    'Run on hosts': hosts || undefined,\n    Frequency: frequency_period\n      ? renderOptionsBasedValue('frequency_period', frequency_period)\n      : undefined,\n    Template: template_id ? showTemplate(template_details) : undefined,\n    'Last job status':\n      automation_status.status && automation_status.status !== 'None' ? (\n        <JobStatus status={automation_status.status} />\n      ) : (\n        <Label variant=\"outline\" color=\"red\" icon={<ExclamationCircleIcon />}>\n          Not Running\n        </Label>\n      ),\n    'Last updated': modified ? (\n      <span>{formatDateTime(modified)}</span>\n    ) : undefined,\n  };\n\n  const { request: deletePlans, error: deleteError } = useRequest(\n    useCallback(async () => {\n      await deletePlan({ params: { id: id } });\n      history.push(`/savings-planner`);\n    }, [id, history])\n  );\n\n  const {\n    result: { isDeleteDisabled },\n    error: deleteDetailsError,\n    request: fetchDeleteDetails,\n  } = useRequest(\n    useCallback(async () => {\n      const { results: deleteDetails, error } =\n        await getRelatedResourceDeleteCounts(\n          relatedResourceDeleteRequests.savingsPlan(plans[0], readPlan)\n        );\n      if (error) {\n        throw new Error(error);\n      }\n      if (deleteDetails) {\n        return { isDeleteDisabled: true };\n      }\n      return { isDeleteDisabled: false };\n    }, [plans[0]]),\n    { isDeleteDisabled: false }\n  );\n\n  useEffect(() => {\n    fetchDeleteDetails();\n  }, [fetchDeleteDetails]);\n  const { error, dismissError } = useDismissableError(\n    deleteError || deleteDetailsError\n  );\n\n  return (\n    <>\n      {plans && (\n        <>\n          <CardBody>\n            <RoutedTabs tabsArray={tabsArray} />\n            <div style={{ padding: '1rem' }}>\n              <DescriptionList isHorizontal columnModifier={{ lg: '3Col' }}>\n                {Object.keys(labelsAndValues).map(\n                  (key, i) =>\n                    labelsAndValues[key] !== undefined && (\n                      <DescriptionListGroup key={i}>\n                        <DescriptionListTerm>{key}</DescriptionListTerm>\n                        <DescriptionListDescription>\n                          {labelsAndValues[key]}\n                        </DescriptionListDescription>\n                      </DescriptionListGroup>\n                    )\n                )}\n              </DescriptionList>\n              {tasks.length > 0 && (\n                <DescriptionList>\n                  <Divider component=\"div\" />\n                  <DescriptionListGroup key={tasks}>\n                    <DescriptionListTerm>Tasks</DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <List component=\"ol\" type=\"1\">\n                        {tasks.map(({ id, task }) => (\n                          <ListItem key={id}>{task}</ListItem>\n                        ))}\n                      </List>\n                    </DescriptionListDescription>\n                  </DescriptionListGroup>\n                </DescriptionList>\n              )}\n            </div>\n          </CardBody>\n          {canWrite && (\n            <CardFooter>\n              <CardActionsRow>\n                <Button\n                  key=\"edit-plan-button\"\n                  variant=\"primary\"\n                  aria-label=\"Edit plan\"\n                  onClick={() => {\n                    history.push({\n                      pathname: `${pathname.split('/details')[0]}/edit`,\n                    });\n                  }}\n                >\n                  Edit\n                </Button>\n                <DeleteButton\n                  key={'delete-plan-button'}\n                  name={name}\n                  modalTitle={'Delete Plan'}\n                  onConfirm={deletePlans}\n                  disabledTooltip={\n                    isDeleteDisabled && 'This plan cannot be deleted'\n                  }\n                >\n                  {'Delete'}\n                </DeleteButton>\n              </CardActionsRow>\n              {error && (\n                <AlertModal\n                  isOpen={!!error}\n                  onClose={dismissError}\n                  title={'Error'}\n                  variant=\"error\"\n                >\n                  <ErrorDetail error={error.detail} />\n                </AlertModal>\n              )}\n            </CardFooter>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nDetailsTab.propTypes = {\n  plans: PropTypes.array,\n  tabsArray: PropTypes.array,\n  canWrite: PropTypes.bool.isRequired,\n  options: PropTypes.object.isRequired,\n};\n\nexport default DetailsTab;\n","var hoursFormatter = function (n) {\n    return +(n.toFixed(0)).toLocaleString() + \" hours\";\n}; /* 2,500 hours */\nexport default hoursFormatter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle, Title } from '@patternfly/react-core';\nimport currencyFormatter from '../../../../../Utilities/currencyFormatter';\nimport hoursFormatter from '../../../../../Utilities/hoursFormatter';\nvar TotalSavings = function (_a) {\n    var _b = _a.value, value = _b === void 0 ? 0 : _b, _c = _a.isMoney, isMoney = _c === void 0 ? true : _c;\n    return (React.createElement(Card, { isPlain: true },\n        React.createElement(CardTitle, { style: { paddingBottom: '0' } }, \"Total savings\"),\n        React.createElement(CardBody, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"4xl\", style: { color: isMoney ? '#81C46B' : '#0063CF' } }, isMoney\n                ? \"\" + currencyFormatter(value)\n                : \"\" + hoursFormatter(value)))));\n};\nTotalSavings.propTypes = {\n    value: PropTypes.number,\n    isMoney: PropTypes.bool,\n};\nexport default TotalSavings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle } from '@patternfly/react-core';\nvar FormulaDescription = function (_a) {\n    var _b = _a.isMoney, isMoney = _b === void 0 ? true : _b;\n    return (React.createElement(Card, { isPlain: true },\n        React.createElement(CardTitle, null, \"Automation formula\"),\n        React.createElement(CardBody, null,\n            React.createElement(\"p\", null,\n                React.createElement(\"b\", null, \"Manual cost for template x\"),\n                \" =\",\n                React.createElement(\"em\", null, \"(time for a manual run on one host in hours * (sum of all hosts across all job runs) ) \" + (isMoney ? '* cost per hour' : ''))),\n            React.createElement(\"p\", null,\n                React.createElement(\"b\", null, \"Automation cost for template x\"),\n                \" =\",\n                React.createElement(\"em\", null, \"cost of automation per hour * sum of total elapsed hours for a template\")),\n            React.createElement(\"p\", null,\n                React.createElement(\"b\", null, \"Savings\"),\n                \" =\",\n                React.createElement(\"em\", null, \"Sum of (manual cost - automation cost) across all templates\")))));\n};\nFormulaDescription.propTypes = {\n    isMoney: PropTypes.bool\n};\nexport default FormulaDescription;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useState } from 'react';\nimport { Card, CardActions, CardBody, CardHeader, CardTitle, Grid, GridItem, List, ListItem, ToggleGroup, ToggleGroupItem } from '@patternfly/react-core';\nimport { SquareFullIcon } from '@patternfly/react-icons';\nimport ChartRenderer, { functions, ChartKind, ChartThemeColor, ChartType, ChartTopLevelType, ApiType, } from 'react-json-chart-builder';\nimport RoutedTabs from '../../../../Components/RoutedTabs';\nimport TotalSavings from \"./TotalSavings\";\nimport FormulaDescription from './FormulaDescription';\nimport currencyFormatter from '../../../../Utilities/currencyFormatter';\nimport hoursFormatter from '../../../../Utilities/hoursFormatter';\n;\n;\nvar yearLabels = {\n    initial: 'Initial',\n    year1: 'Year 1',\n    year2: 'Year 2',\n    year3: 'Year 3',\n};\nvar getChartData = function (data) {\n    var statsData = Object.keys(yearLabels).map(function (year) { return ({\n        year: yearLabels[year],\n        total_costs: +data.projections.monetary_stats.total_costs[year] * -1,\n        total_benefits: +data.projections.monetary_stats.total_benefits[year],\n        cumulative_net_benefits: +data.projections.monetary_stats.cumulative_net_benefits[year],\n        total_hours_spent_risk_adjusted: +data.projections.time_stats.total_hours_spent_risk_adjusted[year] * -1,\n        total_hours_saved: +data.projections.time_stats.total_hours_saved[year],\n        cumulative_time_net_benefits: +data.projections.time_stats.cumulative_time_net_benefits[year]\n    }); });\n    return { items: statsData, type: ApiType.nonGrouped, response_type: '' };\n};\nvar constants = function (isMoney) { return ({\n    cost: {\n        key: isMoney ? 'total_costs' : 'total_hours_spent_risk_adjusted',\n        color: '#8B8D8F',\n    },\n    benefit: {\n        key: isMoney ? 'total_benefits' : 'total_hours_saved',\n        color: isMoney ? '#81C46B' : '#0063CF',\n    },\n    net: {\n        key: isMoney ? 'cumulative_net_benefits' : 'cumulative_time_net_benefits',\n        color: '#EE7A00'\n    }\n}); };\nvar StatisticsTab = function (_a) {\n    var tabsArray = _a.tabsArray, data = _a.data;\n    var _b = useState(true), isMoney = _b[0], setIsMoney = _b[1];\n    var customTooltipFormatting = function (datum) { return isMoney ? currencyFormatter(+datum.y) : hoursFormatter(+datum.y); };\n    var computeTotalSavings = function (d) {\n        return isMoney\n            ? d.projections.monetary_stats.cumulative_net_benefits.year3\n            : d.projections.time_stats.cumulative_time_net_benefits.year3;\n    };\n    var barChartData = {\n        charts: [\n            {\n                id: 1000,\n                kind: ChartKind.wrapper,\n                type: ChartTopLevelType.chart,\n                parent: null,\n                props: {\n                    height: 600,\n                    domainPadding: {\n                        x: 100\n                    },\n                    padding: {\n                        bottom: 60,\n                        left: 80\n                    },\n                    themeColor: ChartThemeColor.gray\n                },\n                tooltip: {\n                    cursor: true,\n                    stickToAxis: 'x',\n                    mouseFollow: true,\n                    legendTooltip: {\n                        legendData: [\n                            {\n                                childName: constants(isMoney).benefit.key,\n                                name: 'Savings',\n                                symbol: {\n                                    fill: constants(isMoney).benefit.color,\n                                }\n                            },\n                            {\n                                childName: constants(isMoney).cost.key,\n                                name: 'Costs',\n                                symbol: {\n                                    fill: constants(isMoney).cost.color,\n                                }\n                            },\n                            {\n                                childName: constants(isMoney).net.key,\n                                name: 'Cumulative savings',\n                                symbol: {\n                                    fill: constants(isMoney).net.color,\n                                }\n                            }\n                        ],\n                        titleProperyForLegend: 'year'\n                    },\n                    customFnc: customTooltipFormatting\n                },\n                xAxis: {\n                    label: 'Time',\n                },\n                yAxis: {\n                    label: isMoney ? 'Money Saved' : 'Hours Saved',\n                    tickFormat: 'formatNumberAsK',\n                    style: {\n                        grid: { stroke: '#D2D2D2' },\n                        axisLabel: { padding: 60 }\n                    },\n                },\n            },\n            {\n                id: 1001,\n                kind: ChartKind.stack,\n                parent: 1000,\n                props: {},\n            },\n            {\n                id: 1102,\n                kind: ChartKind.simple,\n                type: ChartType.bar,\n                name: constants(isMoney).benefit.key,\n                parent: 1001,\n                props: {\n                    x: 'year',\n                    y: constants(isMoney).benefit.key,\n                    barRatio: 0.8,\n                    barWidth: 0,\n                    style: {\n                        data: {\n                            fill: constants(isMoney).benefit.color,\n                            width: 120,\n                        },\n                    },\n                },\n                tooltip: {\n                    labelName: '',\n                },\n            },\n            {\n                id: 1101,\n                kind: ChartKind.simple,\n                type: ChartType.bar,\n                name: constants(isMoney).cost.key,\n                parent: 1001,\n                props: {\n                    x: 'year',\n                    y: constants(isMoney).cost.key,\n                    barRatio: 0.8,\n                    barWidth: 0,\n                    style: {\n                        data: {\n                            fill: constants(isMoney).cost.color,\n                            width: 120,\n                        },\n                    },\n                },\n                tooltip: {\n                    labelName: '',\n                },\n            },\n            {\n                id: 1002,\n                kind: ChartKind.simple,\n                type: ChartType.line,\n                name: constants(isMoney).net.key,\n                parent: 1000,\n                props: {\n                    x: 'year',\n                    y: constants(isMoney).net.key,\n                    style: {\n                        data: {\n                            stroke: constants(isMoney).net.color,\n                            strokeWidth: 5\n                        },\n                    },\n                },\n                tooltip: {\n                    labelName: '',\n                },\n            },\n        ],\n        functions: __assign(__assign({}, functions), { fetchFnc: function () { return new Promise(function (resolve) { resolve(getChartData(data)); }); } }),\n    };\n    var renderLeft = function () { return (React.createElement(Card, { isPlain: true },\n        React.createElement(CardHeader, null,\n            React.createElement(CardActions, null,\n                React.createElement(ToggleGroup, { \"aria-label\": \"toggleButton\" },\n                    React.createElement(ToggleGroupItem, { text: 'Money', buttonId: 'money', isSelected: isMoney, onChange: function () { return setIsMoney(true); } }),\n                    React.createElement(ToggleGroupItem, { text: 'Time', buttonId: 'time', isSelected: !isMoney, onChange: function () { return setIsMoney(false); } }))),\n            React.createElement(CardTitle, null, data.name)),\n        React.createElement(CardBody, null,\n            React.createElement(ChartRenderer, { schema: barChartData.charts, functions: barChartData.functions })))); };\n    var renderRight = function () { return (React.createElement(React.Fragment, null,\n        React.createElement(TotalSavings, { value: computeTotalSavings(data), isMoney: isMoney }),\n        React.createElement(Card, { isPlain: true },\n            React.createElement(CardBody, null,\n                React.createElement(List, { isPlain: true },\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).benefit.color }) }, \"Savings from automating this plan\"),\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).cost.color }) }, \"Costs from creating, maintaining and running the automation\"),\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).net.color }) }, \"Cumulative savings over time\")))),\n        React.createElement(FormulaDescription, { isMoney: isMoney }))); };\n    return (React.createElement(Card, null,\n        React.createElement(RoutedTabs, { tabsArray: tabsArray }),\n        React.createElement(Grid, null,\n            React.createElement(GridItem, { span: 9 }, renderLeft()),\n            React.createElement(GridItem, { span: 3 }, renderRight()))));\n};\nexport default StatisticsTab;\n","import React, { useEffect } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport useApi from '../../../Utilities/useApi';\n\nimport { readPlanOptions } from '../../../Api';\nimport { Paths } from '../../../paths';\n\nimport Form from '../Shared/Form';\n\nconst Edit = ({ data }) => {\n  const [options, setOptions] = useApi({});\n  const { id } = useParams();\n\n  useEffect(() => {\n    setOptions(readPlanOptions());\n  }, []);\n\n  const canWrite =\n    options.isSuccess &&\n    (options.data?.meta?.rbac?.perms?.write === true ||\n      options.data?.meta?.rbac?.perms?.all === true);\n\n  const showEdit = () => (\n    <>\n      <Form title=\"Edit plan\" options={options} data={data} />\n    </>\n  );\n\n  if (options.isSuccess) {\n    return canWrite ? (\n      showEdit()\n    ) : (\n      <Redirect to={`${Paths.savingsPlanner}/${id}`} />\n    );\n  }\n  return null;\n};\n\nEdit.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default Edit;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, useLocation, Route, Switch } from 'react-router-dom';\nimport { CaretLeftIcon } from '@patternfly/react-icons';\nimport { Card } from '@patternfly/react-core';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\n\nimport DetailsTab from './DetailsTab';\nimport StatisticsTab from './StatisticsTab';\nimport SavingsPlanner from '../List';\nimport ApiErrorState from '../../../Components/ApiErrorState';\nimport { notAuthorizedParams } from '../../../Utilities/constants';\n\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nimport Breadcrumbs from '../../../Components/Breadcrumbs';\n\nimport { preflightRequest, readPlan, readPlanOptions } from '../../../Api';\n\nimport useApi from '../../../Utilities/useApi';\n\nimport SavingsPlanEdit from '../Edit';\n\nconst Details = () => {\n  const { id } = useParams();\n  const { state: locationState } = useLocation();\n  const [preflightError, setPreFlightError] = useState(null);\n  let pageTitle = 'Details';\n  let onEdit = false;\n  if (locationState?.reload) {\n    onEdit = true;\n  }\n  if (location.pathname.indexOf('/statistics') !== -1) {\n    pageTitle = 'Statistics';\n  } else if (location.pathname.indexOf('/edit') !== -1) {\n    pageTitle = 'Edit plan';\n  }\n  const [selectedId, setSelectedId] = useState(id);\n  const [\n    {\n      isSuccess,\n      error,\n      data: { rbac = {}, items: plans = [] },\n    },\n    setData,\n  ] = useApi({ rbac: {}, items: [] });\n  const [options, setOptions] = useApi({});\n  const queryParams = { id: [selectedId] };\n\n  useEffect(() => {\n    setSelectedId(id);\n    preflightRequest().catch((error) => {\n      setPreFlightError({ preflightError: error });\n    });\n    const fetchEndpoints = () => {\n      setData(readPlan({ params: queryParams }));\n      setOptions(readPlanOptions());\n    };\n\n    fetchEndpoints();\n  }, [locationState]);\n\n  const canWrite =\n    isSuccess && (rbac.perms?.write === true || rbac.perms?.all === true);\n  const tabsArray = [\n    {\n      id: 0,\n      name: (\n        <>\n          <CaretLeftIcon />\n          {'Back to Plans'}\n        </>\n      ),\n      link: `/savings-planner`,\n    },\n    { id: 1, name: 'Details', link: `/savings-planner/${selectedId}/details` },\n    {\n      id: 2,\n      name: 'Statistics',\n      link: `/savings-planner/${selectedId}/statistics`,\n    },\n  ];\n\n  const breadcrumbUrl = `/savings-planner/${selectedId}`;\n  const breadcrumbsItems = isSuccess\n    ? [\n        { title: 'Savings Planner', navigate: '/savings-planner' },\n        { title: plans[0].name, navigate: breadcrumbUrl },\n      ]\n    : [];\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n  return (\n    <>\n      {error && (\n        <>\n          <ApiErrorState message={error.error} />\n        </>\n      )}\n      {isSuccess && options.isSuccess && (\n        <>\n          <PageHeader>\n            <Breadcrumbs items={breadcrumbsItems} />\n            <PageHeaderTitle title={pageTitle} />\n          </PageHeader>\n          <Main>\n            <Card>\n              <Switch>\n                <Route path=\"/savings-planner/:id/statistics\">\n                  <StatisticsTab\n                    tabsArray={tabsArray}\n                    data={plans[0]}\n                    queryParams={queryParams}\n                  />\n                </Route>\n                {!onEdit && (\n                  <Route path=\"/savings-planner/:id/details\">\n                    <DetailsTab\n                      plans={plans}\n                      tabsArray={tabsArray}\n                      canWrite={canWrite}\n                      options={options}\n                    />\n                  </Route>\n                )}\n                <Route path=\"/savings-planner/:id/edit\">\n                  <SavingsPlanEdit data={plans[0]} />\n                </Route>\n                <Route path=\"/savings-planner/:id\">\n                  <DetailsTab\n                    plans={plans}\n                    tabsArray={tabsArray}\n                    canWrite={canWrite}\n                    options={options}\n                  />\n                </Route>\n                <Route exact path=\"/savings-planner\">\n                  <SavingsPlanner />\n                </Route>\n              </Switch>\n            </Card>\n          </Main>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Details;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Title,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Button,\n} from '@patternfly/react-core';\nimport { AddCircleOIcon } from '@patternfly/react-icons';\nimport { useHistory } from 'react-router-dom';\n\nconst EmptyList = ({\n  label = '',\n  title = 'No items found.',\n  message = '',\n  canAdd = false,\n  icon = AddCircleOIcon,\n  path,\n}) => {\n  const history = useHistory();\n\n  return (\n    <EmptyState variant=\"full\">\n      <EmptyStateIcon icon={icon} />\n      <Title size=\"lg\" headingLevel=\"h3\">\n        {title}\n      </Title>\n      <EmptyStateBody>{message}</EmptyStateBody>\n      {canAdd && (\n        <Button\n          key=\"add-item-button\"\n          variant=\"primary\"\n          aria-label={label}\n          onClick={() => {\n            history.push({\n              pathname: path,\n            });\n          }}\n        >\n          {label}\n        </Button>\n      )}\n    </EmptyState>\n  );\n};\n\nEmptyList.propTypes = {\n  canAdd: PropTypes.bool,\n  label: PropTypes.string,\n  message: PropTypes.string,\n  title: PropTypes.string,\n  path: PropTypes.string.isRequired,\n  icon: PropTypes.component,\n};\n\nexport default EmptyList;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {\n  Card,\n  CardHeader,\n  CardHeaderMain,\n  CardActions,\n  CardTitle as PFCardTitle,\n  CardBody,\n  CardFooter,\n  Checkbox as PFCheckbox,\n  Dropdown,\n  DropdownItem,\n  KebabToggle,\n  Label,\n} from '@patternfly/react-core';\n\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport styled from 'styled-components';\nimport { stringify } from 'query-string';\n\nimport { Link, useRouteMatch } from 'react-router-dom';\n\nimport { Paths } from '../../../../paths';\n\nimport currencyFormatter from '../../../../Utilities/currencyFormatter';\nimport { formatDateTime } from '../../../../Utilities/helpers';\n\nimport JobStatus from '../../../../Components/JobStatus';\n\nconst CardTitle = styled(PFCardTitle)`\n  word-break: break-word;\n`;\n\nconst CardLabel = styled.span`\n  margin-right: 5px;\n  font-weight: bold;\n`;\n\nconst Small = styled.small`\n  display: block;\n  margin-bottom: 10px;\n  color: #6a6e73;\n`;\n\nconst Checkbox = styled(PFCheckbox)`\n  &.pf-c-check.pf-m-standalone {\n    margin-top: -3px;\n  }\n`;\n\nconst CardDetail = styled.div`\n  display: flex;\n  min-height: 30px;\n  align-items: center;\n`;\n\nconst ListItem = ({\n  isSuccess,\n  plan,\n  selected = [],\n  handleSelect = () => {},\n  canWrite,\n  options,\n}) => {\n  const {\n    id,\n    automation_status,\n    category,\n    description,\n    frequency_period,\n    modified,\n    name,\n    template_details,\n    projections,\n  } = plan;\n\n  const projectedSavings =\n    projections?.monetary_stats?.cumulative_net_benefits?.year3;\n\n  const [isCardKebabOpen, setIsCardKebabOpen] = useState(false);\n  const match = useRouteMatch();\n  let history = useHistory();\n\n  const redirectToJobExplorer = (templateId) => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      quick_date_range: 'last_30_days',\n      status: ['failed', 'successful'],\n      template_id: [templateId],\n    };\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const renderTemplateLink = (template) => {\n    return template && isSuccess ? (\n      <a onClick={() => redirectToJobExplorer(template.id)}>{template.name}</a>\n    ) : null;\n  };\n\n  const renderOptionsBasedValue = (key, val) => {\n    return options.data[key].find(({ key: apiValue }) => apiValue === val)\n      .value;\n  };\n\n  const kebabDropDownItems = [\n    <React.Fragment key={id}>\n      <DropdownItem\n        key=\"edit\"\n        onClick={() => history.push(`${match.url}/${id}/edit`)}\n        position=\"right\"\n      >\n        Edit\n      </DropdownItem>\n      <DropdownItem\n        key=\"link\"\n        onClick={() => history.push(`${match.url}/${id}/edit#tasks`)}\n        position=\"right\"\n      >\n        Manage tasks\n      </DropdownItem>\n      <DropdownItem\n        key=\"link\"\n        onClick={() => history.push(`${match.url}/${id}/edit#link_template`)}\n        position=\"right\"\n      >\n        Link template\n      </DropdownItem>\n    </React.Fragment>,\n  ];\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardHeaderMain>\n          <CardTitle>\n            <Link to={`${match.url}/${id}`}>{name}</Link>\n          </CardTitle>\n        </CardHeaderMain>\n        {canWrite && (\n          <CardActions>\n            <Dropdown\n              onSelect={() => {}}\n              toggle={\n                <KebabToggle\n                  onToggle={() => setIsCardKebabOpen(!isCardKebabOpen)}\n                />\n              }\n              isOpen={isCardKebabOpen}\n              isPlain\n              dropdownItems={kebabDropDownItems}\n              position={'right'}\n            />\n            <Checkbox\n              onChange={() => handleSelect(plan)}\n              isChecked={selected.some((row) => row.id === plan.id)}\n              aria-label=\"card checkbox\"\n              id=\"check-1\"\n              name=\"check1\"\n            />\n          </CardActions>\n        )}\n      </CardHeader>\n      <CardBody>\n        {description ? <Small>{description}</Small> : null}\n        <CardDetail>\n          <CardLabel>Frequency</CardLabel>{' '}\n          {frequency_period ? (\n            renderOptionsBasedValue('frequency_period', frequency_period)\n          ) : (\n            <span>None</span>\n          )}\n        </CardDetail>\n        <CardDetail>\n          <CardLabel>Template</CardLabel>{' '}\n          {Object.keys(template_details || {}).length !== 0 ? (\n            renderTemplateLink(template_details)\n          ) : (\n            <span>\n              None -{' '}\n              <a\n                onClick={() =>\n                  history.push(`${match.url}/${id}/edit#link_template`)\n                }\n              >\n                Link template\n              </a>\n            </span>\n          )}\n        </CardDetail>\n        <CardDetail>\n          <CardLabel>Last job status</CardLabel>\n          {automation_status.status !== 'None' ? (\n            <JobStatus status={automation_status.status} />\n          ) : (\n            <Label\n              variant=\"outline\"\n              color=\"red\"\n              icon={<ExclamationCircleIcon />}\n            >\n              Not Running\n            </Label>\n          )}\n        </CardDetail>\n        {projectedSavings && (\n          <CardDetail>\n            <CardLabel>Projected savings</CardLabel>\n            <a onClick={() => history.push(`${match.url}/${id}/statistics`)}>\n              {currencyFormatter(+projectedSavings)}\n            </a>\n          </CardDetail>\n        )}\n        <CardDetail>\n          <CardLabel>Last updated</CardLabel>{' '}\n          <span>{formatDateTime(modified)}</span>\n        </CardDetail>\n      </CardBody>\n      <CardFooter>\n        <Label>{renderOptionsBasedValue('category', category)}</Label>\n      </CardFooter>\n    </Card>\n  );\n};\n\nListItem.propTypes = {\n  isSuccess: PropTypes.bool.isRequired,\n  canWrite: PropTypes.bool.isRequired,\n  selected: PropTypes.array,\n  handleSelect: PropTypes.func,\n  plan: PropTypes.object,\n  options: PropTypes.object,\n};\n\nexport default ListItem;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport AlertModal from '../AlertModal';\n\nimport { getRelatedResourceDeleteCounts } from '../../Utilities/getRelatedResourceDeleteDetails';\n\nimport ErrorDetail from '../ErrorDetail';\n\nconst requiredField = (props) => {\n  const { name, username, image } = props;\n  if (!name && !username && !image) {\n    return new Error(\n      `One of 'name', 'username' or 'image' is required by ItemToDelete component.`\n    );\n  }\n  if (name) {\n    PropTypes.checkPropTypes(\n      {\n        name: PropTypes.string,\n      },\n      { name: props.name },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  if (username) {\n    PropTypes.checkPropTypes(\n      {\n        username: PropTypes.string,\n      },\n      { username: props.username },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  if (image) {\n    PropTypes.checkPropTypes(\n      {\n        image: PropTypes.string,\n      },\n      { image: props.image },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  return null;\n};\n\nconst ToolbarDeleteButton = ({\n  itemsToDelete,\n  pluralizedItemName = 'Items',\n  onDelete,\n  errorMessage = 'Error while deleting',\n  deleteDetailsRequests = [],\n  cannotDelete = (item) => !item,\n}) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [deleteDetails, setDeleteDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [deleteMessageError, setDeleteMessageError] = useState('');\n  const handleDelete = () => {\n    onDelete();\n    toggleModal();\n  };\n\n  const toggleModal = async (isOpen) => {\n    setIsLoading(true);\n    setDeleteDetails(null);\n    if (\n      isOpen &&\n      itemsToDelete.length === 1 &&\n      deleteDetailsRequests?.length > 0\n    ) {\n      const { results, error } = await getRelatedResourceDeleteCounts(\n        deleteDetailsRequests\n      );\n\n      if (error) {\n        setDeleteMessageError(error);\n      } else {\n        setDeleteDetails(results);\n      }\n    }\n    setIsLoading(false);\n    setIsModalOpen(isOpen);\n  };\n\n  const renderTooltip = () => {\n    const itemsUnableToDelete = itemsToDelete\n      .filter(cannotDelete)\n      .map((item) => item.name || item.username)\n      .join(', ');\n\n    if (itemsToDelete.some(cannotDelete)) {\n      return (\n        <div>\n          {errorMessage ? (\n            <>\n              <span>{errorMessage}</span>\n              <span>{`: ${itemsUnableToDelete}`}</span>\n            </>\n          ) : (\n            `You do not have permission to delete ${pluralizedItemName}: ${itemsUnableToDelete}`\n          )}\n        </div>\n      );\n    }\n    if (itemsToDelete.length) {\n      return 'Delete';\n    }\n    return 'Select a plan to delete';\n  };\n\n  const modalTitle = `Delete ${pluralizedItemName}?`;\n\n  const isDisabled =\n    itemsToDelete.length === 0 || itemsToDelete.some(cannotDelete);\n\n  if (deleteMessageError) {\n    return (\n      <AlertModal\n        isOpen={!!deleteMessageError}\n        title={'Error!'}\n        onClose={() => {\n          toggleModal(false);\n          setDeleteMessageError();\n        }}\n      >\n        <ErrorDetail error={deleteMessageError.detail} />\n      </AlertModal>\n    );\n  }\n\n  return (\n    <>\n      <Tooltip content={renderTooltip()} position=\"top\">\n        <div>\n          <Button\n            variant=\"secondary\"\n            ouiaId=\"delete-button\"\n            spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n            aria-label={'Delete'}\n            onClick={() => toggleModal(true)}\n            isDisabled={isDisabled}\n          >\n            {'Delete'}\n          </Button>\n        </div>\n      </Tooltip>\n\n      {isModalOpen && (\n        <AlertModal\n          variant=\"danger\"\n          title={modalTitle}\n          isOpen={isModalOpen}\n          onClose={() => toggleModal(false)}\n          actions={[\n            <Button\n              ouiaId=\"delete-modal-confirm\"\n              key=\"delete\"\n              variant=\"danger\"\n              aria-label={'confirm delete'}\n              isDisabled={Boolean(deleteDetails)}\n              onClick={handleDelete}\n            >\n              {'Delete'}\n            </Button>,\n            <Button\n              key=\"cancel\"\n              variant=\"link\"\n              aria-label={'cancel delete'}\n              onClick={() => toggleModal(false)}\n            >\n              {'Cancel'}\n            </Button>,\n          ]}\n        >\n          <div>{'This action will delete the following:'}</div>\n          {itemsToDelete.map((item) => (\n            <span key={item.id}>\n              <strong>{item.name || item.username || item.image}</strong>\n              <br />\n            </span>\n          ))}\n        </AlertModal>\n      )}\n    </>\n  );\n};\n\nToolbarDeleteButton.propTypes = {\n  itemsToDelete: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: requiredField,\n      username: requiredField,\n      image: requiredField,\n    })\n  ).isRequired,\n  pluralizedItemName: PropTypes.string,\n  onDelete: PropTypes.func.isRequired,\n  errorMessage: PropTypes.string,\n  warningMessage: PropTypes.node,\n  deleteDetailsRequests: PropTypes.array,\n  cannotDelete: PropTypes.func,\n  deleteMessage: PropTypes.string,\n};\n\nexport default ToolbarDeleteButton;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport { Button, Gallery, PaginationVariant } from '@patternfly/react-core';\nimport { AddCircleOIcon, SearchIcon } from '@patternfly/react-icons';\n\nimport {\n  deletePlan,\n  preflightRequest,\n  readPlanOptions,\n  readPlans,\n} from '../../../Api';\nimport FilterableToolbar from '../../../Components/Toolbar';\nimport ApiErrorState from '../../../Components/ApiErrorState';\nimport LoadingState from '../../../Components/LoadingState';\nimport EmptyState from '../../../Components/EmptyState';\nimport EmptyList from '../../../Components/EmptyList';\nimport Pagination from '../../../Components/Pagination';\nimport PlanCard from './ListItem';\nimport { useQueryParams } from '../../../Utilities/useQueryParams';\nimport useApi from '../../../Utilities/useApi';\nimport { savingsPlanner } from '../../../Utilities/constants';\nimport { notAuthorizedParams } from '../../../Utilities/constants';\n\nimport ToolbarDeleteButton from '../../../Components/Toolbar/ToolbarDeleteButton';\nimport useSelected from '../../../Utilities/useSelected';\nimport { useDeleteItems } from '../../../Utilities/useRequest';\nimport ErrorDetail from '../../../Components/ErrorDetail';\nimport AlertModal from '../../../Components/AlertModal';\n\nconst PageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 76px);\n`;\n\nconst FlexMain = styled(Main)`\n  flex-grow: 1;\n`;\n\nconst Footer = styled.div`\n  flex-shrink: 0;\n`;\n\nconst List = () => {\n  const history = useHistory();\n  const { pathname } = useLocation();\n\n  const { queryParams, setFromPagination, setFromToolbar } = useQueryParams(\n    savingsPlanner.defaultParams\n  );\n  const [\n    {\n      isLoading,\n      isSuccess,\n      error,\n      data: { meta = {}, items: data = [] },\n    },\n    setData,\n  ] = useApi({ meta: {}, items: [] });\n  const [options, setOptions] = useApi({});\n  const [preflightError, setPreFlightError] = useState(null);\n\n  const combinedOptions = {\n    ...options.data,\n    name: [{ key: 'name', value: null }],\n  };\n\n  const fetchEndpoints = () => {\n    preflightRequest().catch((error) => {\n      setPreFlightError({ preflightError: error });\n    });\n    setData(readPlans({ params: queryParams }));\n    setOptions(readPlanOptions());\n  };\n\n  useEffect(() => {\n    fetchEndpoints();\n  }, [queryParams]);\n\n  const canWrite =\n    options.isSuccess &&\n    (options.data?.meta?.rbac?.perms?.write === true ||\n      options.data?.meta?.rbac?.perms?.all === true);\n\n  const { selected, isAllSelected, handleSelect, setSelected } =\n    useSelected(data);\n\n  const {\n    isLoading: deleteLoading,\n    deletionError,\n    deleteItems: deleteItems,\n    clearDeletionError,\n  } = useDeleteItems(\n    useCallback(async () => {\n      return Promise.all(\n        selected.map((plan) => deletePlan({ params: { id: plan.id } }))\n      );\n    }, [selected]),\n    {\n      qsConfig: queryParams,\n      allItemsSelected: isAllSelected,\n      fetchItems: fetchEndpoints,\n    }\n  );\n\n  const handleDelete = async () => {\n    await deleteItems();\n    setSelected([]);\n  };\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  const EmptyListIcon = canWrite ? AddCircleOIcon : SearchIcon;\n\n  return (\n    <PageContainer>\n      <PageHeader>\n        <PageHeaderTitle title={'Savings Planner'} />\n        <FilterableToolbar\n          categories={combinedOptions}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n          additionalControls={[\n            ...(canWrite\n              ? [\n                  <Button\n                    key=\"add-plan-button\"\n                    variant=\"primary\"\n                    aria-label=\"Add plan\"\n                    onClick={() => {\n                      history.push({\n                        pathname: `${pathname}/add`,\n                      });\n                    }}\n                  >\n                    Add plan\n                  </Button>,\n                ]\n              : []),\n            canWrite && isSuccess && data.length > 0 && (\n              <ToolbarDeleteButton\n                key=\"delete-plan-button\"\n                onDelete={handleDelete}\n                itemsToDelete={selected}\n                pluralizedItemName={'Savings plan'}\n              />\n            ),\n          ]}\n          pagination={\n            isSuccess && data.length > 0 ? (\n              <Pagination\n                count={meta?.total_count}\n                params={{\n                  limit: queryParams.limit,\n                  offset: queryParams.offset,\n                }}\n                setPagination={setFromPagination}\n                isCompact\n              />\n            ) : (\n              <div></div>\n            )\n          }\n        />\n      </PageHeader>\n      {preflightError && (\n        <FlexMain>\n          <EmptyState {...preflightError} />\n        </FlexMain>\n      )}\n      {error && (\n        <FlexMain>\n          <ApiErrorState message={error.error} />\n        </FlexMain>\n      )}\n      {(isLoading || deleteLoading) && (\n        <FlexMain>\n          <LoadingState />\n        </FlexMain>\n      )}\n      {isSuccess && data.length === 0 && !(isLoading || deleteLoading) && (\n        <FlexMain>\n          <EmptyList\n            icon={EmptyListIcon}\n            label={'Add plan'}\n            title={'No plans found'}\n            message={\n              canWrite\n                ? 'Update the applied filters or add a new plan.'\n                : 'Update the applied filters.'\n            }\n            canAdd={canWrite}\n            path={`${pathname}/add`}\n          />\n        </FlexMain>\n      )}\n      {isSuccess && !(isLoading || deleteLoading) && (\n        <FlexMain>\n          <Gallery\n            hasGutter\n            minWidths={{\n              sm: '307px',\n              md: '307px',\n              lg: '307px',\n              xl: '307px',\n              '2xl': '307px',\n            }}\n          >\n            {options.isSuccess &&\n              data.map((datum) => (\n                <PlanCard\n                  key={datum.id}\n                  isSuccess={options.isSuccess}\n                  selected={selected}\n                  plan={datum}\n                  handleSelect={handleSelect}\n                  canWrite={canWrite}\n                  options={options}\n                />\n              ))}\n          </Gallery>\n        </FlexMain>\n      )}\n      {data.length > 0 && !(isLoading || deleteLoading) && (\n        <Footer>\n          <Pagination\n            count={meta?.total_count}\n            params={{\n              limit: queryParams.limit,\n              offset: queryParams.offset,\n            }}\n            setPagination={setFromPagination}\n            variant={PaginationVariant.bottom}\n          />\n        </Footer>\n      )}\n      {deletionError && (\n        <AlertModal\n          aria-label={'Deletion error'}\n          isOpen={deletionError}\n          onClose={clearDeletionError}\n          title={'Error'}\n          variant=\"error\"\n        >\n          {'Failed to delete one or more plans.'}\n          <ErrorDetail error={deletionError.detail} />\n        </AlertModal>\n      )}\n    </PageContainer>\n  );\n};\n\nexport default List;\n","import { useState } from 'react';\n\n/**\n * useSelected hook provides a way to read and update a selected list\n * Param: array of list items\n * Returns: {\n *  selected: array of selected list items\n *  isAllSelected: boolean that indicates if all items are selected\n *  handleSelect: function that adds and removes items from selected list\n *  setSelected: setter function\n * }\n */\n\nexport default function useSelected(list = []) {\n  const [selected, setSelected] = useState([]);\n  const isAllSelected = selected.length > 0 && selected.length === list.length;\n\n  const handleSelect = (row) => {\n    if (selected.some((s) => s.id === row.id)) {\n      setSelected((prevState) => [...prevState.filter((i) => i.id !== row.id)]);\n    } else {\n      setSelected((prevState) => [...prevState, row]);\n    }\n  };\n  return { selected, isAllSelected, handleSelect, setSelected };\n}\n","export const actions = {\n  SET_NAME: 'SET_NAME',\n  SET_CATEGORY: 'SET_CATEGORY',\n  SET_DESCRIPTION: 'SET_DESCRIPTION',\n  SET_MANUAL_TIME: 'SET_MANUAL_TIME',\n  SET_HOSTS: 'SET_HOSTS',\n  SET_FREQUENCY_PERIOD: 'SET_FREQUENCY_PERIOD',\n  SET_TASKS: 'SET_TASKS',\n  SET_TEMPLATE_ID: 'SET_TEMPLATE_ID',\n};\n","import { useReducer } from 'react';\n\nimport { actions } from './constants';\n\nconst formatPayload = (data) => {\n  data.tasks = data.tasks.map((task, index) => ({\n    task,\n    task_order: index + 1,\n  }));\n\n  if (!data.hosts || data.hosts === '') {\n    data.hosts = 1;\n  }\n\n  // these two are fields the api expects but we don't\n  // have form elements for in the MVP.\n  data.hourly_rate = 50;\n  data.frequency_per_period = 1;\n\n  return data;\n};\n\nconst convertTasks = (tasks = []) => {\n  if (tasks?.length) {\n    return tasks\n      .sort((a, b) => a.task_order - b.task_order)\n      .map(({ task }) => task);\n  }\n  return undefined;\n};\n\nconst usePlanData = (initial) => {\n  const formReducer = (state, { type, value }) => {\n    switch (type) {\n      /* v1 api reducers */\n      case actions.SET_NAME:\n        return {\n          ...state,\n          name: value,\n        };\n      case actions.SET_CATEGORY:\n        return {\n          ...state,\n          category: value,\n        };\n      case actions.SET_DESCRIPTION:\n        return {\n          ...state,\n          description: value,\n        };\n      case actions.SET_MANUAL_TIME:\n        return {\n          ...state,\n          manual_time: value,\n        };\n\n      case actions.SET_HOSTS:\n        return {\n          ...state,\n          hosts: value,\n        };\n      case actions.SET_FREQUENCY_PERIOD:\n        return {\n          ...state,\n          frequency_period: value,\n        };\n      case actions.SET_TASKS:\n        return {\n          ...state,\n          tasks: value,\n        };\n      case actions.SET_TEMPLATE_ID:\n        return {\n          ...state,\n          template_id: value,\n        };\n      default:\n        throw new Error(\n          `usePlanData reducer action type ${type} was not found.`\n        );\n    }\n  };\n\n  const [formData, dispatch] = useReducer(formReducer, {\n    name: initial?.name || '',\n    category: initial?.category || 'system',\n    description: initial?.description || '',\n    manual_time: initial?.manual_time || 240,\n    hosts: initial?.hosts || 1,\n    frequency_period: initial?.frequency_period || 'weekly',\n    tasks: convertTasks(initial?.tasks) || [],\n    template_id: initial?.template_id || -2,\n  });\n\n  return {\n    formData,\n    requestPayload: formatPayload({ ...formData }),\n    dispatch,\n  };\n};\n\nexport default usePlanData;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Form,\n  FormGroup,\n  Grid,\n  Select,\n  SelectOption,\n  TextInput,\n} from '@patternfly/react-core';\n\nimport { actions } from '../../../constants';\n\nconst Details = ({ options, formData, dispatch }) => {\n  const { name, category, description, manual_time, hosts, frequency_period } =\n    formData;\n\n  const [categoryIsOpen, setCategoryIsOpen] = useState(false);\n  const [manualTimeIsOpen, setManualTimeIsOpen] = useState(false);\n  const [frequencyPeriodIsOpen, setFrequencyPeriodIsOpen] = useState(false);\n\n  return (\n    <Form>\n      {options?.data && (\n        <Grid hasGutter md={6}>\n          <FormGroup\n            label=\"What do you want to automate?\"\n            isRequired\n            fieldId=\"name-field\"\n          >\n            <TextInput\n              isRequired\n              placeholder=\"Example: Provision NGINX server\"\n              type=\"text\"\n              id=\"name-field\"\n              name=\"name\"\n              value={name}\n              onChange={(newName) =>\n                dispatch({\n                  type: actions.SET_NAME,\n                  value: newName,\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup label=\"What type of task is it?\" fieldId=\"category-field\">\n            <Select\n              id=\"category-field\"\n              isOpen={categoryIsOpen}\n              variant={'single'}\n              aria-label={'Plan category selector'}\n              maxHeight={390}\n              onToggle={() => setCategoryIsOpen(!categoryIsOpen)}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_CATEGORY,\n                  value: selection,\n                });\n                setCategoryIsOpen(false);\n              }}\n              selections={category}\n            >\n              {(options.data?.category || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n          <FormGroup\n            label=\"Enter a description of your automation plan\"\n            fieldId=\"description-field\"\n          >\n            <TextInput\n              type=\"text\"\n              placeholder=\"Place description here\"\n              id=\"description-field\"\n              name=\"description\"\n              value={description}\n              onChange={(newDescription) =>\n                dispatch({\n                  type: actions.SET_DESCRIPTION,\n                  value: newDescription,\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"How long does it take to do this manually?\"\n            fieldId=\"manual-time-field\"\n          >\n            <Select\n              id=\"manual-time-field\"\n              isOpen={manualTimeIsOpen}\n              variant={'single'}\n              placeholderText=\"Select amount\"\n              aria-label={'Plan time selector'}\n              onToggle={() => setManualTimeIsOpen(!manualTimeIsOpen)}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_MANUAL_TIME,\n                  value: selection,\n                });\n                setManualTimeIsOpen(false);\n              }}\n              selections={manual_time}\n            >\n              {(options.data?.manual_time || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n          <FormGroup\n            label=\"How many hosts do you plan to run this on?\"\n            fieldId=\"hosts-field\"\n          >\n            <TextInput\n              type=\"number\"\n              placeholder=\"Enter number of hosts\"\n              id=\"hosts-field\"\n              name=\"hosts\"\n              value={hosts}\n              onChange={(newHosts) =>\n                dispatch({\n                  type: actions.SET_HOSTS,\n                  value: newHosts,\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"How often do you do this?\"\n            fieldId=\"frequency-period-field\"\n          >\n            <Select\n              id=\"frequency-period-field\"\n              isOpen={frequencyPeriodIsOpen}\n              variant={'single'}\n              placeholderText=\"Select frequency period\"\n              aria-label={'Plan frequency period selector'}\n              onToggle={() => {\n                setFrequencyPeriodIsOpen(!frequencyPeriodIsOpen);\n              }}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_FREQUENCY_PERIOD,\n                  value: selection,\n                });\n                setFrequencyPeriodIsOpen(false);\n              }}\n              selections={frequency_period}\n            >\n              {(options.data?.frequency_period || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n        </Grid>\n      )}\n    </Form>\n  );\n};\n\nDetails.propTypes = {\n  options: PropTypes.object.isRequired,\n  formData: PropTypes.object.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Details;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  DataList,\n  DataListAction,\n  DataListItem,\n  DataListCell,\n  DataListItemRow,\n  DataListControl,\n  DataListDragButton,\n  DataListItemCells,\n  Form,\n  FormGroup,\n  Grid,\n  InputGroup,\n  TextInput,\n  Title,\n} from '@patternfly/react-core';\nimport { PlusIcon, TimesIcon } from '@patternfly/react-icons';\n\nimport { actions } from '../../../constants';\n\nconst TaskSection = styled.div`\n  margin-top: 20px;\n`;\n\nconst TaskTitle = styled(Title)`\n  margin-bottom: 10px;\n`;\n\nconst TaskDeleteButton = styled(Button)`\n  padding: 0 16px;\n`;\n\nconst DeleteTaskActionSection = styled(DataListAction)`\n  padding: 6px 0;\n`;\n\nconst TaskRow = styled(DataListItemRow)`\n  align-items: center;\n`;\n\nconst Tasks = ({ tasks, dispatch }) => {\n  const setTasks = (val) => {\n    dispatch({ type: actions.SET_TASKS, value: val });\n  };\n\n  const [taskToAdd, setTaskToAdd] = useState('');\n\n  const [liveText, setLiveText] = useState('');\n  const [id, setId] = useState('');\n\n  const onDragStart = (newId) => {\n    setId(newId);\n    setLiveText(`Dragging started for task ${newId}.`);\n  };\n\n  const onDragMove = (oldIndex, newIndex) => {\n    setLiveText(\n      `Dragging task ${id}.  Task ${oldIndex} is now task ${newIndex}.`\n    );\n  };\n\n  const onDragCancel = () => {\n    setLiveText('Dragging cancelled. Tasks list order is unchanged.');\n  };\n\n  const onDragFinish = (newItemOrder) => {\n    setLiveText('Dragging finsihed');\n    setTasks([...newItemOrder]);\n  };\n\n  const appendTask = () => {\n    const trimmedTask = taskToAdd.trim();\n    if (trimmedTask !== '') {\n      setTasks([...tasks, trimmedTask]);\n      setTaskToAdd('');\n    }\n  };\n\n  const handleTextKeyDown = (e) => {\n    if (e.key && e.key === 'Enter') {\n      e.preventDefault();\n      appendTask();\n    }\n  };\n\n  const removeTask = (task) => {\n    setTasks(tasks.filter((t) => t !== task));\n  };\n\n  return (\n    <>\n      <Form>\n        <Grid hasGutter md={6}>\n          <FormGroup\n            label=\"What tasks do you need to accomplish this plan?\"\n            fieldId=\"task-field\"\n          >\n            <InputGroup>\n              <TextInput\n                placeholder=\"Enter a description of each task\"\n                type=\"text\"\n                id=\"task-field\"\n                name=\"task\"\n                value={taskToAdd}\n                onChange={(newTaskName) => setTaskToAdd(newTaskName)}\n                onKeyDown={handleTextKeyDown}\n              />\n              <Button\n                onClick={appendTask}\n                isDisabled={taskToAdd.trim() === ''}\n                variant=\"control\"\n                aria-label=\"Add task\"\n              >\n                <PlusIcon />\n              </Button>\n            </InputGroup>\n          </FormGroup>\n        </Grid>\n      </Form>\n      {tasks.length > 0 && (\n        <TaskSection>\n          <TaskTitle headingLevel=\"h4\" size=\"xl\">\n            Tasks\n          </TaskTitle>\n          <DataList\n            aria-label=\"Draggable list to reorder and remove tasks.\"\n            isCompact\n            onDragFinish={onDragFinish}\n            onDragStart={onDragStart}\n            onDragMove={onDragMove}\n            onDragCancel={onDragCancel}\n            itemOrder={tasks}\n          >\n            {tasks.map((task, index) => (\n              <DataListItem\n                aria-labelledby={`cell-${index + 1}`}\n                id={task}\n                key={index + 1}\n              >\n                <TaskRow>\n                  <DataListControl>\n                    <DataListDragButton\n                      aria-label=\"Reorder\"\n                      aria-labelledby={`cell-${index + 1}`}\n                      aria-describedby=\"Press space or enter to begin dragging, and use the arrow keys to navigate up or down. Press enter to confirm the drag, or any other key to cancel the drag operation.\"\n                      aria-pressed=\"false\"\n                    />\n                  </DataListControl>\n                  <DataListItemCells\n                    dataListCells={[\n                      <DataListCell key={index + 1}>\n                        <span id={`cell-${index + 1}`}>{`${\n                          index + 1\n                        }. ${task}`}</span>\n                      </DataListCell>,\n                    ]}\n                  />\n                  <DeleteTaskActionSection aria-label=\"Actions\">\n                    <TaskDeleteButton\n                      onClick={() => removeTask(task)}\n                      variant=\"plain\"\n                      aria-label=\"Delete\"\n                    >\n                      <TimesIcon />\n                    </TaskDeleteButton>\n                  </DeleteTaskActionSection>\n                </TaskRow>\n              </DataListItem>\n            ))}\n          </DataList>\n        </TaskSection>\n      )}\n      <div className=\"pf-screen-reader\" aria-live=\"assertive\">\n        {liveText}\n      </div>\n    </>\n  );\n};\n\nTasks.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Tasks;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { parse, stringify } from 'query-string';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  Form,\n  FormGroup,\n  PaginationVariant,\n} from '@patternfly/react-core';\nimport {\n  TableComposable,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n} from '@patternfly/react-table';\n\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nimport LoadingState from '../../../../../../Components/LoadingState';\nimport EmptyState from '../../../../../../Components/EmptyState';\nimport NoResults from '../../../../../../Components/NoResults';\nimport ApiErrorState from '../../../../../../Components/ApiErrorState';\nimport Pagination from '../../../../../../Components/Pagination';\n\nimport { notAuthorizedParams } from '../../../../../../Utilities/constants';\nimport { useQueryParams } from '../../../../../../Utilities/useQueryParams';\nimport useApi from '../../../../../../Utilities/useApi';\n\nimport {\n  preflightRequest,\n  readJobExplorer,\n  readJobExplorerOptions,\n} from '../../../../../../Api';\n\nimport FilterableToolbar from '../../../../../../Components/Toolbar/';\n\nimport { actions } from '../../../constants';\n\nconst ListFooter = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst initialQueryParams = {\n  group_by: 'template',\n  limit: 10,\n  group_by_time: false,\n  offset: 0,\n};\n\nconst Templates = ({ template_id, dispatch: formDispatch }) => {\n  const { pathname, hash, search } = useLocation();\n  const history = useHistory();\n\n  const [preflightError, setPreFlightError] = useState(null);\n  const [\n    {\n      isLoading,\n      isSuccess,\n      error,\n      data: { meta = {}, items: templates = [] },\n    },\n    setData,\n  ] = useApi({ meta: {}, items: [] });\n  const [options, setOptions] = useApi({});\n\n  const {\n    queryParams,\n    setFromPagination,\n    setFromToolbar,\n    dispatch: queryParamsDispatch,\n  } = useQueryParams(initialQueryParams);\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'job-explorer', secondaryNav: true });\n\n    preflightRequest().catch((error) => {\n      setPreFlightError({ preflightError: error });\n    });\n\n    const initialSearchParams = parse(search, {\n      arrayFormat: 'bracket',\n      parseBooleans: true,\n      parseNumbers: true,\n    });\n\n    queryParamsDispatch({\n      type: 'REINITIALIZE',\n      value: {\n        ...initialQueryParams,\n        ...initialSearchParams,\n      },\n    });\n  }, []);\n\n  useEffect(() => {\n    setData(readJobExplorer({ params: queryParams }));\n    setOptions(readJobExplorerOptions({ params: queryParams }));\n    history.replace({\n      pathname,\n      hash,\n      search: stringify(queryParams, { arrayFormat: 'bracket' }),\n    });\n  }, [queryParams]);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <>\n      {preflightError && <EmptyState {...preflightError} />}\n\n      {!preflightError && (\n        <Form>\n          <FormGroup\n            label=\"Link a template to this plan:\"\n            fieldId=\"template-link-field\"\n          >\n            <FilterableToolbar\n              hideQuickDateRange\n              hideSortOptions\n              categories={options.data}\n              filters={queryParams}\n              setFilters={setFromToolbar}\n              pagination={\n                <Pagination\n                  count={meta?.count}\n                  params={{\n                    limit: queryParams.limit,\n                    offset: queryParams.offset,\n                  }}\n                  setPagination={setFromPagination}\n                  isCompact\n                />\n              }\n            />\n            {error && <ApiErrorState message={error.error} />}\n            {isLoading && <LoadingState />}\n            {isSuccess && templates.length <= 0 && <NoResults />}\n            {isSuccess && templates.length > 0 && (\n              <TableComposable\n                aria-label=\"Template link table\"\n                variant=\"compact\"\n              >\n                <Thead>\n                  <Tr>\n                    <Th />\n                    <Th key=\"template-name-column-header\">Name</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {templates.map(({ id, name }) => (\n                    <Tr key={`template-detail-${id}`}>\n                      <Td\n                        key={`template-detail-${id}-radio-td`}\n                        select={{\n                          rowIndex: id,\n                          onSelect: (event, isSelected, value) =>\n                            formDispatch({\n                              type: actions.SET_TEMPLATE_ID,\n                              value,\n                            }),\n                          isSelected: template_id === id,\n                          variant: 'radio',\n                        }}\n                      />\n                      <Td>{name}</Td>\n                    </Tr>\n                  ))}\n                </Tbody>\n              </TableComposable>\n            )}\n            <ListFooter>\n              <div>\n                {template_id !== -2 && (\n                  <Button\n                    key=\"clear-selection-button\"\n                    variant=\"link\"\n                    aria-label=\"Clear selection\"\n                    onClick={() => {\n                      formDispatch({\n                        type: actions.SET_TEMPLATE_ID,\n                        value: -2,\n                      });\n                    }}\n                  >\n                    Clear selection\n                  </Button>\n                )}\n              </div>\n              <Pagination\n                count={meta?.count}\n                params={{\n                  limit: queryParams.limit,\n                  offset: queryParams.offset,\n                }}\n                setPagination={setFromPagination}\n                variant={PaginationVariant.bottom}\n              />\n            </ListFooter>\n          </FormGroup>\n        </Form>\n      )}\n    </>\n  );\n};\n\nTemplates.propTypes = {\n  template_id: PropTypes.number.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Templates;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory, useLocation, Redirect } from 'react-router-dom';\n\nimport {\n  Button,\n  Tooltip,\n  Wizard,\n  WizardFooter,\n  WizardContextConsumer,\n} from '@patternfly/react-core';\n\nimport { Paths } from '../../../../paths';\n\nimport useApi from '../../../../Utilities/useApi';\nimport usePlanData from '../usePlanData';\n\nimport { createPlan, updatePlan } from '../../../../Api';\n\nimport AlertModal from '../../../../Components/AlertModal/AlertModal';\nimport ErrorDetail from '../../../../Components/ErrorDetail/ErrorDetail';\n\nimport Details from './Steps/Details';\nimport Tasks from './Steps/Tasks';\nimport Templates from './Steps/Templates';\n\nconst Form = ({ title, options, data = {} }) => {\n  const history = useHistory();\n  const { hash, pathname } = useLocation();\n\n  const [startStep, setStartStep] = useState(null);\n\n  const [\n    { isSuccess, data: apiResponse, error },\n    setData,\n    // eslint-disable-next-line no-unused-vars\n    _throwThisAway,\n    reset,\n  ] = useApi(null);\n  const { formData, requestPayload, dispatch } = usePlanData(data);\n\n  const steps = [\n    {\n      step_number: 1,\n      id: 'details',\n      name: 'Details',\n      component: (\n        <Details options={options} formData={formData} dispatch={dispatch} />\n      ),\n    },\n    {\n      step_number: 2,\n      id: 'tasks',\n      name: 'Tasks',\n      component: <Tasks tasks={formData.tasks} dispatch={dispatch} />,\n    },\n    {\n      step_number: 3,\n      id: 'link_template',\n      name: 'Link template',\n      component: (\n        <Templates template_id={formData.template_id} dispatch={dispatch} />\n      ),\n      nextButtonText: 'Save',\n    },\n  ];\n\n  const CustomFooter = (\n    <WizardFooter>\n      <WizardContextConsumer>\n        {({ activeStep, onNext, onBack, onClose }) => {\n          if (activeStep.step_number !== 3) {\n            return (\n              <>\n                <Button variant=\"primary\" type=\"submit\" onClick={onNext}>\n                  Next\n                </Button>\n                {activeStep.step_number !== 1 && (\n                  <Button variant=\"secondary\" onClick={onBack}>\n                    Back\n                  </Button>\n                )}\n                <Button variant=\"link\" onClick={onClose}>\n                  Cancel\n                </Button>\n              </>\n            );\n          }\n          // Final step buttons\n          return (\n            <>\n              <Tooltip\n                content={\n                  !formData.name || !formData.name === ''\n                    ? 'In order to save this plan, you must enter a name in the details step'\n                    : 'Save this plan'\n                }\n                position=\"top\"\n              >\n                <div>\n                  <Button\n                    variant=\"primary\"\n                    type=\"submit\"\n                    onClick={onSave}\n                    isDisabled={!formData.name || !formData.name === ''}\n                  >\n                    Save\n                  </Button>\n                </div>\n              </Tooltip>\n              <Button variant=\"secondary\" onClick={onBack}>\n                Back\n              </Button>\n              <Button variant=\"link\" onClick={onClose}>\n                Cancel\n              </Button>\n            </>\n          );\n        }}\n      </WizardContextConsumer>\n    </WizardFooter>\n  );\n\n  useEffect(() => {\n    if (pathname.indexOf('/add') === -1 && hash) {\n      setStartStep(steps.find((step) => `#${step.id}` === hash).step_number);\n    } else {\n      history.replace({\n        hash: 'details',\n      });\n      setStartStep(1);\n    }\n  }, []);\n\n  const onStepChange = (newStep) => {\n    history.replace({\n      hash: newStep.id,\n    });\n  };\n\n  const onSave = () => {\n    data?.id\n      ? setData(\n          updatePlan({\n            id: data?.id,\n            params: requestPayload,\n          })\n        )\n      : setData(\n          createPlan({\n            params: requestPayload,\n          })\n        );\n  };\n\n  const onClose = () => {\n    if (location.pathname.indexOf('/edit') !== -1) {\n      history.push({\n        pathname: `${Paths.savingsPlanner}/${data?.id}`,\n      });\n    } else {\n      history.push({\n        pathname: Paths.savingsPlanner,\n      });\n    }\n  };\n\n  return (\n    <>\n      {isSuccess && (\n        <Redirect\n          to={{\n            pathname: `${Paths.savingsPlanner}/${\n              apiResponse.id || apiResponse.plan_created.id\n            }`,\n            state: { reload: true },\n          }}\n        />\n      )}\n      {startStep && (\n        <Wizard\n          navAriaLabel={`${title} steps`}\n          mainAriaLabel={`${title} content`}\n          steps={steps}\n          onGoToStep={onStepChange}\n          onNext={onStepChange}\n          onBack={onStepChange}\n          onSave={onSave}\n          onClose={onClose}\n          footer={CustomFooter}\n          startAtStep={startStep}\n          height=\"calc(100vh - 240px)\"\n        />\n      )}\n      {error && (\n        <AlertModal\n          isOpen={!!error}\n          onClose={() => reset()}\n          title={'Error'}\n          variant=\"error\"\n        >\n          {'There was an error saving the plan.'}\n          <ErrorDetail error={error.detail} />\n        </AlertModal>\n      )}\n    </>\n  );\n};\n\nForm.propTypes = {\n  title: PropTypes.string.isRequired,\n  options: PropTypes.object.isRequired,\n  data: PropTypes.object,\n};\n\nForm.defaultProps = {\n  data: {},\n};\n\nexport default Form;\n","export const jobExplorer = {\n  attributes: [\n    'id',\n    'status',\n    'job_type',\n    'started',\n    'finished',\n    'elapsed',\n    'created',\n    'cluster_name',\n    'org_name',\n    'most_failed_tasks',\n  ],\n  defaultParams: {\n    status: ['successful', 'failed'],\n    quick_date_range: 'last_30_days',\n    job_type: ['workflowjob', 'job'],\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    sort_options: 'created',\n    sort_order: 'desc',\n    only_root_workflows_and_standalone_jobs: false,\n    limit: 5,\n    offset: 0,\n  },\n};\n\nexport const roi = {\n  defaultParams: {\n    status: ['successful'],\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    quick_date_range: 'roi_last_year',\n    job_type: ['job'],\n    sort_options: 'template_productivity_score',\n    sort_order: 'desc',\n    start_date: null,\n    end_date: null,\n    limit: 25,\n    only_root_workflows_and_standalone_jobs: true,\n    attributes: [\n      'successful_hosts_total',\n      'successful_elapsed_total',\n      'total_org_count',\n      'total_cluster_count',\n    ],\n    group_by: 'template',\n    group_by_time: false,\n  },\n};\n\nexport const organizationStatistics = {\n  defaultParams: {\n    status: [],\n    org_id: [],\n    quick_date_range: 'last_30_days',\n    limit: 5,\n    offset: 0,\n    job_type: ['workflowjob', 'job'],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    start_date: null,\n    end_date: null,\n  },\n};\n\nexport const clusters = {\n  defaultParams: {\n    status: ['successful', 'failed'],\n    quick_date_range: 'last_30_days',\n    job_type: ['workflowjob', 'job'],\n    group_by_time: true,\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    only_root_workflows_and_standalone_jobs: false,\n  },\n};\n\nexport const savingsPlanner = {\n  defaultParams: {\n    template_id: [],\n    inventory_id: [],\n    automation_status: [],\n    category: [],\n    frequency_period: [],\n    name: '',\n    limit: 10,\n    offset: 0,\n    sort_options: 'modified',\n    sort_order: 'desc',\n  },\n};\n\nexport const notAuthorizedParams = {\n  title: 'RBAC Access Denied',\n  description:\n    'User does not have privileges to perform this action. Contact your organization adminstrator(s) for more information.',\n};\n","export async function getRelatedResourceDeleteCounts(requests) {\n  const results = {};\n  let error = null;\n  let hasCount = false;\n\n  try {\n    await Promise.all(\n      requests.map(async ({ request, label }) => {\n        const {\n          items: { count },\n        } = await request();\n        if (count > 0) {\n          results[label] = count;\n          hasCount = true;\n        }\n      })\n    );\n  } catch (err) {\n    error = err;\n  }\n\n  return {\n    results: hasCount && results,\n    error,\n  };\n}\n\nexport const relatedResourceDeleteRequests = {\n  savingsPlan: (selected, readRecordApi) => [\n    {\n      request: async () =>\n        readRecordApi({\n          params: { id: [selected.id] },\n        }),\n      label: 'Plan',\n    },\n  ],\n};\n","import moment from 'moment';\n\n/*\n * isNumeric - return true if input is a real number\n */\nexport function isNumeric(val) {\n  if (val === 0 || val === '0') {\n    return true;\n  }\n\n  if (parseInt(val)) {\n    return true;\n  }\n\n  if (parseFloat(val)) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function trimStr(str) {\n  return str.toString().replace(/['\"]+/g, '');\n}\n\nexport function formatDateTime(dateTime) {\n  return moment(new Date(dateTime).toISOString()).format('M/D/YYYY h:mm:ssa');\n}\n\nexport function formatDate(date) {\n  return moment(date).format('YYYY-MM-DD');\n}\n\nexport function formatSeconds(seconds) {\n  return moment().startOf('day').seconds(seconds).format('H:mm:ss');\n}\n\nexport function getTotal(data) {\n  if (!data) {\n    return;\n  } else {\n    let total = 0;\n    data.forEach((datum) => {\n      total += parseInt(datum.count);\n    });\n    return total;\n  }\n}\n\nexport function formatPercentage(val) {\n  if (isNaN(val)) {\n    return;\n  }\n\n  return `${val}%`;\n}\n\nexport const capitalize = (s) => {\n  if (typeof s !== 'string') {\n    return '';\n  }\n\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport function calculateDelta(a, b) {\n  if (!isNumeric(a) || !isNumeric(b)) {\n    return 0;\n  }\n\n  // never return less than zero ...\n  if (b - a < 0) {\n    return 0;\n  }\n\n  return b - a;\n}\n\nexport function convertMinsToMs(mins) {\n  if (!parseInt(mins)) {\n    return 0;\n  }\n\n  return mins * 60000;\n}\n\nexport function convertMsToMins(ms) {\n  if (!parseInt(ms)) {\n    return 0;\n  }\n\n  return ms / 60000;\n}\n\nexport function convertSecondsToMins(seconds) {\n  if (!parseInt(seconds)) {\n    return 0;\n  }\n\n  return seconds / 60;\n}\n\nexport function convertMinsToSeconds(mins) {\n  if (!parseInt(mins) || parseInt(mins) < 0) {\n    return 0;\n  }\n\n  return +parseInt(mins) * 60;\n}\n\nexport function convertSecondsToHours(seconds) {\n  if (!parseInt(seconds)) {\n    return 0;\n  }\n\n  return seconds / 3600;\n}\n\nexport function convertWithCommas(arr, key) {\n  const split = arr.reduce((strs, datum) => {\n    strs.push(datum[key]);\n    return strs;\n  }, []);\n  return split.join(', ');\n}\n\nexport function formatJobType(type) {\n  return type === 'job' ? 'Playbook run' : 'Workflow job';\n}\n\nexport function formatJobStatus(status) {\n  return status === 'successful' ? 'Success' : 'Failed';\n}\n\nexport function formatJobDetailsURL(baseURL, jobId) {\n  const subDirectory1 = 'job';\n  const subDirectory2 = 'details';\n  return `${baseURL}/#/${subDirectory1}/${jobId}/${subDirectory2}/`;\n}\n","import { useState, useEffect, useReducer } from 'react';\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return {\n        ...state,\n        isLoading: true,\n        isSuccess: false,\n        error: null,\n      };\n    case 'RESET':\n      return {\n        ...state,\n        isLoading: true,\n        isSuccess: false,\n        error: null,\n        data: action.payload,\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isSuccess: true,\n        error: null,\n        data: action.payload,\n      };\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        isSuccess: false,\n        error: action.payload,\n      };\n    case 'UPDATE_DATA':\n      return {\n        ...state,\n        data: action.payload,\n      };\n    default:\n      throw new Error();\n  }\n};\n\nconst useApi = (initialData, postprocess = (d) => d) => {\n  const [request, setRequest] = useState(null);\n\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isSuccess: false,\n    error: null,\n    data: initialData,\n  });\n\n  useEffect(() => {\n    // Prevent fetching nothing\n    if (!request) {\n      return;\n    }\n\n    // Initialize\n    let didCancel = false;\n    dispatch({ type: 'FETCH_INIT' });\n\n    // Fetching\n    request\n      .then((data) => {\n        if (!didCancel) {\n          dispatch({\n            type: 'FETCH_SUCCESS',\n            payload: postprocess(data),\n          });\n        }\n      })\n      .catch((e) => {\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_FAILURE', payload: e });\n        }\n      });\n\n    return () => {\n      didCancel = true;\n    };\n  }, [request]);\n\n  const setData = (data) => {\n    dispatch({ type: 'UPDATE_DATA', payload: data });\n  };\n\n  const reset = () => {\n    dispatch({ type: 'RESET', payload: initialData });\n  };\n\n  return [state, setRequest, setData, reset];\n};\n\nexport default useApi;\n","import { useReducer } from 'react';\nimport moment from 'moment';\n\nimport { formatDate } from '../Utilities/helpers';\n\nexport const useQueryParams = (initial) => {\n  const initialWithCalculatedParams = {\n    ...initial,\n    ...(initial.sort_options &&\n      initial.sort_order && {\n        sort_by: `${initial.sort_options}:${initial.sort_order}`,\n      }),\n  };\n\n  const paramsReducer = (state, { type, value }) => {\n    switch (type) {\n      /* v0 api reducers */\n      case 'SET_STARTDATE':\n        return { ...state, startDate: value };\n      case 'SET_ENDDATE':\n        return { ...state, endDate: value };\n      case 'SET_ID':\n        if (!parseInt(value)) {\n          const { id: ignored, ...rest } = state;\n          return rest;\n        }\n\n        return { ...state, id: parseInt(value) };\n      case 'SET_SEVERITY':\n        if (value.severity === '') {\n          const { severity: ignored, ...rest } = state;\n          return rest;\n        }\n\n        return { ...state, ...value };\n\n      /* v1 api reducers */\n      case 'SET_LIMIT':\n        return isNaN(value)\n          ? { ...state, limit: 5 } // Defaults back to 5\n          : { ...state, limit: parseInt(value) };\n      case 'SET_OFFSET':\n        return isNaN(value)\n          ? { ...state, offset: 0 } // Defaults back to 0\n          : { ...state, offset: parseInt(value) };\n      case 'SET_ATTRIBUTES':\n      case 'SET_JOB_TYPE':\n      case 'SET_STATUS':\n      case 'SET_ORG':\n      case 'SET_CLUSTER':\n      case 'SET_TEMPLATE':\n      case 'SET_AUTOMATION_STATUS':\n      case 'SET_CATEGORY':\n      case 'SET_FREQUENCY':\n      case 'SET_NAME':\n      case 'SET_ROOT_WORKFLOWS_AND_JOBS':\n      case 'SET_INVENTORY':\n        return { ...state, ...value };\n      case 'SET_QUICK_DATE_RANGE': {\n        let newState = { ...state };\n        if (value !== 'custom') {\n          newState = { ...newState, start_date: null, end_date: null };\n        }\n\n        newState = { ...newState, ...value };\n        return newState;\n      }\n\n      case 'SET_START_DATE':\n      case 'SET_END_DATE': {\n        let newValues = {};\n        Object.entries(value).forEach(([key, value]) => {\n          newValues[key] = formatDate(value);\n        });\n        return { ...state, ...newValues };\n      }\n\n      case 'SET_SORT_OPTIONS': {\n        return {\n          ...state,\n          sort_options: value.sort_options,\n          ...(state.sort_order && {\n            sort_by: `${value.sort_options}:${state.sort_order}`,\n          }), // Update sort by\n        };\n      }\n\n      case 'SET_SORT_ORDER': {\n        return {\n          ...state,\n          sort_order: value.sort_order,\n          ...(state.sort_options && {\n            sort_by: `${state.sort_options}:${value.sort_order}`,\n          }), // Update sort by\n        };\n      }\n\n      case 'REINITIALIZE':\n        return { ...value };\n      case 'RESET_FILTER':\n        return { ...initialWithCalculatedParams };\n      default:\n        throw new Error(`The query params reducer action (${type}) not found.`);\n    }\n  };\n\n  const [queryParams, dispatch] = useReducer(paramsReducer, {\n    ...initialWithCalculatedParams,\n  });\n\n  const actionMapper = {\n    status: 'SET_STATUS',\n    quick_date_range: 'SET_QUICK_DATE_RANGE',\n    job_type: 'SET_JOB_TYPE',\n    org_id: 'SET_ORG',\n    cluster_id: 'SET_CLUSTER',\n    template_id: 'SET_TEMPLATE',\n    sort_order: 'SET_SORT_ORDER',\n    sort_options: `SET_SORT_OPTIONS`,\n    start_date: 'SET_START_DATE',\n    end_date: 'SET_END_DATE',\n    automation_status: 'SET_AUTOMATION_STATUS',\n    category: 'SET_CATEGORY',\n    frequency_period: 'SET_FREQUENCY',\n    name: 'SET_NAME',\n    only_root_workflows_and_standalone_jobs: 'SET_ROOT_WORKFLOWS_AND_JOBS',\n    inventory_id: 'SET_INVENTORY',\n  };\n\n  return {\n    queryParams,\n    dispatch,\n    setFromToolbar: (varName, value = null) => {\n      if (!varName) {\n        dispatch({ type: 'RESET_FILTER' });\n      } else {\n        dispatch({ type: actionMapper[varName], value: { [varName]: value } });\n      }\n    },\n    setFromPagination: (offset, limit = null) => {\n      dispatch({ type: 'SET_OFFSET', value: offset });\n      if (limit) {\n        dispatch({ type: 'SET_LIMIT', value: limit });\n      }\n    },\n    /* v0 api usage after this line */\n    setSeverity: (severity) =>\n      dispatch({ type: 'SET_SEVERITY', value: { severity } }),\n    setEndDate: () => {\n      const endDate = moment().format('YYYY-MM-DD');\n      dispatch({ type: 'SET_ENDDATE', value: endDate });\n    },\n    setId: (value) => dispatch({ type: 'SET_ID', value }),\n    setStartDate: (days) => {\n      let startDate;\n      if (days === 7) {\n        startDate = moment().subtract(1, 'week').format('YYYY-MM-DD');\n      }\n\n      if (days === 14) {\n        startDate = moment().subtract(2, 'weeks').format('YYYY-MM-DD');\n      }\n\n      if (days === 31) {\n        startDate = moment().subtract(1, 'month').format('YYYY-MM-DD');\n      } else {\n        startDate = moment().subtract(days, 'days').format('YYYY-MM-DD');\n      }\n\n      dispatch({ type: 'SET_STARTDATE', value: startDate });\n    },\n    setStartDateAsString: (value) => dispatch({ type: 'SET_STARTDATE', value }),\n  };\n};\n","import { Paths } from '../paths';\nimport { stringify } from 'query-string';\n\nconst useRedirect = (history, path) => (query) => {\n  const search = stringify(query, { arrayFormat: 'bracket' });\n  history.push({\n    pathname: Paths[path],\n    search,\n  });\n};\n\nexport default useRedirect;\n","import { useEffect, useState, useCallback } from 'react';\nimport useIsMounted from './useIsMounted';\n\n/*\n * The useRequest hook accepts a request function and returns an object with\n * five values:\n *   request: a function to call to invoke the request\n *   result: the value returned from the request function (once invoked)\n *   isLoading: boolean state indicating whether the request is in active/in flight\n *   error: any caught error resulting from the request\n *   setValue: setter to explicitly set the result value\n *\n * The hook also accepts an optional second parameter which is a default\n * value to set as result before the first time the request is made.\n */\nexport default function useRequest(makeRequest, initialValue) {\n  const [result, setResult] = useState(initialValue);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const isMounted = useIsMounted();\n\n  return {\n    result,\n    error,\n    isLoading,\n    request: useCallback(\n      async (...args) => {\n        setIsLoading(true);\n        try {\n          const response = await makeRequest(...args);\n          if (isMounted.current) {\n            setResult(response);\n            setError(null);\n          }\n        } catch (err) {\n          if (isMounted.current) {\n            setError(err);\n            setResult(initialValue);\n          }\n        } finally {\n          if (isMounted.current) {\n            setIsLoading(false);\n          }\n        }\n      },\n      [makeRequest]\n    ),\n    setValue: setResult,\n  };\n}\n\n/*\n * Provides controls for \"dismissing\" an error message\n *\n * Params: an error object\n * Returns: { error, dismissError }\n *   The returned error object is the same object passed in via the paremeter,\n *   until the dismissError function is called, at which point the returned\n *   error will be set to null on the subsequent render.\n */\nexport function useDismissableError(error) {\n  const [showError, setShowError] = useState(false);\n\n  useEffect(() => {\n    if (error) {\n      setShowError(true);\n    }\n  }, [error]);\n\n  return {\n    error: showError ? error : null,\n    dismissError: () => {\n      setShowError(false);\n    },\n  };\n}\n\n/*\n * Hook to assist with deletion of items from a paginated item list. The page\n * url will be navigated back one page on a paginated list if needed to prevent\n * the UI from re-loading an empty set and displaying a \"No items found\"\n * message.\n *\n * Params: a callback function that will be invoked in order to delete items,\n *   and an object with structure { qsConfig, allItemsSelected, fetchItems }\n * Returns: { isLoading, deleteItems, deletionError, clearDeletionError }\n */\nexport function useDeleteItems(\n  makeRequest,\n  { qsConfig = null, fetchItems = null } = {}\n) {\n  const {\n    error: requestError,\n    isLoading,\n    request,\n  } = useRequest(makeRequest, null);\n  const { error, dismissError } = useDismissableError(requestError);\n  const deleteItems = async () => {\n    await request();\n    if (!qsConfig) {\n      return;\n    }\n    fetchItems();\n  };\n\n  return {\n    isLoading,\n    deleteItems,\n    deletionError: error,\n    clearDeletionError: dismissError,\n  };\n}\n","import { useEffect, useRef } from 'react';\n\nexport default function useIsMounted() {\n  const isMounted = useRef(null);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  });\n  return isMounted;\n}\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PFPagination } from '@patternfly/react-core';\nvar perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '15', value: 15 },\n    { title: '20', value: 20 },\n    { title: '25', value: 25 },\n];\n;\nvar Pagination = function (_a) {\n    var _b = _a.count, count = _b === void 0 ? 0 : _b, params = _a.params, setPagination = _a.setPagination, props = __rest(_a, [\"count\", \"params\", \"setPagination\"]);\n    var offset = params.offset, limit = params.limit;\n    var currentPage = Math.floor(offset / limit + 1);\n    var returnOffsetVal = function (page) { return (page - 1) * limit; };\n    return (React.createElement(PFPagination, __assign({ itemCount: count, widgetId: \"aa-pagination\", perPageOptions: perPageOptions, perPage: limit, page: currentPage, onPerPageSelect: function (_event, perPage, page) {\n            setPagination(returnOffsetVal(page), perPage);\n        }, onSetPage: function (_event, page) {\n            setPagination(returnOffsetVal(page));\n        } }, props)));\n};\nPagination.propTypes = {\n    count: PropTypes.number,\n    params: PropTypes.exact({\n        offset: PropTypes.number.isRequired,\n        limit: PropTypes.number.isRequired,\n    }).isRequired,\n    setPagination: PropTypes.func.isRequired,\n};\nexport default Pagination;\n","import Pagination from './Pagination';\nexport default Pagination;\n","var currencyFormatter = function (n) {\n    var formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n    });\n    return formatter.format(n); /* $2,500.00 */\n};\nexport default currencyFormatter;\n"],"sourceRoot":""}