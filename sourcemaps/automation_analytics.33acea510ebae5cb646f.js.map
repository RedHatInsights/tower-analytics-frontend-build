{"version":3,"sources":["webpack:///./src/Charts/BaseChart.js","webpack:///./src/Components/AlertModal/AlertModal.js","webpack:///./src/Components/ApiErrorState.js","webpack:///./src/Components/Breadcrumbs.js","webpack:///./src/Components/Breakdown.js","webpack:///./src/Components/EmptyState.js","webpack:///./src/Components/ErrorDetail/ErrorDetail.js","webpack:///./src/Components/JobStatus.js","webpack:///./src/Components/LoadingState.js","webpack:///./src/Components/NoData.js","webpack:///./src/Components/NoResults.js","webpack:///./src/Components/Toolbar/constants.ts","webpack:///./src/Components/Toolbar/Groups/CategoryDropdown.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/Select.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/helpers.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/Date.tsx","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/Text.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/index.js","webpack:///./src/Components/Toolbar/Groups/FiltersCategoriesGroup.js","webpack:///./src/Components/Toolbar/Groups/QuickDateGroup.js","webpack:///./src/Components/Toolbar/Groups/SortByGroup.js","webpack:///./src/Components/Toolbar/Groups/SettingsPanel.js","webpack:///./src/Components/Toolbar/Toolbar.js","webpack:///./src/Components/Toolbar/index.js","webpack:///./src/Charts/ROITopTemplates.js","webpack:///./src/Containers/AutomationCalculator/helpers.js","webpack:///./src/Containers/AutomationCalculator/TotalSavings.js","webpack:///./src/Containers/AutomationCalculator/CalculationCost.js","webpack:///./src/Containers/AutomationCalculator/AutomationFormula.js","webpack:///./src/Containers/AutomationCalculator/TopTemplates.js","webpack:///./src/Containers/AutomationCalculator/AutomationCalculator.js","webpack:///./src/Utilities/Tooltip.js","webpack:///./src/Charts/BarChart.js","webpack:///./src/Charts/LineChart.js","webpack:///./src/Components/ModulesList.js","webpack:///./src/Components/ModalContents.js","webpack:///./src/Components/TemplatesList.js","webpack:///./src/Containers/Clusters/Clusters.js","webpack:///./src/Components/JobExplorerListRow.js","webpack:///./src/Components/JobExplorerList.js","webpack:///./src/Containers/JobExplorer/JobExplorer.js","webpack:///./src/Components/NotificationsList.js","webpack:///./src/Containers/Notifications/Notifications.js","webpack:///./src/Utilities/Legend.js","webpack:///./src/Charts/GroupedBarChart/GroupedBarChart.js","webpack:///./src/Charts/GroupedBarChart/OrgsTooltip.js","webpack:///./src/Charts/GroupedBarChart/HostsTooltip.js","webpack:///./src/Charts/PieChart.js","webpack:///./src/Containers/OrganizationStatistics/OrganizationStatistics.js","webpack:///./src/Utilities/colors.ts","webpack:///./src/Containers/SavingsPlanner/Add/index.js","webpack:///./src/Components/CardActionsRow.js","webpack:///./src/Components/DeleteButton/DeleteButton.js","webpack:///./src/Components/RoutedTabs.js","webpack:///./src/Containers/SavingsPlanner/Details/DetailsTab/index.js","webpack:///./src/Utilities/hoursFormatter.ts","webpack:///./src/Containers/SavingsPlanner/Details/StatisticsTab/TotalSavings/index.tsx","webpack:///./src/Containers/SavingsPlanner/Details/StatisticsTab/FormulaDescription/index.tsx","webpack:///./src/Containers/SavingsPlanner/Details/StatisticsTab/index.tsx","webpack:///./src/Containers/SavingsPlanner/Edit/index.js","webpack:///./src/Containers/SavingsPlanner/Details/Details.js","webpack:///./src/Components/EmptyList.js","webpack:///./src/Containers/SavingsPlanner/List/ListItem/index.js","webpack:///./src/Components/Toolbar/ToolbarDeleteButton.js","webpack:///./src/Containers/SavingsPlanner/List/List.js","webpack:///./src/Utilities/useSelected.js","webpack:///./src/Containers/SavingsPlanner/Shared/constants.js","webpack:///./src/Containers/SavingsPlanner/Shared/usePlanData.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/Steps/Details/index.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/Steps/Tasks/index.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/Steps/Templates/index.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/index.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Utilities/getRelatedResourceDeleteDetails.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Utilities/qs.js","webpack:///./src/Utilities/useQueryParams.js","webpack:///./src/Utilities/useRedirect.js","webpack:////home/travis/build/RedHatInsights/tower-analytics-frontend/node_modules/moment/locale|sync|/^\\.\\/.*$/","webpack:///./src/Components/Pagination/Pagination.tsx","webpack:///./src/Components/Pagination/index.ts","webpack:///./src/Utilities/currencyFormatter.ts","webpack:///./src/Utilities/useRequest.ts","webpack:///./src/Utilities/useIsMounted.ts"],"names":["initializeChart","Chart","BaseChart","props","id","margin","history","useHistory","getWidth","parseInt","d3","style","left","right","getHeight","top","bottom","propTypes","PropTypes","ExclamationCircleIcon","styled","PFExclamationCircleIcon","TimesCircleIcon","PFTimesCircleIcon","InfoCircleIcon","PFInfoCircleIcon","CheckCircleIcon","PFCheckCircleIcon","ExclamationTriangleIcon","PFExclamationTriangleIcon","Header","AlertModal","isOpen","title","label","variant","children","variantIcons","danger","size","error","info","success","warning","customHeader","Title","headingLevel","Modal","header","aria-label","aria-labelledby","ApiErrorState","message","EmptyState","EmptyStateVariant","EmptyStateIcon","icon","color","globalDangerColor200","EmptyStateBody","Breadcrumbs","items","current","Breadcrumb","map","navigate","basePathNavigate","getBaseName","BreadcrumbItem","key","to","BreadcrumbHeading","BarContainer","Bar","LabelsContainer","Label","Square","str","toUpperCase","slice","toLowerCase","Breakdown","categoryCount","categoryColor","showPercent","totalCount","Object","values","reduce","accumulated","currentVal","sortedCategories","keys","filter","category","sort","a","b","name","barSpacing","remainingSpace","length","idx","backgroundColor","width","Math","round","DefaultEmptyState","preflightError","WrenchIcon","status","href","target","rel","Button","onClick","window","location","reload","Card","PFCard","CardBody","PFCardBody","Expandable","PFExpandable","ErrorDetail","useState","isExpanded","setIsExpanded","Array","isArray","toggleText","onToggle","m","JobStatus","getColor","getIcon","charAt","CubesIcon","SearchIcon","optionsForCategories","type","isSingle","placeholder","hasChips","quick_date_range","start_date","end_date","job_type","org_id","cluster_id","template_id","sort_options","automation_status","frequency_period","inventory_id","CategoryDropdown","selected","setSelected","categories","ToolbarItem","Select","onSelect","_event","selection","selections","placeholderText","SelectOption","value","OptionSpan","renderValues","description","Tooltip","content","item","comparator","val","categoryKey","selectOptions","isVisible","setValue","expanded","setExpanded","options","ToolbarFilter","data-cy","showToolbarItem","chips","forEach","i","undefined","acc","Number","isInteger","cmpItem","push","handleCheckboxChips","categoryName","deleteChip","_","valueToDelete","keyToDelete","find","filteredArr","SelectVariant","includes","hasInlineFilter","onFilter","textInput","maxHeight","isRequired","__assign","assign","t","s","n","arguments","p","prototype","hasOwnProperty","call","apply","this","DateInput","_a","_b","_c","_d","otherProps","DatePicker","onChange","inputProps","isReadOnly","Text","searchVal","setSearchVal","useEffect","InputGroup","TextInput","onKeyDown","e","preventDefault","components","select","date","text","ToolbarInput","SelectedInput","FilterCategoriesGroup","filterCategories","filters","handleSearch","setFilters","currentCategory","setCurrentCategory","ToolbarGroup","el","getDateByDays","days","format","today","toISOString","split","strToDate","nums","Date","QuickDateGroup","endDate","startDate","Split","hasGutter","SplitItem","validators","paddingTop","SortByGroup","sort_order","SettingsPanel","settingsExpanded","setSettingsExpanded","isFlat","CardHeader","CardActions","CardTitle","Switch","labelOff","isChecked","only_root_workflows_and_standalone_jobs","position","FilterableToolbar","qsConfig","pagination","hasSettings","additionalControls","hideQuickDateRange","hideSortOptions","restCategories","obj","params","parseQueryString","search","replaceParams","mergeParams","removeParams","pushHistoryState","pathname","nonNamespacedParams","encodedParams","encodeNonDefaultQueryString","Toolbar","namespace","clearAllFilters","oldParams","oldParamsClone","limit","sort_by","handleRemoveAll","collapseListedFiltersBreakpoint","ToolbarContent","isActive","control","visibility","default","lg","d","savings","manualCost","automationCost","scrollLeftOffset","node","scrollLeft","x","svg","getBoundingClientRect","y","currencyFormatter","delta","automatedCost","toolTipWidth","toolTipBase","chartWidth","flipped","nameWidth","getComputedTextLength","savingsWidth","manualCostWidth","automationCostWidth","widestTextElem","adjustedWidth","maxTextPerc","boxWidth","overage","boundingBox","attr","toolTipPoint","interrupt","transition","delay","draw","append","textWidthThreshold","TopTemplatesSavings","init","bind","resize","state","timeout","clearTimeout","setState","setTimeout","remove","data","ticks","height","rangeRound","padding","range","formatYAxisValue","xAxis","tickValues","yAxis","tickFormat","replace","tickSize","taskNames","tooltip","domain","selectAll","bandwidth","enter","on","darker","handleMouseOver","handleMouseOut","addEventListener","removeEventListener","Component","BorderedCardTitle","TotalSavings","totalSavings","borderTop","paddingBottom","InputAndText","validFloat","floatValue","parseFloat","CalculationCost","costManual","setCostManual","costAutomation","setCostAutomation","InputGroupText","TemplateDetail","TemplateDetailSubTitle","TooltipWrapper","IconGroup","QuestionIconTooltip","details","Popover","bodyContent","k","capitalize","join","TopTemplates","sortBy","setDataRunTime","setEnabled","redirectToJobExplorer","component","convertSecondsToMins","avgRunTime","minutes","convertMinsToSeconds","successful_hosts_total","trimmed","sortAttribute","showSortAttr","enabled","deselectedIds","setDeselectedIds","filterDisabled","updateDeltaCost","convertSecondsToHours","successful_elapsed_total","calculateDelta","getQSConfig","roiConst","AutomationCalculator","toJobExplorer","useRedirect","useQueryParams","queryParams","setFromToolbar","useRequest","useCallback","preflightRequest","preflight","preflightIsLoading","isLoading","setPreflight","request","readROIOptions","optionsError","optionsIsLoading","result","setOptions","readROI","response","apiError","apiIsLoading","api","fetchEndpoint","NotAuthorized","notAuthorizedParams","PageHeader","PageHeaderTitle","Main","Grid","className","GridItem","span","Stack","StackItem","LoadingState","NoData","textAlign","isFilled","sum","curr","overflow","templateId","seconds","updatedData","setUnfilteredData","opts","fail","total","formatTooltipDate","RAN","FAIL","TOTAL","DATE","jobs","jobsWidth","failed","successful","successTextWidth","failTextWidth","circleSuccess","circleFail","failedIcon","successIcon","successText","failText","clickMore","colors","BarChart","formattedData","jobExplorer","Paths","formattedDate","formatDate","initialQueryParams","stringify","arrayFormat","parseTime","formatted","created_date","successful_count","failed_count","concat","barTooltip","layers","order","offset","stack","maxTicks","layer","duration","ease","prevProps","LineChart","updateCluster","path","attrTween","tweenDash","l","getTotalLength","unformattedData","successLine","curve","failLine","defined","isNaN","vertical","handleMouseMove","intersectX","cx","baseVal","DataListCell","PFDataListCell","DataListItem","PFDataListItem","DataCellEnd","ModulesList","modules","DataList","background","border","module","index","host_task_count","trimStr","ActionContainer","formatTopFailedTask","percentage","ceil","total_failed_count","task_name","formatSuccessRate","successCount","formatTotalTime","elapsed","substr","ModalContents","selectedId","handleModal","qp","jobType","readJobExplorer","agreggateTemplateParams","stats","fetchStats","statsApi","relatedTemplateJobsParams","relatedJobs","fetchJobs","jobsApi","attributes","group_by_time","group_by","statsData","isSuccess","cancelled","canceled_count","error_count","new","new_count","pending","pending_count","running","running_count","waiting","waiting_count","global_palette_green_200","global_palette_black_850","global_palette_orange_300","global_palette_red_100","global_palette_cyan_200","global_palette_purple_300","global_palette_blue_300","global_palette_light_green_200","descriptionStats","total_count","formatJobType","most_failed_tasks","cleanup","ModalVariant","onClose","NoResults","DescriptionList","isHorizontal","columnModifier","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","Divider","marginTop","marginBottom","TableComposable","Thead","Tr","heading","Th","Tbody","job","Td","template_name","cluster_name","formatDateTime","finished","TemplatesList","templates","setSelectedId","isModalOpen","setIsModalOpen","displayJobType","initialTopTemplateParams","initialTopWorkflowParams","initialModuleParams","clusters","setPreFlightError","readClustersOptions","optionsQueryParams","fetchOptions","chartData","chartDataError","chartDataIsLoading","chartDataIsSuccess","fetchChartData","readEventExplorer","topModuleParams","modulesError","modulesIsLoading","modulesIsSuccess","fetchModules","topTemplatesParams","templatesError","templatesIsLoading","templatesIsSuccess","fetchTemplates","topWorkflowParams","workflows","workflowsError","workflowsIsLoading","workflowsIsSuccess","fetchWorkflows","initialOptionsParams","initializeWithPreflight","ok","global_palette_green_300","passed","unreachable","global_palette_black_400","changed","global_palette_gold_300","skipped","JobExplorerListRow","ok_host_count","skipped_host_count","changed_host_count","failed_host_count","unreachable_host_count","expandedInfo","created","started","expand","rowIndex","tower_link","org_name","colSpan","ExpandableRowContent","Flex","FlexItem","align","host_count","failed_tasks","showMore","setShowMore","task","passed_host_count","md","module_name","fullWidth","renderMoreButton","renderFailedTaskBar","cols","sortableCols","sortMap","0","1","4","reverseSortMap","JobExplorerList","queryParamsDispatch","sortIdx","setSortIdx","sortDir","setSortDir","onSort","dir","head","direction","columnIndex","JobExplorer","setFromPagination","dispatch","readJobExplorerOptions","meta","dataIsLoading","dataIsSuccess","fetchEndpoints","initialSearchParams","parse","parseBooleans","parseNumbers","insights","chrome","appNavClick","secondaryNav","updateURL","Pagination","count","setPagination","isCompact","PaginationVariant","ExternalLinkAltIcon","PFExternalLinkAltIcon","NotificationDrawerListItem","PFNotificationDrawerListItem","NotificationDrawerList","PFNotificationDrawerList","stringifyDate","day","moment","now","utc","isAfter","diff","isSame","valueOf","AllNotificationTemplate","notifications","notification_id","url","tower_url","NotificationDrawerListItemHeader","NotificationDrawerListItemBody","timestamp","ErrorNotificationTemplate","notification","NoticeNotificationTemplate","WarningNotificationTemplate","NotificationsList","filterBy","PFCardTitle","DropdownGroup","notificationOptions","disabled","formatClusterName","uuid","install_uuid","notificationsData","setNotificationsData","clusterOptions","setClusterOptions","selectedCluster","setSelectedCluster","firstRender","setFirstRender","setIsLoading","setMeta","setId","setSeverity","readNotifications","then","ignore","Promise","all","readClusters","clustersData","FormSelect","FormSelectOption","isDisabled","severity","NotificationDrawer","Container","LegendDetail","Wrapper","Color","SubTitle","Legend","chartName","some","pieces","GroupedBarChart","TooltipClass","legend","colorFunc","selectedIds","setSelectedIds","selectedOrgs","x0","x1","maxTicksOneMonth","maxTicksTwoMonths","dates","yLabel","exit","bars","merge","subEnter","moreDetail","endsWith","defaultProps","OrgsTooltip","orgName","HostsTooltip","perc","percSuccess","drawn","percent","success_rate","maxLength","percentageTotal","percentageSuccess","boundingBOx","showSuccess","boundingHeight","boundingWidth","PieChart","radius","min","filteredData","getTotal","donutTooltip","pie","arc","outerRadius","innerRadius","classed","scaleOrdinal","orgsChartMapper","attrName","pieChartMapper","chartMapper","rest","dateForJobExplorer","readHostExplorer","constants","OrganizationStatistics","activeTabKey","setActiveTabKey","preflightIsSuccess","jobRunsByOrgParams","jobsError","jobsIsLoading","jobsIsSuccess","setJobs","jobsByDateAndOrgParams","orgs","hostAcrossOrgParams","orgsError","orgsIsLoading","orgsIsSuccess","setOrgs","readOrgOptions","optionsIsSuccess","jobEventsByOrgParams","tasks","tasksError","tasksIsLoading","tasksIsSuccess","setTasks","include_others","Tabs","activeKey","tabIndex","Tab","eventKey","readPlanOptions","fetchPlanOptions","canWrite","rbac","perms","write","Redirect","CardActionsWrapper","CardActionsRow","WarningMessage","Alert","DeleteButton","onConfirm","modalTitle","ouiaId","deleteMessage","deleteDetailsRequests","disabledTooltip","setIsOpen","deleteMessageError","setDeleteMessageError","deleteDetails","setDeleteDetails","toggleModal","getRelatedResourceDeleteCounts","results","detail","spinnerAriaValueText","actions","isInline","entries","Badge","RoutedTabs","tabsArray","defaultTabId","useLocation","tab","link","getActiveTabId","match","TabTitleText","role","arrayOf","shape","number","string","oneOfType","PFDivider","DetailsTab","plans","hosts","manual_time","modified","template_details","renderOptionsBasedValue","labelsAndValues","Name","Description","Frequency","Template","showTemplate","deletePlan","deletePlans","deleteError","relatedResourceDeleteRequests","readPlan","Error","isDeleteDisabled","deleteDetailsError","fetchDeleteDetails","useDismissableError","dismissError","List","ListItem","CardFooter","toFixed","toLocaleString","isMoney","isPlain","CostsText","CodeBlock","CodeBlockCode","SavingsText","ButtonVariant","yearLabels","initial","year1","year2","year3","cost","benefit","net","StatisticsTab","setIsMoney","barChartData","charts","kind","parent","domainPadding","themeColor","cursor","stickToAxis","mouseFollow","legendTooltip","legendData","childName","symbol","fill","titleProperyForLegend","customFnc","datum","grid","stroke","axisLabel","barRatio","barWidth","labelName","strokeWidth","functions","fetchFnc","resolve","year","total_costs","projections","monetary_stats","total_benefits","cumulative_net_benefits","total_hours_spent_risk_adjusted","time_stats","total_hours_saved","cumulative_time_net_benefits","response_type","getChartData","ToggleGroup","ToggleGroupItem","buttonId","isSelected","schema","Edit","useParams","Form","locationState","pageTitle","onEdit","indexOf","plansError","plansIsLoading","plansIsSuccess","breadcrumbUrl","breadcrumbsItems","Route","exact","EmptyList","canAdd","AddCircleOIcon","CardLabel","Small","Checkbox","PFCheckbox","CardDetail","template","plan","handleSelect","projectedSavings","isCardKebabOpen","setIsCardKebabOpen","useRouteMatch","kebabDropDownItems","DropdownItem","CardHeaderMain","Link","Dropdown","toggle","KebabToggle","dropdownItems","row","requiredField","username","image","ToolbarDeleteButton","itemsUnableToDelete","itemsToDelete","pluralizedItemName","onDelete","errorMessage","cannotDelete","Boolean","warningMessage","PageContainer","Footer","FlexMain","savingsPlanner","readPlans","itemsError","itemsIsSuccess","itemsIsLoading","combinedOptions","list","isAllSelected","prevState","useSelected","useDeleteItems","deleteLoading","deletionError","deleteItems","clearDeletionError","handleDelete","Gallery","minWidths","sm","xl","convertTasks","task_order","Details","formData","categoryIsOpen","setCategoryIsOpen","manualTimeIsOpen","setManualTimeIsOpen","frequencyPeriodIsOpen","setFrequencyPeriodIsOpen","FormGroup","fieldId","newName","newDescription","NumberInput","inputAriaLabel","widthChars","event","isPositiveNum","onMinus","onPlus","TaskSection","TaskTitle","TaskDeleteButton","DeleteTaskActionSection","DataListAction","TaskRow","DataListItemRow","Tasks","taskToAdd","setTaskToAdd","liveText","setLiveText","appendTask","trimmedTask","trim","newTaskName","onDragFinish","newItemOrder","onDragStart","newId","onDragMove","oldIndex","newIndex","onDragCancel","itemOrder","DataListControl","DataListDragButton","aria-describedby","aria-pressed","DataListItemCells","dataListCells","removeTask","aria-live","ListFooter","Templates","formDispatch","hash","templatesIsError","sortParams","_ev","_idx","data-testid","startStep","setStartStep","requestPayload","updatePlan","createPlan","apiResponse","setData","useReducer","hourly_rate","frequency_per_period","usePlanData","steps","step_number","nextButtonText","CustomFooter","WizardFooter","WizardContextConsumer","activeStep","onNext","onBack","onSave","step","onStepChange","newStep","plan_created","Wizard","navAriaLabel","mainAriaLabel","onGoToStep","footer","startAtStep","defaultParams","roi","organizationStatistics","arrayFields","requests","hasCount","savingsPlan","readRecordApi","isNumeric","test","toString","dateTime","setDate","getDate","setHours","mins","integerFields","dateFields","config","queryString","qs","nsKey","rawValue","namespaceMatches","decodeURIComponent","searchParams","URLSearchParams","v","output","getAll","parseValue","mergeParam","stringToObject","addDefaultsToObject","fieldname","startsWith","encodeQueryString","encodeURIComponent","paramsWithoutDefaults","namespaceParams","namespaced","paramsToRemove","updated","removeParam","oldVal","deleteVal","splice","newParams","merged","newVal","arr","deduped","Set","initialParams","initialWithCalculatedParams","newState","newValues","actionMapper","varName","setEndDate","setStartDate","subtract","setStartDateAsString","query","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","exports","perPageOptions","getOwnPropertySymbols","propertyIsEnumerable","__rest","currentPage","floor","returnOffsetVal","page","itemCount","widgetId","perPage","onPerPageSelect","pageNumber","onSetPage","handleSetPageSize","Intl","NumberFormat","currency","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","next","rejected","done","__generator","body","f","g","sent","trys","ops","verb","Symbol","iterator","op","TypeError","pop","makeRequest","initialValue","variables","setVariables","isMounted","useRef","args","_i","error_1","showError","setShowError","requestError"],"mappings":"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","file":"js/automation_analytics.2e2945026590ffd33d19.js","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nconst initializeChart = (Chart) => {\n  const BaseChart = (props) => {\n    const { id, margin } = props;\n\n    const getWidth = () => {\n      let width;\n      width =\n        parseInt(d3.select('#' + id).style('width')) -\n          margin.left -\n          margin.right || 700;\n      return width;\n    };\n\n    const getHeight = () => {\n      let height;\n      height =\n        parseInt(d3.select('#' + id).style('height')) -\n          margin.top -\n          margin.bottom || 450;\n      return height;\n    };\n\n    let history = useHistory();\n\n    return (\n      <Chart\n        {...props}\n        getWidth={getWidth}\n        getHeight={getHeight}\n        history={history}\n      />\n    );\n  };\n\n  BaseChart.propTypes = {\n    id: PropTypes.string,\n    margin: PropTypes.object,\n  };\n\n  return BaseChart;\n};\n\ninitializeChart.propTypes = {\n  Chart: PropTypes.element,\n};\n\nexport default initializeChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Modal, Title } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon as PFCheckCircleIcon,\n  ExclamationCircleIcon as PFExclamationCircleIcon,\n  ExclamationTriangleIcon as PFExclamationTriangleIcon,\n  InfoCircleIcon as PFInfoCircleIcon,\n  TimesCircleIcon as PFTimesCircleIcon,\n} from '@patternfly/react-icons';\nimport styled from 'styled-components';\n\nconst ExclamationCircleIcon = styled(PFExclamationCircleIcon)`\n  color: var(--pf-global--danger-color--100);\n`;\n\nconst TimesCircleIcon = styled(PFTimesCircleIcon)`\n  color: var(--pf-global--danger-color--100);\n`;\n\nconst InfoCircleIcon = styled(PFInfoCircleIcon)`\n  color: var(--pf-global--info-color--100);\n`;\n\nconst CheckCircleIcon = styled(PFCheckCircleIcon)`\n  color: var(--pf-global--success-color--100);\n`;\n\nconst ExclamationTriangleIcon = styled(PFExclamationTriangleIcon)`\n  color: var(--pf-global--warning-color--100);\n`;\n\nconst Header = styled.div`\n  display: flex;\n  svg {\n    margin-right: 16px;\n  }\n`;\n\nconst AlertModal = ({\n  isOpen,\n  title,\n  label = 'Alert modal',\n  variant = 'warning',\n  children,\n  ...props\n}) => {\n  const variantIcons = {\n    danger: <ExclamationCircleIcon size=\"lg\" />,\n    error: <TimesCircleIcon size=\"lg\" />,\n    info: <InfoCircleIcon size=\"lg\" />,\n    success: <CheckCircleIcon size=\"lg\" />,\n    warning: <ExclamationTriangleIcon size=\"lg\" />,\n  };\n\n  const customHeader = (\n    <Header>\n      {variant ? variantIcons[variant] : null}\n      <Title id=\"alert-modal-header-label\" size=\"2xl\" headingLevel=\"h2\">\n        {title}\n      </Title>\n    </Header>\n  );\n\n  return (\n    <Modal\n      header={customHeader}\n      aria-label={label}\n      aria-labelledby=\"alert-modal-header-label\"\n      isOpen={!!isOpen}\n      variant=\"small\"\n      title={title}\n      {...props}\n    >\n      {children}\n    </Modal>\n  );\n};\n\nAlertModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  variant: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default AlertModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { global_danger_color_200 as globalDangerColor200 } from '@patternfly/react-tokens';\n\nconst ApiErrorState = ({ message }) => (\n  <EmptyState variant={EmptyStateVariant.small}>\n    <EmptyStateIcon\n      icon={ExclamationCircleIcon}\n      color={globalDangerColor200.value}\n    />\n    <Title headingLevel=\"h2\" size=\"lg\">\n      Error\n    </Title>\n    <EmptyStateBody>{message}</EmptyStateBody>\n  </EmptyState>\n);\n\nApiErrorState.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default ApiErrorState;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbHeading,\n} from '@patternfly/react-core';\n\nimport getBaseName from '../Utilities/getBaseName';\n\nconst Breadcrumbs = ({ items = [], current = null }) => {\n  return (\n    <Breadcrumb>\n      {items.map(({ title, navigate }) => {\n        const basePathNavigate = getBaseName() + navigate;\n        return (\n          <BreadcrumbItem key={title} to={basePathNavigate}>\n            {title}\n          </BreadcrumbItem>\n        );\n      })}\n      {current && <BreadcrumbHeading>{current}</BreadcrumbHeading>}\n    </Breadcrumb>\n  );\n};\n\nBreadcrumbs.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      navigate: PropTypes.any,\n      title: PropTypes.node,\n    })\n  ),\n  current: PropTypes.node,\n};\n\nexport default Breadcrumbs;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst BarContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  width: 100%;\n  max-width: 100%;\n  height: 1rem;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst Bar = styled.div`\n  height: 100%;\n`;\n\nconst LabelsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  margin-bottom: 1rem;\n`;\n\nconst Label = styled.div`\n  padding-left: 2rem;\n  display: flex;\n  align-items: center;\n  margin-bottom: 1.5rem;\n`;\n\nconst Square = styled.div`\n  width: 0.75rem;\n  height: 0.75rem;\n  margin-right: 0.5rem;\n`;\n\nconst whiteSpace = 0.15; // Currently in percent of total bar width\n\nfunction title(str) {\n  return str[0].toUpperCase() + str.slice(1).toLowerCase();\n}\n\nconst Breakdown = ({ categoryCount, categoryColor, showPercent = false }) => {\n  const totalCount = Object.values(categoryCount).reduce(\n    (accumulated, currentVal) => accumulated + currentVal\n  );\n\n  const sortedCategories = Object.keys(categoryCount)\n    .filter((category) => categoryCount[category] > 0)\n    .sort((a, b) => {\n      if (categoryCount[a] < categoryCount[b]) {\n        return 1; // Normally should be -1, but we want descending order\n      }\n      if (categoryCount[a] > categoryCount[b]) {\n        return -1;\n      }\n      return 0;\n    })\n    .map((category) => {\n      return {\n        name: category,\n        barSpacing: categoryCount[category] / totalCount,\n        color: categoryColor[category],\n      };\n    });\n\n  const remainingSpace = 1 - ((sortedCategories.length - 1) * whiteSpace) / 100;\n\n  return (\n    <>\n      <BarContainer>\n        {sortedCategories.map(({ barSpacing, color }, idx) => {\n          if (idx < sortedCategories.length - 1) {\n            return (\n              <React.Fragment key={idx}>\n                <Bar\n                  style={{\n                    backgroundColor: color,\n                    width: `${barSpacing * 100 * remainingSpace}%`,\n                  }}\n                />\n                <Bar\n                  style={{\n                    backgroundColor: 'transparent',\n                    width: `${whiteSpace}%`,\n                  }}\n                />\n              </React.Fragment>\n            );\n          } else {\n            return (\n              <React.Fragment key={idx}>\n                <Bar\n                  style={{\n                    backgroundColor: color,\n                    width: `${barSpacing * 100 * remainingSpace}%`,\n                  }}\n                />\n              </React.Fragment>\n            );\n          }\n        })}\n      </BarContainer>\n      <LabelsContainer>\n        {sortedCategories.map(({ name, barSpacing, color }) => (\n          <Label key={`label-${name}`}>\n            <Square style={{ backgroundColor: color }} />\n            {showPercent ? (\n              <p>\n                {title(name)} {Math.round(barSpacing * 100)}%\n              </p>\n            ) : (\n              <p>{title(name)}</p>\n            )}\n          </Label>\n        ))}\n      </LabelsContainer>\n    </>\n  );\n};\n\nBreakdown.propTypes = {\n  categoryColor: PropTypes.object.isRequired,\n  categoryCount: PropTypes.object.isRequired,\n  showPercent: PropTypes.bool,\n};\n\nexport default Breakdown;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { WrenchIcon } from '@patternfly/react-icons';\n\nconst DefaultEmptyState = ({ preflightError: error }) => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={WrenchIcon} />\n    {error.status === 404 && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          No data found\n        </Title>\n        <EmptyStateBody>\n          Please visit{' '}\n          <a\n            href=\"https://docs.ansible.com/ansible-tower/latest/html/administration/usability_data_collection.html#automation-analytics\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            here\n          </a>{' '}\n          to learn how to enable Automation Analytics.\n        </EmptyStateBody>\n      </>\n    )}\n    {error.status === 401 && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          Not authorized\n        </Title>\n        <EmptyStateBody>\n          You do not have the correct permissions to view this page.\n        </EmptyStateBody>\n      </>\n    )}\n    {!error.status && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          Something went wrong, please try reloading the page\n        </Title>\n        <Button variant=\"primary\" onClick={() => window.location.reload()}>\n          Reload\n        </Button>\n      </>\n    )}\n  </EmptyState>\n);\n\nDefaultEmptyState.propTypes = {\n  preflightError: PropTypes.object,\n};\n\nexport default DefaultEmptyState;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Card as PFCard,\n  CardBody as PFCardBody,\n  ExpandableSection as PFExpandable,\n} from '@patternfly/react-core';\n\nconst Card = styled(PFCard)`\n  background-color: var(--pf-global--BackgroundColor--200);\n  overflow-wrap: break-word;\n`;\n\nconst CardBody = styled(PFCardBody)`\n  max-height: 200px;\n  overflow: scroll;\n`;\n\nconst Expandable = styled(PFExpandable)`\n  text-align: left;\n\n  & .pf-c-expandable__toggle {\n    padding-left: 10px;\n    margin-left: 5px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n`;\n\nfunction ErrorDetail({ error }) {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const handleToggle = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  return (\n    <>\n      {Array.isArray(error) && error.length && (\n        <Expandable\n          toggleText={'Details'}\n          onToggle={handleToggle}\n          isExpanded={isExpanded}\n        >\n          <Card>\n            <CardBody>\n              <ul>\n                {error.map((m) =>\n                  typeof m === 'string' ? <li key={m}>{m}</li> : null\n                )}\n              </ul>\n            </CardBody>\n          </Card>\n        </Expandable>\n      )}\n    </>\n  );\n}\n\nErrorDetail.propTypes = {\n  error: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default ErrorDetail;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ClockIcon,\n  SyncAltIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\n\nconst JobStatus = ({ status }) => {\n  const capitalized = (str) => str.charAt(0).toUpperCase() + str.slice(1);\n\n  const getColor = () => {\n    switch (status) {\n      case 'successful':\n        return 'green';\n      case 'failed':\n      case 'error':\n        return 'red';\n      case 'running':\n      case 'pending':\n        return 'blue';\n      case 'canceled':\n        return 'orange';\n      // case new, waiting\n      default:\n        return 'grey';\n    }\n  };\n\n  const getIcon = () => {\n    switch (status) {\n      case 'successful':\n        return <CheckCircleIcon />;\n      case 'failed':\n      case 'error':\n        return <ExclamationCircleIcon />;\n      case 'running':\n        return <SyncAltIcon />;\n      case 'canceled':\n        return <ExclamationTriangleIcon />;\n      // case new, waiting, pending\n      default:\n        return <ClockIcon />;\n    }\n  };\n\n  return (\n    <Label variant=\"outline\" color={getColor()} icon={getIcon()}>\n      {capitalized(status)}\n    </Label>\n  );\n};\n\nJobStatus.propTypes = {\n  status: PropTypes.oneOf([\n    'successful',\n    'failed',\n    'error',\n    'running',\n    'new',\n    'waiting',\n    'pending',\n    'canceled',\n  ]),\n};\n\nexport default JobStatus;\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst DefaultLoadingState = () => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={CubesIcon} />\n    <Title headingLevel=\"h5\" size=\"lg\">\n      Loading...\n    </Title>\n    <EmptyStateBody>Please wait.</EmptyStateBody>\n  </EmptyState>\n);\n\nexport default DefaultLoadingState;\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst NoData = () => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={CubesIcon} />\n    <Title headingLevel=\"h5\" size=\"lg\">\n      No Data\n    </Title>\n  </EmptyState>\n);\n\nexport default NoData;\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst NoResults = () => {\n  return (\n    <EmptyState variant={EmptyStateVariant.full}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title size=\"lg\" headingLevel=\"h4\">\n        No results found\n      </Title>\n      <EmptyStateBody>\n        No results match the filter criteria. Remove all filters or clear all\n        filters to show results.\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n\nexport default NoResults;\n","export var optionsForCategories = {\n    status: {\n        type: 'select',\n        isSingle: false,\n        name: 'Status',\n        placeholder: 'Filter by job status',\n        hasChips: true,\n    },\n    quick_date_range: {\n        type: 'select',\n        isSingle: true,\n        name: 'Date',\n        placeholder: 'Filter by date',\n        hasChips: false,\n    },\n    start_date: {\n        type: 'date',\n        name: 'Start date',\n        hasChips: false,\n    },\n    end_date: {\n        type: 'date',\n        name: 'End date',\n        hasChips: false,\n    },\n    job_type: {\n        type: 'select',\n        isSingle: false,\n        name: 'Job',\n        placeholder: 'Filter by job type',\n        hasChips: true,\n    },\n    org_id: {\n        type: 'select',\n        isSingle: false,\n        name: 'Organization',\n        placeholder: 'Filter by organization',\n        hasChips: true,\n    },\n    cluster_id: {\n        type: 'select',\n        isSingle: false,\n        name: 'Cluster',\n        placeholder: 'Filter by cluster',\n        hasChips: true,\n    },\n    template_id: {\n        type: 'select',\n        isSingle: false,\n        name: 'Template',\n        placeholder: 'Filter by template',\n        hasChips: true,\n    },\n    sort_options: {\n        type: 'select',\n        isSingle: true,\n        name: 'Sort by',\n        placeholder: 'Sort by attribute',\n        hasChips: false,\n    },\n    automation_status: {\n        type: 'select',\n        isSingle: false,\n        name: 'Automation status',\n        placeholder: 'Filter by automation status',\n        hasChips: true,\n    },\n    frequency_period: {\n        type: 'select',\n        isSingle: false,\n        name: 'Frequency',\n        placeholder: 'Filter by frequency',\n        hasChips: true,\n    },\n    category: {\n        type: 'select',\n        isSingle: false,\n        name: 'Category',\n        placeholder: 'Filter by category',\n        hasChips: true,\n    },\n    inventory_id: {\n        type: 'select',\n        isSingle: false,\n        name: 'Inventory',\n        placeholder: 'Filter by inventory',\n        hasChips: true,\n    },\n    name: {\n        type: 'text',\n        name: 'Search by name',\n        hasChips: true,\n    },\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarItem, Select, SelectOption } from '@patternfly/react-core';\n\nconst CategoryDropdown = ({\n  selected,\n  setSelected = () => {},\n  categories = [],\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <ToolbarItem>\n      <Select\n        isOpen={isExpanded}\n        variant={'single'}\n        aria-label={'Categories'}\n        onToggle={() => setIsExpanded(!isExpanded)}\n        onSelect={(_event, selection) => {\n          setSelected(selection);\n          setIsExpanded(false);\n        }}\n        selections={selected}\n        placeholderText={'Filter by'}\n      >\n        {categories.map(({ key, name }) => (\n          <SelectOption key={key} value={key}>\n            {name}\n          </SelectOption>\n        ))}\n      </Select>\n    </ToolbarItem>\n  );\n};\n\nCategoryDropdown.propTypes = {\n  categories: PropTypes.array,\n  selected: PropTypes.string,\n  setSelected: PropTypes.func,\n};\n\nexport default CategoryDropdown;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Tooltip,\n  ToolbarFilter,\n  Select as PFSelect,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\n\nimport { handleCheckboxChips, handleSingleChips } from './helpers';\nimport { optionsForCategories } from '../../constants';\nimport styled from 'styled-components';\n\nconst OptionSpan = styled('span')`\n  display: block;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n  max-width: 300px;\n`;\n\nconst renderValues = (values) =>\n  values &&\n  values.map(({ key, value, description }) => (\n    <SelectOption key={key} value={key} description={description}>\n      <Tooltip content={<div>{value}</div>}>\n        <OptionSpan>{value}</OptionSpan>\n      </Tooltip>\n    </SelectOption>\n  ));\n\nconst Select = ({\n  categoryKey,\n  value,\n  selectOptions,\n  isVisible = true,\n  setValue,\n}) => {\n  const [expanded, setExpanded] = useState(false);\n  const options = optionsForCategories[categoryKey];\n\n  const onDelete = (_, valueToDelete) => {\n    const single = optionsForCategories[categoryKey].isSingle;\n\n    if (single) {\n      setValue(null);\n    } else {\n      const keyToDelete = selectOptions.find(\n        ({ value }) => value === valueToDelete\n      ).key;\n      const filteredArr = value.filter((value) => value !== keyToDelete);\n      setValue(filteredArr);\n    }\n  };\n\n  const onFilter = (_, textInput) => {\n    if (textInput === '') {\n      return renderValues(selectOptions);\n    } else {\n      return renderValues(\n        selectOptions.filter(({ value }) =>\n          value.toLowerCase().includes(textInput.toLowerCase())\n        )\n      );\n    }\n  };\n\n  const handleChips = () => {\n    if (options.isSingle) {\n      return handleSingleChips(value, selectOptions);\n    } else {\n      return handleCheckboxChips(value, selectOptions);\n    }\n  };\n\n  const onSelect = (_, selection) => {\n    if (options.isSingle) {\n      setValue(selection);\n      setExpanded(false);\n    } else {\n      setValue(\n        !value.includes(selection)\n          ? [...value, selection]\n          : value.filter((value) => value !== selection)\n      );\n    }\n  };\n\n  return (\n    <ToolbarFilter\n      data-cy={categoryKey}\n      key={categoryKey}\n      showToolbarItem={isVisible}\n      chips={options.hasChips ? handleChips() : []}\n      categoryName={options.name}\n      deleteChip={options.hasChips ? onDelete : null}\n    >\n      <PFSelect\n        variant={\n          options.isSingle ? SelectVariant.single : SelectVariant.checkbox\n        }\n        aria-label={options.name}\n        onToggle={() => setExpanded(!expanded)}\n        onSelect={onSelect}\n        selections={value}\n        isOpen={expanded}\n        hasInlineFilter\n        placeholderText={options.placeholder}\n        onFilter={onFilter}\n        maxHeight={'1000%'}\n      >\n        {renderValues(selectOptions)}\n      </PFSelect>\n    </ToolbarFilter>\n  );\n};\n\nSelect.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]).isRequired,\n  selectOptions: PropTypes.array,\n  isVisible: PropTypes.bool,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default Select;\n","/**\n * Get comparator values if their key is in the item list\n */\nexport const handleCheckboxChips = (item, comparator) => {\n  if (item && comparator) {\n    return item.reduce((acc, i) => {\n      Number.isInteger(parseInt(i)) ? (i = parseInt(i)) : i;\n\n      comparator.forEach((cmpItem) => {\n        if (cmpItem.key === i) {\n          acc.push(cmpItem.value);\n        }\n      });\n\n      return acc;\n    }, []);\n  }\n\n  return [];\n};\n\n/**\n * Convert a list of objects to a list of the last value if defined\n */\nexport const handleSingleChips = (item, comparator) => {\n  if (item && typeof item === 'string' && comparator) {\n    let val;\n    comparator.forEach((i) => {\n      if (i.key === item) {\n        val = i.value;\n      }\n    });\n\n    if (val !== undefined) {\n      return [val];\n    }\n  }\n\n  return [];\n};\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DatePicker } from '@patternfly/react-core';\nimport { optionsForCategories } from '../../constants';\nvar DateInput = function (_a) {\n    var categoryKey = _a.categoryKey, _b = _a.value, value = _b === void 0 ? '' : _b, _c = _a.setValue, setValue = _c === void 0 ? function () { return ({}); } : _c, _d = _a.otherProps, otherProps = _d === void 0 ? {} : _d;\n    var options = optionsForCategories[categoryKey];\n    return (React.createElement(DatePicker, __assign({ \"aria-label\": options.name, value: value, onChange: setValue, inputProps: {\n            isReadOnly: true,\n        } }, otherProps)));\n};\nDateInput.propTypes = {\n    categoryKey: PropTypes.string.isRequired,\n    value: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    otherProps: PropTypes.any,\n};\nexport default DateInput;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ToolbarFilter,\n  TextInput,\n  InputGroup,\n  Button,\n} from '@patternfly/react-core';\n\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { optionsForCategories } from '../../constants';\n\nconst Text = ({ categoryKey, isVisible = true, value = '', setValue }) => {\n  const [searchVal, setSearchVal] = useState(value);\n  const options = optionsForCategories[categoryKey];\n\n  const onDelete = () => {\n    setValue('');\n  };\n\n  const handleChips = () => {\n    return value ? [value] : [];\n  };\n\n  useEffect(() => {\n    setSearchVal(value);\n  }, [value]);\n\n  return (\n    <ToolbarFilter\n      data-cy={categoryKey}\n      key={categoryKey}\n      showToolbarItem={isVisible}\n      chips={options.hasChips ? handleChips() : []}\n      categoryName={options.name}\n      deleteChip={options.hasChips ? onDelete : null}\n    >\n      <InputGroup>\n        <TextInput\n          type=\"search\"\n          aria-label={options.name}\n          value={searchVal}\n          onChange={setSearchVal}\n          onKeyDown={(e) => {\n            if (e.key && e.key === 'Enter') {\n              e.preventDefault();\n              setValue(searchVal);\n            }\n          }}\n        />\n        <Button\n          variant=\"control\"\n          aria-label={`Search button for ${options.name}`}\n          onClick={() => {\n            setValue(searchVal);\n          }}\n        >\n          <SearchIcon />\n        </Button>\n      </InputGroup>\n    </ToolbarFilter>\n  );\n};\n\nText.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.any,\n  isVisible: PropTypes.bool,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default Text;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Select from './Select';\nimport DateInput from './Date';\nimport Text from './Text';\nimport { optionsForCategories } from '../../constants';\n\nconst components = {\n  select: Select,\n  date: DateInput,\n  text: Text,\n};\n\nconst ToolbarInput = ({\n  categoryKey,\n  value,\n  selectOptions,\n  isVisible = true,\n  setValue,\n  ...otherProps\n}) => {\n  const options = optionsForCategories[categoryKey];\n  const SelectedInput = components[options.type];\n\n  const defaultValue = () => {\n    if (value) {\n      return value;\n    } else if (options.type !== 'select') {\n      return '';\n    } else if (options.isSingle) {\n      return '';\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <SelectedInput\n      categoryKey={categoryKey}\n      value={defaultValue()}\n      selectOptions={selectOptions}\n      isVisible={isVisible}\n      setValue={setValue}\n      otherProps={otherProps}\n    />\n  );\n};\n\nToolbarInput.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  selectOptions: PropTypes.array,\n  isVisible: PropTypes.bool,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default ToolbarInput;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarGroup } from '@patternfly/react-core';\n\nimport CategoryDropdown from './CategoryDropdown';\nimport ToolbarInput from './ToolbarInput/';\nimport { optionsForCategories } from '../constants';\n\nconst FilterCategoriesGroup = ({\n  filterCategories,\n  filters,\n  handleSearch,\n  setFilters,\n}) => {\n  const [currentCategory, setCurrentCategory] = useState(\n    Object.keys(filterCategories)[0]\n  );\n\n  return (\n    <ToolbarGroup variant=\"filter-group\">\n      <CategoryDropdown\n        selected={currentCategory}\n        setSelected={setCurrentCategory}\n        categories={Object.keys(filterCategories).map((el) => ({\n          key: el,\n          name: optionsForCategories[el].name,\n        }))}\n      />\n      {Object.keys(filterCategories).map((key) => (\n        <ToolbarInput\n          key={key}\n          categoryKey={key}\n          value={filters[key]}\n          selectOptions={filterCategories[key]}\n          isVisible={currentCategory === key}\n          setValue={(value) => {\n            setFilters(key, value);\n            handleSearch(key, value);\n          }}\n        />\n      ))}\n    </ToolbarGroup>\n  );\n};\n\nFilterCategoriesGroup.propTypes = {\n  filterCategories: PropTypes.object.isRequired,\n  filters: PropTypes.object.isRequired,\n  handleSearch: PropTypes.func.isRequired,\n  setFilters: PropTypes.func.isRequired,\n};\n\nexport default FilterCategoriesGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SplitItem, ToolbarGroup, Split } from '@patternfly/react-core';\n\nimport ToolbarInput from './ToolbarInput/';\n\nimport { today } from '../../../Utilities/helpers';\n\nconst getDateByDays = (days, format = true) => {\n  const date = today(days);\n  return format ? date.toISOString().split(/T/)[0] : date;\n};\n\nconst strToDate = (date) => {\n  const nums = date.split('-');\n  return new Date(nums[0], nums[1] - 1, nums[2]);\n};\n\nconst QuickDateGroup = ({ filters, handleSearch, setFilters, values }) => {\n  const endDate = filters.end_date || getDateByDays(0, true);\n  const startDate = filters.start_date || getDateByDays(-30, true);\n\n  return (\n    <ToolbarGroup variant=\"filter-group\">\n      <ToolbarInput\n        categoryKey=\"quick_date_range\"\n        value={filters.quick_date_range}\n        selectOptions={values}\n        setValue={(value) => setFilters('quick_date_range', value)}\n      />\n      {filters.quick_date_range && filters.quick_date_range.includes('custom') && (\n        <Split hasGutter>\n          <SplitItem>\n            <ToolbarInput\n              categoryKey=\"start_date\"\n              value={startDate}\n              setValue={(e) => {\n                setFilters('start_date', e);\n                handleSearch('start_date', e);\n              }}\n              validators={[\n                (date) =>\n                  typeof endDate === 'string' && date > strToDate(endDate)\n                    ? 'Must not be after end date'\n                    : '',\n              ]}\n            />\n          </SplitItem>\n          <SplitItem style={{ paddingTop: '6px' }}>to</SplitItem>\n          <SplitItem>\n            <ToolbarInput\n              categoryKey=\"end_date\"\n              value={endDate}\n              setValue={(e) => {\n                setFilters('end_date', e);\n                handleSearch('end_date', e);\n              }}\n              validators={[\n                (date) => {\n                  if (\n                    typeof startDate === 'string' &&\n                    date < strToDate(startDate)\n                  ) {\n                    return 'Must not be before start date';\n                  }\n\n                  if (date > today()) {\n                    return 'Must not be after today';\n                  }\n\n                  return '';\n                },\n              ]}\n            />\n          </SplitItem>\n        </Split>\n      )}\n    </ToolbarGroup>\n  );\n};\n\nQuickDateGroup.propTypes = {\n  filters: PropTypes.object.isRequired,\n  handleSearch: PropTypes.func.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  values: PropTypes.array.isRequired,\n};\n\nexport default QuickDateGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarGroup, Button } from '@patternfly/react-core';\nimport { SortAmountDownIcon, SortAmountUpIcon } from '@patternfly/react-icons';\n\nimport ToolbarInput from './ToolbarInput';\n\nconst SortByGroup = ({ filters, handleSearch, setFilters, sort_options }) => (\n  <ToolbarGroup variant=\"filter-group\">\n    <ToolbarInput\n      categoryKey=\"sort_options\"\n      value={filters.sort_options}\n      selectOptions={sort_options}\n      setValue={(value) => {\n        setFilters('sort_options', value);\n        handleSearch('sort_options', value);\n      }}\n    />\n    <Button\n      variant=\"control\"\n      onClick={() => {\n        setFilters('sort_order', filters.sort_order === 'asc' ? 'desc' : 'asc');\n        handleSearch(\n          'sort_order',\n          filters.sort_order === 'asc' ? 'desc' : 'asc'\n        );\n      }}\n    >\n      {filters.sort_order === 'asc' && <SortAmountUpIcon />}\n      {filters.sort_order === 'desc' && <SortAmountDownIcon />}\n    </Button>\n  </ToolbarGroup>\n);\n\nSortByGroup.propTypes = {\n  filters: PropTypes.object.isRequired,\n  handleSearch: PropTypes.func.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  sort_options: PropTypes.array.isRequired,\n};\n\nexport default SortByGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, Switch } from '@patternfly/react-core';\nimport {\n  Card,\n  CardTitle,\n  CardBody,\n  CardActions,\n  CardHeader,\n} from '@patternfly/react-core';\nimport { QuestionCircleIcon, TimesIcon } from '@patternfly/react-icons';\n\n/* TODO: For future work: make settings more modular for different pages */\nconst SettingsPanel = ({\n  filters,\n  handleSearch,\n  setFilters,\n  settingsExpanded,\n  setSettingsExpanded,\n}) => (\n  <Card isFlat style={{ backgroundColor: '#EEEEEE' }}>\n    <CardHeader>\n      <CardActions>\n        <Button\n          variant=\"plain\"\n          onClick={() => setSettingsExpanded(!settingsExpanded)}\n        >\n          <TimesIcon />\n        </Button>\n      </CardActions>\n      <CardTitle>Settings</CardTitle>\n    </CardHeader>\n    <CardBody>\n      <Switch\n        id=\"showRootWorkflowJobs\"\n        label=\"Ignore nested workflows and jobs\"\n        labelOff=\"Ignore nested workflows and jobs\"\n        isChecked={filters.only_root_workflows_and_standalone_jobs}\n        onChange={(val) => {\n          setFilters('only_root_workflows_and_standalone_jobs', val);\n          handleSearch('only_root_workflows_and_standalone_jobs', val);\n        }}\n      />\n      <Tooltip\n        position={'top'}\n        content={\n          <div>\n            {' '}\n            If enabled, nested workflows and jobs will not be included in the\n            overall totals. Enable this option to filter out duplicate entries.\n          </div>\n        }\n      >\n        <QuestionCircleIcon />\n      </Tooltip>\n    </CardBody>\n  </Card>\n);\n\nSettingsPanel.propTypes = {\n  filters: PropTypes.object.isRequired,\n  handleSearch: PropTypes.func.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  settingsExpanded: PropTypes.bool.isRequired,\n  setSettingsExpanded: PropTypes.func.isRequired,\n};\n\nexport default SettingsPanel;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  Button,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { FilterIcon, CogIcon } from '@patternfly/react-icons';\n\nimport { optionsForCategories } from './constants';\nimport {\n  FilterCategoriesGroup,\n  QuickDateGroup,\n  SortByGroup,\n  SettingsPanel,\n} from './Groups/';\nimport { useHistory } from 'react-router-dom';\nimport {\n  encodeNonDefaultQueryString,\n  parseQueryString,\n  mergeParams,\n  removeParams,\n  replaceParams,\n} from '../../Utilities/qs';\n\nconst FilterableToolbar = ({\n  categories,\n  filters,\n  qsConfig,\n  setFilters,\n  pagination = null,\n  hasSettings = false,\n  additionalControls = [],\n  hideQuickDateRange = false,\n  hideSortOptions = false,\n}) => {\n  const [settingsExpanded, setSettingsExpanded] = useState(false);\n  const { quick_date_range, sort_options, ...restCategories } = categories;\n  const history = useHistory();\n\n  // Filter out elements which are not in the option object.\n  const filterCategories = Object.keys(restCategories)\n    .filter((key) => Object.keys(optionsForCategories).includes(key))\n    .reduce((obj, key) => {\n      obj[key] = restCategories[key];\n      return obj;\n    }, {});\n\n  const handleSearch = (key, value) => {\n    let params = parseQueryString(qsConfig, history.location.search);\n    params = replaceParams(params, { [key]: value });\n    params = mergeParams(params, { [key]: value });\n    if (value === '' || value.length === 0)\n      params = removeParams(qsConfig, params, { [key]: params[key] });\n    pushHistoryState(params, qsConfig);\n  };\n\n  const handleRemoveAll = (qsConfig) => {\n    // remove everything in oldParams except for page_size and order_by\n    const oldParams = parseQueryString(qsConfig, history.location.search);\n    const oldParamsClone = { ...oldParams };\n    delete oldParamsClone.limit;\n    delete oldParamsClone.sort_by;\n    pushHistoryState(\n      removeParams(qsConfig, oldParams, oldParamsClone),\n      qsConfig\n    );\n  };\n\n  const pushHistoryState = (params, qsConfig) => {\n    const { pathname } = history.location;\n    const nonNamespacedParams = parseQueryString({}, history.location.search);\n    const encodedParams = encodeNonDefaultQueryString(\n      qsConfig,\n      params,\n      nonNamespacedParams\n    );\n    history.push(encodedParams ? `${pathname}?${encodedParams}` : pathname);\n  };\n\n  return (\n    <>\n      <Toolbar\n        id={`${qsConfig.namespace}-filterable-toolbar-with-chip-groups`}\n        clearAllFilters={() => {\n          handleRemoveAll(qsConfig);\n          setFilters(null, null);\n        }}\n        collapseListedFiltersBreakpoint=\"xl\"\n      >\n        <ToolbarContent>\n          <Button variant=\"control\">\n            <FilterIcon />\n          </Button>\n          {Object.keys(filterCategories).length > 0 && (\n            <FilterCategoriesGroup\n              filterCategories={filterCategories}\n              filters={filters}\n              setFilters={setFilters}\n              handleSearch={handleSearch}\n            />\n          )}\n          {!hideQuickDateRange && quick_date_range && (\n            <QuickDateGroup\n              filters={filters}\n              setFilters={setFilters}\n              values={quick_date_range}\n              handleSearch={handleSearch}\n            />\n          )}\n          {!hideSortOptions && sort_options && (\n            <SortByGroup\n              filters={filters}\n              setFilters={setFilters}\n              sort_options={sort_options}\n              handleSearch={handleSearch}\n            />\n          )}\n          {hasSettings && (\n            <ToolbarItem>\n              <Button\n                variant=\"plain\"\n                onClick={() => setSettingsExpanded(!settingsExpanded)}\n                aria-label=\"settings\"\n                isActive={settingsExpanded}\n              >\n                <CogIcon />\n              </Button>\n            </ToolbarItem>\n          )}\n          {additionalControls.length > 0 && (\n            <ToolbarGroup>\n              {additionalControls.map((control, idx) => (\n                <ToolbarItem key={idx}>{control}</ToolbarItem>\n              ))}\n            </ToolbarGroup>\n          )}\n          {pagination && (\n            <ToolbarItem\n              variant=\"pagination\"\n              visibility={{ default: 'hidden', lg: 'visible' }}\n            >\n              {pagination}\n            </ToolbarItem>\n          )}\n        </ToolbarContent>\n        {settingsExpanded && (\n          <SettingsPanel\n            filters={filters}\n            setFilters={setFilters}\n            handleSearch={handleSearch}\n            settingsExpanded={settingsExpanded}\n            setSettingsExpanded={setSettingsExpanded}\n          />\n        )}\n      </Toolbar>\n    </>\n  );\n};\n\nFilterableToolbar.propTypes = {\n  categories: PropTypes.object.isRequired,\n  qsConfig: PropTypes.object.isRequired,\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  pagination: PropTypes.object,\n  hasSettings: PropTypes.bool,\n  additionalControls: PropTypes.array,\n  hideSortOptions: PropTypes.bool,\n  hideQuickDateRange: PropTypes.bool,\n};\n\nexport default FilterableToolbar;\n","import Toolbar from './Toolbar';\nexport default Toolbar;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport currencyFormatter from '../Utilities/currencyFormatter';\n\nclass Tooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip-base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, 0) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', 92)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.name = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', -2)\n      .text('Template name');\n    this.savings = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 52)\n      .attr('font-size', 12)\n      .attr('font-weight', 'bold')\n      .attr('fill', 'white')\n      .text('Total savings $0');\n    this.manualCost = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', 16)\n      .text('Manual cost $0');\n    this.automationCost = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', 34)\n      .text('Automation cost $0');\n  }\n\n  handleMouseOver = (d) => {\n    let name;\n    let savings;\n    let manualCost;\n    let automationCost;\n    const scrollLeftOffset = d3.select('#d3-roi-chart-root').node().scrollLeft;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10 +\n      scrollLeftOffset;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      30;\n    if (!d) {\n      return;\n    } else {\n      savings = currencyFormatter(+d.delta);\n      name = d.name;\n      manualCost = currencyFormatter(+d.manualCost);\n      automationCost = currencyFormatter(+d.automatedCost);\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n    this.name.text('' + name);\n    this.savings.text(`Total savings ${savings}`);\n    this.manualCost.text(`Manual Cost ${manualCost}`);\n    this.automationCost.text(`Automation Cost ${automationCost}`);\n    this.nameWidth = this.name.node().getComputedTextLength();\n    this.savingsWidth = this.savings.node().getComputedTextLength();\n    this.manualCostWidth = this.manualCost.node().getComputedTextLength();\n    this.automationCostWidth = this.automationCost\n      .node()\n      .getComputedTextLength();\n    this.widestTextElem = d3.max([\n      this.nameWidth,\n      this.savingsWidth,\n      this.automationCostWidth,\n      this.manualCostWidth,\n    ]);\n\n    const maxTextPerc = (this.widestTextElem / this.boxWidth) * 100;\n    const threshold = 85;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 15) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.name.attr('x', -(toolTipWidth - 7));\n      this.savings.attr('x', -(toolTipWidth - 7));\n      this.manualCost.attr('x', -(toolTipWidth - 7));\n      this.automationCost.attr('x', -(toolTipWidth - 7));\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 15) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.name.attr('x', 20);\n      this.savings.attr('x', 20);\n      this.manualCost.attr('x', 20);\n      this.automationCost.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass TopTemplatesSavings extends Component {\n  constructor(props) {\n    super(props);\n    this.init = this.init.bind(this);\n    this.draw = this.draw.bind(this);\n    this.resize = this.resize.bind(this);\n    this.state = {\n      timeout: null,\n    };\n  }\n\n  // Methods\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  init() {\n    this.draw();\n  }\n\n  draw() {\n    // Use PF chart color\n    const color = '#0066CC'; //blue\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const { data } = this.props;\n    let width;\n    // adjust chart width to support larger datasets\n    if (data.length >= 15) {\n      const containerWidth = d3.select('.automation-wrapper').node();\n      width =\n        containerWidth.getBoundingClientRect().width -\n        this.props.margin.left -\n        this.props.margin.right;\n    } else {\n      width = this.props.getWidth();\n    }\n\n    const height = this.props.getHeight();\n    const x = d3.scaleBand().rangeRound([0, width]).padding(0.45);\n    const y = d3.scaleLinear().range([height, 0]);\n    // format our X Axis ticks\n    let ticks;\n    ticks = data.map((d) => d.name);\n    const formatYAxisValue = d3.format('.2s');\n    const xAxis = d3.axisBottom(x).tickValues(ticks);\n\n    const yAxis = d3\n      .axisLeft(y)\n      .ticks(8)\n      .tickFormat((d) => formatYAxisValue(d).replace('G', 'B'))\n      .tickSize(-width, 0, 0);\n\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n\n    const taskNames = data.map((d) => d.name);\n    const tooltip = new Tooltip({\n      svg: '#' + this.props.id,\n    });\n    x.domain(taskNames);\n    y.domain([0, d3.max(data, (d) => d.delta * 1.15) || 8]);\n\n    // add y axis\n    svg\n      .append('g')\n      .attr('class', 'y axis')\n      .call(yAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7')\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 6)\n      .attr('dy', '.71em')\n      .style('text-anchor', 'end')\n      .style('font-weight', 'bold')\n      .text('Value');\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Savings per template ($)');\n\n    // add x axis\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n      .selectAll('text')\n      .style('text-anchor', 'start')\n      .attr('dx', '0.75em')\n      .attr('dy', -x.bandwidth() / 1.45 - 8)\n      .attr('transform', 'rotate(-90)');\n\n    svg.selectAll('.x-axis line').attr('stroke', 'transparent');\n\n    svg\n      .selectAll('.bar')\n      .data(data)\n      .enter()\n      .append('rect')\n      .attr('x', (d) => x(d.name))\n      .attr('width', x.bandwidth())\n      .attr('y', (d) => y(d.delta))\n      .style('fill', () => color)\n      .attr('height', (d) => height - y(d.delta))\n      .on('mouseover', function (d) {\n        d3.select(this).style('fill', d3.rgb(color).darker(1));\n        tooltip.handleMouseOver(d);\n      })\n      .on('mousemove', tooltip.handleMouseOver)\n      .on('mouseout', function () {\n        d3.select(this).style('fill', color);\n        tooltip.handleMouseOut();\n      });\n  }\n\n  componentDidMount() {\n    this.init();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate() {\n    this.init();\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nTopTemplatesSavings.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n};\n\nexport default initializeChart(TopTemplatesSavings);\n","import styled from 'styled-components';\nimport { CardTitle } from '@patternfly/react-core';\n\nexport const BorderedCardTitle = styled(CardTitle)`\n  border-bottom: 1px solid #d7d7d7;\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle, Title } from '@patternfly/react-core';\nimport currencyFormatter from '../../Utilities/currencyFormatter';\n\nconst TotalSavings = ({ totalSavings = 0 }) => (\n  <Card style={{ borderTop: '3px solid #2B9AF3' }}>\n    <CardTitle style={{ paddingBottom: '0' }}>Total savings</CardTitle>\n    <CardBody>\n      <Title\n        headingLevel=\"h3\"\n        size=\"4xl\"\n        style={{ color: 'var(--pf-global--success-color--200)' }}\n      >\n        {currencyFormatter(totalSavings)}\n      </Title>\n    </CardBody>\n  </Card>\n);\n\nTotalSavings.propTypes = {\n  totalSavings: PropTypes.number,\n};\n\nexport default TotalSavings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Card,\n  CardBody,\n  InputGroup,\n  InputGroupText,\n  TextInput,\n} from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst validFloat = (value) => {\n  const floatValue = parseFloat(value);\n  return floatValue && floatValue >= 0 ? value : '';\n};\n\nconst CalculationCost = ({\n  costManual = '0',\n  setCostManual = () => {},\n  costAutomation = '0',\n  setCostAutomation = () => {},\n}) => (\n  <Card>\n    <CardTitle>Calculate your automation</CardTitle>\n    <CardBody>\n      <InputAndText>\n        <p>Manual cost of automation</p>\n        <em style={{ color: 'var(--pf-global--Color--dark-200)' }}>\n          (e.g. average salary of mid-level Software Engineer)\n        </em>\n        <InputGroup style={{ width: '50%' }}>\n          <InputGroupText>\n            <DollarSignIcon />\n          </InputGroupText>\n          <TextInput\n            id=\"manual-cost\"\n            type=\"number\"\n            aria-label=\"manual-cost\"\n            value={costManual}\n            onChange={(e) => setCostManual(validFloat(e))}\n          />\n          <InputGroupText>/hr</InputGroupText>\n        </InputGroup>\n      </InputAndText>\n      <InputAndText style={{ paddingTop: '10px' }}>\n        <p>Automated process cost</p>\n        <InputGroup style={{ width: '50%' }}>\n          <InputGroupText>\n            <DollarSignIcon />\n          </InputGroupText>\n          <TextInput\n            id=\"automation-cost\"\n            type=\"number\"\n            aria-label=\"automation-cost\"\n            value={costAutomation}\n            onChange={(e) => setCostAutomation(validFloat(e))}\n          />\n          <InputGroupText>/hr</InputGroupText>\n        </InputGroup>\n      </InputAndText>\n    </CardBody>\n  </Card>\n);\n\nCalculationCost.propTypes = {\n  costManual: PropTypes.string,\n  setCostManual: PropTypes.func,\n  costAutomation: PropTypes.string,\n  setCostAutomation: PropTypes.func,\n};\n\nexport default CalculationCost;\n","import React from 'react';\n\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst AutomationFormula = () => (\n  <Card style={{ height: '100%' }}>\n    <CardTitle>Automation formula</CardTitle>\n    <CardBody>\n      <p>\n        <b>Manual cost for template x</b> =\n        <em>\n          (time for a manual run on one host in hours * (sum of all hosts across\n          all job runs) ) * cost per hour\n        </em>\n      </p>\n      <p>\n        <b>Automation cost for template x</b> =\n        <em>\n          cost of automation per hour * sum of total elapsed hours for a\n          template\n        </em>\n      </p>\n      <p>\n        <b>Savings</b> =\n        <em>Sum of (manual cost - automation cost) across all templates</em>\n      </p>\n    </CardBody>\n  </Card>\n);\n\nexport default AutomationFormula;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  InputGroup,\n  InputGroupText,\n  TextInput,\n  Tooltip,\n  Popover,\n} from '@patternfly/react-core';\nimport {\n  InfoCircleIcon,\n  ToggleOnIcon,\n  ToggleOffIcon,\n} from '@patternfly/react-icons';\n\nimport {\n  convertSecondsToMins,\n  convertMinsToSeconds,\n  capitalize,\n} from '../../Utilities/helpers';\n\nimport currencyFormatter from '../../Utilities/currencyFormatter';\n\nconst TemplateDetail = styled.div`\n  em {\n    display: block;\n    padding: 5px 0;\n  }\n\n  @media (max-width: 1490px) {\n    display: block;\n\n    em {\n      padding: 10px 0;\n      display: block;\n    }\n  }\n`;\n\nconst TemplateDetailSubTitle = styled.em`\n  color: var(--pf-global--Color--dark-200);\n`;\n\nconst TooltipWrapper = styled.div`\n  p {\n    text-align: left;\n  }\n`;\n\nconst IconGroup = styled.div`\n  & svg {\n    fill: var(--pf-global--Color--dark-200);\n\n    :hover {\n      cursor: pointer;\n    }\n\n    :first-of-type {\n      margin-right: 10px;\n      margin-left: 10px;\n\n      @media (max-width: 1350px) {\n        margin-left: 0;\n      }\n    }\n  }\n`;\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst showSortAttr = (details, sortBy) => {\n  const trimmed = sortBy.split(':')[0];\n  const sortAttribute = Object.keys(details).map((k) =>\n    k === trimmed ? `${details[k]}` : null\n  );\n\n  return (\n    <TemplateDetailSubTitle>\n      {capitalize(trimmed.split('_').join(' '))}: {sortAttribute}\n    </TemplateDetailSubTitle>\n  );\n};\n\nconst QuestionIconTooltip = ({ details }) => (\n  <Popover\n    aria-label=\"template detail popover\"\n    position=\"left\"\n    bodyContent={\n      <TooltipWrapper>\n        {Object.keys(details).map((k, i) => (\n          <p key={i}>\n            <b>{capitalize(k.split('_').join(' '))}</b>: {details[k]}\n          </p>\n        ))}\n      </TooltipWrapper>\n    }\n  >\n    <InfoCircleIcon />\n  </Popover>\n);\n\nQuestionIconTooltip.propTypes = {\n  details: PropTypes.object,\n};\n\nconst TopTemplates = ({\n  data = [],\n  sortBy = '',\n  setDataRunTime = () => {},\n  setEnabled = () => {},\n  redirectToJobExplorer = () => {},\n}) => (\n  <Card>\n    <CardBody>\n      <p>Enter the time it takes to run the following templates manually.</p>\n      {data.map((d) => (\n        <div key={d.id}>\n          <Tooltip content={'List of jobs for this template for past 30 days'}>\n            <Button\n              style={{ padding: '15px 0 10px' }}\n              component=\"a\"\n              onClick={() => redirectToJobExplorer(d.id)}\n              variant=\"link\"\n            >\n              {d.name}\n            </Button>\n          </Tooltip>\n          <TemplateDetail>\n            <InputAndText key={d.id}>\n              <InputGroup>\n                <TextInput\n                  id={d.id}\n                  type=\"number\"\n                  aria-label=\"time run manually\"\n                  value={convertSecondsToMins(d.avgRunTime)}\n                  onChange={(minutes) =>\n                    setDataRunTime(convertMinsToSeconds(minutes), d.id)\n                  }\n                />\n                <InputGroupText>min</InputGroupText>\n              </InputGroup>\n            </InputAndText>\n            <TemplateDetailSubTitle>\n              x {d.successful_hosts_total} host runs\n            </TemplateDetailSubTitle>\n            {showSortAttr(d, sortBy)}\n            <IconGroup>\n              <QuestionIconTooltip details={d} />\n              {!d.enabled && (\n                <ToggleOffIcon onClick={() => setEnabled(d.id)(true)} />\n              )}\n              {d.enabled && (\n                <ToggleOnIcon onClick={() => setEnabled(d.id)(false)} />\n              )}\n            </IconGroup>\n          </TemplateDetail>\n          <p style={{ color: '#486B00' }}>{currencyFormatter(+d.delta)}</p>\n        </div>\n      ))}\n    </CardBody>\n  </Card>\n);\n\nTopTemplates.propTypes = {\n  data: PropTypes.array,\n  setDataRunTime: PropTypes.func,\n  redirectToJobExplorer: PropTypes.func,\n  deselectedIds: PropTypes.array,\n  setDeselectedIds: PropTypes.func,\n  setEnabled: PropTypes.func,\n  sortBy: PropTypes.string,\n};\n\nexport default TopTemplates;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport {\n  Card,\n  CardBody,\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n} from '@patternfly/react-core';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\n// Imports from custom components\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\n// Imports from API\nimport { preflightRequest, readROI, readROIOptions } from '../../Api/';\n\n// Imports from utilities\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport { roi as roiConst } from '../../Utilities/constants';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { calculateDelta, convertSecondsToHours } from '../../Utilities/helpers';\n\n// Chart\nimport TopTemplatesSavings from '../../Charts/ROITopTemplates';\n\n// Local imports\nimport { BorderedCardTitle } from './helpers';\nimport TotalSavings from './TotalSavings';\nimport CalculationCost from './CalculationCost';\nimport AutomationFormula from './AutomationFormula';\nimport TopTemplates from './TopTemplates';\nimport useRequest from '../../Utilities/useRequest';\nimport { getQSConfig } from '../../Utilities/qs';\n\nconst mapApi = ({ items = [] }) =>\n  items.map((el) => ({\n    ...el,\n    delta: 0,\n    avgRunTime: 3600,\n    manualCost: 0,\n    automatedCost: 0,\n    enabled: true,\n  }));\n\nconst filterDisabled = (data) => data.filter(({ enabled }) => enabled);\n\nconst updateDeltaCost = (data, costAutomation, costManual) =>\n  data.map((el) => {\n    const manualCost =\n      convertSecondsToHours(el.avgRunTime) *\n      el.successful_hosts_total *\n      parseFloat(costManual);\n    const automatedCost =\n      convertSecondsToHours(el.successful_elapsed_total) *\n      parseFloat(costAutomation);\n    const delta = calculateDelta(automatedCost, manualCost);\n\n    return { ...el, delta, manualCost, automatedCost };\n  });\n\nconst computeTotalSavings = (data) =>\n  data.reduce((sum, curr) => sum + curr.delta, 0);\n\nconst qsConfig = getQSConfig('clusters', { ...roiConst.defaultParams }, [\n  'limit',\n  'offset',\n]);\n\nconst AutomationCalculator = ({ history }) => {\n  const toJobExplorer = useRedirect(history, 'jobExplorer');\n  const [costManual, setCostManual] = useState('50');\n  const [costAutomation, setCostAutomation] = useState('20');\n\n  // params from toolbar/searchbar\n  const { queryParams, setFromToolbar } = useQueryParams(qsConfig);\n\n  const {\n    error: preflightError,\n    isLoading: preflightIsLoading,\n    request: setPreflight,\n  } = useRequest(\n    useCallback(async () => {\n      const preflight = await preflightRequest();\n      return { preflight: preflight };\n    }, []),\n    { preflight: {}, preflightError, preflightIsLoading }\n  );\n\n  const {\n    result: { options },\n    error: optionsError,\n    isLoading: optionsIsLoading,\n    request: setOptions,\n  } = useRequest(\n    useCallback(async () => {\n      const options = await readROIOptions({ params: queryParams });\n      return { options: options };\n    }, [queryParams]),\n    { options: {}, optionsError, optionsIsLoading }\n  );\n\n  const {\n    result: { data: api },\n    error: apiError,\n    isLoading: apiIsLoading,\n    request: fetchEndpoint,\n    setValue,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await readROI({ params: queryParams });\n      return {\n        data: updateDeltaCost(mapApi(response), costAutomation, costManual),\n      };\n    }, [queryParams]),\n    { data: [], apiError, apiIsLoading }\n  );\n\n  /**\n   * Modifies one elements avgRunTime in the unfilteredData\n   * and updates all calculated fields.\n   * Used in top templates.\n   */\n  const setDataRunTime = (seconds, id) => {\n    const updatedData = api.map((el) => {\n      if (el.id === id) {\n        el.avgRunTime = seconds;\n        const updatedDelta = updateDeltaCost(\n          [el],\n          costAutomation,\n          costManual\n        )[0];\n        return updatedDelta;\n      } else {\n        return el;\n      }\n    });\n\n    setValue({ data: updatedData });\n  };\n\n  const setEnabled = (id) => (value) => {\n    setValue({\n      data: api.map((el) => (el.id === id ? { ...el, enabled: value } : el)),\n    });\n  };\n\n  useEffect(() => {\n    setPreflight();\n    setOptions();\n  }, []);\n\n  /**\n   * Recalculates the delta and costs in the data after the cost is changed.\n   */\n  useEffect(() => {\n    setValue({ data: updateDeltaCost(api, costAutomation, costManual) });\n  }, [costAutomation, costManual]);\n\n  /**\n   * Get data from API depending on the queryParam.\n   */\n  useEffect(() => {\n    setOptions();\n    fetchEndpoint();\n  }, [queryParams]);\n\n  /**\n   * Function to redirect to the job explorer page\n   * with the same filters as is used here.\n   */\n  const redirectToJobExplorer = (templateId) => {\n    const initialQueryParams = {\n      'job-explorer.quick_date_range': 'last_30_days',\n      'job-explorer.template_id': templateId,\n    };\n    toJobExplorer(initialQueryParams);\n  };\n\n  const renderLeft = () => (\n    <Stack hasGutter>\n      <StackItem>\n        <Card>\n          <BorderedCardTitle>Automation savings</BorderedCardTitle>\n          <CardBody>\n            {apiIsLoading && <LoadingState />}\n            {apiError && <ApiErrorState message={apiError.error} />}\n            {api.length <= 0 && <NoData />}\n            {api.length > 0 && (\n              <React.Fragment>\n                <TopTemplatesSavings\n                  margin={{ top: 20, right: 20, bottom: 20, left: 70 }}\n                  id=\"d3-roi-chart-root\"\n                  data={filterDisabled(api)}\n                />\n                <p style={{ textAlign: 'center' }}>Templates</p>\n              </React.Fragment>\n            )}\n          </CardBody>\n        </Card>\n      </StackItem>\n      <StackItem isFilled>\n        <AutomationFormula />\n      </StackItem>\n    </Stack>\n  );\n\n  const renderRight = () => (\n    <Stack hasGutter>\n      <StackItem>\n        <TotalSavings totalSavings={computeTotalSavings(filterDisabled(api))} />\n      </StackItem>\n      <StackItem>\n        <Stack>\n          <StackItem>\n            <CalculationCost\n              costManual={costManual}\n              setCostManual={setCostManual}\n              costAutomation={costAutomation}\n              setCostAutomation={setCostAutomation}\n            />\n          </StackItem>\n          <StackItem style={{ overflow: 'auto', maxHeight: '48vh' }}>\n            <TopTemplates\n              redirectToJobExplorer={redirectToJobExplorer}\n              data={api}\n              setDataRunTime={setDataRunTime}\n              setUnfilteredData={api}\n              setEnabled={setEnabled}\n              sortBy={queryParams.sort_by}\n            />\n          </StackItem>\n        </Stack>\n      </StackItem>\n    </Stack>\n  );\n\n  if (preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  const renderContents = () => {\n    if (preflightError) return <EmptyState preflightError={preflightError} />;\n    else if (api)\n      return (\n        <Grid hasGutter className=\"automation-wrapper\">\n          <GridItem span={9}>{renderLeft()}</GridItem>\n          <GridItem span={3}>{renderRight()}</GridItem>\n        </Grid>\n      );\n    else return <></>;\n  };\n\n  return (\n    <>\n      <PageHeader>\n        <PageHeaderTitle title={'Automation Calculator'} />\n        <FilterableToolbar\n          categories={options}\n          filters={queryParams}\n          qsConfig={qsConfig}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      <Main>{renderContents()}</Main>\n    </>\n  );\n};\n\nAutomationCalculator.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default AutomationCalculator;\n","import * as d3 from 'd3';\n\nclass Tooltip {\n  constructor(opts) {\n    this.svg = opts.svg;\n    this.colors = opts.colors;\n    this.draw();\n  }\n\n  draw() {\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 145;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -41)\n      .attr('rx', 2)\n      .attr('height', 110)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.circleSuccess = this.toolTipBase\n      .append('circle')\n      .attr('cx', 26)\n      .attr('cy', 0)\n      .attr('r', 8)\n      .attr('stroke', 'white')\n      .attr('fill', 'white');\n    this.circleFail = this.toolTipBase\n      .append('circle')\n      .attr('cx', 26)\n      .attr('cy', 26)\n      .attr('r', 8)\n      .attr('stroke', 'white')\n      .attr('fill', 'white');\n    this.successText = this.toolTipBase\n      .append('text')\n      .attr('x', 43)\n      .attr('y', 4)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Successful');\n    this.failText = this.toolTipBase\n      .append('text')\n      .attr('x', 43)\n      .attr('y', 28)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Failed');\n    this.successIcon = this.toolTipBase\n      .append('text')\n      .attr('class', 'fas fa-sm')\n      .attr('fill', this.colors(1))\n      .attr('x', 19)\n      .attr('y', 5)\n      .text('\\uf058');\n    this.failedIcon = this.toolTipBase\n      .append('text')\n      .attr('class', 'fas fa-sm')\n      .attr('fill', this.colors(0))\n      .attr('x', 20)\n      .attr('y', 31)\n      .text('\\uf06a');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 137)\n      .attr('y', -21)\n      .attr('font-size', 12)\n      .attr('text-anchor', 'end')\n      .text('No jobs');\n    this.successful = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 122)\n      .attr('y', 4)\n      .text('0');\n    this.failed = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 122)\n      .attr('y', 28)\n      .text('0');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('stroke', 'white')\n      .attr('x', 20)\n      .attr('y', -21)\n      .attr('font-size', 12)\n      .text('Never');\n    this.clickMore = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 20)\n      .attr('y', 55)\n      .attr('font-size', 12)\n      .text('Click for details');\n  }\n\n  handleMouseOver = (d) => {\n    let success = 0;\n    let fail = 0;\n    let total = 0;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    const formatTooltipDate = d3.timeFormat('%m/%d');\n    if (!d) {\n      return;\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n    if (d) {\n      success = d.RAN || 0;\n      fail = d.FAIL || 0;\n      total = d.TOTAL || 0;\n      this.date.text(formatTooltipDate(d.DATE || null));\n    }\n\n    if (d && d.data) {\n      success = d.data.RAN || 0;\n      fail = d.data.FAIL || 0;\n      total = d.data.TOTAL || 0;\n      this.date.text(formatTooltipDate(d.data.DATE || null));\n    }\n\n    this.jobs.text('' + total + ' jobs');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n    this.failed.text('' + fail);\n    this.successful.text('' + success);\n    this.successTextWidth = this.successful.node().getComputedTextLength();\n    this.failTextWidth = this.failed.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 40;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.circleSuccess.attr('cx', -adjustedWidth);\n      this.circleFail.attr('cx', -adjustedWidth);\n      this.failedIcon.attr('x', -adjustedWidth - 7);\n      this.successIcon.attr('x', -adjustedWidth - 7);\n      this.successText.attr('x', -adjustedWidth + 17);\n      this.failText.attr('x', -adjustedWidth + 17);\n      this.successful.attr('x', -this.successTextWidth - 20 - 12);\n      this.failed.attr('x', -this.failTextWidth - 20 - 12);\n      this.date.attr('x', -adjustedWidth - 5);\n      this.jobs.attr('x', -this.jobsWidth / 2 - 7);\n      this.clickMore.attr('x', -adjustedWidth);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.circleSuccess.attr('cx', 26);\n      this.circleFail.attr('cx', 26);\n      this.failedIcon.attr('x', 19);\n      this.successIcon.attr('x', 19);\n      this.successText.attr('x', 43);\n      this.failText.attr('x', 43);\n      this.successful.attr('x', adjustedWidth - this.successTextWidth);\n      this.failed.attr('x', adjustedWidth - this.failTextWidth);\n      this.date.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth);\n      this.clickMore.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nexport default Tooltip;\n","import React, { Component } from 'react';\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { stringify } from 'query-string';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\n\nclass BarChart extends Component {\n  constructor(props) {\n    super(props);\n    this.draw = this.draw.bind(this);\n    this.init = this.init.bind(this);\n    this.resize = this.resize.bind(this);\n    this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n    this.state = {\n      formattedData: [],\n      timeout: null,\n    };\n  }\n\n  redirectToJobExplorer({ data: { DATE: date } }) {\n    const { jobExplorer } = Paths;\n    const formattedDate = formatDate(date);\n    const initialQueryParams = {\n      start_date: formattedDate,\n      end_date: formattedDate,\n      quick_date_range: 'custom',\n      status: ['failed', 'successful'],\n      template_id: this.props.queryParams.template_id,\n      org_id: this.props.queryParams.org_id,\n      job_type: this.props.queryParams.job_type,\n    };\n\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    this.props.history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  }\n\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  init() {\n    this.draw();\n  }\n\n  // Methods\n  draw() {\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const parseTime = d3.timeParse('%Y-%m-%d');\n    let { data: unformattedData } = this.props;\n    const data = unformattedData.reduce(\n      (formatted, { created_date, successful_count, failed_count }) => {\n        let DATE = parseTime(created_date) || new Date();\n        let RAN = +successful_count || 0;\n        let FAIL = +failed_count || 0;\n        let TOTAL = +successful_count + failed_count || 0;\n        return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n      },\n      []\n    );\n    const width = this.props.getWidth();\n    const height = this.props.getHeight();\n    const x = d3.scaleBand().rangeRound([0, width]).padding(0.35); // percentage\n    const y = d3.scaleLinear().range([height, 0]);\n\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n    //[fail, success]\n    let colors = d3.scaleOrdinal(['#6EC664', '#A30000']);\n\n    const barTooltip = new Tooltip({\n      svg: '#' + this.props.id,\n      colors,\n    });\n    const status = ['FAIL', 'RAN'];\n\n    // stack our data\n    const stack = d3\n      .stack()\n      .keys(status)\n      .order(d3.stackOrderNone)\n      .offset(d3.stackOffsetNone);\n\n    const layers = stack(data);\n    // Scale the range of the data\n    x.domain(layers[0].map((d) => d.data.DATE));\n    y.domain([0, d3.max(layers[layers.length - 1], (d) => d[1] * 1.15) || 8]);\n    // Add the Y Axis\n    svg\n      .append('g')\n      .attr('class', 'y-axis')\n      .call(d3.axisLeft(y).tickSize(-width, 0, 0))\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.y-axis .tick text').attr('x', -5);\n    // text label for the y axis\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Jobs across all clusters');\n    // Add the X Axis\n    let ticks;\n    const maxTicks = Math.round(data.length / (data.length / 2));\n    ticks = data.map((d) => d.DATE);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n        .filter((item) => item);\n    }\n\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(\n        d3.axisBottom(x).tickValues(ticks).tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n      )\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n    // text label for the x axis\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n\n    const layer = svg\n      .selectAll('layer')\n      .data(layers)\n      .enter()\n      .append('g')\n      .attr('class', 'layer')\n      .style('fill', (_d, i) => colors(i));\n    layer\n      .selectAll('rect')\n      .data((d) => d)\n      .enter()\n      .append('rect')\n      .attr('x', (d) => x(d.data.DATE))\n      .attr('y', (d) => y(d[0]))\n      .attr('height', 0)\n      .attr('width', x.bandwidth() - 1)\n      .transition()\n      .duration(550)\n      .ease(d3.easeCubic)\n      .attr('y', (d) => y(d[1]))\n      .attr('height', (d) => y(d[0]) - y(d[1]));\n    layer\n      .selectAll('rect')\n      .on('mouseover', barTooltip.handleMouseOver)\n      .on('mousemove', barTooltip.handleMouseOver)\n      .on('mouseout', barTooltip.handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n  }\n\n  componentDidMount() {\n    this.init();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      this.init();\n    }\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nBarChart.propTypes = {\n  id: PropTypes.string,\n  queryParams: PropTypes.object,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  history: PropTypes.object,\n};\n\nexport default initializeChart(BarChart);\n","import React, { Component } from 'react';\nimport initializeChart from './BaseChart';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\nimport { stringify } from 'query-string';\nimport * as d3 from 'd3';\n\nclass LineChart extends Component {\n  constructor(props) {\n    super(props);\n    this.init = this.init.bind(this);\n    this.draw = this.draw.bind(this);\n    this.resize = this.resize.bind(this);\n    this.updateCluster = this.updateCluster.bind(this);\n    this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n    this.state = {\n      formattedData: [],\n      timeout: null,\n    };\n  }\n\n  redirectToJobExplorer({ DATE: date }) {\n    const { jobExplorer } = Paths;\n    const formattedDate = formatDate(date);\n    const initialQueryParams = {\n      start_date: formattedDate,\n      end_date: formattedDate,\n      quick_date_range: 'custom',\n      status: ['failed', 'successful'],\n      cluster_id: this.props.queryParams.cluster_id,\n      org_id: this.props.queryParams.org_id,\n      template_id: this.props.queryParams.template_id,\n      job_type: this.props.queryParams.job_type,\n    };\n\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    this.props.history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  }\n\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  updateCluster() {\n    this.init();\n  }\n  init() {\n    this.draw();\n  }\n  // Methods\n  draw() {\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const width = this.props.getWidth();\n    const height = this.props.getHeight();\n\n    function transition(path) {\n      path.transition().duration(1000).attrTween('stroke-dasharray', tweenDash);\n    }\n\n    function tweenDash() {\n      const l = this.getTotalLength();\n      const i = d3.interpolateString('0,' + l, l + ',' + l);\n      return function (t) {\n        return i(t);\n      };\n    }\n\n    const x = d3.scaleTime().rangeRound([0, width]);\n    const y = d3.scaleLinear().range([height, 0]);\n\n    //[success, fail, total]\n    let colors = d3.scaleOrdinal(['#6EC664', '#A30000', '#06C']);\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n      .attr('z', 100)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n    // Tooltip\n    const tooltip = new Tooltip({\n      svg: '#' + this.props.id,\n      colors,\n    });\n    const { data: unformattedData } = this.props;\n    const parseTime = d3.timeParse('%Y-%m-%d');\n\n    const data = unformattedData.reduce(\n      (formatted, { created_date, successful_count, failed_count }) => {\n        let DATE = parseTime(created_date) || new Date();\n        let RAN = +successful_count || 0;\n        let FAIL = +failed_count || 0;\n        let TOTAL = +successful_count + failed_count || 0;\n        return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n      },\n      []\n    );\n    // Scale the range of the data\n    x.domain(\n      d3.extent(data, function (d) {\n        return d.DATE;\n      })\n    );\n    y.domain([\n      0,\n      d3.max(data, function (d) {\n        return d.TOTAL * 1.15 || 8;\n      }),\n    ]);\n\n    const successLine = d3\n      .line()\n      .curve(d3.curveMonotoneX)\n      .x(function (d) {\n        return x(d.DATE);\n      })\n      .y(function (d) {\n        return y(d.RAN);\n      });\n\n    const failLine = d3\n      .line()\n      .defined((d) => !isNaN(d.FAIL))\n      .curve(d3.curveMonotoneX)\n      .x(function (d) {\n        return x(d.DATE);\n      })\n      .y(function (d) {\n        return y(d.FAIL);\n      });\n    // Add the Y Axis\n    svg\n      .append('g')\n      .attr('class', 'y-axis')\n      .call(d3.axisLeft(y).ticks(10).tickSize(-width))\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.y-axis .tick text').attr('x', -5);\n\n    // text label for the y axis\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Job runs');\n    // Add the X Axis\n    let ticks;\n    const maxTicks = Math.round(data.length / (data.length / 2));\n    ticks = data.map((d) => d.DATE);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n        .filter((item) => item);\n    }\n\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(\n        d3\n          .axisBottom(x)\n          .tickValues(ticks)\n          .tickSize(-height)\n          .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n      ) // \"Jan-01\"\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n    // text label for the x axis\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n    const vertical = svg\n      .append('path')\n      .attr('class', 'mouse-line')\n      .style('stroke', 'black')\n      .style('stroke-width', '3px')\n      .style('stroke-dasharray', '3, 3')\n      .style('opacity', '0');\n\n    const handleMouseOver = function (d) {\n      tooltip.handleMouseOver(d);\n      // show vertical line\n      vertical.transition().style('opacity', '1');\n    };\n\n    const handleMouseMove = function () {\n      let intersectX = this.cx.baseVal.value;\n      vertical.attr('d', function () {\n        let d = 'M' + intersectX + ',' + height;\n        d += ' ' + intersectX + ',' + 0;\n        return d;\n      });\n    };\n\n    const handleMouseOut = function () {\n      // hide tooltip\n      tooltip.handleMouseOut();\n      // hide vertical line\n      vertical.transition().style('opacity', 0);\n    };\n\n    // Add the successLine path.\n    svg\n      .append('path')\n      .data([data])\n      .attr('class', 'line')\n      .style('fill', 'none')\n      .style('stroke', () => colors(1))\n      .attr('stroke-width', 2)\n      .attr('d', successLine)\n      .call(transition);\n\n    // Add the failLine path.\n    svg\n      .append('path')\n      .data([data])\n      .attr('class', 'line')\n      .style('fill', 'none')\n      .style('stroke', () => colors(0))\n      .attr('stroke-width', 2)\n      .attr('d', failLine)\n      .call(transition);\n    svg\n      .selectAll('dot')\n      .data(data)\n      .enter()\n      .append('circle')\n      .attr('r', 3)\n      .style('stroke', () => colors(1))\n      .style('fill', () => colors(1))\n      .attr('cx', function (d) {\n        return x(d.DATE);\n      })\n      .attr('cy', function (d) {\n        return y(d.RAN);\n      })\n\n      .on('mouseover', handleMouseOver)\n      .on('mousemove', handleMouseMove)\n      .on('mouseout', handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n    // create our failLine circles\n    svg\n      .selectAll('dot')\n      .data(data)\n      .enter()\n      .append('circle')\n      .attr('r', 3)\n      .style('stroke', () => colors(0))\n      .style('fill', () => colors(0))\n      .attr('cx', function (d) {\n        return x(d.DATE);\n      })\n      .attr('cy', function (d) {\n        return y(d.FAIL);\n      })\n      .on('mouseover', handleMouseOver)\n      .on('mousemove', handleMouseMove)\n      .on('mouseout', handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n  }\n\n  componentDidMount() {\n    this.updateCluster();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      this.updateCluster();\n    }\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nLineChart.propTypes = {\n  id: PropTypes.string,\n  queryParams: PropTypes.object,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  history: PropTypes.object,\n};\n\nexport default initializeChart(LineChart);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { trimStr } from '../Utilities/helpers';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n  DataList,\n  DataListItem as PFDataListItem,\n  DataListCell as PFDataListCell,\n} from '@patternfly/react-core';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst ModulesList = ({ modules, isLoading }) => (\n  <DataList\n    aria-label=\"Top Modules\"\n    style={{\n      maxHeight: '400px',\n      overflow: 'auto',\n      height: '400px',\n      background: 'white',\n    }}\n  >\n    <DataListItem aria-labelledby=\"top-modules-header\">\n      <DataListCell>\n        <h3>Top modules</h3>\n      </DataListCell>\n      <DataCellEnd>\n        <h3>Usage</h3>\n      </DataCellEnd>\n    </DataListItem>\n    {isLoading && (\n      <PFDataListItem\n        aria-labelledby=\"modules-loading\"\n        key={isLoading}\n        style={{ border: 'none' }}\n      >\n        <PFDataListCell>\n          <LoadingState />\n        </PFDataListCell>\n      </PFDataListItem>\n    )}\n    {!isLoading && modules.length <= 0 && (\n      <PFDataListItem\n        aria-labelledby=\"modules-no-data\"\n        key={isLoading}\n        style={{ border: 'none' }}\n      >\n        <PFDataListCell>\n          <NoData />\n        </PFDataListCell>\n      </PFDataListItem>\n    )}\n    {!isLoading &&\n      modules\n        .filter((module) => module.name !== null)\n        .map(({ name, host_task_count }, index) => (\n          <DataListItem aria-labelledby=\"top-modules-detail\" key={index}>\n            <DataListCell>\n              <span>{trimStr(name)}</span>\n            </DataListCell>\n            <DataCellEnd>{host_task_count}</DataCellEnd>\n          </DataListItem>\n        ))}\n  </DataList>\n);\n\nModulesList.propTypes = {\n  modules: PropTypes.array,\n  isLoading: PropTypes.bool,\n};\n\nexport default ModulesList;\n","import React, { useCallback, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport ApiErrorState from '../Components/ApiErrorState';\nimport NoResults from './NoResults';\nimport Breakdown from '../Components/Breakdown';\nimport JobStatus from '../Components/JobStatus';\nimport { Paths } from '../paths';\nimport { stringify } from 'query-string';\nimport { formatDateTime, formatJobType } from '../Utilities/helpers';\nimport { readJobExplorer } from '../Api/';\n\nimport { Button, Modal, ModalVariant } from '@patternfly/react-core';\nimport {\n  global_palette_blue_300,\n  global_palette_green_200,\n  global_palette_red_100,\n  global_palette_black_850,\n  global_palette_orange_300,\n  global_palette_purple_300,\n  global_palette_cyan_200,\n  global_palette_light_green_200,\n} from '@patternfly/react-tokens';\n\nimport {\n  DescriptionList,\n  DescriptionListTerm,\n  DescriptionListGroup,\n  DescriptionListDescription,\n  Divider,\n} from '@patternfly/react-core';\n\nimport {\n  TableComposable,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n} from '@patternfly/react-table';\nimport useRequest from '../Utilities/useRequest';\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 2rem;\n`;\n\nconst formatTopFailedTask = (data) => {\n  if (!data) {\n    return;\n  }\n\n  if (data && data[0]) {\n    const percentage = Math.ceil(\n      (data[0].failed_count / data[0].total_failed_count) * 100\n    );\n    return `${data[0].task_name} ${percentage}%`;\n  }\n\n  return `Unavailable`;\n};\n\nconst formatSuccessRate = (successCount, totalCount) =>\n  Math.ceil((successCount / totalCount) * 100) + '%';\nconst formatAvgRun = (elapsed, totalCount) =>\n  new Date(Math.ceil(elapsed / totalCount) * 1000).toISOString().substr(11, 8);\nconst formatTotalTime = (elapsed) =>\n  new Date(elapsed * 1000).toISOString().substr(11, 8);\n\nconst ModalContents = ({ selectedId, isOpen, handleModal, qp, jobType }) => {\n  const {\n    result: stats,\n    request: fetchStats,\n    ...statsApi\n  } = useRequest(\n    useCallback(\n      () => readJobExplorer({ params: agreggateTemplateParams }),\n      [selectedId]\n    ),\n    {}\n  );\n\n  const {\n    result: relatedJobs,\n    request: fetchJobs,\n    ...jobsApi\n  } = useRequest(\n    useCallback(\n      () => readJobExplorer({ params: relatedTemplateJobsParams }),\n      [selectedId]\n    ),\n    {}\n  );\n  let history = useHistory();\n\n  const redirectToJobExplorer = () => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      'job-explorer.template_id': selectedId,\n      'job-explorer.status': [\n        'successful',\n        'failed',\n        'new',\n        'pending',\n        'waiting',\n        'error',\n        'canceled',\n        'running',\n      ],\n      'job-explorer.job_type': [jobType],\n      'job-explorer.quick_date_range': 'last_30_days',\n    };\n\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const relatedTemplateJobsParams = {\n    ...qp,\n    template_id: [selectedId],\n    attributes: [\n      'id',\n      'status',\n      'job_type',\n      'started',\n      'finished',\n      'elapsed',\n      'created',\n      'cluster_name',\n      'org_name',\n    ],\n    group_by_time: false,\n    limit: 5,\n    sort_by: 'created:desc',\n    quick_date_range: qp.quick_date_range\n      ? qp.quick_date_range\n      : 'last_30_days',\n    job_type: [jobType],\n  };\n\n  const agreggateTemplateParams = {\n    group_by: 'template',\n    template_id: [selectedId],\n    attributes: [\n      'elapsed',\n      'job_type',\n      'successful_count',\n      'failed_count',\n      'error_count',\n      'waiting_count',\n      'pending_count',\n      'canceled_count',\n      'new_count',\n      'running_count',\n      'total_count',\n      jobType === 'job' ? 'most_failed_tasks' : 'most_failed_steps',\n    ],\n    status: qp.status,\n    quick_date_range: qp.quick_date_range\n      ? qp.quick_date_range\n      : 'last_30_days',\n    job_type: [jobType],\n  };\n\n  useEffect(() => {\n    fetchJobs();\n    fetchStats();\n  }, [selectedId]);\n\n  const tableCols = ['Id/Name', 'Status', 'Cluster', 'Finished', 'Total time'];\n  const statsData = (statsApi.isSuccess && stats?.items[0]) ?? null;\n  const categoryCount = statsData\n    ? {\n        success: statsData.successful_count,\n        cancelled: statsData.canceled_count,\n        error: statsData.error_count,\n        failed: statsData.failed_count,\n        new: statsData.new_count,\n        pending: statsData.pending_count,\n        running: statsData.running_count,\n        waiting: statsData.waiting_count,\n      }\n    : null;\n\n  const categoryColor = {\n    success: global_palette_green_200.value,\n    cancelled: global_palette_black_850.value,\n    error: global_palette_orange_300.value,\n    failed: global_palette_red_100.value,\n    new: global_palette_cyan_200.value,\n    pending: global_palette_purple_300.value,\n    running: global_palette_blue_300.value,\n    waiting: global_palette_light_green_200.value,\n  };\n\n  const descriptionStats = statsData && [\n    {\n      label: 'Number of runs',\n      id: 'total-runs',\n      value: statsData.total_count ?? 'Unavailable',\n    },\n    {\n      label: 'Total time',\n      id: 'total-time',\n      value: statsData.elapsed\n        ? formatTotalTime(statsData.elapsed)\n        : 'Unavailable',\n    },\n    {\n      label: 'Average time',\n      id: 'avg-time',\n      value: statsData.elapsed\n        ? formatAvgRun(statsData.elapsed, statsData.total_count)\n        : 'Unavailable',\n    },\n    {\n      label: 'Type',\n      id: 'type',\n      value: jobType ? formatJobType(jobType) : 'Unavailable',\n    },\n    {\n      label: 'Success rate',\n      id: 'success-rate',\n      value: !isNaN(statsData.successful_count)\n        ? formatSuccessRate(statsData.successful_count, statsData.total_count)\n        : 'Unavailable',\n    },\n    {\n      label: 'Most failed task',\n      id: 'most-failed',\n      value: statsData.most_failed_tasks\n        ? formatTopFailedTask(statsData.most_failed_tasks)\n        : 'Unavailable',\n    },\n  ];\n\n  const cleanup = () => {\n    handleModal(false);\n  };\n\n  return (\n    <Modal\n      aria-label=\"modal\"\n      variant={ModalVariant.medium}\n      title={\n        jobsApi.isSuccess &&\n        statsApi.isSuccess &&\n        stats?.items?.length > 0 &&\n        (stats?.items[0]?.name ?? 'No template name')\n      }\n      isOpen={isOpen}\n      onClose={cleanup}\n    >\n      {(statsApi.isLoading || jobsApi.isLoading) && <LoadingState />}\n      {(statsApi.error || jobsApi.error) && (\n        <ApiErrorState message={jobsApi.error.error} />\n      )}\n      {statsApi.isSuccess &&\n        jobsApi.isSuccess &&\n        relatedJobs?.items?.length <= 0 && <NoResults />}\n      {statsApi.isSuccess &&\n        jobsApi.isSuccess &&\n        relatedJobs?.items?.length > 0 && (\n          <>\n            {categoryCount && (\n              <Breakdown\n                categoryCount={categoryCount}\n                categoryColor={categoryColor}\n              />\n            )}\n\n            <DescriptionList isHorizontal columnModifier={{ lg: '3Col' }}>\n              {descriptionStats.map(({ label, id, value }) => (\n                <DescriptionListGroup className={id} key={label}>\n                  <DescriptionListTerm>{label}</DescriptionListTerm>\n                  <DescriptionListDescription>\n                    {value}\n                  </DescriptionListDescription>\n                </DescriptionListGroup>\n              ))}\n            </DescriptionList>\n\n            <Divider\n              component=\"div\"\n              style={{ marginTop: '2rem', marginBottom: '1.5rem' }}\n            />\n            <p>\n              <strong>Last 5 jobs</strong>\n            </p>\n\n            <TableComposable\n              aria-label=\"Template information table\"\n              variant=\"compact\"\n            >\n              <Thead>\n                <Tr>\n                  {tableCols.map((heading, idx) => (\n                    <Th key={idx}>{heading}</Th>\n                  ))}\n                </Tr>\n              </Thead>\n              <Tbody>\n                {relatedJobs.items.map((job, idx) => (\n                  <Tr key={`job-detail-${idx}`}>\n                    <Td>{`${job.id.id} - ${job.id.template_name}`}</Td>\n                    <Td>\n                      <JobStatus status={job.status} />\n                    </Td>\n                    <Td>{job.cluster_name}</Td>\n                    <Td>{formatDateTime(job.finished)}</Td>\n                    <Td>{formatTotalTime(job.elapsed)}</Td>\n                  </Tr>\n                ))}\n              </Tbody>\n            </TableComposable>\n          </>\n        )}\n\n      <ActionContainer>\n        <Button\n          key=\"cancel\"\n          variant=\"secondary\"\n          onClick={() => {\n            cleanup();\n          }}\n        >\n          Close\n        </Button>\n\n        <Button component=\"a\" onClick={redirectToJobExplorer} variant=\"link\">\n          View all jobs\n        </Button>\n      </ActionContainer>\n    </Modal>\n  );\n};\n\nModalContents.propTypes = {\n  selectedId: PropTypes.number.isRequired,\n  qp: PropTypes.object.isRequired,\n  jobType: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  handleModal: PropTypes.func.isRequired,\n};\n\nexport default ModalContents;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n  DataList,\n  DataListItem as PFDataListItem,\n  DataListCell as PFDataListCell,\n} from '@patternfly/react-core';\n\nimport ModalContents from './ModalContents';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst TemplatesList = ({ templates, isLoading, qp, title, jobType }) => {\n  const [selectedId, setSelectedId] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const displayJobType = (type) => {\n    return type === 'job' ? 'templates' : 'workflows';\n  };\n\n  return (\n    <>\n      <DataList\n        aria-label={`Top ${displayJobType(jobType)}`}\n        style={{\n          maxHeight: '400px',\n          overflow: 'auto',\n          height: '400px',\n          background: 'white',\n        }}\n      >\n        <DataListItem aria-labelledby={`top-${displayJobType(jobType)}-header`}>\n          <DataListCell>\n            <h3>{title}</h3>\n          </DataListCell>\n          <DataCellEnd>\n            <h3>Usage</h3>\n          </DataCellEnd>\n        </DataListItem>\n        {isLoading && (\n          <PFDataListItem\n            aria-labelledby={`${displayJobType(jobType)}-loading`}\n            key={isLoading}\n            style={{ border: 'none' }}\n          >\n            <PFDataListCell>\n              <LoadingState />\n            </PFDataListCell>\n          </PFDataListItem>\n        )}\n        {!isLoading && templates.length <= 0 && (\n          <PFDataListItem\n            aria-labelledby={`${displayJobType(jobType)}-no-data`}\n            key={isLoading}\n            style={{ border: 'none' }}\n          >\n            <PFDataListCell>\n              <NoData />\n            </PFDataListCell>\n          </PFDataListItem>\n        )}\n        {!isLoading &&\n          templates.map(({ name, total_count, id }, index) => (\n            <DataListItem\n              aria-labelledby={`top-${displayJobType(jobType)}-detail`}\n              key={index}\n            >\n              <DataListCell>\n                <a\n                  onClick={() => {\n                    setIsModalOpen(true);\n                    setSelectedId(id);\n                  }}\n                >\n                  {name}\n                </a>\n              </DataListCell>\n              <DataCellEnd>{total_count}</DataCellEnd>\n            </DataListItem>\n          ))}\n      </DataList>\n      {selectedId && (\n        <ModalContents\n          isOpen={isModalOpen}\n          handleModal={setIsModalOpen}\n          selectedId={selectedId}\n          qp={qp}\n          jobType={jobType}\n        />\n      )}\n    </>\n  );\n};\n\nTemplatesList.propTypes = {\n  templates: PropTypes.array,\n  isLoading: PropTypes.bool,\n  queryParams: PropTypes.object,\n  title: PropTypes.string,\n  qp: PropTypes.object,\n  jobType: PropTypes.string,\n};\n\nexport default TemplatesList;\n","import React, { useState, useEffect, useCallback } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport {\n  preflightRequest,\n  readClustersOptions,\n  readJobExplorer,\n  readEventExplorer,\n} from '../../Api/';\n\nimport { jobExplorer } from '../../Utilities/constants';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  Grid,\n  GridItem,\n} from '@patternfly/react-core';\n\nimport BarChart from '../../Charts/BarChart';\nimport LineChart from '../../Charts/LineChart';\nimport ModulesList from '../../Components/ModulesList';\nimport TemplatesList from '../../Components/TemplatesList';\nimport FilterableToolbar from '../../Components/Toolbar';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport { clusters } from '../../Utilities/constants';\nimport useRequest from '../../Utilities/useRequest';\nimport { getQSConfig } from '../../Utilities/qs';\n\nconst initialTopTemplateParams = {\n  group_by: 'template',\n  limit: 10,\n  job_type: ['job'],\n  group_by_time: false,\n  status: ['successful', 'failed'],\n};\n\nconst initialTopWorkflowParams = {\n  group_by: 'template',\n  limit: 10,\n  job_type: ['workflowjob'],\n  group_by_time: false,\n  status: ['successful', 'failed'],\n};\n\nconst initialModuleParams = {\n  group_by: 'module',\n  sort_by: 'host_task_count:desc',\n  limit: 10,\n};\n\n// takes json and returns\nconst qsConfig = getQSConfig('clusters', { ...clusters.defaultParams }, [\n  'limit',\n  'offset',\n]);\n\nconst Clusters = () => {\n  const [preflightError, setPreFlightError] = useState(null);\n\n  // params from toolbar/searchbar\n  const { queryParams, setFromToolbar } = useQueryParams(qsConfig);\n  const {\n    result: { options },\n    error,\n    request: fetchOptions,\n  } = useRequest(\n    useCallback(async () => {\n      const options = await readClustersOptions({ params: optionsQueryParams });\n      return { options };\n    }, [queryParams]),\n    { options: {} }\n  );\n\n  const {\n    result: { chartData },\n    error: chartDataError,\n    isLoading: chartDataIsLoading,\n    isSuccess: chartDataIsSuccess,\n    request: fetchChartData,\n  } = useRequest(\n    useCallback(async () => {\n      const chartData = await readJobExplorer({ params: queryParams });\n      return { chartData: chartData.items };\n    }, [queryParams]),\n    {\n      chartData: [],\n      chartDataError,\n      chartDataIsLoading,\n      chartDataIsSuccess,\n    }\n  );\n\n  const {\n    result: { modules },\n    error: modulesError,\n    isLoading: modulesIsLoading,\n    isSuccess: modulesIsSuccess,\n    request: fetchModules,\n  } = useRequest(\n    useCallback(async () => {\n      const modules = await readEventExplorer({ params: topModuleParams });\n      return { modules: modules.items };\n    }, [queryParams]),\n    { modules: [], modulesError, modulesIsLoading, modulesIsSuccess }\n  );\n\n  const {\n    result: { templates },\n    error: templatesError,\n    isLoading: templatesIsLoading,\n    isSuccess: templatesIsSuccess,\n    request: fetchTemplates,\n  } = useRequest(\n    useCallback(async () => {\n      const templates = await readJobExplorer({ params: topTemplatesParams });\n      return { templates: templates.items };\n    }, [queryParams]),\n    { templates: [], templatesError, templatesIsLoading, templatesIsSuccess }\n  );\n\n  const {\n    result: { workflows },\n    error: workflowsError,\n    isLoading: workflowsIsLoading,\n    isSuccess: workflowsIsSuccess,\n    request: fetchWorkflows,\n  } = useRequest(\n    useCallback(async () => {\n      const workflows = await readJobExplorer({ params: topWorkflowParams });\n      return { workflows: workflows.items };\n    }, [queryParams]),\n    {\n      workflows: [],\n      workflowsError,\n      workflowsIsLoading,\n      workflowsIsSuccess,\n    }\n  );\n\n  const initialOptionsParams = {\n    attributes: jobExplorer.attributes,\n  };\n\n  const optionsQueryParams = useQueryParams(initialOptionsParams);\n\n  useEffect(() => {\n    fetchOptions();\n    fetchChartData();\n    fetchModules();\n    fetchTemplates();\n    fetchWorkflows();\n  }, [queryParams]);\n\n  const {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n  } = queryParams;\n\n  const topTemplatesParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialTopTemplateParams,\n  };\n\n  const topWorkflowParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialTopWorkflowParams,\n  };\n\n  const topModuleParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialModuleParams,\n  };\n\n  useEffect(() => {\n    async function initializeWithPreflight() {\n      await preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n    }\n\n    initializeWithPreflight();\n  }, []);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  if (preflightError?.preflightError) return <EmptyState {...preflightError} />;\n\n  if (error) return <ApiErrorState message={error.error} />;\n\n  const renderContent = () => {\n    // Warning: we are not checking if ALL the api succeed\n    // this can cause an unsurfaced error when only some of them fails\n    return (\n      <Grid hasGutter>\n        <GridItem span={12}>\n          <Card>\n            <CardTitle>\n              <h2>Job status</h2>\n            </CardTitle>\n            <CardBody>\n              {chartDataIsLoading && <LoadingState />}\n              {(!queryParams.cluster_id ||\n                queryParams.cluster_id?.length <= 0) &&\n                chartDataIsSuccess && (\n                  <BarChart\n                    margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                    id=\"d3-bar-chart-root\"\n                    data={chartData}\n                    queryParams={queryParams}\n                  />\n                )}\n              {queryParams.cluster_id?.length > 0 && chartDataIsSuccess && (\n                <LineChart\n                  margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                  id=\"d3-line-chart-root\"\n                  data={chartData}\n                  queryParams={queryParams}\n                />\n              )}\n            </CardBody>\n          </Card>\n        </GridItem>\n        <GridItem span={4}>\n          <TemplatesList\n            qp={queryParams}\n            templates={workflows}\n            isLoading={workflowsIsLoading}\n            title={'Top workflows'}\n            jobType={'workflowjob'}\n          />\n        </GridItem>\n        <GridItem span={4}>\n          <TemplatesList\n            qp={queryParams}\n            templates={templates}\n            isLoading={templatesIsLoading}\n            title={'Top templates'}\n            jobType={'job'}\n          />\n        </GridItem>\n        <GridItem span={4}>\n          <ModulesList modules={modules} isLoading={modulesIsLoading} />\n        </GridItem>\n      </Grid>\n    );\n  };\n\n  return (\n    <>\n      <PageHeader>\n        <PageHeaderTitle title={'Clusters'} />\n        <FilterableToolbar\n          categories={options}\n          qsConfig={qsConfig}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      <Main>{renderContent()}</Main>\n    </>\n  );\n};\n\nexport default Clusters;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Tr, Td, ExpandableRowContent } from '@patternfly/react-table';\n\nimport { formatDateTime, formatJobType } from '../Utilities/helpers';\nimport JobStatus from './JobStatus';\nimport Breakdown from './Breakdown';\nimport {\n  global_palette_green_300,\n  global_palette_black_400,\n  global_palette_gold_300,\n  global_palette_red_100,\n  global_palette_blue_300,\n} from '@patternfly/react-tokens';\nimport {\n  DescriptionList,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  DescriptionListDescription,\n  Flex,\n  FlexItem,\n  Grid,\n  GridItem,\n  Button,\n} from '@patternfly/react-core';\n\nconst categoryColor = {\n  ok: global_palette_green_300.value,\n  passed: global_palette_green_300.value,\n  unreachable: global_palette_black_400.value,\n  changed: global_palette_gold_300.value,\n  failed: global_palette_red_100.value,\n  skipped: global_palette_blue_300.value,\n};\n\nconst renderMoreButton = (showMore, setShowMore) => {\n  return (\n    <Flex className=\"pf-u-mb-md\">\n      <FlexItem align={{ default: 'alignRight' }}>\n        <Button\n          variant=\"secondary\"\n          onClick={() => {\n            setShowMore(!showMore);\n          }}\n          fullWidth={{ default: 'fullWidth' }}\n        >\n          {showMore ? 'Show less' : 'Show more'}\n        </Button>\n      </FlexItem>\n    </Flex>\n  );\n};\n\nconst renderFailedTaskBar = (failed_tasks) => {\n  const [showMore, setShowMore] = useState(false);\n\n  if (failed_tasks != null) {\n    return (\n      <>\n        <p>\n          <strong>Top failed tasks</strong>\n        </p>\n\n        <Grid hasGutter>\n          {failed_tasks\n            .slice(0, showMore ? failed_tasks.length : 2)\n            .map((task, idx) => {\n              const categoryCount = {\n                passed: task?.passed_host_count ?? 0,\n                failed: task?.failed_host_count ?? 0,\n                unreachable: task?.unreachable_host_count ?? 0,\n              };\n\n              return (\n                <GridItem lg={6} md={12} key={`most-failed-${idx}`}>\n                  <Flex>\n                    <FlexItem>\n                      <strong>Task name </strong> {task?.task_name}\n                    </FlexItem>\n\n                    <FlexItem align={{ default: 'alignRight' }}>\n                      <strong>Module name </strong> {task?.module_name}\n                    </FlexItem>\n                  </Flex>\n                  <Breakdown\n                    categoryCount={categoryCount}\n                    categoryColor={categoryColor}\n                    showPercent\n                  />\n                </GridItem>\n              );\n            })}\n        </Grid>\n\n        {failed_tasks.length > 2\n          ? renderMoreButton(showMore, setShowMore)\n          : null}\n      </>\n    );\n  }\n};\n\nconst JobExplorerListRow = ({ job }) => {\n  const [expanded, setExpanded] = useState(false);\n  const handleExpansion = () => {\n    setExpanded(!expanded);\n  };\n\n  const categoryCount = job\n    ? {\n        ok: job?.ok_host_count ?? 0,\n        skipped: job?.skipped_host_count ?? 0,\n        changed: job?.changed_host_count ?? 0,\n        failed: job?.failed_host_count ?? 0,\n        unreachable: job?.unreachable_host_count ?? 0,\n      }\n    : null;\n\n  const expandedInfo = [\n    {\n      label: 'Created',\n      value: job.created ? formatDateTime(job.created) : 'Unavailable',\n    },\n    {\n      label: 'Started',\n      value: job.created ? formatDateTime(job.started) : 'Unavailable',\n    },\n    {\n      label: 'Finished',\n      value: job.created ? formatDateTime(job.finished) : 'Unavailable',\n    },\n    {\n      label: 'Tasks',\n      value: job.host_task_count ?? 0,\n    },\n  ];\n\n  return (\n    <>\n      <Tr>\n        <Td\n          expand={{\n            rowIndex: job.id.id,\n            isExpanded: expanded,\n            onToggle: handleExpansion,\n          }}\n        />\n        <Td\n          href={job.id.tower_link}\n        >{`${job.id.id} - ${job.id.template_name}`}</Td>\n        <Td>\n          <JobStatus status={job?.status} />\n        </Td>\n        <Td>{job?.cluster_name}</Td>\n        <Td>{job?.org_name}</Td>\n        <Td>{formatJobType(job?.job_type)}</Td>\n      </Tr>\n      <Tr isExpanded={expanded}>\n        <Td colSpan={6}>\n          <ExpandableRowContent>\n            <Flex>\n              <FlexItem>\n                <strong>Host status</strong>\n              </FlexItem>\n              <FlexItem align={{ default: 'alignRight' }}>\n                <strong>Hosts</strong>\n                {'  '}\n                {job?.host_count ?? 0}\n              </FlexItem>\n            </Flex>\n            <Breakdown\n              categoryCount={categoryCount}\n              categoryColor={categoryColor}\n              showPercent\n            />\n            {renderFailedTaskBar(job.most_failed_tasks)}\n\n            <DescriptionList isHorizontal columnModifier={{ lg: '3Col' }}>\n              {expandedInfo.map(({ label, value }) => (\n                <DescriptionListGroup key={label}>\n                  <DescriptionListTerm>{label}</DescriptionListTerm>\n                  <DescriptionListDescription>\n                    {value}\n                  </DescriptionListDescription>\n                </DescriptionListGroup>\n              ))}\n            </DescriptionList>\n          </ExpandableRowContent>\n        </Td>\n      </Tr>\n    </>\n  );\n};\n\nJobExplorerListRow.propTypes = {\n  job: PropTypes.object.isRequired,\n};\n\nexport default JobExplorerListRow;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TableComposable, Thead, Tbody, Tr, Th } from '@patternfly/react-table';\nimport JobExplorerListRow from './JobExplorerListRow';\n\nconst cols = ['Id/Name', 'Status', 'Cluster', 'Organization', 'Type'];\nconst sortableCols = ['Id/Name', 'Status', 'Type'];\n\nconst sortMap = {\n  0: 'id',\n  1: 'status',\n  4: 'job_type',\n};\n\nconst reverseSortMap = {\n  id: 0,\n  status: 1,\n  job_type: 4,\n};\n\nconst JobExplorerList = ({ jobs, queryParams, queryParamsDispatch }) => {\n  const [sortIdx, setSortIdx] = useState(-1);\n  const [sortDir, setSortDir] = useState('none');\n\n  useEffect(() => {\n    if (queryParams?.sort_options in reverseSortMap) {\n      setSortIdx(reverseSortMap[queryParams.sort_options]);\n      setSortDir(\n        queryParams?.sort_order &&\n          (queryParams.sort_order === 'desc' ||\n            queryParams.sort_order === 'asc')\n          ? queryParams.sort_order\n          : 'desc'\n      );\n    } else {\n      setSortIdx(-1);\n      setSortDir('none');\n    }\n  }, [queryParams]);\n\n  const onSort = (_event, idx, dir) => {\n    if (idx !== sortIdx) {\n      setSortIdx(idx);\n      queryParamsDispatch({\n        type: 'SET_SORT_OPTIONS',\n        value: { sort_options: sortMap[idx] },\n      });\n    }\n\n    if (dir !== sortDir) {\n      setSortDir(dir);\n      queryParamsDispatch({\n        type: 'SET_SORT_ORDER',\n        value: { sort_order: dir },\n      });\n    }\n  };\n\n  return (\n    <TableComposable aria-label=\"Job Explorer Table\" variant=\"compact\">\n      <Thead>\n        <Tr>\n          <Th />\n          {cols.map((head, idx) => {\n            const params = sortableCols.includes(head)\n              ? {\n                  sort: {\n                    sortBy: {\n                      index: sortIdx,\n                      direction: sortDir,\n                    },\n                    onSort,\n                    columnIndex: idx,\n                  },\n                }\n              : {};\n            return (\n              <Th key={`col-${idx}`} {...params}>\n                {head}\n              </Th>\n            );\n          })}\n        </Tr>\n      </Thead>\n      <Tbody>\n        {jobs.map((job) => (\n          <JobExplorerListRow job={job} key={job.id.id} />\n        ))}\n      </Tbody>\n    </TableComposable>\n  );\n};\n\nJobExplorerList.propTypes = {\n  jobs: PropTypes.array.isRequired,\n  queryParams: PropTypes.object.isRequired,\n  queryParamsDispatch: PropTypes.func.isRequired,\n};\n\nexport default JobExplorerList;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useRequest from '../../Utilities/useRequest';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoResults from '../../Components/NoResults';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport Pagination from '../../Components/Pagination';\nimport { Paths } from '../../paths';\nimport { parse, stringify } from 'query-string';\n\nimport {\n  preflightRequest,\n  readJobExplorer,\n  readJobExplorerOptions,\n} from '../../Api/';\nimport { jobExplorer } from '../../Utilities/constants';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport { Card, CardBody, PaginationVariant } from '@patternfly/react-core';\n\nimport JobExplorerList from '../../Components/JobExplorerList';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport { getQSConfig } from '../../Utilities/qs';\n\nconst initialQueryParams = {\n  ...jobExplorer.defaultParams,\n  attributes: jobExplorer.attributes,\n};\nconst qsConfig = getQSConfig('job-explorer', { ...initialQueryParams }, [\n  'limit',\n  'offset',\n]);\n\nconst JobExplorer = ({ location: { search }, history }) => {\n  const [preflightError, setPreFlightError] = useState(null);\n\n  const {\n    queryParams,\n    setFromPagination,\n    setFromToolbar,\n    dispatch: queryParamsDispatch,\n  } = useQueryParams(qsConfig);\n\n  const {\n    result: { options },\n    error,\n    request: fetchOptions,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await readJobExplorerOptions({ params: queryParams });\n      return { options: response };\n    }, [queryParams]),\n    {\n      options: {},\n    }\n  );\n\n  const {\n    result: { data, meta },\n    isLoading: dataIsLoading,\n    isSuccess: dataIsSuccess,\n    request: fetchEndpoints,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await readJobExplorer({ params: queryParams });\n      return {\n        data: response.items,\n        meta: response.meta,\n      };\n    }, [queryParams]),\n    { items: [] }\n  );\n\n  const initialSearchParams = parse(search, {\n    arrayFormat: 'bracket',\n    parseBooleans: true,\n    parseNumbers: true,\n  });\n\n  useEffect(() => {\n    history.replace({\n      pathname: jobExplorer,\n      initialSearchParams,\n    });\n  }, []);\n\n  const updateURL = () => {\n    const { jobExplorer } = Paths;\n    const search = stringify(\n      { ...initialQueryParams, ...initialSearchParams },\n      { arrayFormat: 'bracket' }\n    );\n    history.replace({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'job-explorer', secondaryNav: true });\n\n    preflightRequest().catch((error) => {\n      setPreFlightError({ preflightError: error });\n    });\n  }, []);\n\n  useEffect(() => {\n    fetchOptions();\n    fetchEndpoints();\n    updateURL();\n  }, [queryParams]);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n  if (preflightError?.preflightError) return <EmptyState {...preflightError} />;\n  if (error) return <ApiErrorState message={error.error} />;\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Job Explorer'} />\n      </PageHeader>\n\n      {!preflightError && (\n        <Main>\n          <Card>\n            <CardBody>\n              <FilterableToolbar\n                categories={options}\n                filters={queryParams}\n                qsConfig={qsConfig}\n                setFilters={setFromToolbar}\n                pagination={\n                  <Pagination\n                    count={meta?.count}\n                    params={{\n                      limit: parseInt(queryParams.limit),\n                      offset: parseInt(queryParams.offset),\n                    }}\n                    qsConfig={qsConfig}\n                    setPagination={setFromPagination}\n                    isCompact\n                  />\n                }\n                hasSettings\n              />\n              {dataIsLoading && <LoadingState />}\n              {dataIsSuccess && data.length <= 0 && <NoResults />}\n              {dataIsSuccess && data.length > 0 && (\n                <JobExplorerList\n                  jobs={data}\n                  queryParams={queryParams}\n                  queryParamsDispatch={queryParamsDispatch}\n                />\n              )}\n              <Pagination\n                count={meta?.count}\n                params={{\n                  limit: parseInt(queryParams.limit),\n                  offset: parseInt(queryParams.offset),\n                }}\n                qsConfig={qsConfig}\n                setPagination={setFromPagination}\n                variant={PaginationVariant.bottom}\n              />\n            </CardBody>\n          </Card>\n        </Main>\n      )}\n    </React.Fragment>\n  );\n};\n\nJobExplorer.propTypes = {\n  location: PropTypes.object,\n  history: PropTypes.object,\n};\n\nexport default JobExplorer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nimport {\n  NotificationDrawerList as PFNotificationDrawerList,\n  NotificationDrawerListItem as PFNotificationDrawerListItem,\n  NotificationDrawerListItemBody,\n  NotificationDrawerListItemHeader,\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkAltIcon } from '@patternfly/react-icons';\nimport LoadingState from '../Components/LoadingState';\nimport { capitalize } from '../Utilities/helpers';\n\nconst ExternalLinkAltIcon = styled(PFExternalLinkAltIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n  font-size: 14px;\n`;\n\nconst NotificationDrawerListItem = styled(PFNotificationDrawerListItem)`\n  border-top: 1px solid var(--pf-global--BorderColor--light-100\n    );\n  border-bottom::nth-child(odd): 1px solid var(--pf-global--BorderColor--light-100\n    );\n  box-shadow: none;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst NotificationDrawerList = styled(PFNotificationDrawerList)`\n  &:last-child {\n    border-bottom: 1px solid var(--pf-global--BorderColor--light-100);\n  }\n`;\n\nconst stringifyDate = (date) => {\n  const day = moment(date);\n  const oneHour = 60 * 60 * 1000;\n  const now = moment().utc();\n\n  if (now.isAfter(day)) {\n    return `${now.diff(day, 'days')} day(s) ago.`;\n  }\n\n  if (day.isSame(now, 'day')) {\n    if (day.valueOf() > oneHour) {\n      return `${day.diff(now, 'hours')} hour(s) ago.`;\n    }\n\n    return `${now.diff(day, 'minutes')} minute(s) ago.`;\n  }\n};\n\nconst AllNotificationTemplate = ({ notifications }) =>\n  notifications.map(\n    ({ date, message, label, notification_id: id, tower_url: url }) => {\n      if (label === '' || label === 'notice') {\n        return (\n          <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"info\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n\n      if (label === 'error') {\n        return (\n          <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"danger\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n\n      if (label === 'warning') {\n        return (\n          <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"warning\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n    }\n  );\n\nconst ErrorNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'error')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"danger\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst NoticeNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'notice')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"info\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst WarningNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'warning')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"warning\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst NotificationsList = ({ filterBy, notifications }) => (\n  <>\n    <NotificationDrawerList>\n      {notifications.length <= 0 && <LoadingState />}\n      {filterBy === '' && (\n        <AllNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'notice' && (\n        <NoticeNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'error' && (\n        <ErrorNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'warning' && (\n        <WarningNotificationTemplate notifications={notifications} />\n      )}\n    </NotificationDrawerList>\n  </>\n);\n\nAllNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nErrorNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nWarningNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nNotificationsList.propTypes = {\n  notifications: PropTypes.array,\n  filterBy: PropTypes.string,\n};\n\nexport default NotificationsList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoData from '../../Components/NoData';\nimport { preflightRequest, readClusters, readNotifications } from '../../Api/';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle as PFCardTitle,\n  FormSelect,\n  FormSelectOption,\n  PaginationVariant,\n  NotificationDrawer,\n} from '@patternfly/react-core';\n\nimport NotificationsList from '../../Components/NotificationsList';\nimport Pagination from '../../Components/Pagination';\nimport { getQSConfig } from '../../Utilities/qs';\n\nconst CardTitle = styled(PFCardTitle)`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n`;\n\nconst DropdownGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-end;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n\n  select {\n    margin: 0 10px;\n    width: 150px;\n\n    @media screen and (max-width: 1035px) {\n      margin: 10px 10px 0 0;\n    }\n\n    @media screen and (max-width: 865px) {\n      width: 100%;\n    }\n  }\n`;\n\nconst notificationOptions = [\n  {\n    value: 'please choose',\n    label: 'Select Notification Severity',\n    disabled: true,\n  },\n  { value: 'error', label: 'View Critical', disabled: false },\n  { value: 'warning', label: 'View Warning', disabled: false },\n  { value: 'notice', label: 'View Notice', disabled: false },\n  { value: '', label: 'View All', disabled: false },\n];\n\nfunction formatClusterName(data) {\n  const defaultClusterOptions = [\n    { value: 'please choose', label: 'Select cluster', disabled: true },\n    { value: '', label: 'All Clusters', disabled: false },\n    { value: -1, label: 'Unassociated', disabled: false },\n  ];\n  return data.reduce(\n    (formatted, { label, cluster_id: id, install_uuid: uuid }) => {\n      if (label.length === 0) {\n        formatted.push({ value: id, label: uuid, disabled: false });\n      } else {\n        formatted.push({ value: id, label, disabled: false });\n      }\n\n      return formatted;\n    },\n    defaultClusterOptions\n  );\n}\n\nconst initialQueryParams = {\n  defaultParams: {\n    limit: 5,\n    offset: 0,\n  },\n};\n\n// takes json and returns\nconst qsConfig = getQSConfig(\n  'notifications',\n  { ...initialQueryParams.defaultParams },\n  ['limit', 'offset']\n);\n\nconst Notifications = () => {\n  const [preflightError, setPreFlightError] = useState(null);\n  const [notificationsData, setNotificationsData] = useState([]);\n  const [clusterOptions, setClusterOptions] = useState([]);\n  const [selectedCluster, setSelectedCluster] = useState('');\n  const [firstRender, setFirstRender] = useState(true);\n  const [isLoading, setIsLoading] = useState(true);\n  const [meta, setMeta] = useState({});\n\n  // params from toolbar/searchbar\n  const { queryParams, setId, setFromPagination, setSeverity } =\n    useQueryParams(qsConfig);\n\n  useEffect(() => {\n    if (firstRender) {\n      return;\n    }\n\n    const getData = () => {\n      return readNotifications({ params: queryParams });\n    };\n\n    const update = () => {\n      setIsLoading(true);\n      getData().then(({ notifications: notificationsData = [], meta }) => {\n        setNotificationsData(notificationsData);\n        setMeta(meta);\n        setIsLoading(false);\n      });\n    };\n\n    update();\n  }, [queryParams]);\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'notifications', secondaryNav: true });\n\n    let ignore = false;\n    const fetchEndpoints = () => {\n      return Promise.all(\n        [readClusters(), readNotifications({ params: queryParams })].map((p) =>\n          p.catch(() => [])\n        )\n      );\n    };\n\n    async function initializeWithPreflight() {\n      setIsLoading(true);\n      await preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n      fetchEndpoints().then(\n        ([\n          { templates: clustersData = [] },\n          { notifications: notificationsData = [], meta },\n        ]) => {\n          if (!ignore) {\n            const clusterOptions = formatClusterName(clustersData);\n            setClusterOptions(clusterOptions);\n            setNotificationsData(notificationsData);\n            setMeta(meta);\n            setFirstRender(false);\n            setIsLoading(false);\n          }\n        }\n      );\n    }\n\n    initializeWithPreflight();\n    return () => (ignore = true);\n  }, [queryParams]);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Notifications'} />\n      </PageHeader>\n      {preflightError && (\n        <Main>\n          <EmptyState {...preflightError} />\n        </Main>\n      )}\n      {!preflightError && (\n        <>\n          <Main>\n            <Card>\n              <CardTitle>\n                <DropdownGroup>\n                  <FormSelect\n                    name=\"selectedCluster\"\n                    value={selectedCluster}\n                    onChange={(value) => {\n                      setSelectedCluster(value);\n                      setId(value);\n                      setFromPagination(0);\n                    }}\n                    aria-label=\"Select Cluster\"\n                  >\n                    {clusterOptions.map(({ value, label, disabled }, index) => (\n                      <FormSelectOption\n                        isDisabled={disabled}\n                        key={index}\n                        value={value}\n                        label={label}\n                      />\n                    ))}\n                  </FormSelect>\n                  <FormSelect\n                    name=\"selectedNotification\"\n                    value={queryParams.severity || ''}\n                    onChange={(value) => {\n                      setSeverity(value);\n                      setFromPagination(0);\n                    }}\n                    aria-label=\"Select Notification Type\"\n                  >\n                    {notificationOptions.map(\n                      ({ disabled, value, label }, index) => (\n                        <FormSelectOption\n                          isDisabled={disabled}\n                          key={index}\n                          value={value}\n                          label={label}\n                        />\n                      )\n                    )}\n                  </FormSelect>\n                </DropdownGroup>\n                <Pagination\n                  count={meta?.count}\n                  qsConfig={qsConfig}\n                  params={{\n                    limit: queryParams.limit,\n                    offset: queryParams.offset,\n                  }}\n                  setPagination={setFromPagination}\n                  isCompact\n                />\n              </CardTitle>\n              <CardBody>\n                {isLoading && <LoadingState />}\n                {!isLoading && notificationsData.length <= 0 && <NoData />}\n                {!isLoading && notificationsData.length > 0 && (\n                  <NotificationDrawer>\n                    <NotificationsList\n                      filterBy={queryParams.severity || ''}\n                      options={notificationOptions}\n                      notifications={notificationsData}\n                    />\n                  </NotificationDrawer>\n                )}\n                <Pagination\n                  count={meta?.count}\n                  qsConfig={qsConfig}\n                  params={{\n                    limit: queryParams.limit,\n                    offset: queryParams.offset,\n                  }}\n                  setPagination={setFromPagination}\n                  variant={PaginationVariant.bottom}\n                />\n              </CardBody>\n            </Card>\n          </Main>\n        </>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Notifications;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Switch } from '@patternfly/react-core';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  overflow: auto;\n  width: 100%;\n  height: ${(props) => props.height};\n`;\n\nconst LegendDetail = styled.div`\n  display: flex;\n  padding: 7.5px 15px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  overflow: auto;\n`;\n\nconst Color = styled.div.attrs((props) => ({\n  color: props.color || 'black',\n}))`\n  min-width: 12px;\n  height: 12px;\n  background: ${(props) => props.color};\n  margin-right: 20px;\n`;\n\nconst Title = styled.span`\n  font-size: 15px;\n  display: inline-block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n`;\n\nconst SubTitle = styled.span`\n  font-size: 15px;\n  margin-left: auto;\n  margin-right: 0;\n  padding-right: 10px;\n`;\n\nconst Legend = ({ data, selected, height, onToggle, chartName }) => {\n  return (\n    <Container height={height}>\n      {data.map(({ name, value, id, count }, index) => (\n        <LegendDetail key={index}>\n          <Wrapper>\n            <Color color={value} />\n            <Title>{name}</Title>\n          </Wrapper>\n          {count && <SubTitle>{count}</SubTitle>}\n          {selected && (\n            <Switch\n              isChecked={selected.some((selection) => selection === id)}\n              onChange={() => onToggle(id)}\n              aria-label={`${chartName}-${name}`}\n              value={id}\n              key={index}\n            />\n          )}\n        </LegendDetail>\n      ))}\n    </Container>\n  );\n};\n\nLegend.propTypes = {\n  data: PropTypes.array.isRequired,\n  selected: PropTypes.array.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  height: PropTypes.string.isRequired,\n  chartName: PropTypes.string.isRequired,\n};\n\nexport default Legend;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport styled from 'styled-components';\n\nimport initializeChart from '.././BaseChart';\nimport Legend from '../../Utilities/Legend';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nconst GroupedBarChart = ({\n  onClick = null,\n  TooltipClass,\n  legend,\n  ...props\n}) => {\n  const colors = legend.map(({ id, name }) => {\n    return {\n      name,\n      value: props.colorFunc(id),\n      id,\n    };\n  });\n  const [selectedIds, setSelectedIds] = useState(\n    legend.map(({ id }) => id).slice(0, 8)\n  );\n  let timeout = null;\n\n  const handleToggle = (id) => {\n    if (selectedIds.includes(id)) {\n      setSelectedIds(selectedIds.filter((el) => el !== id));\n    } else {\n      setSelectedIds([...selectedIds, id]);\n    }\n  };\n\n  const draw = () => {\n    // Clear our chart container element first\n    d3.selectAll('#' + props.id + ' > *').remove();\n    let { data: unformattedData } = props;\n    const data = unformattedData.reduce((formatted, { date, items }) => {\n      const selectedOrgs = items.filter(({ id }) => selectedIds.includes(id));\n      return formatted.concat({ date, selectedOrgs });\n    }, []);\n    const width = props.getWidth();\n    const height = props.getHeight();\n    // x scale of entire chart\n    const x0 = d3.scaleBand().range([0, width]).padding(0.35);\n    // x scale of individual grouped bars\n    const x1 = d3.scaleBand();\n    const y = d3.scaleLinear().range([height, 0]);\n    // format our X Axis ticks\n    const maxTicksOneMonth = Math.round(data.length / (data.length / 2));\n    const maxTicksTwoMonths = Math.round(data.length / (data.length / 4));\n    let ticks = data.map((d) => d.date);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) =>\n          i % (data.length > 31 ? maxTicksTwoMonths : maxTicksOneMonth) === 0\n            ? d.date\n            : undefined\n        )\n        .filter((item) => item);\n    }\n\n    const xAxis = d3.axisBottom(x0).tickValues(ticks).tickFormat(formatDate);\n\n    const yAxis = d3.axisLeft(y).ticks(8).tickSize(-width, 0, 0);\n\n    const svg = d3\n      .select('#' + props.id)\n      .append('svg')\n      .attr('width', width + props.margin.left + props.margin.right)\n      .attr('height', height + props.margin.bottom + props.margin.top)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' + props.margin.left + ',' + props.margin.top + ')'\n      );\n\n    const dates = data.map((d) => d.date);\n    const tooltip = new TooltipClass({\n      svg: '#' + props.id,\n    });\n    x0.domain(dates);\n    x1.domain(selectedIds).range([0, x0.bandwidth()]);\n    y.domain([\n      0,\n      d3.max(data, (date) =>\n        d3.max(date.selectedOrgs, (d) => d.value * 1.15)\n      ) || 8,\n    ]);\n\n    // add y axis\n    svg\n      .append('g')\n      .attr('class', 'y axis')\n      .call(yAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7')\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 6)\n      .attr('dy', '.71em')\n      .style('text-anchor', 'end')\n      .style('font-weight', 'bold')\n      .text('Value');\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text(props.yLabel);\n\n    // add x axis\n    svg\n      .append('g')\n      .attr('class', 'x axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' + width / 2 + ' ,' + (height + props.margin.top + 25) + ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n    // add the groups\n    let slice = svg.selectAll('.slice').data(data);\n    slice.exit().remove();\n\n    const enter = slice\n      .enter()\n      .append('g')\n      .attr('class', 'g foo')\n      .attr('transform', (d) => 'translate(' + x0(d.date) + ',0)');\n    slice = slice.merge(enter);\n    // add the individual bars\n    let bars = slice.selectAll('rect').data(function (d) {\n      return d.selectedOrgs;\n    });\n    bars.exit().remove();\n\n    const color = props.colorFunc;\n    const subEnter = bars\n      .enter()\n      .append('rect')\n      .attr('width', x1.bandwidth())\n      .attr('x', function (d) {\n        return x1(d.id);\n      }) // unsorted\n      .style('fill', function (d) {\n        return color(d.id);\n      })\n      .attr('y', function (d) {\n        return y(d.value);\n      })\n      .attr('height', function (d) {\n        return height - y(d.value);\n      })\n      .on('mouseover', function (d) {\n        d.moreDetail = !d.name.endsWith('Others');\n        d3.select(this).style(\n          'cursor',\n          onClick && d.moreDetail ? 'pointer' : 'default'\n        );\n        d3.select(this).style('fill', d3.rgb(color(d.id)).darker(1));\n        tooltip.handleMouseOver(d);\n      })\n      .on('mousemove', tooltip.handleMouseOver)\n      .on('mouseout', function (d) {\n        d3.select(this).style('fill', color(d.id));\n        tooltip.handleMouseOut();\n      })\n      .on('click', onClick);\n    bars = bars.merge(subEnter);\n  };\n\n  const init = () => {\n    draw();\n  };\n\n  const resize = () => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      draw();\n    }, 500);\n  };\n\n  useEffect(() => {\n    init();\n    window.addEventListener('resize', resize);\n\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [props.data, selectedIds]);\n\n  return (\n    <Wrapper>\n      <div id={props.id} />\n      {colors.length > 0 && (\n        <Legend\n          id={`${props.id}-legend`}\n          data={colors}\n          selected={selectedIds}\n          onToggle={handleToggle}\n          height=\"350px\"\n          chartName={`${props.id}-legend`}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nGroupedBarChart.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  legend: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  colorFunc: PropTypes.func,\n  yLabel: PropTypes.string,\n  onClick: PropTypes.func,\n  TooltipClass: PropTypes.any.isRequired,\n};\n\nGroupedBarChart.defaultProps = {\n  legend: [],\n};\n\nexport default initializeChart(GroupedBarChart);\n","import * as d3 from 'd3';\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class OrgsTooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -12)\n      .attr('rx', 2)\n      .attr('height', 50)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 25)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Date');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 72)\n      .attr('y', 25)\n      .text('0 Jobs');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 10)\n      .attr('font-size', 12)\n      .text('Org');\n\n    this.clickMore = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 20)\n      .attr('y', 30)\n      .attr('font-size', 12)\n      .text('');\n  }\n\n  handleMouseOver = (d) => {\n    let date;\n    let orgName;\n    let jobs;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    } else {\n      const maxLength = 16;\n      date = d.date;\n      orgName = d.name;\n      jobs = d.value;\n      if (d.name.length > maxLength) {\n        orgName = d.name.slice(0, maxLength).concat('...');\n      }\n    }\n\n    let yAdjust = -11;\n\n    // Include 'Click for details' if more detail is available\n    if (d.moreDetail) {\n      this.boundingBox.attr('height', 68);\n      this.boundingBox.attr('y', -23);\n      this.date.attr('y', 25 + yAdjust);\n      this.jobs.attr('y', 25 + yAdjust);\n      this.orgName.attr('y', 10 + yAdjust);\n      this.clickMore.text('Click for details');\n    } else {\n      this.boundingBox.attr('height', 50);\n      this.boundingBox.attr('y', -12);\n      this.date.attr('y', 25);\n      this.jobs.attr('y', 25);\n      this.orgName.attr('y', 10);\n      this.clickMore.text('');\n    }\n\n    const formatTooltipDate = formatDate;\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.date.text('' + formatTooltipDate(date));\n    this.orgName.text('' + orgName);\n    this.jobs.text('' + jobs + ' Jobs');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 45;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n      this.orgName.attr('x', -adjustedWidth - 7);\n      this.date.attr('x', -adjustedWidth - 7);\n      this.clickMore.attr('x', -adjustedWidth - 7);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth / 2);\n      this.date.attr('x', 20);\n      this.clickMore.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import * as d3 from 'd3';\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class HostsTooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -12)\n      .attr('rx', 2)\n      .attr('height', 50)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 25)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Date');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 72)\n      .attr('y', 25)\n      .text('0 Jobs');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 10)\n      .attr('font-size', 12)\n      .text('Org');\n  }\n\n  handleMouseOver = (d) => {\n    let date;\n    let orgName;\n    let jobs;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    } else {\n      const maxLength = 16;\n      date = d.date;\n      orgName = d.name;\n      jobs = d.value;\n      if (d.name.length > maxLength) {\n        orgName = d.name.slice(0, maxLength).concat('...');\n      }\n    }\n\n    const formatTooltipDate = formatDate;\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.date.text('' + formatTooltipDate(date));\n    this.orgName.text('' + orgName);\n    this.jobs.text('' + jobs + ' Hosts');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 45;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n      this.orgName.attr('x', -adjustedWidth - 7);\n      this.date.attr('x', -adjustedWidth - 7);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth / 2);\n      this.date.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport { getTotal } from '../Utilities/helpers';\nimport Legend from '../Utilities/Legend';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nclass Tooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    // defer drawing until we know the data shape\n    this.drawn = false;\n    // show the success rate or not\n    this.showSuccess = false;\n  }\n\n  draw(d) {\n    // chart1 has success rate data and chart2 does not ...\n    this.showSuccess = d && d.data && 'success_rate' in d.data ? true : false;\n    const boundingHeight = this.showSuccess ? 70 : 52;\n    const boundingWidth = this.showSuccess ? 120 : 108;\n\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBOx = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', boundingHeight)\n      .attr('width', boundingWidth)\n      .attr('fill', '#393f44');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 0)\n      .text('Organization');\n    this.percentageTotal = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 16)\n      .text('0');\n    this.percentageSuccess = null;\n    if (this.showSuccess) {\n      this.percentageSuccess = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 30)\n        .text('');\n    }\n  }\n\n  handleMouseOver = (d) => {\n    // treat draw() as a singleton to avoid a painted window effect\n    if (this.drawn !== true) {\n      this.draw(d);\n      this.drawn = true;\n    }\n\n    let perc;\n    let percSuccess;\n    let orgName;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    }\n\n    if (d && d.data) {\n      const maxLength = 16;\n      perc = d.data.percent;\n      percSuccess = d.data.success_rate;\n      orgName = d.data.name;\n      if (d.data.name.length > maxLength) {\n        orgName = d.data.name.slice(0, maxLength - 3).concat('...');\n      }\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.percentageTotal.text('' + perc + '%');\n    if (percSuccess && this.percentageSuccess) {\n      this.percentageSuccess.text('(' + percSuccess + '% successful)');\n    }\n\n    this.orgName.text(' ' + orgName);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, -10) rotate(45)');\n      this.boundingBOx.attr('x', -125);\n      this.orgName.attr('x', -112);\n      this.percentageTotal.attr('x', -112);\n      if (this.showSuccess) {\n        this.percentageSuccess.attr('x', -112);\n      }\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, -10) rotate(45)');\n      this.boundingBOx.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.percentageTotal.attr('x', 20);\n      if (this.showSuccess) {\n        this.percentageSuccess.attr('x', 20);\n      }\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nconst PieChart = ({\n  data,\n  id,\n  colorFunc: color,\n  margin,\n  getWidth,\n  getHeight,\n}) => {\n  const colors = data\n    .map(({ id, name, count }) => {\n      return {\n        id,\n        name,\n        value: color(id),\n        count: Math.round(count),\n      };\n    })\n    .sort((a, b) => (a.count > b.count ? 1 : b.count > a.count ? -1 : 0));\n\n  const [selectedIds, setSelectedIds] = useState(\n    data.map(({ id }) => id).slice(0, 8)\n  );\n\n  let timeout = null;\n\n  const handleToggle = (id) => {\n    if (selectedIds.includes(id)) {\n      setSelectedIds(selectedIds.filter((el) => el !== id));\n    } else {\n      setSelectedIds([...selectedIds, id]);\n    }\n  };\n\n  const draw = () => {\n    d3.selectAll('#' + id + ' > *').remove();\n    const width = getWidth();\n    const height = getHeight();\n    const svg = d3\n      .select('#' + id)\n      .append('svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.bottom)\n      .append('g');\n\n    svg.append('g').attr('class', 'slices');\n    svg.append('g').attr('class', 'labels');\n    svg.append('g').attr('class', 'lines');\n    const radius = Math.min(width, height) / 2;\n    const filteredData = data.filter(({ id }) => selectedIds.includes(id));\n    const total = getTotal(filteredData);\n    filteredData.forEach(function (d) {\n      d.count = +d.count;\n      d.percent = +Math.round((d.count / total) * 100);\n    });\n    const donutTooltip = new Tooltip({\n      svg: '#' + id,\n    });\n    const pie = d3\n      .pie()\n      .sort(null)\n      .value((d) => d.count);\n    const arc = d3\n      .arc()\n      .outerRadius(radius - 10) // controls top positioning of chart\n      .innerRadius(0);\n\n    svg.attr(\n      'transform',\n      'translate(' +\n        (width + margin.left + margin.right) / 2 +\n        ',' +\n        (height + margin.top + margin.bottom) / 2 +\n        ')'\n    );\n\n    svg\n      .selectAll('path')\n      .data(pie(filteredData))\n      .enter()\n      .append('path')\n      .attr('d', arc)\n      .attr('fill', (d) => color(d.data.id));\n\n    svg\n      .selectAll('path')\n      .on('mouseover', function (d) {\n        d3.select(this).style('fill', d3.rgb(color(d.data.id)).darker(1));\n        donutTooltip.handleMouseOver(d);\n      })\n      .on('mouseout', function (d) {\n        d3.select(this).style('fill', color(d.data.id));\n        donutTooltip.handleMouseOut();\n      })\n      .on('mousemove', donutTooltip.handleMouseOver);\n\n    svg.append('g').classed('labels', true);\n    svg.append('g').classed('lines', true);\n  };\n\n  const init = () => {\n    draw();\n  };\n\n  const resize = () => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      draw();\n    }, 500);\n  };\n\n  useEffect(() => {\n    init();\n    window.addEventListener('resize', resize);\n\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [data, selectedIds]);\n\n  return (\n    <Wrapper>\n      <div id={id} />\n      {colors.length > 0 && (\n        <Legend\n          id={`${id}-legend`}\n          data={colors}\n          selected={selectedIds}\n          onToggle={handleToggle}\n          height=\"300px\"\n          chartName={`${id}-legend`}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nPieChart.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  colorFunc: PropTypes.func,\n};\n\nexport default initializeChart(PieChart);\n","import React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { formatDate as dateForJobExplorer } from '../../Utilities/helpers';\n\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport {\n  preflightRequest,\n  readJobExplorer,\n  readHostExplorer,\n  readOrgOptions,\n} from '../../Api/';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  Tabs,\n  Tab,\n  Grid,\n  GridItem,\n} from '@patternfly/react-core';\n\nimport {\n  GroupedBarChart,\n  OrgsTooltip,\n  HostsTooltip,\n} from '../../Charts/GroupedBarChart/';\nimport PieChart from '../../Charts/PieChart';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport { organizationStatistics as constants } from '../../Utilities/constants';\n\n// For chart colors\nimport { pfmulti } from '../../Utilities/colors';\nimport { scaleOrdinal } from 'd3';\nimport useRequest from '../../Utilities/useRequest';\nimport { getQSConfig } from '../../Utilities/qs';\n\nconst Divider = styled('hr')`\n  border: 1px solid #ebebeb;\n`;\n\nconst colorFunc = scaleOrdinal(pfmulti);\n\nconst orgsChartMapper = (data = [], meta, attrName) => {\n  const dates = data.map(({ date, items }) => ({\n    date,\n    items: items.map(({ id, [attrName]: value, name }) => ({\n      id,\n      date,\n      value,\n      name: name || 'No organization',\n    })),\n  }));\n  meta.legend.map((el) => ({\n    ...el,\n    name: el.name || 'No organization',\n  }));\n  return dates;\n};\n\nconst pieChartMapper = (items = [], attrName) => {\n  const data = items.map(({ id, [attrName]: count, name }) => ({\n    id,\n    count,\n    name: name || 'No organization',\n  }));\n  return data;\n};\n\nconst redirectToJobExplorer =\n  (toJobExplorer, queryParams) =>\n  ({ date, id }) => {\n    if (id === -1) {\n      // disable clicking on \"others\" block\n      return;\n    }\n\n    const { sort_by, ...rest } = queryParams;\n    const formattedDate = dateForJobExplorer(date);\n    const initialQueryParams = {\n      ...rest,\n      'job-explorer.quick_date_range': 'custom',\n      'job-explorer.start_date': formattedDate,\n      'job-explorer.end_date': formattedDate,\n      'job-explorer.status': [\n        'successful',\n        'failed',\n        'new',\n        'pending',\n        'waiting',\n        'error',\n        'canceled',\n        'running',\n      ],\n      'job-explorer.org_id': [id],\n    };\n\n    toJobExplorer(initialQueryParams);\n  };\n\nconst chartMapper = [\n  {\n    api: readJobExplorer,\n    attr: 'total_count',\n    label: 'Jobs across organizations',\n    onClick: redirectToJobExplorer,\n    tooltip: OrgsTooltip,\n  },\n  {\n    api: readHostExplorer,\n    attr: 'total_unique_host_count',\n    label: 'Hosts across organizations',\n    onClick: () => null,\n    tooltip: HostsTooltip,\n  },\n];\nconst qsConfig = getQSConfig(\n  'organization-statistics',\n  { ...constants.defaultParams },\n  ['limit', 'offset']\n);\n\nconst OrganizationStatistics = ({ history }) => {\n  const toJobExplorer = useRedirect(history, 'jobExplorer');\n  const [activeTabKey, setActiveTabKey] = useState(0);\n\n  // params from toolbar/searchbar\n  const { queryParams, setFromToolbar } = useQueryParams(qsConfig);\n\n  const {\n    error: preflightError,\n    isLoading: preflightIsLoading,\n    isSuccess: preflightIsSuccess,\n    request: setPreflight,\n  } = useRequest(\n    useCallback(async () => {\n      const preflight = await preflightRequest();\n      return { preflight: preflight };\n    }, []),\n    { preflight: {}, preflightError, preflightIsLoading, preflightIsSuccess }\n  );\n\n  const {\n    result: { jobs },\n    error: jobsError,\n    isLoading: jobsIsLoading,\n    isSuccess: jobsIsSuccess,\n    request: setJobs,\n  } = useRequest(\n    useCallback(async () => {\n      const jobs = await readJobExplorer({ params: jobRunsByOrgParams });\n      return { jobs: jobs };\n    }, [queryParams]),\n    { jobs: [], jobsError, jobsIsLoading, jobsIsSuccess }\n  );\n\n  const {\n    result: { orgs },\n    error: orgsError,\n    isLoading: orgsIsLoading,\n    isSuccess: orgsIsSuccess,\n    request: setOrgs,\n  } = useRequest(\n    useCallback(\n      async (tabIndex = 0) => {\n        let orgs;\n        if (tabIndex === 0) {\n          orgs = await readJobExplorer({ params: jobsByDateAndOrgParams });\n        } else {\n          orgs = await readHostExplorer({ params: hostAcrossOrgParams });\n        }\n        return { orgs: orgs };\n      },\n      [queryParams]\n    ),\n    { orgs: [], orgsError, orgsIsLoading, orgsIsSuccess }\n  );\n\n  const {\n    result: { options },\n    error: optionsError,\n    isLoading: optionsIsLoading,\n    isSuccess: optionsIsSuccess,\n    request: setOptions,\n  } = useRequest(\n    useCallback(async () => {\n      const options = await readOrgOptions({ params: queryParams });\n      return { options: options };\n    }, [queryParams]),\n    { options: {}, optionsError, optionsIsLoading, optionsIsSuccess }\n  );\n\n  const {\n    result: { tasks },\n    error: tasksError,\n    isLoading: tasksIsLoading,\n    isSuccess: tasksIsSuccess,\n    request: setTasks,\n  } = useRequest(\n    useCallback(async () => {\n      const tasks = await readJobExplorer({ params: jobEventsByOrgParams });\n      return {\n        tasks: tasks,\n      };\n    }, [queryParams]),\n    { tasks: [], tasksError, tasksIsLoading, tasksIsSuccess }\n  );\n\n  useEffect(() => {\n    setOrgs(activeTabKey);\n  }, [activeTabKey]);\n\n  useEffect(() => {\n    setOrgs();\n    setTasks();\n    setOptions();\n    setJobs();\n  }, [queryParams]);\n\n  const jobEventsByOrgParams = {\n    ...queryParams,\n    attributes: ['host_task_count'],\n    group_by: 'org',\n    include_others: true,\n    sort_by: `host_task_count:desc`,\n  };\n\n  const jobRunsByOrgParams = {\n    ...queryParams,\n    attributes: ['total_count'],\n    group_by: 'org',\n    include_others: true,\n    sort_by: `total_count:desc`,\n  };\n\n  const jobsByDateAndOrgParams = {\n    ...queryParams,\n    attributes: ['total_count'],\n    group_by: 'org',\n    group_by_time: true,\n    sort_by: `total_count:desc`,\n  };\n\n  const hostAcrossOrgParams = {\n    ...queryParams,\n    attributes: ['total_unique_host_count'],\n    group_by: 'org',\n    group_by_time: true,\n    sort_by: `host_task_count:desc`,\n  };\n\n  const handleTabClick = (_, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({\n      id: 'organization-statistics',\n      secondaryNav: true,\n    });\n    setPreflight();\n  }, []);\n\n  if (preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  const renderContent = () => {\n    if (preflightError) return <EmptyState preflightError={preflightError} />;\n\n    if (!preflightError)\n      return (\n        <Grid hasGutter>\n          <GridItem span={12}>\n            <Card>\n              <Tabs activeKey={activeTabKey} onSelect={handleTabClick}>\n                <Tab eventKey={0} title={'Jobs'} />\n                <Tab eventKey={1} title={'Hosts'} />\n              </Tabs>\n              <CardBody>\n                {orgsIsLoading && <LoadingState />}\n                {orgsError && <ApiErrorState message={orgsError.error} />}\n                {orgsIsSuccess && orgs.dates?.length <= 0 && <NoData />}\n                {orgsIsSuccess && orgs.dates?.length > 0 && (\n                  <GroupedBarChart\n                    margin={{ top: 20, right: 20, bottom: 50, left: 50 }}\n                    id=\"d3-grouped-bar-chart-root\"\n                    data={orgsChartMapper(\n                      orgs.dates,\n                      orgs.meta,\n                      chartMapper[activeTabKey].attr\n                    )}\n                    legend={orgs.meta.legend}\n                    history={history}\n                    colorFunc={colorFunc}\n                    yLabel={chartMapper[activeTabKey].label}\n                    onClick={chartMapper[activeTabKey].onClick(\n                      toJobExplorer,\n                      queryParams\n                    )}\n                    TooltipClass={chartMapper[activeTabKey].tooltip}\n                  />\n                )}\n              </CardBody>\n            </Card>\n          </GridItem>\n          <GridItem span={6}>\n            <Card>\n              <CardTitle>\n                <h2>Job Runs by Organization</h2>\n              </CardTitle>\n              <Divider />\n              <CardBody>\n                {jobsIsLoading && <LoadingState />}\n                {jobsError && <ApiErrorState message={jobsError.error} />}\n                {jobsIsSuccess && jobs.items?.length <= 0 && <NoData />}\n                {jobsIsSuccess && jobs.items?.length > 0 && (\n                  <PieChart\n                    margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                    id=\"d3-donut-1-chart-root\"\n                    data={pieChartMapper(jobs.items, 'total_count')}\n                    colorFunc={colorFunc}\n                  />\n                )}\n              </CardBody>\n            </Card>\n          </GridItem>\n          <GridItem span={6}>\n            <Card>\n              <CardTitle>\n                <h2>Usage by Organization (Tasks)</h2>\n              </CardTitle>\n              <Divider />\n              <CardBody>\n                {tasksIsLoading && <LoadingState />}\n                {tasksError && <ApiErrorState message={tasksError.error} />}\n                {tasksIsSuccess && tasks.items?.length <= 0 && <NoData />}\n                {tasksIsSuccess && tasks.items?.length > 0 && (\n                  <PieChart\n                    margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                    id=\"d3-donut-2-chart-root\"\n                    data={pieChartMapper(tasks.items, 'host_task_count')}\n                    colorFunc={colorFunc}\n                  />\n                )}\n              </CardBody>\n            </Card>\n          </GridItem>\n        </Grid>\n      );\n\n    return '';\n  };\n\n  return (\n    <>\n      <PageHeader>\n        <PageHeaderTitle title={'Organization Statistics'} />\n        <FilterableToolbar\n          categories={options}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n          qsConfig={qsConfig}\n        />\n      </PageHeader>\n      <Main>{renderContent()}</Main>\n    </>\n  );\n};\n\nOrganizationStatistics.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default OrganizationStatistics;\n","var pfmulti = [\n    '#06C',\n    '#4CB140',\n    '#009596',\n    '#5752D1',\n    '#F4C145',\n    '#EC7A08',\n    '#8BC1F7',\n    '#23511E',\n    '#A2D9D9',\n    '#2A265F',\n    '#F9E0A2',\n    '#8F4700',\n    '#002F5D',\n];\nexport { pfmulti };\n","import React, { useCallback, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { Card, CardBody } from '@patternfly/react-core';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport Breadcrumbs from '../../../Components/Breadcrumbs';\n\nimport { readPlanOptions } from '../../../Api/';\n\nimport Form from '../Shared/Form';\n\nimport { Paths } from '../../../paths';\nimport useRequest from '../../../Utilities/useRequest';\n\nconst Add = () => {\n  const {\n    result: options,\n    isSuccess,\n    request: fetchPlanOptions,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await readPlanOptions();\n      return {\n        data: response,\n      };\n    }, []),\n    {\n      options: {},\n    }\n  );\n\n  useEffect(() => {\n    fetchPlanOptions();\n  }, [fetchPlanOptions]);\n\n  const canWrite =\n    isSuccess &&\n    (options.data?.meta?.rbac?.perms?.write === true ||\n      options.data?.meta?.rbac?.perms?.all === true);\n  const title = 'Create new plan';\n\n  const showAdd = () => (\n    <>\n      <PageHeader>\n        <Breadcrumbs\n          items={[{ title: 'Savings Planner', navigate: '/savings-planner' }]}\n        />\n        <PageHeaderTitle title={title} />\n      </PageHeader>\n      <Main>\n        <Card>\n          <CardBody>\n            <Form title={title} options={options} />\n          </CardBody>\n        </Card>\n      </Main>\n    </>\n  );\n  if (isSuccess) {\n    return canWrite ? showAdd() : <Redirect to={Paths.savingsPlanner} />;\n  }\n  return null;\n};\n\nexport default Add;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { CardActions } from '@patternfly/react-core';\nimport styled from 'styled-components';\n\nconst CardActionsWrapper = styled.div`\n  margin-top: 20px;\n  --pf-c-card__actions--PaddingLeft: 0;\n`;\n\nconst CardActionsRow = ({ children }) => {\n  return (\n    <CardActionsWrapper>\n      <CardActions>{children}</CardActions>\n    </CardActionsWrapper>\n  );\n};\n\nCardActionsRow.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default CardActionsRow;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\nimport { Button, Badge, Alert, Tooltip } from '@patternfly/react-core';\nimport AlertModal from '../AlertModal';\nimport { getRelatedResourceDeleteCounts } from '../../Utilities/getRelatedResourceDeleteDetails';\nimport ErrorDetail from '../ErrorDetail';\n\nconst WarningMessage = styled(Alert)`\n  margin-top: 10px;\n`;\n\nconst Label = styled.span`\n  && {\n    margin-right: 10px;\n  }\n`;\n\nconst DeleteButton = ({\n  onConfirm,\n  modalTitle = 'Delete',\n  name = '',\n  variant = 'secondary',\n  isDisabled = false,\n  ouiaId = null,\n  deleteMessage = 'Delete?',\n  deleteDetailsRequests = [],\n  disabledTooltip = 'This item cannot be deleted',\n  children,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [deleteMessageError, setDeleteMessageError] = useState();\n  const [deleteDetails, setDeleteDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const toggleModal = async (isModalOpen) => {\n    setIsLoading(true);\n    if (deleteDetailsRequests.length > 0 && isModalOpen) {\n      const { results, error } = await getRelatedResourceDeleteCounts(\n        deleteDetailsRequests\n      );\n      if (error) {\n        setDeleteMessageError(error);\n      } else {\n        setDeleteDetails(results);\n      }\n    }\n    setIsLoading(false);\n    setIsOpen(isModalOpen);\n  };\n\n  if (deleteMessageError) {\n    return (\n      <AlertModal\n        isOpen={!!deleteMessageError}\n        variant={'error'}\n        title={'Error!'}\n        onClose={() => {\n          toggleModal(false);\n          setDeleteMessageError();\n        }}\n      >\n        <ErrorDetail error={deleteMessageError.detail} />\n      </AlertModal>\n    );\n  }\n\n  return (\n    <>\n      {disabledTooltip ? (\n        <Tooltip content={disabledTooltip} position=\"top\">\n          <div>\n            <Button\n              spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n              variant={variant || 'secondary'}\n              aria-label={'Delete'}\n              isDisabled={isDisabled}\n              onClick={() => toggleModal(true)}\n              ouiaId={ouiaId}\n            >\n              {children || 'Delete'}\n            </Button>\n          </div>\n        </Tooltip>\n      ) : (\n        <Button\n          ouiaId={ouiaId}\n          spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n          variant={variant || 'secondary'}\n          aria-label={'Delete'}\n          isDisabled={isDisabled}\n          onClick={() => toggleModal(true)}\n        >\n          {children || 'Delete'}\n        </Button>\n      )}\n      <AlertModal\n        isOpen={isOpen}\n        title={modalTitle}\n        variant=\"danger\"\n        onClose={() => toggleModal(false)}\n        actions={[\n          <Button\n            ouiaId=\"delete-modal-confirm\"\n            key=\"delete\"\n            variant=\"danger\"\n            aria-label={'Confirm Delete'}\n            isDisabled={isDisabled}\n            onClick={() => {\n              onConfirm();\n              toggleModal(false);\n            }}\n          >\n            {'Delete'}\n          </Button>,\n          <Button\n            ouiaId=\"delete-modal-cancel\"\n            key=\"cancel\"\n            variant=\"link\"\n            aria-label={'Cancel'}\n            onClick={() => toggleModal(false)}\n          >\n            {'Cancel'}\n          </Button>,\n        ]}\n      >\n        {'Are you sure you want to delete:'}\n        <br />\n        <strong>{name}</strong>\n        {Object.values(deleteDetails).length > 0 && (\n          <WarningMessage\n            variant=\"warning\"\n            isInline\n            title={\n              <div>\n                <div aria-label={deleteMessage}>{deleteMessage}</div>\n                <br />\n                {Object.entries(deleteDetails).map(([key, value]) => (\n                  <div aria-label={`${key}: ${value}`} key={key}>\n                    <Label>{key}</Label> <Badge>{value}</Badge>\n                  </div>\n                ))}\n              </div>\n            }\n          />\n        )}\n      </AlertModal>\n    </>\n  );\n};\n\nDeleteButton.propTypes = {\n  onConfirm: PropTypes.func.isRequired,\n  modalTitle: PropTypes.string,\n  name: PropTypes.string,\n  variant: PropTypes.object,\n  isDisabled: PropTypes.bool,\n  ouiaId: PropTypes.string,\n  deleteMessage: PropTypes.string,\n  deleteDetailsRequests: PropTypes.array,\n  disabledTooltip: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nexport default DeleteButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { shape, string, number, arrayOf, node, oneOfType } from 'prop-types';\nimport { Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst RoutedTabs = ({ tabsArray, defaultTabId }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const getActiveTabId = (defaultTabId) => {\n    return (\n      tabsArray.find((tab) => tab.link === location.pathname)?.id ||\n      defaultTabId\n    );\n  };\n\n  const handleTabSelect = (_, eventKey) => {\n    const match = tabsArray.find((tab) => tab.id === eventKey);\n    if (match) {\n      history.push(match.link);\n    }\n  };\n\n  return (\n    <Tabs activeKey={getActiveTabId(defaultTabId)} onSelect={handleTabSelect}>\n      {tabsArray.map((tab) => (\n        <Tab\n          aria-label={typeof tab.name === 'string' ? tab.name : `${tab.id} tab`}\n          eventKey={tab.id}\n          key={tab.id}\n          link={tab.link}\n          title={<TabTitleText>{tab.name}</TabTitleText>}\n          role=\"tab\"\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nRoutedTabs.propTypes = {\n  defaultTabId: PropTypes.number,\n  tabsArray: arrayOf(\n    shape({\n      id: number.isRequired,\n      link: string.isRequired,\n      name: oneOfType([string.isRequired, node.isRequired]),\n    })\n  ).isRequired,\n};\n\nRoutedTabs.defaultProps = {\n  defaultTabId: 1,\n};\n\nexport default RoutedTabs;\n","import React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\nimport { Paths } from '../../../../paths';\nimport { stringify } from 'query-string';\n\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { Button } from '@patternfly/react-core';\n\nimport {\n  CardBody as PFCardBody,\n  CardFooter,\n  DescriptionList,\n  DescriptionListTerm,\n  DescriptionListGroup,\n  DescriptionListDescription,\n  Divider as PFDivider,\n  Label,\n  List,\n  ListItem,\n} from '@patternfly/react-core';\nimport CardActionsRow from '../../../../Components/CardActionsRow';\nimport {\n  relatedResourceDeleteRequests,\n  getRelatedResourceDeleteCounts,\n} from '../../../../Utilities/getRelatedResourceDeleteDetails';\nimport { deletePlan, readPlan } from '../../../../Api/';\nimport useRequest, {\n  useDismissableError,\n} from '../../../../Utilities/useRequest';\nimport DeleteButton from '../../../../Components/DeleteButton/DeleteButton';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { formatDateTime } from '../../../../Utilities/helpers';\nimport RoutedTabs from '../../../../Components/RoutedTabs';\nimport AlertModal from '../../../../Components/AlertModal/AlertModal';\nimport ErrorDetail from '../../../../Components/ErrorDetail/ErrorDetail';\nimport JobStatus from '../../../../Components/JobStatus';\n\nconst CardBody = styled(PFCardBody)`\n  min-height: 500px;\n  padding: 0;\n  padding-bottom: 20px;\n\n  &:first-child {\n    padding-top: 0;\n  }\n`;\n\nconst Divider = styled(PFDivider)`\n  padding-top: 24px;\n`;\n\nconst DetailsTab = ({ tabsArray, plans, canWrite, options }) => {\n  const { pathname } = useLocation();\n  const history = useHistory();\n  const {\n    id,\n    automation_status,\n    category,\n    description,\n    frequency_period,\n    hosts,\n    manual_time,\n    modified,\n    name,\n    tasks,\n    template_details,\n    template_id,\n  } = plans[0];\n\n  const redirectToJobExplorer = (templateId) => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      'job-explorer.quick_date_range': 'last_30_days',\n      'job-explorer.status': ['failed', 'successful'],\n      'job-explorer.template_id': templateId,\n    };\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const showTemplate = (template_details) => {\n    if (!template_details.id) {\n      return;\n    }\n\n    return (\n      <a onClick={() => redirectToJobExplorer(template_details.id)}>\n        {template_details.name}\n      </a>\n    );\n  };\n\n  const renderOptionsBasedValue = (key, val) => {\n    const fromOptionsValue = (options[key] || []).find(\n      ({ key: apiValue }) => apiValue === val\n    );\n    return (fromOptionsValue || {}).value;\n  };\n\n  const labelsAndValues = {\n    Name: name || undefined,\n    'Automation type': category\n      ? renderOptionsBasedValue('category', category)\n      : undefined,\n    Description: description || undefined,\n    'Manual time': manual_time\n      ? renderOptionsBasedValue('manual_time', manual_time)\n      : undefined,\n    'Run on hosts': hosts || undefined,\n    Frequency: frequency_period\n      ? renderOptionsBasedValue('frequency_period', frequency_period)\n      : undefined,\n    Template: template_id ? showTemplate(template_details) : undefined,\n    'Last job status':\n      automation_status.status && automation_status.status !== 'None' ? (\n        <JobStatus status={automation_status.status} />\n      ) : (\n        <Label variant=\"outline\" color=\"red\" icon={<ExclamationCircleIcon />}>\n          Not Running\n        </Label>\n      ),\n    'Last updated': modified ? (\n      <span>{formatDateTime(modified)}</span>\n    ) : undefined,\n  };\n\n  const { request: deletePlans, error: deleteError } = useRequest(\n    useCallback(async () => {\n      await deletePlan({ id });\n      history.push(`/savings-planner`);\n    }, [id, history])\n  );\n\n  const {\n    result: { isDeleteDisabled },\n    error: deleteDetailsError,\n    request: fetchDeleteDetails,\n  } = useRequest(\n    useCallback(async () => {\n      const { results: deleteDetails, error } =\n        await getRelatedResourceDeleteCounts(\n          relatedResourceDeleteRequests.savingsPlan(plans[0], readPlan)\n        );\n      if (error) {\n        throw new Error(error);\n      }\n      if (deleteDetails) {\n        return { isDeleteDisabled: true };\n      }\n      return { isDeleteDisabled: false };\n    }, [plans[0]]),\n    { isDeleteDisabled: false }\n  );\n\n  useEffect(() => {\n    fetchDeleteDetails();\n  }, [fetchDeleteDetails]);\n  const { error, dismissError } = useDismissableError(\n    deleteError || deleteDetailsError\n  );\n\n  return (\n    <>\n      {plans && (\n        <>\n          <CardBody>\n            <RoutedTabs tabsArray={tabsArray} />\n            <div style={{ padding: '1rem' }}>\n              <DescriptionList isHorizontal columnModifier={{ lg: '3Col' }}>\n                {Object.keys(labelsAndValues).map(\n                  (key, i) =>\n                    labelsAndValues[key] !== undefined && (\n                      <DescriptionListGroup key={i}>\n                        <DescriptionListTerm>{key}</DescriptionListTerm>\n                        <DescriptionListDescription>\n                          {labelsAndValues[key]}\n                        </DescriptionListDescription>\n                      </DescriptionListGroup>\n                    )\n                )}\n              </DescriptionList>\n              {tasks.length > 0 && (\n                <DescriptionList>\n                  <Divider component=\"div\" />\n                  <DescriptionListGroup key={tasks}>\n                    <DescriptionListTerm>Tasks</DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <List component=\"ol\" type=\"1\">\n                        {tasks.map(({ id, task }) => (\n                          <ListItem key={id}>{task}</ListItem>\n                        ))}\n                      </List>\n                    </DescriptionListDescription>\n                  </DescriptionListGroup>\n                </DescriptionList>\n              )}\n            </div>\n          </CardBody>\n          {canWrite && (\n            <CardFooter>\n              <CardActionsRow>\n                <Button\n                  key=\"edit-plan-button\"\n                  variant=\"primary\"\n                  aria-label=\"Edit plan\"\n                  onClick={() => {\n                    history.push({\n                      pathname: `${pathname.split('/details')[0]}/edit`,\n                    });\n                  }}\n                >\n                  Edit\n                </Button>\n                <DeleteButton\n                  key={'delete-plan-button'}\n                  name={name}\n                  modalTitle={'Delete Plan'}\n                  onConfirm={deletePlans}\n                  disabledTooltip={\n                    isDeleteDisabled && 'This plan cannot be deleted'\n                  }\n                >\n                  {'Delete'}\n                </DeleteButton>\n              </CardActionsRow>\n              {error && (\n                <AlertModal\n                  isOpen={!!error}\n                  onClose={dismissError}\n                  title={'Error'}\n                  variant=\"error\"\n                >\n                  <ErrorDetail error={error.detail} />\n                </AlertModal>\n              )}\n            </CardFooter>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nDetailsTab.propTypes = {\n  plans: PropTypes.array,\n  tabsArray: PropTypes.array,\n  canWrite: PropTypes.bool.isRequired,\n  options: PropTypes.object.isRequired,\n};\n\nexport default DetailsTab;\n","var hoursFormatter = function (n) {\n    return (+n.toFixed(0)).toLocaleString() + \" hours\";\n}; /* 2,500 hours */\nexport default hoursFormatter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle, Title } from '@patternfly/react-core';\nimport currencyFormatter from '../../../../../Utilities/currencyFormatter';\nimport hoursFormatter from '../../../../../Utilities/hoursFormatter';\nvar TotalSavings = function (_a) {\n    var _b = _a.value, value = _b === void 0 ? 0 : _b, _c = _a.isMoney, isMoney = _c === void 0 ? true : _c;\n    return (React.createElement(Card, { isPlain: true },\n        React.createElement(CardTitle, { style: { paddingBottom: '0' } }, \"Total savings\"),\n        React.createElement(CardBody, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"4xl\", style: { color: isMoney ? '#81C46B' : '#0063CF' } }, isMoney ? \"\" + currencyFormatter(value) : \"\" + hoursFormatter(value)))));\n};\nTotalSavings.propTypes = {\n    value: PropTypes.number,\n    isMoney: PropTypes.bool,\n};\nexport default TotalSavings;\n","import React, { useState } from 'react';\nimport { Button, ButtonVariant, CodeBlock, CodeBlockCode, Modal, ModalVariant, } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nvar CostsText = function () { return (React.createElement(React.Fragment, null,\n    React.createElement(\"p\", null,\n        React.createElement(\"strong\", null, \"Cost\")),\n    React.createElement(\"p\", null, \"The cost includes the hours spent in implementation, deployment, training and other expenditures for creating, maintaining and running the automation. These hours (cost of investment) are usually higher at the onset, and will be greatly reduced once the automation has been created and only maintenance is required.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"For the initial period and the first year, we assume approximately 10 hours spent on each host, as well as some buffer time and a 40% risk adjustment to account for unforeseen situations.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"For the next two years after the first year, we assume 4 hours spent on each host, as well as a 40% risk adjustment to account for unforeseen situations.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate cost for the initial period and year 1:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"C1 = (time for a manual run on one host in hours * 10) + buffer time\\nC2 = C1 * 40% risk adjustment\\ninitial cost = (C1 + C2) * (cost per hour in USD if applicable, based on display)\\nyear 1 cost = (C1 + C2) * (cost per hour in USD if applicable, based on display)\")),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate cost for years 2 and 3:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"C1 = (time for a manual run on one host in hours * 4)\\nC2 = C1 * 40% risk adjustment\\nyear 2 cost = (C1 + C2) * (cost per hour in USD if applicable, based on display)\\nyear 3 cost = (C1 + C2) * (cost per hour in USD if applicable, based on display)\")))); };\nvar SavingsText = function () { return (React.createElement(React.Fragment, null,\n    React.createElement(\"p\", null,\n        React.createElement(\"strong\", null, \"Savings\")),\n    React.createElement(\"p\", null, \"The savings indicates the time and money saved as a result of automating the plan.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"We assume 50% productivity recapture to account for the productivity that is usually gained by repeated manual implementation of a task over a period of time. We also add a -5% risk adjustment for unforeseen situations that might arise and need to be handled. We also assume a 15% year over year growth in savings.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"Money savings for the initial period is 0, so there is no formula necessary.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate savings for year 0:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"initial period savings = 0 - initial cost\")),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used for savings for year 1:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"S1 = (number of hosts * (manual time in minutes / 60) * yearly frequency of automation)\\nS2 = S1 * 50% productivity recapture\\nS3 = S2 * 5% risk adjustment * (cost per hour in USD if applicable, based on display)\\nyear 1 savings = S2 - S3 - year 1 cost\")),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate savings for year 2:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"S1 = year 1 savings * 15% growth\\nyear 2 savings = year 1 savings + S1 - year 2 cost\")),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate savings for year 3:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"S2 = year 2 savings * 15% growth\\nyear 3 savings = year 2 savings + S2 - year 3 cost\")))); };\nvar FormulaDescription = function () {\n    var _a = useState(false), isOpen = _a[0], setIsOpen = _a[1];\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Button, { variant: \"link\", onClick: function () { return setIsOpen(true); }, icon: React.createElement(InfoCircleIcon, null) }, \"Automation formula\"),\n        React.createElement(Modal, { title: \"Automation formula\", isOpen: isOpen, onClose: function () { return setIsOpen(false); }, variant: ModalVariant.medium, actions: [\n                React.createElement(Button, { key: \"cancel\", variant: ButtonVariant.primary, onClick: function () { return setIsOpen(false); } }, \"Close\"),\n            ] },\n            React.createElement(\"p\", null, \"We use risk-adjusted factors to create the 3-year projection of cost and savings related to automation. While we aim to provide as accurate an account of the cost and savings as possible, actual values may differ in practice. The following information breaks down where we get the data, the risk-adjustment factors we use, the assumptions we make, and the formula used to compute the values as displayed in the chart.\"),\n            React.createElement(\"br\", null),\n            React.createElement(CostsText, null),\n            React.createElement(\"br\", null),\n            React.createElement(SavingsText, null))));\n};\nexport default FormulaDescription;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardActions, CardBody, CardHeader, CardTitle, Grid, GridItem, List, ListItem, ToggleGroup, ToggleGroupItem, } from '@patternfly/react-core';\nimport { SquareFullIcon } from '@patternfly/react-icons';\nimport ChartRenderer, { functions, ChartKind, ChartThemeColor, ChartType, ChartTopLevelType, ApiType, } from 'react-json-chart-builder';\nimport RoutedTabs from '../../../../Components/RoutedTabs';\nimport TotalSavings from './TotalSavings';\nimport FormulaDescription from './FormulaDescription';\nimport currencyFormatter from '../../../../Utilities/currencyFormatter';\nimport hoursFormatter from '../../../../Utilities/hoursFormatter';\nvar yearLabels = {\n    initial: 'Initial',\n    year1: 'Year 1',\n    year2: 'Year 2',\n    year3: 'Year 3',\n};\nvar getChartData = function (data) {\n    var statsData = Object.keys(yearLabels).map(function (year) { return ({\n        year: yearLabels[year],\n        total_costs: +data.projections.monetary_stats.total_costs[year] * -1,\n        total_benefits: +data.projections.monetary_stats.total_benefits[year],\n        cumulative_net_benefits: +data.projections.monetary_stats.cumulative_net_benefits[year],\n        total_hours_spent_risk_adjusted: +data.projections.time_stats.total_hours_spent_risk_adjusted[year] * -1,\n        total_hours_saved: +data.projections.time_stats.total_hours_saved[year],\n        cumulative_time_net_benefits: +data.projections.time_stats.cumulative_time_net_benefits[year],\n    }); });\n    return { items: statsData, type: ApiType.nonGrouped, response_type: '' };\n};\nvar constants = function (isMoney) { return ({\n    cost: {\n        key: isMoney ? 'total_costs' : 'total_hours_spent_risk_adjusted',\n        color: '#8B8D8F',\n    },\n    benefit: {\n        key: isMoney ? 'total_benefits' : 'total_hours_saved',\n        color: isMoney ? '#81C46B' : '#0063CF',\n    },\n    net: {\n        key: isMoney ? 'cumulative_net_benefits' : 'cumulative_time_net_benefits',\n        color: '#EE7A00',\n    },\n}); };\nvar StatisticsTab = function (_a) {\n    var tabsArray = _a.tabsArray, data = _a.data;\n    var _b = useState(true), isMoney = _b[0], setIsMoney = _b[1];\n    var customTooltipFormatting = function (datum) {\n        return isMoney ? currencyFormatter(+datum.y) : hoursFormatter(+datum.y);\n    };\n    var computeTotalSavings = function (d) {\n        return isMoney\n            ? d.projections.monetary_stats.cumulative_net_benefits.year3\n            : d.projections.time_stats.cumulative_time_net_benefits.year3;\n    };\n    var barChartData = {\n        charts: [\n            {\n                id: 1000,\n                kind: ChartKind.wrapper,\n                type: ChartTopLevelType.chart,\n                parent: null,\n                props: {\n                    height: 600,\n                    domainPadding: {\n                        x: 100,\n                    },\n                    padding: {\n                        bottom: 60,\n                        left: 80,\n                    },\n                    themeColor: ChartThemeColor.gray,\n                },\n                tooltip: {\n                    cursor: true,\n                    stickToAxis: 'x',\n                    mouseFollow: true,\n                    legendTooltip: {\n                        legendData: [\n                            {\n                                childName: constants(isMoney).benefit.key,\n                                name: 'Savings',\n                                symbol: {\n                                    fill: constants(isMoney).benefit.color,\n                                },\n                            },\n                            {\n                                childName: constants(isMoney).cost.key,\n                                name: 'Costs',\n                                symbol: {\n                                    fill: constants(isMoney).cost.color,\n                                },\n                            },\n                            {\n                                childName: constants(isMoney).net.key,\n                                name: 'Cumulative savings',\n                                symbol: {\n                                    fill: constants(isMoney).net.color,\n                                },\n                            },\n                        ],\n                        titleProperyForLegend: 'year',\n                    },\n                    customFnc: customTooltipFormatting,\n                },\n                xAxis: {\n                    label: 'Time',\n                },\n                yAxis: {\n                    label: isMoney ? 'Money Saved' : 'Hours Saved',\n                    tickFormat: 'formatNumberAsK',\n                    style: {\n                        grid: { stroke: '#D2D2D2' },\n                        axisLabel: { padding: 60 },\n                    },\n                },\n            },\n            {\n                id: 1001,\n                kind: ChartKind.stack,\n                parent: 1000,\n                props: {},\n            },\n            {\n                id: 1102,\n                kind: ChartKind.simple,\n                type: ChartType.bar,\n                name: constants(isMoney).benefit.key,\n                parent: 1001,\n                props: {\n                    x: 'year',\n                    y: constants(isMoney).benefit.key,\n                    barRatio: 0.8,\n                    barWidth: 0,\n                    style: {\n                        data: {\n                            fill: constants(isMoney).benefit.color,\n                            width: 120,\n                        },\n                    },\n                },\n                tooltip: {\n                    labelName: '',\n                },\n            },\n            {\n                id: 1101,\n                kind: ChartKind.simple,\n                type: ChartType.bar,\n                name: constants(isMoney).cost.key,\n                parent: 1001,\n                props: {\n                    x: 'year',\n                    y: constants(isMoney).cost.key,\n                    barRatio: 0.8,\n                    barWidth: 0,\n                    style: {\n                        data: {\n                            fill: constants(isMoney).cost.color,\n                            width: 120,\n                        },\n                    },\n                },\n                tooltip: {\n                    labelName: '',\n                },\n            },\n            {\n                id: 1002,\n                kind: ChartKind.simple,\n                type: ChartType.line,\n                name: constants(isMoney).net.key,\n                parent: 1000,\n                props: {\n                    x: 'year',\n                    y: constants(isMoney).net.key,\n                    style: {\n                        data: {\n                            stroke: constants(isMoney).net.color,\n                            strokeWidth: 5,\n                        },\n                    },\n                },\n                tooltip: {\n                    labelName: '',\n                },\n            },\n        ],\n        functions: __assign(__assign({}, functions), { fetchFnc: function () {\n                return new Promise(function (resolve) {\n                    resolve(getChartData(data));\n                });\n            } }),\n    };\n    var renderLeft = function () { return (React.createElement(Card, { isPlain: true },\n        React.createElement(CardHeader, null,\n            React.createElement(CardActions, null,\n                React.createElement(ToggleGroup, { \"aria-label\": \"toggleButton\" },\n                    React.createElement(ToggleGroupItem, { text: \"Money\", buttonId: \"money\", isSelected: isMoney, onChange: function () { return setIsMoney(true); } }),\n                    React.createElement(ToggleGroupItem, { text: \"Time\", buttonId: \"time\", isSelected: !isMoney, onChange: function () { return setIsMoney(false); } }))),\n            React.createElement(CardTitle, null, data.name)),\n        React.createElement(CardBody, null,\n            React.createElement(ChartRenderer, { schema: barChartData.charts, functions: barChartData.functions })))); };\n    var renderRight = function () { return (React.createElement(React.Fragment, null,\n        React.createElement(TotalSavings, { value: computeTotalSavings(data), isMoney: isMoney }),\n        React.createElement(Card, { isPlain: true },\n            React.createElement(CardBody, null,\n                React.createElement(List, { isPlain: true },\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).benefit.color }) }, \"Savings from automating this plan\"),\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).cost.color }) }, \"Costs from creating, maintaining and running the automation\"),\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).net.color }) }, \"Cumulative savings over time\")))),\n        React.createElement(FormulaDescription, null))); };\n    return (React.createElement(Card, null,\n        React.createElement(RoutedTabs, { tabsArray: tabsArray }),\n        React.createElement(Grid, null,\n            React.createElement(GridItem, { span: 9 }, renderLeft()),\n            React.createElement(GridItem, { span: 3 }, renderRight()))));\n};\nStatisticsTab.propTypes = {\n    /* eslint-disable-next-line */\n    /* @ts-ignore: Validation error */\n    data: PropTypes.object.isRequired,\n    tabsArray: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        link: PropTypes.string.isRequired,\n        name: PropTypes.node.isRequired,\n    }).isRequired).isRequired,\n};\nexport default StatisticsTab;\n","import React, { useCallback, useEffect } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { readPlanOptions } from '../../../Api/';\nimport { Paths } from '../../../paths';\n\nimport Form from '../Shared/Form';\nimport useRequest from '../../../Utilities/useRequest';\n\nconst Edit = ({ data }) => {\n  const { id } = useParams();\n\n  const {\n    result: options,\n    isSuccess,\n    request: fetchPlanOptions,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await readPlanOptions();\n      return {\n        data: response,\n      };\n    }, []),\n    {\n      options: {},\n    }\n  );\n\n  useEffect(() => {\n    fetchPlanOptions();\n  }, [fetchPlanOptions]);\n\n  const canWrite =\n    isSuccess &&\n    (options.data?.meta?.rbac?.perms?.write === true ||\n      options.data?.meta?.rbac?.perms?.all === true);\n\n  const showEdit = () => (\n    <>\n      <Form title=\"Edit plan\" options={options} data={data} />\n    </>\n  );\n\n  if (isSuccess) {\n    return canWrite ? (\n      showEdit()\n    ) : (\n      <Redirect to={`${Paths.savingsPlanner}/${id}`} />\n    );\n  }\n  return null;\n};\n\nEdit.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default Edit;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useLocation, Route, Switch } from 'react-router-dom';\nimport { CaretLeftIcon } from '@patternfly/react-icons';\nimport { Card } from '@patternfly/react-core';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\n\nimport DetailsTab from './DetailsTab';\nimport StatisticsTab from './StatisticsTab';\nimport SavingsPlanner from '../List';\nimport ApiErrorState from '../../../Components/ApiErrorState';\nimport { notAuthorizedParams } from '../../../Utilities/constants';\n\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nimport Breadcrumbs from '../../../Components/Breadcrumbs';\n\nimport { preflightRequest, readPlan, readPlanOptions } from '../../../Api/';\n\nimport SavingsPlanEdit from '../Edit';\nimport useRequest from '../../../Utilities/useRequest';\n\nconst Details = () => {\n  const { id } = useParams();\n  const { state: locationState } = useLocation();\n  const [preflightError, setPreFlightError] = useState(null);\n  let pageTitle = 'Details';\n  let onEdit = false;\n  if (locationState?.reload) {\n    onEdit = true;\n  }\n  if (location.pathname.indexOf('/statistics') !== -1) {\n    pageTitle = 'Statistics';\n  } else if (location.pathname.indexOf('/edit') !== -1) {\n    pageTitle = 'Edit plan';\n  }\n  const [selectedId, setSelectedId] = useState(id);\n  const queryParams = { id: [selectedId] };\n\n  const {\n    result: { options },\n    error,\n    isSuccess,\n    request: fetchOptions,\n  } = useRequest(\n    useCallback(async () => {\n      setSelectedId(id);\n      await preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n\n      const response = await readPlanOptions();\n      return { options: response };\n    }, []),\n    { options: {} }\n  );\n\n  const {\n    result: { rbac, plans },\n    error: plansError,\n    isLoading: plansIsLoading,\n    isSuccess: plansIsSuccess,\n    request: fetchEndpoints,\n  } = useRequest(\n    useCallback(async () => {\n      setSelectedId(id);\n      await preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n      const response = await readPlan({ params: queryParams });\n      return {\n        plans: response.items,\n        rbac: response.rbac,\n      };\n    }, []),\n    { plans: [], rbac: [], plansError, plansIsLoading, plansIsSuccess }\n  );\n\n  useEffect(() => {\n    fetchOptions();\n    fetchEndpoints();\n  }, [queryParams]);\n\n  const canWrite =\n    isSuccess && (rbac.perms?.write === true || rbac.perms?.all === true);\n  const tabsArray = [\n    {\n      id: 0,\n      name: (\n        <>\n          <CaretLeftIcon />\n          {'Back to Plans'}\n        </>\n      ),\n      link: `/savings-planner`,\n    },\n    { id: 1, name: 'Details', link: `/savings-planner/${selectedId}/details` },\n    {\n      id: 2,\n      name: 'Statistics',\n      link: `/savings-planner/${selectedId}/statistics`,\n    },\n  ];\n\n  const breadcrumbUrl = `/savings-planner/${selectedId}`;\n  const breadcrumbsItems = plansIsSuccess\n    ? [\n        { title: 'Savings Planner', navigate: '/savings-planner' },\n        { title: plans[0].name, navigate: breadcrumbUrl },\n      ]\n    : [];\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n  return (\n    <>\n      {error && (\n        <>\n          <ApiErrorState message={error.error} />\n        </>\n      )}\n      {plansIsSuccess && (\n        <>\n          <PageHeader>\n            <Breadcrumbs items={breadcrumbsItems} />\n            <PageHeaderTitle title={pageTitle} />\n          </PageHeader>\n          <Main>\n            <Card>\n              <Switch>\n                <Route path=\"/savings-planner/:id/statistics\">\n                  <StatisticsTab\n                    tabsArray={tabsArray}\n                    data={plans[0]}\n                    queryParams={queryParams}\n                  />\n                </Route>\n                {!onEdit && (\n                  <Route path=\"/savings-planner/:id/details\">\n                    <DetailsTab\n                      plans={plans}\n                      tabsArray={tabsArray}\n                      canWrite={canWrite}\n                      options={options}\n                    />\n                  </Route>\n                )}\n                <Route path=\"/savings-planner/:id/edit\">\n                  <SavingsPlanEdit data={plans[0]} />\n                </Route>\n                <Route path=\"/savings-planner/:id\">\n                  <DetailsTab\n                    plans={plans}\n                    tabsArray={tabsArray}\n                    canWrite={canWrite}\n                    options={options}\n                  />\n                </Route>\n                <Route exact path=\"/savings-planner\">\n                  <SavingsPlanner />\n                </Route>\n              </Switch>\n            </Card>\n          </Main>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Details;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Title,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Button,\n} from '@patternfly/react-core';\nimport { AddCircleOIcon, SearchIcon } from '@patternfly/react-icons';\nimport { useHistory } from 'react-router-dom';\n\nconst EmptyList = ({\n  label = '',\n  title = 'No items found.',\n  message = '',\n  canAdd = false,\n  path,\n}) => {\n  const history = useHistory();\n\n  return (\n    <EmptyState variant=\"full\">\n      <EmptyStateIcon icon={canAdd ? AddCircleOIcon : SearchIcon} />\n      <Title size=\"lg\" headingLevel=\"h3\">\n        {title}\n      </Title>\n      <EmptyStateBody>{message}</EmptyStateBody>\n      {canAdd && (\n        <Button\n          key=\"add-item-button\"\n          variant=\"primary\"\n          aria-label={label}\n          onClick={() => {\n            history.push({\n              pathname: path,\n            });\n          }}\n        >\n          {label}\n        </Button>\n      )}\n    </EmptyState>\n  );\n};\n\nEmptyList.propTypes = {\n  canAdd: PropTypes.bool,\n  label: PropTypes.string,\n  message: PropTypes.string,\n  title: PropTypes.string,\n  path: PropTypes.string.isRequired,\n};\n\nexport default EmptyList;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {\n  Card,\n  CardHeader,\n  CardHeaderMain,\n  CardActions,\n  CardTitle as PFCardTitle,\n  CardBody,\n  CardFooter,\n  Checkbox as PFCheckbox,\n  Dropdown,\n  DropdownItem,\n  KebabToggle,\n  Label,\n} from '@patternfly/react-core';\n\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport styled from 'styled-components';\nimport { stringify } from 'query-string';\n\nimport { Link, useRouteMatch } from 'react-router-dom';\n\nimport { Paths } from '../../../../paths';\n\nimport currencyFormatter from '../../../../Utilities/currencyFormatter';\nimport { formatDateTime } from '../../../../Utilities/helpers';\n\nimport JobStatus from '../../../../Components/JobStatus';\n\nconst CardTitle = styled(PFCardTitle)`\n  word-break: break-word;\n`;\n\nconst CardLabel = styled.span`\n  margin-right: 5px;\n  font-weight: bold;\n`;\n\nconst Small = styled.small`\n  display: block;\n  margin-bottom: 10px;\n  color: #6a6e73;\n`;\n\nconst Checkbox = styled(PFCheckbox)`\n  &.pf-c-check.pf-m-standalone {\n    margin-top: -3px;\n  }\n`;\n\nconst CardDetail = styled.div`\n  display: flex;\n  min-height: 30px;\n  align-items: center;\n`;\n\nconst ListItem = ({\n  isSuccess,\n  plan,\n  selected = [],\n  handleSelect = () => {},\n  canWrite,\n  options,\n}) => {\n  const {\n    id,\n    automation_status,\n    category,\n    description,\n    frequency_period,\n    modified,\n    name,\n    template_details,\n    projections,\n  } = plan;\n\n  const projectedSavings =\n    projections?.monetary_stats?.cumulative_net_benefits?.year3;\n\n  const [isCardKebabOpen, setIsCardKebabOpen] = useState(false);\n  const match = useRouteMatch();\n  let history = useHistory();\n\n  const redirectToJobExplorer = (templateId) => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      'job-explorer.quick_date_range': 'last_30_days',\n      'job-explorer.status': ['failed', 'successful'],\n      'job-explorer.template_id': templateId,\n    };\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const renderTemplateLink = (template) => {\n    return template && isSuccess ? (\n      <a onClick={() => redirectToJobExplorer(template.id)}>{template.name}</a>\n    ) : null;\n  };\n\n  const renderOptionsBasedValue = (key, val) => {\n    return options[key].find(({ key: apiValue }) => apiValue === val).value;\n  };\n\n  const kebabDropDownItems = [\n    <React.Fragment key={id}>\n      <DropdownItem\n        key=\"edit\"\n        onClick={() => history.push(`${match.url}/${id}/edit`)}\n        position=\"right\"\n      >\n        Edit\n      </DropdownItem>\n      <DropdownItem\n        key=\"link\"\n        onClick={() => history.push(`${match.url}/${id}/edit#tasks`)}\n        position=\"right\"\n      >\n        Manage tasks\n      </DropdownItem>\n      <DropdownItem\n        key=\"link\"\n        onClick={() => history.push(`${match.url}/${id}/edit#link_template`)}\n        position=\"right\"\n      >\n        Link template\n      </DropdownItem>\n    </React.Fragment>,\n  ];\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardHeaderMain>\n          <CardTitle>\n            <Link to={`${match.url}/${id}`}>{name}</Link>\n          </CardTitle>\n        </CardHeaderMain>\n        {canWrite && (\n          <CardActions>\n            <Dropdown\n              onSelect={() => {}}\n              toggle={\n                <KebabToggle\n                  onToggle={() => setIsCardKebabOpen(!isCardKebabOpen)}\n                />\n              }\n              isOpen={isCardKebabOpen}\n              isPlain\n              dropdownItems={kebabDropDownItems}\n              position={'right'}\n            />\n            <Checkbox\n              onChange={() => handleSelect(plan)}\n              isChecked={selected.some((row) => row.id === plan.id)}\n              aria-label=\"card checkbox\"\n              id=\"check-1\"\n              name=\"check1\"\n            />\n          </CardActions>\n        )}\n      </CardHeader>\n      <CardBody>\n        {description ? <Small>{description}</Small> : null}\n        <CardDetail>\n          <CardLabel>Frequency</CardLabel>{' '}\n          {frequency_period ? (\n            renderOptionsBasedValue('frequency_period', frequency_period)\n          ) : (\n            <span>None</span>\n          )}\n        </CardDetail>\n        <CardDetail>\n          <CardLabel>Template</CardLabel>{' '}\n          {Object.keys(template_details || {}).length !== 0 ? (\n            renderTemplateLink(template_details)\n          ) : (\n            <span>\n              None -{' '}\n              <a\n                onClick={() =>\n                  history.push(`${match.url}/${id}/edit#link_template`)\n                }\n              >\n                Link template\n              </a>\n            </span>\n          )}\n        </CardDetail>\n        <CardDetail>\n          <CardLabel>Last job status</CardLabel>\n          {automation_status.status !== 'None' ? (\n            <JobStatus status={automation_status.status} />\n          ) : (\n            <Label\n              variant=\"outline\"\n              color=\"red\"\n              icon={<ExclamationCircleIcon />}\n            >\n              Not Running\n            </Label>\n          )}\n        </CardDetail>\n        {projectedSavings && (\n          <CardDetail>\n            <CardLabel>Projected savings</CardLabel>\n            <a onClick={() => history.push(`${match.url}/${id}/statistics`)}>\n              {currencyFormatter(+projectedSavings)}\n            </a>\n          </CardDetail>\n        )}\n        <CardDetail>\n          <CardLabel>Last updated</CardLabel>{' '}\n          <span>{formatDateTime(modified)}</span>\n        </CardDetail>\n      </CardBody>\n      <CardFooter>\n        <Label>{renderOptionsBasedValue('category', category)}</Label>\n      </CardFooter>\n    </Card>\n  );\n};\n\nListItem.propTypes = {\n  isSuccess: PropTypes.bool.isRequired,\n  canWrite: PropTypes.bool.isRequired,\n  selected: PropTypes.array,\n  handleSelect: PropTypes.func,\n  plan: PropTypes.object,\n  options: PropTypes.object,\n};\n\nexport default ListItem;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport AlertModal from '../AlertModal';\n\nimport { getRelatedResourceDeleteCounts } from '../../Utilities/getRelatedResourceDeleteDetails';\n\nimport ErrorDetail from '../ErrorDetail';\n\nconst requiredField = (props) => {\n  const { name, username, image } = props;\n  if (!name && !username && !image) {\n    return new Error(\n      `One of 'name', 'username' or 'image' is required by ItemToDelete component.`\n    );\n  }\n  if (name) {\n    PropTypes.checkPropTypes(\n      {\n        name: PropTypes.string,\n      },\n      { name: props.name },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  if (username) {\n    PropTypes.checkPropTypes(\n      {\n        username: PropTypes.string,\n      },\n      { username: props.username },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  if (image) {\n    PropTypes.checkPropTypes(\n      {\n        image: PropTypes.string,\n      },\n      { image: props.image },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  return null;\n};\n\nconst ToolbarDeleteButton = ({\n  itemsToDelete,\n  pluralizedItemName = 'Items',\n  onDelete,\n  errorMessage = 'Error while deleting',\n  deleteDetailsRequests = [],\n  cannotDelete = (item) => !item,\n}) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [deleteDetails, setDeleteDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [deleteMessageError, setDeleteMessageError] = useState('');\n  const handleDelete = () => {\n    onDelete();\n    toggleModal();\n  };\n\n  const toggleModal = async (isOpen) => {\n    setIsLoading(true);\n    setDeleteDetails(null);\n    if (\n      isOpen &&\n      itemsToDelete.length === 1 &&\n      deleteDetailsRequests?.length > 0\n    ) {\n      const { results, error } = await getRelatedResourceDeleteCounts(\n        deleteDetailsRequests\n      );\n\n      if (error) {\n        setDeleteMessageError(error);\n      } else {\n        setDeleteDetails(results);\n      }\n    }\n    setIsLoading(false);\n    setIsModalOpen(isOpen);\n  };\n\n  const renderTooltip = () => {\n    const itemsUnableToDelete = itemsToDelete\n      .filter(cannotDelete)\n      .map((item) => item.name || item.username)\n      .join(', ');\n\n    if (itemsToDelete.some(cannotDelete)) {\n      return (\n        <div>\n          {errorMessage ? (\n            <>\n              <span>{errorMessage}</span>\n              <span>{`: ${itemsUnableToDelete}`}</span>\n            </>\n          ) : (\n            `You do not have permission to delete ${pluralizedItemName}: ${itemsUnableToDelete}`\n          )}\n        </div>\n      );\n    }\n    if (itemsToDelete.length) {\n      return 'Delete';\n    }\n    return 'Select a plan to delete';\n  };\n\n  const modalTitle = `Delete ${pluralizedItemName}?`;\n\n  const isDisabled =\n    itemsToDelete.length === 0 || itemsToDelete.some(cannotDelete);\n\n  if (deleteMessageError) {\n    return (\n      <AlertModal\n        isOpen={!!deleteMessageError}\n        title={'Error!'}\n        onClose={() => {\n          toggleModal(false);\n          setDeleteMessageError();\n        }}\n      >\n        <ErrorDetail error={deleteMessageError.detail} />\n      </AlertModal>\n    );\n  }\n\n  return (\n    <>\n      <Tooltip content={renderTooltip()} position=\"top\">\n        <div>\n          <Button\n            variant=\"secondary\"\n            ouiaId=\"delete-button\"\n            spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n            aria-label={'Delete'}\n            onClick={() => toggleModal(true)}\n            isDisabled={isDisabled}\n          >\n            {'Delete'}\n          </Button>\n        </div>\n      </Tooltip>\n\n      {isModalOpen && (\n        <AlertModal\n          variant=\"danger\"\n          title={modalTitle}\n          isOpen={isModalOpen}\n          onClose={() => toggleModal(false)}\n          actions={[\n            <Button\n              ouiaId=\"delete-modal-confirm\"\n              key=\"delete\"\n              variant=\"danger\"\n              aria-label={'confirm delete'}\n              isDisabled={Boolean(deleteDetails)}\n              onClick={handleDelete}\n            >\n              {'Delete'}\n            </Button>,\n            <Button\n              key=\"cancel\"\n              variant=\"link\"\n              aria-label={'cancel delete'}\n              onClick={() => toggleModal(false)}\n            >\n              {'Cancel'}\n            </Button>,\n          ]}\n        >\n          <div>{'This action will delete the following:'}</div>\n          {itemsToDelete.map((item) => (\n            <span key={item.id}>\n              <strong>{item.name || item.username || item.image}</strong>\n              <br />\n            </span>\n          ))}\n        </AlertModal>\n      )}\n    </>\n  );\n};\n\nToolbarDeleteButton.propTypes = {\n  itemsToDelete: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: requiredField,\n      username: requiredField,\n      image: requiredField,\n    })\n  ).isRequired,\n  pluralizedItemName: PropTypes.string,\n  onDelete: PropTypes.func.isRequired,\n  errorMessage: PropTypes.string,\n  warningMessage: PropTypes.node,\n  deleteDetailsRequests: PropTypes.array,\n  cannotDelete: PropTypes.func,\n  deleteMessage: PropTypes.string,\n};\n\nexport default ToolbarDeleteButton;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport { Button, Gallery, PaginationVariant } from '@patternfly/react-core';\n\nimport {\n  deletePlan,\n  preflightRequest,\n  readPlanOptions,\n  readPlans,\n} from '../../../Api/';\nimport FilterableToolbar from '../../../Components/Toolbar';\nimport ApiErrorState from '../../../Components/ApiErrorState';\nimport LoadingState from '../../../Components/LoadingState';\nimport EmptyState from '../../../Components/EmptyState';\nimport EmptyList from '../../../Components/EmptyList';\nimport Pagination from '../../../Components/Pagination';\nimport PlanCard from './ListItem';\nimport { useQueryParams } from '../../../Utilities/useQueryParams';\nimport { savingsPlanner } from '../../../Utilities/constants';\nimport { notAuthorizedParams } from '../../../Utilities/constants';\n\nimport ToolbarDeleteButton from '../../../Components/Toolbar/ToolbarDeleteButton';\nimport useSelected from '../../../Utilities/useSelected';\nimport useRequest, { useDeleteItems } from '../../../Utilities/useRequest';\nimport ErrorDetail from '../../../Components/ErrorDetail';\nimport AlertModal from '../../../Components/AlertModal';\nimport { getQSConfig } from '../../../Utilities/qs';\n\nconst PageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 76px);\n`;\n\nconst Footer = styled.div`\n  flex-shrink: 0;\n`;\n\nconst FlexMain = styled(Main)`\n  flex-grow: 1;\n`;\nconst qsConfig = getQSConfig(\n  'savings-planner',\n  { ...savingsPlanner.defaultParams },\n  ['limit', 'offset']\n);\n\nconst List = () => {\n  const history = useHistory();\n  const { pathname } = useLocation();\n\n  // params from toolbar/searchbar\n  const { queryParams, setFromPagination, setFromToolbar } =\n    useQueryParams(qsConfig);\n\n  const [preflightError, setPreFlightError] = useState(null);\n\n  const {\n    result: { options },\n    error,\n    isSuccess,\n    request: fetchOptions,\n  } = useRequest(\n    useCallback(async () => {\n      await preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n      const response = await readPlanOptions();\n      return { options: response };\n    }, [queryParams]),\n    { options: {} }\n  );\n\n  const {\n    result: { data, rbac, total_count },\n    error: itemsError,\n    isLoading: itemsIsLoading,\n    isSuccess: itemsIsSuccess,\n    request: fetchEndpoints,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await readPlans({ params: queryParams });\n      return {\n        data: response.items,\n        rbac: response.rbac,\n        total_count: response.meta.total_count,\n      };\n    }, [queryParams]),\n    {\n      data: [],\n      itemsError,\n      itemsIsSuccess,\n      itemsIsLoading,\n    }\n  );\n\n  const combinedOptions = {\n    ...options,\n    name: [{ key: 'name', value: null }],\n  };\n\n  useEffect(() => {\n    fetchOptions();\n    fetchEndpoints();\n  }, [queryParams]);\n\n  const canWrite =\n    itemsIsSuccess &&\n    (rbac?.perms?.write === true || rbac?.perms?.all === true);\n\n  const { selected, handleSelect, setSelected } = useSelected(data);\n\n  const {\n    isLoading: deleteLoading,\n    deletionError,\n    deleteItems: deleteItems,\n    clearDeletionError,\n  } = useDeleteItems(\n    useCallback(async () => {\n      return Promise.all(selected.map((plan) => deletePlan({ id: plan.id })));\n    }, [selected])\n  );\n\n  const handleDelete = async () => {\n    await deleteItems();\n    setSelected([]);\n    fetchEndpoints();\n  };\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  const renderContent = () => {\n    if (preflightError) return <EmptyState {...preflightError} />;\n\n    if (error) return <ApiErrorState message={error.error} />;\n\n    if (itemsIsLoading || deleteLoading) return <LoadingState />;\n\n    if (\n      itemsIsSuccess &&\n      data.length === 0 &&\n      !(itemsIsLoading || deleteLoading)\n    )\n      return (\n        <EmptyList\n          label={'Add plan'}\n          title={'No plans found'}\n          message={\n            canWrite\n              ? 'Update the applied filters or add a new plan.'\n              : 'Update the applied filters.'\n          }\n          canAdd={canWrite}\n          path={`${pathname}/add`}\n        />\n      );\n\n    if (itemsIsSuccess && !(itemsIsLoading || deleteLoading))\n      return (\n        <Gallery\n          hasGutter\n          minWidths={{\n            sm: '307px',\n            md: '307px',\n            lg: '307px',\n            xl: '307px',\n            '2xl': '307px',\n          }}\n        >\n          {isSuccess &&\n            itemsIsSuccess &&\n            data.map((datum) => (\n              <PlanCard\n                key={datum.id}\n                isSuccess={itemsIsSuccess}\n                selected={selected}\n                plan={datum}\n                handleSelect={handleSelect}\n                canWrite={canWrite}\n                options={options}\n              />\n            ))}\n        </Gallery>\n      );\n\n    return <></>;\n  };\n\n  return (\n    <PageContainer>\n      <PageHeader>\n        <PageHeaderTitle title={'Savings Planner'} />\n        <FilterableToolbar\n          categories={combinedOptions}\n          filters={queryParams}\n          qsConfig={qsConfig}\n          setFilters={setFromToolbar}\n          additionalControls={[\n            ...(canWrite\n              ? [\n                  <Button\n                    key=\"add-plan-button\"\n                    variant=\"primary\"\n                    aria-label=\"Add plan\"\n                    onClick={() => {\n                      history.push({\n                        pathname: `${pathname}/add`,\n                      });\n                    }}\n                  >\n                    Add plan\n                  </Button>,\n                ]\n              : []),\n            canWrite && isSuccess && data.length > 0 && (\n              <ToolbarDeleteButton\n                key=\"delete-plan-button\"\n                onDelete={handleDelete}\n                itemsToDelete={selected}\n                pluralizedItemName={'Savings plan'}\n              />\n            ),\n          ]}\n          pagination={\n            itemsIsSuccess && data.length > 0 ? (\n              <Pagination\n                count={total_count}\n                params={{\n                  limit: parseInt(queryParams.limit),\n                  offset: parseInt(queryParams.offset),\n                }}\n                qsConfig={qsConfig}\n                setPagination={setFromPagination}\n                isCompact\n              />\n            ) : (\n              <div></div>\n            )\n          }\n        />\n      </PageHeader>\n      <FlexMain>{renderContent()}</FlexMain>\n      {data.length > 0 && !(itemsIsLoading || deleteLoading) && (\n        <Footer>\n          <Pagination\n            count={total_count}\n            params={{\n              limit: parseInt(queryParams.limit),\n              offset: parseInt(queryParams.offset),\n            }}\n            qsConfig={qsConfig}\n            setPagination={setFromPagination}\n            variant={PaginationVariant.bottom}\n          />\n        </Footer>\n      )}\n      {deletionError && (\n        <AlertModal\n          aria-label={'Deletion error'}\n          isOpen={deletionError}\n          onClose={clearDeletionError}\n          title={'Error'}\n          variant=\"error\"\n        >\n          {'Failed to delete one or more plans.'}\n          <ErrorDetail error={deletionError.detail} />\n        </AlertModal>\n      )}\n    </PageContainer>\n  );\n};\n\nexport default List;\n","import { useState } from 'react';\n\n/**\n * useSelected hook provides a way to read and update a selected list\n * Param: array of list items\n * Returns: {\n *  selected: array of selected list items\n *  isAllSelected: boolean that indicates if all items are selected\n *  handleSelect: function that adds and removes items from selected list\n *  setSelected: setter function\n * }\n */\n\nexport default function useSelected(list = []) {\n  const [selected, setSelected] = useState([]);\n  const isAllSelected = selected.length > 0 && selected.length === list.length;\n\n  const handleSelect = (row) => {\n    if (selected.some((s) => s.id === row.id)) {\n      setSelected((prevState) => [...prevState.filter((i) => i.id !== row.id)]);\n    } else {\n      setSelected((prevState) => [...prevState, row]);\n    }\n  };\n  return { selected, isAllSelected, handleSelect, setSelected };\n}\n","export const actions = {\n  SET_NAME: 'SET_NAME',\n  SET_CATEGORY: 'SET_CATEGORY',\n  SET_DESCRIPTION: 'SET_DESCRIPTION',\n  SET_MANUAL_TIME: 'SET_MANUAL_TIME',\n  SET_HOSTS: 'SET_HOSTS',\n  SET_FREQUENCY_PERIOD: 'SET_FREQUENCY_PERIOD',\n  SET_TASKS: 'SET_TASKS',\n  SET_TEMPLATE_ID: 'SET_TEMPLATE_ID',\n};\n","import { useReducer } from 'react';\n\nimport { actions } from './constants';\n\nconst formatPayload = (data) => {\n  data.tasks = data.tasks.map((task, index) => ({\n    task,\n    task_order: index + 1,\n  }));\n\n  if (!data.hosts || data.hosts === '') {\n    data.hosts = 1;\n  }\n\n  // these two are fields the api expects but we don't\n  // have form elements for in the MVP.\n  data.hourly_rate = 50;\n  data.frequency_per_period = 1;\n\n  return data;\n};\n\nconst convertTasks = (tasks = []) => {\n  if (tasks?.length) {\n    return tasks\n      .sort((a, b) => a.task_order - b.task_order)\n      .map(({ task }) => task);\n  }\n  return undefined;\n};\n\nconst usePlanData = (initial) => {\n  const formReducer = (state, { type, value }) => {\n    switch (type) {\n      /* v1 api reducers */\n      case actions.SET_NAME:\n        return {\n          ...state,\n          name: value,\n        };\n      case actions.SET_CATEGORY:\n        return {\n          ...state,\n          category: value,\n        };\n      case actions.SET_DESCRIPTION:\n        return {\n          ...state,\n          description: value,\n        };\n      case actions.SET_MANUAL_TIME:\n        return {\n          ...state,\n          manual_time: value,\n        };\n\n      case actions.SET_HOSTS:\n        return {\n          ...state,\n          hosts: value,\n        };\n      case actions.SET_FREQUENCY_PERIOD:\n        return {\n          ...state,\n          frequency_period: value,\n        };\n      case actions.SET_TASKS:\n        return {\n          ...state,\n          tasks: value,\n        };\n      case actions.SET_TEMPLATE_ID:\n        return {\n          ...state,\n          template_id: value,\n        };\n      default:\n        throw new Error(\n          `usePlanData reducer action type ${type} was not found.`\n        );\n    }\n  };\n\n  const [formData, dispatch] = useReducer(formReducer, {\n    name: initial?.name || '',\n    category: initial?.category || 'system',\n    description: initial?.description || '',\n    manual_time: initial?.manual_time || 240,\n    hosts: initial?.hosts || 1,\n    frequency_period: initial?.frequency_period || 'weekly',\n    tasks: convertTasks(initial?.tasks) || [],\n    template_id: initial?.template_id || -2,\n  });\n\n  return {\n    formData,\n    requestPayload: formatPayload({ ...formData }),\n    dispatch,\n  };\n};\n\nexport default usePlanData;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Form,\n  FormGroup,\n  Grid,\n  Select,\n  SelectOption,\n  TextInput,\n  NumberInput,\n} from '@patternfly/react-core';\n\nimport { actions } from '../../../constants';\n\nimport { isPositiveNum } from '../../../../../../Utilities/helpers';\n\nconst Details = ({ options, formData, dispatch }) => {\n  const { name, category, description, manual_time, hosts, frequency_period } =\n    formData;\n\n  const [categoryIsOpen, setCategoryIsOpen] = useState(false);\n  const [manualTimeIsOpen, setManualTimeIsOpen] = useState(false);\n  const [frequencyPeriodIsOpen, setFrequencyPeriodIsOpen] = useState(false);\n\n  return (\n    <Form>\n      {options?.data && (\n        <Grid hasGutter md={6}>\n          <FormGroup\n            label=\"What do you want to automate?\"\n            isRequired\n            fieldId=\"name-field\"\n          >\n            <TextInput\n              isRequired\n              placeholder=\"Example: Provision NGINX server\"\n              type=\"text\"\n              id=\"name-field\"\n              name=\"name\"\n              value={name}\n              onChange={(newName) =>\n                dispatch({\n                  type: actions.SET_NAME,\n                  value: newName,\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup label=\"What type of task is it?\" fieldId=\"category-field\">\n            <Select\n              id=\"category-field\"\n              isOpen={categoryIsOpen}\n              variant={'single'}\n              aria-label={'Plan category selector'}\n              maxHeight={390}\n              onToggle={() => setCategoryIsOpen(!categoryIsOpen)}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_CATEGORY,\n                  value: selection,\n                });\n                setCategoryIsOpen(false);\n              }}\n              selections={category}\n            >\n              {(options.data?.category || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n          <FormGroup\n            label=\"Enter a description of your automation plan\"\n            fieldId=\"description-field\"\n          >\n            <TextInput\n              type=\"text\"\n              placeholder=\"Place description here\"\n              id=\"description-field\"\n              name=\"description\"\n              value={description}\n              onChange={(newDescription) =>\n                dispatch({\n                  type: actions.SET_DESCRIPTION,\n                  value: newDescription,\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"How long does it take to do this manually?\"\n            fieldId=\"manual-time-field\"\n          >\n            <Select\n              id=\"manual-time-field\"\n              isOpen={manualTimeIsOpen}\n              variant={'single'}\n              placeholderText=\"Select amount\"\n              aria-label={'Plan time selector'}\n              onToggle={() => setManualTimeIsOpen(!manualTimeIsOpen)}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_MANUAL_TIME,\n                  value: selection,\n                });\n                setManualTimeIsOpen(false);\n              }}\n              selections={manual_time}\n            >\n              {(options.data?.manual_time || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n          <FormGroup\n            label=\"How many hosts do you plan to run this on?\"\n            fieldId=\"hosts-field\"\n          >\n            <NumberInput\n              inputAriaLabel=\"Number of hosts\"\n              widthChars={8}\n              onChange={(event) => {\n                if (\n                  isPositiveNum(event.target.value) ||\n                  event.target.value.length === 0\n                ) {\n                  dispatch({\n                    type: actions.SET_HOSTS,\n                    value: parseInt(event.target.value),\n                  });\n                }\n              }}\n              onMinus={() =>\n                dispatch({\n                  type: actions.SET_HOSTS,\n                  value: isPositiveNum(hosts) ? hosts - 1 : 0,\n                })\n              }\n              onPlus={() =>\n                dispatch({\n                  type: actions.SET_HOSTS,\n                  value: isPositiveNum(hosts) ? hosts + 1 : 1,\n                })\n              }\n              id=\"hosts-field\"\n              name=\"hosts\"\n              value={hosts}\n              min={0}\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"How often do you do this?\"\n            fieldId=\"frequency-period-field\"\n          >\n            <Select\n              id=\"frequency-period-field\"\n              isOpen={frequencyPeriodIsOpen}\n              variant={'single'}\n              placeholderText=\"Select frequency period\"\n              aria-label={'Plan frequency period selector'}\n              onToggle={() => {\n                setFrequencyPeriodIsOpen(!frequencyPeriodIsOpen);\n              }}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_FREQUENCY_PERIOD,\n                  value: selection,\n                });\n                setFrequencyPeriodIsOpen(false);\n              }}\n              selections={frequency_period}\n            >\n              {(options.data?.frequency_period || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n        </Grid>\n      )}\n    </Form>\n  );\n};\n\nDetails.propTypes = {\n  options: PropTypes.object.isRequired,\n  formData: PropTypes.object.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Details;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  DataList,\n  DataListAction,\n  DataListItem,\n  DataListCell,\n  DataListItemRow,\n  DataListControl,\n  DataListDragButton,\n  DataListItemCells,\n  Form,\n  FormGroup,\n  Grid,\n  InputGroup,\n  TextInput,\n  Title,\n} from '@patternfly/react-core';\nimport { PlusIcon, TimesIcon } from '@patternfly/react-icons';\n\nimport { actions } from '../../../constants';\n\nconst TaskSection = styled.div`\n  margin-top: 20px;\n`;\n\nconst TaskTitle = styled(Title)`\n  margin-bottom: 10px;\n`;\n\nconst TaskDeleteButton = styled(Button)`\n  padding: 0 16px;\n`;\n\nconst DeleteTaskActionSection = styled(DataListAction)`\n  padding: 6px 0;\n`;\n\nconst TaskRow = styled(DataListItemRow)`\n  align-items: center;\n`;\n\nconst Tasks = ({ tasks, dispatch }) => {\n  const setTasks = (val) => {\n    dispatch({ type: actions.SET_TASKS, value: val });\n  };\n\n  const [taskToAdd, setTaskToAdd] = useState('');\n\n  const [liveText, setLiveText] = useState('');\n  const [id, setId] = useState('');\n\n  const onDragStart = (newId) => {\n    setId(newId);\n    setLiveText(`Dragging started for task ${newId}.`);\n  };\n\n  const onDragMove = (oldIndex, newIndex) => {\n    setLiveText(\n      `Dragging task ${id}.  Task ${oldIndex} is now task ${newIndex}.`\n    );\n  };\n\n  const onDragCancel = () => {\n    setLiveText('Dragging cancelled. Tasks list order is unchanged.');\n  };\n\n  const onDragFinish = (newItemOrder) => {\n    setLiveText('Dragging finished');\n    setTasks(newItemOrder.map((val) => val.split('-').slice(0, -1).join('-')));\n  };\n\n  const appendTask = () => {\n    const trimmedTask = taskToAdd.trim();\n    if (trimmedTask !== '') {\n      setTasks([...tasks, trimmedTask]);\n      setTaskToAdd('');\n    }\n  };\n\n  const handleTextKeyDown = (e) => {\n    if (e.key && e.key === 'Enter') {\n      e.preventDefault();\n      appendTask();\n    }\n  };\n\n  const removeTask = (index) => {\n    setTasks(tasks.filter((t, idx) => idx !== index));\n  };\n\n  return (\n    <>\n      <Form>\n        <Grid hasGutter md={6}>\n          <FormGroup\n            label=\"What tasks do you need to accomplish this plan?\"\n            fieldId=\"task-field\"\n          >\n            <InputGroup>\n              <TextInput\n                placeholder=\"Enter a description of each task\"\n                type=\"text\"\n                id=\"task-field\"\n                name=\"task\"\n                value={taskToAdd}\n                onChange={(newTaskName) => setTaskToAdd(newTaskName)}\n                onKeyDown={handleTextKeyDown}\n              />\n              <Button\n                onClick={appendTask}\n                isDisabled={taskToAdd.trim() === ''}\n                variant=\"control\"\n                aria-label=\"Add task\"\n              >\n                <PlusIcon />\n              </Button>\n            </InputGroup>\n          </FormGroup>\n        </Grid>\n      </Form>\n      {tasks.length > 0 && (\n        <TaskSection>\n          <TaskTitle headingLevel=\"h4\" size=\"xl\">\n            Tasks\n          </TaskTitle>\n          <DataList\n            aria-label=\"Draggable list to reorder and remove tasks.\"\n            isCompact\n            onDragFinish={onDragFinish}\n            onDragStart={onDragStart}\n            onDragMove={onDragMove}\n            onDragCancel={onDragCancel}\n            itemOrder={tasks.map((val, idx) => `${val}-${idx}`)}\n          >\n            {tasks.map((task, index) => (\n              <DataListItem\n                aria-labelledby={`cell-${index + 1}`}\n                id={`${task}-${index}`}\n                key={index + 1}\n              >\n                <TaskRow>\n                  <DataListControl>\n                    <DataListDragButton\n                      aria-label=\"Reorder\"\n                      aria-labelledby={`cell-${index + 1}`}\n                      aria-describedby=\"Press space or enter to begin dragging, and use the arrow keys to navigate up or down. Press enter to confirm the drag, or any other key to cancel the drag operation.\"\n                      aria-pressed=\"false\"\n                    />\n                  </DataListControl>\n                  <DataListItemCells\n                    dataListCells={[\n                      <DataListCell key={index + 1}>\n                        <span id={`cell-${index + 1}`}>{`${\n                          index + 1\n                        }. ${task}`}</span>\n                      </DataListCell>,\n                    ]}\n                  />\n                  <DeleteTaskActionSection aria-label=\"Actions\">\n                    <TaskDeleteButton\n                      onClick={() => removeTask(index)}\n                      variant=\"plain\"\n                      aria-label=\"Delete\"\n                    >\n                      <TimesIcon />\n                    </TaskDeleteButton>\n                  </DeleteTaskActionSection>\n                </TaskRow>\n              </DataListItem>\n            ))}\n          </DataList>\n        </TaskSection>\n      )}\n      <div className=\"pf-screen-reader\" aria-live=\"assertive\">\n        {liveText}\n      </div>\n    </>\n  );\n};\n\nTasks.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Tasks;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { parse, stringify } from 'query-string';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport {\n  Button,\n  Form,\n  FormGroup,\n  PaginationVariant,\n} from '@patternfly/react-core';\nimport {\n  TableComposable,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n} from '@patternfly/react-table';\n\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nimport LoadingState from '../../../../../../Components/LoadingState';\nimport EmptyState from '../../../../../../Components/EmptyState';\nimport NoResults from '../../../../../../Components/NoResults';\nimport ApiErrorState from '../../../../../../Components/ApiErrorState';\nimport Pagination from '../../../../../../Components/Pagination';\n\nimport { notAuthorizedParams } from '../../../../../../Utilities/constants';\nimport { useQueryParams } from '../../../../../../Utilities/useQueryParams';\nimport { getQSConfig } from '../../../../../../Utilities/qs';\n\nimport {\n  preflightRequest,\n  readJobExplorer,\n  readJobExplorerOptions,\n} from '../../../../../../Api/';\n\nimport FilterableToolbar from '../../../../../../Components/Toolbar/';\n\nimport { actions } from '../../../constants';\nimport useRequest from '../../../../../../Utilities/useRequest';\n\nconst ListFooter = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst initialQueryParams = {\n  group_by: 'template',\n  limit: 10,\n  group_by_time: false,\n  offset: 0,\n  sort_options: 'name',\n  sort_order: 'asc',\n  sort_by: 'name:asc',\n};\nconst qsConfig = getQSConfig('job-explorer', { ...initialQueryParams }, [\n  'limit',\n  'offset',\n]);\n\nconst Templates = ({ template_id, dispatch: formDispatch }) => {\n  const { pathname, hash, search } = useLocation();\n  const history = useHistory();\n  const {\n    queryParams,\n    setFromPagination,\n    setFromToolbar,\n    dispatch: queryParamsDispatch,\n  } = useQueryParams(qsConfig);\n\n  const [preflightError, setPreFlightError] = useState(null);\n\n  const {\n    result: { options },\n    error,\n    isSuccess,\n    request: fetchOptions,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await readJobExplorerOptions({ params: queryParams });\n      return { options: response };\n    }, [queryParams]),\n    { options: {} }\n  );\n\n  const {\n    result: { templates, count },\n    error: templatesIsError,\n    isLoading: templatesIsLoading,\n    isSuccess: templatesIsSuccess,\n    request: fetchEndpoints,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await readJobExplorer({ params: queryParams });\n      return {\n        templates: response.items,\n        count: response.meta.count,\n      };\n    }, [queryParams]),\n    {\n      templates: [],\n      count: 0,\n      templatesIsError,\n      templatesIsLoading,\n      templatesIsSuccess,\n    }\n  );\n\n  const onSort = (_ev, _idx, dir) => {\n    queryParamsDispatch({\n      type: 'SET_SORT_ORDER',\n      value: { sort_order: dir },\n    });\n  };\n\n  const sortParams = {\n    sort: {\n      sortBy: {\n        direction: queryParams.sort_order,\n      },\n      onSort,\n    },\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'savings-planner', secondaryNav: true });\n\n    preflightRequest().catch((error) => {\n      setPreFlightError({ preflightError: error });\n    });\n  }, []);\n\n  const initialSearchParams = parse(search, {\n    arrayFormat: 'bracket',\n    parseBooleans: true,\n    parseNumbers: true,\n  });\n\n  useEffect(() => {\n    history.replace({\n      pathname,\n      hash,\n      search: stringify(\n        { ...initialQueryParams, ...initialSearchParams },\n        { arrayFormat: 'bracket' }\n      ),\n    });\n  }, []);\n\n  useEffect(() => {\n    fetchOptions();\n    fetchEndpoints();\n  }, [queryParams]);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n  return (\n    <>\n      {preflightError && <EmptyState {...preflightError} />}\n\n      {isSuccess && (\n        <Form>\n          <FormGroup\n            label=\"Link a template to this plan:\"\n            fieldId=\"template-link-field\"\n          >\n            <FilterableToolbar\n              hideQuickDateRange\n              hideSortOptions\n              categories={options}\n              filters={queryParams}\n              qsConfig={qsConfig}\n              setFilters={setFromToolbar}\n              pagination={\n                <Pagination\n                  count={count}\n                  params={{\n                    limit: queryParams.limit,\n                    offset: queryParams.offset,\n                  }}\n                  qsConfig={qsConfig}\n                  setPagination={setFromPagination}\n                  isCompact\n                />\n              }\n            />\n            {error && <ApiErrorState message={error.error} />}\n            {templatesIsLoading && <LoadingState />}\n            {templatesIsSuccess && templates.length <= 0 && <NoResults />}\n            {templatesIsSuccess && templates.length > 0 && (\n              <TableComposable\n                aria-label=\"Template link table\"\n                variant=\"compact\"\n              >\n                <Thead>\n                  <Tr>\n                    <Th />\n                    <Th {...sortParams}>Name</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {templates.map(({ id, name }) => (\n                    <Tr key={`template-detail-${id}`}>\n                      <Td\n                        data-testid={`radio-${id}`}\n                        key={`template-detail-${id}-radio-td`}\n                        select={{\n                          rowIndex: id,\n                          onSelect: (event, isSelected, value) =>\n                            formDispatch({\n                              type: actions.SET_TEMPLATE_ID,\n                              value,\n                            }),\n                          isSelected: template_id === id,\n                          variant: 'radio',\n                        }}\n                      />\n                      <Td>{name}</Td>\n                    </Tr>\n                  ))}\n                </Tbody>\n              </TableComposable>\n            )}\n            <ListFooter>\n              <div>\n                {template_id !== -2 && (\n                  <Button\n                    key=\"clear-selection-button\"\n                    variant=\"link\"\n                    aria-label=\"Clear selection\"\n                    onClick={() => {\n                      formDispatch({\n                        type: actions.SET_TEMPLATE_ID,\n                        value: -2,\n                      });\n                    }}\n                  >\n                    Clear selection\n                  </Button>\n                )}\n              </div>\n              <Pagination\n                count={count}\n                params={{\n                  limit: queryParams.limit,\n                  offset: queryParams.offset,\n                }}\n                qsConfig={qsConfig}\n                setPagination={setFromPagination}\n                variant={PaginationVariant.bottom}\n              />\n            </ListFooter>\n          </FormGroup>\n        </Form>\n      )}\n    </>\n  );\n};\n\nTemplates.propTypes = {\n  template_id: PropTypes.number.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Templates;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory, useLocation, Redirect } from 'react-router-dom';\n\nimport {\n  Button,\n  Tooltip,\n  Wizard,\n  WizardFooter,\n  WizardContextConsumer,\n} from '@patternfly/react-core';\n\nimport { Paths } from '../../../../paths';\nimport useRequest from '../../../../Utilities/useRequest';\nimport usePlanData from '../usePlanData';\n\nimport { createPlan, updatePlan } from '../../../../Api/';\n\nimport AlertModal from '../../../../Components/AlertModal/AlertModal';\nimport ErrorDetail from '../../../../Components/ErrorDetail/ErrorDetail';\n\nimport Details from './Steps/Details';\nimport Tasks from './Steps/Tasks';\nimport Templates from './Steps/Templates';\n\nconst Form = ({ title, options, data = {} }) => {\n  const history = useHistory();\n  const { hash, pathname } = useLocation();\n  const [startStep, setStartStep] = useState(null);\n\n  const {\n    result: { data: apiResponse },\n    error,\n    request: setData,\n  } = useRequest(\n    useCallback(async (requestPayload, id) => {\n      if (typeof requestPayload !== 'undefined') {\n        if (id) {\n          data = await updatePlan({\n            id: id,\n            params: requestPayload,\n          });\n        } else {\n          data = await createPlan({\n            params: requestPayload,\n          });\n        }\n      }\n      return {\n        data,\n      };\n    }, []),\n    {\n      apiResponse: data,\n    }\n  );\n\n  const { formData, requestPayload, dispatch } = usePlanData(data);\n\n  const steps = [\n    {\n      step_number: 1,\n      id: 'details',\n      name: 'Details',\n      component: (\n        <Details options={options} formData={formData} dispatch={dispatch} />\n      ),\n    },\n    {\n      step_number: 2,\n      id: 'tasks',\n      name: 'Tasks',\n      component: <Tasks tasks={formData.tasks} dispatch={dispatch} />,\n    },\n    {\n      step_number: 3,\n      id: 'link_template',\n      name: 'Link template',\n      component: (\n        <Templates template_id={formData.template_id} dispatch={dispatch} />\n      ),\n      nextButtonText: 'Save',\n    },\n  ];\n\n  const CustomFooter = (\n    <WizardFooter>\n      <WizardContextConsumer>\n        {({ activeStep, onNext, onBack, onClose }) => {\n          if (activeStep.step_number !== 3) {\n            return (\n              <>\n                <Button variant=\"primary\" type=\"submit\" onClick={onNext}>\n                  Next\n                </Button>\n                {activeStep.step_number !== 1 && (\n                  <Button variant=\"secondary\" onClick={onBack}>\n                    Back\n                  </Button>\n                )}\n                <Button variant=\"link\" onClick={onClose}>\n                  Cancel\n                </Button>\n              </>\n            );\n          }\n          // Final step buttons\n          return (\n            <>\n              <Tooltip\n                content={\n                  !formData.name || !formData.name === ''\n                    ? 'In order to save this plan, you must enter a name in the details step'\n                    : 'Save this plan'\n                }\n                position=\"top\"\n              >\n                <div>\n                  <Button\n                    variant=\"primary\"\n                    type=\"submit\"\n                    onClick={onSave}\n                    isDisabled={!formData.name || !formData.name === ''}\n                  >\n                    Save\n                  </Button>\n                </div>\n              </Tooltip>\n              <Button variant=\"secondary\" onClick={onBack}>\n                Back\n              </Button>\n              <Button variant=\"link\" onClick={onClose}>\n                Cancel\n              </Button>\n            </>\n          );\n        }}\n      </WizardContextConsumer>\n    </WizardFooter>\n  );\n\n  useEffect(() => {\n    if (pathname.indexOf('/add') === -1 && hash) {\n      setStartStep(steps.find((step) => `#${step.id}` === hash).step_number);\n    } else {\n      history.replace({\n        hash: 'details',\n      });\n      setStartStep(1);\n    }\n  }, []);\n\n  const onStepChange = (newStep) => {\n    history.replace({\n      hash: newStep.id,\n    });\n  };\n\n  const onSave = () => {\n    setData(requestPayload, data?.id);\n  };\n\n  const onClose = () => {\n    if (location.pathname.indexOf('/edit') !== -1) {\n      history.push({\n        pathname: `${Paths.savingsPlanner}/${data?.id}`,\n      });\n    } else {\n      history.push({\n        pathname: Paths.savingsPlanner,\n      });\n    }\n  };\n\n  const reset = () => {\n    setData();\n  };\n\n  return (\n    <>\n      {!error && apiResponse?.plan_created && (\n        <Redirect\n          to={{\n            pathname: `${Paths.savingsPlanner}/${\n              apiResponse.id || apiResponse.plan_created.id\n            }`,\n            state: { reload: true },\n          }}\n        />\n      )}\n      {startStep && (\n        <Wizard\n          navAriaLabel={`${title} steps`}\n          mainAriaLabel={`${title} content`}\n          steps={steps}\n          onGoToStep={onStepChange}\n          onNext={onStepChange}\n          onBack={onStepChange}\n          onSave={onSave}\n          onClose={onClose}\n          footer={CustomFooter}\n          startAtStep={startStep}\n          height=\"calc(100vh - 240px)\"\n        />\n      )}\n      {error && (\n        <AlertModal\n          isOpen={!!error}\n          onClose={() => reset()}\n          title={'Error'}\n          variant=\"error\"\n        >\n          {'There was an error saving the plan.'}\n          <ErrorDetail error={error.detail} />\n        </AlertModal>\n      )}\n    </>\n  );\n};\n\nForm.propTypes = {\n  title: PropTypes.string.isRequired,\n  options: PropTypes.object.isRequired,\n  data: PropTypes.object,\n};\n\nForm.defaultProps = {\n  data: {},\n};\n\nexport default Form;\n","export const jobExplorer = {\n  attributes: [\n    'id',\n    'status',\n    'job_type',\n    'started',\n    'finished',\n    'elapsed',\n    'created',\n    'cluster_name',\n    'org_name',\n    'most_failed_tasks',\n    'host_count',\n    'host_task_count',\n    'failed_host_count',\n    'unreachable_host_count',\n    'changed_host_count',\n    'ok_host_count',\n    'skipped_host_count',\n  ],\n  defaultParams: {\n    status: ['successful', 'failed'],\n    quick_date_range: 'last_30_days',\n    job_type: ['workflowjob', 'job'],\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    sort_by: 'created:desc',\n    sort_options: 'created',\n    sort_order: 'desc',\n    only_root_workflows_and_standalone_jobs: false,\n    limit: 5,\n    offset: 0,\n  },\n};\n\nexport const roi = {\n  defaultParams: {\n    status: ['successful'],\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    quick_date_range: 'roi_last_year',\n    job_type: ['job'],\n    sort_options: 'template_productivity_score',\n    sort_order: 'desc',\n    start_date: null,\n    end_date: null,\n    limit: 25,\n    only_root_workflows_and_standalone_jobs: true,\n    attributes: [\n      'successful_hosts_total',\n      'successful_elapsed_total',\n      'total_org_count',\n      'total_cluster_count',\n    ],\n    group_by: 'template',\n    group_by_time: false,\n  },\n};\n\nexport const organizationStatistics = {\n  defaultParams: {\n    status: [],\n    org_id: [],\n    quick_date_range: 'last_30_days',\n    limit: 5,\n    offset: 0,\n    job_type: ['workflowjob', 'job'],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    start_date: null,\n    end_date: null,\n  },\n};\n\nexport const clusters = {\n  defaultParams: {\n    status: ['successful', 'failed'],\n    quick_date_range: 'last_30_days',\n    job_type: ['workflowjob', 'job'],\n    group_by_time: true,\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    only_root_workflows_and_standalone_jobs: false,\n  },\n};\n\nexport const savingsPlanner = {\n  defaultParams: {\n    template_id: [],\n    inventory_id: [],\n    automation_status: [],\n    category: [],\n    frequency_period: [],\n    name: '',\n    limit: 10,\n    offset: 0,\n    sort_options: 'modified',\n    sort_order: 'desc',\n    sort_by: 'modified:desc',\n  },\n};\n\nexport const notAuthorizedParams = {\n  title: 'RBAC Access Denied',\n  description:\n    'User does not have privileges to perform this action. Contact your organization adminstrator(s) for more information.',\n};\n\nexport const arrayFields = [\n  'automation_status',\n  'attributes',\n  'cluster_id',\n  'category',\n  'frequency_period',\n  'host_id',\n  'host_status',\n  'inventory_id',\n  'job_type',\n  'status',\n  'org_id',\n  'template_id',\n];\n","export async function getRelatedResourceDeleteCounts(requests) {\n  const results = {};\n  let error = null;\n  let hasCount = false;\n\n  try {\n    await Promise.all(\n      requests.map(async ({ request, label }) => {\n        const {\n          items: { count },\n        } = await request();\n        if (count > 0) {\n          results[label] = count;\n          hasCount = true;\n        }\n      })\n    );\n  } catch (err) {\n    error = err;\n  }\n\n  return {\n    results: hasCount && results,\n    error,\n  };\n}\n\nexport const relatedResourceDeleteRequests = {\n  savingsPlan: (selected, readRecordApi) => [\n    {\n      request: async () =>\n        readRecordApi({\n          params: { id: [selected.id] },\n        }),\n      label: 'Plan',\n    },\n  ],\n};\n","import moment from 'moment';\n\n/*\n * isNumeric - return true if input is a real number\n */\nexport function isNumeric(val) {\n  if (val === 0 || val === '0') {\n    return true;\n  }\n\n  if (parseInt(val)) {\n    return true;\n  }\n\n  if (parseFloat(val)) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function isPositiveNum(val) {\n  return /^\\d+$/.test(val);\n}\n\nexport function trimStr(str) {\n  return str.toString().replace(/['\"]+/g, '');\n}\n\nexport function formatDateTime(dateTime) {\n  return moment(new Date(dateTime).toISOString()).format('M/D/YYYY h:mm:ssa');\n}\n\nexport function formatDate(date) {\n  return moment(date).format('YYYY-MM-DD');\n}\n\nexport function formatSeconds(seconds) {\n  return moment().startOf('day').seconds(seconds).format('H:mm:ss');\n}\n\nexport function getTotal(data) {\n  if (!data) {\n    return;\n  } else {\n    let total = 0;\n    data.forEach((datum) => {\n      total += parseInt(datum.count);\n    });\n    return total;\n  }\n}\n\nexport function formatPercentage(val) {\n  if (isNaN(val)) {\n    return;\n  }\n\n  return `${val}%`;\n}\n\nexport const capitalize = (s) => {\n  if (typeof s !== 'string') {\n    return '';\n  }\n\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport function calculateDelta(a, b) {\n  if (!isNumeric(a) || !isNumeric(b)) {\n    return 0;\n  }\n\n  // never return less than zero ...\n  if (b - a < 0) {\n    return 0;\n  }\n\n  return b - a;\n}\n\nexport function today(days = 0) {\n  const date = new Date();\n  date.setDate(date.getDate() + days);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n\nexport function convertMinsToMs(mins) {\n  if (!parseInt(mins)) {\n    return 0;\n  }\n\n  return mins * 60000;\n}\n\nexport function convertMsToMins(ms) {\n  if (!parseInt(ms)) {\n    return 0;\n  }\n\n  return ms / 60000;\n}\n\nexport function convertSecondsToMins(seconds) {\n  if (!parseInt(seconds)) {\n    return 0;\n  }\n\n  return seconds / 60;\n}\n\nexport function convertMinsToSeconds(mins) {\n  if (!parseInt(mins) || parseInt(mins) < 0) {\n    return 0;\n  }\n\n  return +parseInt(mins) * 60;\n}\n\nexport function convertSecondsToHours(seconds) {\n  if (!parseInt(seconds)) {\n    return 0;\n  }\n\n  return seconds / 3600;\n}\n\nexport function convertWithCommas(arr, key) {\n  const split = arr.reduce((strs, datum) => {\n    strs.push(datum[key]);\n    return strs;\n  }, []);\n  return split.join(', ');\n}\n\nexport function formatJobType(type) {\n  return type === 'job' ? 'Playbook run' : 'Workflow job';\n}\n\nexport function formatJobStatus(status) {\n  return status === 'successful' ? 'Success' : 'Failed';\n}\n\nexport function formatJobDetailsURL(baseURL, jobId) {\n  const subDirectory1 = 'job';\n  const subDirectory2 = 'details';\n  return `${baseURL}/#/${subDirectory1}/${jobId}/${subDirectory2}/`;\n}\n","/**\n * Returns queryset config with defaults, if needed\n * @param {string} namespace for appending to url querystring\n * @param {object} default params that are not handled with search (offset, limit and order_by)\n * @param {array} params that are number fields\n * @return {object} query param object\n */\nimport { arrayFields } from './constants';\n\nexport function getQSConfig(\n  namespace,\n  defaultParams = { offset: 1, limit: 5, sort_by: 'name' },\n  integerFields = ['offset', 'limit'],\n  dateFields = ['modified', 'created']\n) {\n  if (!namespace) {\n    throw new Error('a QS namespace is required');\n  }\n  // if order_by isn't passed, default to name\n  // if (!defaultParams.sort_by) {\n  //   defaultParams.sort_by = 'name:desc';\n  // }\n  return {\n    namespace,\n    defaultParams,\n    integerFields,\n    dateFields,\n  };\n}\n\n/**\n * Convert url query string to query param object\n * @param {object} qs config object (used for getting defaults, current query params etc.)\n * @param {string} url query string\n * @return {object} query param object\n */\nexport function parseQueryString(config, queryString) {\n  if (!queryString) {\n    return config.defaultParams || {};\n  }\n  const params = stringToObject(config, queryString);\n  return addDefaultsToObject(config, params);\n}\n\nfunction stringToObject(config, qs) {\n  const params = {};\n  qs.replace(/^\\?/, '')\n    .split('&')\n    .map((s) => s.split('='))\n    .forEach(([nsKey, rawValue]) => {\n      if (!nsKey || !namespaceMatches(config.namespace, nsKey)) {\n        return;\n      }\n      const key = config.namespace\n        ? decodeURIComponent(nsKey.substr(config.namespace.length + 1))\n        : decodeURIComponent(nsKey);\n      const value = parseValue(config, key, rawValue, qs);\n      params[key] = mergeParam(params[key], value);\n    });\n  return params;\n}\nexport { stringToObject as _stringToObject };\n\n/**\n * helper function to check the namespace of a param is what you expect\n * @param {string} namespace to append to params\n * @param {object} params object to append namespace to\n * @return {object} params object with namespaced keys\n */\nconst namespaceMatches = (namespace, fieldname) => {\n  if (!namespace) return !fieldname.includes('.');\n\n  return fieldname.startsWith(`${namespace}.`);\n};\n\nfunction parseValue(config, key, rawValue, qs) {\n  const searchParams = new URLSearchParams(qs);\n  if (config.integerFields && config.integerFields.some((v) => v === key)) {\n    return parseInt(rawValue, 10);\n  } else if (arrayFields && arrayFields.some((v) => v === key)) {\n    const nsKey = `${config.namespace}.${key}`;\n    const output = searchParams\n      .getAll(nsKey)\n      .filter((x, i, a) => a.indexOf(x) === i);\n    searchParams.delete[nsKey];\n    return output;\n  }\n  // TODO: parse dateFields into date format?\n  return decodeURIComponent(rawValue);\n}\n\nfunction addDefaultsToObject(config, params) {\n  return {\n    ...config.defaultParams,\n    ...params,\n  };\n}\nexport { addDefaultsToObject as _addDefaultsToObject };\n\n/**\n * Convert query param object to url query string\n * Used to encode params for interacting with the api\n * @param {object} query param object\n * @return {string} url query string\n */\nexport const encodeQueryString = (params) => {\n  if (!params) return '';\n\n  return Object.keys(params)\n    .sort()\n    .filter((key) => params[key] !== null)\n    .map((key) => [key, params[key]])\n    .map(([key, value]) => encodeValue(key, value))\n    .join('&');\n};\n\nfunction encodeValue(key, value) {\n  if (Array.isArray(value)) {\n    return value\n      .map((val) => `${encodeURIComponent(key)}=${encodeURIComponent(val)}`)\n      .join('&');\n  }\n  return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n}\n\n/**\n * Convert query param object to url query string, adding namespace and\n * removing defaults. Used to put into url bar after ui route\n * @param {object} qs config object for namespacing params, filtering defaults\n * @param {object} query param object\n * @param {object} any non-namespaced params to append\n * @return {string} url query string\n */\nexport const encodeNonDefaultQueryString = (\n  config,\n  params,\n  nonNamespacedParams = {}\n) => {\n  if (!params) return '';\n  const paramsWithoutDefaults = removeParams({}, params, config.defaultParams);\n  return encodeQueryString({\n    ...namespaceParams(config.namespace, paramsWithoutDefaults),\n    ...nonNamespacedParams,\n  });\n};\n\n/**\n * helper function to namespace params object\n * @param {string} namespace to append to params\n * @param {object} params object to append namespace to\n * @return {object} params object with namespaced keys\n */\nconst namespaceParams = (namespace, params) => {\n  if (!namespace) return params;\n\n  const namespaced = {};\n  Object.keys(params).forEach((key) => {\n    namespaced[`${namespace}.${key}`] = params[key];\n  });\n\n  return namespaced;\n};\n\n/**\n * Removes params from the search string and returns the updated list of params\n * @param {object} qs config object (used for getting defaults, current query params etc.)\n * @param {object} object with params from existing search\n * @param {object} object with new params to remove\n * @return {object} query param object\n */\nexport function removeParams(config, oldParams, paramsToRemove) {\n  const updated = {\n    ...config.defaultParams,\n  };\n  Object.keys(oldParams).forEach((key) => {\n    const value = removeParam(oldParams[key], paramsToRemove[key]);\n    if (value !== null) {\n      updated[key] = value;\n    }\n  });\n  return updated;\n}\n\nfunction removeParam(oldVal, deleteVal) {\n  if (oldVal === deleteVal) {\n    return null;\n  }\n  if (Array.isArray(deleteVal)) {\n    return deleteVal.reduce(removeParam, oldVal);\n  }\n  if (Array.isArray(oldVal)) {\n    const index = oldVal.indexOf(deleteVal);\n    if (index > -1) {\n      oldVal.splice(index, 1);\n    }\n    if (oldVal.length === 1) {\n      return oldVal[0];\n    }\n  }\n  return oldVal;\n}\n\n/**\n * Merge old and new params together, joining values into arrays where necessary\n * @param {object} namespaced params object of old params\n * @param {object} namespaced params object of new params\n * @return {object} merged namespaced params object\n */\nexport function mergeParams(oldParams, newParams) {\n  const merged = {};\n  Object.keys(oldParams).forEach((key) => {\n    merged[key] = mergeParam(oldParams[key], newParams[key]);\n  });\n  Object.keys(newParams).forEach((key) => {\n    if (!merged[key]) {\n      merged[key] = newParams[key];\n    }\n  });\n  return merged;\n}\n\nfunction mergeParam(oldVal, newVal) {\n  if (!newVal && newVal !== '') {\n    return oldVal;\n  }\n  if (!oldVal && oldVal !== '') {\n    return newVal;\n  }\n  let merged;\n  if (Array.isArray(oldVal)) {\n    merged = oldVal.concat(newVal);\n  } else {\n    merged = [oldVal].concat(newVal);\n  }\n  return dedupeArray(merged);\n}\n\nfunction dedupeArray(arr) {\n  const deduped = [...new Set(arr)];\n  if (deduped.length === 1) {\n    return deduped[0];\n  }\n  return deduped;\n}\n\n/**\n * Join old and new params together, replacing old values with new ones where\n * necessary\n * @param {object} namespaced params object of old params\n * @param {object} namespaced params object of new params\n * @return {object} joined namespaced params object\n */\nexport function replaceParams(oldParams, newParams) {\n  return {\n    ...oldParams,\n    ...newParams,\n  };\n}\n","import { useReducer } from 'react';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\n\nimport { formatDate } from '../Utilities/helpers';\nimport { parseQueryString } from './qs';\n\nexport const useQueryParams = (initial) => {\n  const history = useHistory();\n\n  const initialParams = {\n    ...initial,\n    ...(initial.sort_options &&\n      initial.sort_order && {\n        sort_by: `${initial.sort_options}:${initial.sort_order}`,\n      }),\n  };\n\n  const initialWithCalculatedParams =\n    history !== 'undefined' && history?.location\n      ? parseQueryString(initialParams, history.location.search)\n      : initialParams;\n  const paramsReducer = (state, { type, value }) => {\n    switch (type) {\n      /* v0 api reducers */\n      case 'SET_STARTDATE':\n        return { ...state, startDate: value };\n      case 'SET_ENDDATE':\n        return { ...state, endDate: value };\n      case 'SET_ID':\n        if (!parseInt(value)) {\n          const { id: ignored, ...rest } = state;\n          return rest;\n        }\n\n        return { ...state, id: parseInt(value) };\n      case 'SET_SEVERITY':\n        if (value.severity === '') {\n          const { severity: ignored, ...rest } = state;\n          return rest;\n        }\n\n        return { ...state, ...value };\n\n      /* v1 api reducers */\n      case 'SET_LIMIT':\n        return isNaN(value)\n          ? { ...state, limit: 5 } // Defaults back to 5\n          : { ...state, limit: parseInt(value) };\n      case 'SET_OFFSET':\n        return isNaN(value)\n          ? { ...state, offset: 0 } // Defaults back to 0\n          : { ...state, offset: parseInt(value) };\n      case 'SET_ATTRIBUTES':\n      case 'SET_JOB_TYPE':\n      case 'SET_STATUS':\n      case 'SET_ORG':\n      case 'SET_CLUSTER':\n      case 'SET_TEMPLATE':\n      case 'SET_AUTOMATION_STATUS':\n      case 'SET_CATEGORY':\n      case 'SET_FREQUENCY':\n      case 'SET_NAME':\n      case 'SET_ROOT_WORKFLOWS_AND_JOBS':\n      case 'SET_INVENTORY':\n        return { ...state, ...value };\n      case 'SET_QUICK_DATE_RANGE': {\n        let newState = { ...state };\n        if (value !== 'custom') {\n          newState = { ...newState, start_date: null, end_date: null };\n        }\n\n        newState = { ...newState, ...value };\n        return newState;\n      }\n\n      case 'SET_START_DATE':\n      case 'SET_END_DATE': {\n        let newValues = {};\n        Object.entries(value).forEach(([key, value]) => {\n          newValues[key] = formatDate(value);\n        });\n        return { ...state, ...newValues };\n      }\n\n      case 'SET_SORT_OPTIONS': {\n        return {\n          ...state,\n          sort_options: value.sort_options,\n          ...(state.sort_order && {\n            sort_by: `${value.sort_options}:${state.sort_order}`,\n          }), // Update sort by\n        };\n      }\n\n      case 'SET_SORT_ORDER': {\n        return {\n          ...state,\n          sort_order: value.sort_order,\n          ...(state.sort_options && {\n            sort_by: `${state.sort_options}:${value.sort_order}`,\n          }), // Update sort by\n        };\n      }\n\n      case 'REINITIALIZE':\n        return { ...value };\n      case 'RESET_FILTER':\n        return { ...initialWithCalculatedParams };\n      default:\n        throw new Error(`The query params reducer action (${type}) not found.`);\n    }\n  };\n\n  const [queryParams, dispatch] = useReducer(paramsReducer, {\n    ...initialWithCalculatedParams,\n  });\n\n  const actionMapper = {\n    status: 'SET_STATUS',\n    quick_date_range: 'SET_QUICK_DATE_RANGE',\n    job_type: 'SET_JOB_TYPE',\n    org_id: 'SET_ORG',\n    cluster_id: 'SET_CLUSTER',\n    template_id: 'SET_TEMPLATE',\n    sort_order: 'SET_SORT_ORDER',\n    sort_options: `SET_SORT_OPTIONS`,\n    start_date: 'SET_START_DATE',\n    end_date: 'SET_END_DATE',\n    automation_status: 'SET_AUTOMATION_STATUS',\n    category: 'SET_CATEGORY',\n    frequency_period: 'SET_FREQUENCY',\n    name: 'SET_NAME',\n    only_root_workflows_and_standalone_jobs: 'SET_ROOT_WORKFLOWS_AND_JOBS',\n    inventory_id: 'SET_INVENTORY',\n  };\n\n  return {\n    queryParams,\n    dispatch,\n    setFromToolbar: (varName, value = null) => {\n      if (!varName) {\n        dispatch({ type: 'RESET_FILTER' });\n      } else {\n        dispatch({ type: actionMapper[varName], value: { [varName]: value } });\n      }\n    },\n    setFromPagination: (offset, limit = null) => {\n      dispatch({ type: 'SET_OFFSET', value: offset });\n      if (limit) {\n        dispatch({ type: 'SET_LIMIT', value: limit });\n      }\n    },\n    /* v0 api usage after this line */\n    setSeverity: (severity) =>\n      dispatch({ type: 'SET_SEVERITY', value: { severity } }),\n    setEndDate: () => {\n      const endDate = moment().format('YYYY-MM-DD');\n      dispatch({ type: 'SET_ENDDATE', value: endDate });\n    },\n    setId: (value) => dispatch({ type: 'SET_ID', value }),\n    setStartDate: (days) => {\n      let startDate;\n      if (days === 7) {\n        startDate = moment().subtract(1, 'week').format('YYYY-MM-DD');\n      }\n\n      if (days === 14) {\n        startDate = moment().subtract(2, 'weeks').format('YYYY-MM-DD');\n      }\n\n      if (days === 31) {\n        startDate = moment().subtract(1, 'month').format('YYYY-MM-DD');\n      } else {\n        startDate = moment().subtract(days, 'days').format('YYYY-MM-DD');\n      }\n\n      dispatch({ type: 'SET_STARTDATE', value: startDate });\n    },\n    setStartDateAsString: (value) => dispatch({ type: 'SET_STARTDATE', value }),\n  };\n};\n","import { Paths } from '../paths';\nimport { stringify } from 'query-string';\n\nconst useRedirect = (history, path) => (query) => {\n  const search = stringify(query, { arrayFormat: 'bracket' });\n  history.push({\n    pathname: Paths[path],\n    search,\n  });\n};\n\nexport default useRedirect;\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PFPagination } from '@patternfly/react-core';\nimport { encodeNonDefaultQueryString, parseQueryString, } from '../../Utilities/qs';\nimport { useHistory } from 'react-router-dom';\nvar perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '15', value: 15 },\n    { title: '20', value: 20 },\n    { title: '25', value: 25 },\n];\nvar Pagination = function (_a) {\n    var _b = _a.count, count = _b === void 0 ? 0 : _b, qsConfig = _a.qsConfig, params = _a.params, setPagination = _a.setPagination, props = __rest(_a, [\"count\", \"qsConfig\", \"params\", \"setPagination\"]);\n    var offset = params.offset, limit = params.limit;\n    var currentPage = Math.floor(offset / limit + 1);\n    var returnOffsetVal = function (page) { return (page - 1) * limit; };\n    var history = useHistory();\n    var pushHistoryState = function (params) {\n        if (params === void 0) { params = {}; }\n        var _a = history.location, pathname = _a.pathname, search = _a.search;\n        var nonNamespacedParams = parseQueryString({}, search);\n        var encodedParams = encodeNonDefaultQueryString(qsConfig, params, nonNamespacedParams);\n        history.push(encodedParams ? pathname + \"?\" + encodedParams : pathname);\n    };\n    var handleSetPage = function (_event, pageNumber) {\n        var oldParams = parseQueryString(qsConfig, history.location.search);\n        pushHistoryState(__assign(__assign({}, oldParams), { limit: pageNumber }));\n    };\n    var handleSetPageSize = function (_event, page) {\n        var oldParams = parseQueryString(qsConfig, history.location.search);\n        pushHistoryState(__assign(__assign({}, oldParams), { offset: page }));\n    };\n    return (React.createElement(PFPagination, __assign({ itemCount: count, widgetId: \"aa-pagination\", perPageOptions: perPageOptions, perPage: limit, page: currentPage, onPerPageSelect: function (event, perPage, page) {\n            setPagination(returnOffsetVal(page), perPage);\n            handleSetPage(event, perPage);\n        }, onSetPage: function (event, page) {\n            setPagination(returnOffsetVal(page));\n            handleSetPageSize(event, returnOffsetVal(page));\n        } }, props)));\n};\nPagination.propTypes = {\n    count: PropTypes.number,\n    qsConfig: PropTypes.any,\n    params: PropTypes.exact({\n        offset: PropTypes.number.isRequired,\n        limit: PropTypes.number.isRequired,\n    }).isRequired,\n    setPagination: PropTypes.func.isRequired,\n};\nexport default Pagination;\n","import Pagination from './Pagination';\nexport default Pagination;\n","var currencyFormatter = function (n) {\n    var formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n    });\n    return formatter.format(n); /* $2,500.00 */\n};\nexport default currencyFormatter;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { useEffect, useState, useCallback } from 'react';\nimport useIsMounted from './useIsMounted';\nexport var useRequest = function (makeRequest, initialValue) {\n    var _a = useState({\n        result: initialValue,\n        error: null,\n        isLoading: false,\n        isSuccess: false,\n    }), variables = _a[0], setVariables = _a[1];\n    var isMounted = useIsMounted();\n    return __assign(__assign({}, variables), { request: useCallback(function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            return __awaiter(void 0, void 0, void 0, function () {\n                var response, error_1;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0:\n                            setVariables(__assign(__assign({}, variables), { isSuccess: false, isLoading: true }));\n                            _a.label = 1;\n                        case 1:\n                            _a.trys.push([1, 3, , 4]);\n                            return [4 /*yield*/, makeRequest.apply(void 0, args)];\n                        case 2:\n                            response = _a.sent();\n                            if (isMounted.current) {\n                                setVariables({\n                                    isLoading: false,\n                                    result: response,\n                                    error: null,\n                                    isSuccess: true,\n                                });\n                            }\n                            return [3 /*break*/, 4];\n                        case 3:\n                            error_1 = _a.sent();\n                            if (isMounted.current) {\n                                setVariables({\n                                    isSuccess: false,\n                                    isLoading: false,\n                                    error: error_1,\n                                    result: initialValue,\n                                });\n                            }\n                            return [3 /*break*/, 4];\n                        case 4: return [2 /*return*/];\n                    }\n                });\n            });\n        }, [makeRequest]), setValue: function (value) { return setVariables(__assign(__assign({}, variables), { result: value })); } });\n};\nexport var useDismissableError = function (error) {\n    var _a = useState(false), showError = _a[0], setShowError = _a[1];\n    useEffect(function () {\n        if (error) {\n            setShowError(true);\n        }\n    }, [error]);\n    return {\n        error: showError ? error : null,\n        dismissError: function () {\n            setShowError(false);\n        },\n    };\n};\nexport var useDeleteItems = function (makeRequest) {\n    var _a = useRequest(makeRequest, null), requestError = _a.error, isLoading = _a.isLoading, request = _a.request;\n    var _b = useDismissableError(requestError), error = _b.error, dismissError = _b.dismissError;\n    return {\n        isLoading: isLoading,\n        deleteItems: request,\n        deletionError: error,\n        clearDeletionError: dismissError,\n    };\n};\nexport default useRequest;\n","import { useEffect, useRef } from 'react';\nvar useIsMounted = function () {\n    var isMounted = useRef({});\n    useEffect(function () {\n        isMounted.current = true;\n        return function () {\n            isMounted.current = false;\n        };\n    });\n    return isMounted;\n};\nexport default useIsMounted;\n"],"sourceRoot":""}