{"version":3,"file":"js/173.58f2ac395fec22a34f7c.js","mappings":"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","sources":["webpack:///./src/Containers/Notifications/NotificationsList.js","webpack:///./src/Containers/Notifications/Notifications.tsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nimport {\n  NotificationDrawerList as PFNotificationDrawerList,\n  NotificationDrawerListItem as PFNotificationDrawerListItem,\n  NotificationDrawerListItemBody,\n  NotificationDrawerListItemHeader,\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkAltIcon } from '@patternfly/react-icons';\nimport LoadingState from '../../Components/ApiStatus/LoadingState';\nimport { capitalize } from '../../Utilities/helpers';\n\nconst ExternalLinkAltIcon = styled(PFExternalLinkAltIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n  font-size: 14px;\n`;\n\nconst NotificationDrawerListItem = styled(PFNotificationDrawerListItem)`\n  border-top: 1px solid var(--pf-global--BorderColor--light-100);\n  border-bottom::nth-child(odd): 1px solid var(--pf-global--BorderColor--light-100);\n  box-shadow: none;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst NotificationDrawerList = styled(PFNotificationDrawerList)`\n  &:last-child {\n    border-bottom: 1px solid var(--pf-global--BorderColor--light-100);\n  }\n`;\n\nconst stringifyDate = (date) => {\n  const day = moment(date);\n  const oneHour = 60 * 60 * 1000;\n  const now = moment().utc();\n\n  if (now.isAfter(day)) {\n    return `${now.diff(day, 'days')} day(s) ago.`;\n  }\n\n  if (day.isSame(now, 'day')) {\n    if (day.valueOf() > oneHour) {\n      return `${day.diff(now, 'hours')} hour(s) ago.`;\n    }\n\n    return `${now.diff(day, 'minutes')} minute(s) ago.`;\n  }\n};\n\nconst AllNotificationTemplate = ({ notifications }) =>\n  notifications.map(\n    ({ date, message, label, notification_id: id, tower_url: url }) => {\n      if (label === '' || label === 'notice') {\n        return (\n          <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"info\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n\n      if (label === 'error') {\n        return (\n          <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"danger\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n\n      if (label === 'warning') {\n        return (\n          <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"warning\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n    }\n  );\n\nconst ErrorNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'error')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"danger\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst NoticeNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'notice')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"info\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst WarningNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'warning')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"warning\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst NotificationsList = ({ filterBy, notifications }) => (\n  <>\n    <NotificationDrawerList>\n      {notifications.length <= 0 && <LoadingState />}\n      {filterBy === '' && (\n        <AllNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'notice' && (\n        <NoticeNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'error' && (\n        <ErrorNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'warning' && (\n        <WarningNotificationTemplate notifications={notifications} />\n      )}\n    </NotificationDrawerList>\n  </>\n);\n\nAllNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nErrorNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nWarningNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nNotificationsList.propTypes = {\n  notifications: PropTypes.array,\n  filterBy: PropTypes.string,\n};\n\nexport default NotificationsList;\n","var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/ApiStatus/LoadingState';\nimport NoData from '../../Components/ApiStatus/NoData';\nimport { readClusters, readNotifications } from '../../Api/';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport { PageHeader, PageHeaderTitle, } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Card, CardBody, CardTitle as PFCardTitle, FormSelect, FormSelectOption, PaginationVariant, NotificationDrawer, } from '@patternfly/react-core';\nimport NotificationsList from './NotificationsList';\nimport Pagination from '../../Components/Pagination';\nimport { getQSConfig } from '../../Utilities/qs';\nimport useRequest from '../../Utilities/useRequest';\nvar CardTitle = styled(PFCardTitle)(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  display: flex;\\n  justify-content: space-between;\\n\\n  @media screen and (max-width: 1035px) {\\n    display: block;\\n  }\\n\"], [\"\\n  display: flex;\\n  justify-content: space-between;\\n\\n  @media screen and (max-width: 1035px) {\\n    display: block;\\n  }\\n\"])));\nvar DropdownGroup = styled.div(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: flex-end;\\n\\n  @media screen and (max-width: 1035px) {\\n    display: block;\\n  }\\n\\n  select {\\n    margin: 0 10px;\\n    width: 150px;\\n\\n    @media screen and (max-width: 1035px) {\\n      margin: 10px 10px 0 0;\\n    }\\n\\n    @media screen and (max-width: 865px) {\\n      width: 100%;\\n    }\\n  }\\n\"], [\"\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: flex-end;\\n\\n  @media screen and (max-width: 1035px) {\\n    display: block;\\n  }\\n\\n  select {\\n    margin: 0 10px;\\n    width: 150px;\\n\\n    @media screen and (max-width: 1035px) {\\n      margin: 10px 10px 0 0;\\n    }\\n\\n    @media screen and (max-width: 865px) {\\n      width: 100%;\\n    }\\n  }\\n\"])));\nvar notificationOptions = [\n    {\n        value: 'please choose',\n        label: 'Select Notification Severity',\n        disabled: true,\n    },\n    { value: 'error', label: 'View Critical', disabled: false },\n    { value: 'warning', label: 'View Warning', disabled: false },\n    { value: 'notice', label: 'View Notice', disabled: false },\n    { value: '', label: 'View All', disabled: false },\n];\nvar formatClusterName = function (data) {\n    var defaultClusterOptions = [\n        { value: 'please choose', label: 'Select cluster', disabled: true },\n        { value: '', label: 'All Clusters', disabled: false },\n        { value: '-1', label: 'Unassociated', disabled: false },\n    ];\n    var calcData = data.map(function (_a) {\n        var label = _a.label, id = _a.cluster_id, uuid = _a.install_uuid;\n        return ({\n            value: id,\n            label: (label !== null && label !== void 0 ? label : uuid),\n            disabled: false,\n        });\n    });\n    return __spreadArray(__spreadArray([], defaultClusterOptions, true), calcData, true);\n};\nvar initialQueryParams = {\n    defaultParams: {\n        limit: 5,\n        offset: 0,\n        // This is not doing anything opn the v0 api\n        sort_options: 'created',\n    },\n};\nvar qsConfig = getQSConfig('notifications', __assign({}, initialQueryParams.defaultParams), ['limit', 'offset']);\nvar Notifications = function () {\n    var _a = useState(''), selectedCluster = _a[0], setSelectedCluster = _a[1];\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    var _b = useQueryParams(qsConfig), queryParams = _b.queryParams, setId = _b.setId, setFromPagination = _b.setFromPagination, setSeverity = _b.setSeverity;\n    var _c = queryParams, severity = _c.severity, limit = _c.limit, offset = _c.offset;\n    var _d = useRequest(useCallback(function () {\n        return readNotifications(queryParams);\n    }, [queryParams]), { notifications: [], meta: { count: 0 } }), _e = _d.result, notificationsData = _e.notifications, meta = _e.meta, notificationsError = _d.error, isLoading = _d.isLoading, isSuccess = _d.isSuccess, fetchNotifications = _d.request;\n    var _f = useRequest(function () { return readClusters(); }, { templates: [] }), _g = _f.result.templates, clustersData = _g === void 0 ? [] : _g, clustersError = _f.error, fetchClusters = _f.request;\n    useEffect(function () {\n        // TODO: Update the useRequest hook to return function and not a promise!! @brum\n        fetchClusters()\n            .then(function () { return ({}); })\n            .catch(function () { return ({}); });\n    }, []);\n    useEffect(function () {\n        fetchNotifications()\n            .then(function () { return ({}); })\n            .catch(function () { return ({}); });\n    }, [queryParams]);\n    return (React.createElement(React.Fragment, null,\n        React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: 'Notifications' })),\n        React.createElement(React.Fragment, null,\n            React.createElement(Main, null,\n                React.createElement(Card, null,\n                    React.createElement(CardTitle, null,\n                        React.createElement(DropdownGroup, null,\n                            React.createElement(FormSelect, { name: \"selectedCluster\", value: selectedCluster, onChange: function (value) {\n                                    setSelectedCluster(value);\n                                    setId(value);\n                                    setFromPagination(0);\n                                }, \"aria-label\": \"Select Cluster\" }, formatClusterName(clustersData).map(function (_a, index) {\n                                var value = _a.value, label = _a.label, disabled = _a.disabled;\n                                return (React.createElement(FormSelectOption, { isDisabled: disabled, key: index, value: value, label: label }));\n                            })),\n                            React.createElement(FormSelect, { name: \"selectedNotification\", value: severity || '', onChange: function (value) {\n                                    setSeverity(value);\n                                    setFromPagination(0);\n                                }, \"aria-label\": \"Select Notification Type\" }, notificationOptions.map(function (_a, index) {\n                                var disabled = _a.disabled, value = _a.value, label = _a.label;\n                                return (React.createElement(FormSelectOption, { isDisabled: disabled, key: index, value: value, label: label }));\n                            }))),\n                        React.createElement(Pagination, { count: meta === null || meta === void 0 ? void 0 : meta.count, qsConfig: qsConfig, params: {\n                                limit: +limit,\n                                offset: +offset,\n                            }, \n                            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                            /* @ts-ignore */\n                            setPagination: setFromPagination, isCompact: true })),\n                    React.createElement(CardBody, null,\n                        isLoading && React.createElement(LoadingState, null),\n                        isSuccess && notificationsData.length <= 0 && React.createElement(NoData, null),\n                        isSuccess && notificationsData.length > 0 && (React.createElement(NotificationDrawer, null,\n                            React.createElement(NotificationsList, { filterBy: severity || '', notifications: notificationsData }))),\n                        React.createElement(Pagination, { count: meta === null || meta === void 0 ? void 0 : meta.count, qsConfig: qsConfig, params: {\n                                limit: +limit,\n                                offset: +offset,\n                            }, \n                            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                            /* @ts-ignore */\n                            setPagination: setFromPagination, variant: PaginationVariant.bottom })))))));\n};\nexport default Notifications;\nvar templateObject_1, templateObject_2;\n"],"names":["ExternalLinkAltIcon","styled","PFExternalLinkAltIcon","NotificationDrawerListItem","PFNotificationDrawerListItem","NotificationDrawerList","PFNotificationDrawerList","stringifyDate","date","day","moment","now","utc","isAfter","diff","isSame","valueOf","AllNotificationTemplate","notifications","map","message","label","id","notification_id","url","tower_url","variant","key","NotificationDrawerListItemHeader","title","target","rel","href","capitalize","NotificationDrawerListItemBody","timestamp","ErrorNotificationTemplate","filter","notification","NoticeNotificationTemplate","WarningNotificationTemplate","NotificationsList","filterBy","length","LoadingState","propTypes","PropTypes","__makeTemplateObject","cooked","raw","Object","defineProperty","value","__assign","assign","t","s","i","n","arguments","p","prototype","hasOwnProperty","call","apply","this","__spreadArray","to","from","pack","ar","l","Array","slice","concat","CardTitle","templateObject_1","DropdownGroup","templateObject_2","notificationOptions","disabled","qsConfig","limit","offset","sort_options","data","calcData","_a","useState","selectedCluster","setSelectedCluster","_b","useQueryParams","queryParams","setId","setFromPagination","setSeverity","_c","severity","_d","useRequest","useCallback","meta","count","_e","result","notificationsData","isLoading","error","isSuccess","fetchNotifications","request","_f","templates","_g","clustersData","fetchClusters","useEffect","then","catch","PageHeader","PageHeaderTitle","Main","Card","FormSelect","name","onChange","cluster_id","uuid","install_uuid","index","FormSelectOption","isDisabled","Pagination","params","setPagination","isCompact","CardBody","NoData","NotificationDrawer","PaginationVariant"],"sourceRoot":""}