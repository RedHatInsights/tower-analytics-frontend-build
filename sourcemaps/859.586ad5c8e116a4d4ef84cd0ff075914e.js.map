{"version":3,"file":"js/859.ab93073a1999c7dfa207.js","mappings":"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","sources":["webpack:///./src/Charts/ROITopTemplates.js","webpack:///./src/Containers/AutomationCalculator/helpers.js","webpack:///./src/Containers/AutomationCalculator/TotalSavings.js","webpack:///./src/Containers/AutomationCalculator/CalculationCost.js","webpack:///./src/Containers/AutomationCalculator/AutomationFormula.js","webpack:///./src/Containers/AutomationCalculator/TopTemplates.js","webpack:///./src/Containers/AutomationCalculator/AutomationCalculator.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport currencyFormatter from '../Utilities/currencyFormatter';\n\nclass Tooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip-base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, 0) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', 92)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.name = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', -2)\n      .text('Template name');\n    this.savings = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 52)\n      .attr('font-size', 12)\n      .attr('font-weight', 'bold')\n      .attr('fill', 'white')\n      .text('Total savings $0');\n    this.manualCost = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', 16)\n      .text('Manual cost $0');\n    this.automationCost = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', 34)\n      .text('Automation cost $0');\n  }\n\n  handleMouseOver = (d) => {\n    let name;\n    let savings;\n    let manualCost;\n    let automationCost;\n    const scrollLeftOffset = d3.select('#d3-roi-chart-root').node().scrollLeft;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10 +\n      scrollLeftOffset;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      30;\n    if (!d) {\n      return;\n    } else {\n      savings = currencyFormatter(+d.delta);\n      name = d.name;\n      manualCost = currencyFormatter(+d.manualCost);\n      automationCost = currencyFormatter(+d.automatedCost);\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n    this.name.text('' + name);\n    this.savings.text(`Total savings ${savings}`);\n    this.manualCost.text(`Manual Cost ${manualCost}`);\n    this.automationCost.text(`Automation Cost ${automationCost}`);\n    this.nameWidth = this.name.node().getComputedTextLength();\n    this.savingsWidth = this.savings.node().getComputedTextLength();\n    this.manualCostWidth = this.manualCost.node().getComputedTextLength();\n    this.automationCostWidth = this.automationCost\n      .node()\n      .getComputedTextLength();\n    this.widestTextElem = d3.max([\n      this.nameWidth,\n      this.savingsWidth,\n      this.automationCostWidth,\n      this.manualCostWidth,\n    ]);\n\n    const maxTextPerc = (this.widestTextElem / this.boxWidth) * 100;\n    const threshold = 85;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 15) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.name.attr('x', -(toolTipWidth - 7));\n      this.savings.attr('x', -(toolTipWidth - 7));\n      this.manualCost.attr('x', -(toolTipWidth - 7));\n      this.automationCost.attr('x', -(toolTipWidth - 7));\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 15) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.name.attr('x', 20);\n      this.savings.attr('x', 20);\n      this.manualCost.attr('x', 20);\n      this.automationCost.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass TopTemplatesSavings extends Component {\n  constructor(props) {\n    super(props);\n    this.init = this.init.bind(this);\n    this.draw = this.draw.bind(this);\n    this.resize = this.resize.bind(this);\n    this.state = {\n      timeout: null,\n    };\n  }\n\n  // Methods\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  init() {\n    this.draw();\n  }\n\n  draw() {\n    // Use PF chart color\n    const color = '#0066CC'; //blue\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const { data } = this.props;\n    let width;\n    // adjust chart width to support larger datasets\n    if (data.length >= 15) {\n      const containerWidth = d3.select('.automation-wrapper').node();\n      width =\n        containerWidth.getBoundingClientRect().width -\n        this.props.margin.left -\n        this.props.margin.right;\n    } else {\n      width = this.props.getWidth();\n    }\n\n    const height = this.props.getHeight();\n    const x = d3.scaleBand().rangeRound([0, width]).padding(0.45);\n    const y = d3.scaleLinear().range([height, 0]);\n    // format our X Axis ticks\n    let ticks;\n    ticks = data.map((d) => d.name);\n    const formatYAxisValue = d3.format('.2s');\n    const xAxis = d3.axisBottom(x).tickValues(ticks);\n\n    const yAxis = d3\n      .axisLeft(y)\n      .ticks(8)\n      .tickFormat((d) => formatYAxisValue(d).replace('G', 'B'))\n      .tickSize(-width, 0, 0);\n\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n\n    const taskNames = data.map((d) => d.name);\n    const tooltip = new Tooltip({\n      svg: '#' + this.props.id,\n    });\n    x.domain(taskNames);\n    y.domain([0, d3.max(data, (d) => d.delta * 1.15) || 8]);\n\n    // add y axis\n    svg\n      .append('g')\n      .attr('class', 'y axis')\n      .call(yAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7')\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 6)\n      .attr('dy', '.71em')\n      .style('text-anchor', 'end')\n      .style('font-weight', 'bold')\n      .text('Value');\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Savings per template ($)');\n\n    // add x axis\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n      .selectAll('text')\n      .style('text-anchor', 'start')\n      .attr('dx', '0.75em')\n      .attr('dy', -x.bandwidth() / 1.45 - 8)\n      .attr('transform', 'rotate(-90)');\n\n    svg.selectAll('.x-axis line').attr('stroke', 'transparent');\n\n    svg\n      .selectAll('.bar')\n      .data(data)\n      .enter()\n      .append('rect')\n      .attr('x', (d) => x(d.name))\n      .attr('width', x.bandwidth())\n      .attr('y', (d) => y(d.delta))\n      .style('fill', () => color)\n      .attr('height', (d) => height - y(d.delta))\n      .on('mouseover', function (d) {\n        d3.select(this).style('fill', d3.rgb(color).darker(1));\n        tooltip.handleMouseOver(d);\n      })\n      .on('mousemove', tooltip.handleMouseOver)\n      .on('mouseout', function () {\n        d3.select(this).style('fill', color);\n        tooltip.handleMouseOut();\n      });\n  }\n\n  componentDidMount() {\n    this.init();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate() {\n    this.init();\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nTopTemplatesSavings.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n};\n\nexport default initializeChart(TopTemplatesSavings);\n","import styled from 'styled-components';\nimport { CardTitle } from '@patternfly/react-core';\n\nexport const BorderedCardTitle = styled(CardTitle)`\n  border-bottom: 1px solid #d7d7d7;\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle, Title } from '@patternfly/react-core';\nimport currencyFormatter from '../../Utilities/currencyFormatter';\n\nconst TotalSavings = ({ totalSavings = 0 }) => (\n  <Card style={{ borderTop: '3px solid #2B9AF3' }}>\n    <CardTitle style={{ paddingBottom: '0' }}>Total savings</CardTitle>\n    <CardBody>\n      <Title\n        headingLevel=\"h3\"\n        size=\"4xl\"\n        style={{ color: 'var(--pf-global--success-color--200)' }}\n      >\n        {currencyFormatter(totalSavings)}\n      </Title>\n    </CardBody>\n  </Card>\n);\n\nTotalSavings.propTypes = {\n  totalSavings: PropTypes.number,\n};\n\nexport default TotalSavings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Card,\n  CardBody,\n  InputGroup,\n  InputGroupText,\n  TextInput,\n} from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst validFloat = (value) => {\n  const floatValue = parseFloat(value);\n  return floatValue && floatValue >= 0 ? value : '';\n};\n\nconst CalculationCost = ({\n  costManual = '0',\n  setCostManual = () => {},\n  costAutomation = '0',\n  setCostAutomation = () => {},\n}) => (\n  <Card>\n    <CardTitle>Calculate your automation</CardTitle>\n    <CardBody>\n      <InputAndText>\n        <p>Manual cost of automation</p>\n        <em style={{ color: 'var(--pf-global--Color--dark-200)' }}>\n          (e.g. average salary of mid-level Software Engineer)\n        </em>\n        <InputGroup style={{ width: '50%' }}>\n          <InputGroupText>\n            <DollarSignIcon />\n          </InputGroupText>\n          <TextInput\n            id=\"manual-cost\"\n            type=\"number\"\n            aria-label=\"manual-cost\"\n            value={costManual}\n            onChange={(e) => setCostManual(validFloat(e))}\n          />\n          <InputGroupText>/hr</InputGroupText>\n        </InputGroup>\n      </InputAndText>\n      <InputAndText style={{ paddingTop: '10px' }}>\n        <p>Automated process cost</p>\n        <InputGroup style={{ width: '50%' }}>\n          <InputGroupText>\n            <DollarSignIcon />\n          </InputGroupText>\n          <TextInput\n            id=\"automation-cost\"\n            type=\"number\"\n            aria-label=\"automation-cost\"\n            value={costAutomation}\n            onChange={(e) => setCostAutomation(validFloat(e))}\n          />\n          <InputGroupText>/hr</InputGroupText>\n        </InputGroup>\n      </InputAndText>\n    </CardBody>\n  </Card>\n);\n\nCalculationCost.propTypes = {\n  costManual: PropTypes.string,\n  setCostManual: PropTypes.func,\n  costAutomation: PropTypes.string,\n  setCostAutomation: PropTypes.func,\n};\n\nexport default CalculationCost;\n","import React from 'react';\n\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst AutomationFormula = () => (\n  <Card style={{ height: '100%' }}>\n    <CardTitle>Automation formula</CardTitle>\n    <CardBody>\n      <p>\n        <b>Manual cost for template x</b> =\n        <em>\n          (time for a manual run on one host in hours * (sum of all hosts across\n          all job runs) ) * cost per hour\n        </em>\n      </p>\n      <p>\n        <b>Automation cost for template x</b> =\n        <em>\n          cost of automation per hour * sum of total elapsed hours for a\n          template\n        </em>\n      </p>\n      <p>\n        <b>Savings</b> =\n        <em>Sum of (manual cost - automation cost) across all templates</em>\n      </p>\n    </CardBody>\n  </Card>\n);\n\nexport default AutomationFormula;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  InputGroup,\n  InputGroupText,\n  TextInput,\n  Tooltip,\n  Popover,\n} from '@patternfly/react-core';\nimport {\n  InfoCircleIcon,\n  ToggleOnIcon,\n  ToggleOffIcon,\n} from '@patternfly/react-icons';\n\nimport { capitalize } from '../../Utilities/helpers';\n\nimport currencyFormatter from '../../Utilities/currencyFormatter';\n\nconst TemplateDetail = styled.div`\n  em {\n    display: block;\n    padding: 5px 0;\n  }\n\n  @media (max-width: 1490px) {\n    display: block;\n\n    em {\n      padding: 10px 0;\n      display: block;\n    }\n  }\n`;\n\nconst TemplateDetailSubTitle = styled.em`\n  color: var(--pf-global--Color--dark-200);\n`;\n\nconst TooltipWrapper = styled.div`\n  p {\n    text-align: left;\n  }\n`;\n\nconst IconGroup = styled.div`\n  & svg {\n    fill: var(--pf-global--Color--dark-200);\n\n    :hover {\n      cursor: pointer;\n    }\n\n    :first-of-type {\n      margin-right: 10px;\n      margin-left: 10px;\n\n      @media (max-width: 1350px) {\n        margin-left: 0;\n      }\n    }\n  }\n`;\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst showSortAttr = (details, sortBy) => {\n  const trimmed = sortBy.split(':')[0];\n  const sortAttribute = Object.keys(details).map((k) =>\n    k === trimmed ? `${details[k]}` : null\n  );\n\n  return (\n    <TemplateDetailSubTitle>\n      {capitalize(trimmed.split('_').join(' '))}: {sortAttribute}\n    </TemplateDetailSubTitle>\n  );\n};\n\nconst QuestionIconTooltip = ({ details }) => (\n  <Popover\n    aria-label=\"template detail popover\"\n    position=\"left\"\n    bodyContent={\n      <TooltipWrapper>\n        {Object.keys(details).map((k, i) => (\n          <p key={i}>\n            <b>{capitalize(k.split('_').join(' '))}</b>: {details[k]}\n          </p>\n        ))}\n      </TooltipWrapper>\n    }\n  >\n    <InfoCircleIcon />\n  </Popover>\n);\n\nQuestionIconTooltip.propTypes = {\n  details: PropTypes.object,\n};\n\nconst TopTemplates = ({\n  data = [],\n  sortBy = '',\n  setDataRunTime = () => {},\n  setEnabled = () => {},\n  redirectToJobExplorer = () => {},\n}) => (\n  <Card>\n    <CardBody>\n      <p>Enter the time it takes to run the following templates manually.</p>\n      {data.map((d) => (\n        <div key={d.id}>\n          <Tooltip content={'List of jobs for this template for past 30 days'}>\n            <Button\n              style={{ padding: '15px 0 10px' }}\n              component=\"a\"\n              onClick={() => redirectToJobExplorer(d.id)}\n              variant=\"link\"\n            >\n              {d.name}\n            </Button>\n          </Tooltip>\n          <TemplateDetail>\n            <InputAndText key={d.id}>\n              <InputGroup>\n                <TextInput\n                  id={d.id}\n                  type=\"number\"\n                  aria-label=\"time run manually\"\n                  value={d.avgRunTime / 60}\n                  onChange={(minutes) => setDataRunTime(minutes * 60, d.id)}\n                />\n                <InputGroupText>min</InputGroupText>\n              </InputGroup>\n            </InputAndText>\n            <TemplateDetailSubTitle>\n              x {d.successful_hosts_total} host runs\n            </TemplateDetailSubTitle>\n            {showSortAttr(d, sortBy)}\n            <IconGroup>\n              <QuestionIconTooltip details={d} />\n              {!d.enabled && (\n                <ToggleOffIcon onClick={() => setEnabled(d.id)(true)} />\n              )}\n              {d.enabled && (\n                <ToggleOnIcon onClick={() => setEnabled(d.id)(false)} />\n              )}\n            </IconGroup>\n          </TemplateDetail>\n          <p style={{ color: '#486B00' }}>{currencyFormatter(+d.delta)}</p>\n        </div>\n      ))}\n    </CardBody>\n  </Card>\n);\n\nTopTemplates.propTypes = {\n  data: PropTypes.array,\n  setDataRunTime: PropTypes.func,\n  redirectToJobExplorer: PropTypes.func,\n  deselectedIds: PropTypes.array,\n  setDeselectedIds: PropTypes.func,\n  setEnabled: PropTypes.func,\n  sortBy: PropTypes.string,\n};\n\nexport default TopTemplates;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport {\n  Card,\n  CardBody,\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n} from '@patternfly/react-core';\n\n// Imports from custom components\nimport LoadingState from '../../Components/ApiStatus/LoadingState';\nimport NoData from '../../Components/ApiStatus/NoData';\nimport ApiErrorState from '../../Components/ApiStatus/ApiErrorState';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\n// Imports from API\nimport { readROI, readROIOptions } from '../../Api/';\n\n// Imports from utilities\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport { roi as roiConst } from '../../Utilities/constants';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { calculateDelta, convertSecondsToHours } from '../../Utilities/helpers';\nimport useRequest from '../../Utilities/useRequest';\nimport { getQSConfig } from '../../Utilities/qs';\n\n// Chart\nimport TopTemplatesSavings from '../../Charts/ROITopTemplates';\n\n// Local imports\nimport { BorderedCardTitle } from './helpers';\nimport TotalSavings from './TotalSavings';\nimport CalculationCost from './CalculationCost';\nimport AutomationFormula from './AutomationFormula';\nimport TopTemplates from './TopTemplates';\n\nconst mapApi = ({ items = [] }) =>\n  items.map((el) => ({\n    ...el,\n    delta: 0,\n    avgRunTime: 3600,\n    manualCost: 0,\n    automatedCost: 0,\n    enabled: true,\n  }));\n\nconst filterDisabled = (data) => data.filter(({ enabled }) => enabled);\n\nconst updateDeltaCost = (data, costAutomation, costManual) =>\n  data.map((el) => {\n    const manualCost =\n      convertSecondsToHours(el.avgRunTime) *\n      el.successful_hosts_total *\n      parseFloat(costManual);\n    const automatedCost =\n      convertSecondsToHours(el.successful_elapsed_total) *\n      parseFloat(costAutomation);\n    const delta = calculateDelta(automatedCost, manualCost);\n\n    return { ...el, delta, manualCost, automatedCost };\n  });\n\nconst computeTotalSavings = (data) =>\n  data.reduce((sum, curr) => sum + curr.delta, 0);\n\nconst qsConfig = getQSConfig('clusters', { ...roiConst.defaultParams }, [\n  'limit',\n  'offset',\n]);\n\nconst AutomationCalculator = ({ history }) => {\n  const toJobExplorer = useRedirect(history, 'jobExplorer');\n  const [costManual, setCostManual] = useState('50');\n  const [costAutomation, setCostAutomation] = useState('20');\n\n  // params from toolbar/searchbar\n  const { queryParams, setFromToolbar } = useQueryParams(qsConfig);\n\n  const { result: options, request: setOptions } = useRequest(\n    useCallback(() => readROIOptions(queryParams), [queryParams]),\n    {}\n  );\n\n  const {\n    result: api,\n    error: apiError,\n    isLoading: apiIsLoading,\n    isSuccess: apiIsSuccess,\n    request: fetchEndpoint,\n    setValue,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await readROI(queryParams);\n      return updateDeltaCost(mapApi(response), costAutomation, costManual);\n    }, [queryParams]),\n    []\n  );\n\n  /**\n   * Modifies one elements avgRunTime in the unfilteredData\n   * and updates all calculated fields.\n   * Used in top templates.\n   */\n  const setDataRunTime = (seconds, id) => {\n    const updatedData = api.map((el) => {\n      if (el.id === id) {\n        el.avgRunTime = seconds;\n        const updatedDelta = updateDeltaCost(\n          [el],\n          costAutomation,\n          costManual\n        )[0];\n        return updatedDelta;\n      } else {\n        return el;\n      }\n    });\n\n    setValue(updatedData);\n  };\n\n  const setEnabled = (id) => (value) => {\n    setValue(api.map((el) => (el.id === id ? { ...el, enabled: value } : el)));\n  };\n\n  useEffect(() => {\n    setOptions();\n  }, []);\n\n  /**\n   * Recalculates the delta and costs in the data after the cost is changed.\n   */\n  useEffect(() => {\n    setValue(updateDeltaCost(api, costAutomation, costManual));\n  }, [costAutomation, costManual]);\n\n  /**\n   * Get data from API depending on the queryParam.\n   */\n  useEffect(() => {\n    setOptions();\n    fetchEndpoint();\n  }, [queryParams]);\n\n  /**\n   * Function to redirect to the job explorer page\n   * with the same filters as is used here.\n   */\n  const redirectToJobExplorer = (templateId) => {\n    const initialQueryParams = {\n      'job-explorer.quick_date_range': 'last_30_days',\n      'job-explorer.template_id': templateId,\n    };\n    toJobExplorer(initialQueryParams);\n  };\n\n  const renderLeft = () => (\n    <Stack hasGutter>\n      <StackItem>\n        <Card>\n          <BorderedCardTitle>Automation savings</BorderedCardTitle>\n          <CardBody>\n            <TopTemplatesSavings\n              margin={{ top: 20, right: 20, bottom: 20, left: 70 }}\n              id=\"d3-roi-chart-root\"\n              data={filterDisabled(api)}\n            />\n            <p style={{ textAlign: 'center' }}>Templates</p>\n          </CardBody>\n        </Card>\n      </StackItem>\n      <StackItem isFilled>\n        <AutomationFormula />\n      </StackItem>\n    </Stack>\n  );\n\n  const renderRight = () => (\n    <Stack hasGutter>\n      <StackItem>\n        <TotalSavings totalSavings={computeTotalSavings(filterDisabled(api))} />\n      </StackItem>\n      <StackItem>\n        <Stack>\n          <StackItem>\n            <CalculationCost\n              costManual={costManual}\n              setCostManual={setCostManual}\n              costAutomation={costAutomation}\n              setCostAutomation={setCostAutomation}\n            />\n          </StackItem>\n          <StackItem style={{ overflow: 'auto', maxHeight: '48vh' }}>\n            <TopTemplates\n              redirectToJobExplorer={redirectToJobExplorer}\n              data={api}\n              setDataRunTime={setDataRunTime}\n              setUnfilteredData={api}\n              setEnabled={setEnabled}\n              sortBy={`${queryParams.sort_options}:${queryParams.sort_order}`}\n            />\n          </StackItem>\n        </Stack>\n      </StackItem>\n    </Stack>\n  );\n\n  const renderContents = () => {\n    if (apiIsLoading) return <LoadingState />;\n    if (apiError) return <ApiErrorState message={apiError.error} />;\n    if (apiIsSuccess && api.length <= 0) return <NoData />;\n    if (apiIsSuccess && api.length > 0)\n      return (\n        <Grid hasGutter className=\"automation-wrapper\">\n          <GridItem span={9}>{renderLeft()}</GridItem>\n          <GridItem span={3}>{renderRight()}</GridItem>\n        </Grid>\n      );\n\n    return null;\n  };\n\n  return (\n    <>\n      <PageHeader>\n        <PageHeaderTitle title={'Automation Calculator'} />\n        <FilterableToolbar\n          categories={options}\n          filters={queryParams}\n          qsConfig={qsConfig}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      <Main>{renderContents()}</Main>\n    </>\n  );\n};\n\nAutomationCalculator.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default AutomationCalculator;\n"],"names":["Tooltip","props","d","name","savings","manualCost","automationCost","scrollLeftOffset","d3","node","scrollLeft","x","svg","getBoundingClientRect","y","currencyFormatter","delta","automatedCost","toolTipWidth","toolTipBase","width","chartWidth","flipped","text","nameWidth","getComputedTextLength","savingsWidth","manualCostWidth","automationCostWidth","widestTextElem","adjustedWidth","maxTextPerc","boxWidth","overage","boundingBox","attr","toolTipPoint","style","interrupt","transition","delay","this","draw","append","slice","textWidthThreshold","TopTemplatesSavings","init","bind","resize","state","timeout","clearTimeout","setState","setTimeout","color","id","remove","data","length","margin","left","right","getWidth","ticks","height","getHeight","rangeRound","padding","range","map","formatYAxisValue","xAxis","tickValues","yAxis","tickFormat","replace","tickSize","bottom","top","taskNames","tooltip","domain","call","selectAll","bandwidth","enter","on","darker","handleMouseOver","handleMouseOut","window","addEventListener","removeEventListener","Component","propTypes","PropTypes","initializeChart","BorderedCardTitle","styled","CardTitle","TotalSavings","totalSavings","Card","borderTop","paddingBottom","CardBody","Title","headingLevel","size","InputAndText","validFloat","value","floatValue","parseFloat","CalculationCost","costManual","setCostManual","costAutomation","setCostAutomation","InputGroup","InputGroupText","TextInput","type","onChange","e","paddingTop","TemplateDetail","TemplateDetailSubTitle","TooltipWrapper","IconGroup","QuestionIconTooltip","details","Popover","position","bodyContent","Object","keys","k","i","key","capitalize","split","join","TopTemplates","sortBy","setDataRunTime","setEnabled","redirectToJobExplorer","content","Button","component","onClick","variant","avgRunTime","minutes","successful_hosts_total","trimmed","sortAttribute","showSortAttr","enabled","deselectedIds","setDeselectedIds","filterDisabled","filter","updateDeltaCost","el","convertSecondsToHours","successful_elapsed_total","calculateDelta","qsConfig","getQSConfig","roiConst","AutomationCalculator","history","toJobExplorer","useRedirect","useState","useQueryParams","queryParams","setFromToolbar","useRequest","useCallback","readROIOptions","options","result","setOptions","request","readROI","response","items","api","apiError","error","apiIsLoading","isLoading","apiIsSuccess","isSuccess","fetchEndpoint","setValue","useEffect","PageHeader","PageHeaderTitle","title","categories","filters","setFilters","Main","LoadingState","ApiErrorState","message","NoData","Grid","hasGutter","className","GridItem","span","Stack","StackItem","textAlign","isFilled","reduce","sum","curr","overflow","maxHeight","templateId","seconds","updatedData","setUnfilteredData","sort_options","sort_order"],"sourceRoot":""}