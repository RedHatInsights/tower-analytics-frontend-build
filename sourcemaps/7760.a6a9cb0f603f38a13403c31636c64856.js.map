{"version":3,"file":"js/7760.1678477051082.216b3dab3167a3566379.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/check-circle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/exclamation-circle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/info-circle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/plus-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/times-circle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/times-icon.js","webpack:///./src/Components/AlertModal/AlertModal.js","webpack:///./src/Components/Breadcrumbs.js","webpack:///./src/Components/ErrorDetail/ErrorDetail.js","webpack:///./src/Containers/SavingsPlanner/Shared/constants.js","webpack:///./src/Containers/SavingsPlanner/Shared/usePlanData.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/Steps/Details/index.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/Steps/Tasks/index.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/Steps/Templates/index.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/index.js","webpack:///./src/Components/ApiStatus/LoadingState.tsx","webpack:///./src/Components/ApiStatus/NoResults.tsx","webpack:///./src/Components/Pagination/Pagination.tsx","webpack:///./src/Components/Pagination/index.ts"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.CheckCircleIconConfig = {\n  name: 'CheckCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.CheckCircleIcon = require('../createIcon').createIcon(exports.CheckCircleIconConfig);\nexports[\"default\"] = exports.CheckCircleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.ExclamationCircleIconConfig = {\n  name: 'ExclamationCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.ExclamationCircleIcon = require('../createIcon').createIcon(exports.ExclamationCircleIconConfig);\nexports[\"default\"] = exports.ExclamationCircleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.ExclamationTriangleIconConfig = {\n  name: 'ExclamationTriangleIcon',\n  height: 512,\n  width: 576,\n  svgPath: 'M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.ExclamationTriangleIcon = require('../createIcon').createIcon(exports.ExclamationTriangleIconConfig);\nexports[\"default\"] = exports.ExclamationTriangleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.InfoCircleIconConfig = {\n  name: 'InfoCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 110c23.196 0 42 18.804 42 42s-18.804 42-42 42-42-18.804-42-42 18.804-42 42-42zm56 254c0 6.627-5.373 12-12 12h-88c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h12v-64h-12c-6.627 0-12-5.373-12-12v-24c0-6.627 5.373-12 12-12h64c6.627 0 12 5.373 12 12v100h12c6.627 0 12 5.373 12 12v24z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.InfoCircleIcon = require('../createIcon').createIcon(exports.InfoCircleIconConfig);\nexports[\"default\"] = exports.InfoCircleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.PlusIconConfig = {\n  name: 'PlusIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M416 208H272V64c0-17.67-14.33-32-32-32h-32c-17.67 0-32 14.33-32 32v144H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h144v144c0 17.67 14.33 32 32 32h32c17.67 0 32-14.33 32-32V304h144c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.PlusIcon = require('../createIcon').createIcon(exports.PlusIconConfig);\nexports[\"default\"] = exports.PlusIcon;","\"use strict\"\nexports.__esModule = true;\nexports.TimesCircleIconConfig = {\n  name: 'TimesCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.TimesCircleIcon = require('../createIcon').createIcon(exports.TimesCircleIconConfig);\nexports[\"default\"] = exports.TimesCircleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.TimesIconConfig = {\n  name: 'TimesIcon',\n  height: 512,\n  width: 352,\n  svgPath: 'M242.72 256l100.07-100.07c12.28-12.28 12.28-32.19 0-44.48l-22.24-22.24c-12.28-12.28-32.19-12.28-44.48 0L176 189.28 75.93 89.21c-12.28-12.28-32.19-12.28-44.48 0L9.21 111.45c-12.28 12.28-12.28 32.19 0 44.48L109.28 256 9.21 356.07c-12.28 12.28-12.28 32.19 0 44.48l22.24 22.24c12.28 12.28 32.2 12.28 44.48 0L176 322.72l100.07 100.07c12.28 12.28 32.2 12.28 44.48 0l22.24-22.24c12.28-12.28 12.28-32.19 0-44.48L242.72 256z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.TimesIcon = require('../createIcon').createIcon(exports.TimesIconConfig);\nexports[\"default\"] = exports.TimesIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Modal, Title } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon as PFCheckCircleIcon,\n  ExclamationCircleIcon as PFExclamationCircleIcon,\n  ExclamationTriangleIcon as PFExclamationTriangleIcon,\n  InfoCircleIcon as PFInfoCircleIcon,\n  TimesCircleIcon as PFTimesCircleIcon,\n} from '@patternfly/react-icons';\nimport styled from 'styled-components';\n\nconst ExclamationCircleIcon = styled(PFExclamationCircleIcon)`\n  color: var(--pf-global--danger-color--100);\n`;\n\nconst TimesCircleIcon = styled(PFTimesCircleIcon)`\n  color: var(--pf-global--danger-color--100);\n`;\n\nconst InfoCircleIcon = styled(PFInfoCircleIcon)`\n  color: var(--pf-global--info-color--100);\n`;\n\nconst CheckCircleIcon = styled(PFCheckCircleIcon)`\n  color: var(--pf-global--success-color--100);\n`;\n\nconst ExclamationTriangleIcon = styled(PFExclamationTriangleIcon)`\n  color: var(--pf-global--warning-color--100);\n`;\n\nconst Header = styled.div`\n  display: flex;\n  svg {\n    margin-right: 16px;\n  }\n`;\n\nconst AlertModal = ({\n  isOpen,\n  title,\n  label = 'Alert modal',\n  variant = 'warning',\n  children,\n  ...props\n}) => {\n  const variantIcons = {\n    danger: <ExclamationCircleIcon size=\"lg\" />,\n    error: <TimesCircleIcon size=\"lg\" />,\n    info: <InfoCircleIcon size=\"lg\" />,\n    success: <CheckCircleIcon size=\"lg\" />,\n    warning: <ExclamationTriangleIcon size=\"lg\" />,\n  };\n\n  const customHeader = (\n    <Header>\n      {variant ? variantIcons[variant] : null}\n      <Title id=\"alert-modal-header-label\" size=\"2xl\" headingLevel=\"h2\">\n        {title}\n      </Title>\n    </Header>\n  );\n\n  return (\n    <Modal\n      header={customHeader}\n      aria-label={label}\n      aria-labelledby=\"alert-modal-header-label\"\n      isOpen={!!isOpen}\n      variant=\"small\"\n      title={title}\n      {...props}\n    >\n      {children}\n    </Modal>\n  );\n};\n\nAlertModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  variant: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default AlertModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbHeading,\n} from '@patternfly/react-core';\n\nconst Breadcrumbs = ({ items = [], current = null }) => {\n  return (\n    <Breadcrumb>\n      {items.map(({ title, navigate }) => {\n        return (\n          <BreadcrumbItem key={title}>\n            <Link to={navigate}>{title}</Link>\n          </BreadcrumbItem>\n        );\n      })}\n      {current && <BreadcrumbHeading>{current}</BreadcrumbHeading>}\n    </Breadcrumb>\n  );\n};\n\nBreadcrumbs.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      navigate: PropTypes.any,\n      title: PropTypes.node,\n    })\n  ),\n  current: PropTypes.node,\n};\n\nexport default Breadcrumbs;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Card as PFCard,\n  CardBody as PFCardBody,\n  ExpandableSection as PFExpandable,\n} from '@patternfly/react-core';\n\nconst Card = styled(PFCard)`\n  background-color: var(--pf-global--BackgroundColor--200);\n  overflow-wrap: break-word;\n`;\n\nconst CardBody = styled(PFCardBody)`\n  max-height: 200px;\n  overflow: scroll;\n`;\n\nconst Expandable = styled(PFExpandable)`\n  text-align: left;\n\n  & .pf-c-expandable__toggle {\n    padding-left: 10px;\n    margin-left: 5px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n`;\n\nfunction ErrorDetail({ error }) {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const handleToggle = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  return (\n    <>\n      {Array.isArray(error) && error.length && (\n        <Expandable\n          toggleText={'Details'}\n          onToggle={handleToggle}\n          isExpanded={isExpanded}\n        >\n          <Card>\n            <CardBody>\n              <ul>\n                {error.map((m) =>\n                  typeof m === 'string' ? <li key={m}>{m}</li> : null\n                )}\n              </ul>\n            </CardBody>\n          </Card>\n        </Expandable>\n      )}\n    </>\n  );\n}\n\nErrorDetail.propTypes = {\n  error: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default ErrorDetail;\n","export const actions = {\n  SET_NAME: 'SET_NAME',\n  SET_CATEGORY: 'SET_CATEGORY',\n  SET_DESCRIPTION: 'SET_DESCRIPTION',\n  SET_MANUAL_TIME: 'SET_MANUAL_TIME',\n  SET_HOSTS: 'SET_HOSTS',\n  SET_FREQUENCY_PERIOD: 'SET_FREQUENCY_PERIOD',\n  SET_TASKS: 'SET_TASKS',\n  SET_TEMPLATE_ID: 'SET_TEMPLATE_ID',\n};\n","import { useReducer } from 'react';\n\nimport { actions } from './constants';\n\nconst formatPayload = (data) => {\n  data.tasks = data.tasks.map((task, index) => ({\n    task,\n    task_order: index + 1,\n  }));\n\n  if (!data.hosts || data.hosts === '') {\n    data.hosts = 1;\n  }\n\n  // these two are fields the api expects but we don't\n  // have form elements for in the MVP.\n  data.hourly_rate = 50;\n  data.frequency_per_period = 1;\n\n  return data;\n};\n\nconst convertTasks = (tasks = []) => {\n  if (tasks?.length) {\n    return tasks\n      .sort((a, b) => a.task_order - b.task_order)\n      .map(({ task }) => task);\n  }\n  return undefined;\n};\n\nconst usePlanData = (initial) => {\n  const formReducer = (state, { type, value }) => {\n    switch (type) {\n      /* v1 api reducers */\n      case actions.SET_NAME:\n        return {\n          ...state,\n          name: value,\n        };\n      case actions.SET_CATEGORY:\n        return {\n          ...state,\n          category: value,\n        };\n      case actions.SET_DESCRIPTION:\n        return {\n          ...state,\n          description: value,\n        };\n      case actions.SET_MANUAL_TIME:\n        return {\n          ...state,\n          manual_time: value,\n        };\n\n      case actions.SET_HOSTS:\n        return {\n          ...state,\n          hosts: value,\n        };\n      case actions.SET_FREQUENCY_PERIOD:\n        return {\n          ...state,\n          frequency_period: value,\n        };\n      case actions.SET_TASKS:\n        return {\n          ...state,\n          tasks: value,\n        };\n      case actions.SET_TEMPLATE_ID:\n        return {\n          ...state,\n          template_id: value,\n        };\n      default:\n        throw new Error(\n          `usePlanData reducer action type ${type} was not found.`\n        );\n    }\n  };\n\n  const [formData, dispatch] = useReducer(formReducer, {\n    name: initial?.name || '',\n    category: initial?.category || 'system',\n    description: initial?.description || '',\n    manual_time: initial?.manual_time || 240,\n    hosts: initial?.hosts || 1,\n    frequency_period: initial?.frequency_period || 'weekly',\n    tasks: convertTasks(initial?.tasks) || [],\n    template_id: initial?.template_id || -2,\n  });\n\n  return {\n    formData,\n    requestPayload: formatPayload({ ...formData }),\n    dispatch,\n  };\n};\n\nexport default usePlanData;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Form,\n  FormGroup,\n  Grid,\n  Select,\n  SelectOption,\n  TextInput,\n  NumberInput,\n  FormHelperText,\n} from '@patternfly/react-core';\n\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport { actions } from '../../../constants';\n\nimport { isPositiveNum } from '../../../../../../Utilities/helpers';\n\nconst Details = ({ options, formData, dispatch }) => {\n  const { name, category, description, manual_time, hosts, frequency_period } =\n    formData;\n\n  const [categoryIsOpen, setCategoryIsOpen] = useState(false);\n  const [manualTimeIsOpen, setManualTimeIsOpen] = useState(false);\n  const [frequencyPeriodIsOpen, setFrequencyPeriodIsOpen] = useState(false);\n  const [showError, setShowError] = useState(false);\n\n  return (\n    <Form>\n      {options && (\n        <Grid hasGutter md={6}>\n          <FormGroup\n            label=\"What do you want to automate?\"\n            isRequired\n            fieldId=\"name-field\"\n          >\n            <TextInput\n              isRequired\n              placeholder=\"Example: Provision NGINX server\"\n              type=\"text\"\n              id=\"name-field\"\n              name=\"name\"\n              value={name}\n              onChange={(newName) =>\n                dispatch({\n                  type: actions.SET_NAME,\n                  value: newName,\n                })\n              }\n              onFocus={() => setShowError(!name)}\n              onBlur={() => setShowError(!name)}\n            />\n            {!formData.name && showError && (\n              <FormHelperText\n                isError\n                icon={<ExclamationCircleIcon />}\n                isHidden={!showError}\n              >\n                Name is required\n              </FormHelperText>\n            )}\n          </FormGroup>\n          <FormGroup label=\"What type of task is it?\" fieldId=\"category-field\">\n            <Select\n              id=\"category-field\"\n              isOpen={categoryIsOpen}\n              variant={'single'}\n              aria-label={'Plan category selector'}\n              maxHeight={390}\n              onToggle={() => setCategoryIsOpen(!categoryIsOpen)}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_CATEGORY,\n                  value: selection,\n                });\n                setCategoryIsOpen(false);\n              }}\n              selections={category}\n            >\n              {(options?.category || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n          <FormGroup\n            label=\"Enter a description of your automation plan\"\n            fieldId=\"description-field\"\n          >\n            <TextInput\n              type=\"text\"\n              placeholder=\"Place description here\"\n              id=\"description-field\"\n              name=\"description\"\n              value={description}\n              onChange={(newDescription) =>\n                dispatch({\n                  type: actions.SET_DESCRIPTION,\n                  value: newDescription,\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"How long does it take to do this manually?\"\n            fieldId=\"manual-time-field\"\n          >\n            <Select\n              id=\"manual-time-field\"\n              isOpen={manualTimeIsOpen}\n              variant={'single'}\n              placeholderText=\"Select amount\"\n              aria-label={'Plan time selector'}\n              onToggle={() => setManualTimeIsOpen(!manualTimeIsOpen)}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_MANUAL_TIME,\n                  value: selection,\n                });\n                setManualTimeIsOpen(false);\n              }}\n              selections={manual_time}\n            >\n              {(options?.manual_time || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n          <FormGroup\n            label=\"How many hosts do you plan to run this on?\"\n            fieldId=\"hosts-field\"\n          >\n            <NumberInput\n              inputAriaLabel=\"Number of hosts\"\n              widthChars={8}\n              onChange={(event) => {\n                if (\n                  isPositiveNum(event.target.value) ||\n                  event.target.value.length === 0\n                ) {\n                  dispatch({\n                    type: actions.SET_HOSTS,\n                    value: parseInt(event.target.value),\n                  });\n                }\n              }}\n              onMinus={() =>\n                dispatch({\n                  type: actions.SET_HOSTS,\n                  value: isPositiveNum(hosts) ? hosts - 1 : 0,\n                })\n              }\n              onPlus={() =>\n                dispatch({\n                  type: actions.SET_HOSTS,\n                  value: isPositiveNum(hosts) ? hosts + 1 : 1,\n                })\n              }\n              id=\"hosts-field\"\n              name=\"hosts\"\n              value={hosts}\n              min={0}\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"How often do you do this?\"\n            fieldId=\"frequency-period-field\"\n          >\n            <Select\n              id=\"frequency-period-field\"\n              isOpen={frequencyPeriodIsOpen}\n              variant={'single'}\n              placeholderText=\"Select frequency period\"\n              aria-label={'Plan frequency period selector'}\n              onToggle={() => {\n                setFrequencyPeriodIsOpen(!frequencyPeriodIsOpen);\n              }}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_FREQUENCY_PERIOD,\n                  value: selection,\n                });\n                setFrequencyPeriodIsOpen(false);\n              }}\n              selections={frequency_period}\n            >\n              {(options?.frequency_period || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n        </Grid>\n      )}\n    </Form>\n  );\n};\n\nDetails.propTypes = {\n  options: PropTypes.object.isRequired,\n  formData: PropTypes.object.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Details;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  DataList,\n  DataListAction,\n  DataListItem,\n  DataListCell,\n  DataListItemRow,\n  DataListControl,\n  DataListDragButton,\n  DataListItemCells,\n  Form,\n  FormGroup,\n  Grid,\n  InputGroup,\n  TextInput,\n  Title,\n} from '@patternfly/react-core';\nimport { PlusIcon, TimesIcon } from '@patternfly/react-icons';\n\nimport { actions } from '../../../constants';\n\nconst TaskSection = styled.div`\n  margin-top: 20px;\n`;\n\nconst TaskTitle = styled(Title)`\n  margin-bottom: 10px;\n`;\n\nconst TaskDeleteButton = styled(Button)`\n  padding: 0 16px;\n`;\n\nconst DeleteTaskActionSection = styled(DataListAction)`\n  padding: 6px 0;\n`;\n\nconst TaskRow = styled(DataListItemRow)`\n  align-items: center;\n`;\n\nconst Tasks = ({ tasks, dispatch }) => {\n  const setTasks = (val) => {\n    dispatch({ type: actions.SET_TASKS, value: val });\n  };\n\n  const [taskToAdd, setTaskToAdd] = useState('');\n\n  const [liveText, setLiveText] = useState('');\n  const [id, setId] = useState('');\n\n  const onDragStart = (newId) => {\n    setId(newId);\n    setLiveText(`Dragging started for task ${newId}.`);\n  };\n\n  const onDragMove = (oldIndex, newIndex) => {\n    setLiveText(\n      `Dragging task ${id}.  Task ${oldIndex} is now task ${newIndex}.`\n    );\n  };\n\n  const onDragCancel = () => {\n    setLiveText('Dragging cancelled. Tasks list order is unchanged.');\n  };\n\n  const onDragFinish = (newItemOrder) => {\n    setLiveText('Dragging finished');\n    setTasks(newItemOrder.map((val) => val.split('-').slice(0, -1).join('-')));\n  };\n\n  const appendTask = () => {\n    const trimmedTask = taskToAdd.trim();\n    if (trimmedTask !== '') {\n      setTasks([...tasks, trimmedTask]);\n      setTaskToAdd('');\n    }\n  };\n\n  const handleTextKeyDown = (e) => {\n    if (e.key && e.key === 'Enter') {\n      e.preventDefault();\n      appendTask();\n    }\n  };\n\n  const removeTask = (index) => {\n    setTasks(tasks.filter((t, idx) => idx !== index));\n  };\n\n  return (\n    <>\n      <Form>\n        <Grid hasGutter md={6}>\n          <FormGroup\n            label=\"What tasks do you need to accomplish this plan?\"\n            fieldId=\"task-field\"\n          >\n            <InputGroup>\n              <TextInput\n                placeholder=\"Enter a description of each task\"\n                type=\"text\"\n                id=\"task-field\"\n                name=\"task\"\n                value={taskToAdd}\n                onChange={(newTaskName) => setTaskToAdd(newTaskName)}\n                onKeyDown={handleTextKeyDown}\n              />\n              <Button\n                onClick={appendTask}\n                isDisabled={taskToAdd.trim() === ''}\n                variant=\"control\"\n                aria-label=\"Add task\"\n              >\n                <PlusIcon />\n              </Button>\n            </InputGroup>\n          </FormGroup>\n        </Grid>\n      </Form>\n      {tasks.length > 0 && (\n        <TaskSection>\n          <TaskTitle headingLevel=\"h4\" size=\"xl\">\n            Tasks\n          </TaskTitle>\n          <DataList\n            aria-label=\"Draggable list to reorder and remove tasks.\"\n            isCompact\n            onDragFinish={onDragFinish}\n            onDragStart={onDragStart}\n            onDragMove={onDragMove}\n            onDragCancel={onDragCancel}\n            itemOrder={tasks.map((val, idx) => `${val}-${idx}`)}\n          >\n            {tasks.map((task, index) => (\n              <DataListItem\n                aria-labelledby={`cell-${index + 1}`}\n                id={`${task}-${index}`}\n                key={index + 1}\n              >\n                <TaskRow>\n                  <DataListControl>\n                    <DataListDragButton\n                      aria-label=\"Reorder\"\n                      aria-labelledby={`cell-${index + 1}`}\n                      aria-describedby=\"Press space or enter to begin dragging, and use the arrow keys to navigate up or down. Press enter to confirm the drag, or any other key to cancel the drag operation.\"\n                      aria-pressed=\"false\"\n                    />\n                  </DataListControl>\n                  <DataListItemCells\n                    dataListCells={[\n                      <DataListCell key={index + 1}>\n                        <span id={`cell-${index + 1}`}>{`${\n                          index + 1\n                        }. ${task}`}</span>\n                      </DataListCell>,\n                    ]}\n                  />\n                  <DeleteTaskActionSection aria-label=\"Actions\">\n                    <TaskDeleteButton\n                      onClick={() => removeTask(index)}\n                      variant=\"plain\"\n                      aria-label=\"Delete\"\n                    >\n                      <TimesIcon />\n                    </TaskDeleteButton>\n                  </DeleteTaskActionSection>\n                </TaskRow>\n              </DataListItem>\n            ))}\n          </DataList>\n        </TaskSection>\n      )}\n      <div className=\"pf-screen-reader\" aria-live=\"assertive\">\n        {liveText}\n      </div>\n    </>\n  );\n};\n\nTasks.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Tasks;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  Form,\n  FormGroup,\n  PaginationVariant,\n} from '@patternfly/react-core';\nimport {\n  TableComposable,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n} from '@patternfly/react-table';\n\nimport LoadingState from '../../../../../../Components/ApiStatus/LoadingState';\nimport NoResults from '../../../../../../Components/ApiStatus/NoResults';\nimport ApiErrorState from '../../../../../../Components/ApiStatus/ApiErrorState';\nimport Pagination from '../../../../../../Components/Pagination';\n\nimport { useQueryParams } from '../../../../../../QueryParams/';\n\nimport {\n  readJobExplorer,\n  readJobExplorerOptions,\n} from '../../../../../../Api/';\n\nimport FilterableToolbar from '../../../../../../Components/Toolbar/';\n\nimport { actions } from '../../../constants';\nimport useRequest from '../../../../../../Utilities/useRequest';\n\nconst ListFooter = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst initialQueryParams = {\n  group_by: 'template',\n  limit: 10,\n  group_by_time: false,\n  offset: 0,\n  sort_options: 'name',\n  sort_order: 'asc',\n\n  cluster_id: [],\n  inventory_id: [],\n  job_type: [],\n  org_id: [],\n  status: [],\n  template_id: [],\n};\n\nconst Templates = ({ template_id, dispatch: formDispatch }) => {\n  const {\n    queryParams,\n    setFromPagination,\n    setFromToolbar,\n    dispatch: queryParamsDispatch,\n  } = useQueryParams(initialQueryParams);\n\n  const {\n    result: options,\n    error,\n    isSuccess,\n    request: fetchOptions,\n  } = useRequest(async () => {\n    // No idea why we are calling this endpoint without query but it seems to work\n    const { quick_date_range, sort_options, ...rest } =\n      await readJobExplorerOptions();\n    return rest;\n  }, {});\n\n  const {\n    result: { items: templates, meta },\n    isLoading: templatesIsLoading,\n    isSuccess: templatesIsSuccess,\n    request: fetchEndpoints,\n  } = useRequest(readJobExplorer, {\n    items: [],\n    meta: { count: 0 },\n  });\n\n  const onSort = (_ev, _idx, dir) => {\n    queryParamsDispatch({\n      type: 'SET_SORT_ORDER',\n      value: { sort_order: dir },\n    });\n  };\n\n  const sortParams = {\n    sort: {\n      sortBy: {\n        direction: queryParams.sort_order,\n      },\n      onSort,\n    },\n  };\n\n  useEffect(() => {\n    fetchOptions();\n    fetchEndpoints(queryParams);\n  }, [queryParams]);\n\n  return isSuccess ? (\n    <Form>\n      <FormGroup\n        label=\"Link a template to this plan:\"\n        fieldId=\"template-link-field\"\n      >\n        <FilterableToolbar\n          categories={options}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n          pagination={\n            <Pagination\n              count={meta.count}\n              params={{\n                limit: +queryParams.limit,\n                offset: +queryParams.offset,\n              }}\n              setPagination={setFromPagination}\n              isCompact\n            />\n          }\n        />\n        {error && <ApiErrorState message={error.error} />}\n        {templatesIsLoading && <LoadingState />}\n        {templatesIsSuccess && templates.length <= 0 && <NoResults />}\n        {templatesIsSuccess && templates.length > 0 && (\n          <TableComposable aria-label=\"Template link table\" variant=\"compact\">\n            <Thead>\n              <Tr>\n                <Th />\n                <Th {...sortParams}>Name</Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {templates.map(({ id, name }) => (\n                <Tr key={`template-detail-${id}`}>\n                  <Td\n                    data-cy={`radio-${id}`}\n                    data-testid={`radio-${id}`}\n                    key={`template-detail-${id}-radio-td`}\n                    select={{\n                      rowIndex: id,\n                      onSelect: (_event, _isSelected, value) =>\n                        formDispatch({\n                          type: actions.SET_TEMPLATE_ID,\n                          value,\n                        }),\n                      isSelected: template_id === id,\n                      variant: 'radio',\n                    }}\n                  />\n                  <Td>{name}</Td>\n                </Tr>\n              ))}\n            </Tbody>\n          </TableComposable>\n        )}\n        <ListFooter>\n          <div>\n            {template_id !== -2 && (\n              <Button\n                key=\"clear-selection-button\"\n                variant=\"link\"\n                aria-label=\"Clear selection\"\n                onClick={() => {\n                  formDispatch({\n                    type: actions.SET_TEMPLATE_ID,\n                    value: -2,\n                  });\n                }}\n              >\n                Clear selection\n              </Button>\n            )}\n          </div>\n          <Pagination\n            count={meta.count}\n            params={{\n              limit: +queryParams.limit,\n              offset: +queryParams.offset,\n            }}\n            setPagination={setFromPagination}\n            variant={PaginationVariant.bottom}\n          />\n        </ListFooter>\n      </FormGroup>\n    </Form>\n  ) : null;\n};\n\nTemplates.propTypes = {\n  template_id: PropTypes.number.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Templates;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useNavigate, useLocation, Navigate } from 'react-router-dom';\n\nimport {\n  Button,\n  ButtonVariant,\n  Wizard,\n  WizardFooter,\n  WizardContextConsumer,\n} from '@patternfly/react-core';\n\nimport useRequest from '../../../../Utilities/useRequest';\nimport usePlanData from '../usePlanData';\n\nimport { createPlan, updatePlan } from '../../../../Api/';\n\nimport AlertModal from '../../../../Components/AlertModal/AlertModal';\nimport ErrorDetail from '../../../../Components/ErrorDetail/ErrorDetail';\n\nimport Details from './Steps/Details';\nimport Tasks from './Steps/Tasks';\nimport Templates from './Steps/Templates';\n\nconst Form = ({ title, options, data = {} }) => {\n  const navigate = useNavigate();\n  const { hash } = useLocation();\n  const [startStep, setStartStep] = useState(null);\n\n  const {\n    result: apiResponse,\n    isSuccess,\n    error,\n    request: setData,\n  } = useRequest(\n    async (requestPayload, id) => {\n      if (requestPayload) {\n        if (id) {\n          return await updatePlan(id, requestPayload);\n        } else {\n          // Put the id inside the plan_created to match the update endpoint\n          const { id, plan_created } = await createPlan(requestPayload);\n          return {\n            plan_created: {\n              id,\n              ...plan_created,\n            },\n          };\n        }\n      }\n\n      return { plan_created: { id: 0 } };\n    },\n    {\n      plan_created: {\n        id: 0, // put zero to match the type\n      },\n    }\n  );\n\n  const { formData, requestPayload, dispatch } = usePlanData(data);\n  const steps = [\n    {\n      step_number: 1,\n      id: 'details',\n      name: 'Details',\n      component: (\n        <Details options={options} formData={formData} dispatch={dispatch} />\n      ),\n    },\n    {\n      step_number: 2,\n      id: 'tasks',\n      name: 'Tasks',\n      component: <Tasks tasks={formData.tasks} dispatch={dispatch} />,\n      canJumpTo: !!formData.name,\n    },\n    {\n      step_number: 3,\n      id: 'link_template',\n      name: 'Link template',\n      component: (\n        <Templates template_id={formData.template_id} dispatch={dispatch} />\n      ),\n      canJumpTo: !!formData.name,\n      nextButtonText: 'Save',\n    },\n  ];\n\n  useEffect(() => {\n    if (hash) {\n      setStartStep(steps.find((step) => `#${step.id}` === hash).step_number);\n    } else {\n      window.history.pushState(\n        null,\n        null,\n        window.location.pathname + '#details'\n      );\n      setStartStep(1);\n    }\n  }, []);\n\n  const onStepChange = (newStep) => {\n    window.history.pushState(\n      null,\n      null,\n      window.location.pathname + `#${newStep.id}`\n    );\n  };\n\n  const onSave = () => {\n    setData(requestPayload, data?.id);\n  };\n\n  const onClose = () => {\n    if (location.pathname.indexOf('/edit') !== -1) {\n      navigate('../savings-planner/' + data?.id);\n    } else {\n      navigate('../savings-planner');\n    }\n  };\n\n  const reset = () => {\n    setData();\n  };\n\n  const CustomFooter = (\n    <WizardFooter>\n      <WizardContextConsumer>\n        {({ activeStep, onNext, onBack, onClose }) => {\n          if (activeStep.step_number !== 3) {\n            return (\n              <>\n                <Button\n                  variant={ButtonVariant.primary}\n                  type=\"submit\"\n                  onClick={onNext}\n                  isDisabled={!formData.name}\n                >\n                  Next\n                </Button>\n                {activeStep.step_number !== 1 && (\n                  <Button variant=\"secondary\" onClick={onBack}>\n                    Back\n                  </Button>\n                )}\n                <Button variant=\"link\" onClick={onClose}>\n                  Cancel\n                </Button>\n              </>\n            );\n          }\n          // Final step buttons\n          return (\n            <>\n              <Button\n                variant={ButtonVariant.primary}\n                type=\"submit\"\n                onClick={onSave}\n                isDisabled={!formData.name}\n              >\n                Save\n              </Button>\n              <Button variant=\"secondary\" onClick={onBack}>\n                Back\n              </Button>\n              <Button variant=\"link\" onClick={onClose}>\n                Cancel\n              </Button>\n            </>\n          );\n        }}\n      </WizardContextConsumer>\n    </WizardFooter>\n  );\n\n  return (\n    <>\n      {isSuccess && (\n        <Navigate to={'../savings-planner/' + apiResponse.plan_created.id} />\n      )}\n      {startStep && (\n        <Wizard\n          navAriaLabel={`${title} steps`}\n          mainAriaLabel={`${title} content`}\n          steps={steps}\n          onGoToStep={onStepChange}\n          onNext={onStepChange}\n          onBack={onStepChange}\n          onSave={onSave}\n          onClose={onClose}\n          footer={CustomFooter}\n          startAtStep={startStep}\n          height=\"calc(100vh - 240px)\"\n        />\n      )}\n      {error && (\n        <AlertModal\n          isOpen={!!error}\n          onClose={() => reset()}\n          title={'Error'}\n          variant=\"error\"\n        >\n          {'There was an error saving the plan.'}\n          <ErrorDetail error={error?.error?.detail.name} />\n        </AlertModal>\n      )}\n    </>\n  );\n};\n\nForm.propTypes = {\n  title: PropTypes.string.isRequired,\n  options: PropTypes.object.isRequired,\n  data: PropTypes.object,\n};\n\nexport default Form;\n","import React from 'react';\nimport { Title, EmptyState, EmptyStateVariant, EmptyStateIcon, EmptyStateBody, } from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\nvar LoadingState = function () { return (React.createElement(EmptyState, { variant: EmptyStateVariant.full, style: { minHeight: '400px' } },\n    React.createElement(EmptyStateIcon, { icon: CubesIcon }),\n    React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, \"Loading...\"),\n    React.createElement(EmptyStateBody, null, \"Please wait.\"))); };\nexport default LoadingState;\n","import React from 'react';\nimport { Title, EmptyState, EmptyStateVariant, EmptyStateIcon, EmptyStateBody, } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nvar NoResults = function () {\n    return (React.createElement(EmptyState, { variant: EmptyStateVariant.full },\n        React.createElement(EmptyStateIcon, { icon: SearchIcon }),\n        React.createElement(Title, { size: \"lg\", headingLevel: \"h4\" }, \"No results found\"),\n        React.createElement(EmptyStateBody, null, \"No results match the filter criteria. Remove all filters or clear all filters to show results.\")));\n};\nexport default NoResults;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PFPagination } from '@patternfly/react-core';\nvar defaultPerPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '15', value: 15 },\n    { title: '20', value: 20 },\n    { title: '25', value: 25 },\n];\nvar Pagination = function (_a) {\n    var _b = _a.count, count = _b === void 0 ? 0 : _b, _c = _a.perPageOptions, perPageOptions = _c === void 0 ? null : _c, params = _a.params, setPagination = _a.setPagination, props = __rest(_a, [\"count\", \"perPageOptions\", \"params\", \"setPagination\"]);\n    var offset = params.offset, limit = params.limit;\n    var currentPage = Math.floor(offset / limit + 1);\n    var returnOffsetVal = function (page) { return (page - 1) * limit; };\n    return (React.createElement(PFPagination, __assign({ \"data-cy\": props.isCompact ? 'pagination_top' : 'pagination_bottom', itemCount: count, widgetId: \"aa-pagination\", perPageOptions: perPageOptions !== null && perPageOptions !== void 0 ? perPageOptions : defaultPerPageOptions, perPage: limit, page: currentPage, onPerPageSelect: function (_e, perPage, page) {\n            setPagination(returnOffsetVal(page), perPage);\n        }, onSetPage: function (_e, page) {\n            setPagination(returnOffsetVal(page));\n        } }, props)));\n};\nPagination.propTypes = {\n    count: PropTypes.number,\n    params: PropTypes.exact({\n        offset: PropTypes.number.isRequired,\n        limit: PropTypes.number.isRequired,\n    }).isRequired,\n    setPagination: PropTypes.func.isRequired,\n    perPageOptions: PropTypes.arrayOf(PropTypes.exact({\n        title: PropTypes.string.isRequired,\n        value: PropTypes.number.isRequired,\n    }).isRequired),\n};\nexport default Pagination;\n","import Pagination from './Pagination';\nexport default Pagination;\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","ExclamationCircleIcon","styled","PFExclamationCircleIcon","TimesCircleIcon","PFTimesCircleIcon","InfoCircleIcon","PFInfoCircleIcon","CheckCircleIcon","PFCheckCircleIcon","ExclamationTriangleIcon","PFExclamationTriangleIcon","Header","AlertModal","isOpen","title","label","variant","children","props","variantIcons","danger","size","error","info","success","warning","customHeader","Title","id","headingLevel","Modal","header","propTypes","PropTypes","Breadcrumbs","items","current","Breadcrumb","map","navigate","BreadcrumbItem","key","Link","to","BreadcrumbHeading","Card","PFCard","CardBody","PFCardBody","Expandable","PFExpandable","ErrorDetail","useState","isExpanded","setIsExpanded","Array","isArray","length","toggleText","onToggle","m","actions","convertTasks","tasks","sort","a","b","task_order","task","Details","options","formData","dispatch","category","description","manual_time","hosts","frequency_period","categoryIsOpen","setCategoryIsOpen","manualTimeIsOpen","setManualTimeIsOpen","frequencyPeriodIsOpen","setFrequencyPeriodIsOpen","showError","setShowError","Form","Grid","hasGutter","md","FormGroup","isRequired","fieldId","TextInput","placeholder","type","value","onChange","newName","onFocus","onBlur","FormHelperText","isError","icon","isHidden","Select","maxHeight","onSelect","_event","selection","selections","SelectOption","newDescription","placeholderText","NumberInput","inputAriaLabel","widthChars","event","isPositiveNum","target","parseInt","onMinus","onPlus","min","TaskSection","TaskTitle","TaskDeleteButton","Button","DeleteTaskActionSection","DataListAction","TaskRow","DataListItemRow","Tasks","setTasks","val","taskToAdd","setTaskToAdd","liveText","setLiveText","setId","appendTask","trimmedTask","trim","InputGroup","newTaskName","onKeyDown","e","preventDefault","onClick","isDisabled","DataList","isCompact","onDragFinish","newItemOrder","split","slice","join","onDragStart","newId","onDragMove","oldIndex","newIndex","onDragCancel","itemOrder","idx","index","DataListItem","DataListControl","DataListDragButton","DataListItemCells","dataListCells","DataListCell","filter","t","removeTask","className","ListFooter","initialQueryParams","group_by","limit","group_by_time","offset","sort_options","sort_order","cluster_id","inventory_id","job_type","org_id","status","template_id","Templates","formDispatch","useQueryParams","queryParams","setFromPagination","setFromToolbar","queryParamsDispatch","useRequest","readJobExplorerOptions","quick_date_range","rest","result","isSuccess","fetchOptions","request","readJobExplorer","meta","count","templates","templatesIsLoading","isLoading","templatesIsSuccess","fetchEndpoints","sortParams","sortBy","direction","onSort","_ev","_idx","dir","useEffect","categories","filters","setFilters","pagination","Pagination","params","setPagination","ApiErrorState","message","LoadingState","NoResults","TableComposable","Thead","Tr","Th","Tbody","Td","select","rowIndex","_isSelected","isSelected","PaginationVariant","data","useNavigate","hash","useLocation","startStep","setStartStep","requestPayload","updatePlan","createPlan","plan_created","apiResponse","setData","initial","useReducer","state","Error","hourly_rate","frequency_per_period","usePlanData","steps","step_number","component","canJumpTo","nextButtonText","find","step","window","history","pushState","location","pathname","onStepChange","newStep","onSave","CustomFooter","WizardFooter","WizardContextConsumer","activeStep","onNext","onBack","onClose","ButtonVariant","Navigate","Wizard","navAriaLabel","mainAriaLabel","onGoToStep","indexOf","footer","startAtStep","detail","EmptyState","EmptyStateVariant","style","minHeight","EmptyStateIcon","EmptyStateBody","__assign","Object","assign","s","i","n","arguments","p","prototype","hasOwnProperty","call","apply","this","defaultPerPageOptions","_a","_b","_c","perPageOptions","getOwnPropertySymbols","propertyIsEnumerable","__rest","currentPage","Math","floor","returnOffsetVal","page","itemCount","widgetId","perPage","onPerPageSelect","_e","onSetPage"],"sourceRoot":""}