{"version":3,"file":"js/8.92f754e50e9495c8a85c.js","mappings":"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","sources":["webpack:///./src/Containers/AutomationCalculatorNew/TotalSavings.tsx","webpack:///./src/Containers/AutomationCalculatorNew/CalculationCost.tsx","webpack:///./src/Containers/AutomationCalculatorNew/AutomationFormula.tsx","webpack:///./src/Containers/AutomationCalculatorNew/TemplatesTable/ExplandedRowContents.tsx","webpack:///./src/Containers/AutomationCalculatorNew/TemplatesTable/Row.tsx","webpack:///./src/Containers/AutomationCalculatorNew/TemplatesTable/index.tsx","webpack:///./src/Containers/AutomationCalculatorNew/AutomationCalculator.js"],"sourcesContent":["import React from 'react';\nimport { Card, CardBody, CardTitle, Title } from '@patternfly/react-core';\nimport currencyFormatter from '../../Utilities/currencyFormatter';\nvar TotalSavings = function (_a) {\n    var _b = _a.totalSavings, totalSavings = _b === void 0 ? 0 : _b;\n    return (React.createElement(Card, { isPlain: true, isCompact: true },\n        React.createElement(CardTitle, null, \"Total savings\"),\n        React.createElement(CardBody, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"4xl\", style: { color: 'var(--pf-global--success-color--200)' } }, currencyFormatter(totalSavings)))));\n};\nexport default TotalSavings;\n","var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nimport React from 'react';\nimport { Card, CardBody, InputGroup as PFInputGroup, InputGroupText, TextInput, } from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport styled from 'styled-components';\nvar InputGroup = styled(PFInputGroup)(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  width: 170px;\\n\"], [\"\\n  width: 170px;\\n\"])));\nvar validFloat = function (value) {\n    return +value && +value < 0 ? NaN : value;\n};\nvar CalculationCost = function (_a) {\n    var _b = _a.costManual, costManual = _b === void 0 ? 0 : _b, _c = _a.setCostManual, setCostManual = _c === void 0 ? function () { return ({}); } : _c, _d = _a.costAutomation, costAutomation = _d === void 0 ? 0 : _d, _e = _a.setCostAutomation, setCostAutomation = _e === void 0 ? function () { return ({}); } : _e;\n    return (React.createElement(Card, { isPlain: true, isCompact: true },\n        React.createElement(CardBody, null,\n            React.createElement(\"p\", null,\n                \"Manual cost of automation\",\n                React.createElement(\"span\", { style: {\n                        color: 'var(--pf-global--Color--dark-200)',\n                        fontSize: '0.8em',\n                        display: 'block',\n                    } }, \"(e.g. average salary of mid-level Software Engineer)\")),\n            React.createElement(InputGroup, null,\n                React.createElement(InputGroupText, null,\n                    React.createElement(DollarSignIcon, null)),\n                React.createElement(TextInput, { id: \"manual-cost\", type: \"number\", \"aria-label\": \"manual-cost\", value: isNaN(costManual) ? '' : costManual.toString(), onChange: function (e) { return setCostManual(validFloat(+e)); } }),\n                React.createElement(InputGroupText, null, \"/hr\")),\n            React.createElement(\"p\", { style: { paddingTop: '10px' } }, \"Automated process cost\"),\n            React.createElement(InputGroup, null,\n                React.createElement(InputGroupText, null,\n                    React.createElement(DollarSignIcon, null)),\n                React.createElement(TextInput, { id: \"automation-cost\", type: \"number\", \"aria-label\": \"automation-cost\", value: isNaN(costAutomation) ? '' : costAutomation.toString(), onChange: function (e) { return setCostAutomation(validFloat(+e)); } }),\n                React.createElement(InputGroupText, null, \"/hr\")))));\n};\nexport default CalculationCost;\nvar templateObject_1;\n","import React, { useState } from 'react';\nimport { Button, ButtonVariant, Modal, ModalVariant, } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nvar AutomationFormula = function () {\n    var _a = useState(false), isOpen = _a[0], setIsOpen = _a[1];\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Button, { variant: ButtonVariant.link, onClick: function () { return setIsOpen(true); }, icon: React.createElement(InfoCircleIcon, null) }, \"Automation formula\"),\n        React.createElement(Modal, { title: \"Automation formula\", isOpen: isOpen, onClose: function () { return setIsOpen(false); }, variant: ModalVariant.medium, actions: [\n                React.createElement(Button, { key: \"cancel\", variant: ButtonVariant.primary, onClick: function () { return setIsOpen(false); } }, \"Close\"),\n            ] },\n            React.createElement(\"p\", null,\n                React.createElement(\"b\", null, \"Manual cost for template X\"),\n                React.createElement(\"br\", null),\n                \"(time for a manual run on one host in hours * (sum of all hosts across all job runs) ) * cost per hour\"),\n            React.createElement(\"br\", null),\n            React.createElement(\"p\", null,\n                React.createElement(\"b\", null, \"Automation cost for template X\"),\n                React.createElement(\"br\", null),\n                \"cost of automation per hour * sum of total elapsed hours for a template\"),\n            React.createElement(\"br\", null),\n            React.createElement(\"p\", null,\n                React.createElement(\"b\", null, \"Savings\"),\n                React.createElement(\"br\", null),\n                \"Sum of (manual cost - automation cost) across all templates\"))));\n};\nexport default AutomationFormula;\n","import React from 'react';\nimport { ExpandableRowContent, Td } from '@patternfly/react-table';\nimport { DescriptionList, DescriptionListDescription, DescriptionListGroup, DescriptionListTerm, } from '@patternfly/react-core';\nvar ExpandedRowContents = function (_a) {\n    var template = _a.template;\n    return (React.createElement(Td, { colSpan: 5 },\n        React.createElement(ExpandableRowContent, null,\n            React.createElement(DescriptionList, { columnModifier: { default: '3Col' } },\n                React.createElement(DescriptionListGroup, null,\n                    React.createElement(DescriptionListTerm, null, \"ID\"),\n                    React.createElement(DescriptionListDescription, null, template.id)),\n                React.createElement(DescriptionListGroup, null,\n                    React.createElement(DescriptionListTerm, null, \"Elapsed\"),\n                    React.createElement(DescriptionListDescription, null, template.elapsed)),\n                React.createElement(DescriptionListGroup, null,\n                    React.createElement(DescriptionListTerm, null, \"Host count\"),\n                    React.createElement(DescriptionListDescription, null, template.host_count)),\n                React.createElement(DescriptionListGroup, null,\n                    React.createElement(DescriptionListTerm, null, \"Total count\"),\n                    React.createElement(DescriptionListDescription, null, template.total_count)),\n                React.createElement(DescriptionListGroup, null,\n                    React.createElement(DescriptionListTerm, null, \"Total org count\"),\n                    React.createElement(DescriptionListDescription, null, template.total_org_count)),\n                React.createElement(DescriptionListGroup, null,\n                    React.createElement(DescriptionListTerm, null, \"Total cluster count\"),\n                    React.createElement(DescriptionListDescription, null, template.total_cluster_count)),\n                React.createElement(DescriptionListGroup, null,\n                    React.createElement(DescriptionListTerm, null, \"Total inventory count\"),\n                    React.createElement(DescriptionListDescription, null, template.total_inventory_count))))));\n};\nexport default ExpandedRowContents;\n","import React, { useState } from 'react';\nimport { Button, InputGroup, InputGroupText, TextInput, Tooltip, InputGroupTextVariant, Switch, ButtonVariant, } from '@patternfly/react-core';\nimport { Tr, Td } from '@patternfly/react-table';\nimport { global_success_color_200 as globalSuccessColor200 } from '@patternfly/react-tokens';\nimport currencyFormatter from '../../../Utilities/currencyFormatter';\nimport ExpandedRowContents from './ExplandedRowContents';\nvar Row = function (_a) {\n    var template = _a.template, setDataRunTime = _a.setDataRunTime, setEnabled = _a.setEnabled, redirectToJobExplorer = _a.redirectToJobExplorer;\n    var _b = useState(false), isExpanded = _b[0], setIsExpanded = _b[1];\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Tr, null,\n            React.createElement(Td, { expand: {\n                    rowIndex: template.id,\n                    isExpanded: isExpanded,\n                    onToggle: function () { return setIsExpanded(!isExpanded); },\n                } }),\n            React.createElement(Td, null,\n                React.createElement(Tooltip, { content: 'List of jobs for this template for past 30 days' },\n                    React.createElement(Button, { onClick: function () { return redirectToJobExplorer(template.id); }, variant: ButtonVariant.link }, template.name))),\n            React.createElement(Td, null,\n                React.createElement(InputGroup, null,\n                    React.createElement(TextInput, { style: { maxWidth: '150px' }, type: \"number\", \"aria-label\": \"time run manually\", value: template.avgRunTime / 60, onChange: function (minutes) { return setDataRunTime(+minutes * 60, template.id); } }),\n                    React.createElement(InputGroupText, null, \"min\"),\n                    React.createElement(InputGroupText, { variant: InputGroupTextVariant.plain },\n                        \"x \",\n                        template.successful_hosts_total,\n                        \" host runs\"))),\n            React.createElement(Td, { style: { color: globalSuccessColor200.value } }, currencyFormatter(+template.delta)),\n            React.createElement(Td, null,\n                React.createElement(Switch, { label: \"Show\", labelOff: \"Hide\", isChecked: template.enabled, onChange: function (checked) { return setEnabled(checked); } }))),\n        React.createElement(Tr, { isExpanded: isExpanded },\n            React.createElement(ExpandedRowContents, { template: template }))));\n};\nexport default Row;\n","import React from 'react';\nimport { Card, CardBody, Switch } from '@patternfly/react-core';\nimport { TableComposable, TableVariant, Tbody, Th, Thead, Tr, } from '@patternfly/react-table';\nimport Row from './Row';\nvar TopTemplates = function (_a) {\n    var _b = _a.data, data = _b === void 0 ? [] : _b, _c = _a.setDataRunTime, setDataRunTime = _c === void 0 ? function () { return ({}); } : _c, _d = _a.setEnabled, setEnabled = _d === void 0 ? function () { return function () { return ({}); }; } : _d, _e = _a.redirectToJobExplorer, redirectToJobExplorer = _e === void 0 ? function () { return ({}); } : _e;\n    return (React.createElement(Card, null,\n        React.createElement(CardBody, null,\n            React.createElement(\"p\", null, \"Enter the time it takes to run the following templates manually.\"),\n            React.createElement(TableComposable, { \"aria-label\": \"ROI Table\", variant: TableVariant.compact },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null,\n                        React.createElement(Th, null),\n                        React.createElement(Th, null, \"Name\"),\n                        React.createElement(Th, null, \"Time\"),\n                        React.createElement(Th, null, \"Savings\"),\n                        React.createElement(Th, null,\n                            React.createElement(Switch, { label: \"Show all\", labelOff: \"Show all\", isChecked: !data.find(function (d) { return !d.enabled; }), onChange: function (checked) { return setEnabled(undefined)(checked); } })))),\n                React.createElement(Tbody, null, data.map(function (template) { return (React.createElement(Row, { key: template.id, template: template, setDataRunTime: setDataRunTime, redirectToJobExplorer: redirectToJobExplorer, setEnabled: setEnabled(template.id) })); }))))));\n};\nexport default TopTemplates;\n","import React, { useState, useEffect, useCallback } from 'react';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport {\n  Card,\n  CardBody,\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  CardHeader,\n  CardTitle,\n} from '@patternfly/react-core';\n\n// Imports from custom components\nimport LoadingState from '../../Components/ApiStatus/LoadingState';\nimport NoData from '../../Components/ApiStatus/NoData';\nimport ApiErrorState from '../../Components/ApiStatus/ApiErrorState';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\n// Imports from API\nimport { readROI, readROIOptions } from '../../Api/';\n\n// Imports from utilities\nimport {\n  useQueryParams,\n  useRedirect,\n  DEFAULT_NAMESPACE,\n} from '../../QueryParams/';\nimport { jobExplorer, roi as roiConst } from '../../Utilities/constants';\nimport { calculateDelta, convertSecondsToHours } from '../../Utilities/helpers';\nimport useRequest from '../../Utilities/useRequest';\n\n// Chart\nimport TopTemplatesSavings from '../../Charts/ROITopTemplates';\n\n// Local imports\nimport TotalSavings from './TotalSavings';\nimport CalculationCost from './CalculationCost';\nimport AutomationFormula from './AutomationFormula';\nimport TemplatesTable from './TemplatesTable';\nimport { Paths } from '../../paths';\n\nconst mapApi = ({ items = [] }) =>\n  items.map((el) => ({\n    ...el,\n    delta: 0,\n    avgRunTime: 3600,\n    manualCost: 0,\n    automatedCost: 0,\n    enabled: true,\n  }));\n\nconst filterDisabled = (data) => data.filter(({ enabled }) => enabled);\n\nconst updateDeltaCost = (data, costAutomation, costManual) =>\n  data.map((el) => {\n    const manualCost =\n      convertSecondsToHours(el.avgRunTime) *\n      el.successful_hosts_total *\n      parseFloat(costManual);\n    const automatedCost =\n      convertSecondsToHours(el.successful_elapsed_total) *\n      parseFloat(costAutomation);\n    const delta = calculateDelta(automatedCost, manualCost);\n\n    return { ...el, delta, manualCost, automatedCost };\n  });\n\nconst computeTotalSavings = (data) =>\n  data.reduce((sum, curr) => sum + curr.delta, 0);\n\nconst AutomationCalculator = () => {\n  const [costManual, setCostManual] = useState('50');\n  const [costAutomation, setCostAutomation] = useState('20');\n\n  const redirect = useRedirect();\n  const { queryParams, setFromToolbar } = useQueryParams(\n    roiConst.defaultParams\n  );\n\n  const { result: options, request: setOptions } = useRequest(\n    useCallback(() => readROIOptions(queryParams), [queryParams]),\n    {}\n  );\n\n  const {\n    result: api,\n    error: apiError,\n    isLoading: apiIsLoading,\n    isSuccess: apiIsSuccess,\n    request: fetchEndpoint,\n    setValue,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await readROI(queryParams);\n      return updateDeltaCost(mapApi(response), costAutomation, costManual);\n    }, [queryParams]),\n    []\n  );\n\n  /**\n   * Modifies one elements avgRunTime in the unfilteredData\n   * and updates all calculated fields.\n   * Used in top templates.\n   */\n  const setDataRunTime = (seconds, id) => {\n    const updatedData = api.map((el) => {\n      if (el.id === id) {\n        el.avgRunTime = seconds;\n        const updatedDelta = updateDeltaCost(\n          [el],\n          costAutomation,\n          costManual\n        )[0];\n        return updatedDelta;\n      } else {\n        return el;\n      }\n    });\n\n    setValue(updatedData);\n  };\n\n  const setEnabled = (id) => (value) => {\n    if (!id) {\n      setValue(api.map((el) => ({ ...el, enabled: value })));\n    } else {\n      setValue(\n        api.map((el) => (el.id === id ? { ...el, enabled: value } : el))\n      );\n    }\n  };\n\n  /**\n   * Recalculates the delta and costs in the data after the cost is changed.\n   */\n  useEffect(() => {\n    setValue(updateDeltaCost(api, costAutomation, costManual));\n  }, [costAutomation, costManual]);\n\n  /**\n   * Get data from API depending on the queryParam.\n   */\n  useEffect(() => {\n    setOptions();\n    fetchEndpoint();\n  }, [queryParams]);\n\n  /**\n   * Function to redirect to the job explorer page\n   * with the same filters as is used here.\n   */\n  const redirectToJobExplorer = (templateId) => {\n    const initialQueryParams = {\n      [DEFAULT_NAMESPACE]: {\n        ...jobExplorer.defaultParams,\n        quick_date_range: 'last_30_days',\n        template_id: [templateId],\n      },\n    };\n\n    redirect(Paths.jobExplorer, initialQueryParams);\n  };\n\n  const renderLeft = () => (\n    <Card isPlain>\n      <CardHeader>\n        {/* <CardActions>\n              <ToggleGroup aria-label=\"toggleButton\">\n                <ToggleGroupItem\n                  text=\"Money\"\n                  buttonId=\"money\"\n                  isSelected={isMoney}\n                  onChange={() => setIsMoney(true)}\n                />\n                <ToggleGroupItem\n                  text=\"Time\"\n                  buttonId=\"time\"\n                  isSelected={!isMoney}\n                  onChange={() => setIsMoney(false)}\n                />\n              </ToggleGroup>\n            </CardActions> */}\n        <CardTitle>Automation savings</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <TopTemplatesSavings\n          margin={{ top: 20, right: 20, bottom: 20, left: 70 }}\n          id=\"d3-roi-chart-root\"\n          data={filterDisabled(api)}\n        />\n        <p style={{ textAlign: 'center' }}>Templates</p>\n      </CardBody>\n    </Card>\n  );\n\n  const renderRight = () => (\n    <Stack>\n      <StackItem>\n        <TotalSavings totalSavings={computeTotalSavings(filterDisabled(api))} />\n      </StackItem>\n      <StackItem>\n        <Stack>\n          <StackItem>\n            <CalculationCost\n              costManual={costManual}\n              setCostManual={setCostManual}\n              costAutomation={costAutomation}\n              setCostAutomation={setCostAutomation}\n            />\n          </StackItem>\n          <StackItem>\n            <AutomationFormula />\n          </StackItem>\n        </Stack>\n      </StackItem>\n    </Stack>\n  );\n\n  const renderContents = () => {\n    if (apiIsLoading) return <LoadingState />;\n    if (apiError) return <ApiErrorState message={apiError.error} />;\n    if (apiIsSuccess && api.length <= 0) return <NoData />;\n    if (apiIsSuccess && api.length > 0)\n      return (\n        <Card>\n          <Grid hasGutter className=\"automation-wrapper\">\n            <GridItem span={9}>{renderLeft()}</GridItem>\n            <GridItem span={3}>{renderRight()}</GridItem>\n            <GridItem span={12}>\n              <TemplatesTable\n                redirectToJobExplorer={redirectToJobExplorer}\n                data={api}\n                setDataRunTime={setDataRunTime}\n                setEnabled={setEnabled}\n              />\n            </GridItem>\n          </Grid>\n        </Card>\n      );\n\n    return <></>;\n  };\n\n  return (\n    <>\n      <PageHeader>\n        <PageHeaderTitle title={'Automation Calculator'} />\n        <FilterableToolbar\n          categories={options}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      <Main>{renderContents()}</Main>\n    </>\n  );\n};\n\nexport default AutomationCalculator;\n"],"names":["_a","_b","totalSavings","Card","isPlain","isCompact","CardTitle","CardBody","Title","headingLevel","size","style","color","currencyFormatter","cooked","raw","InputGroup","templateObject_1","Object","defineProperty","value","validFloat","NaN","costManual","_c","setCostManual","_d","costAutomation","_e","setCostAutomation","fontSize","display","InputGroupText","TextInput","id","type","isNaN","toString","onChange","e","paddingTop","useState","isOpen","setIsOpen","Button","variant","ButtonVariant","onClick","icon","Modal","title","onClose","ModalVariant","actions","key","template","Td","colSpan","ExpandableRowContent","DescriptionList","columnModifier","default","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","elapsed","host_count","total_count","total_org_count","total_cluster_count","total_inventory_count","setDataRunTime","setEnabled","redirectToJobExplorer","isExpanded","setIsExpanded","Tr","expand","rowIndex","onToggle","Tooltip","content","name","maxWidth","avgRunTime","minutes","InputGroupTextVariant","successful_hosts_total","delta","Switch","label","labelOff","isChecked","enabled","checked","data","TableComposable","TableVariant","Thead","Th","find","d","undefined","Tbody","map","filterDisabled","filter","updateDeltaCost","el","manualCost","convertSecondsToHours","parseFloat","automatedCost","successful_elapsed_total","calculateDelta","redirect","useRedirect","useQueryParams","roiConst","queryParams","setFromToolbar","useRequest","useCallback","readROIOptions","options","result","setOptions","request","readROI","response","items","api","apiError","error","apiIsLoading","isLoading","apiIsSuccess","isSuccess","fetchEndpoint","setValue","useEffect","PageHeader","PageHeaderTitle","categories","filters","setFilters","Main","LoadingState","ApiErrorState","message","length","NoData","Grid","hasGutter","className","GridItem","span","CardHeader","margin","top","right","bottom","left","textAlign","Stack","StackItem","reduce","sum","curr","TemplatesTable","templateId","initialQueryParams","DEFAULT_NAMESPACE","jobExplorer","quick_date_range","template_id","Paths","seconds","updatedData"],"sourceRoot":""}