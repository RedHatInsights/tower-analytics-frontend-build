{"version":3,"sources":["webpack:///./src/Api.js","webpack:///./src/Utilities/asyncComponent.js","webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/Utilities/getBaseName.js","webpack:///./src/paths.js","webpack:///./src/store/index.js","webpack:///./src/FeatureFlags/Context.ts","webpack:///./src/FeatureFlags/Provider.tsx"],"names":["plansEndpoint","planEndpoint","handleResponse","response","json","then","ok","status","Promise","reject","message","error","authenticatedFetch","endpoint","options","window","insights","chrome","auth","getUser","fetch","getFeatures","url","URL","location","origin","preflightRequest","readJobExplorer","params","paginationParams","limit","offset","sort_by","qs","stringify","search","method","body","JSON","readEventExplorer","readROI","readHostExplorer","readPlans","createPlan","deletePlan","id","updatePlan","readPlan","readClustersOptions","readOrgOptions","readROIOptions","readPlanOptions","readClusters","readNotifications","Object","keys","forEach","key","searchParams","append","readJobExplorerOptions","asyncComponent","importComponent","props","state","component","this","setState","C","Component","Clusters","OrganizationStatistics","Notifications","AutomationCalculator","JobExplorer","SavingsPlanAdd","SavingsPlanner","SavingsPlan","InsightsRoute","rootClass","rest","root","document","getElementById","removeAttribute","classList","add","setAttribute","Route","propTypes","PropTypes","Routes","pathname","useLocation","Switch","Redirect","from","to","slice","path","Paths","history","useHistory","useEffect","init","identifyApp","appNav","on","event","domEvent","push","navId","className","version","release","pathName","split","shift","clusters","organizationStatistics","notifications","automationCalculator","jobExplorer","savingsPlanner","savingsPlan","savingsPlanAdd","registry","Error","middleware","ReducerRegistry","promiseMiddleware","Provider","createContext","_a","children","_b","useState","features","setFeatures","flags","toggles","value"],"mappings":"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","file":"js/200.1ed90c0b251275e58a74.js","sourcesContent":["import { stringify } from 'query-string';\n/* v0 endpoints */\nconst clustersEndpoint = `/api/tower-analytics/v0/clusters/`;\nconst notificationsEndpoint = `/api/tower-analytics/v0/notifications/`;\nconst preflightEndpoint = `/api/tower-analytics/v0/authorized/`;\n\n/* v1 endpoints */\nconst jobExplorerEndpoint = '/api/tower-analytics/v1/job_explorer/';\nconst hostExplorerEndpoint = '/api/tower-analytics/v1/host_explorer/';\nconst eventExplorerEndpoint = '/api/tower-analytics/v1/event_explorer/';\nconst ROIEndpoint = '/api/tower-analytics/v1/roi_templates/';\nconst plansEndpoint = '/api/tower-analytics/v1/plans/';\nconst planEndpoint = '/api/tower-analytics/v1/plan/';\n\n/* page options endpoints */\nconst jobExplorerOptionsEndpoint =\n  '/api/tower-analytics/v1/job_explorer_options/';\nconst ROITemplatesOptionsEndpoint =\n  '/api/tower-analytics/v1/roi_templates_options/';\nconst orgOptionsEndpoint =\n  '/api/tower-analytics/v1/dashboard_organization_statistics_options/';\nconst clustersOptionsEndpoint =\n  '/api/tower-analytics/v1/dashboard_clusters_options/';\nconst planOptionsEndpoint = '/api/tower-analytics/v1/plan_options/';\n\nconst featuresEndpoint = '/api/featureflags/v0';\n\nconst handleResponse = (response) => {\n  return response.json().then((json) => {\n    if (response.ok) {\n      return json;\n    }\n\n    if (response.status === 404 || response.status === 401) {\n      return Promise.reject({\n        status: response.status,\n        message: json,\n      });\n    } else if (response.status === 403) {\n      return Promise.reject({\n        status: response.status,\n        error: 'RBAC access denied',\n      });\n    } else {\n      return Promise.reject(json);\n    }\n  });\n};\n\nfunction authenticatedFetch(endpoint, options) {\n  return window.insights.chrome.auth\n    .getUser()\n    .then(() => fetch(endpoint, options));\n}\n\nexport const getFeatures = async () => {\n  try {\n    const url = new URL(featuresEndpoint, window.location.origin);\n    const response = await authenticatedFetch(url);\n    return response.ok ? response.json() : {};\n  } catch (_error) {\n    return {};\n  }\n};\n\nexport const preflightRequest = () =>\n  authenticatedFetch(preflightEndpoint).then(handleResponse);\n\nexport const readJobExplorer = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(jobExplorerEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readEventExplorer = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(eventExplorerEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readROI = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(ROIEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readHostExplorer = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(hostExplorerEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readPlans = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(plansEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const createPlan = ({ params = {} }) => {\n  let url = new URL(planEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const deletePlan = ({ params = {} }) => {\n  let url = new URL(`${planEndpoint}${params.id}/`, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'DELETE',\n  }).then(handleResponse);\n};\n\nexport const updatePlan = ({ id, params = {} }) => {\n  let url = new URL(`${planEndpoint}${id}/`, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'PUT',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readPlan = ({ params = {} }) => {\n  let url = new URL(plansEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readClustersOptions = ({ params = {} }) => {\n  let url = new URL(clustersOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readOrgOptions = ({ params = {} }) => {\n  let url = new URL(orgOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readROIOptions = ({ params = {} }) => {\n  let url = new URL(ROITemplatesOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readPlanOptions = () => {\n  let url = new URL(planOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'GET',\n  }).then(handleResponse);\n};\n\n// v0 endpoints used in Notifications.js\nexport const readClusters = () => {\n  return authenticatedFetch(clustersEndpoint).then(handleResponse);\n};\n\nexport const readNotifications = ({ params = {} }) => {\n  let url = new URL(notificationsEndpoint, window.location.origin);\n  Object.keys(params).forEach((key) =>\n    url.searchParams.append(key, params[key])\n  );\n  return authenticatedFetch(url).then(handleResponse);\n};\n\nexport const readJobExplorerOptions = ({ params = {} }) => {\n  let url = new URL(jobExplorerOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n","import React, { Component } from 'react';\n\n/**\n * Webpack allows loading components asynchronously by using import().\n *\n *      Ex) const Component = asyncComponent(() => import('component');\n *\n *          class aClass extends React.Component {\n *              render() {\n *                  return (<Component prop1=\"prop1\" prop2=\"prop2\" ... />);\n *              }\n *          }\n *\n *  https://reactjs.org/docs/higher-order-components.html\n *\n * @param importComponent a function that contains and async import statement\n *      Ex) () => import('react-component')\n *\n * @returns {AsyncComponent} The imported component or can return a loading\n */\nexport default function asyncComponent(importComponent) {\n  class AsyncComponent extends Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        component: null,\n      };\n    }\n\n    async componentDidMount() {\n      const { default: component } = await importComponent();\n\n      this.setState({\n        component,\n      });\n    }\n\n    render() {\n      const C = this.state.component;\n\n      return C ? <C {...this.props} /> : <div>Loading...</div>;\n    }\n  }\n\n  return AsyncComponent;\n}\n","import { Route, Switch, Redirect, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport asyncComponent from './Utilities/asyncComponent';\nimport { Paths } from './paths';\n\nconst Clusters = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"automation_analytics\" */\n    './Containers/Clusters/Clusters'\n  )\n);\nconst OrganizationStatistics = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"automation_analytics\" */\n    './Containers/OrganizationStatistics/OrganizationStatistics'\n  )\n);\nconst Notifications = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"automation_analytics\" */\n    './Containers/Notifications/Notifications'\n  )\n);\nconst AutomationCalculator = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"automation_analytics\" */\n    './Containers/AutomationCalculator/AutomationCalculator'\n  )\n);\n\nconst JobExplorer = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"automation_analytics\" */\n    './Containers/JobExplorer/JobExplorer'\n  )\n);\n\nconst SavingsPlanAdd = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"automation_analytics\" */\n    './Containers/SavingsPlanner/Add'\n  )\n);\n\nconst SavingsPlanner = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"automation_analytics\" */\n    './Containers/SavingsPlanner/List'\n  )\n);\n\nconst SavingsPlan = asyncComponent(() =>\n  import(\n    /* webpackChunkName: \"automation_analytics\" */\n    './Containers/SavingsPlanner/Details'\n  )\n);\n\nconst InsightsRoute = ({ component: Component, rootClass, ...rest }) => {\n  const root = document.getElementById('root');\n  root.removeAttribute('class');\n  root.classList.add(`page__${rootClass}`, 'pf-c-page__main');\n  root.setAttribute('role', 'main');\n\n  return <Route {...rest} component={Component} />;\n};\n\nInsightsRoute.propTypes = {\n  component: PropTypes.func,\n  rootClass: PropTypes.string,\n};\n\nexport const Routes = () => {\n  const { pathname } = useLocation();\n\n  return (\n    <Switch>\n      <Redirect from=\"/:url*(/+)\" to={pathname.slice(0, -1)} />\n      <InsightsRoute\n        path={Paths.clusters}\n        component={Clusters}\n        rootClass=\"clusters\"\n      />\n      <InsightsRoute\n        path={Paths.organizationStatistics}\n        component={OrganizationStatistics}\n        rootClass=\"organizationStatistics\"\n      />\n      <InsightsRoute\n        path={Paths.notifications}\n        component={Notifications}\n        rootClass=\"notifications\"\n      />\n      <InsightsRoute\n        path={Paths.automationCalculator}\n        component={AutomationCalculator}\n        rootClass=\"automationCalculator\"\n      />\n      <InsightsRoute\n        path={Paths.jobExplorer}\n        component={JobExplorer}\n        rootClass=\"jobExplorer\"\n      />\n      <InsightsRoute\n        path={Paths.savingsPlanAdd}\n        component={SavingsPlanAdd}\n        rootClass=\"SavingsPlanAdd\"\n      />\n      <InsightsRoute\n        path={Paths.savingsPlan}\n        component={SavingsPlan}\n        rootClass=\"SavingsPlan\"\n      />\n      <InsightsRoute\n        path={Paths.savingsPlanner}\n        component={SavingsPlanner}\n        rootClass=\"SavingsPlanner\"\n      />\n      {/* Finally, catch all unmatched routes and redirect to Clusters page */}\n      <Route>\n        <Redirect to={Paths.clusters} />\n      </Route>\n    </Switch>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Routes } from './Routes';\nimport './App.scss';\nimport packageJson from '../package.json';\n\nconst App = () => {\n  const history = useHistory;\n  useEffect(() => {\n    insights.chrome.init();\n    insights.chrome.identifyApp('automation-analytics');\n    const appNav = insights.chrome.on('APP_NAVIGATION', (event) => {\n      if (event.domEvent) {\n        history.push(`/${event.navId}`);\n      }\n    });\n\n    return () => {\n      appNav();\n    };\n  }, []);\n  /**\n   * Remove automation-analytics class once main.yml has module config\n   */\n\n  return (\n    <div\n      className=\"automation-analytics\"\n      id=\"automation-analytics-application\"\n      version={packageJson.version}\n    >\n      <Routes />\n    </div>\n  );\n};\n\nexport default App;\n","function getBaseName(pathname = window.location.pathname) {\n  let release = '/';\n  const pathName = pathname.split('/');\n\n  pathName.shift();\n\n  if (pathName[0] === 'beta') {\n    pathName.shift();\n    release = `/beta/`;\n  }\n\n  return `${release}${pathName[0]}/${pathName[1] || ''}`;\n}\n\nexport default getBaseName;\n","export const Paths = {\n  clusters: '/clusters',\n  organizationStatistics: '/organization-statistics',\n  notifications: '/notifications',\n  automationCalculator: '/automation-calculator',\n  jobExplorer: '/job-explorer',\n  savingsPlanner: '/savings-planner',\n  savingsPlan: '/savings-planner/:id',\n  savingsPlanAdd: '/savings-planner/add',\n};\n","import ReducerRegistry from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport promiseMiddleware from 'redux-promise-middleware';\n\nlet registry;\n\nexport function init(...middleware) {\n  if (registry) {\n    throw new Error('store already initialized');\n  }\n\n  registry = new ReducerRegistry({}, [promiseMiddleware, ...middleware]);\n\n  //If you want to register all of your reducers, this is good place.\n  /*\n   *  registry.register({\n   *    someName: (state, action) => ({...state})\n   *  });\n   */\n  return registry;\n}\n\nexport function getStore() {\n  return registry.getStore();\n}\n\nexport function register(...args) {\n  return registry.register(...args);\n}\n","import { createContext } from 'react';\nexport var FeatureFlagContext = createContext([]);\nexport var Provider = FeatureFlagContext.Provider;\n","import React, { useState, useEffect } from 'react';\nimport { Provider } from './Context';\nimport { getFeatures } from '../Api';\nvar FeatureFlagProvider = function (_a) {\n    var children = _a.children;\n    var _b = useState([]), features = _b[0], setFeatures = _b[1];\n    useEffect(function () {\n        getFeatures().then(function (flags) {\n            if (flags && flags.toggles) {\n                setFeatures(flags.toggles);\n            }\n            else {\n                setFeatures([]);\n            }\n        });\n    }, []);\n    return (React.createElement(Provider, { value: features }, children));\n};\nexport default FeatureFlagProvider;\n"],"sourceRoot":""}