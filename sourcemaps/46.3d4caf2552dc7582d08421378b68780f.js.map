{"version":3,"file":"js/46.de7b6a43d93e73beb898.js","mappings":"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","sources":["webpack:///./src/Charts/Utilities/Legend.js","webpack:///./src/Charts/GroupedBarChart/GroupedBarChart.js","webpack:///./src/Charts/GroupedBarChart/OrgsTooltip.js","webpack:///./src/Charts/GroupedBarChart/HostsTooltip.js","webpack:///./src/Charts/PieChart.js","webpack:///./src/Containers/OrganizationStatistics/OrganizationStatistics.js","webpack:///./src/Charts/Utilities/colors.ts"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Switch } from '@patternfly/react-core';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  overflow: auto;\n  width: 100%;\n  height: ${(props) => props.height};\n`;\n\nconst LegendDetail = styled.div`\n  display: flex;\n  padding: 7.5px 15px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  overflow: auto;\n`;\n\nconst Color = styled.div.attrs((props) => ({\n  color: props.color || 'black',\n}))`\n  min-width: 12px;\n  height: 12px;\n  background: ${(props) => props.color};\n  margin-right: 20px;\n`;\n\nconst Title = styled.span`\n  font-size: 15px;\n  display: inline-block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n`;\n\nconst SubTitle = styled.span`\n  font-size: 15px;\n  margin-left: auto;\n  margin-right: 0;\n  padding-right: 10px;\n`;\n\nconst Legend = ({ data, selected, height, onToggle, chartName }) => {\n  return (\n    <Container height={height}>\n      {data.map(({ name, value, id, count }, index) => (\n        <LegendDetail key={index}>\n          <Wrapper>\n            <Color color={value} />\n            <Title>{name}</Title>\n          </Wrapper>\n          {count && <SubTitle>{count}</SubTitle>}\n          {selected && (\n            <Switch\n              isChecked={selected.some((selection) => selection === id)}\n              onChange={() => onToggle(id)}\n              aria-label={`${chartName}-${name}`}\n              value={id}\n              key={index}\n            />\n          )}\n        </LegendDetail>\n      ))}\n    </Container>\n  );\n};\n\nLegend.propTypes = {\n  data: PropTypes.array.isRequired,\n  selected: PropTypes.array.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  height: PropTypes.string.isRequired,\n  chartName: PropTypes.string.isRequired,\n};\n\nexport default Legend;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport styled from 'styled-components';\n\nimport initializeChart from '.././BaseChart';\nimport Legend from '../Utilities/Legend';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nconst GroupedBarChart = ({\n  onClick = null,\n  TooltipClass,\n  legend,\n  ...props\n}) => {\n  const colors = legend.map(({ id, name }) => {\n    return {\n      name: name ? name : 'No organization',\n      value: props.colorFunc(id),\n      id,\n    };\n  });\n  const [selectedIds, setSelectedIds] = useState(\n    legend.map(({ id }) => id).slice(0, 8)\n  );\n  let timeout = null;\n\n  const handleToggle = (id) => {\n    if (selectedIds.includes(id)) {\n      setSelectedIds(selectedIds.filter((el) => el !== id));\n    } else {\n      setSelectedIds([...selectedIds, id]);\n    }\n  };\n\n  const draw = () => {\n    // Clear our chart container element first\n    d3.selectAll('#' + props.id + ' > *').remove();\n    let { data: unformattedData } = props;\n    const data = unformattedData.reduce((formatted, { date, items }) => {\n      const selectedOrgs = items.filter(({ id }) => selectedIds.includes(id));\n      return formatted.concat({ date, selectedOrgs });\n    }, []);\n    const width = props.getWidth();\n    const height = props.getHeight();\n    // x scale of entire chart\n    const x0 = d3.scaleBand().range([0, width]).padding(0.35);\n    // x scale of individual grouped bars\n    const x1 = d3.scaleBand();\n    const y = d3.scaleLinear().range([height, 0]);\n    // format our X Axis ticks\n    const maxTicksOneMonth = Math.round(data.length / (data.length / 2));\n    const maxTicksTwoMonths = Math.round(data.length / (data.length / 4));\n    let ticks = data.map((d) => d.date);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) =>\n          i % (data.length > 31 ? maxTicksTwoMonths : maxTicksOneMonth) === 0\n            ? d.date\n            : undefined\n        )\n        .filter((item) => item);\n    }\n\n    const xAxis = d3.axisBottom(x0).tickValues(ticks).tickFormat(formatDate);\n\n    const yAxis = d3.axisLeft(y).ticks(8).tickSize(-width, 0, 0);\n\n    const svg = d3\n      .select('#' + props.id)\n      .append('svg')\n      .attr('width', width + props.margin.left + props.margin.right)\n      .attr('height', height + props.margin.bottom + props.margin.top)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' + props.margin.left + ',' + props.margin.top + ')'\n      );\n\n    const dates = data.map((d) => d.date);\n    const tooltip = new TooltipClass({\n      svg: '#' + props.id,\n    });\n    x0.domain(dates);\n    x1.domain(selectedIds).range([0, x0.bandwidth()]);\n    y.domain([\n      0,\n      d3.max(data, (date) =>\n        d3.max(date.selectedOrgs, (d) => d.value * 1.15)\n      ) || 8,\n    ]);\n\n    // add y axis\n    svg\n      .append('g')\n      .attr('class', 'y axis')\n      .call(yAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7')\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 6)\n      .attr('dy', '.71em')\n      .style('text-anchor', 'end')\n      .style('font-weight', 'bold')\n      .text('Value');\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text(props.yLabel);\n\n    // add x axis\n    svg\n      .append('g')\n      .attr('class', 'x axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' + width / 2 + ' ,' + (height + props.margin.top + 25) + ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n    // add the groups\n    let slice = svg.selectAll('.slice').data(data);\n    slice.exit().remove();\n\n    const enter = slice\n      .enter()\n      .append('g')\n      .attr('class', 'g foo')\n      .attr('transform', (d) => 'translate(' + x0(d.date) + ',0)');\n    slice = slice.merge(enter);\n    // add the individual bars\n    let bars = slice.selectAll('rect').data(function (d) {\n      return d.selectedOrgs;\n    });\n    bars.exit().remove();\n\n    const color = props.colorFunc;\n    const subEnter = bars\n      .enter()\n      .append('rect')\n      .attr('width', x1.bandwidth())\n      .attr('x', function (d) {\n        return x1(d.id);\n      }) // unsorted\n      .style('fill', function (d) {\n        return color(d.id);\n      })\n      .attr('y', function (d) {\n        return y(d.value);\n      })\n      .attr('height', function (d) {\n        return height - y(d.value);\n      })\n      .on('mouseover', function (d) {\n        d.moreDetail = !d.name.endsWith('Others');\n        d3.select(this).style(\n          'cursor',\n          onClick && d.moreDetail ? 'pointer' : 'default'\n        );\n        d3.select(this).style('fill', d3.rgb(color(d.id)).darker(1));\n        tooltip.handleMouseOver(d);\n      })\n      .on('mousemove', tooltip.handleMouseOver)\n      .on('mouseout', function (d) {\n        d3.select(this).style('fill', color(d.id));\n        tooltip.handleMouseOut();\n      })\n      .on('click', onClick);\n    bars = bars.merge(subEnter);\n  };\n\n  const init = () => {\n    draw();\n  };\n\n  const resize = () => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      draw();\n    }, 500);\n  };\n\n  useEffect(() => {\n    init();\n    window.addEventListener('resize', resize);\n\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [props.data, selectedIds]);\n\n  return (\n    <Wrapper>\n      <div id={props.id} />\n      {colors.length > 0 && (\n        <Legend\n          id={`${props.id}-legend`}\n          data={colors}\n          selected={selectedIds}\n          onToggle={handleToggle}\n          height=\"350px\"\n          chartName={`${props.id}-legend`}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nGroupedBarChart.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  legend: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  colorFunc: PropTypes.func,\n  yLabel: PropTypes.string,\n  onClick: PropTypes.func,\n  TooltipClass: PropTypes.any.isRequired,\n};\n\nGroupedBarChart.defaultProps = {\n  legend: [],\n};\n\nexport default initializeChart(GroupedBarChart);\n","import * as d3 from 'd3';\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class OrgsTooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -12)\n      .attr('rx', 2)\n      .attr('height', 50)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 25)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Date');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 72)\n      .attr('y', 25)\n      .text('0 Jobs');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 10)\n      .attr('font-size', 12)\n      .text('Org');\n\n    this.clickMore = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 20)\n      .attr('y', 30)\n      .attr('font-size', 12)\n      .text('');\n  }\n\n  handleMouseOver = (d) => {\n    let date;\n    let orgName;\n    let jobs;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    } else {\n      const maxLength = 16;\n      date = d.date;\n      orgName = d.name;\n      jobs = d.value;\n      if (d.name.length > maxLength) {\n        orgName = d.name.slice(0, maxLength).concat('...');\n      }\n    }\n\n    let yAdjust = -11;\n\n    // Include 'Click for details' if more detail is available\n    if (d.moreDetail) {\n      this.boundingBox.attr('height', 68);\n      this.boundingBox.attr('y', -23);\n      this.date.attr('y', 25 + yAdjust);\n      this.jobs.attr('y', 25 + yAdjust);\n      this.orgName.attr('y', 10 + yAdjust);\n      this.clickMore.text('Click for details');\n    } else {\n      this.boundingBox.attr('height', 50);\n      this.boundingBox.attr('y', -12);\n      this.date.attr('y', 25);\n      this.jobs.attr('y', 25);\n      this.orgName.attr('y', 10);\n      this.clickMore.text('');\n    }\n\n    const formatTooltipDate = formatDate;\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.date.text('' + formatTooltipDate(date));\n    this.orgName.text('' + orgName);\n    this.jobs.text('' + jobs + ' Jobs');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 45;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n      this.orgName.attr('x', -adjustedWidth - 7);\n      this.date.attr('x', -adjustedWidth - 7);\n      this.clickMore.attr('x', -adjustedWidth - 7);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth / 2);\n      this.date.attr('x', 20);\n      this.clickMore.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import * as d3 from 'd3';\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class HostsTooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -12)\n      .attr('rx', 2)\n      .attr('height', 50)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 25)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Date');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 72)\n      .attr('y', 25)\n      .text('0 Jobs');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 10)\n      .attr('font-size', 12)\n      .text('Org');\n  }\n\n  handleMouseOver = (d) => {\n    let date;\n    let orgName;\n    let jobs;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    } else {\n      const maxLength = 16;\n      date = d.date;\n      orgName = d.name;\n      jobs = d.value;\n      if (d.name.length > maxLength) {\n        orgName = d.name.slice(0, maxLength).concat('...');\n      }\n    }\n\n    const formatTooltipDate = formatDate;\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.date.text('' + formatTooltipDate(date));\n    this.orgName.text('' + orgName);\n    this.jobs.text('' + jobs + ' Hosts');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 45;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n      this.orgName.attr('x', -adjustedWidth - 7);\n      this.date.attr('x', -adjustedWidth - 7);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth / 2);\n      this.date.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport { getTotal } from '../Utilities/helpers';\nimport Legend from './Utilities/Legend';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nclass Tooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    // defer drawing until we know the data shape\n    this.drawn = false;\n    // show the success rate or not\n    this.showSuccess = false;\n  }\n\n  draw(d) {\n    // chart1 has success rate data and chart2 does not ...\n    this.showSuccess = d && d.data && 'success_rate' in d.data ? true : false;\n    const boundingHeight = this.showSuccess ? 70 : 52;\n    const boundingWidth = this.showSuccess ? 120 : 108;\n\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBOx = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', boundingHeight)\n      .attr('width', boundingWidth)\n      .attr('fill', '#393f44');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 0)\n      .text('Organization');\n    this.percentageTotal = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 16)\n      .text('0');\n    this.percentageSuccess = null;\n    if (this.showSuccess) {\n      this.percentageSuccess = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 30)\n        .text('');\n    }\n  }\n\n  handleMouseOver = (d) => {\n    // treat draw() as a singleton to avoid a painted window effect\n    if (this.drawn !== true) {\n      this.draw(d);\n      this.drawn = true;\n    }\n\n    let perc;\n    let percSuccess;\n    let orgName;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    }\n\n    if (d && d.data) {\n      const maxLength = 16;\n      perc = d.data.percent;\n      percSuccess = d.data.success_rate;\n      orgName = d.data.name;\n      if (d.data.name.length > maxLength) {\n        orgName = d.data.name.slice(0, maxLength - 3).concat('...');\n      }\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.percentageTotal.text('' + perc + '%');\n    if (percSuccess && this.percentageSuccess) {\n      this.percentageSuccess.text('(' + percSuccess + '% successful)');\n    }\n\n    this.orgName.text(' ' + orgName);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, -10) rotate(45)');\n      this.boundingBOx.attr('x', -125);\n      this.orgName.attr('x', -112);\n      this.percentageTotal.attr('x', -112);\n      if (this.showSuccess) {\n        this.percentageSuccess.attr('x', -112);\n      }\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, -10) rotate(45)');\n      this.boundingBOx.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.percentageTotal.attr('x', 20);\n      if (this.showSuccess) {\n        this.percentageSuccess.attr('x', 20);\n      }\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nconst PieChart = ({\n  data,\n  id,\n  colorFunc: color,\n  margin,\n  getWidth,\n  getHeight,\n}) => {\n  const colors = data\n    .map(({ id, name, count }) => {\n      return {\n        id,\n        name,\n        value: color(id),\n        count: Math.round(count),\n      };\n    })\n    .sort((a, b) => (a.count > b.count ? 1 : b.count > a.count ? -1 : 0));\n\n  const [selectedIds, setSelectedIds] = useState(\n    data.map(({ id }) => id).slice(0, 8)\n  );\n\n  let timeout = null;\n\n  const handleToggle = (id) => {\n    if (selectedIds.includes(id)) {\n      setSelectedIds(selectedIds.filter((el) => el !== id));\n    } else {\n      setSelectedIds([...selectedIds, id]);\n    }\n  };\n\n  const draw = () => {\n    d3.selectAll('#' + id + ' > *').remove();\n    const width = getWidth();\n    const height = getHeight();\n    const svg = d3\n      .select('#' + id)\n      .append('svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.bottom)\n      .append('g');\n\n    svg.append('g').attr('class', 'slices');\n    svg.append('g').attr('class', 'labels');\n    svg.append('g').attr('class', 'lines');\n    const radius = Math.min(width, height) / 2;\n    const filteredData = data.filter(({ id }) => selectedIds.includes(id));\n    const total = getTotal(filteredData);\n    filteredData.forEach(function (d) {\n      d.count = +d.count;\n      d.percent = +Math.round((d.count / total) * 100);\n    });\n    const donutTooltip = new Tooltip({\n      svg: '#' + id,\n    });\n    const pie = d3\n      .pie()\n      .sort(null)\n      .value((d) => d.count);\n    const arc = d3\n      .arc()\n      .outerRadius(radius - 10) // controls top positioning of chart\n      .innerRadius(0);\n\n    svg.attr(\n      'transform',\n      'translate(' +\n        (width + margin.left + margin.right) / 2 +\n        ',' +\n        (height + margin.top + margin.bottom) / 2 +\n        ')'\n    );\n\n    svg\n      .selectAll('path')\n      .data(pie(filteredData))\n      .enter()\n      .append('path')\n      .attr('d', arc)\n      .attr('fill', (d) => color(d.data.id));\n\n    svg\n      .selectAll('path')\n      .on('mouseover', function (d) {\n        d3.select(this).style('fill', d3.rgb(color(d.data.id)).darker(1));\n        donutTooltip.handleMouseOver(d);\n      })\n      .on('mouseout', function (d) {\n        d3.select(this).style('fill', color(d.data.id));\n        donutTooltip.handleMouseOut();\n      })\n      .on('mousemove', donutTooltip.handleMouseOver);\n\n    svg.append('g').classed('labels', true);\n    svg.append('g').classed('lines', true);\n  };\n\n  const init = () => {\n    draw();\n  };\n\n  const resize = () => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      draw();\n    }, 500);\n  };\n\n  useEffect(() => {\n    init();\n    window.addEventListener('resize', resize);\n\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [data, selectedIds]);\n\n  return (\n    <Wrapper>\n      <div id={id} />\n      {colors.length > 0 && (\n        <Legend\n          id={`${id}-legend`}\n          data={colors}\n          selected={selectedIds}\n          onToggle={handleToggle}\n          height=\"300px\"\n          chartName={`${id}-legend`}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nPieChart.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  colorFunc: PropTypes.func,\n};\n\nexport default initializeChart(PieChart);\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router';\n\nimport {\n  useQueryParams,\n  useRedirect,\n  DEFAULT_NAMESPACE,\n} from '../../QueryParams/';\nimport { formatDate as dateForJobExplorer } from '../../Utilities/helpers';\n\nimport { readJobExplorer, readHostExplorer, readOrgOptions } from '../../Api/';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport { Link } from 'react-router-dom';\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  Tabs,\n  Tab,\n  Grid,\n  GridItem,\n  Alert,\n  AlertVariant,\n  AlertActionLink,\n} from '@patternfly/react-core';\n\nimport {\n  GroupedBarChart,\n  OrgsTooltip,\n  HostsTooltip,\n} from '../../Charts/GroupedBarChart/';\nimport PieChart from '../../Charts/PieChart';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport {\n  jobExplorer,\n  organizationStatistics as constants,\n} from '../../Utilities/constants';\nimport reportPaths from '../Reports/paths';\n\n// For chart colors\nimport { pfmulti } from '../../Charts/Utilities/colors';\nimport { scaleOrdinal } from 'd3';\nimport useRequest from '../../Utilities/useRequest';\n\nimport ApiErrorState from '../../Components/ApiStatus/ApiErrorState';\nimport LoadingState from '../../Components/ApiStatus/LoadingState';\nimport NoData from '../../Components/ApiStatus/NoData';\nimport { Paths } from '../../paths';\n\nconst Divider = styled('hr')`\n  border: 1px solid #ebebeb;\n`;\n\nconst colorFunc = scaleOrdinal(pfmulti);\n\nconst orgsChartMapper = (data = [], meta, attrName) => {\n  const dates = data.map(({ date, items }) => ({\n    date,\n    items: items.map(({ id, [attrName]: value, name }) => ({\n      id,\n      date,\n      value,\n      name: name || 'No organization',\n    })),\n  }));\n  meta.legend.map((el) => ({\n    ...el,\n    name: el.name || 'No organization',\n  }));\n  return dates;\n};\n\nconst pieChartMapper = (items = [], attrName) => {\n  const data = items.map(({ id, [attrName]: count, name }) => ({\n    id,\n    count,\n    name: name || 'No organization',\n  }));\n  return data;\n};\n\nconst redirectToJobExplorer =\n  (redirect, queryParams) =>\n  ({ date, id }) => {\n    if (id === -1) {\n      // disable clicking on \"others\" block\n      return;\n    }\n\n    const { sort_options, sort_order, ...rest } = queryParams;\n    const formattedDate = dateForJobExplorer(date);\n    const initialQueryParams = {\n      [DEFAULT_NAMESPACE]: {\n        ...jobExplorer.defaultParams,\n        ...rest,\n        quick_date_range: 'custom',\n        start_date: formattedDate,\n        end_date: formattedDate,\n        status: [],\n        org_id: [id],\n      },\n    };\n\n    redirect(Paths.jobExplorer, initialQueryParams);\n  };\n\nconst chartMapper = [\n  {\n    api: readJobExplorer,\n    attr: 'total_count',\n    label: 'Jobs across organizations',\n    onClick: redirectToJobExplorer,\n    tooltip: OrgsTooltip,\n  },\n  {\n    api: readHostExplorer,\n    attr: 'total_unique_host_count',\n    label: 'Hosts across organizations',\n    onClick: () => null,\n    tooltip: HostsTooltip,\n  },\n];\n\nconst OrganizationStatistics = () => {\n  const history = useHistory();\n  const redirect = useRedirect();\n  const [activeTabKey, setActiveTabKey] = useState(0);\n\n  // params from toolbar/searchbar\n  const { queryParams, setFromToolbar } = useQueryParams(\n    constants.defaultParams\n  );\n\n  const jobEventsByOrgParams = {\n    ...queryParams,\n    attributes: ['host_task_count'],\n    group_by: 'org',\n    include_others: true,\n    sort_options: 'host_task_count',\n    sort_order: 'desc',\n  };\n\n  const jobRunsByOrgParams = {\n    ...queryParams,\n    attributes: ['total_count'],\n    group_by: 'org',\n    include_others: true,\n    sort_options: 'total_count',\n    sort_order: 'desc',\n  };\n\n  const jobsByDateAndOrgParams = {\n    ...queryParams,\n    attributes: ['total_count'],\n    group_by: 'org',\n    group_by_time: true,\n    sort_options: 'total_count',\n    sort_order: 'desc',\n  };\n\n  const hostAcrossOrgParams = {\n    ...queryParams,\n    attributes: ['total_unique_host_count'],\n    group_by: 'org',\n    group_by_time: true,\n    sort_options: 'host_task_count',\n    sort_order: 'desc',\n  };\n\n  const {\n    result: jobs,\n    error: jobsError,\n    isLoading: jobsIsLoading,\n    isSuccess: jobsIsSuccess,\n    request: setJobs,\n  } = useRequest(readJobExplorer, []);\n\n  const { result: options, request: setOptions } = useRequest(\n    readOrgOptions,\n    {}\n  );\n\n  const {\n    result: orgs,\n    error: orgsError,\n    isLoading: orgsIsLoading,\n    isSuccess: orgsIsSuccess,\n    request: setOrgs,\n  } = useRequest(async (tabIndex = 0) => {\n    if (tabIndex === 0) {\n      return readJobExplorer(jobsByDateAndOrgParams);\n    } else {\n      return readHostExplorer(hostAcrossOrgParams);\n    }\n  }, []);\n\n  const {\n    result: tasks,\n    error: tasksError,\n    isLoading: tasksIsLoading,\n    isSuccess: tasksIsSuccess,\n    request: setTasks,\n  } = useRequest(readJobExplorer, []);\n\n  const handleTabClick = (_, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  useEffect(() => {\n    setOrgs(activeTabKey);\n  }, [activeTabKey]);\n\n  useEffect(() => {\n    setOrgs(activeTabKey);\n    setTasks(jobEventsByOrgParams);\n    setOptions(queryParams);\n    setJobs(jobRunsByOrgParams);\n  }, [queryParams]);\n\n  const renderDeprecationWarning = () => (\n    <Alert\n      variant={AlertVariant.warning}\n      title=\"The organization statistics page will be deprecated in a future release.\"\n      actionLinks={\n        <>\n          <AlertActionLink>\n            <Link to={reportPaths.getDetails('hosts_by_organization')}>\n              Hosts by organization report\n            </Link>\n          </AlertActionLink>\n          <AlertActionLink>\n            <Link to={reportPaths.getDetails('jobs_and_tasks_by_organization')}>\n              Jobs/Tasks by organization report\n            </Link>\n          </AlertActionLink>\n        </>\n      }\n    >\n      The organization statistics page has been converted to a set of reports.\n      Please use our new, more full-featured reports by following the links\n      below.\n    </Alert>\n  );\n\n  const renderContent = () => (\n    <Grid hasGutter>\n      <GridItem span={12}>{renderDeprecationWarning()}</GridItem>\n      <GridItem span={12}>\n        <Card>\n          <Tabs activeKey={activeTabKey} onSelect={handleTabClick}>\n            <Tab eventKey={0} title={'Jobs'} />\n            <Tab eventKey={1} title={'Hosts'} />\n          </Tabs>\n          <CardBody>\n            {orgsIsLoading && <LoadingState />}\n            {orgsError && <ApiErrorState message={orgsError.error} />}\n            {orgsIsSuccess && orgs.dates?.length <= 0 && <NoData />}\n            {orgsIsSuccess && orgs.dates?.length > 0 && (\n              <GroupedBarChart\n                margin={{ top: 20, right: 20, bottom: 50, left: 50 }}\n                id=\"d3-grouped-bar-chart-root\"\n                data={orgsChartMapper(\n                  orgs.dates,\n                  orgs.meta,\n                  chartMapper[activeTabKey].attr\n                )}\n                legend={orgs.meta.legend}\n                history={history}\n                colorFunc={colorFunc}\n                yLabel={chartMapper[activeTabKey].label}\n                onClick={chartMapper[activeTabKey].onClick(\n                  redirect,\n                  queryParams\n                )}\n                TooltipClass={chartMapper[activeTabKey].tooltip}\n              />\n            )}\n          </CardBody>\n        </Card>\n      </GridItem>\n      <GridItem span={6}>\n        <Card>\n          <CardTitle>\n            <h2>Job Runs by Organization</h2>\n          </CardTitle>\n          <Divider />\n          <CardBody>\n            {jobsIsLoading && <LoadingState />}\n            {jobsError && <ApiErrorState message={jobsError.error} />}\n            {jobsIsSuccess && jobs.items?.length <= 0 && <NoData />}\n            {jobsIsSuccess && jobs.items?.length > 0 && (\n              <PieChart\n                margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                id=\"d3-donut-1-chart-root\"\n                data={pieChartMapper(jobs.items, 'total_count')}\n                colorFunc={colorFunc}\n              />\n            )}\n          </CardBody>\n        </Card>\n      </GridItem>\n      <GridItem span={6}>\n        <Card>\n          <CardTitle>\n            <h2>Usage by Organization (Tasks)</h2>\n          </CardTitle>\n          <Divider />\n          <CardBody>\n            {tasksIsLoading && <LoadingState />}\n            {tasksError && <ApiErrorState message={tasksError.error} />}\n            {tasksIsSuccess && tasks.items?.length <= 0 && <NoData />}\n            {tasksIsSuccess && tasks.items?.length > 0 && (\n              <PieChart\n                margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                id=\"d3-donut-2-chart-root\"\n                data={pieChartMapper(tasks.items, 'host_task_count')}\n                colorFunc={colorFunc}\n              />\n            )}\n          </CardBody>\n        </Card>\n      </GridItem>\n    </Grid>\n  );\n\n  return (\n    <>\n      <PageHeader>\n        <PageHeaderTitle title={'Organization Statistics'} />\n        <FilterableToolbar\n          categories={options}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      <Main>{renderContent()}</Main>\n    </>\n  );\n};\n\nexport default OrganizationStatistics;\n","var pfmulti = [\n    '#06C',\n    '#4CB140',\n    '#009596',\n    '#5752D1',\n    '#F4C145',\n    '#EC7A08',\n    '#8BC1F7',\n    '#23511E',\n    '#A2D9D9',\n    '#2A265F',\n    '#F9E0A2',\n    '#8F4700',\n    '#002F5D',\n];\nexport { pfmulti };\n"],"names":["Container","styled","props","height","LegendDetail","Wrapper","Color","color","Title","SubTitle","Legend","data","selected","onToggle","chartName","map","index","name","value","id","count","key","Switch","isChecked","some","selection","onChange","propTypes","PropTypes","formatDate","date","pieces","split","GroupedBarChart","onClick","TooltipClass","legend","colors","colorFunc","useState","slice","selectedIds","setSelectedIds","timeout","draw","d3","remove","reduce","formatted","selectedOrgs","items","filter","includes","concat","width","getWidth","getHeight","x0","range","padding","x1","y","maxTicksOneMonth","Math","round","length","maxTicksTwoMonths","ticks","d","i","undefined","item","xAxis","tickValues","tickFormat","yAxis","tickSize","svg","append","attr","margin","left","right","bottom","top","dates","tooltip","domain","bandwidth","call","selectAll","style","text","yLabel","exit","enter","bars","merge","subEnter","on","moreDetail","endsWith","this","darker","handleMouseOver","handleMouseOut","resize","clearTimeout","setTimeout","useEffect","window","addEventListener","removeEventListener","el","defaultProps","initializeChart","OrgsTooltip","orgName","jobs","x","node","getBoundingClientRect","boundingBox","clickMore","formatTooltipDate","toolTipWidth","toolTipBase","chartWidth","flipped","jobsWidth","getComputedTextLength","adjustedWidth","maxTextPerc","boxWidth","overage","toolTipPoint","interrupt","transition","delay","textWidthThreshold","HostsTooltip","Tooltip","perc","percSuccess","drawn","percent","success_rate","maxLength","percentageTotal","percentageSuccess","boundingBOx","showSuccess","boundingHeight","boundingWidth","PieChart","sort","a","b","radius","min","filteredData","total","getTotal","forEach","donutTooltip","pie","arc","outerRadius","innerRadius","classed","Divider","scaleOrdinal","orgsChartMapper","meta","attrName","pieChartMapper","chartMapper","api","readJobExplorer","label","redirect","queryParams","sort_options","sort_order","rest","formattedDate","dateForJobExplorer","initialQueryParams","DEFAULT_NAMESPACE","jobExplorer","quick_date_range","start_date","end_date","status","org_id","Paths","readHostExplorer","history","useHistory","useRedirect","activeTabKey","setActiveTabKey","useQueryParams","constants","setFromToolbar","jobEventsByOrgParams","attributes","group_by","include_others","jobRunsByOrgParams","jobsByDateAndOrgParams","group_by_time","hostAcrossOrgParams","useRequest","result","jobsError","error","jobsIsLoading","isLoading","jobsIsSuccess","isSuccess","setJobs","request","readOrgOptions","options","setOptions","orgs","orgsError","orgsIsLoading","orgsIsSuccess","setOrgs","tasks","tasksError","tasksIsLoading","tasksIsSuccess","setTasks","PageHeader","PageHeaderTitle","title","categories","filters","setFilters","Main","Grid","hasGutter","GridItem","span","Alert","variant","AlertVariant","actionLinks","AlertActionLink","Link","to","reportPaths","Card","Tabs","activeKey","onSelect","_","tabIndex","Tab","eventKey","CardBody","LoadingState","ApiErrorState","message","NoData","CardTitle"],"sourceRoot":""}