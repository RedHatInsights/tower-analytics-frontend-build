{"version":3,"file":"js/375.64514a0dd38ee9b0bcda.js","mappings":"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","sources":["webpack:///./src/Components/Breadcrumbs.js","webpack:///./src/Components/Chart/types.ts","webpack:///./src/Components/Chart/convertApi.ts","webpack:///./src/Components/Chart/index.tsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbHeading,\n} from '@patternfly/react-core';\n\nconst Breadcrumbs = ({ items = [], current = null }) => {\n  return (\n    <Breadcrumb>\n      {items.map(({ title, navigate }) => {\n        return (\n          <BreadcrumbItem key={title}>\n            <Link to={navigate}>{title}</Link>\n          </BreadcrumbItem>\n        );\n      })}\n      {current && <BreadcrumbHeading>{current}</BreadcrumbHeading>}\n    </Breadcrumb>\n  );\n};\n\nBreadcrumbs.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      navigate: PropTypes.any,\n      title: PropTypes.node,\n    })\n  ),\n  current: PropTypes.node,\n};\n\nexport default Breadcrumbs;\n","export var ApiType;\n(function (ApiType) {\n    ApiType[\"nonGrouped\"] = \"nonGrouped\";\n    ApiType[\"grouped\"] = \"grouped\";\n})(ApiType || (ApiType = {}));\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { v4 as uuidv4 } from 'uuid';\nimport { ApiType } from './types';\nexport var convertGroupedByData = function (data) {\n    var dates = data.dates;\n    var items = [];\n    dates.forEach(function (el) {\n        // Add items to the correct serie\n        el.items.forEach(function (item, idx) {\n            if (!items[idx]) {\n                items[idx] = {\n                    serie: [],\n                    hidden: false,\n                    name: uuidv4(),\n                };\n            }\n            items[idx].serie.push(__assign({ created_date: el.date }, item));\n        });\n    });\n    return items;\n};\nexport var convertApiToData = function (result) {\n    var _a;\n    var data = {\n        series: [],\n        legend: [],\n    };\n    if ('dates' in result) {\n        result.type = ApiType.grouped;\n    }\n    else {\n        result.type = ApiType.nonGrouped;\n    }\n    switch (result.type) {\n        case ApiType.grouped:\n            data.series = convertGroupedByData(result);\n            break;\n        case ApiType.nonGrouped:\n            data.series = [\n                {\n                    serie: result.items,\n                    hidden: false,\n                    name: uuidv4(),\n                },\n            ];\n            break;\n    }\n    if ((_a = result.meta) === null || _a === void 0 ? void 0 : _a.legend) {\n        data.legend = result.meta.legend.map(function (item) {\n            var s = data.series.find(function (_a) {\n                var serie = _a.serie;\n                return serie.find(function (_a) {\n                    var serieId = _a.id;\n                    return serieId === item.id;\n                });\n            });\n            return __assign(__assign({}, item), { childName: s && s.name ? s.name : '' });\n        });\n    }\n    return data;\n};\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useEffect, useState } from 'react';\nimport ChartBuilder, { functions, } from 'react-json-chart-builder';\nimport { convertApiToData } from './convertApi';\nvar customFunctions = function (specificFunctions) { return (__assign(__assign({}, functions), { axisFormat: __assign(__assign(__assign({}, functions.axisFormat), { formatAsYear: function (tick) {\n            return Intl.DateTimeFormat('en', { year: 'numeric' }).format(new Date(tick));\n        }, formatAsMonth: function (tick) {\n            return Intl.DateTimeFormat('en', { month: 'long' }).format(new Date(tick));\n        } }), specificFunctions === null || specificFunctions === void 0 ? void 0 : specificFunctions.axisFormat), labelFormat: __assign(__assign({}, functions.labelFormat), specificFunctions === null || specificFunctions === void 0 ? void 0 : specificFunctions.labelFormat) })); };\nvar Chart = function (_a) {\n    var schema = _a.schema, data = _a.data, specificFunctions = _a.specificFunctions;\n    var dataState = useState(convertApiToData(data));\n    useEffect(function () {\n        dataState[1](convertApiToData(data));\n    }, [data]);\n    return (React.createElement(ChartBuilder, { schema: schema, functions: customFunctions(specificFunctions), dataState: dataState }));\n};\nexport default Chart;\n"],"names":["Breadcrumbs","items","current","Breadcrumb","map","title","navigate","BreadcrumbItem","key","Link","to","BreadcrumbHeading","propTypes","PropTypes","ApiType","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","convertApiToData","result","_a","data","series","legend","type","grouped","nonGrouped","dates","forEach","el","item","idx","serie","hidden","name","push","created_date","date","convertGroupedByData","meta","find","id","childName","customFunctions","specificFunctions","axisFormat","formatAsYear","tick","Intl","DateTimeFormat","year","format","Date","formatAsMonth","month","labelFormat","schema","dataState","useState","useEffect","functions"],"sourceRoot":""}