{"version":3,"file":"js/5466.1691486016852.76dc26cd80bdb8c4234d.js","mappings":"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","sources":["webpack:///./src/Charts/BaseChart.js","webpack:///./src/Charts/Utilities/Legend.js","webpack:///./src/Charts/GroupedBarChart/GroupedBarChart.js","webpack:///./src/Charts/GroupedBarChart/OrgsTooltip.js","webpack:///./src/Charts/GroupedBarChart/HostsTooltip.js","webpack:///./src/Charts/PieChart.js","webpack:///./src/Containers/OrganizationStatistics/OrganizationStatistics.js","webpack:///./src/Charts/Utilities/colors.ts","webpack:///./src/Components/ApiStatus/LoadingState.tsx","webpack:///./src/Components/ApiStatus/NoData.tsx","webpack:///./src/Containers/Reports/paths.ts"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport { useNavigate } from 'react-router-dom';\n\nconst initializeChart = (Chart) => {\n  const BaseChart = (props) => {\n    const { id, margin } = props;\n\n    const getWidth = () => {\n      let width;\n      width =\n        parseInt(d3.select('#' + id).style('width')) -\n          margin.left -\n          margin.right || 700;\n      return width;\n    };\n\n    const getHeight = () => {\n      let height;\n      height =\n        parseInt(d3.select('#' + id).style('height')) -\n          margin.top -\n          margin.bottom || 450;\n      return height;\n    };\n\n    const navigate = useNavigate();\n\n    return (\n      <Chart\n        {...props}\n        getWidth={getWidth}\n        getHeight={getHeight}\n        navigate={navigate}\n      />\n    );\n  };\n\n  BaseChart.propTypes = {\n    id: PropTypes.string,\n    margin: PropTypes.object,\n  };\n\n  return BaseChart;\n};\n\ninitializeChart.propTypes = {\n  Chart: PropTypes.element,\n};\n\nexport default initializeChart;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Switch } from '@patternfly/react-core';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  overflow: auto;\n  width: 100%;\n  height: ${(props) => props.height};\n`;\n\nconst LegendDetail = styled.div`\n  display: flex;\n  padding: 7.5px 15px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  overflow: auto;\n`;\n\nconst Color = styled.div.attrs((props) => ({\n  color: props.color || 'black',\n}))`\n  min-width: 12px;\n  height: 12px;\n  background: ${(props) => props.color};\n  margin-right: 20px;\n`;\n\nconst Title = styled.span`\n  font-size: 15px;\n  display: inline-block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n`;\n\nconst SubTitle = styled.span`\n  font-size: 15px;\n  margin-left: auto;\n  margin-right: 0;\n  padding-right: 10px;\n`;\n\nconst Legend = ({ data, selected, height, onToggle, chartName }) => {\n  return (\n    <Container height={height}>\n      {data.map(({ name, value, id, count }, index) => (\n        <LegendDetail key={index}>\n          <Wrapper>\n            <Color color={value} />\n            <Title>{name}</Title>\n          </Wrapper>\n          {count && <SubTitle>{count}</SubTitle>}\n          {selected && (\n            <Switch\n              isChecked={selected.some((selection) => selection === id)}\n              onChange={() => onToggle(id)}\n              aria-label={`${chartName}-${name}`}\n              value={id}\n              key={index}\n            />\n          )}\n        </LegendDetail>\n      ))}\n    </Container>\n  );\n};\n\nLegend.propTypes = {\n  data: PropTypes.array.isRequired,\n  selected: PropTypes.array.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  height: PropTypes.string.isRequired,\n  chartName: PropTypes.string.isRequired,\n};\n\nexport default Legend;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport styled from 'styled-components';\n\nimport initializeChart from '.././BaseChart';\nimport Legend from '../Utilities/Legend';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nconst GroupedBarChart = ({\n  onClick = null,\n  TooltipClass,\n  legend,\n  ...props\n}) => {\n  const colors = legend.map(({ id, name }) => {\n    return {\n      name: name ? name : 'No organization',\n      value: props.colorFunc(id),\n      id,\n    };\n  });\n  const [selectedIds, setSelectedIds] = useState(\n    legend.map(({ id }) => id).slice(0, 8)\n  );\n  let timeout = null;\n\n  const handleToggle = (id) => {\n    if (selectedIds.includes(id)) {\n      setSelectedIds(selectedIds.filter((el) => el !== id));\n    } else {\n      setSelectedIds([...selectedIds, id]);\n    }\n  };\n\n  const draw = () => {\n    // Clear our chart container element first\n    d3.selectAll('#' + props.id + ' > *').remove();\n    let { data: unformattedData } = props;\n    const data = unformattedData.reduce((formatted, { date, items }) => {\n      const selectedOrgs = items.filter(({ id }) => selectedIds.includes(id));\n      return formatted.concat({ date, selectedOrgs });\n    }, []);\n    const width = props.getWidth();\n    const height = props.getHeight();\n    // x scale of entire chart\n    const x0 = d3.scaleBand().range([0, width]).padding(0.35);\n    // x scale of individual grouped bars\n    const x1 = d3.scaleBand();\n    const y = d3.scaleLinear().range([height, 0]);\n    // format our X Axis ticks\n    const maxTicksOneMonth = Math.round(data.length / (data.length / 2));\n    const maxTicksTwoMonths = Math.round(data.length / (data.length / 4));\n    let ticks = data.map((d) => d.date);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) =>\n          i % (data.length > 31 ? maxTicksTwoMonths : maxTicksOneMonth) === 0\n            ? d.date\n            : undefined\n        )\n        .filter((item) => item);\n    }\n\n    const xAxis = d3.axisBottom(x0).tickValues(ticks).tickFormat(formatDate);\n\n    const yAxis = d3.axisLeft(y).ticks(8).tickSize(-width, 0, 0);\n\n    const svg = d3\n      .select('#' + props.id)\n      .append('svg')\n      .attr('width', width + props.margin.left + props.margin.right)\n      .attr('height', height + props.margin.bottom + props.margin.top)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' + props.margin.left + ',' + props.margin.top + ')'\n      );\n\n    const dates = data.map((d) => d.date);\n    const tooltip = new TooltipClass({\n      svg: '#' + props.id,\n    });\n    x0.domain(dates);\n    x1.domain(selectedIds).range([0, x0.bandwidth()]);\n    y.domain([\n      0,\n      d3.max(data, (date) =>\n        d3.max(date.selectedOrgs, (d) => d.value * 1.15)\n      ) || 8,\n    ]);\n\n    // add y axis\n    svg\n      .append('g')\n      .attr('class', 'y axis')\n      .call(yAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7')\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 6)\n      .attr('dy', '.71em')\n      .style('text-anchor', 'end')\n      .style('font-weight', 'bold')\n      .text('Value');\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text(props.yLabel);\n\n    // add x axis\n    svg\n      .append('g')\n      .attr('class', 'x axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' + width / 2 + ' ,' + (height + props.margin.top + 25) + ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n    // add the groups\n    let slice = svg.selectAll('.slice').data(data);\n    slice.exit().remove();\n\n    const enter = slice\n      .enter()\n      .append('g')\n      .attr('class', 'g foo')\n      .attr('transform', (d) => 'translate(' + x0(d.date) + ',0)');\n    slice = slice.merge(enter);\n    // add the individual bars\n    let bars = slice.selectAll('rect').data(function (d) {\n      return d.selectedOrgs;\n    });\n    bars.exit().remove();\n\n    const color = props.colorFunc;\n    const subEnter = bars\n      .enter()\n      .append('rect')\n      .attr('width', x1.bandwidth())\n      .attr('x', function (d) {\n        return x1(d.id);\n      }) // unsorted\n      .style('fill', function (d) {\n        return color(d.id);\n      })\n      .attr('y', function (d) {\n        return y(d.value);\n      })\n      .attr('height', function (d) {\n        return height - y(d.value);\n      })\n      .on('mouseover', function (d) {\n        d.moreDetail = !d.name.endsWith('Others');\n        d3.select(this).style(\n          'cursor',\n          onClick && d.moreDetail ? 'pointer' : 'default'\n        );\n        d3.select(this).style('fill', d3.rgb(color(d.id)).darker(1));\n        tooltip.handleMouseOver(d);\n      })\n      .on('mousemove', tooltip.handleMouseOver)\n      .on('mouseout', function (d) {\n        d3.select(this).style('fill', color(d.id));\n        tooltip.handleMouseOut();\n      })\n      .on('click', onClick);\n    bars = bars.merge(subEnter);\n  };\n\n  const init = () => {\n    draw();\n  };\n\n  const resize = () => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      draw();\n    }, 500);\n  };\n\n  useEffect(() => {\n    init();\n    window.addEventListener('resize', resize);\n\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [props.data, selectedIds]);\n\n  return (\n    <Wrapper>\n      <div id={props.id} />\n      {colors.length > 0 && (\n        <Legend\n          id={`${props.id}-legend`}\n          data={colors}\n          selected={selectedIds}\n          onToggle={handleToggle}\n          height=\"350px\"\n          chartName={`${props.id}-legend`}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nGroupedBarChart.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  legend: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  colorFunc: PropTypes.func,\n  yLabel: PropTypes.string,\n  onClick: PropTypes.func,\n  TooltipClass: PropTypes.any.isRequired,\n};\n\nGroupedBarChart.defaultProps = {\n  legend: [],\n};\n\nexport default initializeChart(GroupedBarChart);\n","import * as d3 from 'd3';\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class OrgsTooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -12)\n      .attr('rx', 2)\n      .attr('height', 50)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 25)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Date');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 72)\n      .attr('y', 25)\n      .text('0 Jobs');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 10)\n      .attr('font-size', 12)\n      .text('Org');\n\n    this.clickMore = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 20)\n      .attr('y', 30)\n      .attr('font-size', 12)\n      .text('');\n  }\n\n  handleMouseOver = (d) => {\n    let date;\n    let orgName;\n    let jobs;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    } else {\n      const maxLength = 16;\n      date = d.date;\n      orgName = d.name;\n      jobs = d.value;\n      if (d.name.length > maxLength) {\n        orgName = d.name.slice(0, maxLength).concat('...');\n      }\n    }\n\n    let yAdjust = -11;\n\n    // Include 'Click for details' if more detail is available\n    if (d.moreDetail) {\n      this.boundingBox.attr('height', 68);\n      this.boundingBox.attr('y', -23);\n      this.date.attr('y', 25 + yAdjust);\n      this.jobs.attr('y', 25 + yAdjust);\n      this.orgName.attr('y', 10 + yAdjust);\n      this.clickMore.text('Click for details');\n    } else {\n      this.boundingBox.attr('height', 50);\n      this.boundingBox.attr('y', -12);\n      this.date.attr('y', 25);\n      this.jobs.attr('y', 25);\n      this.orgName.attr('y', 10);\n      this.clickMore.text('');\n    }\n\n    const formatTooltipDate = formatDate;\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.date.text('' + formatTooltipDate(date));\n    this.orgName.text('' + orgName);\n    this.jobs.text('' + jobs + ' Jobs');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 45;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n      this.orgName.attr('x', -adjustedWidth - 7);\n      this.date.attr('x', -adjustedWidth - 7);\n      this.clickMore.attr('x', -adjustedWidth - 7);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth / 2);\n      this.date.attr('x', 20);\n      this.clickMore.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import * as d3 from 'd3';\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class HostsTooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -12)\n      .attr('rx', 2)\n      .attr('height', 50)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 25)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Date');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 72)\n      .attr('y', 25)\n      .text('0 Jobs');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 10)\n      .attr('font-size', 12)\n      .text('Org');\n  }\n\n  handleMouseOver = (d) => {\n    let date;\n    let orgName;\n    let jobs;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    } else {\n      const maxLength = 16;\n      date = d.date;\n      orgName = d.name;\n      jobs = d.value;\n      if (d.name.length > maxLength) {\n        orgName = d.name.slice(0, maxLength).concat('...');\n      }\n    }\n\n    const formatTooltipDate = formatDate;\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.date.text('' + formatTooltipDate(date));\n    this.orgName.text('' + orgName);\n    this.jobs.text('' + jobs + ' Hosts');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 45;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n      this.orgName.attr('x', -adjustedWidth - 7);\n      this.date.attr('x', -adjustedWidth - 7);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth / 2);\n      this.date.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport { getTotal } from '../Utilities/helpers';\nimport Legend from './Utilities/Legend';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nclass Tooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    // defer drawing until we know the data shape\n    this.drawn = false;\n    // show the success rate or not\n    this.showSuccess = false;\n  }\n\n  draw(d) {\n    // chart1 has success rate data and chart2 does not ...\n    this.showSuccess = d && d.data && 'success_rate' in d.data ? true : false;\n    const boundingHeight = this.showSuccess ? 70 : 52;\n    const boundingWidth = this.showSuccess ? 120 : 108;\n\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBOx = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', boundingHeight)\n      .attr('width', boundingWidth)\n      .attr('fill', '#393f44');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 0)\n      .text('Organization');\n    this.percentageTotal = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 16)\n      .text('0');\n    this.percentageSuccess = null;\n    if (this.showSuccess) {\n      this.percentageSuccess = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 30)\n        .text('');\n    }\n  }\n\n  handleMouseOver = (d) => {\n    // treat draw() as a singleton to avoid a painted window effect\n    if (this.drawn !== true) {\n      this.draw(d);\n      this.drawn = true;\n    }\n\n    let perc;\n    let percSuccess;\n    let orgName;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    }\n\n    if (d && d.data) {\n      const maxLength = 16;\n      perc = d.data.percent;\n      percSuccess = d.data.success_rate;\n      orgName = d.data.name;\n      if (d.data.name.length > maxLength) {\n        orgName = d.data.name.slice(0, maxLength - 3).concat('...');\n      }\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.percentageTotal.text('' + perc + '%');\n    if (percSuccess && this.percentageSuccess) {\n      this.percentageSuccess.text('(' + percSuccess + '% successful)');\n    }\n\n    this.orgName.text(' ' + orgName);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, -10) rotate(45)');\n      this.boundingBOx.attr('x', -125);\n      this.orgName.attr('x', -112);\n      this.percentageTotal.attr('x', -112);\n      if (this.showSuccess) {\n        this.percentageSuccess.attr('x', -112);\n      }\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, -10) rotate(45)');\n      this.boundingBOx.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.percentageTotal.attr('x', 20);\n      if (this.showSuccess) {\n        this.percentageSuccess.attr('x', 20);\n      }\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nconst PieChart = ({\n  data,\n  id,\n  colorFunc: color,\n  margin,\n  getWidth,\n  getHeight,\n}) => {\n  const colors = data\n    .map(({ id, name, count }) => {\n      return {\n        id,\n        name,\n        value: color(id),\n        count: Math.round(count),\n      };\n    })\n    .sort((a, b) => (a.count > b.count ? 1 : b.count > a.count ? -1 : 0));\n\n  const [selectedIds, setSelectedIds] = useState(\n    data.map(({ id }) => id).slice(0, 8)\n  );\n\n  let timeout = null;\n\n  const handleToggle = (id) => {\n    if (selectedIds.includes(id)) {\n      setSelectedIds(selectedIds.filter((el) => el !== id));\n    } else {\n      setSelectedIds([...selectedIds, id]);\n    }\n  };\n\n  const draw = () => {\n    d3.selectAll('#' + id + ' > *').remove();\n    const width = getWidth();\n    const height = getHeight();\n    const svg = d3\n      .select('#' + id)\n      .append('svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.bottom)\n      .append('g');\n\n    svg.append('g').attr('class', 'slices');\n    svg.append('g').attr('class', 'labels');\n    svg.append('g').attr('class', 'lines');\n    const radius = Math.min(width, height) / 2;\n    const filteredData = data.filter(({ id }) => selectedIds.includes(id));\n    const total = getTotal(filteredData);\n    filteredData.forEach(function (d) {\n      d.count = +d.count;\n      d.percent = +Math.round((d.count / total) * 100);\n    });\n    const donutTooltip = new Tooltip({\n      svg: '#' + id,\n    });\n    const pie = d3\n      .pie()\n      .sort(null)\n      .value((d) => d.count);\n    const arc = d3\n      .arc()\n      .outerRadius(radius - 10) // controls top positioning of chart\n      .innerRadius(0);\n\n    svg.attr(\n      'transform',\n      'translate(' +\n        (width + margin.left + margin.right) / 2 +\n        ',' +\n        (height + margin.top + margin.bottom) / 2 +\n        ')'\n    );\n\n    svg\n      .selectAll('path')\n      .data(pie(filteredData))\n      .enter()\n      .append('path')\n      .attr('d', arc)\n      .attr('fill', (d) => color(d.data.id));\n\n    svg\n      .selectAll('path')\n      .on('mouseover', function (d) {\n        d3.select(this).style('fill', d3.rgb(color(d.data.id)).darker(1));\n        donutTooltip.handleMouseOver(d);\n      })\n      .on('mouseout', function (d) {\n        d3.select(this).style('fill', color(d.data.id));\n        donutTooltip.handleMouseOut();\n      })\n      .on('mousemove', donutTooltip.handleMouseOver);\n\n    svg.append('g').classed('labels', true);\n    svg.append('g').classed('lines', true);\n  };\n\n  const init = () => {\n    draw();\n  };\n\n  const resize = () => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      draw();\n    }, 500);\n  };\n\n  useEffect(() => {\n    init();\n    window.addEventListener('resize', resize);\n\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [data, selectedIds]);\n\n  return (\n    <Wrapper>\n      <div id={id} />\n      {colors.length > 0 && (\n        <Legend\n          id={`${id}-legend`}\n          data={colors}\n          selected={selectedIds}\n          onToggle={handleToggle}\n          height=\"300px\"\n          chartName={`${id}-legend`}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nPieChart.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  colorFunc: PropTypes.func,\n};\n\nexport default initializeChart(PieChart);\n","import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nimport {\n  useQueryParams,\n  createUrl,\n  DEFAULT_NAMESPACE,\n} from '../../QueryParams/';\nimport { formatDate as dateForJobExplorer } from '../../Utilities/helpers';\n\nimport { readJobExplorer, readHostExplorer, readOrgOptions } from '../../Api/';\n\nimport { PageHeader } from '@ansible/ansible-ui-framework';\n\nimport { Link, useNavigate } from 'react-router-dom';\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  Tabs,\n  Tab,\n  Grid,\n  GridItem,\n  Alert,\n  AlertVariant,\n  AlertActionLink,\n  PageSection,\n} from '@patternfly/react-core';\n\nimport {\n  GroupedBarChart,\n  OrgsTooltip,\n  HostsTooltip,\n} from '../../Charts/GroupedBarChart/';\nimport PieChart from '../../Charts/PieChart';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport {\n  jobExplorer,\n  organizationStatistics as constants,\n} from '../../Utilities/constants';\nimport reportPaths from '../Reports/paths';\n\n// For chart colors\nimport { pfmulti } from '../../Charts/Utilities/colors';\nimport { scaleOrdinal } from 'd3';\nimport useRequest from '../../Utilities/useRequest';\n\nimport ApiErrorState from '../../Components/ApiStatus/ApiErrorState';\nimport LoadingState from '../../Components/ApiStatus/LoadingState';\nimport NoData from '../../Components/ApiStatus/NoData';\nimport { Paths } from '../../paths';\n\nconst Divider = styled('hr')`\n  border: 1px solid #ebebeb;\n`;\n\nconst colorFunc = scaleOrdinal(pfmulti);\n\nconst orgsChartMapper = (data = [], meta, attrName) => {\n  const dates = data.map(({ date, items }) => ({\n    date,\n    items: items.map(({ id, [attrName]: value, name }) => ({\n      id,\n      date,\n      value,\n      name: name || 'No organization',\n    })),\n  }));\n  meta.legend.map((el) => ({\n    ...el,\n    name: el.name || 'No organization',\n  }));\n  return dates;\n};\n\nconst pieChartMapper = (items = [], attrName) => {\n  const data = items.map(({ id, [attrName]: count, name }) => ({\n    id,\n    count,\n    name: name || 'No organization',\n  }));\n  return data;\n};\n\nconst navigateToJobExplorer =\n  (queryParams) =>\n  ({ date, id }) => {\n    const navigate = useNavigate();\n    if (id === -1) {\n      // disable clicking on \"others\" block\n      return;\n    }\n\n    const { sort_options, sort_order, ...rest } = queryParams;\n    const formattedDate = dateForJobExplorer(date);\n    const initialQueryParams = {\n      [DEFAULT_NAMESPACE]: {\n        ...jobExplorer.defaultParams,\n        ...rest,\n        quick_date_range: 'custom',\n        start_date: formattedDate,\n        end_date: formattedDate,\n        status: [],\n        org_id: [id],\n      },\n    };\n\n    navigate(createUrl(Paths.jobExplorer.replace('/', ''), initialQueryParams));\n  };\n\nconst chartMapper = [\n  {\n    api: readJobExplorer,\n    attr: 'total_count',\n    label: 'Jobs across organizations',\n    onClick: navigateToJobExplorer,\n    tooltip: OrgsTooltip,\n  },\n  {\n    api: readHostExplorer,\n    attr: 'total_unique_host_count',\n    label: 'Hosts across organizations',\n    onClick: () => null,\n    tooltip: HostsTooltip,\n  },\n];\n\nconst OrganizationStatistics = () => {\n  const [activeTabKey, setActiveTabKey] = useState(0);\n\n  // params from toolbar/searchbar\n  const { queryParams, setFromToolbar } = useQueryParams(\n    constants.defaultParams\n  );\n\n  const jobEventsByOrgParams = {\n    ...queryParams,\n    attributes: ['host_task_count'],\n    group_by: 'org',\n    include_others: true,\n    sort_options: 'host_task_count',\n    sort_order: 'desc',\n  };\n\n  const jobRunsByOrgParams = {\n    ...queryParams,\n    attributes: ['total_count'],\n    group_by: 'org',\n    include_others: true,\n    sort_options: 'total_count',\n    sort_order: 'desc',\n  };\n\n  const jobsByDateAndOrgParams = {\n    ...queryParams,\n    attributes: ['total_count'],\n    group_by: 'org',\n    group_by_time: true,\n    sort_options: 'total_count',\n    sort_order: 'desc',\n  };\n\n  const hostAcrossOrgParams = {\n    ...queryParams,\n    attributes: ['total_unique_host_count'],\n    group_by: 'org',\n    group_by_time: true,\n    sort_options: 'host_task_count',\n    sort_order: 'desc',\n  };\n\n  const {\n    result: jobs,\n    error: jobsError,\n    isLoading: jobsIsLoading,\n    isSuccess: jobsIsSuccess,\n    request: setJobs,\n  } = useRequest(readJobExplorer, []);\n\n  const { result: options, request: setOptions } = useRequest(\n    readOrgOptions,\n    {}\n  );\n\n  const {\n    result: orgs,\n    error: orgsError,\n    isLoading: orgsIsLoading,\n    isSuccess: orgsIsSuccess,\n    request: setOrgs,\n  } = useRequest(async (tabIndex = 0) => {\n    if (tabIndex === 0) {\n      return readJobExplorer(jobsByDateAndOrgParams);\n    } else {\n      return readHostExplorer(hostAcrossOrgParams);\n    }\n  }, []);\n\n  const {\n    result: tasks,\n    error: tasksError,\n    isLoading: tasksIsLoading,\n    isSuccess: tasksIsSuccess,\n    request: setTasks,\n  } = useRequest(readJobExplorer, []);\n\n  const handleTabClick = (_, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  useEffect(() => {\n    setOrgs(activeTabKey);\n  }, [activeTabKey]);\n\n  useEffect(() => {\n    setOrgs(activeTabKey);\n    setTasks(jobEventsByOrgParams);\n    setOptions(queryParams);\n    setJobs(jobRunsByOrgParams);\n  }, [queryParams]);\n\n  const renderDeprecationWarning = () => (\n    <Alert\n      variant={AlertVariant.warning}\n      title=\"The organization statistics page will be deprecated in a future release.\"\n      actionLinks={\n        <>\n          <AlertActionLink>\n            <Link\n              to={\n                '../reports/' + reportPaths.getDetails('hosts_by_organization')\n              }\n            >\n              Hosts by organization report\n            </Link>\n          </AlertActionLink>\n          <AlertActionLink>\n            <Link\n              to={\n                '../reports/' +\n                reportPaths.getDetails('jobs_and_tasks_by_organization')\n              }\n            >\n              Jobs/Tasks by organization report\n            </Link>\n          </AlertActionLink>\n        </>\n      }\n    >\n      The organization statistics page has been converted to a set of reports.\n      Please use our new, more full-featured reports by following the links\n      below.\n    </Alert>\n  );\n\n  const renderContent = () => (\n    <Grid hasGutter>\n      <GridItem span={12}>{renderDeprecationWarning()}</GridItem>\n      <GridItem span={12}>\n        <Card>\n          <Tabs activeKey={activeTabKey} onSelect={handleTabClick}>\n            <Tab eventKey={0} title={'Jobs'} />\n            <Tab eventKey={1} title={'Hosts'} />\n          </Tabs>\n          <CardBody>\n            {orgsIsLoading && <LoadingState />}\n            {orgsError && <ApiErrorState message={orgsError.error.error} />}\n            {orgsIsSuccess && orgs.dates?.length <= 0 && <NoData />}\n            {orgsIsSuccess && orgs.dates?.length > 0 && (\n              <GroupedBarChart\n                margin={{ top: 20, right: 20, bottom: 50, left: 50 }}\n                id=\"d3-grouped-bar-chart-root\"\n                data={orgsChartMapper(\n                  orgs.dates,\n                  orgs.meta,\n                  chartMapper[activeTabKey].attr\n                )}\n                legend={orgs.meta.legend}\n                colorFunc={colorFunc}\n                yLabel={chartMapper[activeTabKey].label}\n                onClick={chartMapper[activeTabKey].onClick(queryParams)}\n                TooltipClass={chartMapper[activeTabKey].tooltip}\n              />\n            )}\n          </CardBody>\n        </Card>\n      </GridItem>\n      <GridItem span={6}>\n        <Card>\n          <CardTitle>\n            <h2>Job Runs by Organization</h2>\n          </CardTitle>\n          <Divider />\n          <CardBody>\n            {jobsIsLoading && <LoadingState />}\n            {jobsError && <ApiErrorState message={jobsError.error.error} />}\n            {jobsIsSuccess && jobs.items?.length <= 0 && <NoData />}\n            {jobsIsSuccess && jobs.items?.length > 0 && (\n              <PieChart\n                margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                id=\"d3-donut-1-chart-root\"\n                data={pieChartMapper(jobs.items, 'total_count')}\n                colorFunc={colorFunc}\n              />\n            )}\n          </CardBody>\n        </Card>\n      </GridItem>\n      <GridItem span={6}>\n        <Card>\n          <CardTitle>\n            <h2>Usage by Organization (Tasks)</h2>\n          </CardTitle>\n          <Divider />\n          <CardBody>\n            {tasksIsLoading && <LoadingState />}\n            {tasksError && <ApiErrorState message={tasksError.error.error} />}\n            {tasksIsSuccess && tasks.items?.length <= 0 && <NoData />}\n            {tasksIsSuccess && tasks.items?.length > 0 && (\n              <PieChart\n                margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                id=\"d3-donut-2-chart-root\"\n                data={pieChartMapper(tasks.items, 'host_task_count')}\n                colorFunc={colorFunc}\n              />\n            )}\n          </CardBody>\n        </Card>\n      </GridItem>\n    </Grid>\n  );\n\n  return (\n    <>\n      <PageHeader title={'Organization Statistics'} />\n      <FilterableToolbar\n        categories={options}\n        filters={queryParams}\n        setFilters={setFromToolbar}\n      />\n      <PageSection>{renderContent()}</PageSection>\n    </>\n  );\n};\n\nexport default OrganizationStatistics;\n","var pfmulti = [\n    '#06C',\n    '#4CB140',\n    '#009596',\n    '#5752D1',\n    '#F4C145',\n    '#EC7A08',\n    '#8BC1F7',\n    '#23511E',\n    '#A2D9D9',\n    '#2A265F',\n    '#F9E0A2',\n    '#8F4700',\n    '#002F5D',\n];\nexport { pfmulti };\n","import React from 'react';\nimport { Title, EmptyState, EmptyStateVariant, EmptyStateIcon, EmptyStateBody, } from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\nvar LoadingState = function () { return (React.createElement(EmptyState, { variant: EmptyStateVariant.full, style: { minHeight: '400px' } },\n    React.createElement(EmptyStateIcon, { icon: CubesIcon }),\n    React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, \"Loading...\"),\n    React.createElement(EmptyStateBody, null, \"Please wait.\"))); };\nexport default LoadingState;\n","import React from 'react';\nimport { Title, EmptyState, EmptyStateVariant, EmptyStateIcon, EmptyStateBody, } from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\nvar NoData = function (_a) {\n    var title = _a.title, subtext = _a.subtext;\n    return (React.createElement(EmptyState, { variant: EmptyStateVariant.full, style: { minHeight: '400px' } },\n        React.createElement(EmptyStateIcon, { icon: CubesIcon }),\n        React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, title ? title : 'No Data'),\n        subtext && React.createElement(EmptyStateBody, null, subtext)));\n};\nexport default NoData;\n","var paths = {\n    getDetails: function (slug) { return \"\".concat(slug); },\n};\nexport default paths;\n"],"names":["initializeChart","Chart","BaseChart","props","id","margin","navigate","useNavigate","getWidth","parseInt","d3","style","left","right","getHeight","top","bottom","propTypes","PropTypes","Container","styled","div","height","LegendDetail","Wrapper","Color","attrs","color","Title","span","SubTitle","Legend","data","selected","onToggle","chartName","map","index","name","value","count","key","Switch","isChecked","some","selection","onChange","isRequired","formatDate","date","pieces","split","GroupedBarChart","onClick","TooltipClass","legend","colors","colorFunc","useState","slice","selectedIds","setSelectedIds","timeout","draw","remove","reduce","formatted","selectedOrgs","items","filter","includes","concat","width","x0","range","padding","x1","y","maxTicksOneMonth","Math","round","length","maxTicksTwoMonths","ticks","d","i","undefined","item","xAxis","tickValues","tickFormat","yAxis","tickSize","svg","append","attr","dates","tooltip","domain","bandwidth","call","selectAll","text","yLabel","exit","enter","bars","merge","subEnter","on","moreDetail","endsWith","this","darker","handleMouseOver","handleMouseOut","resize","clearTimeout","setTimeout","useEffect","window","addEventListener","removeEventListener","el","defaultProps","OrgsTooltip","orgName","jobs","x","pageX","node","getBoundingClientRect","pageY","boundingBox","clickMore","formatTooltipDate","toolTipWidth","toolTipBase","chartWidth","flipped","jobsWidth","getComputedTextLength","adjustedWidth","maxTextPerc","boxWidth","overage","toolTipPoint","interrupt","transition","delay","textWidthThreshold","HostsTooltip","Tooltip","perc","percSuccess","drawn","percent","success_rate","maxLength","percentageTotal","percentageSuccess","boundingBOx","showSuccess","boundingHeight","boundingWidth","PieChart","sort","a","b","radius","min","filteredData","total","getTotal","forEach","donutTooltip","pie","arc","outerRadius","innerRadius","classed","Divider","scaleOrdinal","orgsChartMapper","meta","attrName","pieChartMapper","chartMapper","api","readJobExplorer","label","queryParams","sort_options","sort_order","rest","formattedDate","dateForJobExplorer","initialQueryParams","DEFAULT_NAMESPACE","jobExplorer","defaultParams","quick_date_range","start_date","end_date","status","org_id","createUrl","Paths","replace","readHostExplorer","activeTabKey","setActiveTabKey","useQueryParams","constants","setFromToolbar","jobEventsByOrgParams","attributes","group_by","include_others","jobRunsByOrgParams","jobsByDateAndOrgParams","group_by_time","hostAcrossOrgParams","useRequest","result","jobsError","error","jobsIsLoading","isLoading","jobsIsSuccess","isSuccess","setJobs","request","readOrgOptions","options","setOptions","orgs","orgsError","orgsIsLoading","orgsIsSuccess","setOrgs","tasks","tasksError","tasksIsLoading","tasksIsSuccess","setTasks","PageHeader","title","categories","filters","setFilters","PageSection","Grid","hasGutter","GridItem","Alert","variant","AlertVariant","warning","actionLinks","AlertActionLink","Link","to","reportPaths","getDetails","Card","Tabs","activeKey","onSelect","_","tabIndex","Tab","eventKey","CardBody","LoadingState","ApiErrorState","message","NoData","CardTitle","EmptyState","EmptyStateVariant","full","minHeight","EmptyStateIcon","icon","headingLevel","size","EmptyStateBody","_a","subtext","slug"],"sourceRoot":""}