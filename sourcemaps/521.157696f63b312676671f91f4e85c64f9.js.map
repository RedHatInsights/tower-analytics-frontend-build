{"version":3,"file":"js/521.03db4629e7554870207a.js","mappings":"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","sources":["webpack:///./src/Containers/SavingsPlanner/Shared/constants.js","webpack:///./src/Containers/SavingsPlanner/Shared/usePlanData.js","webpack:///./src/Components/AlertModal/AlertModal.js","webpack:///./src/Components/ErrorDetail/ErrorDetail.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/Steps/Details/index.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/Steps/Tasks/index.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/Steps/Templates/index.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/index.js","webpack:///./src/Containers/SavingsPlanner/Add/index.js","webpack:///./src/Components/CardActionsRow.tsx","webpack:///./src/Utilities/getRelatedResourceDeleteDetails.js","webpack:///./src/Components/DeleteButton/DeleteButton.js","webpack:///./src/Components/RoutedTabs.js","webpack:///./src/Containers/SavingsPlanner/Details/DetailsTab/index.js","webpack:///./src/Utilities/hoursFormatter.ts","webpack:///./src/Containers/SavingsPlanner/Details/StatisticsTab/TotalSavings/index.tsx","webpack:///./src/Containers/SavingsPlanner/Details/StatisticsTab/FormulaDescription/index.tsx","webpack:///./src/Containers/SavingsPlanner/Details/StatisticsTab/index.tsx","webpack:///./src/Containers/SavingsPlanner/Edit/index.js","webpack:///./src/Containers/SavingsPlanner/Details/index.js","webpack:///./src/Containers/SavingsPlanner/Details/Details.js","webpack:///./src/Components/EmptyList.tsx","webpack:///./src/Containers/SavingsPlanner/List/ListItem/index.js","webpack:///./src/Components/Toolbar/ToolbarDeleteButton.js","webpack:///./src/Containers/SavingsPlanner/List/List.js","webpack:///./src/Utilities/useSelected.js","webpack:///./src/Containers/SavingsPlanner/index.tsx"],"sourcesContent":["export const actions = {\n  SET_NAME: 'SET_NAME',\n  SET_CATEGORY: 'SET_CATEGORY',\n  SET_DESCRIPTION: 'SET_DESCRIPTION',\n  SET_MANUAL_TIME: 'SET_MANUAL_TIME',\n  SET_HOSTS: 'SET_HOSTS',\n  SET_FREQUENCY_PERIOD: 'SET_FREQUENCY_PERIOD',\n  SET_TASKS: 'SET_TASKS',\n  SET_TEMPLATE_ID: 'SET_TEMPLATE_ID',\n};\n","import { useReducer } from 'react';\n\nimport { actions } from './constants';\n\nconst formatPayload = (data) => {\n  data.tasks = data.tasks.map((task, index) => ({\n    task,\n    task_order: index + 1,\n  }));\n\n  if (!data.hosts || data.hosts === '') {\n    data.hosts = 1;\n  }\n\n  // these two are fields the api expects but we don't\n  // have form elements for in the MVP.\n  data.hourly_rate = 50;\n  data.frequency_per_period = 1;\n\n  return data;\n};\n\nconst convertTasks = (tasks = []) => {\n  if (tasks?.length) {\n    return tasks\n      .sort((a, b) => a.task_order - b.task_order)\n      .map(({ task }) => task);\n  }\n  return undefined;\n};\n\nconst usePlanData = (initial) => {\n  const formReducer = (state, { type, value }) => {\n    switch (type) {\n      /* v1 api reducers */\n      case actions.SET_NAME:\n        return {\n          ...state,\n          name: value,\n        };\n      case actions.SET_CATEGORY:\n        return {\n          ...state,\n          category: value,\n        };\n      case actions.SET_DESCRIPTION:\n        return {\n          ...state,\n          description: value,\n        };\n      case actions.SET_MANUAL_TIME:\n        return {\n          ...state,\n          manual_time: value,\n        };\n\n      case actions.SET_HOSTS:\n        return {\n          ...state,\n          hosts: value,\n        };\n      case actions.SET_FREQUENCY_PERIOD:\n        return {\n          ...state,\n          frequency_period: value,\n        };\n      case actions.SET_TASKS:\n        return {\n          ...state,\n          tasks: value,\n        };\n      case actions.SET_TEMPLATE_ID:\n        return {\n          ...state,\n          template_id: value,\n        };\n      default:\n        throw new Error(\n          `usePlanData reducer action type ${type} was not found.`\n        );\n    }\n  };\n\n  const [formData, dispatch] = useReducer(formReducer, {\n    name: initial?.name || '',\n    category: initial?.category || 'system',\n    description: initial?.description || '',\n    manual_time: initial?.manual_time || 240,\n    hosts: initial?.hosts || 1,\n    frequency_period: initial?.frequency_period || 'weekly',\n    tasks: convertTasks(initial?.tasks) || [],\n    template_id: initial?.template_id || -2,\n  });\n\n  return {\n    formData,\n    requestPayload: formatPayload({ ...formData }),\n    dispatch,\n  };\n};\n\nexport default usePlanData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Modal, Title } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon as PFCheckCircleIcon,\n  ExclamationCircleIcon as PFExclamationCircleIcon,\n  ExclamationTriangleIcon as PFExclamationTriangleIcon,\n  InfoCircleIcon as PFInfoCircleIcon,\n  TimesCircleIcon as PFTimesCircleIcon,\n} from '@patternfly/react-icons';\nimport styled from 'styled-components';\n\nconst ExclamationCircleIcon = styled(PFExclamationCircleIcon)`\n  color: var(--pf-global--danger-color--100);\n`;\n\nconst TimesCircleIcon = styled(PFTimesCircleIcon)`\n  color: var(--pf-global--danger-color--100);\n`;\n\nconst InfoCircleIcon = styled(PFInfoCircleIcon)`\n  color: var(--pf-global--info-color--100);\n`;\n\nconst CheckCircleIcon = styled(PFCheckCircleIcon)`\n  color: var(--pf-global--success-color--100);\n`;\n\nconst ExclamationTriangleIcon = styled(PFExclamationTriangleIcon)`\n  color: var(--pf-global--warning-color--100);\n`;\n\nconst Header = styled.div`\n  display: flex;\n  svg {\n    margin-right: 16px;\n  }\n`;\n\nconst AlertModal = ({\n  isOpen,\n  title,\n  label = 'Alert modal',\n  variant = 'warning',\n  children,\n  ...props\n}) => {\n  const variantIcons = {\n    danger: <ExclamationCircleIcon size=\"lg\" />,\n    error: <TimesCircleIcon size=\"lg\" />,\n    info: <InfoCircleIcon size=\"lg\" />,\n    success: <CheckCircleIcon size=\"lg\" />,\n    warning: <ExclamationTriangleIcon size=\"lg\" />,\n  };\n\n  const customHeader = (\n    <Header>\n      {variant ? variantIcons[variant] : null}\n      <Title id=\"alert-modal-header-label\" size=\"2xl\" headingLevel=\"h2\">\n        {title}\n      </Title>\n    </Header>\n  );\n\n  return (\n    <Modal\n      header={customHeader}\n      aria-label={label}\n      aria-labelledby=\"alert-modal-header-label\"\n      isOpen={!!isOpen}\n      variant=\"small\"\n      title={title}\n      {...props}\n    >\n      {children}\n    </Modal>\n  );\n};\n\nAlertModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  variant: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default AlertModal;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Card as PFCard,\n  CardBody as PFCardBody,\n  ExpandableSection as PFExpandable,\n} from '@patternfly/react-core';\n\nconst Card = styled(PFCard)`\n  background-color: var(--pf-global--BackgroundColor--200);\n  overflow-wrap: break-word;\n`;\n\nconst CardBody = styled(PFCardBody)`\n  max-height: 200px;\n  overflow: scroll;\n`;\n\nconst Expandable = styled(PFExpandable)`\n  text-align: left;\n\n  & .pf-c-expandable__toggle {\n    padding-left: 10px;\n    margin-left: 5px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n`;\n\nfunction ErrorDetail({ error }) {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const handleToggle = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  return (\n    <>\n      {Array.isArray(error) && error.length && (\n        <Expandable\n          toggleText={'Details'}\n          onToggle={handleToggle}\n          isExpanded={isExpanded}\n        >\n          <Card>\n            <CardBody>\n              <ul>\n                {error.map((m) =>\n                  typeof m === 'string' ? <li key={m}>{m}</li> : null\n                )}\n              </ul>\n            </CardBody>\n          </Card>\n        </Expandable>\n      )}\n    </>\n  );\n}\n\nErrorDetail.propTypes = {\n  error: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default ErrorDetail;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Form,\n  FormGroup,\n  Grid,\n  Select,\n  SelectOption,\n  TextInput,\n  NumberInput,\n  FormHelperText,\n} from '@patternfly/react-core';\n\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport { actions } from '../../../constants';\n\nimport { isPositiveNum } from '../../../../../../Utilities/helpers';\n\nconst Details = ({ options, formData, dispatch }) => {\n  const { name, category, description, manual_time, hosts, frequency_period } =\n    formData;\n\n  const [categoryIsOpen, setCategoryIsOpen] = useState(false);\n  const [manualTimeIsOpen, setManualTimeIsOpen] = useState(false);\n  const [frequencyPeriodIsOpen, setFrequencyPeriodIsOpen] = useState(false);\n  const [showError, setShowError] = useState(false);\n\n  return (\n    <Form>\n      {options && (\n        <Grid hasGutter md={6}>\n          <FormGroup\n            label=\"What do you want to automate?\"\n            isRequired\n            fieldId=\"name-field\"\n          >\n            <TextInput\n              isRequired\n              placeholder=\"Example: Provision NGINX server\"\n              type=\"text\"\n              id=\"name-field\"\n              name=\"name\"\n              value={name}\n              onChange={(newName) =>\n                dispatch({\n                  type: actions.SET_NAME,\n                  value: newName,\n                })\n              }\n              onFocus={() => setShowError(!name)}\n              onBlur={() => setShowError(!name)}\n            />\n            {!formData.name && showError && (\n              <FormHelperText\n                isError\n                icon={<ExclamationCircleIcon />}\n                isHidden={!showError}\n              >\n                Name is required\n              </FormHelperText>\n            )}\n          </FormGroup>\n          <FormGroup label=\"What type of task is it?\" fieldId=\"category-field\">\n            <Select\n              id=\"category-field\"\n              isOpen={categoryIsOpen}\n              variant={'single'}\n              aria-label={'Plan category selector'}\n              maxHeight={390}\n              onToggle={() => setCategoryIsOpen(!categoryIsOpen)}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_CATEGORY,\n                  value: selection,\n                });\n                setCategoryIsOpen(false);\n              }}\n              selections={category}\n            >\n              {(options?.category || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n          <FormGroup\n            label=\"Enter a description of your automation plan\"\n            fieldId=\"description-field\"\n          >\n            <TextInput\n              type=\"text\"\n              placeholder=\"Place description here\"\n              id=\"description-field\"\n              name=\"description\"\n              value={description}\n              onChange={(newDescription) =>\n                dispatch({\n                  type: actions.SET_DESCRIPTION,\n                  value: newDescription,\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"How long does it take to do this manually?\"\n            fieldId=\"manual-time-field\"\n          >\n            <Select\n              id=\"manual-time-field\"\n              isOpen={manualTimeIsOpen}\n              variant={'single'}\n              placeholderText=\"Select amount\"\n              aria-label={'Plan time selector'}\n              onToggle={() => setManualTimeIsOpen(!manualTimeIsOpen)}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_MANUAL_TIME,\n                  value: selection,\n                });\n                setManualTimeIsOpen(false);\n              }}\n              selections={manual_time}\n            >\n              {(options?.manual_time || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n          <FormGroup\n            label=\"How many hosts do you plan to run this on?\"\n            fieldId=\"hosts-field\"\n          >\n            <NumberInput\n              inputAriaLabel=\"Number of hosts\"\n              widthChars={8}\n              onChange={(event) => {\n                if (\n                  isPositiveNum(event.target.value) ||\n                  event.target.value.length === 0\n                ) {\n                  dispatch({\n                    type: actions.SET_HOSTS,\n                    value: parseInt(event.target.value),\n                  });\n                }\n              }}\n              onMinus={() =>\n                dispatch({\n                  type: actions.SET_HOSTS,\n                  value: isPositiveNum(hosts) ? hosts - 1 : 0,\n                })\n              }\n              onPlus={() =>\n                dispatch({\n                  type: actions.SET_HOSTS,\n                  value: isPositiveNum(hosts) ? hosts + 1 : 1,\n                })\n              }\n              id=\"hosts-field\"\n              name=\"hosts\"\n              value={hosts}\n              min={0}\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"How often do you do this?\"\n            fieldId=\"frequency-period-field\"\n          >\n            <Select\n              id=\"frequency-period-field\"\n              isOpen={frequencyPeriodIsOpen}\n              variant={'single'}\n              placeholderText=\"Select frequency period\"\n              aria-label={'Plan frequency period selector'}\n              onToggle={() => {\n                setFrequencyPeriodIsOpen(!frequencyPeriodIsOpen);\n              }}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_FREQUENCY_PERIOD,\n                  value: selection,\n                });\n                setFrequencyPeriodIsOpen(false);\n              }}\n              selections={frequency_period}\n            >\n              {(options?.frequency_period || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n        </Grid>\n      )}\n    </Form>\n  );\n};\n\nDetails.propTypes = {\n  options: PropTypes.object.isRequired,\n  formData: PropTypes.object.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Details;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  DataList,\n  DataListAction,\n  DataListItem,\n  DataListCell,\n  DataListItemRow,\n  DataListControl,\n  DataListDragButton,\n  DataListItemCells,\n  Form,\n  FormGroup,\n  Grid,\n  InputGroup,\n  TextInput,\n  Title,\n} from '@patternfly/react-core';\nimport { PlusIcon, TimesIcon } from '@patternfly/react-icons';\n\nimport { actions } from '../../../constants';\n\nconst TaskSection = styled.div`\n  margin-top: 20px;\n`;\n\nconst TaskTitle = styled(Title)`\n  margin-bottom: 10px;\n`;\n\nconst TaskDeleteButton = styled(Button)`\n  padding: 0 16px;\n`;\n\nconst DeleteTaskActionSection = styled(DataListAction)`\n  padding: 6px 0;\n`;\n\nconst TaskRow = styled(DataListItemRow)`\n  align-items: center;\n`;\n\nconst Tasks = ({ tasks, dispatch }) => {\n  const setTasks = (val) => {\n    dispatch({ type: actions.SET_TASKS, value: val });\n  };\n\n  const [taskToAdd, setTaskToAdd] = useState('');\n\n  const [liveText, setLiveText] = useState('');\n  const [id, setId] = useState('');\n\n  const onDragStart = (newId) => {\n    setId(newId);\n    setLiveText(`Dragging started for task ${newId}.`);\n  };\n\n  const onDragMove = (oldIndex, newIndex) => {\n    setLiveText(\n      `Dragging task ${id}.  Task ${oldIndex} is now task ${newIndex}.`\n    );\n  };\n\n  const onDragCancel = () => {\n    setLiveText('Dragging cancelled. Tasks list order is unchanged.');\n  };\n\n  const onDragFinish = (newItemOrder) => {\n    setLiveText('Dragging finished');\n    setTasks(newItemOrder.map((val) => val.split('-').slice(0, -1).join('-')));\n  };\n\n  const appendTask = () => {\n    const trimmedTask = taskToAdd.trim();\n    if (trimmedTask !== '') {\n      setTasks([...tasks, trimmedTask]);\n      setTaskToAdd('');\n    }\n  };\n\n  const handleTextKeyDown = (e) => {\n    if (e.key && e.key === 'Enter') {\n      e.preventDefault();\n      appendTask();\n    }\n  };\n\n  const removeTask = (index) => {\n    setTasks(tasks.filter((t, idx) => idx !== index));\n  };\n\n  return (\n    <>\n      <Form>\n        <Grid hasGutter md={6}>\n          <FormGroup\n            label=\"What tasks do you need to accomplish this plan?\"\n            fieldId=\"task-field\"\n          >\n            <InputGroup>\n              <TextInput\n                placeholder=\"Enter a description of each task\"\n                type=\"text\"\n                id=\"task-field\"\n                name=\"task\"\n                value={taskToAdd}\n                onChange={(newTaskName) => setTaskToAdd(newTaskName)}\n                onKeyDown={handleTextKeyDown}\n              />\n              <Button\n                onClick={appendTask}\n                isDisabled={taskToAdd.trim() === ''}\n                variant=\"control\"\n                aria-label=\"Add task\"\n              >\n                <PlusIcon />\n              </Button>\n            </InputGroup>\n          </FormGroup>\n        </Grid>\n      </Form>\n      {tasks.length > 0 && (\n        <TaskSection>\n          <TaskTitle headingLevel=\"h4\" size=\"xl\">\n            Tasks\n          </TaskTitle>\n          <DataList\n            aria-label=\"Draggable list to reorder and remove tasks.\"\n            isCompact\n            onDragFinish={onDragFinish}\n            onDragStart={onDragStart}\n            onDragMove={onDragMove}\n            onDragCancel={onDragCancel}\n            itemOrder={tasks.map((val, idx) => `${val}-${idx}`)}\n          >\n            {tasks.map((task, index) => (\n              <DataListItem\n                aria-labelledby={`cell-${index + 1}`}\n                id={`${task}-${index}`}\n                key={index + 1}\n              >\n                <TaskRow>\n                  <DataListControl>\n                    <DataListDragButton\n                      aria-label=\"Reorder\"\n                      aria-labelledby={`cell-${index + 1}`}\n                      aria-describedby=\"Press space or enter to begin dragging, and use the arrow keys to navigate up or down. Press enter to confirm the drag, or any other key to cancel the drag operation.\"\n                      aria-pressed=\"false\"\n                    />\n                  </DataListControl>\n                  <DataListItemCells\n                    dataListCells={[\n                      <DataListCell key={index + 1}>\n                        <span id={`cell-${index + 1}`}>{`${\n                          index + 1\n                        }. ${task}`}</span>\n                      </DataListCell>,\n                    ]}\n                  />\n                  <DeleteTaskActionSection aria-label=\"Actions\">\n                    <TaskDeleteButton\n                      onClick={() => removeTask(index)}\n                      variant=\"plain\"\n                      aria-label=\"Delete\"\n                    >\n                      <TimesIcon />\n                    </TaskDeleteButton>\n                  </DeleteTaskActionSection>\n                </TaskRow>\n              </DataListItem>\n            ))}\n          </DataList>\n        </TaskSection>\n      )}\n      <div className=\"pf-screen-reader\" aria-live=\"assertive\">\n        {liveText}\n      </div>\n    </>\n  );\n};\n\nTasks.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Tasks;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  Form,\n  FormGroup,\n  PaginationVariant,\n} from '@patternfly/react-core';\nimport {\n  TableComposable,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n} from '@patternfly/react-table';\n\nimport LoadingState from '../../../../../../Components/ApiStatus/LoadingState';\nimport NoResults from '../../../../../../Components/ApiStatus/NoResults';\nimport ApiErrorState from '../../../../../../Components/ApiStatus/ApiErrorState';\nimport Pagination from '../../../../../../Components/Pagination';\n\nimport { useQueryParams } from '../../../../../../QueryParams/';\n\nimport {\n  readJobExplorer,\n  readJobExplorerOptions,\n} from '../../../../../../Api/';\n\nimport FilterableToolbar from '../../../../../../Components/Toolbar/';\n\nimport { actions } from '../../../constants';\nimport useRequest from '../../../../../../Utilities/useRequest';\n\nconst ListFooter = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst initialQueryParams = {\n  group_by: 'template',\n  limit: 10,\n  group_by_time: false,\n  offset: 0,\n  sort_options: 'name',\n  sort_order: 'asc',\n\n  cluster_id: [],\n  inventory_id: [],\n  job_type: [],\n  org_id: [],\n  status: [],\n  template_id: [],\n};\n\nconst Templates = ({ template_id, dispatch: formDispatch }) => {\n  const {\n    queryParams,\n    setFromPagination,\n    setFromToolbar,\n    dispatch: queryParamsDispatch,\n  } = useQueryParams(initialQueryParams);\n\n  const {\n    result: options,\n    error,\n    isSuccess,\n    request: fetchOptions,\n  } = useRequest(async () => {\n    // No idea why we are calling this endpoint without query but it seems to work\n    const { quick_date_range, sort_options, ...rest } =\n      await readJobExplorerOptions();\n    return rest;\n  }, {});\n\n  const {\n    result: { items: templates, meta },\n    isLoading: templatesIsLoading,\n    isSuccess: templatesIsSuccess,\n    request: fetchEndpoints,\n  } = useRequest(readJobExplorer, {\n    items: [],\n    meta: { count: 0 },\n  });\n\n  const onSort = (_ev, _idx, dir) => {\n    queryParamsDispatch({\n      type: 'SET_SORT_ORDER',\n      value: { sort_order: dir },\n    });\n  };\n\n  const sortParams = {\n    sort: {\n      sortBy: {\n        direction: queryParams.sort_order,\n      },\n      onSort,\n    },\n  };\n\n  useEffect(() => {\n    fetchOptions();\n    fetchEndpoints(queryParams);\n  }, [queryParams]);\n\n  return isSuccess ? (\n    <Form>\n      <FormGroup\n        label=\"Link a template to this plan:\"\n        fieldId=\"template-link-field\"\n      >\n        <FilterableToolbar\n          categories={options}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n          pagination={\n            <Pagination\n              count={meta.count}\n              params={{\n                limit: +queryParams.limit,\n                offset: +queryParams.offset,\n              }}\n              setPagination={setFromPagination}\n              isCompact\n            />\n          }\n        />\n        {error && <ApiErrorState message={error.error} />}\n        {templatesIsLoading && <LoadingState />}\n        {templatesIsSuccess && templates.length <= 0 && <NoResults />}\n        {templatesIsSuccess && templates.length > 0 && (\n          <TableComposable aria-label=\"Template link table\" variant=\"compact\">\n            <Thead>\n              <Tr>\n                <Th />\n                <Th {...sortParams}>Name</Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {templates.map(({ id, name }) => (\n                <Tr key={`template-detail-${id}`}>\n                  <Td\n                    data-testid={`radio-${id}`}\n                    key={`template-detail-${id}-radio-td`}\n                    select={{\n                      rowIndex: id,\n                      onSelect: (_event, _isSelected, value) =>\n                        formDispatch({\n                          type: actions.SET_TEMPLATE_ID,\n                          value,\n                        }),\n                      isSelected: template_id === id,\n                      variant: 'radio',\n                    }}\n                  />\n                  <Td>{name}</Td>\n                </Tr>\n              ))}\n            </Tbody>\n          </TableComposable>\n        )}\n        <ListFooter>\n          <div>\n            {template_id !== -2 && (\n              <Button\n                key=\"clear-selection-button\"\n                variant=\"link\"\n                aria-label=\"Clear selection\"\n                onClick={() => {\n                  formDispatch({\n                    type: actions.SET_TEMPLATE_ID,\n                    value: -2,\n                  });\n                }}\n              >\n                Clear selection\n              </Button>\n            )}\n          </div>\n          <Pagination\n            count={meta.count}\n            params={{\n              limit: +queryParams.limit,\n              offset: +queryParams.offset,\n            }}\n            setPagination={setFromPagination}\n            variant={PaginationVariant.bottom}\n          />\n        </ListFooter>\n      </FormGroup>\n    </Form>\n  ) : null;\n};\n\nTemplates.propTypes = {\n  template_id: PropTypes.number.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Templates;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory, useLocation, Redirect } from 'react-router-dom';\n\nimport {\n  Button,\n  ButtonVariant,\n  Wizard,\n  WizardFooter,\n  WizardContextConsumer,\n} from '@patternfly/react-core';\n\nimport { paths } from '../../index';\nimport useRequest from '../../../../Utilities/useRequest';\nimport usePlanData from '../usePlanData';\n\nimport { createPlan, updatePlan } from '../../../../Api/';\n\nimport AlertModal from '../../../../Components/AlertModal/AlertModal';\nimport ErrorDetail from '../../../../Components/ErrorDetail/ErrorDetail';\n\nimport Details from './Steps/Details';\nimport Tasks from './Steps/Tasks';\nimport Templates from './Steps/Templates';\n\nconst Form = ({ title, options, data = {} }) => {\n  const history = useHistory();\n  const { hash, pathname } = useLocation();\n  const [startStep, setStartStep] = useState(null);\n\n  const {\n    result: apiResponse,\n    isSuccess,\n    error,\n    request: setData,\n  } = useRequest(\n    async (requestPayload, id) => {\n      if (requestPayload) {\n        if (id) {\n          return await updatePlan(id, requestPayload);\n        } else {\n          // Put the id inside the plan_created to match the update endpoint\n          const { id, plan_created } = await createPlan(requestPayload);\n          return {\n            plan_created: {\n              id,\n              ...plan_created,\n            },\n          };\n        }\n      }\n\n      return { plan_created: { id: 0 } };\n    },\n    {\n      plan_created: {\n        id: 0, // put zero to match the type\n      },\n    }\n  );\n\n  const { formData, requestPayload, dispatch } = usePlanData(data);\n  const steps = [\n    {\n      step_number: 1,\n      id: 'details',\n      name: 'Details',\n      component: (\n        <Details options={options} formData={formData} dispatch={dispatch} />\n      ),\n    },\n    {\n      step_number: 2,\n      id: 'tasks',\n      name: 'Tasks',\n      component: <Tasks tasks={formData.tasks} dispatch={dispatch} />,\n      canJumpTo: !!formData.name,\n    },\n    {\n      step_number: 3,\n      id: 'link_template',\n      name: 'Link template',\n      component: (\n        <Templates template_id={formData.template_id} dispatch={dispatch} />\n      ),\n      canJumpTo: !!formData.name,\n      nextButtonText: 'Save',\n    },\n  ];\n\n  const onStepChange = (newStep) => {\n    history.replace({\n      hash: newStep.id,\n    });\n  };\n\n  const onSave = () => {\n    setData(requestPayload, data?.id);\n  };\n\n  const onClose = () => {\n    if (location.pathname.indexOf('/edit') !== -1) {\n      history.push(paths.getDetails(data?.id));\n    } else {\n      history.push(paths.get);\n    }\n  };\n\n  const reset = () => {\n    setData();\n  };\n\n  const CustomFooter = (\n    <WizardFooter>\n      <WizardContextConsumer>\n        {({ activeStep, onNext, onBack, onClose }) => {\n          if (activeStep.step_number !== 3) {\n            return (\n              <>\n                <Button\n                  variant={ButtonVariant.primary}\n                  type=\"submit\"\n                  onClick={onNext}\n                  isDisabled={!formData.name}\n                >\n                  Next\n                </Button>\n                {activeStep.step_number !== 1 && (\n                  <Button variant=\"secondary\" onClick={onBack}>\n                    Back\n                  </Button>\n                )}\n                <Button variant=\"link\" onClick={onClose}>\n                  Cancel\n                </Button>\n              </>\n            );\n          }\n          // Final step buttons\n          return (\n            <>\n              <Button\n                variant={ButtonVariant.primary}\n                type=\"submit\"\n                onClick={onSave}\n                isDisabled={!formData.name}\n              >\n                Save\n              </Button>\n              <Button variant=\"secondary\" onClick={onBack}>\n                Back\n              </Button>\n              <Button variant=\"link\" onClick={onClose}>\n                Cancel\n              </Button>\n            </>\n          );\n        }}\n      </WizardContextConsumer>\n    </WizardFooter>\n  );\n\n  useEffect(() => {\n    if (pathname.indexOf('/add') === -1 && hash) {\n      setStartStep(steps.find((step) => `#${step.id}` === hash).step_number);\n    } else {\n      history.replace({\n        hash: 'details',\n      });\n      setStartStep(1);\n    }\n  }, []);\n\n  return (\n    <>\n      {isSuccess && (\n        <Redirect\n          to={{\n            pathname: paths.getDetails(apiResponse.plan_created.id),\n            state: { reload: true },\n          }}\n        />\n      )}\n      {startStep && (\n        <Wizard\n          navAriaLabel={`${title} steps`}\n          mainAriaLabel={`${title} content`}\n          steps={steps}\n          onGoToStep={onStepChange}\n          onNext={onStepChange}\n          onBack={onStepChange}\n          onSave={onSave}\n          onClose={onClose}\n          footer={CustomFooter}\n          startAtStep={startStep}\n          height=\"calc(100vh - 240px)\"\n        />\n      )}\n      {error && (\n        <AlertModal\n          isOpen={!!error}\n          onClose={() => reset()}\n          title={'Error'}\n          variant=\"error\"\n        >\n          {'There was an error saving the plan.'}\n          <ErrorDetail error={error?.error?.detail.name} />\n        </AlertModal>\n      )}\n    </>\n  );\n};\n\nForm.propTypes = {\n  title: PropTypes.string.isRequired,\n  options: PropTypes.object.isRequired,\n  data: PropTypes.object,\n};\n\nexport default Form;\n","import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { Card, CardBody } from '@patternfly/react-core';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport Breadcrumbs from '../../../Components/Breadcrumbs';\n\nimport { readPlanOptions } from '../../../Api/';\n\nimport Form from '../Shared/Form';\n\nimport { Paths } from '../../../paths';\nimport useRequest from '../../../Utilities/useRequest';\n\nconst Add = () => {\n  const {\n    result: options,\n    isSuccess,\n    request: fetchPlanOptions,\n  } = useRequest(readPlanOptions, {});\n\n  useEffect(() => {\n    fetchPlanOptions({});\n  }, []);\n\n  const canWrite =\n    isSuccess &&\n    (options.meta?.rbac?.perms?.write === true ||\n      options.meta?.rbac?.perms?.all === true);\n  const title = 'Create new plan';\n\n  const showAdd = () => (\n    <>\n      <PageHeader>\n        <Breadcrumbs\n          items={[{ title: 'Savings Planner', navigate: '/savings-planner' }]}\n        />\n        <PageHeaderTitle title={title} />\n      </PageHeader>\n      <Main>\n        <Card>\n          <CardBody>\n            <Form title={title} options={options} />\n          </CardBody>\n        </Card>\n      </Main>\n    </>\n  );\n  if (isSuccess) {\n    return canWrite ? showAdd() : <Redirect to={Paths.savingsPlanner} />;\n  }\n  return null;\n};\n\nexport default Add;\n","var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nimport React from 'react';\nimport { CardActions } from '@patternfly/react-core';\nimport styled from 'styled-components';\nvar CardActionsWrapper = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  margin-top: 20px;\\n  --pf-c-card__actions--PaddingLeft: 0;\\n\"], [\"\\n  margin-top: 20px;\\n  --pf-c-card__actions--PaddingLeft: 0;\\n\"])));\nvar CardActionsRow = function (_a) {\n    var children = _a.children;\n    return (React.createElement(CardActionsWrapper, null,\n        React.createElement(CardActions, null, children)));\n};\nexport default CardActionsRow;\nvar templateObject_1;\n","export async function getRelatedResourceDeleteCounts(requests) {\n  const results = {};\n  let error = null;\n  let hasCount = false;\n\n  try {\n    await Promise.all(\n      requests.map(async ({ request, label }) => {\n        const {\n          items: { count },\n        } = await request();\n        if (count > 0) {\n          results[label] = count;\n          hasCount = true;\n        }\n      })\n    );\n  } catch (err) {\n    error = err;\n  }\n\n  return {\n    results: hasCount && results,\n    error,\n  };\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\nimport { Button, Badge, Alert, Tooltip } from '@patternfly/react-core';\nimport AlertModal from '../AlertModal';\nimport { getRelatedResourceDeleteCounts } from '../../Utilities/getRelatedResourceDeleteDetails';\nimport ErrorDetail from '../ErrorDetail';\n\nconst WarningMessage = styled(Alert)`\n  margin-top: 10px;\n`;\n\nconst Label = styled.span`\n  && {\n    margin-right: 10px;\n  }\n`;\n\nconst DeleteButton = ({\n  onConfirm,\n  modalTitle = 'Delete',\n  name = '',\n  variant = 'secondary',\n  isDisabled = false,\n  ouiaId = null,\n  deleteMessage = 'Delete?',\n  deleteDetailsRequests = [],\n  disabledTooltip = 'This item cannot be deleted',\n  children,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [deleteMessageError, setDeleteMessageError] = useState();\n  const [deleteDetails, setDeleteDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const toggleModal = async (isModalOpen) => {\n    setIsLoading(true);\n    if (deleteDetailsRequests.length > 0 && isModalOpen) {\n      const { results, error } = await getRelatedResourceDeleteCounts(\n        deleteDetailsRequests\n      );\n      if (error) {\n        setDeleteMessageError(error);\n      } else {\n        setDeleteDetails(results);\n      }\n    }\n    setIsLoading(false);\n    setIsOpen(isModalOpen);\n  };\n\n  if (deleteMessageError) {\n    return (\n      <AlertModal\n        isOpen={!!deleteMessageError}\n        variant={'error'}\n        title={'Error!'}\n        onClose={() => {\n          toggleModal(false);\n          setDeleteMessageError();\n        }}\n      >\n        <ErrorDetail error={deleteMessageError.detail} />\n      </AlertModal>\n    );\n  }\n\n  return (\n    <>\n      {disabledTooltip ? (\n        <Tooltip content={disabledTooltip} position=\"top\">\n          <div>\n            <Button\n              spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n              variant={variant || 'secondary'}\n              aria-label={'Delete'}\n              isDisabled={isDisabled}\n              onClick={() => toggleModal(true)}\n              ouiaId={ouiaId}\n            >\n              {children || 'Delete'}\n            </Button>\n          </div>\n        </Tooltip>\n      ) : (\n        <Button\n          ouiaId={ouiaId}\n          spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n          variant={variant || 'secondary'}\n          aria-label={'Delete'}\n          isDisabled={isDisabled}\n          onClick={() => toggleModal(true)}\n        >\n          {children || 'Delete'}\n        </Button>\n      )}\n      <AlertModal\n        isOpen={isOpen}\n        title={modalTitle}\n        variant=\"danger\"\n        onClose={() => toggleModal(false)}\n        actions={[\n          <Button\n            ouiaId=\"delete-modal-confirm\"\n            key=\"delete\"\n            variant=\"danger\"\n            aria-label={'Confirm Delete'}\n            isDisabled={isDisabled}\n            onClick={() => {\n              onConfirm();\n              toggleModal(false);\n            }}\n          >\n            {'Delete'}\n          </Button>,\n          <Button\n            ouiaId=\"delete-modal-cancel\"\n            key=\"cancel\"\n            variant=\"link\"\n            aria-label={'Cancel'}\n            onClick={() => toggleModal(false)}\n          >\n            {'Cancel'}\n          </Button>,\n        ]}\n      >\n        {'Are you sure you want to delete:'}\n        <br />\n        <strong>{name}</strong>\n        {Object.values(deleteDetails).length > 0 && (\n          <WarningMessage\n            variant=\"warning\"\n            isInline\n            title={\n              <div>\n                <div aria-label={deleteMessage}>{deleteMessage}</div>\n                <br />\n                {Object.entries(deleteDetails).map(([key, value]) => (\n                  <div aria-label={`${key}: ${value}`} key={key}>\n                    <Label>{key}</Label> <Badge>{value}</Badge>\n                  </div>\n                ))}\n              </div>\n            }\n          />\n        )}\n      </AlertModal>\n    </>\n  );\n};\n\nDeleteButton.propTypes = {\n  onConfirm: PropTypes.func.isRequired,\n  modalTitle: PropTypes.string,\n  name: PropTypes.string,\n  variant: PropTypes.object,\n  isDisabled: PropTypes.bool,\n  ouiaId: PropTypes.string,\n  deleteMessage: PropTypes.string,\n  deleteDetailsRequests: PropTypes.array,\n  disabledTooltip: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nexport default DeleteButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { shape, string, number, arrayOf, node, oneOfType } from 'prop-types';\nimport { Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst RoutedTabs = ({ tabsArray, defaultTabId = 1 }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const getActiveTabId = (defaultTabId) => {\n    return (\n      tabsArray.find((tab) => tab.link === location.pathname)?.id ||\n      defaultTabId\n    );\n  };\n\n  const handleTabSelect = (_, eventKey) => {\n    const match = tabsArray.find((tab) => tab.id === eventKey);\n    if (match) {\n      history.push(match.link);\n    }\n  };\n\n  return (\n    <Tabs activeKey={getActiveTabId(defaultTabId)} onSelect={handleTabSelect}>\n      {tabsArray.map((tab) => (\n        <Tab\n          aria-label={typeof tab.name === 'string' ? tab.name : `${tab.id} tab`}\n          eventKey={tab.id}\n          key={tab.id}\n          link={tab.link}\n          title={<TabTitleText>{tab.name}</TabTitleText>}\n          role=\"tab\"\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nRoutedTabs.propTypes = {\n  defaultTabId: PropTypes.number,\n  tabsArray: arrayOf(\n    shape({\n      id: number.isRequired,\n      link: string.isRequired,\n      name: oneOfType([string.isRequired, node.isRequired]),\n    })\n  ).isRequired,\n};\n\nexport default RoutedTabs;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\nimport { useLocation } from 'react-router-dom';\n\nimport { Button } from '@patternfly/react-core';\n\nimport {\n  CardBody as PFCardBody,\n  CardFooter,\n  DescriptionList,\n  DescriptionListTerm,\n  DescriptionListGroup,\n  DescriptionListDescription,\n  Divider as PFDivider,\n  Label,\n  List,\n  ListItem,\n} from '@patternfly/react-core';\nimport CardActionsRow from '../../../../Components/CardActionsRow';\nimport { deletePlan, readPlanOptions } from '../../../../Api/';\nimport useRequest, {\n  useDismissableError,\n} from '../../../../Utilities/useRequest';\nimport DeleteButton from '../../../../Components/DeleteButton/DeleteButton';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { formatDateTime } from '../../../../Utilities/helpers';\nimport RoutedTabs from '../../../../Components/RoutedTabs';\nimport AlertModal from '../../../../Components/AlertModal/AlertModal';\nimport ErrorDetail from '../../../../Components/ErrorDetail/ErrorDetail';\nimport JobStatus from '../../../../Components/JobStatus';\n\nimport { useRedirect, DEFAULT_NAMESPACE } from '../../../../QueryParams/';\nimport { jobExplorer } from '../../../../Utilities/constants';\nimport { Paths } from '../../../../paths';\n\nconst CardBody = styled(PFCardBody)`\n  min-height: 500px;\n  padding: 0;\n  padding-bottom: 20px;\n\n  &:first-child {\n    padding-top: 0;\n  }\n`;\n\nconst Divider = styled(PFDivider)`\n  padding-top: 24px;\n`;\n\nconst DetailsTab = ({ tabsArray, plan, canWrite }) => {\n  const { pathname } = useLocation();\n  const redirect = useRedirect();\n  const {\n    id,\n    automation_status,\n    category,\n    description,\n    frequency_period,\n    hosts,\n    manual_time,\n    modified,\n    name,\n    tasks,\n    template_details,\n    template_id,\n  } = plan;\n\n  const {\n    result: options,\n    isSuccess: optionsSuccess,\n    request: fetchOptions,\n  } = useRequest(readPlanOptions, {});\n\n  useEffect(() => {\n    fetchOptions({});\n  }, []);\n\n  const redirectToJobExplorer = (templateId) => {\n    const initialQueryParams = {\n      [DEFAULT_NAMESPACE]: {\n        ...jobExplorer.defaultParams,\n        quick_date_range: 'last_30_days',\n        status: ['failed', 'successful'],\n        template_id: [templateId],\n      },\n    };\n\n    redirect(Paths.jobExplorer, initialQueryParams);\n  };\n\n  const showTemplate = (template_details) => {\n    if (!template_details.id) {\n      return;\n    }\n\n    return (\n      <a onClick={() => redirectToJobExplorer(template_details.id)}>\n        {template_details.name}\n      </a>\n    );\n  };\n\n  const renderOptionsBasedValue = (name, val) => {\n    // Return if no options yet or no key in the options is found.\n    if (!optionsSuccess || !options[name]) return '';\n\n    // Search for the key and return the value if exists.\n    const fromOptionsValue = options[name].find(({ key }) => key === val);\n    return fromOptionsValue?.value ?? '';\n  };\n\n  const labelsAndValues = {\n    Name: name || undefined,\n    'Automation type': category\n      ? renderOptionsBasedValue('category', category)\n      : undefined,\n    Description: description || undefined,\n    'Manual time': manual_time\n      ? renderOptionsBasedValue('manual_time', manual_time)\n      : undefined,\n    'Run on hosts': hosts || undefined,\n    Frequency: frequency_period\n      ? renderOptionsBasedValue('frequency_period', frequency_period)\n      : undefined,\n    Template: template_id ? showTemplate(template_details) : undefined,\n    'Last job status':\n      automation_status.status && automation_status.status !== 'None' ? (\n        <JobStatus status={automation_status.status} />\n      ) : (\n        <Label variant=\"outline\" color=\"red\" icon={<ExclamationCircleIcon />}>\n          Not Running\n        </Label>\n      ),\n    'Last updated': modified ? (\n      <span>{formatDateTime(modified)}</span>\n    ) : undefined,\n  };\n\n  const { request: deletePlans, error: deleteError } = useRequest(\n    async (props) => {\n      await deletePlan(props);\n      redirect(Paths.savingsPlanner);\n    }\n  );\n\n  const { error, dismissError } = useDismissableError(deleteError);\n\n  return (\n    <>\n      {plan && (\n        <>\n          <CardBody>\n            <RoutedTabs tabsArray={tabsArray} />\n            <div style={{ padding: '1rem' }}>\n              <DescriptionList isHorizontal columnModifier={{ lg: '3Col' }}>\n                {Object.keys(labelsAndValues).map(\n                  (key, i) =>\n                    labelsAndValues[key] !== undefined && (\n                      <DescriptionListGroup key={i}>\n                        <DescriptionListTerm>{key}</DescriptionListTerm>\n                        <DescriptionListDescription>\n                          {labelsAndValues[key]}\n                        </DescriptionListDescription>\n                      </DescriptionListGroup>\n                    )\n                )}\n              </DescriptionList>\n              {tasks.length > 0 && (\n                <DescriptionList>\n                  <Divider component=\"div\" />\n                  <DescriptionListGroup key={tasks}>\n                    <DescriptionListTerm>Tasks</DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <List component=\"ol\" type=\"1\">\n                        {tasks.map(({ id, task }) => (\n                          <ListItem key={id}>{task}</ListItem>\n                        ))}\n                      </List>\n                    </DescriptionListDescription>\n                  </DescriptionListGroup>\n                </DescriptionList>\n              )}\n            </div>\n          </CardBody>\n          {canWrite && (\n            <CardFooter>\n              <CardActionsRow>\n                <Button\n                  key=\"edit-plan-button\"\n                  variant=\"primary\"\n                  aria-label=\"Edit plan\"\n                  onClick={() => {\n                    redirect(`${pathname.split('/details')[0]}/edit`);\n                  }}\n                >\n                  Edit\n                </Button>\n                <DeleteButton\n                  key={'delete-plan-button'}\n                  name={name}\n                  modalTitle={'Delete Plan'}\n                  onConfirm={() => deletePlans(id)}\n                >\n                  {'Delete'}\n                </DeleteButton>\n              </CardActionsRow>\n              {error && (\n                <AlertModal\n                  isOpen={!!error}\n                  onClose={dismissError}\n                  title={'Error'}\n                  variant=\"error\"\n                >\n                  <ErrorDetail error={error.detail} />\n                </AlertModal>\n              )}\n            </CardFooter>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nDetailsTab.propTypes = {\n  plan: PropTypes.object,\n  tabsArray: PropTypes.array,\n  canWrite: PropTypes.bool.isRequired,\n};\n\nexport default DetailsTab;\n","var hoursFormatter = function (n) {\n    return (+n.toFixed(0)).toLocaleString() + \" hours\";\n}; /* 2,500 hours */\nexport default hoursFormatter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle, Title } from '@patternfly/react-core';\nimport currencyFormatter from '../../../../../Utilities/currencyFormatter';\nimport hoursFormatter from '../../../../../Utilities/hoursFormatter';\nvar TotalSavings = function (_a) {\n    var _b = _a.value, value = _b === void 0 ? 0 : _b, _c = _a.isMoney, isMoney = _c === void 0 ? true : _c;\n    return (React.createElement(Card, { isPlain: true },\n        React.createElement(CardTitle, { style: { paddingBottom: '0' } }, \"Total savings\"),\n        React.createElement(CardBody, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"4xl\", style: { color: isMoney ? '#81C46B' : '#0063CF' } }, isMoney ? \"\" + currencyFormatter(value) : \"\" + hoursFormatter(value)))));\n};\nTotalSavings.propTypes = {\n    value: PropTypes.number,\n    isMoney: PropTypes.bool,\n};\nexport default TotalSavings;\n","import React, { useState } from 'react';\nimport { Button, ButtonVariant, CodeBlock, CodeBlockCode, Modal, ModalVariant, } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nvar CostsText = function () { return (React.createElement(React.Fragment, null,\n    React.createElement(\"p\", null,\n        React.createElement(\"strong\", null, \"Cost\")),\n    React.createElement(\"p\", null, \"The cost includes the hours spent in implementation, deployment, training and other expenditures for creating, maintaining and running the automation. These hours (cost of investment) are usually higher at the onset, and will be greatly reduced once the automation has been created and only maintenance is required.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"For the initial period and the first year, we assume approximately 10 hours spent on each host, as well as some buffer time and a 40% risk adjustment to account for unforeseen situations.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"For the next two years after the first year, we assume 4 hours spent on each host, as well as a 40% risk adjustment to account for unforeseen situations.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate cost for the initial period and year 1:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"C1 = (time for a manual run on one host in hours * 10) + buffer time\\nC2 = C1 * 40% risk adjustment\\ninitial cost = (C1 + C2) * (cost per hour in USD if applicable, based on display)\\nyear 1 cost = (C1 + C2) * (cost per hour in USD if applicable, based on display)\")),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate cost for years 2 and 3:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"C1 = (time for a manual run on one host in hours * 4)\\nC2 = C1 * 40% risk adjustment\\nyear 2 cost = (C1 + C2) * (cost per hour in USD if applicable, based on display)\\nyear 3 cost = (C1 + C2) * (cost per hour in USD if applicable, based on display)\")))); };\nvar SavingsText = function () { return (React.createElement(React.Fragment, null,\n    React.createElement(\"p\", null,\n        React.createElement(\"strong\", null, \"Savings\")),\n    React.createElement(\"p\", null, \"The savings indicates the time and money saved as a result of automating the plan.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"We assume 50% productivity recapture to account for the productivity that is usually gained by repeated manual implementation of a task over a period of time. We also add a -5% risk adjustment for unforeseen situations that might arise and need to be handled. We also assume a 15% year over year growth in savings.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"Money savings for the initial period is 0, so there is no formula necessary.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate savings for year 0:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"initial period savings = 0 - initial cost\")),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used for savings for year 1:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"S1 = (number of hosts * (manual time in minutes / 60) * yearly frequency of automation)\\nS2 = S1 * 50% productivity recapture\\nS3 = S2 * 5% risk adjustment * (cost per hour in USD if applicable, based on display)\\nyear 1 savings = S2 - S3 - year 1 cost\")),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate savings for year 2:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"S1 = year 1 savings * 15% growth\\nyear 2 savings = year 1 savings + S1 - year 2 cost\")),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate savings for year 3:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"S2 = year 2 savings * 15% growth\\nyear 3 savings = year 2 savings + S2 - year 3 cost\")))); };\nvar FormulaDescription = function () {\n    var _a = useState(false), isOpen = _a[0], setIsOpen = _a[1];\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Button, { variant: ButtonVariant.link, onClick: function () { return setIsOpen(true); }, icon: React.createElement(InfoCircleIcon, null) }, \"Automation formula\"),\n        React.createElement(Modal, { title: \"Automation formula\", isOpen: isOpen, onClose: function () { return setIsOpen(false); }, variant: ModalVariant.medium, actions: [\n                React.createElement(Button, { key: \"cancel\", variant: ButtonVariant.primary, onClick: function () { return setIsOpen(false); } }, \"Close\"),\n            ] },\n            React.createElement(\"p\", null, \"We use risk-adjusted factors to create the 3-year projection of cost and savings related to automation. While we aim to provide as accurate an account of the cost and savings as possible, actual values may differ in practice. The following information breaks down where we get the data, the risk-adjustment factors we use, the assumptions we make, and the formula used to compute the values as displayed in the chart.\"),\n            React.createElement(\"br\", null),\n            React.createElement(CostsText, null),\n            React.createElement(\"br\", null),\n            React.createElement(SavingsText, null))));\n};\nexport default FormulaDescription;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useState } from 'react';\nimport { Card, CardActions, CardBody, CardHeader, CardTitle, Grid, GridItem, List, ListItem, ToggleGroup, ToggleGroupItem, } from '@patternfly/react-core';\nimport { SquareFullIcon } from '@patternfly/react-icons';\nimport ChartRenderer, { functions, ChartKind, ChartThemeColor, ChartType, ChartTopLevelType, ApiType, } from 'react-json-chart-builder';\nimport RoutedTabs from '../../../../Components/RoutedTabs';\nimport TotalSavings from './TotalSavings';\nimport FormulaDescription from './FormulaDescription';\nimport currencyFormatter from '../../../../Utilities/currencyFormatter';\nimport hoursFormatter from '../../../../Utilities/hoursFormatter';\nvar dataConversion = function (data) {\n    var yearConversion = {\n        initial: 'Initial',\n        year1: 'Year 1',\n        year2: 'Year 2',\n        year3: 'Year 3',\n    };\n    var seriesStats = data.projections.series_stats.map(function (item) { return (__assign(__assign({}, item), { year: yearConversion[item.year], total_costs: item.total_costs * -1, total_hours_spent_risk_adjusted: item.total_hours_spent_risk_adjusted * -1 })); });\n    return __assign(__assign({}, data), { projections: __assign(__assign({}, data.projections), { series_stats: seriesStats }) });\n};\nvar getChartData = function (data) {\n    return {\n        items: data.projections.series_stats,\n        type: ApiType.nonGrouped,\n        response_type: '',\n    };\n};\nvar constants = function (isMoney) { return ({\n    cost: {\n        key: isMoney ? 'total_costs' : 'total_hours_spent_risk_adjusted',\n        color: '#8B8D8F',\n    },\n    benefit: {\n        key: isMoney ? 'total_benefits' : 'total_hours_saved',\n        color: isMoney ? '#81C46B' : '#0063CF',\n    },\n    net: {\n        key: isMoney ? 'cumulative_net_benefits' : 'cumulative_time_net_benefits',\n        color: '#EE7A00',\n    },\n}); };\nvar StatisticsTab = function (_a) {\n    var tabsArray = _a.tabsArray, plan = _a.plan;\n    var statsPlan = dataConversion(plan);\n    var _b = useState(true), isMoney = _b[0], setIsMoney = _b[1];\n    var customTooltipFormatting = function (datum) {\n        return isMoney ? currencyFormatter(+datum.y) : hoursFormatter(+datum.y);\n    };\n    var computeTotalSavings = function (d) {\n        return isMoney\n            ? d.projections.series_stats[3].cumulative_net_benefits\n            : d.projections.series_stats[3].cumulative_time_net_benefits;\n    };\n    var barChartData = {\n        charts: [\n            {\n                id: 1000,\n                kind: ChartKind.wrapper,\n                type: ChartTopLevelType.chart,\n                parent: null,\n                props: {\n                    height: 600,\n                    domainPadding: {\n                        x: 100,\n                    },\n                    padding: {\n                        bottom: 60,\n                        left: 80,\n                    },\n                    themeColor: ChartThemeColor.gray,\n                },\n                tooltip: {\n                    cursor: true,\n                    stickToAxis: 'x',\n                    mouseFollow: true,\n                    legendTooltip: {\n                        legendData: [\n                            {\n                                childName: constants(isMoney).benefit.key,\n                                name: 'Savings',\n                                symbol: {\n                                    fill: constants(isMoney).benefit.color,\n                                },\n                            },\n                            {\n                                childName: constants(isMoney).cost.key,\n                                name: 'Costs',\n                                symbol: {\n                                    fill: constants(isMoney).cost.color,\n                                },\n                            },\n                            {\n                                childName: constants(isMoney).net.key,\n                                name: 'Cumulative savings',\n                                symbol: {\n                                    fill: constants(isMoney).net.color,\n                                },\n                            },\n                        ],\n                        titleProperyForLegend: 'year',\n                    },\n                    customFnc: customTooltipFormatting,\n                },\n                xAxis: {\n                    label: 'Time',\n                },\n                yAxis: {\n                    label: isMoney ? 'Money Saved' : 'Hours Saved',\n                    tickFormat: 'formatNumberAsK',\n                    style: {\n                        grid: { stroke: '#D2D2D2' },\n                        axisLabel: { padding: 60 },\n                    },\n                },\n            },\n            {\n                id: 1001,\n                kind: ChartKind.stack,\n                parent: 1000,\n                props: {},\n            },\n            {\n                id: 1102,\n                kind: ChartKind.simple,\n                type: ChartType.bar,\n                name: constants(isMoney).benefit.key,\n                parent: 1001,\n                props: {\n                    x: 'year',\n                    y: constants(isMoney).benefit.key,\n                    barRatio: 0.8,\n                    barWidth: 0,\n                    style: {\n                        data: {\n                            fill: constants(isMoney).benefit.color,\n                            width: 120,\n                        },\n                    },\n                },\n                tooltip: {\n                    labelName: '',\n                },\n            },\n            {\n                id: 1101,\n                kind: ChartKind.simple,\n                type: ChartType.bar,\n                name: constants(isMoney).cost.key,\n                parent: 1001,\n                props: {\n                    x: 'year',\n                    y: constants(isMoney).cost.key,\n                    barRatio: 0.8,\n                    barWidth: 0,\n                    style: {\n                        data: {\n                            fill: constants(isMoney).cost.color,\n                            width: 120,\n                        },\n                    },\n                },\n                tooltip: {\n                    labelName: '',\n                },\n            },\n            {\n                id: 1002,\n                kind: ChartKind.simple,\n                type: ChartType.line,\n                name: constants(isMoney).net.key,\n                parent: 1000,\n                props: {\n                    x: 'year',\n                    y: constants(isMoney).net.key,\n                    style: {\n                        data: {\n                            stroke: constants(isMoney).net.color,\n                            strokeWidth: 5,\n                        },\n                    },\n                },\n                tooltip: {\n                    labelName: '',\n                },\n            },\n        ],\n        functions: __assign(__assign({}, functions), { fetchFnc: function () {\n                return new Promise(function (resolve) {\n                    resolve(getChartData(statsPlan));\n                });\n            } }),\n    };\n    var renderLeft = function () { return (React.createElement(Card, { isPlain: true },\n        React.createElement(CardHeader, null,\n            React.createElement(CardActions, null,\n                React.createElement(ToggleGroup, { \"aria-label\": \"toggleButton\" },\n                    React.createElement(ToggleGroupItem, { text: \"Money\", buttonId: \"money\", isSelected: isMoney, onChange: function () { return setIsMoney(true); } }),\n                    React.createElement(ToggleGroupItem, { text: \"Time\", buttonId: \"time\", isSelected: !isMoney, onChange: function () { return setIsMoney(false); } }))),\n            React.createElement(CardTitle, null, statsPlan.name)),\n        React.createElement(CardBody, null,\n            React.createElement(ChartRenderer, { schema: barChartData.charts, functions: barChartData.functions })))); };\n    var renderRight = function () { return (React.createElement(React.Fragment, null,\n        React.createElement(TotalSavings, { value: computeTotalSavings(statsPlan), isMoney: isMoney }),\n        React.createElement(Card, { isPlain: true },\n            React.createElement(CardBody, null,\n                React.createElement(List, { isPlain: true },\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).benefit.color }) }, \"Savings from automating this plan\"),\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).cost.color }) }, \"Costs from creating, maintaining and running the automation\"),\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).net.color }) }, \"Cumulative savings over time\")))),\n        React.createElement(FormulaDescription, null))); };\n    return (React.createElement(Card, null,\n        React.createElement(RoutedTabs, { tabsArray: tabsArray }),\n        React.createElement(Grid, null,\n            React.createElement(GridItem, { span: 9 }, renderLeft()),\n            React.createElement(GridItem, { span: 3 }, renderRight()))));\n};\nexport default StatisticsTab;\n","import React, { useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { readPlanOptions } from '../../../Api/';\nimport { paths } from '../index';\n\nimport Form from '../Shared/Form';\nimport useRequest from '../../../Utilities/useRequest';\nimport redirectWithQueryParams from '../../../QueryParams/redirectWithQueryParams';\n\nconst Edit = ({ data }) => {\n  const { id } = useParams();\n\n  const {\n    result: options,\n    isSuccess,\n    request: fetchPlanOptions,\n  } = useRequest(readPlanOptions, {\n    meta: {\n      rbac: {\n        perms: {},\n      },\n    },\n  });\n\n  const canWrite =\n    options.meta.rbac.perms?.write === true ||\n    options.meta.rbac.perms?.all === true;\n\n  useEffect(() => {\n    fetchPlanOptions({});\n  }, []);\n\n  useEffect(() => {\n    if (isSuccess && !canWrite) redirectWithQueryParams(paths.getDetails(id));\n  }, [canWrite]);\n\n  const renderContent = () => {\n    if (!isSuccess) return null;\n    return <Form title=\"Edit plan\" options={options} data={data} />;\n  };\n\n  return renderContent();\n};\n\nEdit.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default Edit;\n","import Details from './Details';\n\nexport default Details;\n","import React, { useEffect } from 'react';\nimport {\n  useHistory,\n  useParams,\n  useLocation,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport { CaretLeftIcon } from '@patternfly/react-icons';\nimport { Card } from '@patternfly/react-core';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\n\nimport DetailsTab from './DetailsTab';\nimport StatisticsTab from './StatisticsTab';\nimport ApiErrorState from '../../../Components/ApiStatus/ApiErrorState';\nimport { paths as savingsPaths } from '../index';\n\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport Breadcrumbs from '../../../Components/Breadcrumbs';\n\nimport { readPlan } from '../../../Api/';\n\nimport SavingsPlanEdit from '../Edit';\nimport useRequest from '../../../Utilities/useRequest';\n\nconst Details = () => {\n  const { id } = useParams();\n  const location = useLocation();\n  const history = useHistory();\n\n  const queryParams = { id: [id] };\n\n  let pageTitle = 'Details';\n  if (location.pathname.indexOf('/statistics') !== -1) {\n    pageTitle = 'Statistics';\n  } else if (location.pathname.indexOf('/edit') !== -1) {\n    pageTitle = 'Edit plan';\n  }\n\n  const {\n    result: { rbac, plan },\n    isSuccess: dataSuccess,\n    error: dataError,\n    request: fetchEndpoints,\n  } = useRequest(readPlan, {\n    plan: {},\n    rbac: {\n      perms: {},\n    },\n  });\n\n  useEffect(() => {\n    const unlisten = history.listen(({ pathname }) => {\n      if (!pathname.includes('/edit')) fetchEndpoints(id);\n    });\n\n    return unlisten;\n  }, []);\n\n  useEffect(() => {\n    fetchEndpoints(id);\n  }, [id]);\n\n  const canWrite =\n    dataSuccess && (rbac.perms?.write === true || rbac.perms?.all === true);\n\n  const tabsArray = [\n    {\n      id: 0,\n      name: (\n        <>\n          <CaretLeftIcon />\n          {'Back to Plans'}\n        </>\n      ),\n      link: savingsPaths.get,\n    },\n    { id: 1, name: 'Details', link: savingsPaths.getDetails(id) },\n    {\n      id: 2,\n      name: 'Statistics',\n      link: `${savingsPaths.getDetails(id)}/statistics`,\n    },\n  ];\n\n  const breadcrumbsItems = dataSuccess\n    ? [\n        { title: 'Savings Planner', navigate: savingsPaths.get },\n        { title: plan.name, navigate: savingsPaths.getDetails(id) },\n      ]\n    : [];\n\n  return (\n    <>\n      {dataError && <ApiErrorState message={dataError.error} />}\n      {dataSuccess && (\n        <>\n          <PageHeader>\n            <Breadcrumbs items={breadcrumbsItems} />\n            <PageHeaderTitle title={pageTitle} />\n          </PageHeader>\n          <Main>\n            <Card>\n              <Switch>\n                <Route exact path=\"/savings-planner/:id/edit\">\n                  <SavingsPlanEdit data={plan} />\n                </Route>\n                <Route exact path=\"/savings-planner/:id/statistics\">\n                  <StatisticsTab\n                    tabsArray={tabsArray}\n                    plan={plan}\n                    queryParams={queryParams}\n                  />\n                </Route>\n                <Route exact path={savingsPaths.details}>\n                  <DetailsTab\n                    plan={plan}\n                    tabsArray={tabsArray}\n                    canWrite={canWrite}\n                  />\n                </Route>\n              </Switch>\n            </Card>\n          </Main>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Details;\n","import React from 'react';\nimport { Title, EmptyState, EmptyStateIcon, EmptyStateBody, Button, EmptyStateVariant, ButtonVariant, } from '@patternfly/react-core';\nimport { AddCircleOIcon, SearchIcon } from '@patternfly/react-icons';\nimport { useRedirect } from '../QueryParams/';\nvar EmptyList = function (_a) {\n    var _b = _a.label, label = _b === void 0 ? '' : _b, _c = _a.title, title = _c === void 0 ? 'No items found.' : _c, _d = _a.message, message = _d === void 0 ? '' : _d, _e = _a.canAdd, canAdd = _e === void 0 ? false : _e, _f = _a.path, path = _f === void 0 ? undefined : _f;\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    /* @ts-ignore */\n    var redirect = useRedirect();\n    return (React.createElement(EmptyState, { variant: EmptyStateVariant.full },\n        React.createElement(EmptyStateIcon, { icon: canAdd ? AddCircleOIcon : SearchIcon }),\n        React.createElement(Title, { size: \"lg\", headingLevel: \"h3\" }, title),\n        React.createElement(EmptyStateBody, null, message),\n        canAdd && (React.createElement(Button, { key: \"add-item-button\", variant: ButtonVariant.primary, \"aria-label\": label, onClick: function () {\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                /* @ts-ignore */\n                if (path)\n                    redirect(path);\n            } }, label))));\n};\nexport default EmptyList;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {\n  Card,\n  CardHeader,\n  CardHeaderMain,\n  CardActions,\n  CardTitle as PFCardTitle,\n  CardBody,\n  CardFooter,\n  Checkbox as PFCheckbox,\n  Dropdown,\n  DropdownItem,\n  KebabToggle,\n  Label,\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport { Paths } from '../../../../paths';\nimport { useRedirect, DEFAULT_NAMESPACE } from '../../../../QueryParams/';\nimport { jobExplorer } from '../../../../Utilities/constants';\n\nimport currencyFormatter from '../../../../Utilities/currencyFormatter';\nimport { formatDateTime } from '../../../../Utilities/helpers';\n\nimport JobStatus from '../../../../Components/JobStatus';\n\nconst CardTitle = styled(PFCardTitle)`\n  word-break: break-word;\n`;\n\nconst CardLabel = styled.span`\n  margin-right: 5px;\n  font-weight: bold;\n`;\n\nconst Small = styled.small`\n  display: block;\n  margin-bottom: 10px;\n  color: #6a6e73;\n`;\n\nconst Checkbox = styled(PFCheckbox)`\n  &.pf-c-check.pf-m-standalone {\n    margin-top: -3px;\n  }\n`;\n\nconst CardDetail = styled.div`\n  display: flex;\n  min-height: 30px;\n  align-items: center;\n`;\n\nconst ListItem = ({\n  isSuccess,\n  plan,\n  selected = [],\n  handleSelect = () => {},\n  canWrite,\n  options,\n}) => {\n  const {\n    id,\n    automation_status,\n    category,\n    description,\n    frequency_period,\n    modified,\n    name,\n    template_details,\n    projections,\n  } = plan;\n\n  const redirect = useRedirect();\n\n  const projectedSavings =\n    projections?.series_stats[projections.series_stats.length - 1]\n      .cumulative_net_benefits;\n\n  const [isCardKebabOpen, setIsCardKebabOpen] = useState(false);\n  const match = useRouteMatch();\n\n  const redirectToJobExplorer = (templateId) => {\n    const initialQueryParams = {\n      [DEFAULT_NAMESPACE]: {\n        ...jobExplorer.defaultParams,\n        quick_date_range: 'last_30_days',\n        status: ['failed', 'successful'],\n        template_id: [templateId],\n      },\n    };\n\n    redirect(Paths.jobExplorer, initialQueryParams);\n  };\n\n  const renderTemplateLink = (template) => {\n    return template && isSuccess ? (\n      <a onClick={() => redirectToJobExplorer(template.id)}>{template.name}</a>\n    ) : null;\n  };\n\n  const renderOptionsBasedValue = (key, val) => {\n    return options[key]\n      ? options[key].find(({ key: apiValue }) => apiValue === val).value\n      : val;\n  };\n\n  const kebabDropDownItems = [\n    <React.Fragment key={id}>\n      <DropdownItem\n        key=\"edit\"\n        onClick={() => redirect(`${match.url}/${id}/edit`)}\n        position=\"right\"\n      >\n        Edit\n      </DropdownItem>\n      <DropdownItem\n        key=\"link\"\n        onClick={() => redirect(`${match.url}/${id}/edit#tasks`)}\n        position=\"right\"\n      >\n        Manage tasks\n      </DropdownItem>\n      <DropdownItem\n        key=\"link\"\n        onClick={() => redirect(`${match.url}/${id}/edit#link_template`)}\n        position=\"right\"\n      >\n        Link template\n      </DropdownItem>\n    </React.Fragment>,\n  ];\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardHeaderMain>\n          <CardTitle>\n            <Link to={`${match.url}/${id}`}>{name}</Link>\n          </CardTitle>\n        </CardHeaderMain>\n        {canWrite && (\n          <CardActions>\n            <Dropdown\n              onSelect={() => {}}\n              toggle={\n                <KebabToggle\n                  onToggle={() => setIsCardKebabOpen(!isCardKebabOpen)}\n                />\n              }\n              isOpen={isCardKebabOpen}\n              isPlain\n              dropdownItems={kebabDropDownItems}\n              position={'right'}\n            />\n            <Checkbox\n              onChange={() => handleSelect(plan)}\n              isChecked={selected.some((row) => row.id === plan.id)}\n              aria-label=\"card checkbox\"\n              id=\"check-1\"\n              name=\"check1\"\n            />\n          </CardActions>\n        )}\n      </CardHeader>\n      <CardBody>\n        {description ? <Small>{description}</Small> : null}\n        <CardDetail>\n          <CardLabel>Frequency</CardLabel>{' '}\n          {frequency_period ? (\n            renderOptionsBasedValue('frequency_period', frequency_period)\n          ) : (\n            <span>None</span>\n          )}\n        </CardDetail>\n        <CardDetail>\n          <CardLabel>Template</CardLabel>{' '}\n          {Object.keys(template_details || {}).length !== 0 ? (\n            renderTemplateLink(template_details)\n          ) : (\n            <span>\n              None -{' '}\n              <a\n                onClick={() =>\n                  redirect(`${match.url}/${id}/edit#link_template`)\n                }\n              >\n                Link template\n              </a>\n            </span>\n          )}\n        </CardDetail>\n        <CardDetail>\n          <CardLabel>Last job status</CardLabel>\n          {automation_status.status !== 'None' ? (\n            <JobStatus status={automation_status.status} />\n          ) : (\n            <Label\n              variant=\"outline\"\n              color=\"red\"\n              icon={<ExclamationCircleIcon />}\n            >\n              Not Running\n            </Label>\n          )}\n        </CardDetail>\n        {projectedSavings && (\n          <CardDetail>\n            <CardLabel>Projected savings</CardLabel>\n            <a onClick={() => redirect(`${match.url}/${id}/statistics`)}>\n              {currencyFormatter(+projectedSavings)}\n            </a>\n          </CardDetail>\n        )}\n        <CardDetail>\n          <CardLabel>Last updated</CardLabel>{' '}\n          <span>{formatDateTime(modified)}</span>\n        </CardDetail>\n      </CardBody>\n      <CardFooter>\n        <Label>{renderOptionsBasedValue('category', category)}</Label>\n      </CardFooter>\n    </Card>\n  );\n};\n\nListItem.propTypes = {\n  isSuccess: PropTypes.bool.isRequired,\n  canWrite: PropTypes.bool.isRequired,\n  selected: PropTypes.array,\n  handleSelect: PropTypes.func,\n  plan: PropTypes.object,\n  options: PropTypes.object,\n};\n\nexport default ListItem;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport AlertModal from '../AlertModal';\n\nimport { getRelatedResourceDeleteCounts } from '../../Utilities/getRelatedResourceDeleteDetails';\n\nimport ErrorDetail from '../ErrorDetail';\n\nconst requiredField = (props) => {\n  const { name, username, image } = props;\n  if (!name && !username && !image) {\n    return new Error(\n      `One of 'name', 'username' or 'image' is required by ItemToDelete component.`\n    );\n  }\n  if (name) {\n    PropTypes.checkPropTypes(\n      {\n        name: PropTypes.string,\n      },\n      { name: props.name },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  if (username) {\n    PropTypes.checkPropTypes(\n      {\n        username: PropTypes.string,\n      },\n      { username: props.username },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  if (image) {\n    PropTypes.checkPropTypes(\n      {\n        image: PropTypes.string,\n      },\n      { image: props.image },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  return null;\n};\n\nconst ToolbarDeleteButton = ({\n  itemsToDelete,\n  pluralizedItemName = 'Items',\n  onDelete,\n  errorMessage = 'Error while deleting',\n  deleteDetailsRequests = [],\n  cannotDelete = (item) => !item,\n}) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [deleteDetails, setDeleteDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [deleteMessageError, setDeleteMessageError] = useState('');\n  const handleDelete = () => {\n    onDelete();\n    toggleModal();\n  };\n\n  const toggleModal = async (isOpen) => {\n    setIsLoading(true);\n    setDeleteDetails(null);\n    if (\n      isOpen &&\n      itemsToDelete.length === 1 &&\n      deleteDetailsRequests?.length > 0\n    ) {\n      const { results, error } = await getRelatedResourceDeleteCounts(\n        deleteDetailsRequests\n      );\n\n      if (error) {\n        setDeleteMessageError(error);\n      } else {\n        setDeleteDetails(results);\n      }\n    }\n    setIsLoading(false);\n    setIsModalOpen(isOpen);\n  };\n\n  const renderTooltip = () => {\n    const itemsUnableToDelete = itemsToDelete\n      .filter(cannotDelete)\n      .map((item) => item.name || item.username)\n      .join(', ');\n\n    if (itemsToDelete.some(cannotDelete)) {\n      return (\n        <div>\n          {errorMessage ? (\n            <>\n              <span>{errorMessage}</span>\n              <span>{`: ${itemsUnableToDelete}`}</span>\n            </>\n          ) : (\n            `You do not have permission to delete ${pluralizedItemName}: ${itemsUnableToDelete}`\n          )}\n        </div>\n      );\n    }\n    if (itemsToDelete.length) {\n      return 'Delete';\n    }\n    return 'Select a plan to delete';\n  };\n\n  const modalTitle = `Delete ${pluralizedItemName}?`;\n\n  const isDisabled =\n    itemsToDelete.length === 0 || itemsToDelete.some(cannotDelete);\n\n  if (deleteMessageError) {\n    return (\n      <AlertModal\n        isOpen={!!deleteMessageError}\n        title={'Error!'}\n        onClose={() => {\n          toggleModal(false);\n          setDeleteMessageError();\n        }}\n      >\n        <ErrorDetail error={deleteMessageError.detail} />\n      </AlertModal>\n    );\n  }\n\n  return (\n    <>\n      <Tooltip content={renderTooltip()} position=\"top\">\n        <div>\n          <Button\n            variant=\"secondary\"\n            ouiaId=\"delete-button\"\n            spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n            aria-label={'Delete'}\n            onClick={() => toggleModal(true)}\n            isDisabled={isDisabled}\n          >\n            {'Delete'}\n          </Button>\n        </div>\n      </Tooltip>\n\n      {isModalOpen && (\n        <AlertModal\n          variant=\"danger\"\n          title={modalTitle}\n          isOpen={isModalOpen}\n          onClose={() => toggleModal(false)}\n          actions={[\n            <Button\n              ouiaId=\"delete-modal-confirm\"\n              key=\"delete\"\n              variant=\"danger\"\n              aria-label={'confirm delete'}\n              isDisabled={Boolean(deleteDetails)}\n              onClick={handleDelete}\n            >\n              {'Delete'}\n            </Button>,\n            <Button\n              key=\"cancel\"\n              variant=\"link\"\n              aria-label={'cancel delete'}\n              onClick={() => toggleModal(false)}\n            >\n              {'Cancel'}\n            </Button>,\n          ]}\n        >\n          <div>{'This action will delete the following:'}</div>\n          {itemsToDelete.map((item) => (\n            <span key={item.id}>\n              <strong>{item.name || item.username || item.image}</strong>\n              <br />\n            </span>\n          ))}\n        </AlertModal>\n      )}\n    </>\n  );\n};\n\nToolbarDeleteButton.propTypes = {\n  itemsToDelete: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: requiredField,\n      username: requiredField,\n      image: requiredField,\n    })\n  ).isRequired,\n  pluralizedItemName: PropTypes.string,\n  onDelete: PropTypes.func.isRequired,\n  errorMessage: PropTypes.string,\n  warningMessage: PropTypes.node,\n  deleteDetailsRequests: PropTypes.array,\n  cannotDelete: PropTypes.func,\n  deleteMessage: PropTypes.string,\n};\n\nexport default ToolbarDeleteButton;\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useLocation } from 'react-router-dom';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Button, Gallery, PaginationVariant } from '@patternfly/react-core';\n\nimport { deletePlans, readPlanOptions, readPlans } from '../../../Api/';\nimport FilterableToolbar from '../../../Components/Toolbar';\nimport ApiErrorState from '../../../Components/ApiStatus/ApiErrorState';\nimport LoadingState from '../../../Components/ApiStatus/LoadingState';\nimport EmptyList from '../../../Components/EmptyList';\nimport Pagination from '../../../Components/Pagination';\nimport PlanCard from './ListItem';\nimport { useQueryParams, useRedirect } from '../../../QueryParams/';\nimport { savingsPlanner } from '../../../Utilities/constants';\n\nimport ToolbarDeleteButton from '../../../Components/Toolbar/ToolbarDeleteButton';\nimport useSelected from '../../../Utilities/useSelected';\nimport useRequest, { useDeleteItems } from '../../../Utilities/useRequest';\nimport ErrorDetail from '../../../Components/ErrorDetail';\nimport AlertModal from '../../../Components/AlertModal';\n\nconst PageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 76px);\n`;\n\nconst Footer = styled.div`\n  flex-shrink: 0;\n`;\n\nconst FlexMain = styled(Main)`\n  flex-grow: 1;\n`;\n\nconst List = () => {\n  const redirect = useRedirect();\n  const { pathname } = useLocation();\n\n  // params from toolbar/searchbar\n  const { queryParams, setFromPagination, setFromToolbar } = useQueryParams(\n    savingsPlanner.defaultParams\n  );\n\n  const {\n    result: options,\n    isSuccess,\n    request: fetchOptions,\n  } = useRequest(readPlanOptions, {});\n\n  const {\n    result: { items: data, rbac, meta },\n    isLoading: itemsIsLoading,\n    isSuccess: itemsIsSuccess,\n    error: itemsError,\n    request: fetchEndpoints,\n  } = useRequest(readPlans, {\n    items: [],\n    rbac: {\n      perms: {},\n    },\n    meta: { count: 0 },\n  });\n\n  const combinedOptions = {\n    ...options,\n    name: [{ key: 'name', value: null }],\n  };\n\n  useEffect(() => {\n    fetchOptions({});\n  }, []);\n\n  useEffect(() => {\n    fetchEndpoints(queryParams);\n  }, [queryParams]);\n\n  const canWrite =\n    itemsIsSuccess && (rbac.perms?.write === true || rbac.perms?.all === true);\n\n  const { selected, handleSelect, setSelected } = useSelected(data);\n\n  const {\n    isLoading: deleteLoading,\n    deletionError,\n    deleteItems: deleteItems,\n    clearDeletionError,\n  } = useDeleteItems(deletePlans, null);\n\n  const handleDelete = async () => {\n    await deleteItems(selected.map(({ id }) => id));\n    setSelected([]);\n    fetchEndpoints(queryParams);\n  };\n\n  const renderContent = () => {\n    if (itemsError) return <ApiErrorState message={itemsError.error} />;\n    if (itemsIsLoading || deleteLoading) return <LoadingState />;\n    if (\n      itemsIsSuccess &&\n      data.length === 0 &&\n      !(itemsIsLoading || deleteLoading)\n    )\n      return (\n        <EmptyList\n          label={'Add plan'}\n          title={'No plans found'}\n          message={\n            canWrite\n              ? 'Update the applied filters or add a new plan.'\n              : 'Update the applied filters.'\n          }\n          canAdd={canWrite}\n          path={`${pathname}/add`}\n        />\n      );\n\n    if (itemsIsSuccess && !(itemsIsLoading || deleteLoading))\n      return (\n        <Gallery\n          hasGutter\n          minWidths={{\n            sm: '307px',\n            md: '307px',\n            lg: '307px',\n            xl: '307px',\n            '2xl': '307px',\n          }}\n        >\n          {data.map((datum) => (\n            <PlanCard\n              key={datum.id}\n              isSuccess={itemsIsSuccess}\n              selected={selected}\n              plan={datum}\n              handleSelect={handleSelect}\n              canWrite={canWrite}\n              options={options}\n            />\n          ))}\n        </Gallery>\n      );\n\n    return null;\n  };\n\n  return (\n    <PageContainer>\n      <PageHeader>\n        <PageHeaderTitle title={'Savings Planner'} />\n        <FilterableToolbar\n          categories={combinedOptions}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n          additionalControls={[\n            ...(canWrite\n              ? [\n                  <Button\n                    key=\"add-plan-button\"\n                    variant=\"primary\"\n                    aria-label=\"Add plan\"\n                    onClick={() => {\n                      redirect(`${pathname}/add`);\n                    }}\n                  >\n                    Add plan\n                  </Button>,\n                ]\n              : []),\n            canWrite && isSuccess && data.length > 0 && (\n              <ToolbarDeleteButton\n                key=\"delete-plan-button\"\n                onDelete={handleDelete}\n                itemsToDelete={selected}\n                pluralizedItemName={'Savings plan'}\n              />\n            ),\n          ]}\n          pagination={\n            itemsIsSuccess && data.length > 0 ? (\n              <Pagination\n                count={meta.count}\n                params={{\n                  limit: +queryParams.limit,\n                  offset: +queryParams.offset,\n                }}\n                setPagination={setFromPagination}\n                isCompact\n              />\n            ) : null\n          }\n        />\n      </PageHeader>\n      <FlexMain>{renderContent()}</FlexMain>\n      {data.length > 0 && !(itemsIsLoading || deleteLoading) && (\n        <Footer>\n          <Pagination\n            count={meta.count}\n            params={{\n              limit: +queryParams.limit,\n              offset: +queryParams.offset,\n            }}\n            setPagination={setFromPagination}\n            variant={PaginationVariant.bottom}\n          />\n        </Footer>\n      )}\n      {deletionError && (\n        <AlertModal\n          aria-label={'Deletion error'}\n          isOpen={deletionError}\n          onClose={clearDeletionError}\n          title={'Error'}\n          variant=\"error\"\n        >\n          {'Failed to delete one or more plans.'}\n          <ErrorDetail error={deletionError.detail} />\n        </AlertModal>\n      )}\n    </PageContainer>\n  );\n};\n\nexport default List;\n","import { useState } from 'react';\n\n/**\n * useSelected hook provides a way to read and update a selected list\n * Param: array of list items\n * Returns: {\n *  selected: array of selected list items\n *  isAllSelected: boolean that indicates if all items are selected\n *  handleSelect: function that adds and removes items from selected list\n *  setSelected: setter function\n * }\n */\n\nexport default function useSelected(list = []) {\n  const [selected, setSelected] = useState([]);\n  const isAllSelected = selected.length > 0 && selected.length === list.length;\n\n  const handleSelect = (row) => {\n    if (selected.some((s) => s.id === row.id)) {\n      setSelected((prevState) => [...prevState.filter((i) => i.id !== row.id)]);\n    } else {\n      setSelected((prevState) => [...prevState, row]);\n    }\n  };\n  return { selected, isAllSelected, handleSelect, setSelected };\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Paths } from '../../paths';\nimport Add from './Add';\nimport Details from './Details';\nimport List from './List';\nexport var paths = {\n    get: \"\" + Paths.savingsPlanner,\n    add: Paths.savingsPlanner + \"/add\",\n    edit: Paths.savingsPlanner + \"/:id/edit\",\n    getEdit: function (id) { return Paths.savingsPlanner + \"/\" + id + \"/edit\"; },\n    details: Paths.savingsPlanner + \"/:id\",\n    getDetails: function (id) { return Paths.savingsPlanner + \"/\" + id; },\n};\nvar SavingsPlannerRouter = function () {\n    return (React.createElement(Switch, null,\n        React.createElement(Route, { exact: true, path: paths.get },\n            React.createElement(List, null)),\n        React.createElement(Route, { exact: true, path: paths.add },\n            React.createElement(Add, null)),\n        React.createElement(Route, { path: [paths.edit, paths.details] },\n            React.createElement(Details, null))));\n};\nexport default SavingsPlannerRouter;\n"],"names":["actions","convertTasks","tasks","length","sort","a","b","task_order","map","task","ExclamationCircleIcon","styled","PFExclamationCircleIcon","TimesCircleIcon","PFTimesCircleIcon","InfoCircleIcon","PFInfoCircleIcon","CheckCircleIcon","PFCheckCircleIcon","ExclamationTriangleIcon","PFExclamationTriangleIcon","Header","AlertModal","isOpen","title","label","variant","children","props","variantIcons","danger","size","error","info","success","warning","customHeader","Title","id","headingLevel","Modal","header","propTypes","PropTypes","Card","PFCard","CardBody","PFCardBody","Expandable","PFExpandable","ErrorDetail","useState","isExpanded","setIsExpanded","Array","isArray","toggleText","onToggle","m","key","Details","options","formData","dispatch","name","category","description","manual_time","hosts","frequency_period","categoryIsOpen","setCategoryIsOpen","manualTimeIsOpen","setManualTimeIsOpen","frequencyPeriodIsOpen","setFrequencyPeriodIsOpen","showError","setShowError","Form","Grid","hasGutter","md","FormGroup","isRequired","fieldId","TextInput","placeholder","type","value","onChange","newName","onFocus","onBlur","FormHelperText","isError","icon","isHidden","Select","maxHeight","onSelect","_event","selection","selections","SelectOption","newDescription","placeholderText","NumberInput","inputAriaLabel","widthChars","event","isPositiveNum","target","parseInt","onMinus","onPlus","min","TaskSection","TaskTitle","TaskDeleteButton","Button","DeleteTaskActionSection","DataListAction","TaskRow","DataListItemRow","Tasks","setTasks","val","taskToAdd","setTaskToAdd","liveText","setLiveText","setId","appendTask","trimmedTask","trim","InputGroup","newTaskName","onKeyDown","e","preventDefault","onClick","isDisabled","DataList","isCompact","onDragFinish","newItemOrder","split","slice","join","onDragStart","newId","onDragMove","oldIndex","newIndex","onDragCancel","itemOrder","idx","index","DataListItem","DataListControl","DataListDragButton","DataListItemCells","dataListCells","DataListCell","filter","t","removeTask","className","ListFooter","initialQueryParams","group_by","limit","group_by_time","offset","sort_options","sort_order","cluster_id","inventory_id","job_type","org_id","status","template_id","Templates","formDispatch","useQueryParams","queryParams","setFromPagination","setFromToolbar","queryParamsDispatch","useRequest","readJobExplorerOptions","quick_date_range","rest","result","isSuccess","fetchOptions","request","readJobExplorer","items","meta","count","templates","templatesIsLoading","isLoading","templatesIsSuccess","fetchEndpoints","sortParams","sortBy","direction","onSort","_ev","_idx","dir","useEffect","categories","filters","setFilters","pagination","Pagination","params","setPagination","ApiErrorState","message","LoadingState","NoResults","TableComposable","Thead","Tr","Th","Tbody","Td","select","rowIndex","_isSelected","isSelected","PaginationVariant","data","history","useHistory","useLocation","hash","pathname","startStep","setStartStep","requestPayload","updatePlan","createPlan","plan_created","apiResponse","setData","initial","useReducer","state","Error","hourly_rate","frequency_per_period","usePlanData","steps","step_number","component","canJumpTo","nextButtonText","onStepChange","newStep","replace","onSave","CustomFooter","WizardFooter","WizardContextConsumer","activeStep","onNext","onBack","onClose","ButtonVariant","indexOf","find","step","Redirect","to","paths","reload","Wizard","navAriaLabel","mainAriaLabel","onGoToStep","location","push","footer","startAtStep","height","detail","readPlanOptions","fetchPlanOptions","canWrite","rbac","perms","write","all","PageHeader","Breadcrumbs","navigate","PageHeaderTitle","Main","Paths","cooked","raw","CardActionsWrapper","templateObject_1","Object","defineProperty","_a","CardActions","getRelatedResourceDeleteCounts","requests","results","hasCount","Promise","WarningMessage","Alert","Label","DeleteButton","onConfirm","modalTitle","ouiaId","deleteMessage","deleteDetailsRequests","disabledTooltip","setIsOpen","deleteMessageError","setDeleteMessageError","deleteDetails","setDeleteDetails","setIsLoading","toggleModal","isModalOpen","Tooltip","content","position","spinnerAriaValueText","undefined","values","isInline","entries","Badge","RoutedTabs","tabsArray","defaultTabId","Tabs","activeKey","tab","link","getActiveTabId","_","eventKey","match","Tab","TabTitleText","role","arrayOf","shape","number","string","oneOfType","node","Divider","PFDivider","DetailsTab","plan","redirect","useRedirect","automation_status","modified","template_details","optionsSuccess","renderOptionsBasedValue","fromOptionsValue","labelsAndValues","Name","Description","Frequency","Template","templateId","DEFAULT_NAMESPACE","jobExplorer","redirectToJobExplorer","showTemplate","JobStatus","color","formatDateTime","deletePlan","deletePlans","deleteError","useDismissableError","dismissError","style","padding","DescriptionList","isHorizontal","columnModifier","lg","keys","i","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","List","ListItem","CardFooter","n","toFixed","toLocaleString","TotalSavings","_b","_c","isMoney","isPlain","CardTitle","paddingBottom","currencyFormatter","CostsText","CodeBlock","CodeBlockCode","SavingsText","ModalVariant","__assign","assign","s","arguments","p","prototype","hasOwnProperty","call","apply","this","cost","benefit","net","yearConversion","seriesStats","d","statsPlan","year1","year2","year3","projections","series_stats","item","year","total_costs","total_hours_spent_risk_adjusted","setIsMoney","barChartData","charts","kind","parent","domainPadding","x","bottom","left","themeColor","tooltip","cursor","stickToAxis","mouseFollow","legendTooltip","legendData","childName","symbol","fill","titleProperyForLegend","customFnc","datum","y","xAxis","yAxis","tickFormat","grid","stroke","axisLabel","barRatio","barWidth","width","labelName","strokeWidth","functions","fetchFnc","resolve","response_type","getChartData","GridItem","span","CardHeader","ToggleGroup","ToggleGroupItem","text","buttonId","schema","cumulative_net_benefits","cumulative_time_net_benefits","Edit","useParams","redirectWithQueryParams","pageTitle","readPlan","dataSuccess","dataError","listen","includes","savingsPaths","breadcrumbsItems","Switch","Route","exact","path","_d","_e","canAdd","_f","EmptyState","EmptyStateVariant","EmptyStateIcon","EmptyStateBody","PFCardTitle","CardLabel","Small","Checkbox","PFCheckbox","CardDetail","template","selected","handleSelect","projectedSavings","isCardKebabOpen","setIsCardKebabOpen","useRouteMatch","kebabDropDownItems","DropdownItem","url","CardHeaderMain","Link","Dropdown","toggle","KebabToggle","dropdownItems","isChecked","some","row","requiredField","username","image","ToolbarDeleteButton","itemsUnableToDelete","itemsToDelete","pluralizedItemName","onDelete","errorMessage","cannotDelete","setIsModalOpen","Boolean","warningMessage","PageContainer","Footer","FlexMain","savingsPlanner","readPlans","itemsIsLoading","itemsIsSuccess","itemsError","combinedOptions","list","setSelected","isAllSelected","prevState","useSelected","useDeleteItems","deleteLoading","deletionError","deleteItems","clearDeletionError","handleDelete","additionalControls","Gallery","minWidths","sm","xl","get","add","edit","getEdit","details","getDetails"],"sourceRoot":""}