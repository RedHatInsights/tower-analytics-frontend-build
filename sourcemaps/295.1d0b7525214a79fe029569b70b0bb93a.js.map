{"version":3,"file":"js/295.687c6b8280cf643c7c99.js","mappings":"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","sources":["webpack:///./src/Containers/AutomationCalculatorNew/Chart/chartSchema.ts","webpack:///./src/Containers/AutomationCalculatorNew/Chart/index.tsx","webpack:///./src/Containers/AutomationCalculatorNew/TotalSavings.tsx","webpack:///./src/Containers/AutomationCalculatorNew/CalculationCost.tsx","webpack:///./src/Containers/AutomationCalculatorNew/AutomationFormula.tsx","webpack:///./src/Containers/AutomationCalculatorNew/TemplatesTable/ExplandedRowContents.tsx","webpack:///./src/Containers/AutomationCalculatorNew/TemplatesTable/Row.tsx","webpack:///./src/Containers/AutomationCalculatorNew/TemplatesTable/index.tsx","webpack:///./src/Containers/AutomationCalculatorNew/AutomationCalculator.js"],"sourcesContent":["import { ChartKind, ChartTopLevelType, ChartType, } from 'react-json-chart-builder';\nvar schema = [\n    {\n        id: 1,\n        kind: ChartKind.wrapper,\n        type: ChartTopLevelType.chart,\n        parent: null,\n        props: {\n            height: 400,\n            padding: {\n                top: 40,\n                bottom: 150,\n                right: 0,\n                left: 90,\n            },\n            domainPadding: {\n                y: 25,\n                x: 85,\n            },\n        },\n        xAxis: {\n            label: 'Templates',\n            style: {\n                axisLabel: {\n                    padding: 130,\n                },\n            },\n            labelProps: {\n                angle: -45,\n                textAnchor: 'end',\n                dx: 0,\n                dy: 0,\n            },\n            fixLabelOverlap: false,\n        },\n        yAxis: {\n            tickFormat: 'formatNumberAsK',\n            showGrid: true,\n            label: 'Savings per template',\n            style: {\n                axisLabel: {\n                    padding: 60,\n                },\n            },\n        },\n        api: {\n            url: '',\n            params: {},\n        },\n    },\n    {\n        id: 2,\n        kind: ChartKind.group,\n        parent: 1,\n        template: {\n            id: 0,\n            kind: ChartKind.simple,\n            type: ChartType.bar,\n            parent: 0,\n            props: {\n                x: 'name',\n                y: 'delta',\n            },\n            tooltip: {\n                standalone: true,\n                labelName: 'Saving',\n            },\n        },\n    },\n];\nexport default schema;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React from 'react';\nimport ChartBuilder, { functions, ApiType, } from 'react-json-chart-builder';\nimport schema from './chartSchema';\nvar customFunctions = function (data) { return (__assign(__assign({}, functions), { fetchFnc: function () {\n        return new Promise(function (resolve) {\n            resolve(data);\n        });\n    } })); };\nvar Chart = function (_a) {\n    var data = _a.data;\n    return (React.createElement(ChartBuilder, { schema: schema, functions: customFunctions({\n            items: data,\n            type: ApiType.nonGrouped,\n            response_type: '',\n        }) }));\n};\nexport default Chart;\n","import React from 'react';\nimport { Card, CardBody, CardTitle, Title } from '@patternfly/react-core';\nimport currencyFormatter from '../../Utilities/currencyFormatter';\nvar TotalSavings = function (_a) {\n    var _b = _a.totalSavings, totalSavings = _b === void 0 ? 0 : _b;\n    return (React.createElement(Card, { isPlain: true, isCompact: true },\n        React.createElement(CardTitle, null, \"Total savings\"),\n        React.createElement(CardBody, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"4xl\", style: { color: 'var(--pf-global--success-color--200)' } }, currencyFormatter(totalSavings)))));\n};\nexport default TotalSavings;\n","var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nimport React from 'react';\nimport { Card, CardBody, InputGroup as PFInputGroup, InputGroupText, TextInput, } from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport styled from 'styled-components';\nvar InputGroup = styled(PFInputGroup)(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  width: 170px;\\n\"], [\"\\n  width: 170px;\\n\"])));\nvar validFloat = function (value) {\n    return +value && +value < 0 ? NaN : value;\n};\nvar CalculationCost = function (_a) {\n    var _b = _a.costManual, costManual = _b === void 0 ? 0 : _b, _c = _a.setCostManual, setCostManual = _c === void 0 ? function () { return ({}); } : _c, _d = _a.costAutomation, costAutomation = _d === void 0 ? 0 : _d, _e = _a.setCostAutomation, setCostAutomation = _e === void 0 ? function () { return ({}); } : _e;\n    return (React.createElement(Card, { isPlain: true, isCompact: true },\n        React.createElement(CardBody, null,\n            React.createElement(\"p\", null,\n                \"Manual cost of automation\",\n                React.createElement(\"span\", { style: {\n                        color: 'var(--pf-global--Color--dark-200)',\n                        fontSize: '0.8em',\n                        display: 'block',\n                    } }, \"(e.g. average salary of mid-level Software Engineer)\")),\n            React.createElement(InputGroup, null,\n                React.createElement(InputGroupText, null,\n                    React.createElement(DollarSignIcon, null)),\n                React.createElement(TextInput, { id: \"manual-cost\", type: \"number\", \"aria-label\": \"manual-cost\", value: isNaN(costManual) ? '' : costManual.toString(), onChange: function (e) { return setCostManual(validFloat(+e)); } }),\n                React.createElement(InputGroupText, null, \"/hr\")),\n            React.createElement(\"p\", { style: { paddingTop: '10px' } }, \"Automated process cost\"),\n            React.createElement(InputGroup, null,\n                React.createElement(InputGroupText, null,\n                    React.createElement(DollarSignIcon, null)),\n                React.createElement(TextInput, { id: \"automation-cost\", type: \"number\", \"aria-label\": \"automation-cost\", value: isNaN(costAutomation) ? '' : costAutomation.toString(), onChange: function (e) { return setCostAutomation(validFloat(+e)); } }),\n                React.createElement(InputGroupText, null, \"/hr\")))));\n};\nexport default CalculationCost;\nvar templateObject_1;\n","import React, { useState } from 'react';\nimport { Button, ButtonVariant, Modal, ModalVariant, } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nvar AutomationFormula = function () {\n    var _a = useState(false), isOpen = _a[0], setIsOpen = _a[1];\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Button, { variant: ButtonVariant.link, onClick: function () { return setIsOpen(true); }, icon: React.createElement(InfoCircleIcon, null) }, \"Automation formula\"),\n        React.createElement(Modal, { title: \"Automation formula\", isOpen: isOpen, onClose: function () { return setIsOpen(false); }, variant: ModalVariant.medium, actions: [\n                React.createElement(Button, { key: \"cancel\", variant: ButtonVariant.primary, onClick: function () { return setIsOpen(false); } }, \"Close\"),\n            ] },\n            React.createElement(\"p\", null,\n                React.createElement(\"b\", null, \"Manual cost for template X\"),\n                React.createElement(\"br\", null),\n                \"(time for a manual run on one host in hours * (sum of all hosts across all job runs) ) * cost per hour\"),\n            React.createElement(\"br\", null),\n            React.createElement(\"p\", null,\n                React.createElement(\"b\", null, \"Automation cost for template X\"),\n                React.createElement(\"br\", null),\n                \"cost of automation per hour * sum of total elapsed hours for a template\"),\n            React.createElement(\"br\", null),\n            React.createElement(\"p\", null,\n                React.createElement(\"b\", null, \"Savings\"),\n                React.createElement(\"br\", null),\n                \"Sum of (manual cost - automation cost) across all templates\"))));\n};\nexport default AutomationFormula;\n","import React from 'react';\nimport { ExpandableRowContent, Td } from '@patternfly/react-table';\nimport { DescriptionList, DescriptionListDescription, DescriptionListGroup, DescriptionListTerm, } from '@patternfly/react-core';\nvar ExpandedRowContents = function (_a) {\n    var template = _a.template;\n    return (React.createElement(Td, { colSpan: 5 },\n        React.createElement(ExpandableRowContent, null,\n            React.createElement(DescriptionList, { columnModifier: { default: '3Col' } },\n                React.createElement(DescriptionListGroup, null,\n                    React.createElement(DescriptionListTerm, null, \"ID\"),\n                    React.createElement(DescriptionListDescription, null, template.id)),\n                React.createElement(DescriptionListGroup, null,\n                    React.createElement(DescriptionListTerm, null, \"Elapsed\"),\n                    React.createElement(DescriptionListDescription, null, template.elapsed)),\n                React.createElement(DescriptionListGroup, null,\n                    React.createElement(DescriptionListTerm, null, \"Host count\"),\n                    React.createElement(DescriptionListDescription, null, template.host_count)),\n                React.createElement(DescriptionListGroup, null,\n                    React.createElement(DescriptionListTerm, null, \"Total count\"),\n                    React.createElement(DescriptionListDescription, null, template.total_count)),\n                React.createElement(DescriptionListGroup, null,\n                    React.createElement(DescriptionListTerm, null, \"Total org count\"),\n                    React.createElement(DescriptionListDescription, null, template.total_org_count)),\n                React.createElement(DescriptionListGroup, null,\n                    React.createElement(DescriptionListTerm, null, \"Total cluster count\"),\n                    React.createElement(DescriptionListDescription, null, template.total_cluster_count)),\n                React.createElement(DescriptionListGroup, null,\n                    React.createElement(DescriptionListTerm, null, \"Total inventory count\"),\n                    React.createElement(DescriptionListDescription, null, template.total_inventory_count))))));\n};\nexport default ExpandedRowContents;\n","import React, { useState } from 'react';\nimport { Button, InputGroup, InputGroupText, TextInput, Tooltip, InputGroupTextVariant, Switch, ButtonVariant, } from '@patternfly/react-core';\nimport { Tr, Td } from '@patternfly/react-table';\nimport { global_success_color_200 as globalSuccessColor200 } from '@patternfly/react-tokens';\nimport currencyFormatter from '../../../Utilities/currencyFormatter';\nimport ExpandedRowContents from './ExplandedRowContents';\nvar Row = function (_a) {\n    var template = _a.template, setDataRunTime = _a.setDataRunTime, setEnabled = _a.setEnabled, redirectToJobExplorer = _a.redirectToJobExplorer;\n    var _b = useState(false), isExpanded = _b[0], setIsExpanded = _b[1];\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Tr, null,\n            React.createElement(Td, { expand: {\n                    rowIndex: template.id,\n                    isExpanded: isExpanded,\n                    onToggle: function () { return setIsExpanded(!isExpanded); },\n                } }),\n            React.createElement(Td, null,\n                React.createElement(Tooltip, { content: 'List of jobs for this template for past 30 days' },\n                    React.createElement(Button, { onClick: function () { return redirectToJobExplorer(template.id); }, variant: ButtonVariant.link }, template.name))),\n            React.createElement(Td, null,\n                React.createElement(InputGroup, null,\n                    React.createElement(TextInput, { style: { maxWidth: '150px' }, type: \"number\", \"aria-label\": \"time run manually\", value: template.avgRunTime / 60, onChange: function (minutes) { return setDataRunTime(+minutes * 60, template.id); } }),\n                    React.createElement(InputGroupText, null, \"min\"),\n                    React.createElement(InputGroupText, { variant: InputGroupTextVariant.plain },\n                        \"x \",\n                        template.successful_hosts_total,\n                        \" host runs\"))),\n            React.createElement(Td, { style: { color: globalSuccessColor200.value } }, currencyFormatter(+template.delta)),\n            React.createElement(Td, null,\n                React.createElement(Switch, { label: \"Show\", labelOff: \"Hide\", isChecked: template.enabled, onChange: function (checked) { return setEnabled(checked); } }))),\n        React.createElement(Tr, { isExpanded: isExpanded },\n            React.createElement(ExpandedRowContents, { template: template }))));\n};\nexport default Row;\n","import React from 'react';\nimport { Card, CardBody, Switch } from '@patternfly/react-core';\nimport { TableComposable, TableVariant, Tbody, Th, Thead, Tr, } from '@patternfly/react-table';\nimport Row from './Row';\nvar TopTemplates = function (_a) {\n    var _b = _a.data, data = _b === void 0 ? [] : _b, _c = _a.setDataRunTime, setDataRunTime = _c === void 0 ? function () { return ({}); } : _c, _d = _a.setEnabled, setEnabled = _d === void 0 ? function () { return function () { return ({}); }; } : _d, _e = _a.redirectToJobExplorer, redirectToJobExplorer = _e === void 0 ? function () { return ({}); } : _e;\n    return (React.createElement(Card, null,\n        React.createElement(CardBody, null,\n            React.createElement(\"p\", null, \"Enter the time it takes to run the following templates manually.\"),\n            React.createElement(TableComposable, { \"aria-label\": \"ROI Table\", variant: TableVariant.compact },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null,\n                        React.createElement(Th, null),\n                        React.createElement(Th, null, \"Name\"),\n                        React.createElement(Th, null, \"Time\"),\n                        React.createElement(Th, null, \"Savings\"),\n                        React.createElement(Th, null,\n                            React.createElement(Switch, { label: \"Show all\", labelOff: \"Show all\", isChecked: !data.find(function (d) { return !d.enabled; }), onChange: function (checked) { return setEnabled(undefined)(checked); } })))),\n                React.createElement(Tbody, null, data.map(function (template) { return (React.createElement(Row, { key: template.id, template: template, setDataRunTime: setDataRunTime, redirectToJobExplorer: redirectToJobExplorer, setEnabled: setEnabled(template.id) })); }))))));\n};\nexport default TopTemplates;\n","import React, { useState, useEffect, useCallback } from 'react';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport {\n  Card,\n  CardBody,\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  CardHeader,\n  CardTitle,\n} from '@patternfly/react-core';\n\n// Imports from custom components\nimport LoadingState from '../../Components/ApiStatus/LoadingState';\nimport NoData from '../../Components/ApiStatus/NoData';\nimport ApiErrorState from '../../Components/ApiStatus/ApiErrorState';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\n// Imports from API\nimport { readROI, readROIOptions } from '../../Api/';\n\n// Imports from utilities\nimport {\n  useQueryParams,\n  useRedirect,\n  DEFAULT_NAMESPACE,\n} from '../../QueryParams/';\nimport { jobExplorer, roi as roiConst } from '../../Utilities/constants';\nimport { calculateDelta, convertSecondsToHours } from '../../Utilities/helpers';\nimport useRequest from '../../Utilities/useRequest';\n\n// Chart\nimport Chart from './Chart';\n\n// Local imports\nimport TotalSavings from './TotalSavings';\nimport CalculationCost from './CalculationCost';\nimport AutomationFormula from './AutomationFormula';\nimport TemplatesTable from './TemplatesTable';\nimport { Paths } from '../../paths';\n\nconst mapApi = ({ items = [] }) =>\n  items.map((el) => ({\n    ...el,\n    delta: 0,\n    avgRunTime: 3600,\n    manualCost: 0,\n    automatedCost: 0,\n    enabled: true,\n  }));\n\nconst filterDisabled = (data) => data.filter(({ enabled }) => enabled);\n\nconst updateDeltaCost = (data, costAutomation, costManual) =>\n  data.map((el) => {\n    const manualCost =\n      convertSecondsToHours(el.avgRunTime) *\n      el.successful_hosts_total *\n      parseFloat(costManual);\n    const automatedCost =\n      convertSecondsToHours(el.successful_elapsed_total) *\n      parseFloat(costAutomation);\n    const delta = calculateDelta(automatedCost, manualCost);\n\n    return { ...el, delta, manualCost, automatedCost };\n  });\n\nconst computeTotalSavings = (data) =>\n  data.reduce((sum, curr) => sum + curr.delta, 0);\n\nconst AutomationCalculator = () => {\n  const [costManual, setCostManual] = useState('50');\n  const [costAutomation, setCostAutomation] = useState('20');\n\n  const redirect = useRedirect();\n  const { queryParams, setFromToolbar } = useQueryParams(\n    roiConst.defaultParams\n  );\n\n  const { result: options, request: setOptions } = useRequest(\n    useCallback(() => readROIOptions(queryParams), [queryParams]),\n    {}\n  );\n\n  const {\n    result: api,\n    error: apiError,\n    isLoading: apiIsLoading,\n    isSuccess: apiIsSuccess,\n    request: fetchEndpoint,\n    setValue,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await readROI(queryParams);\n      return updateDeltaCost(mapApi(response), costAutomation, costManual);\n    }, [queryParams]),\n    []\n  );\n\n  /**\n   * Modifies one elements avgRunTime in the unfilteredData\n   * and updates all calculated fields.\n   * Used in top templates.\n   */\n  const setDataRunTime = (seconds, id) => {\n    const updatedData = api.map((el) => {\n      if (el.id === id) {\n        el.avgRunTime = seconds;\n        const updatedDelta = updateDeltaCost(\n          [el],\n          costAutomation,\n          costManual\n        )[0];\n        return updatedDelta;\n      } else {\n        return el;\n      }\n    });\n\n    setValue(updatedData);\n  };\n\n  const setEnabled = (id) => (value) => {\n    if (!id) {\n      setValue(api.map((el) => ({ ...el, enabled: value })));\n    } else {\n      setValue(\n        api.map((el) => (el.id === id ? { ...el, enabled: value } : el))\n      );\n    }\n  };\n\n  /**\n   * Recalculates the delta and costs in the data after the cost is changed.\n   */\n  useEffect(() => {\n    setValue(updateDeltaCost(api, costAutomation, costManual));\n  }, [costAutomation, costManual]);\n\n  /**\n   * Get data from API depending on the queryParam.\n   */\n  useEffect(() => {\n    setOptions();\n    fetchEndpoint();\n  }, [queryParams]);\n\n  /**\n   * Function to redirect to the job explorer page\n   * with the same filters as is used here.\n   */\n  const redirectToJobExplorer = (templateId) => {\n    const initialQueryParams = {\n      [DEFAULT_NAMESPACE]: {\n        ...jobExplorer.defaultParams,\n        quick_date_range: 'last_30_days',\n        template_id: [templateId],\n      },\n    };\n\n    redirect(Paths.jobExplorer, initialQueryParams);\n  };\n\n  const renderLeft = () => (\n    <Card isPlain>\n      <CardHeader>\n        {/* <CardActions>\n              <ToggleGroup aria-label=\"toggleButton\">\n                <ToggleGroupItem\n                  text=\"Money\"\n                  buttonId=\"money\"\n                  isSelected={isMoney}\n                  onChange={() => setIsMoney(true)}\n                />\n                <ToggleGroupItem\n                  text=\"Time\"\n                  buttonId=\"time\"\n                  isSelected={!isMoney}\n                  onChange={() => setIsMoney(false)}\n                />\n              </ToggleGroup>\n            </CardActions> */}\n        <CardTitle>Automation savings</CardTitle>\n      </CardHeader>\n      <CardBody>\n        <Chart data={filterDisabled(api)} />\n      </CardBody>\n    </Card>\n  );\n\n  const renderRight = () => (\n    <Stack>\n      <StackItem>\n        <TotalSavings totalSavings={computeTotalSavings(filterDisabled(api))} />\n      </StackItem>\n      <StackItem>\n        <Stack>\n          <StackItem>\n            <CalculationCost\n              costManual={costManual}\n              setCostManual={setCostManual}\n              costAutomation={costAutomation}\n              setCostAutomation={setCostAutomation}\n            />\n          </StackItem>\n          <StackItem>\n            <AutomationFormula />\n          </StackItem>\n        </Stack>\n      </StackItem>\n    </Stack>\n  );\n\n  const renderContents = () => {\n    if (apiIsLoading) return <LoadingState />;\n    if (apiError) return <ApiErrorState message={apiError.error} />;\n    if (apiIsSuccess && api.length <= 0) return <NoData />;\n    if (apiIsSuccess && api.length > 0)\n      return (\n        <Card>\n          <Grid hasGutter className=\"automation-wrapper\">\n            <GridItem span={9}>{renderLeft()}</GridItem>\n            <GridItem span={3}>{renderRight()}</GridItem>\n            <GridItem span={12}>\n              <TemplatesTable\n                redirectToJobExplorer={redirectToJobExplorer}\n                data={api}\n                setDataRunTime={setDataRunTime}\n                setEnabled={setEnabled}\n              />\n            </GridItem>\n          </Grid>\n        </Card>\n      );\n\n    return <></>;\n  };\n\n  return (\n    <>\n      <PageHeader>\n        <PageHeaderTitle title={'Automation Calculator'} />\n        <FilterableToolbar\n          categories={options}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      <Main>{renderContents()}</Main>\n    </>\n  );\n};\n\nexport default AutomationCalculator;\n"],"names":["id","kind","type","parent","props","height","padding","top","bottom","right","left","domainPadding","y","x","xAxis","label","style","axisLabel","labelProps","angle","textAnchor","dx","dy","fixLabelOverlap","yAxis","tickFormat","showGrid","api","url","params","template","tooltip","standalone","labelName","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","customFunctions","data","fetchFnc","Promise","resolve","_a","schema","functions","items","response_type","_b","totalSavings","Card","isPlain","isCompact","CardTitle","CardBody","Title","headingLevel","size","color","currencyFormatter","cooked","raw","InputGroup","templateObject_1","defineProperty","value","validFloat","NaN","costManual","_c","setCostManual","_d","costAutomation","_e","setCostAutomation","fontSize","display","InputGroupText","TextInput","isNaN","toString","onChange","e","paddingTop","useState","isOpen","setIsOpen","Button","variant","ButtonVariant","onClick","icon","Modal","title","onClose","ModalVariant","actions","key","Td","colSpan","ExpandableRowContent","DescriptionList","columnModifier","default","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","elapsed","host_count","total_count","total_org_count","total_cluster_count","total_inventory_count","setDataRunTime","setEnabled","redirectToJobExplorer","isExpanded","setIsExpanded","Tr","expand","rowIndex","onToggle","Tooltip","content","name","maxWidth","avgRunTime","minutes","InputGroupTextVariant","successful_hosts_total","delta","Switch","labelOff","isChecked","enabled","checked","TableComposable","TableVariant","Thead","Th","find","d","undefined","Tbody","map","filterDisabled","filter","updateDeltaCost","el","manualCost","convertSecondsToHours","parseFloat","automatedCost","successful_elapsed_total","calculateDelta","redirect","useRedirect","useQueryParams","roiConst","queryParams","setFromToolbar","useRequest","useCallback","readROIOptions","options","result","setOptions","request","readROI","response","apiError","error","apiIsLoading","isLoading","apiIsSuccess","isSuccess","fetchEndpoint","setValue","useEffect","PageHeader","PageHeaderTitle","categories","filters","setFilters","Main","LoadingState","ApiErrorState","message","NoData","Grid","hasGutter","className","GridItem","span","CardHeader","Stack","StackItem","reduce","sum","curr","TemplatesTable","templateId","initialQueryParams","DEFAULT_NAMESPACE","jobExplorer","quick_date_range","template_id","Paths","seconds","updatedData"],"sourceRoot":""}