{"version":3,"file":"js/3398.1692132223327.f8b16cd28df8887d5806.js","mappings":"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","sources":["webpack:///./src/Charts/BaseChart.js","webpack:///./src/Charts/Breakdown.js","webpack:///./src/Charts/Utilities/Tooltip.js","webpack:///./src/Charts/BarChart.js","webpack:///./src/Charts/LineChart.js","webpack:///./src/Containers/Clusters/ModulesList.js","webpack:///./src/Containers/Clusters/ModalContents.js","webpack:///./src/Containers/Clusters/TemplatesList.js","webpack:///./src/Containers/Clusters/Clusters.js","webpack:///./src/Components/ApiStatus/LoadingState.tsx","webpack:///./src/Components/ApiStatus/NoData.tsx","webpack:///./src/Components/ApiStatus/NoResults.tsx","webpack:///./src/Components/JobStatus.tsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport { useNavigate } from 'react-router-dom';\n\nconst initializeChart = (Chart) => {\n  const BaseChart = (props) => {\n    const { id, margin } = props;\n\n    const getWidth = () => {\n      let width;\n      width =\n        parseInt(d3.select('#' + id).style('width')) -\n          margin.left -\n          margin.right || 700;\n      return width;\n    };\n\n    const getHeight = () => {\n      let height;\n      height =\n        parseInt(d3.select('#' + id).style('height')) -\n          margin.top -\n          margin.bottom || 450;\n      return height;\n    };\n\n    const navigate = useNavigate();\n\n    return (\n      <Chart\n        {...props}\n        getWidth={getWidth}\n        getHeight={getHeight}\n        navigate={navigate}\n      />\n    );\n  };\n\n  BaseChart.propTypes = {\n    id: PropTypes.string,\n    margin: PropTypes.object,\n  };\n\n  return BaseChart;\n};\n\ninitializeChart.propTypes = {\n  Chart: PropTypes.element,\n};\n\nexport default initializeChart;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst BarContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  width: 100%;\n  max-width: 100%;\n  height: 1rem;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst Bar = styled.div`\n  height: 100%;\n`;\n\nconst LabelsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  margin-bottom: 1rem;\n`;\n\nconst Label = styled.div`\n  padding-left: 2rem;\n  display: flex;\n  align-items: center;\n  margin-bottom: 1.5rem;\n`;\n\nconst Square = styled.div`\n  width: 0.75rem;\n  height: 0.75rem;\n  margin-right: 0.5rem;\n`;\n\nconst whiteSpace = 0.15; // Currently in percent of total bar width\n\nfunction title(str) {\n  return str[0].toUpperCase() + str.slice(1).toLowerCase();\n}\n\nconst Breakdown = ({ categoryCount, categoryColor, showPercent = false }) => {\n  const totalCount = Object.values(categoryCount).reduce(\n    (accumulated, currentVal) => accumulated + currentVal\n  );\n\n  const sortedCategories = Object.keys(categoryCount)\n    .filter((category) => categoryCount[category] > 0)\n    .sort((a, b) => {\n      if (categoryCount[a] < categoryCount[b]) {\n        return 1; // Normally should be -1, but we want descending order\n      }\n      if (categoryCount[a] > categoryCount[b]) {\n        return -1;\n      }\n      return 0;\n    })\n    .map((category) => {\n      return {\n        name: category,\n        barSpacing: categoryCount[category] / totalCount,\n        color: categoryColor[category],\n      };\n    });\n\n  const remainingSpace = 1 - ((sortedCategories.length - 1) * whiteSpace) / 100;\n\n  return (\n    <>\n      <BarContainer>\n        {sortedCategories.map(({ barSpacing, color }, idx) => {\n          if (idx < sortedCategories.length - 1) {\n            return (\n              <React.Fragment key={idx}>\n                <Bar\n                  style={{\n                    backgroundColor: color,\n                    width: `${barSpacing * 100 * remainingSpace}%`,\n                  }}\n                />\n                <Bar\n                  style={{\n                    backgroundColor: 'transparent',\n                    width: `${whiteSpace}%`,\n                  }}\n                />\n              </React.Fragment>\n            );\n          } else {\n            return (\n              <React.Fragment key={idx}>\n                <Bar\n                  style={{\n                    backgroundColor: color,\n                    width: `${barSpacing * 100 * remainingSpace}%`,\n                  }}\n                />\n              </React.Fragment>\n            );\n          }\n        })}\n      </BarContainer>\n      <LabelsContainer>\n        {sortedCategories.map(({ name, barSpacing, color }) => (\n          <Label key={`label-${name}`}>\n            <Square style={{ backgroundColor: color }} />\n            {showPercent ? (\n              <p>\n                {title(name)} {Math.round(barSpacing * 100)}%\n              </p>\n            ) : (\n              <p>{title(name)}</p>\n            )}\n          </Label>\n        ))}\n      </LabelsContainer>\n    </>\n  );\n};\n\nBreakdown.propTypes = {\n  categoryColor: PropTypes.object.isRequired,\n  categoryCount: PropTypes.object.isRequired,\n  showPercent: PropTypes.bool,\n};\n\nexport default Breakdown;\n","import * as d3 from 'd3';\n\nclass Tooltip {\n  constructor(opts) {\n    this.svg = opts.svg;\n    this.colors = opts.colors;\n    this.draw();\n  }\n\n  draw() {\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 145;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -41)\n      .attr('rx', 2)\n      .attr('height', 110)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.circleSuccess = this.toolTipBase\n      .append('circle')\n      .attr('cx', 26)\n      .attr('cy', 0)\n      .attr('r', 8)\n      .attr('stroke', 'white')\n      .attr('fill', 'white');\n    this.circleFail = this.toolTipBase\n      .append('circle')\n      .attr('cx', 26)\n      .attr('cy', 26)\n      .attr('r', 8)\n      .attr('stroke', 'white')\n      .attr('fill', 'white');\n    this.successText = this.toolTipBase\n      .append('text')\n      .attr('x', 43)\n      .attr('y', 4)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Successful');\n    this.failText = this.toolTipBase\n      .append('text')\n      .attr('x', 43)\n      .attr('y', 28)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Failed');\n    this.successIcon = this.toolTipBase\n      .append('text')\n      .attr('class', 'fas fa-sm')\n      .attr('fill', this.colors(1))\n      .attr('x', 19)\n      .attr('y', 5)\n      .text('\\uf058');\n    this.failedIcon = this.toolTipBase\n      .append('text')\n      .attr('class', 'fas fa-sm')\n      .attr('fill', this.colors(0))\n      .attr('x', 20)\n      .attr('y', 31)\n      .text('\\uf06a');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 137)\n      .attr('y', -21)\n      .attr('font-size', 12)\n      .attr('text-anchor', 'end')\n      .text('No jobs');\n    this.successful = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 122)\n      .attr('y', 4)\n      .text('0');\n    this.failed = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 122)\n      .attr('y', 28)\n      .text('0');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('stroke', 'white')\n      .attr('x', 20)\n      .attr('y', -21)\n      .attr('font-size', 12)\n      .text('Never');\n    this.clickMore = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 20)\n      .attr('y', 55)\n      .attr('font-size', 12)\n      .text('Click for details');\n  }\n\n  handleMouseOver = (d) => {\n    let success = 0;\n    let fail = 0;\n    let total = 0;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    const formatTooltipDate = d3.timeFormat('%m/%d');\n    if (!d) {\n      return;\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n    if (d) {\n      success = d.RAN || 0;\n      fail = d.FAIL || 0;\n      total = d.TOTAL || 0;\n      this.date.text(formatTooltipDate(d.DATE || null));\n    }\n\n    if (d && d.data) {\n      success = d.data.RAN || 0;\n      fail = d.data.FAIL || 0;\n      total = d.data.TOTAL || 0;\n      this.date.text(formatTooltipDate(d.data.DATE || null));\n    }\n\n    this.jobs.text('' + total + ' jobs');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n    this.failed.text('' + fail);\n    this.successful.text('' + success);\n    this.successTextWidth = this.successful.node().getComputedTextLength();\n    this.failTextWidth = this.failed.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 40;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.circleSuccess.attr('cx', -adjustedWidth);\n      this.circleFail.attr('cx', -adjustedWidth);\n      this.failedIcon.attr('x', -adjustedWidth - 7);\n      this.successIcon.attr('x', -adjustedWidth - 7);\n      this.successText.attr('x', -adjustedWidth + 17);\n      this.failText.attr('x', -adjustedWidth + 17);\n      this.successful.attr('x', -this.successTextWidth - 20 - 12);\n      this.failed.attr('x', -this.failTextWidth - 20 - 12);\n      this.date.attr('x', -adjustedWidth - 5);\n      this.jobs.attr('x', -this.jobsWidth / 2 - 7);\n      this.clickMore.attr('x', -adjustedWidth);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.circleSuccess.attr('cx', 26);\n      this.circleFail.attr('cx', 26);\n      this.failedIcon.attr('x', 19);\n      this.successIcon.attr('x', 19);\n      this.successText.attr('x', 43);\n      this.failText.attr('x', 43);\n      this.successful.attr('x', adjustedWidth - this.successTextWidth);\n      this.failed.attr('x', adjustedWidth - this.failTextWidth);\n      this.date.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth);\n      this.clickMore.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nexport default Tooltip;\n","import React, { Component } from 'react';\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport Tooltip from './Utilities/Tooltip';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\nimport { DEFAULT_NAMESPACE, createUrl } from '../QueryParams/';\nimport { jobExplorer } from '../Utilities/constants';\n\nclass BarChart extends Component {\n  constructor(props) {\n    super(props);\n    this.draw = this.draw.bind(this);\n    this.init = this.init.bind(this);\n    this.resize = this.resize.bind(this);\n    this.navigateToJobExplorer = this.navigateToJobExplorer.bind(this);\n    this.state = {\n      formattedData: [],\n      timeout: null,\n    };\n  }\n\n  navigateToJobExplorer({ data: { DATE: date } }) {\n    const formattedDate = formatDate(date);\n    const initialQueryParams = {\n      [DEFAULT_NAMESPACE]: {\n        ...jobExplorer.defaultParams,\n        start_date: formattedDate,\n        end_date: formattedDate,\n        quick_date_range: 'custom',\n        status: ['failed', 'successful'],\n        template_id: this.props.queryParams.template_id,\n        org_id: this.props.queryParams.org_id,\n        job_type: this.props.queryParams.job_type,\n      },\n    };\n\n    this.props.navigate(createUrl(Paths.jobExplorer, true, initialQueryParams));\n  }\n\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  init() {\n    this.draw();\n  }\n\n  // Methods\n  draw() {\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const parseTime = d3.timeParse('%Y-%m-%d');\n    let { data: unformattedData } = this.props;\n    const data = unformattedData.reduce(\n      (formatted, { created_date, successful_count, failed_count }) => {\n        let DATE = parseTime(created_date) || new Date();\n        let RAN = +successful_count || 0;\n        let FAIL = +failed_count || 0;\n        let TOTAL = +successful_count + failed_count || 0;\n        return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n      },\n      []\n    );\n    const width = this.props.getWidth();\n    const height = this.props.getHeight();\n    const x = d3.scaleBand().rangeRound([0, width]).padding(0.35); // percentage\n    const y = d3.scaleLinear().range([height, 0]);\n\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n    //[fail, success]\n    let colors = d3.scaleOrdinal(['#6EC664', '#A30000']);\n\n    const barTooltip = new Tooltip({\n      svg: '#' + this.props.id,\n      colors,\n    });\n    const status = ['FAIL', 'RAN'];\n\n    // stack our data\n    const stack = d3\n      .stack()\n      .keys(status)\n      .order(d3.stackOrderNone)\n      .offset(d3.stackOffsetNone);\n\n    const layers = stack(data);\n    // Scale the range of the data\n    x.domain(layers[0].map((d) => d.data.DATE));\n    y.domain([0, d3.max(layers[layers.length - 1], (d) => d[1] * 1.15) || 8]);\n    // Add the Y Axis\n    svg\n      .append('g')\n      .attr('class', 'y-axis')\n      .call(d3.axisLeft(y).tickSize(-width, 0, 0))\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.y-axis .tick text').attr('x', -5);\n    // text label for the y axis\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Jobs across all clusters');\n    // Add the X Axis\n    let ticks;\n    const maxTicks = Math.round(data.length / (data.length / 2));\n    ticks = data.map((d) => d.DATE);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n        .filter((item) => item);\n    }\n\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(\n        d3.axisBottom(x).tickValues(ticks).tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n      )\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n    // text label for the x axis\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n\n    const layer = svg\n      .selectAll('layer')\n      .data(layers)\n      .enter()\n      .append('g')\n      .attr('class', 'layer')\n      .style('fill', (_d, i) => colors(i));\n    layer\n      .selectAll('rect')\n      .data((d) => d)\n      .enter()\n      .append('rect')\n      .attr('x', (d) => x(d.data.DATE))\n      .attr('y', (d) => y(d[0]))\n      .attr('height', 0)\n      .attr('width', x.bandwidth() - 1)\n      .transition()\n      .duration(550)\n      .ease(d3.easeCubic)\n      .attr('y', (d) => y(d[1]))\n      .attr('height', (d) => y(d[0]) - y(d[1]));\n    layer\n      .selectAll('rect')\n      .on('mouseover', barTooltip.handleMouseOver)\n      .on('mousemove', barTooltip.handleMouseOver)\n      .on('mouseout', barTooltip.handleMouseOut)\n      .on('click', this.navigateToJobExplorer);\n  }\n\n  componentDidMount() {\n    this.init();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      this.init();\n    }\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  render() {\n    return <div id={this.props.id} data-cy=\"barchart\" />;\n  }\n}\n\nBarChart.propTypes = {\n  id: PropTypes.string,\n  queryParams: PropTypes.object,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  navigate: PropTypes.func,\n};\n\nexport default initializeChart(BarChart);\n","import React, { Component } from 'react';\nimport initializeChart from './BaseChart';\nimport PropTypes from 'prop-types';\nimport Tooltip from './Utilities/Tooltip';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\nimport * as d3 from 'd3';\nimport { DEFAULT_NAMESPACE, createUrl } from '../QueryParams/';\nimport { jobExplorer } from '../Utilities/constants';\n\nclass LineChart extends Component {\n  constructor(props) {\n    super(props);\n    this.init = this.init.bind(this);\n    this.draw = this.draw.bind(this);\n    this.resize = this.resize.bind(this);\n    this.updateCluster = this.updateCluster.bind(this);\n    this.navigateToJobExplorer = this.navigateToJobExplorer.bind(this);\n    this.state = {\n      formattedData: [],\n      timeout: null,\n    };\n  }\n\n  navigateToJobExplorer({ DATE: date }) {\n    const formattedDate = formatDate(date);\n    const initialQueryParams = {\n      [DEFAULT_NAMESPACE]: {\n        ...jobExplorer.defaultParams,\n        start_date: formattedDate,\n        end_date: formattedDate,\n        quick_date_range: 'custom',\n        status: ['failed', 'successful'],\n        cluster_id: this.props.queryParams.cluster_id,\n        org_id: this.props.queryParams.org_id,\n        template_id: this.props.queryParams.template_id,\n        job_type: this.props.queryParams.job_type,\n      },\n    };\n\n    this.props.navigate(createUrl(Paths.jobExplorer, true, initialQueryParams));\n  }\n\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  updateCluster() {\n    this.init();\n  }\n  init() {\n    this.draw();\n  }\n  // Methods\n  draw() {\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const width = this.props.getWidth();\n    const height = this.props.getHeight();\n\n    function tweenDash() {\n      const l = this.getTotalLength();\n      const i = d3.interpolateString('0,' + l, l + ',' + l);\n      return function (t) {\n        return i(t);\n      };\n    }\n\n    function transition(path) {\n      path.transition().duration(1000).attrTween('stroke-dasharray', tweenDash);\n    }\n\n    const x = d3.scaleTime().rangeRound([0, width]);\n    const y = d3.scaleLinear().range([height, 0]);\n\n    //[success, fail, total]\n    let colors = d3.scaleOrdinal(['#6EC664', '#A30000', '#06C']);\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n      .attr('z', 100)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n    // Tooltip\n    const tooltip = new Tooltip({\n      svg: '#' + this.props.id,\n      colors,\n    });\n    const { data: unformattedData } = this.props;\n    const parseTime = d3.timeParse('%Y-%m-%d');\n\n    const data = unformattedData.reduce(\n      (formatted, { created_date, successful_count, failed_count }) => {\n        let DATE = parseTime(created_date) || new Date();\n        let RAN = +successful_count || 0;\n        let FAIL = +failed_count || 0;\n        let TOTAL = +successful_count + failed_count || 0;\n        return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n      },\n      []\n    );\n    // Scale the range of the data\n    x.domain(\n      d3.extent(data, function (d) {\n        return d.DATE;\n      })\n    );\n    y.domain([\n      0,\n      d3.max(data, function (d) {\n        return d.TOTAL * 1.15 || 8;\n      }),\n    ]);\n\n    const successLine = d3\n      .line()\n      .curve(d3.curveMonotoneX)\n      .x(function (d) {\n        return x(d.DATE);\n      })\n      .y(function (d) {\n        return y(d.RAN);\n      });\n\n    const failLine = d3\n      .line()\n      .defined((d) => !isNaN(d.FAIL))\n      .curve(d3.curveMonotoneX)\n      .x(function (d) {\n        return x(d.DATE);\n      })\n      .y(function (d) {\n        return y(d.FAIL);\n      });\n    // Add the Y Axis\n    svg\n      .append('g')\n      .attr('class', 'y-axis')\n      .call(d3.axisLeft(y).ticks(10).tickSize(-width))\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.y-axis .tick text').attr('x', -5);\n\n    // text label for the y axis\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Job runs');\n    // Add the X Axis\n    let ticks;\n    const maxTicks = Math.round(data.length / (data.length / 2));\n    ticks = data.map((d) => d.DATE);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n        .filter((item) => item);\n    }\n\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(\n        d3\n          .axisBottom(x)\n          .tickValues(ticks)\n          .tickSize(-height)\n          .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n      ) // \"Jan-01\"\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n    // text label for the x axis\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n    const vertical = svg\n      .append('path')\n      .attr('class', 'mouse-line')\n      .style('stroke', 'black')\n      .style('stroke-width', '3px')\n      .style('stroke-dasharray', '3, 3')\n      .style('opacity', '0');\n\n    const handleMouseOver = function (d) {\n      tooltip.handleMouseOver(d);\n      // show vertical line\n      vertical.transition().style('opacity', '1');\n    };\n\n    const handleMouseMove = function () {\n      let intersectX = this.cx.baseVal.value;\n      vertical.attr('d', function () {\n        let d = 'M' + intersectX + ',' + height;\n        d += ' ' + intersectX + ',' + 0;\n        return d;\n      });\n    };\n\n    const handleMouseOut = function () {\n      // hide tooltip\n      tooltip.handleMouseOut();\n      // hide vertical line\n      vertical.transition().style('opacity', 0);\n    };\n\n    // Add the successLine path.\n    svg\n      .append('path')\n      .data([data])\n      .attr('class', 'line')\n      .style('fill', 'none')\n      .style('stroke', () => colors(1))\n      .attr('stroke-width', 2)\n      .attr('d', successLine)\n      .call(transition);\n\n    // Add the failLine path.\n    svg\n      .append('path')\n      .data([data])\n      .attr('class', 'line')\n      .style('fill', 'none')\n      .style('stroke', () => colors(0))\n      .attr('stroke-width', 2)\n      .attr('d', failLine)\n      .call(transition);\n    svg\n      .selectAll('dot')\n      .data(data)\n      .enter()\n      .append('circle')\n      .attr('r', 3)\n      .style('stroke', () => colors(1))\n      .style('fill', () => colors(1))\n      .attr('cx', function (d) {\n        return x(d.DATE);\n      })\n      .attr('cy', function (d) {\n        return y(d.RAN);\n      })\n\n      .on('mouseover', handleMouseOver)\n      .on('mousemove', handleMouseMove)\n      .on('mouseout', handleMouseOut)\n      .on('click', this.navigateToJobExplorer);\n    // create our failLine circles\n    svg\n      .selectAll('dot')\n      .data(data)\n      .enter()\n      .append('circle')\n      .attr('r', 3)\n      .style('stroke', () => colors(0))\n      .style('fill', () => colors(0))\n      .attr('cx', function (d) {\n        return x(d.DATE);\n      })\n      .attr('cy', function (d) {\n        return y(d.FAIL);\n      })\n      .on('mouseover', handleMouseOver)\n      .on('mousemove', handleMouseMove)\n      .on('mouseout', handleMouseOut)\n      .on('click', this.navigateToJobExplorer);\n  }\n\n  componentDidMount() {\n    this.updateCluster();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      this.updateCluster();\n    }\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nLineChart.propTypes = {\n  id: PropTypes.string,\n  queryParams: PropTypes.object,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  navigate: PropTypes.func,\n};\n\nexport default initializeChart(LineChart);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { trimStr } from '../../Utilities/helpers';\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/ApiStatus/LoadingState';\nimport NoData from '../../Components/ApiStatus/NoData';\n\nimport {\n  DataList,\n  DataListItem as PFDataListItem,\n  DataListCell as PFDataListCell,\n} from '@patternfly/react-core';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n  --pf-c-data-list__cell--PaddingBottom: 10px;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst ModulesList = ({ modules, isLoading }) => (\n  <DataList\n    aria-label=\"Top Modules\"\n    style={{\n      maxHeight: '400px',\n      overflow: 'auto',\n      height: '400px',\n      background: 'white',\n    }}\n  >\n    <DataListItem aria-labelledby=\"top-modules-header\">\n      <DataListCell>\n        <h3>Top modules</h3>\n      </DataListCell>\n      <DataCellEnd>\n        <h3>Usage</h3>\n      </DataCellEnd>\n    </DataListItem>\n    {isLoading && (\n      <PFDataListItem\n        aria-labelledby=\"modules-loading\"\n        key={isLoading}\n        style={{ border: 'none' }}\n      >\n        <PFDataListCell>\n          <LoadingState />\n        </PFDataListCell>\n      </PFDataListItem>\n    )}\n    {!isLoading && modules.length <= 0 && (\n      <PFDataListItem\n        aria-labelledby=\"modules-no-data\"\n        key={isLoading}\n        style={{ border: 'none' }}\n      >\n        <PFDataListCell>\n          <NoData />\n        </PFDataListCell>\n      </PFDataListItem>\n    )}\n    {!isLoading &&\n      modules\n        .filter((module) => module.name !== null)\n        .map(({ name, host_task_count }, index) => (\n          <DataListItem aria-labelledby=\"top-modules-detail\" key={index}>\n            <DataListCell>\n              <span>{trimStr(name)}</span>\n            </DataListCell>\n            <DataCellEnd>{host_task_count}</DataCellEnd>\n          </DataListItem>\n        ))}\n  </DataList>\n);\n\nModulesList.propTypes = {\n  modules: PropTypes.array,\n  isLoading: PropTypes.bool,\n};\n\nexport default ModulesList;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/ApiStatus/LoadingState';\nimport ApiErrorState from '../../Components/ApiStatus/ApiErrorState';\nimport NoResults from '../../Components/ApiStatus/NoResults';\nimport Breakdown from '../../Charts/Breakdown';\nimport JobStatus from '../../Components/JobStatus';\nimport { Paths } from '../../paths';\nimport {\n  formatDateTime,\n  formatJobType,\n  formatTotalTime,\n} from '../../Utilities/helpers';\nimport { readJobExplorer } from '../../Api';\n\nimport { Button, Modal, ModalVariant } from '@patternfly/react-core';\nimport {\n  global_palette_blue_300,\n  global_palette_green_200,\n  global_palette_red_100,\n  global_palette_black_850,\n  global_palette_orange_300,\n  global_palette_purple_300,\n  global_palette_cyan_200,\n  global_palette_light_green_200,\n} from '@patternfly/react-tokens';\n\nimport {\n  DescriptionList,\n  DescriptionListTerm,\n  DescriptionListGroup,\n  DescriptionListDescription,\n  Divider,\n} from '@patternfly/react-core';\n\nimport {\n  TableComposable,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n} from '@patternfly/react-table';\nimport useRequest from '../../Utilities/useRequest';\nimport { DEFAULT_NAMESPACE, createUrl } from '../../QueryParams';\nimport { jobExplorer } from '../../Utilities/constants';\nimport { useNavigate } from 'react-router-dom';\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 2rem;\n`;\n\nconst formatTopFailedTask = (data) => {\n  if (!data) {\n    return;\n  }\n\n  if (data && data[0]) {\n    const percentage = Math.ceil(\n      (data[0].failed_count / data[0].total_failed_count) * 100\n    );\n    return `${data[0].task_name} ${percentage}%`;\n  }\n\n  return `Unavailable`;\n};\n\nconst formatSuccessRate = (successCount, totalCount) =>\n  Math.ceil((successCount / totalCount) * 100) + '%';\nconst formatAvgRun = (elapsed, totalCount) =>\n  new Date(Math.ceil(elapsed / totalCount) * 1000).toISOString().substr(11, 8);\n\nconst ModalContents = ({ selectedId, isOpen, handleModal, qp, jobType }) => {\n  const navigate = useNavigate();\n\n  const relatedTemplateJobsParams = {\n    ...qp,\n    template_id: [selectedId],\n    attributes: [\n      'id',\n      'status',\n      'job_type',\n      'started',\n      'finished',\n      'elapsed',\n      'created',\n      'cluster_name',\n      'org_name',\n    ],\n    group_by_time: false,\n    limit: 5,\n    sort_options: 'created',\n    sort_oder: 'desc',\n    quick_date_range: qp.quick_date_range\n      ? qp.quick_date_range\n      : 'last_30_days',\n    job_type: [jobType],\n  };\n\n  const agreggateTemplateParams = {\n    group_by: 'template',\n    template_id: [selectedId],\n    attributes: [\n      'elapsed',\n      'job_type',\n      'successful_count',\n      'failed_count',\n      'error_count',\n      'waiting_count',\n      'pending_count',\n      'canceled_count',\n      'new_count',\n      'running_count',\n      'total_count',\n      jobType === 'job' ? 'most_failed_tasks' : 'most_failed_steps',\n    ],\n    status: qp.status,\n    quick_date_range: qp.quick_date_range\n      ? qp.quick_date_range\n      : 'last_30_days',\n    job_type: [jobType],\n  };\n\n  const {\n    result: stats,\n    request: fetchStats,\n    ...statsApi\n  } = useRequest(readJobExplorer, {});\n\n  const {\n    result: relatedJobs,\n    request: fetchJobs,\n    ...jobsApi\n  } = useRequest(readJobExplorer, {});\n\n  const navigateToJobExplorer = () => {\n    const { start_date, end_date, quick_date_range } = qp;\n\n    const initialQueryParams = {\n      [DEFAULT_NAMESPACE]: {\n        ...jobExplorer.defaultParams,\n        template_id: [selectedId],\n        status: [],\n        job_type: [jobType],\n        quick_date_range,\n        start_date,\n        end_date,\n      },\n    };\n    navigate(createUrl(Paths.jobExplorer, true, initialQueryParams));\n  };\n\n  useEffect(() => {\n    fetchStats(agreggateTemplateParams);\n    fetchJobs(relatedTemplateJobsParams);\n  }, [selectedId]);\n\n  const tableCols = ['Id/Name', 'Status', 'Cluster', 'Finished', 'Total time'];\n  const statsData = (statsApi.isSuccess && stats?.items[0]) ?? null;\n  const categoryCount = statsData\n    ? {\n        success: statsData.successful_count,\n        cancelled: statsData.canceled_count,\n        error: statsData.error_count,\n        failed: statsData.failed_count,\n        new: statsData.new_count,\n        pending: statsData.pending_count,\n        running: statsData.running_count,\n        waiting: statsData.waiting_count,\n      }\n    : null;\n\n  const categoryColor = {\n    success: global_palette_green_200.value,\n    cancelled: global_palette_black_850.value,\n    error: global_palette_orange_300.value,\n    failed: global_palette_red_100.value,\n    new: global_palette_cyan_200.value,\n    pending: global_palette_purple_300.value,\n    running: global_palette_blue_300.value,\n    waiting: global_palette_light_green_200.value,\n  };\n\n  const descriptionStats = statsData && [\n    {\n      label: 'Number of runs',\n      id: 'total-runs',\n      value: statsData.total_count ?? 'Unavailable',\n    },\n    {\n      label: 'Total time',\n      id: 'total-time',\n      value: statsData.elapsed\n        ? formatTotalTime(statsData.elapsed)\n        : 'Unavailable',\n    },\n    {\n      label: 'Average time',\n      id: 'avg-time',\n      value: statsData.elapsed\n        ? formatAvgRun(statsData.elapsed, statsData.total_count)\n        : 'Unavailable',\n    },\n    {\n      label: 'Type',\n      id: 'type',\n      value: jobType ? formatJobType(jobType) : 'Unavailable',\n    },\n    {\n      label: 'Success rate',\n      id: 'success-rate',\n      value: !isNaN(statsData.successful_count)\n        ? formatSuccessRate(statsData.successful_count, statsData.total_count)\n        : 'Unavailable',\n    },\n    {\n      label: 'Most failed task',\n      id: 'most-failed',\n      value: statsData.most_failed_tasks\n        ? formatTopFailedTask(statsData.most_failed_tasks)\n        : 'Unavailable',\n    },\n  ];\n\n  const cleanup = () => {\n    handleModal(false);\n  };\n\n  return (\n    <Modal\n      aria-label=\"modal\"\n      variant={ModalVariant.medium}\n      title={\n        jobsApi.isSuccess &&\n        statsApi.isSuccess &&\n        stats?.items?.length > 0 &&\n        (stats?.items[0]?.name ?? 'No template name')\n      }\n      isOpen={isOpen}\n      onClose={cleanup}\n      data-cy={'modal'}\n    >\n      {(statsApi.isLoading || jobsApi.isLoading) && <LoadingState />}\n      {(statsApi.error || jobsApi.error) && (\n        <ApiErrorState message={jobsApi.error.error} />\n      )}\n      {statsApi.isSuccess &&\n        jobsApi.isSuccess &&\n        relatedJobs?.items?.length <= 0 && <NoResults />}\n      {statsApi.isSuccess &&\n        jobsApi.isSuccess &&\n        relatedJobs?.items?.length > 0 && (\n          <>\n            {categoryCount && (\n              <Breakdown\n                categoryCount={categoryCount}\n                categoryColor={categoryColor}\n              />\n            )}\n\n            <DescriptionList isHorizontal columnModifier={{ lg: '3Col' }}>\n              {descriptionStats.map(({ label, id, value }) => (\n                <DescriptionListGroup className={id} key={label}>\n                  <DescriptionListTerm>{label}</DescriptionListTerm>\n                  <DescriptionListDescription>\n                    {value}\n                  </DescriptionListDescription>\n                </DescriptionListGroup>\n              ))}\n            </DescriptionList>\n\n            <Divider\n              component=\"div\"\n              style={{ marginTop: '2rem', marginBottom: '1.5rem' }}\n            />\n            <p>\n              <strong>Last 5 jobs</strong>\n            </p>\n\n            <TableComposable\n              aria-label=\"Template information table\"\n              variant=\"compact\"\n            >\n              <Thead>\n                <Tr>\n                  {tableCols.map((heading, idx) => (\n                    <Th key={idx}>{heading}</Th>\n                  ))}\n                </Tr>\n              </Thead>\n              <Tbody>\n                {relatedJobs.items.map((job, idx) => (\n                  <Tr key={`job-detail-${idx}`}>\n                    <Td>{`${job.id.id} - ${job.id.template_name}`}</Td>\n                    <Td>\n                      <JobStatus status={job.status} />\n                    </Td>\n                    <Td>{job.cluster_name}</Td>\n                    <Td>{formatDateTime(job.finished)}</Td>\n                    <Td>{formatTotalTime(job.elapsed)}</Td>\n                  </Tr>\n                ))}\n              </Tbody>\n            </TableComposable>\n          </>\n        )}\n\n      <ActionContainer>\n        <Button\n          key=\"cancel\"\n          variant=\"secondary\"\n          onClick={() => {\n            cleanup();\n          }}\n          data-cy={'modal_cancel_button'}\n        >\n          Close\n        </Button>\n\n        <Button\n          component=\"a\"\n          onClick={navigateToJobExplorer}\n          variant=\"link\"\n          data-cy={'modal_view_all_jobs_button'}\n        >\n          View all jobs\n        </Button>\n      </ActionContainer>\n    </Modal>\n  );\n};\n\nModalContents.propTypes = {\n  selectedId: PropTypes.number.isRequired,\n  qp: PropTypes.object.isRequired,\n  jobType: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  handleModal: PropTypes.func.isRequired,\n};\n\nexport default ModalContents;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/ApiStatus/LoadingState';\nimport NoData from '../../Components/ApiStatus/NoData';\n\nimport {\n  DataList,\n  DataListItem as PFDataListItem,\n  DataListCell as PFDataListCell,\n} from '@patternfly/react-core';\n\nimport ModalContents from './ModalContents';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n  --pf-c-data-list__cell--PaddingBottom: 10px;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst TemplatesList = ({ templates, isLoading, qp, title, jobType }) => {\n  const [selectedId, setSelectedId] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const displayJobType = (type) => {\n    return type === 'job' ? 'templates' : 'workflows';\n  };\n\n  return (\n    <>\n      <DataList\n        aria-label={`Top ${displayJobType(jobType)}`}\n        style={{\n          maxHeight: '400px',\n          overflow: 'auto',\n          height: '400px',\n          background: 'white',\n        }}\n      >\n        <DataListItem aria-labelledby={`top-${displayJobType(jobType)}-header`}>\n          <DataListCell>\n            <h3>{title}</h3>\n          </DataListCell>\n          <DataCellEnd>\n            <h3>Usage</h3>\n          </DataCellEnd>\n        </DataListItem>\n        {isLoading && (\n          <PFDataListItem\n            aria-labelledby={`${displayJobType(jobType)}-loading`}\n            key={isLoading}\n            style={{ border: 'none' }}\n          >\n            <PFDataListCell>\n              <LoadingState />\n            </PFDataListCell>\n          </PFDataListItem>\n        )}\n        {!isLoading && templates.length <= 0 && (\n          <PFDataListItem\n            aria-labelledby={`${displayJobType(jobType)}-no-data`}\n            key={isLoading}\n            style={{ border: 'none' }}\n          >\n            <PFDataListCell>\n              <NoData />\n            </PFDataListCell>\n          </PFDataListItem>\n        )}\n        {!isLoading &&\n          templates.map(({ name, total_count, id }, index) => (\n            <DataListItem\n              aria-labelledby={`top-${displayJobType(jobType)}-detail`}\n              key={index}\n            >\n              <DataListCell>\n                <a\n                  onClick={() => {\n                    setIsModalOpen(true);\n                    setSelectedId(id);\n                  }}\n                >\n                  {name}\n                </a>\n              </DataListCell>\n              <DataCellEnd>{total_count}</DataCellEnd>\n            </DataListItem>\n          ))}\n      </DataList>\n      {selectedId && (\n        <ModalContents\n          isOpen={isModalOpen}\n          handleModal={setIsModalOpen}\n          selectedId={selectedId}\n          qp={qp}\n          jobType={jobType}\n        />\n      )}\n    </>\n  );\n};\n\nTemplatesList.propTypes = {\n  templates: PropTypes.array,\n  isLoading: PropTypes.bool,\n  queryParams: PropTypes.object,\n  title: PropTypes.string,\n  qp: PropTypes.object,\n  jobType: PropTypes.string,\n};\n\nexport default TemplatesList;\n","import React, { useEffect } from 'react';\n\nimport LoadingState from '../../Components/ApiStatus/LoadingState';\nimport {\n  readClustersOptions,\n  readJobExplorer,\n  readEventExplorer,\n} from '../../Api/';\n\nimport { jobExplorer } from '../../Utilities/constants';\n\nimport { PageHeader } from '@ansible/ansible-ui-framework';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  Grid,\n  GridItem,\n  PageSection,\n} from '@patternfly/react-core';\n\nimport BarChart from '../../Charts/BarChart';\nimport LineChart from '../../Charts/LineChart';\nimport ModulesList from './ModulesList';\nimport TemplatesList from './TemplatesList';\nimport FilterableToolbar from '../../Components/Toolbar';\nimport ApiErrorState from '../../Components/ApiStatus/ApiErrorState';\n\nimport { clusters } from '../../Utilities/constants';\nimport useRequest from '../../Utilities/useRequest';\nimport { useQueryParams } from '../../QueryParams/';\n\nconst initialTopTemplateParams = {\n  group_by: 'template',\n  limit: 10,\n  job_type: ['job'],\n  group_by_time: false,\n  status: ['successful', 'failed'],\n};\n\nconst initialTopWorkflowParams = {\n  group_by: 'template',\n  limit: 10,\n  job_type: ['workflowjob'],\n  group_by_time: false,\n  status: ['successful', 'failed'],\n};\n\nconst initialModuleParams = {\n  group_by: 'module',\n  sort_options: 'host_task_count',\n  sort_oder: 'desc',\n  limit: 10,\n};\n\nconst initialOptionsParams = {\n  attributes: jobExplorer.attributes,\n};\n\nconst Clusters = () => {\n  // params from toolbar/searchbar\n  const optionsQueryParams = useQueryParams(initialOptionsParams);\n  const { queryParams, setFromToolbar } = useQueryParams(\n    clusters.defaultParams\n  );\n  const {\n    result: options,\n    error,\n    request: fetchOptions,\n  } = useRequest(readClustersOptions, {});\n\n  const {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n  } = queryParams;\n\n  const topTemplatesParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialTopTemplateParams,\n  };\n\n  const topWorkflowParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialTopWorkflowParams,\n  };\n\n  const topModuleParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialModuleParams,\n  };\n\n  const {\n    result: { items: chartData },\n    isLoading: chartDataIsLoading,\n    isSuccess: chartDataIsSuccess,\n    request: fetchChartData,\n  } = useRequest(readJobExplorer, { items: [] });\n\n  const {\n    result: { items: modules },\n    isLoading: modulesIsLoading,\n    request: fetchModules,\n  } = useRequest(readEventExplorer, { items: [] });\n\n  const {\n    result: { items: templates },\n    isLoading: templatesIsLoading,\n    request: fetchTemplates,\n  } = useRequest(readJobExplorer, { items: [] });\n\n  const {\n    result: { items: workflows },\n    isLoading: workflowsIsLoading,\n    request: fetchWorkflows,\n  } = useRequest(readJobExplorer, { items: [] });\n\n  useEffect(() => {\n    fetchOptions(optionsQueryParams);\n    fetchChartData(queryParams);\n    fetchModules(topModuleParams);\n    fetchTemplates(topTemplatesParams);\n    fetchWorkflows(topWorkflowParams);\n  }, [queryParams]);\n\n  if (error) return <ApiErrorState message={error.error.error} />;\n\n  const renderContent = () => {\n    // Warning: we are not checking if ALL the api succeed\n    // this can cause an unsurfaced error when only some of them fails\n    return (\n      <Grid hasGutter>\n        <GridItem span={12}>\n          <Card>\n            <CardTitle data-cy={'card-title-job-status'}>\n              <h2>Job status</h2>\n            </CardTitle>\n            <CardBody>\n              {chartDataIsLoading && <LoadingState />}\n              {(!queryParams.cluster_id ||\n                queryParams.cluster_id?.length <= 0) &&\n                chartDataIsSuccess && (\n                  <BarChart\n                    margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                    id=\"d3-bar-chart-root\"\n                    data={chartData}\n                    queryParams={queryParams}\n                  />\n                )}\n              {queryParams.cluster_id?.length > 0 && chartDataIsSuccess && (\n                <LineChart\n                  margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                  id=\"d3-line-chart-root\"\n                  data={chartData}\n                  queryParams={queryParams}\n                />\n              )}\n            </CardBody>\n          </Card>\n        </GridItem>\n        <GridItem span={4}>\n          <TemplatesList\n            qp={queryParams}\n            templates={workflows}\n            isLoading={workflowsIsLoading}\n            title={'Top workflows'}\n            jobType={'workflowjob'}\n          />\n        </GridItem>\n        <GridItem span={4}>\n          <TemplatesList\n            qp={queryParams}\n            templates={templates}\n            isLoading={templatesIsLoading}\n            title={'Top templates'}\n            jobType={'job'}\n          />\n        </GridItem>\n        <GridItem span={4} data-cy={'top-modules-header'}>\n          <ModulesList modules={modules} isLoading={modulesIsLoading} />\n        </GridItem>\n      </Grid>\n    );\n  };\n\n  return (\n    <div data-cy={'header-clusters'}>\n      <PageHeader data-cy={'header-clusters'} title={'Clusters'} />\n      <FilterableToolbar\n        categories={options}\n        filters={queryParams}\n        setFilters={setFromToolbar}\n      />\n      <PageSection>{renderContent()}</PageSection>\n    </div>\n  );\n};\n\nexport default Clusters;\n","import React from 'react';\nimport { Title, EmptyState, EmptyStateVariant, EmptyStateIcon, EmptyStateBody, } from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\nvar LoadingState = function () { return (React.createElement(EmptyState, { variant: EmptyStateVariant.full, style: { minHeight: '400px' } },\n    React.createElement(EmptyStateIcon, { icon: CubesIcon }),\n    React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, \"Loading...\"),\n    React.createElement(EmptyStateBody, null, \"Please wait.\"))); };\nexport default LoadingState;\n","import React from 'react';\nimport { Title, EmptyState, EmptyStateVariant, EmptyStateIcon, EmptyStateBody, } from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\nvar NoData = function (_a) {\n    var title = _a.title, subtext = _a.subtext;\n    return (React.createElement(EmptyState, { variant: EmptyStateVariant.full, style: { minHeight: '400px' } },\n        React.createElement(EmptyStateIcon, { icon: CubesIcon }),\n        React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, title ? title : 'No Data'),\n        subtext && React.createElement(EmptyStateBody, null, subtext)));\n};\nexport default NoData;\n","import React from 'react';\nimport { Title, EmptyState, EmptyStateVariant, EmptyStateIcon, EmptyStateBody, } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\nvar NoResults = function () {\n    return (React.createElement(EmptyState, { variant: EmptyStateVariant.full },\n        React.createElement(EmptyStateIcon, { icon: SearchIcon }),\n        React.createElement(Title, { size: \"lg\", headingLevel: \"h4\" }, \"No results found\"),\n        React.createElement(EmptyStateBody, null, \"No results match the filter criteria. Remove all filters or clear all filters to show results.\")));\n};\nexport default NoResults;\n","import React from 'react';\nimport { Label } from '@patternfly/react-core';\nimport { CheckCircleIcon, ExclamationCircleIcon, ClockIcon, SyncAltIcon, ExclamationTriangleIcon, } from '@patternfly/react-icons';\nimport { capitalize } from '../Utilities/helpers';\nvar JobStatus = function (_a) {\n    var status = _a.status;\n    var getColor = function () {\n        switch (status) {\n            case 'successful':\n                return 'green';\n            case 'failed':\n            case 'error':\n                return 'red';\n            case 'running':\n            case 'pending':\n                return 'blue';\n            case 'canceled':\n                return 'orange';\n            // case new, waiting\n            default:\n                return 'grey';\n        }\n    };\n    var getIcon = function () {\n        switch (status) {\n            case 'successful':\n                return React.createElement(CheckCircleIcon, null);\n            case 'failed':\n            case 'error':\n                return React.createElement(ExclamationCircleIcon, null);\n            case 'running':\n                return React.createElement(SyncAltIcon, null);\n            case 'canceled':\n                return React.createElement(ExclamationTriangleIcon, null);\n            // case new, waiting, pending\n            default:\n                return React.createElement(ClockIcon, null);\n        }\n    };\n    return (React.createElement(Label, { variant: \"outline\", color: getColor(), icon: getIcon(), style: { marginRight: '0.5rem', marginBottom: '0.5rem' } }, capitalize(status)));\n};\nexport default JobStatus;\n"],"names":["initializeChart","Chart","BaseChart","props","id","margin","navigate","useNavigate","getWidth","parseInt","d3","style","left","right","getHeight","top","bottom","propTypes","PropTypes","BarContainer","styled","Bar","LabelsContainer","Label","Square","title","str","toUpperCase","slice","toLowerCase","Breakdown","categoryCount","categoryColor","showPercent","totalCount","Object","values","reduce","accumulated","currentVal","sortedCategories","keys","filter","category","sort","a","b","map","name","barSpacing","color","remainingSpace","length","idx","key","backgroundColor","width","Math","round","Tooltip","opts","d","success","fail","total","x","svg","node","getBoundingClientRect","y","formatTooltipDate","toolTipWidth","toolTipBase","chartWidth","flipped","RAN","FAIL","TOTAL","date","text","DATE","data","jobs","jobsWidth","getComputedTextLength","failed","successful","successTextWidth","failTextWidth","adjustedWidth","maxTextPerc","boxWidth","overage","boundingBox","attr","toolTipPoint","circleSuccess","circleFail","failedIcon","successIcon","successText","failText","clickMore","interrupt","transition","delay","this","colors","draw","append","textWidthThreshold","BarChart","bind","init","resize","navigateToJobExplorer","state","formattedData","timeout","formattedDate","formatDate","initialQueryParams","DEFAULT_NAMESPACE","jobExplorer","start_date","end_date","quick_date_range","status","template_id","queryParams","org_id","job_type","createUrl","Paths","clearTimeout","setState","setTimeout","remove","ticks","parseTime","formatted","created_date","successful_count","failed_count","Date","concat","height","rangeRound","padding","range","barTooltip","layers","order","offset","stack","domain","call","tickSize","selectAll","maxTicks","i","undefined","item","tickValues","tickFormat","layer","enter","_d","bandwidth","duration","ease","on","handleMouseOver","handleMouseOut","window","addEventListener","prevProps","removeEventListener","Component","LineChart","updateCluster","cluster_id","tweenDash","l","getTotalLength","t","path","attrTween","tooltip","unformattedData","successLine","curve","failLine","defined","isNaN","vertical","handleMouseMove","intersectX","cx","baseVal","value","DataListCell","PFDataListCell","DataListItem","PFDataListItem","DataCellEnd","ModulesList","modules","isLoading","DataList","maxHeight","overflow","background","border","LoadingState","NoData","module","index","host_task_count","trimStr","ActionContainer","formatTopFailedTask","percentage","ceil","total_failed_count","task_name","formatSuccessRate","successCount","ModalContents","selectedId","isOpen","handleModal","qp","jobType","relatedTemplateJobsParams","attributes","group_by_time","limit","sort_options","sort_oder","agreggateTemplateParams","group_by","useRequest","readJobExplorer","stats","result","fetchStats","request","statsApi","relatedJobs","fetchJobs","jobsApi","useEffect","elapsed","statsData","isSuccess","items","cancelled","canceled_count","error","error_count","new","new_count","pending","pending_count","running","running_count","waiting","waiting_count","global_palette_green_200","global_palette_black_850","global_palette_orange_300","global_palette_red_100","global_palette_cyan_200","global_palette_purple_300","global_palette_blue_300","global_palette_light_green_200","descriptionStats","label","total_count","formatTotalTime","toISOString","substr","formatJobType","most_failed_tasks","cleanup","Modal","variant","ModalVariant","onClose","ApiErrorState","message","NoResults","DescriptionList","isHorizontal","columnModifier","lg","DescriptionListGroup","className","DescriptionListTerm","DescriptionListDescription","Divider","component","marginTop","marginBottom","TableComposable","Thead","Tr","heading","Th","Tbody","job","Td","template_name","JobStatus","cluster_name","formatDateTime","finished","Button","onClick","TemplatesList","templates","useState","setSelectedId","isModalOpen","setIsModalOpen","displayJobType","type","initialTopTemplateParams","initialTopWorkflowParams","initialModuleParams","initialOptionsParams","optionsQueryParams","useQueryParams","clusters","setFromToolbar","readClustersOptions","options","fetchOptions","topTemplatesParams","topWorkflowParams","topModuleParams","chartData","chartDataIsLoading","chartDataIsSuccess","fetchChartData","readEventExplorer","modulesIsLoading","fetchModules","templatesIsLoading","fetchTemplates","workflows","workflowsIsLoading","fetchWorkflows","PageHeader","categories","filters","setFilters","PageSection","Grid","hasGutter","GridItem","span","Card","CardTitle","CardBody","EmptyState","EmptyStateVariant","minHeight","EmptyStateIcon","icon","Title","headingLevel","size","EmptyStateBody","_a","subtext","getColor","getIcon","marginRight"],"sourceRoot":""}