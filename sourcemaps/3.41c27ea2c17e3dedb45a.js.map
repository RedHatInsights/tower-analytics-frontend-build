{"version":3,"sources":["webpack:///./src/Containers/SavingsPlanner/Shared/constants.js","webpack:///./src/Containers/SavingsPlanner/Shared/usePlanData.js","webpack:///./src/Components/AlertModal/AlertModal.js","webpack:///./src/Components/ErrorDetail/ErrorDetail.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/Steps/Details/index.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/Steps/Tasks/index.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/Steps/Templates/index.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/index.js","webpack:///./src/Containers/SavingsPlanner/Add/index.js","webpack:///./src/Components/CardActionsRow.js","webpack:///./src/Utilities/getRelatedResourceDeleteDetails.js","webpack:///./src/Components/DeleteButton/DeleteButton.js","webpack:///./src/Components/RoutedTabs.js","webpack:///./src/Containers/SavingsPlanner/Details/DetailsTab/index.js","webpack:///./src/Utilities/hoursFormatter.ts","webpack:///./src/Containers/SavingsPlanner/Details/StatisticsTab/TotalSavings/index.tsx","webpack:///./src/Containers/SavingsPlanner/Details/StatisticsTab/FormulaDescription/index.tsx","webpack:///./src/Containers/SavingsPlanner/Details/StatisticsTab/index.tsx","webpack:///./src/Containers/SavingsPlanner/Edit/index.js","webpack:///./src/Containers/SavingsPlanner/Details/index.js","webpack:///./src/Containers/SavingsPlanner/Details/Details.js","webpack:///./src/Components/EmptyList.js","webpack:///./src/Containers/SavingsPlanner/List/ListItem/index.js","webpack:///./src/Components/Toolbar/ToolbarDeleteButton.js","webpack:///./src/Containers/SavingsPlanner/List/List.js","webpack:///./src/Utilities/useSelected.js","webpack:///./src/Containers/SavingsPlanner/index.tsx"],"names":["actions","convertTasks","tasks","length","sort","a","b","task_order","map","task","ExclamationCircleIcon","styled","PFExclamationCircleIcon","TimesCircleIcon","PFTimesCircleIcon","InfoCircleIcon","PFInfoCircleIcon","CheckCircleIcon","PFCheckCircleIcon","ExclamationTriangleIcon","PFExclamationTriangleIcon","Header","AlertModal","isOpen","title","label","variant","children","props","variantIcons","danger","size","error","info","success","warning","customHeader","Title","id","headingLevel","Modal","header","aria-label","aria-labelledby","propTypes","PropTypes","Card","PFCard","CardBody","PFCardBody","Expandable","PFExpandable","ErrorDetail","useState","isExpanded","setIsExpanded","Array","isArray","toggleText","onToggle","m","key","Details","options","formData","dispatch","name","category","description","manual_time","hosts","frequency_period","categoryIsOpen","setCategoryIsOpen","manualTimeIsOpen","setManualTimeIsOpen","frequencyPeriodIsOpen","setFrequencyPeriodIsOpen","Form","Grid","hasGutter","md","FormGroup","isRequired","fieldId","TextInput","placeholder","type","value","onChange","newName","Select","maxHeight","onSelect","_event","selection","selections","data","SelectOption","newDescription","placeholderText","NumberInput","inputAriaLabel","widthChars","event","isPositiveNum","target","parseInt","onMinus","onPlus","min","TaskSection","TaskTitle","TaskDeleteButton","Button","DeleteTaskActionSection","DataListAction","TaskRow","DataListItemRow","Tasks","setTasks","val","taskToAdd","setTaskToAdd","liveText","setLiveText","setId","appendTask","trimmedTask","trim","InputGroup","newTaskName","onKeyDown","e","preventDefault","onClick","isDisabled","DataList","isCompact","onDragFinish","newItemOrder","split","slice","join","onDragStart","newId","onDragMove","oldIndex","newIndex","onDragCancel","itemOrder","idx","index","DataListItem","DataListControl","DataListDragButton","aria-describedby","aria-pressed","DataListItemCells","dataListCells","DataListCell","filter","t","removeTask","className","aria-live","ListFooter","initialQueryParams","group_by","limit","group_by_time","offset","sort_options","sort_order","sort_by","qsConfig","getQSConfig","Templates","template_id","formDispatch","useLocation","pathname","hash","search","history","useHistory","useQueryParams","queryParams","setFromPagination","setFromToolbar","queryParamsDispatch","useRequest","useCallback","readJobExplorerOptions","result","isSuccess","fetchOptions","request","readJobExplorer","response","templates","items","count","meta","templatesIsLoading","isLoading","templatesIsSuccess","fetchEndpoints","sortParams","sortBy","direction","onSort","_ev","_idx","dir","useEffect","insights","chrome","appNavClick","secondaryNav","initialSearchParams","parse","arrayFormat","parseBooleans","parseNumbers","replace","stringify","hideQuickDateRange","hideSortOptions","categories","filters","setFilters","pagination","Pagination","params","setPagination","ApiErrorState","message","LoadingState","NoResults","TableComposable","Thead","Tr","Th","Tbody","Td","data-testid","select","rowIndex","isSelected","PaginationVariant","startStep","setStartStep","requestPayload","updatePlan","createPlan","apiResponse","setData","initial","useReducer","state","Error","hourly_rate","frequency_per_period","usePlanData","steps","step_number","component","nextButtonText","CustomFooter","WizardFooter","WizardContextConsumer","activeStep","onNext","onBack","onClose","Tooltip","content","position","onSave","indexOf","find","step","onStepChange","newStep","plan_created","Redirect","to","Paths","reload","Wizard","navAriaLabel","mainAriaLabel","onGoToStep","location","push","footer","startAtStep","height","detail","defaultProps","readPlanOptions","fetchPlanOptions","canWrite","rbac","perms","write","all","PageHeader","Breadcrumbs","navigate","PageHeaderTitle","Main","CardActionsWrapper","CardActionsRow","CardActions","getRelatedResourceDeleteCounts","requests","results","hasCount","Promise","WarningMessage","Alert","Label","DeleteButton","onConfirm","modalTitle","ouiaId","deleteMessage","deleteDetailsRequests","disabledTooltip","setIsOpen","deleteMessageError","setDeleteMessageError","deleteDetails","setDeleteDetails","setIsLoading","toggleModal","isModalOpen","spinnerAriaValueText","undefined","Object","values","isInline","entries","Badge","RoutedTabs","tabsArray","defaultTabId","Tabs","activeKey","tab","link","getActiveTabId","_","eventKey","match","Tab","TabTitleText","role","arrayOf","shape","number","string","oneOfType","node","Divider","PFDivider","DetailsTab","plan","automation_status","modified","template_details","renderOptionsBasedValue","labelsAndValues","Name","Description","Frequency","Template","templateId","jobExplorer","redirectToJobExplorer","showTemplate","status","JobStatus","color","icon","formatDateTime","deletePlan","deletePlans","deleteError","useDismissableError","dismissError","style","padding","DescriptionList","isHorizontal","columnModifier","lg","keys","i","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","List","ListItem","CardFooter","n","toFixed","toLocaleString","TotalSavings","_a","_b","_c","isMoney","isPlain","CardTitle","paddingBottom","currencyFormatter","CostsText","CodeBlock","CodeBlockCode","SavingsText","ModalVariant","ButtonVariant","__assign","assign","s","arguments","p","prototype","hasOwnProperty","call","apply","this","yearLabels","year1","year2","year3","constants","cost","benefit","net","StatisticsTab","d","setIsMoney","barChartData","charts","kind","parent","domainPadding","x","bottom","left","themeColor","tooltip","cursor","stickToAxis","mouseFollow","legendTooltip","legendData","childName","symbol","fill","titleProperyForLegend","customFnc","datum","y","xAxis","yAxis","tickFormat","grid","stroke","axisLabel","barRatio","barWidth","width","labelName","strokeWidth","functions","fetchFnc","resolve","year","total_costs","projections","monetary_stats","total_benefits","cumulative_net_benefits","total_hours_spent_risk_adjusted","time_stats","total_hours_saved","cumulative_time_net_benefits","response_type","GridItem","span","CardHeader","ToggleGroup","ToggleGroupItem","text","buttonId","schema","Edit","useParams","pageTitle","readPlan","planIsSuccess","listen","includes","savingsPaths","breadcrumbsItems","Switch","Route","exact","path","EmptyList","canAdd","EmptyState","EmptyStateIcon","AddCircleOIcon","SearchIcon","EmptyStateBody","PFCardTitle","CardLabel","Small","Checkbox","PFCheckbox","CardDetail","template","selected","handleSelect","projectedSavings","isCardKebabOpen","setIsCardKebabOpen","useRouteMatch","kebabDropDownItems","DropdownItem","url","CardHeaderMain","Link","Dropdown","toggle","KebabToggle","dropdownItems","isChecked","some","row","requiredField","username","image","ToolbarDeleteButton","itemsUnableToDelete","itemsToDelete","pluralizedItemName","onDelete","errorMessage","cannotDelete","item","setIsModalOpen","Boolean","warningMessage","PageContainer","Footer","FlexMain","savingsPlanner","readPlans","total_count","itemsIsLoading","itemsIsSuccess","combinedOptions","list","setSelected","isAllSelected","prevState","useSelected","useDeleteItems","deleteLoading","deletionError","deleteItems","clearDeletionError","handleDelete","additionalControls","Gallery","minWidths","sm","xl","get","add","edit","getEdit","details","getDetails"],"mappings":"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","file":"js/3.6990a892784fa86921cf.js","sourcesContent":["export const actions = {\n  SET_NAME: 'SET_NAME',\n  SET_CATEGORY: 'SET_CATEGORY',\n  SET_DESCRIPTION: 'SET_DESCRIPTION',\n  SET_MANUAL_TIME: 'SET_MANUAL_TIME',\n  SET_HOSTS: 'SET_HOSTS',\n  SET_FREQUENCY_PERIOD: 'SET_FREQUENCY_PERIOD',\n  SET_TASKS: 'SET_TASKS',\n  SET_TEMPLATE_ID: 'SET_TEMPLATE_ID',\n};\n","import { useReducer } from 'react';\n\nimport { actions } from './constants';\n\nconst formatPayload = (data) => {\n  data.tasks = data.tasks.map((task, index) => ({\n    task,\n    task_order: index + 1,\n  }));\n\n  if (!data.hosts || data.hosts === '') {\n    data.hosts = 1;\n  }\n\n  // these two are fields the api expects but we don't\n  // have form elements for in the MVP.\n  data.hourly_rate = 50;\n  data.frequency_per_period = 1;\n\n  return data;\n};\n\nconst convertTasks = (tasks = []) => {\n  if (tasks?.length) {\n    return tasks\n      .sort((a, b) => a.task_order - b.task_order)\n      .map(({ task }) => task);\n  }\n  return undefined;\n};\n\nconst usePlanData = (initial) => {\n  const formReducer = (state, { type, value }) => {\n    switch (type) {\n      /* v1 api reducers */\n      case actions.SET_NAME:\n        return {\n          ...state,\n          name: value,\n        };\n      case actions.SET_CATEGORY:\n        return {\n          ...state,\n          category: value,\n        };\n      case actions.SET_DESCRIPTION:\n        return {\n          ...state,\n          description: value,\n        };\n      case actions.SET_MANUAL_TIME:\n        return {\n          ...state,\n          manual_time: value,\n        };\n\n      case actions.SET_HOSTS:\n        return {\n          ...state,\n          hosts: value,\n        };\n      case actions.SET_FREQUENCY_PERIOD:\n        return {\n          ...state,\n          frequency_period: value,\n        };\n      case actions.SET_TASKS:\n        return {\n          ...state,\n          tasks: value,\n        };\n      case actions.SET_TEMPLATE_ID:\n        return {\n          ...state,\n          template_id: value,\n        };\n      default:\n        throw new Error(\n          `usePlanData reducer action type ${type} was not found.`\n        );\n    }\n  };\n\n  const [formData, dispatch] = useReducer(formReducer, {\n    name: initial?.name || '',\n    category: initial?.category || 'system',\n    description: initial?.description || '',\n    manual_time: initial?.manual_time || 240,\n    hosts: initial?.hosts || 1,\n    frequency_period: initial?.frequency_period || 'weekly',\n    tasks: convertTasks(initial?.tasks) || [],\n    template_id: initial?.template_id || -2,\n  });\n\n  return {\n    formData,\n    requestPayload: formatPayload({ ...formData }),\n    dispatch,\n  };\n};\n\nexport default usePlanData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Modal, Title } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon as PFCheckCircleIcon,\n  ExclamationCircleIcon as PFExclamationCircleIcon,\n  ExclamationTriangleIcon as PFExclamationTriangleIcon,\n  InfoCircleIcon as PFInfoCircleIcon,\n  TimesCircleIcon as PFTimesCircleIcon,\n} from '@patternfly/react-icons';\nimport styled from 'styled-components';\n\nconst ExclamationCircleIcon = styled(PFExclamationCircleIcon)`\n  color: var(--pf-global--danger-color--100);\n`;\n\nconst TimesCircleIcon = styled(PFTimesCircleIcon)`\n  color: var(--pf-global--danger-color--100);\n`;\n\nconst InfoCircleIcon = styled(PFInfoCircleIcon)`\n  color: var(--pf-global--info-color--100);\n`;\n\nconst CheckCircleIcon = styled(PFCheckCircleIcon)`\n  color: var(--pf-global--success-color--100);\n`;\n\nconst ExclamationTriangleIcon = styled(PFExclamationTriangleIcon)`\n  color: var(--pf-global--warning-color--100);\n`;\n\nconst Header = styled.div`\n  display: flex;\n  svg {\n    margin-right: 16px;\n  }\n`;\n\nconst AlertModal = ({\n  isOpen,\n  title,\n  label = 'Alert modal',\n  variant = 'warning',\n  children,\n  ...props\n}) => {\n  const variantIcons = {\n    danger: <ExclamationCircleIcon size=\"lg\" />,\n    error: <TimesCircleIcon size=\"lg\" />,\n    info: <InfoCircleIcon size=\"lg\" />,\n    success: <CheckCircleIcon size=\"lg\" />,\n    warning: <ExclamationTriangleIcon size=\"lg\" />,\n  };\n\n  const customHeader = (\n    <Header>\n      {variant ? variantIcons[variant] : null}\n      <Title id=\"alert-modal-header-label\" size=\"2xl\" headingLevel=\"h2\">\n        {title}\n      </Title>\n    </Header>\n  );\n\n  return (\n    <Modal\n      header={customHeader}\n      aria-label={label}\n      aria-labelledby=\"alert-modal-header-label\"\n      isOpen={!!isOpen}\n      variant=\"small\"\n      title={title}\n      {...props}\n    >\n      {children}\n    </Modal>\n  );\n};\n\nAlertModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  variant: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default AlertModal;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Card as PFCard,\n  CardBody as PFCardBody,\n  ExpandableSection as PFExpandable,\n} from '@patternfly/react-core';\n\nconst Card = styled(PFCard)`\n  background-color: var(--pf-global--BackgroundColor--200);\n  overflow-wrap: break-word;\n`;\n\nconst CardBody = styled(PFCardBody)`\n  max-height: 200px;\n  overflow: scroll;\n`;\n\nconst Expandable = styled(PFExpandable)`\n  text-align: left;\n\n  & .pf-c-expandable__toggle {\n    padding-left: 10px;\n    margin-left: 5px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n`;\n\nfunction ErrorDetail({ error }) {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const handleToggle = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  return (\n    <>\n      {Array.isArray(error) && error.length && (\n        <Expandable\n          toggleText={'Details'}\n          onToggle={handleToggle}\n          isExpanded={isExpanded}\n        >\n          <Card>\n            <CardBody>\n              <ul>\n                {error.map((m) =>\n                  typeof m === 'string' ? <li key={m}>{m}</li> : null\n                )}\n              </ul>\n            </CardBody>\n          </Card>\n        </Expandable>\n      )}\n    </>\n  );\n}\n\nErrorDetail.propTypes = {\n  error: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default ErrorDetail;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Form,\n  FormGroup,\n  Grid,\n  Select,\n  SelectOption,\n  TextInput,\n  NumberInput,\n} from '@patternfly/react-core';\n\nimport { actions } from '../../../constants';\n\nimport { isPositiveNum } from '../../../../../../Utilities/helpers';\n\nconst Details = ({ options, formData, dispatch }) => {\n  const { name, category, description, manual_time, hosts, frequency_period } =\n    formData;\n\n  const [categoryIsOpen, setCategoryIsOpen] = useState(false);\n  const [manualTimeIsOpen, setManualTimeIsOpen] = useState(false);\n  const [frequencyPeriodIsOpen, setFrequencyPeriodIsOpen] = useState(false);\n\n  return (\n    <Form>\n      {options && (\n        <Grid hasGutter md={6}>\n          <FormGroup\n            label=\"What do you want to automate?\"\n            isRequired\n            fieldId=\"name-field\"\n          >\n            <TextInput\n              isRequired\n              placeholder=\"Example: Provision NGINX server\"\n              type=\"text\"\n              id=\"name-field\"\n              name=\"name\"\n              value={name}\n              onChange={(newName) =>\n                dispatch({\n                  type: actions.SET_NAME,\n                  value: newName,\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup label=\"What type of task is it?\" fieldId=\"category-field\">\n            <Select\n              id=\"category-field\"\n              isOpen={categoryIsOpen}\n              variant={'single'}\n              aria-label={'Plan category selector'}\n              maxHeight={390}\n              onToggle={() => setCategoryIsOpen(!categoryIsOpen)}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_CATEGORY,\n                  value: selection,\n                });\n                setCategoryIsOpen(false);\n              }}\n              selections={category}\n            >\n              {(options.data?.category || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n          <FormGroup\n            label=\"Enter a description of your automation plan\"\n            fieldId=\"description-field\"\n          >\n            <TextInput\n              type=\"text\"\n              placeholder=\"Place description here\"\n              id=\"description-field\"\n              name=\"description\"\n              value={description}\n              onChange={(newDescription) =>\n                dispatch({\n                  type: actions.SET_DESCRIPTION,\n                  value: newDescription,\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"How long does it take to do this manually?\"\n            fieldId=\"manual-time-field\"\n          >\n            <Select\n              id=\"manual-time-field\"\n              isOpen={manualTimeIsOpen}\n              variant={'single'}\n              placeholderText=\"Select amount\"\n              aria-label={'Plan time selector'}\n              onToggle={() => setManualTimeIsOpen(!manualTimeIsOpen)}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_MANUAL_TIME,\n                  value: selection,\n                });\n                setManualTimeIsOpen(false);\n              }}\n              selections={manual_time}\n            >\n              {(options.data?.manual_time || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n          <FormGroup\n            label=\"How many hosts do you plan to run this on?\"\n            fieldId=\"hosts-field\"\n          >\n            <NumberInput\n              inputAriaLabel=\"Number of hosts\"\n              widthChars={8}\n              onChange={(event) => {\n                if (\n                  isPositiveNum(event.target.value) ||\n                  event.target.value.length === 0\n                ) {\n                  dispatch({\n                    type: actions.SET_HOSTS,\n                    value: parseInt(event.target.value),\n                  });\n                }\n              }}\n              onMinus={() =>\n                dispatch({\n                  type: actions.SET_HOSTS,\n                  value: isPositiveNum(hosts) ? hosts - 1 : 0,\n                })\n              }\n              onPlus={() =>\n                dispatch({\n                  type: actions.SET_HOSTS,\n                  value: isPositiveNum(hosts) ? hosts + 1 : 1,\n                })\n              }\n              id=\"hosts-field\"\n              name=\"hosts\"\n              value={hosts}\n              min={0}\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"How often do you do this?\"\n            fieldId=\"frequency-period-field\"\n          >\n            <Select\n              id=\"frequency-period-field\"\n              isOpen={frequencyPeriodIsOpen}\n              variant={'single'}\n              placeholderText=\"Select frequency period\"\n              aria-label={'Plan frequency period selector'}\n              onToggle={() => {\n                setFrequencyPeriodIsOpen(!frequencyPeriodIsOpen);\n              }}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_FREQUENCY_PERIOD,\n                  value: selection,\n                });\n                setFrequencyPeriodIsOpen(false);\n              }}\n              selections={frequency_period}\n            >\n              {(options.data?.frequency_period || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n        </Grid>\n      )}\n    </Form>\n  );\n};\n\nDetails.propTypes = {\n  options: PropTypes.object.isRequired,\n  formData: PropTypes.object.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Details;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  DataList,\n  DataListAction,\n  DataListItem,\n  DataListCell,\n  DataListItemRow,\n  DataListControl,\n  DataListDragButton,\n  DataListItemCells,\n  Form,\n  FormGroup,\n  Grid,\n  InputGroup,\n  TextInput,\n  Title,\n} from '@patternfly/react-core';\nimport { PlusIcon, TimesIcon } from '@patternfly/react-icons';\n\nimport { actions } from '../../../constants';\n\nconst TaskSection = styled.div`\n  margin-top: 20px;\n`;\n\nconst TaskTitle = styled(Title)`\n  margin-bottom: 10px;\n`;\n\nconst TaskDeleteButton = styled(Button)`\n  padding: 0 16px;\n`;\n\nconst DeleteTaskActionSection = styled(DataListAction)`\n  padding: 6px 0;\n`;\n\nconst TaskRow = styled(DataListItemRow)`\n  align-items: center;\n`;\n\nconst Tasks = ({ tasks, dispatch }) => {\n  const setTasks = (val) => {\n    dispatch({ type: actions.SET_TASKS, value: val });\n  };\n\n  const [taskToAdd, setTaskToAdd] = useState('');\n\n  const [liveText, setLiveText] = useState('');\n  const [id, setId] = useState('');\n\n  const onDragStart = (newId) => {\n    setId(newId);\n    setLiveText(`Dragging started for task ${newId}.`);\n  };\n\n  const onDragMove = (oldIndex, newIndex) => {\n    setLiveText(\n      `Dragging task ${id}.  Task ${oldIndex} is now task ${newIndex}.`\n    );\n  };\n\n  const onDragCancel = () => {\n    setLiveText('Dragging cancelled. Tasks list order is unchanged.');\n  };\n\n  const onDragFinish = (newItemOrder) => {\n    setLiveText('Dragging finished');\n    setTasks(newItemOrder.map((val) => val.split('-').slice(0, -1).join('-')));\n  };\n\n  const appendTask = () => {\n    const trimmedTask = taskToAdd.trim();\n    if (trimmedTask !== '') {\n      setTasks([...tasks, trimmedTask]);\n      setTaskToAdd('');\n    }\n  };\n\n  const handleTextKeyDown = (e) => {\n    if (e.key && e.key === 'Enter') {\n      e.preventDefault();\n      appendTask();\n    }\n  };\n\n  const removeTask = (index) => {\n    setTasks(tasks.filter((t, idx) => idx !== index));\n  };\n\n  return (\n    <>\n      <Form>\n        <Grid hasGutter md={6}>\n          <FormGroup\n            label=\"What tasks do you need to accomplish this plan?\"\n            fieldId=\"task-field\"\n          >\n            <InputGroup>\n              <TextInput\n                placeholder=\"Enter a description of each task\"\n                type=\"text\"\n                id=\"task-field\"\n                name=\"task\"\n                value={taskToAdd}\n                onChange={(newTaskName) => setTaskToAdd(newTaskName)}\n                onKeyDown={handleTextKeyDown}\n              />\n              <Button\n                onClick={appendTask}\n                isDisabled={taskToAdd.trim() === ''}\n                variant=\"control\"\n                aria-label=\"Add task\"\n              >\n                <PlusIcon />\n              </Button>\n            </InputGroup>\n          </FormGroup>\n        </Grid>\n      </Form>\n      {tasks.length > 0 && (\n        <TaskSection>\n          <TaskTitle headingLevel=\"h4\" size=\"xl\">\n            Tasks\n          </TaskTitle>\n          <DataList\n            aria-label=\"Draggable list to reorder and remove tasks.\"\n            isCompact\n            onDragFinish={onDragFinish}\n            onDragStart={onDragStart}\n            onDragMove={onDragMove}\n            onDragCancel={onDragCancel}\n            itemOrder={tasks.map((val, idx) => `${val}-${idx}`)}\n          >\n            {tasks.map((task, index) => (\n              <DataListItem\n                aria-labelledby={`cell-${index + 1}`}\n                id={`${task}-${index}`}\n                key={index + 1}\n              >\n                <TaskRow>\n                  <DataListControl>\n                    <DataListDragButton\n                      aria-label=\"Reorder\"\n                      aria-labelledby={`cell-${index + 1}`}\n                      aria-describedby=\"Press space or enter to begin dragging, and use the arrow keys to navigate up or down. Press enter to confirm the drag, or any other key to cancel the drag operation.\"\n                      aria-pressed=\"false\"\n                    />\n                  </DataListControl>\n                  <DataListItemCells\n                    dataListCells={[\n                      <DataListCell key={index + 1}>\n                        <span id={`cell-${index + 1}`}>{`${\n                          index + 1\n                        }. ${task}`}</span>\n                      </DataListCell>,\n                    ]}\n                  />\n                  <DeleteTaskActionSection aria-label=\"Actions\">\n                    <TaskDeleteButton\n                      onClick={() => removeTask(index)}\n                      variant=\"plain\"\n                      aria-label=\"Delete\"\n                    >\n                      <TimesIcon />\n                    </TaskDeleteButton>\n                  </DeleteTaskActionSection>\n                </TaskRow>\n              </DataListItem>\n            ))}\n          </DataList>\n        </TaskSection>\n      )}\n      <div className=\"pf-screen-reader\" aria-live=\"assertive\">\n        {liveText}\n      </div>\n    </>\n  );\n};\n\nTasks.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Tasks;\n","import React, { useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { parse, stringify } from 'query-string';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport {\n  Button,\n  Form,\n  FormGroup,\n  PaginationVariant,\n} from '@patternfly/react-core';\nimport {\n  TableComposable,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n} from '@patternfly/react-table';\n\nimport LoadingState from '../../../../../../Components/LoadingState';\nimport NoResults from '../../../../../../Components/NoResults';\nimport ApiErrorState from '../../../../../../Components/ApiErrorState';\nimport Pagination from '../../../../../../Components/Pagination';\n\nimport { useQueryParams } from '../../../../../../Utilities/useQueryParams';\nimport { getQSConfig } from '../../../../../../Utilities/qs';\n\nimport {\n  readJobExplorer,\n  readJobExplorerOptions,\n} from '../../../../../../Api/';\n\nimport FilterableToolbar from '../../../../../../Components/Toolbar/';\n\nimport { actions } from '../../../constants';\nimport useRequest from '../../../../../../Utilities/useRequest';\n\nconst ListFooter = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst initialQueryParams = {\n  group_by: 'template',\n  limit: 10,\n  group_by_time: false,\n  offset: 0,\n  sort_options: 'name',\n  sort_order: 'asc',\n  sort_by: 'name:asc',\n};\nconst qsConfig = getQSConfig('job-explorer', { ...initialQueryParams }, [\n  'limit',\n  'offset',\n]);\n\nconst Templates = ({ template_id, dispatch: formDispatch }) => {\n  const { pathname, hash, search } = useLocation();\n  const history = useHistory();\n  const {\n    queryParams,\n    setFromPagination,\n    setFromToolbar,\n    dispatch: queryParamsDispatch,\n  } = useQueryParams(qsConfig);\n\n  const {\n    result: options,\n    error,\n    isSuccess,\n    request: fetchOptions,\n  } = useRequest(\n    useCallback(() => readJobExplorerOptions(queryParams), [queryParams]),\n    {}\n  );\n\n  const {\n    result: { templates, count },\n    isLoading: templatesIsLoading,\n    isSuccess: templatesIsSuccess,\n    request: fetchEndpoints,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await readJobExplorer(queryParams);\n      return {\n        templates: response.items,\n        count: response.meta.count,\n      };\n    }, [queryParams]),\n    { templates: [], count: 0 }\n  );\n\n  const onSort = (_ev, _idx, dir) => {\n    queryParamsDispatch({\n      type: 'SET_SORT_ORDER',\n      value: { sort_order: dir },\n    });\n  };\n\n  const sortParams = {\n    sort: {\n      sortBy: {\n        direction: queryParams.sort_order,\n      },\n      onSort,\n    },\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'savings-planner', secondaryNav: true });\n  }, []);\n\n  const initialSearchParams = parse(search, {\n    arrayFormat: 'bracket',\n    parseBooleans: true,\n    parseNumbers: true,\n  });\n\n  useEffect(() => {\n    history.replace({\n      pathname,\n      hash,\n      search: stringify(\n        { ...initialQueryParams, ...initialSearchParams },\n        { arrayFormat: 'bracket' }\n      ),\n    });\n  }, []);\n\n  useEffect(() => {\n    fetchOptions();\n    fetchEndpoints();\n  }, [queryParams]);\n\n  return isSuccess ? (\n    <Form>\n      <FormGroup\n        label=\"Link a template to this plan:\"\n        fieldId=\"template-link-field\"\n      >\n        <FilterableToolbar\n          hideQuickDateRange\n          hideSortOptions\n          categories={options}\n          filters={queryParams}\n          qsConfig={qsConfig}\n          setFilters={setFromToolbar}\n          pagination={\n            <Pagination\n              count={count}\n              params={{\n                limit: queryParams.limit,\n                offset: queryParams.offset,\n              }}\n              qsConfig={qsConfig}\n              setPagination={setFromPagination}\n              isCompact\n            />\n          }\n        />\n        {error && <ApiErrorState message={error.error} />}\n        {templatesIsLoading && <LoadingState />}\n        {templatesIsSuccess && templates.length <= 0 && <NoResults />}\n        {templatesIsSuccess && templates.length > 0 && (\n          <TableComposable aria-label=\"Template link table\" variant=\"compact\">\n            <Thead>\n              <Tr>\n                <Th />\n                <Th {...sortParams}>Name</Th>\n              </Tr>\n            </Thead>\n            <Tbody>\n              {templates.map(({ id, name }) => (\n                <Tr key={`template-detail-${id}`}>\n                  <Td\n                    data-testid={`radio-${id}`}\n                    key={`template-detail-${id}-radio-td`}\n                    select={{\n                      rowIndex: id,\n                      onSelect: (event, isSelected, value) =>\n                        formDispatch({\n                          type: actions.SET_TEMPLATE_ID,\n                          value,\n                        }),\n                      isSelected: template_id === id,\n                      variant: 'radio',\n                    }}\n                  />\n                  <Td>{name}</Td>\n                </Tr>\n              ))}\n            </Tbody>\n          </TableComposable>\n        )}\n        <ListFooter>\n          <div>\n            {template_id !== -2 && (\n              <Button\n                key=\"clear-selection-button\"\n                variant=\"link\"\n                aria-label=\"Clear selection\"\n                onClick={() => {\n                  formDispatch({\n                    type: actions.SET_TEMPLATE_ID,\n                    value: -2,\n                  });\n                }}\n              >\n                Clear selection\n              </Button>\n            )}\n          </div>\n          <Pagination\n            count={count}\n            params={{\n              limit: queryParams.limit,\n              offset: queryParams.offset,\n            }}\n            qsConfig={qsConfig}\n            setPagination={setFromPagination}\n            variant={PaginationVariant.bottom}\n          />\n        </ListFooter>\n      </FormGroup>\n    </Form>\n  ) : null;\n};\n\nTemplates.propTypes = {\n  template_id: PropTypes.number.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Templates;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory, useLocation, Redirect } from 'react-router-dom';\n\nimport {\n  Button,\n  Tooltip,\n  Wizard,\n  WizardFooter,\n  WizardContextConsumer,\n} from '@patternfly/react-core';\n\nimport { Paths } from '../../../../paths';\nimport useRequest from '../../../../Utilities/useRequest';\nimport usePlanData from '../usePlanData';\n\nimport { createPlan, updatePlan } from '../../../../Api/';\n\nimport AlertModal from '../../../../Components/AlertModal/AlertModal';\nimport ErrorDetail from '../../../../Components/ErrorDetail/ErrorDetail';\n\nimport Details from './Steps/Details';\nimport Tasks from './Steps/Tasks';\nimport Templates from './Steps/Templates';\n\nconst Form = ({ title, options, data = {} }) => {\n  const history = useHistory();\n  const { hash, pathname } = useLocation();\n  const [startStep, setStartStep] = useState(null);\n\n  const {\n    result: apiResponse,\n    error,\n    request: setData,\n  } = useRequest(\n    useCallback((requestPayload, id) => {\n      if (requestPayload) {\n        return id ? updatePlan(id, requestPayload) : createPlan(requestPayload);\n      }\n\n      // TODO this should be a promise\n      return {};\n    }, []),\n    data\n  );\n\n  const { formData, requestPayload, dispatch } = usePlanData(data);\n\n  const steps = [\n    {\n      step_number: 1,\n      id: 'details',\n      name: 'Details',\n      component: (\n        <Details options={options} formData={formData} dispatch={dispatch} />\n      ),\n    },\n    {\n      step_number: 2,\n      id: 'tasks',\n      name: 'Tasks',\n      component: <Tasks tasks={formData.tasks} dispatch={dispatch} />,\n    },\n    {\n      step_number: 3,\n      id: 'link_template',\n      name: 'Link template',\n      component: (\n        <Templates template_id={formData.template_id} dispatch={dispatch} />\n      ),\n      nextButtonText: 'Save',\n    },\n  ];\n\n  const CustomFooter = (\n    <WizardFooter>\n      <WizardContextConsumer>\n        {({ activeStep, onNext, onBack, onClose }) => {\n          if (activeStep.step_number !== 3) {\n            return (\n              <>\n                <Button variant=\"primary\" type=\"submit\" onClick={onNext}>\n                  Next\n                </Button>\n                {activeStep.step_number !== 1 && (\n                  <Button variant=\"secondary\" onClick={onBack}>\n                    Back\n                  </Button>\n                )}\n                <Button variant=\"link\" onClick={onClose}>\n                  Cancel\n                </Button>\n              </>\n            );\n          }\n          // Final step buttons\n          return (\n            <>\n              <Tooltip\n                content={\n                  !formData.name || !formData.name === ''\n                    ? 'In order to save this plan, you must enter a name in the details step'\n                    : 'Save this plan'\n                }\n                position=\"top\"\n              >\n                <div>\n                  <Button\n                    variant=\"primary\"\n                    type=\"submit\"\n                    onClick={onSave}\n                    isDisabled={!formData.name || !formData.name === ''}\n                  >\n                    Save\n                  </Button>\n                </div>\n              </Tooltip>\n              <Button variant=\"secondary\" onClick={onBack}>\n                Back\n              </Button>\n              <Button variant=\"link\" onClick={onClose}>\n                Cancel\n              </Button>\n            </>\n          );\n        }}\n      </WizardContextConsumer>\n    </WizardFooter>\n  );\n\n  useEffect(() => {\n    if (pathname.indexOf('/add') === -1 && hash) {\n      setStartStep(steps.find((step) => `#${step.id}` === hash).step_number);\n    } else {\n      history.replace({\n        hash: 'details',\n      });\n      setStartStep(1);\n    }\n  }, []);\n\n  const onStepChange = (newStep) => {\n    history.replace({\n      hash: newStep.id,\n    });\n  };\n\n  const onSave = () => {\n    setData(requestPayload, data?.id);\n  };\n\n  const onClose = () => {\n    if (location.pathname.indexOf('/edit') !== -1) {\n      history.push({\n        pathname: `${Paths.savingsPlanner}/${data?.id}`,\n      });\n    } else {\n      history.push({\n        pathname: Paths.savingsPlanner,\n      });\n    }\n  };\n\n  const reset = () => {\n    setData();\n  };\n\n  return (\n    <>\n      {!error && apiResponse?.plan_created && (\n        <Redirect\n          to={{\n            pathname: `${Paths.savingsPlanner}/${\n              apiResponse.id || apiResponse.plan_created.id\n            }`,\n            state: { reload: true },\n          }}\n        />\n      )}\n      {startStep && (\n        <Wizard\n          navAriaLabel={`${title} steps`}\n          mainAriaLabel={`${title} content`}\n          steps={steps}\n          onGoToStep={onStepChange}\n          onNext={onStepChange}\n          onBack={onStepChange}\n          onSave={onSave}\n          onClose={onClose}\n          footer={CustomFooter}\n          startAtStep={startStep}\n          height=\"calc(100vh - 240px)\"\n        />\n      )}\n      {error && (\n        <AlertModal\n          isOpen={!!error}\n          onClose={() => reset()}\n          title={'Error'}\n          variant=\"error\"\n        >\n          {'There was an error saving the plan.'}\n          <ErrorDetail error={error.detail} />\n        </AlertModal>\n      )}\n    </>\n  );\n};\n\nForm.propTypes = {\n  title: PropTypes.string.isRequired,\n  options: PropTypes.object.isRequired,\n  data: PropTypes.object,\n};\n\nForm.defaultProps = {\n  data: {},\n};\n\nexport default Form;\n","import React, { useCallback, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { Card, CardBody } from '@patternfly/react-core';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport Breadcrumbs from '../../../Components/Breadcrumbs';\n\nimport { readPlanOptions } from '../../../Api/';\n\nimport Form from '../Shared/Form';\n\nimport { Paths } from '../../../paths';\nimport useRequest from '../../../Utilities/useRequest';\n\nconst Add = () => {\n  const {\n    result: options,\n    isSuccess,\n    request: fetchPlanOptions,\n  } = useRequest(\n    useCallback(() => readPlanOptions(), []),\n    {}\n  );\n\n  useEffect(() => {\n    fetchPlanOptions();\n  }, [fetchPlanOptions]);\n\n  const canWrite =\n    isSuccess &&\n    (options.meta?.rbac?.perms?.write === true ||\n      options.meta?.rbac?.perms?.all === true);\n  const title = 'Create new plan';\n\n  const showAdd = () => (\n    <>\n      <PageHeader>\n        <Breadcrumbs\n          items={[{ title: 'Savings Planner', navigate: '/savings-planner' }]}\n        />\n        <PageHeaderTitle title={title} />\n      </PageHeader>\n      <Main>\n        <Card>\n          <CardBody>\n            <Form title={title} options={options} />\n          </CardBody>\n        </Card>\n      </Main>\n    </>\n  );\n  if (isSuccess) {\n    return canWrite ? showAdd() : <Redirect to={Paths.savingsPlanner} />;\n  }\n  return null;\n};\n\nexport default Add;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { CardActions } from '@patternfly/react-core';\nimport styled from 'styled-components';\n\nconst CardActionsWrapper = styled.div`\n  margin-top: 20px;\n  --pf-c-card__actions--PaddingLeft: 0;\n`;\n\nconst CardActionsRow = ({ children }) => {\n  return (\n    <CardActionsWrapper>\n      <CardActions>{children}</CardActions>\n    </CardActionsWrapper>\n  );\n};\n\nCardActionsRow.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default CardActionsRow;\n","export async function getRelatedResourceDeleteCounts(requests) {\n  const results = {};\n  let error = null;\n  let hasCount = false;\n\n  try {\n    await Promise.all(\n      requests.map(async ({ request, label }) => {\n        const {\n          items: { count },\n        } = await request();\n        if (count > 0) {\n          results[label] = count;\n          hasCount = true;\n        }\n      })\n    );\n  } catch (err) {\n    error = err;\n  }\n\n  return {\n    results: hasCount && results,\n    error,\n  };\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\nimport { Button, Badge, Alert, Tooltip } from '@patternfly/react-core';\nimport AlertModal from '../AlertModal';\nimport { getRelatedResourceDeleteCounts } from '../../Utilities/getRelatedResourceDeleteDetails';\nimport ErrorDetail from '../ErrorDetail';\n\nconst WarningMessage = styled(Alert)`\n  margin-top: 10px;\n`;\n\nconst Label = styled.span`\n  && {\n    margin-right: 10px;\n  }\n`;\n\nconst DeleteButton = ({\n  onConfirm,\n  modalTitle = 'Delete',\n  name = '',\n  variant = 'secondary',\n  isDisabled = false,\n  ouiaId = null,\n  deleteMessage = 'Delete?',\n  deleteDetailsRequests = [],\n  disabledTooltip = 'This item cannot be deleted',\n  children,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [deleteMessageError, setDeleteMessageError] = useState();\n  const [deleteDetails, setDeleteDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const toggleModal = async (isModalOpen) => {\n    setIsLoading(true);\n    if (deleteDetailsRequests.length > 0 && isModalOpen) {\n      const { results, error } = await getRelatedResourceDeleteCounts(\n        deleteDetailsRequests\n      );\n      if (error) {\n        setDeleteMessageError(error);\n      } else {\n        setDeleteDetails(results);\n      }\n    }\n    setIsLoading(false);\n    setIsOpen(isModalOpen);\n  };\n\n  if (deleteMessageError) {\n    return (\n      <AlertModal\n        isOpen={!!deleteMessageError}\n        variant={'error'}\n        title={'Error!'}\n        onClose={() => {\n          toggleModal(false);\n          setDeleteMessageError();\n        }}\n      >\n        <ErrorDetail error={deleteMessageError.detail} />\n      </AlertModal>\n    );\n  }\n\n  return (\n    <>\n      {disabledTooltip ? (\n        <Tooltip content={disabledTooltip} position=\"top\">\n          <div>\n            <Button\n              spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n              variant={variant || 'secondary'}\n              aria-label={'Delete'}\n              isDisabled={isDisabled}\n              onClick={() => toggleModal(true)}\n              ouiaId={ouiaId}\n            >\n              {children || 'Delete'}\n            </Button>\n          </div>\n        </Tooltip>\n      ) : (\n        <Button\n          ouiaId={ouiaId}\n          spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n          variant={variant || 'secondary'}\n          aria-label={'Delete'}\n          isDisabled={isDisabled}\n          onClick={() => toggleModal(true)}\n        >\n          {children || 'Delete'}\n        </Button>\n      )}\n      <AlertModal\n        isOpen={isOpen}\n        title={modalTitle}\n        variant=\"danger\"\n        onClose={() => toggleModal(false)}\n        actions={[\n          <Button\n            ouiaId=\"delete-modal-confirm\"\n            key=\"delete\"\n            variant=\"danger\"\n            aria-label={'Confirm Delete'}\n            isDisabled={isDisabled}\n            onClick={() => {\n              onConfirm();\n              toggleModal(false);\n            }}\n          >\n            {'Delete'}\n          </Button>,\n          <Button\n            ouiaId=\"delete-modal-cancel\"\n            key=\"cancel\"\n            variant=\"link\"\n            aria-label={'Cancel'}\n            onClick={() => toggleModal(false)}\n          >\n            {'Cancel'}\n          </Button>,\n        ]}\n      >\n        {'Are you sure you want to delete:'}\n        <br />\n        <strong>{name}</strong>\n        {Object.values(deleteDetails).length > 0 && (\n          <WarningMessage\n            variant=\"warning\"\n            isInline\n            title={\n              <div>\n                <div aria-label={deleteMessage}>{deleteMessage}</div>\n                <br />\n                {Object.entries(deleteDetails).map(([key, value]) => (\n                  <div aria-label={`${key}: ${value}`} key={key}>\n                    <Label>{key}</Label> <Badge>{value}</Badge>\n                  </div>\n                ))}\n              </div>\n            }\n          />\n        )}\n      </AlertModal>\n    </>\n  );\n};\n\nDeleteButton.propTypes = {\n  onConfirm: PropTypes.func.isRequired,\n  modalTitle: PropTypes.string,\n  name: PropTypes.string,\n  variant: PropTypes.object,\n  isDisabled: PropTypes.bool,\n  ouiaId: PropTypes.string,\n  deleteMessage: PropTypes.string,\n  deleteDetailsRequests: PropTypes.array,\n  disabledTooltip: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nexport default DeleteButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { shape, string, number, arrayOf, node, oneOfType } from 'prop-types';\nimport { Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst RoutedTabs = ({ tabsArray, defaultTabId }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const getActiveTabId = (defaultTabId) => {\n    return (\n      tabsArray.find((tab) => tab.link === location.pathname)?.id ||\n      defaultTabId\n    );\n  };\n\n  const handleTabSelect = (_, eventKey) => {\n    const match = tabsArray.find((tab) => tab.id === eventKey);\n    if (match) {\n      history.push(match.link);\n    }\n  };\n\n  return (\n    <Tabs activeKey={getActiveTabId(defaultTabId)} onSelect={handleTabSelect}>\n      {tabsArray.map((tab) => (\n        <Tab\n          aria-label={typeof tab.name === 'string' ? tab.name : `${tab.id} tab`}\n          eventKey={tab.id}\n          key={tab.id}\n          link={tab.link}\n          title={<TabTitleText>{tab.name}</TabTitleText>}\n          role=\"tab\"\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nRoutedTabs.propTypes = {\n  defaultTabId: PropTypes.number,\n  tabsArray: arrayOf(\n    shape({\n      id: number.isRequired,\n      link: string.isRequired,\n      name: oneOfType([string.isRequired, node.isRequired]),\n    })\n  ).isRequired,\n};\n\nRoutedTabs.defaultProps = {\n  defaultTabId: 1,\n};\n\nexport default RoutedTabs;\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\nimport { Paths } from '../../../../paths';\nimport { stringify } from 'query-string';\n\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { Button } from '@patternfly/react-core';\n\nimport {\n  CardBody as PFCardBody,\n  CardFooter,\n  DescriptionList,\n  DescriptionListTerm,\n  DescriptionListGroup,\n  DescriptionListDescription,\n  Divider as PFDivider,\n  Label,\n  List,\n  ListItem,\n} from '@patternfly/react-core';\nimport CardActionsRow from '../../../../Components/CardActionsRow';\nimport { deletePlan } from '../../../../Api/';\nimport useRequest, {\n  useDismissableError,\n} from '../../../../Utilities/useRequest';\nimport DeleteButton from '../../../../Components/DeleteButton/DeleteButton';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { formatDateTime } from '../../../../Utilities/helpers';\nimport RoutedTabs from '../../../../Components/RoutedTabs';\nimport AlertModal from '../../../../Components/AlertModal/AlertModal';\nimport ErrorDetail from '../../../../Components/ErrorDetail/ErrorDetail';\nimport JobStatus from '../../../../Components/JobStatus';\n\nconst CardBody = styled(PFCardBody)`\n  min-height: 500px;\n  padding: 0;\n  padding-bottom: 20px;\n\n  &:first-child {\n    padding-top: 0;\n  }\n`;\n\nconst Divider = styled(PFDivider)`\n  padding-top: 24px;\n`;\n\nconst DetailsTab = ({ tabsArray, plan, canWrite, options }) => {\n  const { pathname } = useLocation();\n  const history = useHistory();\n  const {\n    id,\n    automation_status,\n    category,\n    description,\n    frequency_period,\n    hosts,\n    manual_time,\n    modified,\n    name,\n    tasks,\n    template_details,\n    template_id,\n  } = plan;\n\n  const redirectToJobExplorer = (templateId) => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      'job-explorer.quick_date_range': 'last_30_days',\n      'job-explorer.status': ['failed', 'successful'],\n      'job-explorer.template_id': templateId,\n    };\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const showTemplate = (template_details) => {\n    if (!template_details.id) {\n      return;\n    }\n\n    return (\n      <a onClick={() => redirectToJobExplorer(template_details.id)}>\n        {template_details.name}\n      </a>\n    );\n  };\n\n  const renderOptionsBasedValue = (key, val) => {\n    const fromOptionsValue = (options[key] || []).find(\n      ({ key: apiValue }) => apiValue === val\n    );\n    return (fromOptionsValue || {}).value;\n  };\n\n  const labelsAndValues = {\n    Name: name || undefined,\n    'Automation type': category\n      ? renderOptionsBasedValue('category', category)\n      : undefined,\n    Description: description || undefined,\n    'Manual time': manual_time\n      ? renderOptionsBasedValue('manual_time', manual_time)\n      : undefined,\n    'Run on hosts': hosts || undefined,\n    Frequency: frequency_period\n      ? renderOptionsBasedValue('frequency_period', frequency_period)\n      : undefined,\n    Template: template_id ? showTemplate(template_details) : undefined,\n    'Last job status':\n      automation_status.status && automation_status.status !== 'None' ? (\n        <JobStatus status={automation_status.status} />\n      ) : (\n        <Label variant=\"outline\" color=\"red\" icon={<ExclamationCircleIcon />}>\n          Not Running\n        </Label>\n      ),\n    'Last updated': modified ? (\n      <span>{formatDateTime(modified)}</span>\n    ) : undefined,\n  };\n\n  const { request: deletePlans, error: deleteError } = useRequest(\n    useCallback(async () => {\n      await deletePlan(id);\n      history.push(`/savings-planner`);\n    }, [id, history])\n  );\n\n  const { error, dismissError } = useDismissableError(deleteError);\n\n  return (\n    <>\n      {plan && (\n        <>\n          <CardBody>\n            <RoutedTabs tabsArray={tabsArray} />\n            <div style={{ padding: '1rem' }}>\n              <DescriptionList isHorizontal columnModifier={{ lg: '3Col' }}>\n                {Object.keys(labelsAndValues).map(\n                  (key, i) =>\n                    labelsAndValues[key] !== undefined && (\n                      <DescriptionListGroup key={i}>\n                        <DescriptionListTerm>{key}</DescriptionListTerm>\n                        <DescriptionListDescription>\n                          {labelsAndValues[key]}\n                        </DescriptionListDescription>\n                      </DescriptionListGroup>\n                    )\n                )}\n              </DescriptionList>\n              {tasks.length > 0 && (\n                <DescriptionList>\n                  <Divider component=\"div\" />\n                  <DescriptionListGroup key={tasks}>\n                    <DescriptionListTerm>Tasks</DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <List component=\"ol\" type=\"1\">\n                        {tasks.map(({ id, task }) => (\n                          <ListItem key={id}>{task}</ListItem>\n                        ))}\n                      </List>\n                    </DescriptionListDescription>\n                  </DescriptionListGroup>\n                </DescriptionList>\n              )}\n            </div>\n          </CardBody>\n          {canWrite && (\n            <CardFooter>\n              <CardActionsRow>\n                <Button\n                  key=\"edit-plan-button\"\n                  variant=\"primary\"\n                  aria-label=\"Edit plan\"\n                  onClick={() => {\n                    history.push({\n                      pathname: `${pathname.split('/details')[0]}/edit`,\n                    });\n                  }}\n                >\n                  Edit\n                </Button>\n                <DeleteButton\n                  key={'delete-plan-button'}\n                  name={name}\n                  modalTitle={'Delete Plan'}\n                  onConfirm={deletePlans}\n                >\n                  {'Delete'}\n                </DeleteButton>\n              </CardActionsRow>\n              {error && (\n                <AlertModal\n                  isOpen={!!error}\n                  onClose={dismissError}\n                  title={'Error'}\n                  variant=\"error\"\n                >\n                  <ErrorDetail error={error.detail} />\n                </AlertModal>\n              )}\n            </CardFooter>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nDetailsTab.propTypes = {\n  plan: PropTypes.object,\n  tabsArray: PropTypes.array,\n  canWrite: PropTypes.bool.isRequired,\n  options: PropTypes.object.isRequired,\n};\n\nexport default DetailsTab;\n","var hoursFormatter = function (n) {\n    return (+n.toFixed(0)).toLocaleString() + \" hours\";\n}; /* 2,500 hours */\nexport default hoursFormatter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle, Title } from '@patternfly/react-core';\nimport currencyFormatter from '../../../../../Utilities/currencyFormatter';\nimport hoursFormatter from '../../../../../Utilities/hoursFormatter';\nvar TotalSavings = function (_a) {\n    var _b = _a.value, value = _b === void 0 ? 0 : _b, _c = _a.isMoney, isMoney = _c === void 0 ? true : _c;\n    return (React.createElement(Card, { isPlain: true },\n        React.createElement(CardTitle, { style: { paddingBottom: '0' } }, \"Total savings\"),\n        React.createElement(CardBody, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"4xl\", style: { color: isMoney ? '#81C46B' : '#0063CF' } }, isMoney ? \"\" + currencyFormatter(value) : \"\" + hoursFormatter(value)))));\n};\nTotalSavings.propTypes = {\n    value: PropTypes.number,\n    isMoney: PropTypes.bool,\n};\nexport default TotalSavings;\n","import React, { useState } from 'react';\nimport { Button, ButtonVariant, CodeBlock, CodeBlockCode, Modal, ModalVariant, } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nvar CostsText = function () { return (React.createElement(React.Fragment, null,\n    React.createElement(\"p\", null,\n        React.createElement(\"strong\", null, \"Cost\")),\n    React.createElement(\"p\", null, \"The cost includes the hours spent in implementation, deployment, training and other expenditures for creating, maintaining and running the automation. These hours (cost of investment) are usually higher at the onset, and will be greatly reduced once the automation has been created and only maintenance is required.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"For the initial period and the first year, we assume approximately 10 hours spent on each host, as well as some buffer time and a 40% risk adjustment to account for unforeseen situations.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"For the next two years after the first year, we assume 4 hours spent on each host, as well as a 40% risk adjustment to account for unforeseen situations.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate cost for the initial period and year 1:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"C1 = (time for a manual run on one host in hours * 10) + buffer time\\nC2 = C1 * 40% risk adjustment\\ninitial cost = (C1 + C2) * (cost per hour in USD if applicable, based on display)\\nyear 1 cost = (C1 + C2) * (cost per hour in USD if applicable, based on display)\")),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate cost for years 2 and 3:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"C1 = (time for a manual run on one host in hours * 4)\\nC2 = C1 * 40% risk adjustment\\nyear 2 cost = (C1 + C2) * (cost per hour in USD if applicable, based on display)\\nyear 3 cost = (C1 + C2) * (cost per hour in USD if applicable, based on display)\")))); };\nvar SavingsText = function () { return (React.createElement(React.Fragment, null,\n    React.createElement(\"p\", null,\n        React.createElement(\"strong\", null, \"Savings\")),\n    React.createElement(\"p\", null, \"The savings indicates the time and money saved as a result of automating the plan.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"We assume 50% productivity recapture to account for the productivity that is usually gained by repeated manual implementation of a task over a period of time. We also add a -5% risk adjustment for unforeseen situations that might arise and need to be handled. We also assume a 15% year over year growth in savings.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"Money savings for the initial period is 0, so there is no formula necessary.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate savings for year 0:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"initial period savings = 0 - initial cost\")),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used for savings for year 1:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"S1 = (number of hosts * (manual time in minutes / 60) * yearly frequency of automation)\\nS2 = S1 * 50% productivity recapture\\nS3 = S2 * 5% risk adjustment * (cost per hour in USD if applicable, based on display)\\nyear 1 savings = S2 - S3 - year 1 cost\")),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate savings for year 2:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"S1 = year 1 savings * 15% growth\\nyear 2 savings = year 1 savings + S1 - year 2 cost\")),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate savings for year 3:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"S2 = year 2 savings * 15% growth\\nyear 3 savings = year 2 savings + S2 - year 3 cost\")))); };\nvar FormulaDescription = function () {\n    var _a = useState(false), isOpen = _a[0], setIsOpen = _a[1];\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Button, { variant: \"link\", onClick: function () { return setIsOpen(true); }, icon: React.createElement(InfoCircleIcon, null) }, \"Automation formula\"),\n        React.createElement(Modal, { title: \"Automation formula\", isOpen: isOpen, onClose: function () { return setIsOpen(false); }, variant: ModalVariant.medium, actions: [\n                React.createElement(Button, { key: \"cancel\", variant: ButtonVariant.primary, onClick: function () { return setIsOpen(false); } }, \"Close\"),\n            ] },\n            React.createElement(\"p\", null, \"We use risk-adjusted factors to create the 3-year projection of cost and savings related to automation. While we aim to provide as accurate an account of the cost and savings as possible, actual values may differ in practice. The following information breaks down where we get the data, the risk-adjustment factors we use, the assumptions we make, and the formula used to compute the values as displayed in the chart.\"),\n            React.createElement(\"br\", null),\n            React.createElement(CostsText, null),\n            React.createElement(\"br\", null),\n            React.createElement(SavingsText, null))));\n};\nexport default FormulaDescription;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardActions, CardBody, CardHeader, CardTitle, Grid, GridItem, List, ListItem, ToggleGroup, ToggleGroupItem, } from '@patternfly/react-core';\nimport { SquareFullIcon } from '@patternfly/react-icons';\nimport ChartRenderer, { functions, ChartKind, ChartThemeColor, ChartType, ChartTopLevelType, ApiType, } from 'react-json-chart-builder';\nimport RoutedTabs from '../../../../Components/RoutedTabs';\nimport TotalSavings from './TotalSavings';\nimport FormulaDescription from './FormulaDescription';\nimport currencyFormatter from '../../../../Utilities/currencyFormatter';\nimport hoursFormatter from '../../../../Utilities/hoursFormatter';\nvar yearLabels = {\n    initial: 'Initial',\n    year1: 'Year 1',\n    year2: 'Year 2',\n    year3: 'Year 3',\n};\nvar getChartData = function (data) {\n    var statsData = Object.keys(yearLabels).map(function (year) { return ({\n        year: yearLabels[year],\n        total_costs: +data.projections.monetary_stats.total_costs[year] * -1,\n        total_benefits: +data.projections.monetary_stats.total_benefits[year],\n        cumulative_net_benefits: +data.projections.monetary_stats.cumulative_net_benefits[year],\n        total_hours_spent_risk_adjusted: +data.projections.time_stats.total_hours_spent_risk_adjusted[year] * -1,\n        total_hours_saved: +data.projections.time_stats.total_hours_saved[year],\n        cumulative_time_net_benefits: +data.projections.time_stats.cumulative_time_net_benefits[year],\n    }); });\n    return { items: statsData, type: ApiType.nonGrouped, response_type: '' };\n};\nvar constants = function (isMoney) { return ({\n    cost: {\n        key: isMoney ? 'total_costs' : 'total_hours_spent_risk_adjusted',\n        color: '#8B8D8F',\n    },\n    benefit: {\n        key: isMoney ? 'total_benefits' : 'total_hours_saved',\n        color: isMoney ? '#81C46B' : '#0063CF',\n    },\n    net: {\n        key: isMoney ? 'cumulative_net_benefits' : 'cumulative_time_net_benefits',\n        color: '#EE7A00',\n    },\n}); };\nvar StatisticsTab = function (_a) {\n    var tabsArray = _a.tabsArray, plan = _a.plan;\n    var _b = useState(true), isMoney = _b[0], setIsMoney = _b[1];\n    var customTooltipFormatting = function (datum) {\n        return isMoney ? currencyFormatter(+datum.y) : hoursFormatter(+datum.y);\n    };\n    var computeTotalSavings = function (d) {\n        return isMoney\n            ? d.projections.monetary_stats.cumulative_net_benefits.year3\n            : d.projections.time_stats.cumulative_time_net_benefits.year3;\n    };\n    var barChartData = {\n        charts: [\n            {\n                id: 1000,\n                kind: ChartKind.wrapper,\n                type: ChartTopLevelType.chart,\n                parent: null,\n                props: {\n                    height: 600,\n                    domainPadding: {\n                        x: 100,\n                    },\n                    padding: {\n                        bottom: 60,\n                        left: 80,\n                    },\n                    themeColor: ChartThemeColor.gray,\n                },\n                tooltip: {\n                    cursor: true,\n                    stickToAxis: 'x',\n                    mouseFollow: true,\n                    legendTooltip: {\n                        legendData: [\n                            {\n                                childName: constants(isMoney).benefit.key,\n                                name: 'Savings',\n                                symbol: {\n                                    fill: constants(isMoney).benefit.color,\n                                },\n                            },\n                            {\n                                childName: constants(isMoney).cost.key,\n                                name: 'Costs',\n                                symbol: {\n                                    fill: constants(isMoney).cost.color,\n                                },\n                            },\n                            {\n                                childName: constants(isMoney).net.key,\n                                name: 'Cumulative savings',\n                                symbol: {\n                                    fill: constants(isMoney).net.color,\n                                },\n                            },\n                        ],\n                        titleProperyForLegend: 'year',\n                    },\n                    customFnc: customTooltipFormatting,\n                },\n                xAxis: {\n                    label: 'Time',\n                },\n                yAxis: {\n                    label: isMoney ? 'Money Saved' : 'Hours Saved',\n                    tickFormat: 'formatNumberAsK',\n                    style: {\n                        grid: { stroke: '#D2D2D2' },\n                        axisLabel: { padding: 60 },\n                    },\n                },\n            },\n            {\n                id: 1001,\n                kind: ChartKind.stack,\n                parent: 1000,\n                props: {},\n            },\n            {\n                id: 1102,\n                kind: ChartKind.simple,\n                type: ChartType.bar,\n                name: constants(isMoney).benefit.key,\n                parent: 1001,\n                props: {\n                    x: 'year',\n                    y: constants(isMoney).benefit.key,\n                    barRatio: 0.8,\n                    barWidth: 0,\n                    style: {\n                        data: {\n                            fill: constants(isMoney).benefit.color,\n                            width: 120,\n                        },\n                    },\n                },\n                tooltip: {\n                    labelName: '',\n                },\n            },\n            {\n                id: 1101,\n                kind: ChartKind.simple,\n                type: ChartType.bar,\n                name: constants(isMoney).cost.key,\n                parent: 1001,\n                props: {\n                    x: 'year',\n                    y: constants(isMoney).cost.key,\n                    barRatio: 0.8,\n                    barWidth: 0,\n                    style: {\n                        data: {\n                            fill: constants(isMoney).cost.color,\n                            width: 120,\n                        },\n                    },\n                },\n                tooltip: {\n                    labelName: '',\n                },\n            },\n            {\n                id: 1002,\n                kind: ChartKind.simple,\n                type: ChartType.line,\n                name: constants(isMoney).net.key,\n                parent: 1000,\n                props: {\n                    x: 'year',\n                    y: constants(isMoney).net.key,\n                    style: {\n                        data: {\n                            stroke: constants(isMoney).net.color,\n                            strokeWidth: 5,\n                        },\n                    },\n                },\n                tooltip: {\n                    labelName: '',\n                },\n            },\n        ],\n        functions: __assign(__assign({}, functions), { fetchFnc: function () {\n                return new Promise(function (resolve) {\n                    resolve(getChartData(plan));\n                });\n            } }),\n    };\n    var renderLeft = function () { return (React.createElement(Card, { isPlain: true },\n        React.createElement(CardHeader, null,\n            React.createElement(CardActions, null,\n                React.createElement(ToggleGroup, { \"aria-label\": \"toggleButton\" },\n                    React.createElement(ToggleGroupItem, { text: \"Money\", buttonId: \"money\", isSelected: isMoney, onChange: function () { return setIsMoney(true); } }),\n                    React.createElement(ToggleGroupItem, { text: \"Time\", buttonId: \"time\", isSelected: !isMoney, onChange: function () { return setIsMoney(false); } }))),\n            React.createElement(CardTitle, null, plan.name)),\n        React.createElement(CardBody, null,\n            React.createElement(ChartRenderer, { schema: barChartData.charts, functions: barChartData.functions })))); };\n    var renderRight = function () { return (React.createElement(React.Fragment, null,\n        React.createElement(TotalSavings, { value: computeTotalSavings(plan), isMoney: isMoney }),\n        React.createElement(Card, { isPlain: true },\n            React.createElement(CardBody, null,\n                React.createElement(List, { isPlain: true },\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).benefit.color }) }, \"Savings from automating this plan\"),\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).cost.color }) }, \"Costs from creating, maintaining and running the automation\"),\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).net.color }) }, \"Cumulative savings over time\")))),\n        React.createElement(FormulaDescription, null))); };\n    return (React.createElement(Card, null,\n        React.createElement(RoutedTabs, { tabsArray: tabsArray }),\n        React.createElement(Grid, null,\n            React.createElement(GridItem, { span: 9 }, renderLeft()),\n            React.createElement(GridItem, { span: 3 }, renderRight()))));\n};\nStatisticsTab.propTypes = {\n    /* eslint-disable-next-line */\n    /* @ts-ignore: Validation error */\n    plan: PropTypes.object.isRequired,\n    tabsArray: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        link: PropTypes.string.isRequired,\n        name: PropTypes.node.isRequired,\n    }).isRequired).isRequired,\n};\nexport default StatisticsTab;\n","import React, { useCallback, useEffect } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { readPlanOptions } from '../../../Api/';\nimport { Paths } from '../../../paths';\n\nimport Form from '../Shared/Form';\nimport useRequest from '../../../Utilities/useRequest';\n\nconst Edit = ({ data }) => {\n  const { id } = useParams();\n\n  const {\n    result: options,\n    isSuccess,\n    request: fetchPlanOptions,\n  } = useRequest(\n    useCallback(() => readPlanOptions(), []),\n    {}\n  );\n\n  useEffect(() => {\n    fetchPlanOptions();\n  }, [fetchPlanOptions]);\n\n  const canWrite =\n    isSuccess &&\n    (options?.meta?.rbac?.perms?.write === true ||\n      options?.meta?.rbac?.perms?.all === true);\n\n  const renderContent = () => {\n    if (!isSuccess) return null;\n\n    return canWrite ? (\n      <Form title=\"Edit plan\" options={options} data={data} />\n    ) : (\n      <Redirect to={`${Paths.savingsPlanner}/${id}`} />\n    );\n  };\n\n  return renderContent();\n};\n\nEdit.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default Edit;\n","import Details from './Details';\n\nexport default Details;\n","import React, { useEffect, useCallback } from 'react';\nimport {\n  useHistory,\n  useParams,\n  useLocation,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport { CaretLeftIcon } from '@patternfly/react-icons';\nimport { Card } from '@patternfly/react-core';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\n\nimport DetailsTab from './DetailsTab';\nimport StatisticsTab from './StatisticsTab';\nimport ApiErrorState from '../../../Components/ApiErrorState';\nimport { paths as savingsPaths } from '../index';\n\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport Breadcrumbs from '../../../Components/Breadcrumbs';\n\nimport { readPlan, readPlanOptions } from '../../../Api/';\n\nimport SavingsPlanEdit from '../Edit';\nimport useRequest from '../../../Utilities/useRequest';\n\nconst Details = () => {\n  const { id } = useParams();\n  const location = useLocation();\n  const history = useHistory();\n\n  const queryParams = { id: [id] };\n\n  let pageTitle = 'Details';\n  if (location.pathname.indexOf('/statistics') !== -1) {\n    pageTitle = 'Statistics';\n  } else if (location.pathname.indexOf('/edit') !== -1) {\n    pageTitle = 'Edit plan';\n  }\n\n  const {\n    result: options,\n    error,\n    request: fetchOptions,\n  } = useRequest(() => readPlanOptions(), {});\n\n  const {\n    result: { rbac, plan },\n    isSuccess: planIsSuccess,\n    request: fetchEndpoints,\n  } = useRequest(\n    useCallback(() => readPlan(id), [id]),\n    { plan: {}, rbac: [] }\n  );\n\n  useEffect(() => {\n    fetchOptions();\n\n    const unlisten = history.listen(({ pathname }) => {\n      if (!pathname.includes('/edit')) fetchEndpoints();\n    });\n\n    return unlisten;\n  }, []);\n\n  useEffect(() => {\n    fetchEndpoints();\n  }, [id]);\n\n  const canWrite =\n    planIsSuccess && (rbac.perms?.write === true || rbac.perms?.all === true);\n\n  const tabsArray = [\n    {\n      id: 0,\n      name: (\n        <>\n          <CaretLeftIcon />\n          {'Back to Plans'}\n        </>\n      ),\n      link: savingsPaths.get,\n    },\n    { id: 1, name: 'Details', link: savingsPaths.getDetails(id) },\n    {\n      id: 2,\n      name: 'Statistics',\n      link: `${savingsPaths.getDetails(id)}/statistics`,\n    },\n  ];\n\n  const breadcrumbsItems = planIsSuccess\n    ? [\n        { title: 'Savings Planner', navigate: savingsPaths.get },\n        { title: plan.name, navigate: savingsPaths.getDetails(id) },\n      ]\n    : [];\n\n  return (\n    <>\n      {error && <ApiErrorState message={error.error} />}\n      {planIsSuccess && (\n        <>\n          <PageHeader>\n            <Breadcrumbs items={breadcrumbsItems} />\n            <PageHeaderTitle title={pageTitle} />\n          </PageHeader>\n          <Main>\n            <Card>\n              <Switch>\n                <Route exact path=\"/savings-planner/:id/edit\">\n                  <SavingsPlanEdit data={plan} />\n                </Route>\n                <Route exact path=\"/savings-planner/:id/statistics\">\n                  <StatisticsTab\n                    tabsArray={tabsArray}\n                    plan={plan}\n                    queryParams={queryParams}\n                  />\n                </Route>\n                <Route exact path={savingsPaths.details}>\n                  <DetailsTab\n                    plan={plan}\n                    tabsArray={tabsArray}\n                    canWrite={canWrite}\n                    options={options}\n                  />\n                </Route>\n              </Switch>\n            </Card>\n          </Main>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Details;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Title,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Button,\n} from '@patternfly/react-core';\nimport { AddCircleOIcon, SearchIcon } from '@patternfly/react-icons';\nimport { useHistory } from 'react-router-dom';\n\nconst EmptyList = ({\n  label = '',\n  title = 'No items found.',\n  message = '',\n  canAdd = false,\n  path,\n}) => {\n  const history = useHistory();\n\n  return (\n    <EmptyState variant=\"full\">\n      <EmptyStateIcon icon={canAdd ? AddCircleOIcon : SearchIcon} />\n      <Title size=\"lg\" headingLevel=\"h3\">\n        {title}\n      </Title>\n      <EmptyStateBody>{message}</EmptyStateBody>\n      {canAdd && (\n        <Button\n          key=\"add-item-button\"\n          variant=\"primary\"\n          aria-label={label}\n          onClick={() => {\n            history.push({\n              pathname: path,\n            });\n          }}\n        >\n          {label}\n        </Button>\n      )}\n    </EmptyState>\n  );\n};\n\nEmptyList.propTypes = {\n  canAdd: PropTypes.bool,\n  label: PropTypes.string,\n  message: PropTypes.string,\n  title: PropTypes.string,\n  path: PropTypes.string.isRequired,\n};\n\nexport default EmptyList;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { stringify } from 'query-string';\nimport { useHistory, Link, useRouteMatch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {\n  Card,\n  CardHeader,\n  CardHeaderMain,\n  CardActions,\n  CardTitle as PFCardTitle,\n  CardBody,\n  CardFooter,\n  Checkbox as PFCheckbox,\n  Dropdown,\n  DropdownItem,\n  KebabToggle,\n  Label,\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\n\nimport { Paths } from '../../../../paths';\n\nimport currencyFormatter from '../../../../Utilities/currencyFormatter';\nimport { formatDateTime } from '../../../../Utilities/helpers';\n\nimport JobStatus from '../../../../Components/JobStatus';\n\nconst CardTitle = styled(PFCardTitle)`\n  word-break: break-word;\n`;\n\nconst CardLabel = styled.span`\n  margin-right: 5px;\n  font-weight: bold;\n`;\n\nconst Small = styled.small`\n  display: block;\n  margin-bottom: 10px;\n  color: #6a6e73;\n`;\n\nconst Checkbox = styled(PFCheckbox)`\n  &.pf-c-check.pf-m-standalone {\n    margin-top: -3px;\n  }\n`;\n\nconst CardDetail = styled.div`\n  display: flex;\n  min-height: 30px;\n  align-items: center;\n`;\n\nconst ListItem = ({\n  isSuccess,\n  plan,\n  selected = [],\n  handleSelect = () => {},\n  canWrite,\n  options,\n}) => {\n  const {\n    id,\n    automation_status,\n    category,\n    description,\n    frequency_period,\n    modified,\n    name,\n    template_details,\n    projections,\n  } = plan;\n\n  const projectedSavings =\n    projections?.monetary_stats?.cumulative_net_benefits?.year3;\n\n  const [isCardKebabOpen, setIsCardKebabOpen] = useState(false);\n  const match = useRouteMatch();\n  let history = useHistory();\n\n  const redirectToJobExplorer = (templateId) => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      'job-explorer.quick_date_range': 'last_30_days',\n      'job-explorer.status': ['failed', 'successful'],\n      'job-explorer.template_id': templateId,\n    };\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const renderTemplateLink = (template) => {\n    return template && isSuccess ? (\n      <a onClick={() => redirectToJobExplorer(template.id)}>{template.name}</a>\n    ) : null;\n  };\n\n  const renderOptionsBasedValue = (key, val) => {\n    return options[key].find(({ key: apiValue }) => apiValue === val).value;\n  };\n\n  const kebabDropDownItems = [\n    <React.Fragment key={id}>\n      <DropdownItem\n        key=\"edit\"\n        onClick={() => history.push(`${match.url}/${id}/edit`)}\n        position=\"right\"\n      >\n        Edit\n      </DropdownItem>\n      <DropdownItem\n        key=\"link\"\n        onClick={() => history.push(`${match.url}/${id}/edit#tasks`)}\n        position=\"right\"\n      >\n        Manage tasks\n      </DropdownItem>\n      <DropdownItem\n        key=\"link\"\n        onClick={() => history.push(`${match.url}/${id}/edit#link_template`)}\n        position=\"right\"\n      >\n        Link template\n      </DropdownItem>\n    </React.Fragment>,\n  ];\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardHeaderMain>\n          <CardTitle>\n            <Link to={`${match.url}/${id}`}>{name}</Link>\n          </CardTitle>\n        </CardHeaderMain>\n        {canWrite && (\n          <CardActions>\n            <Dropdown\n              onSelect={() => {}}\n              toggle={\n                <KebabToggle\n                  onToggle={() => setIsCardKebabOpen(!isCardKebabOpen)}\n                />\n              }\n              isOpen={isCardKebabOpen}\n              isPlain\n              dropdownItems={kebabDropDownItems}\n              position={'right'}\n            />\n            <Checkbox\n              onChange={() => handleSelect(plan)}\n              isChecked={selected.some((row) => row.id === plan.id)}\n              aria-label=\"card checkbox\"\n              id=\"check-1\"\n              name=\"check1\"\n            />\n          </CardActions>\n        )}\n      </CardHeader>\n      <CardBody>\n        {description ? <Small>{description}</Small> : null}\n        <CardDetail>\n          <CardLabel>Frequency</CardLabel>{' '}\n          {frequency_period ? (\n            renderOptionsBasedValue('frequency_period', frequency_period)\n          ) : (\n            <span>None</span>\n          )}\n        </CardDetail>\n        <CardDetail>\n          <CardLabel>Template</CardLabel>{' '}\n          {Object.keys(template_details || {}).length !== 0 ? (\n            renderTemplateLink(template_details)\n          ) : (\n            <span>\n              None -{' '}\n              <a\n                onClick={() =>\n                  history.push(`${match.url}/${id}/edit#link_template`)\n                }\n              >\n                Link template\n              </a>\n            </span>\n          )}\n        </CardDetail>\n        <CardDetail>\n          <CardLabel>Last job status</CardLabel>\n          {automation_status.status !== 'None' ? (\n            <JobStatus status={automation_status.status} />\n          ) : (\n            <Label\n              variant=\"outline\"\n              color=\"red\"\n              icon={<ExclamationCircleIcon />}\n            >\n              Not Running\n            </Label>\n          )}\n        </CardDetail>\n        {projectedSavings && (\n          <CardDetail>\n            <CardLabel>Projected savings</CardLabel>\n            <a onClick={() => history.push(`${match.url}/${id}/statistics`)}>\n              {currencyFormatter(+projectedSavings)}\n            </a>\n          </CardDetail>\n        )}\n        <CardDetail>\n          <CardLabel>Last updated</CardLabel>{' '}\n          <span>{formatDateTime(modified)}</span>\n        </CardDetail>\n      </CardBody>\n      <CardFooter>\n        <Label>{renderOptionsBasedValue('category', category)}</Label>\n      </CardFooter>\n    </Card>\n  );\n};\n\nListItem.propTypes = {\n  isSuccess: PropTypes.bool.isRequired,\n  canWrite: PropTypes.bool.isRequired,\n  selected: PropTypes.array,\n  handleSelect: PropTypes.func,\n  plan: PropTypes.object,\n  options: PropTypes.object,\n};\n\nexport default ListItem;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport AlertModal from '../AlertModal';\n\nimport { getRelatedResourceDeleteCounts } from '../../Utilities/getRelatedResourceDeleteDetails';\n\nimport ErrorDetail from '../ErrorDetail';\n\nconst requiredField = (props) => {\n  const { name, username, image } = props;\n  if (!name && !username && !image) {\n    return new Error(\n      `One of 'name', 'username' or 'image' is required by ItemToDelete component.`\n    );\n  }\n  if (name) {\n    PropTypes.checkPropTypes(\n      {\n        name: PropTypes.string,\n      },\n      { name: props.name },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  if (username) {\n    PropTypes.checkPropTypes(\n      {\n        username: PropTypes.string,\n      },\n      { username: props.username },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  if (image) {\n    PropTypes.checkPropTypes(\n      {\n        image: PropTypes.string,\n      },\n      { image: props.image },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  return null;\n};\n\nconst ToolbarDeleteButton = ({\n  itemsToDelete,\n  pluralizedItemName = 'Items',\n  onDelete,\n  errorMessage = 'Error while deleting',\n  deleteDetailsRequests = [],\n  cannotDelete = (item) => !item,\n}) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [deleteDetails, setDeleteDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [deleteMessageError, setDeleteMessageError] = useState('');\n  const handleDelete = () => {\n    onDelete();\n    toggleModal();\n  };\n\n  const toggleModal = async (isOpen) => {\n    setIsLoading(true);\n    setDeleteDetails(null);\n    if (\n      isOpen &&\n      itemsToDelete.length === 1 &&\n      deleteDetailsRequests?.length > 0\n    ) {\n      const { results, error } = await getRelatedResourceDeleteCounts(\n        deleteDetailsRequests\n      );\n\n      if (error) {\n        setDeleteMessageError(error);\n      } else {\n        setDeleteDetails(results);\n      }\n    }\n    setIsLoading(false);\n    setIsModalOpen(isOpen);\n  };\n\n  const renderTooltip = () => {\n    const itemsUnableToDelete = itemsToDelete\n      .filter(cannotDelete)\n      .map((item) => item.name || item.username)\n      .join(', ');\n\n    if (itemsToDelete.some(cannotDelete)) {\n      return (\n        <div>\n          {errorMessage ? (\n            <>\n              <span>{errorMessage}</span>\n              <span>{`: ${itemsUnableToDelete}`}</span>\n            </>\n          ) : (\n            `You do not have permission to delete ${pluralizedItemName}: ${itemsUnableToDelete}`\n          )}\n        </div>\n      );\n    }\n    if (itemsToDelete.length) {\n      return 'Delete';\n    }\n    return 'Select a plan to delete';\n  };\n\n  const modalTitle = `Delete ${pluralizedItemName}?`;\n\n  const isDisabled =\n    itemsToDelete.length === 0 || itemsToDelete.some(cannotDelete);\n\n  if (deleteMessageError) {\n    return (\n      <AlertModal\n        isOpen={!!deleteMessageError}\n        title={'Error!'}\n        onClose={() => {\n          toggleModal(false);\n          setDeleteMessageError();\n        }}\n      >\n        <ErrorDetail error={deleteMessageError.detail} />\n      </AlertModal>\n    );\n  }\n\n  return (\n    <>\n      <Tooltip content={renderTooltip()} position=\"top\">\n        <div>\n          <Button\n            variant=\"secondary\"\n            ouiaId=\"delete-button\"\n            spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n            aria-label={'Delete'}\n            onClick={() => toggleModal(true)}\n            isDisabled={isDisabled}\n          >\n            {'Delete'}\n          </Button>\n        </div>\n      </Tooltip>\n\n      {isModalOpen && (\n        <AlertModal\n          variant=\"danger\"\n          title={modalTitle}\n          isOpen={isModalOpen}\n          onClose={() => toggleModal(false)}\n          actions={[\n            <Button\n              ouiaId=\"delete-modal-confirm\"\n              key=\"delete\"\n              variant=\"danger\"\n              aria-label={'confirm delete'}\n              isDisabled={Boolean(deleteDetails)}\n              onClick={handleDelete}\n            >\n              {'Delete'}\n            </Button>,\n            <Button\n              key=\"cancel\"\n              variant=\"link\"\n              aria-label={'cancel delete'}\n              onClick={() => toggleModal(false)}\n            >\n              {'Cancel'}\n            </Button>,\n          ]}\n        >\n          <div>{'This action will delete the following:'}</div>\n          {itemsToDelete.map((item) => (\n            <span key={item.id}>\n              <strong>{item.name || item.username || item.image}</strong>\n              <br />\n            </span>\n          ))}\n        </AlertModal>\n      )}\n    </>\n  );\n};\n\nToolbarDeleteButton.propTypes = {\n  itemsToDelete: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: requiredField,\n      username: requiredField,\n      image: requiredField,\n    })\n  ).isRequired,\n  pluralizedItemName: PropTypes.string,\n  onDelete: PropTypes.func.isRequired,\n  errorMessage: PropTypes.string,\n  warningMessage: PropTypes.node,\n  deleteDetailsRequests: PropTypes.array,\n  cannotDelete: PropTypes.func,\n  deleteMessage: PropTypes.string,\n};\n\nexport default ToolbarDeleteButton;\n","import React, { useCallback, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Button, Gallery, PaginationVariant } from '@patternfly/react-core';\n\nimport { deletePlans, readPlanOptions, readPlans } from '../../../Api/';\nimport FilterableToolbar from '../../../Components/Toolbar';\nimport ApiErrorState from '../../../Components/ApiErrorState';\nimport LoadingState from '../../../Components/LoadingState';\nimport EmptyList from '../../../Components/EmptyList';\nimport Pagination from '../../../Components/Pagination';\nimport PlanCard from './ListItem';\nimport { useQueryParams } from '../../../Utilities/useQueryParams';\nimport { savingsPlanner } from '../../../Utilities/constants';\n\nimport ToolbarDeleteButton from '../../../Components/Toolbar/ToolbarDeleteButton';\nimport useSelected from '../../../Utilities/useSelected';\nimport useRequest, { useDeleteItems } from '../../../Utilities/useRequest';\nimport ErrorDetail from '../../../Components/ErrorDetail';\nimport AlertModal from '../../../Components/AlertModal';\nimport { getQSConfig } from '../../../Utilities/qs';\n\nconst PageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 76px);\n`;\n\nconst Footer = styled.div`\n  flex-shrink: 0;\n`;\n\nconst FlexMain = styled(Main)`\n  flex-grow: 1;\n`;\nconst qsConfig = getQSConfig(\n  'savings-planner',\n  { ...savingsPlanner.defaultParams },\n  ['limit', 'offset']\n);\n\nconst List = () => {\n  const history = useHistory();\n  const { pathname } = useLocation();\n\n  // params from toolbar/searchbar\n  const { queryParams, setFromPagination, setFromToolbar } =\n    useQueryParams(qsConfig);\n\n  const {\n    result: options,\n    error,\n    isSuccess,\n    request: fetchOptions,\n  } = useRequest(\n    useCallback(() => readPlanOptions(), [queryParams]),\n    {}\n  );\n\n  const {\n    result: { data, rbac, total_count },\n    isLoading: itemsIsLoading,\n    isSuccess: itemsIsSuccess,\n    request: fetchEndpoints,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await readPlans(queryParams);\n      return {\n        data: response.items,\n        rbac: response.rbac,\n        total_count: response.meta.total_count,\n      };\n    }, [queryParams]),\n    {\n      data: [],\n      rbac: {},\n      total_count: 0,\n    }\n  );\n\n  const combinedOptions = {\n    ...options,\n    name: [{ key: 'name', value: null }],\n  };\n\n  useEffect(() => {\n    fetchOptions();\n    fetchEndpoints();\n  }, [queryParams]);\n\n  const canWrite =\n    itemsIsSuccess &&\n    (rbac?.perms?.write === true || rbac?.perms?.all === true);\n\n  const { selected, handleSelect, setSelected } = useSelected(data);\n\n  const {\n    isLoading: deleteLoading,\n    deletionError,\n    deleteItems: deleteItems,\n    clearDeletionError,\n  } = useDeleteItems(deletePlans, null);\n\n  const handleDelete = async () => {\n    await deleteItems(selected.map(({ id }) => id));\n    setSelected([]);\n    fetchEndpoints();\n  };\n\n  const renderContent = () => {\n    if (error) return <ApiErrorState message={error.error} />;\n    if (itemsIsLoading || deleteLoading) return <LoadingState />;\n    if (\n      itemsIsSuccess &&\n      data.length === 0 &&\n      !(itemsIsLoading || deleteLoading)\n    )\n      return (\n        <EmptyList\n          label={'Add plan'}\n          title={'No plans found'}\n          message={\n            canWrite\n              ? 'Update the applied filters or add a new plan.'\n              : 'Update the applied filters.'\n          }\n          canAdd={canWrite}\n          path={`${pathname}/add`}\n        />\n      );\n\n    if (itemsIsSuccess && !(itemsIsLoading || deleteLoading))\n      return (\n        <Gallery\n          hasGutter\n          minWidths={{\n            sm: '307px',\n            md: '307px',\n            lg: '307px',\n            xl: '307px',\n            '2xl': '307px',\n          }}\n        >\n          {isSuccess &&\n            itemsIsSuccess &&\n            data.map((datum) => (\n              <PlanCard\n                key={datum.id}\n                isSuccess={itemsIsSuccess}\n                selected={selected}\n                plan={datum}\n                handleSelect={handleSelect}\n                canWrite={canWrite}\n                options={options}\n              />\n            ))}\n        </Gallery>\n      );\n\n    return null;\n  };\n\n  return (\n    <PageContainer>\n      <PageHeader>\n        <PageHeaderTitle title={'Savings Planner'} />\n        <FilterableToolbar\n          categories={combinedOptions}\n          filters={queryParams}\n          qsConfig={qsConfig}\n          setFilters={setFromToolbar}\n          additionalControls={[\n            ...(canWrite\n              ? [\n                  <Button\n                    key=\"add-plan-button\"\n                    variant=\"primary\"\n                    aria-label=\"Add plan\"\n                    onClick={() => {\n                      history.push({\n                        pathname: `${pathname}/add`,\n                      });\n                    }}\n                  >\n                    Add plan\n                  </Button>,\n                ]\n              : []),\n            canWrite && isSuccess && data.length > 0 && (\n              <ToolbarDeleteButton\n                key=\"delete-plan-button\"\n                onDelete={handleDelete}\n                itemsToDelete={selected}\n                pluralizedItemName={'Savings plan'}\n              />\n            ),\n          ]}\n          pagination={\n            itemsIsSuccess && data.length > 0 ? (\n              <Pagination\n                count={total_count}\n                params={{\n                  limit: +queryParams.limit,\n                  offset: +queryParams.offset,\n                }}\n                qsConfig={qsConfig}\n                setPagination={setFromPagination}\n                isCompact\n              />\n            ) : null\n          }\n        />\n      </PageHeader>\n      <FlexMain>{renderContent()}</FlexMain>\n      {data.length > 0 && !(itemsIsLoading || deleteLoading) && (\n        <Footer>\n          <Pagination\n            count={total_count}\n            params={{\n              limit: parseInt(queryParams.limit),\n              offset: parseInt(queryParams.offset),\n            }}\n            qsConfig={qsConfig}\n            setPagination={setFromPagination}\n            variant={PaginationVariant.bottom}\n          />\n        </Footer>\n      )}\n      {deletionError && (\n        <AlertModal\n          aria-label={'Deletion error'}\n          isOpen={deletionError}\n          onClose={clearDeletionError}\n          title={'Error'}\n          variant=\"error\"\n        >\n          {'Failed to delete one or more plans.'}\n          <ErrorDetail error={deletionError.detail} />\n        </AlertModal>\n      )}\n    </PageContainer>\n  );\n};\n\nexport default List;\n","import { useState } from 'react';\n\n/**\n * useSelected hook provides a way to read and update a selected list\n * Param: array of list items\n * Returns: {\n *  selected: array of selected list items\n *  isAllSelected: boolean that indicates if all items are selected\n *  handleSelect: function that adds and removes items from selected list\n *  setSelected: setter function\n * }\n */\n\nexport default function useSelected(list = []) {\n  const [selected, setSelected] = useState([]);\n  const isAllSelected = selected.length > 0 && selected.length === list.length;\n\n  const handleSelect = (row) => {\n    if (selected.some((s) => s.id === row.id)) {\n      setSelected((prevState) => [...prevState.filter((i) => i.id !== row.id)]);\n    } else {\n      setSelected((prevState) => [...prevState, row]);\n    }\n  };\n  return { selected, isAllSelected, handleSelect, setSelected };\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { Paths } from '../../paths';\nimport Add from './Add';\nimport Details from './Details';\nimport List from './List';\nexport var paths = {\n    get: \"\" + Paths.savingsPlanner,\n    add: Paths.savingsPlanner + \"/add\",\n    edit: Paths.savingsPlanner + \"/:id/edit\",\n    getEdit: function (id) { return Paths.savingsPlanner + \"/\" + id + \"/edit\"; },\n    details: Paths.savingsPlanner + \"/:id\",\n    getDetails: function (id) { return Paths.savingsPlanner + \"/\" + id; },\n};\nvar SavingsPlannerRouter = function () {\n    return (React.createElement(Switch, null,\n        React.createElement(Route, { exact: true, path: paths.get },\n            React.createElement(List, null)),\n        React.createElement(Route, { exact: true, path: paths.add },\n            React.createElement(Add, null)),\n        React.createElement(Route, { path: [paths.edit, paths.details] },\n            React.createElement(Details, null))));\n};\nexport default SavingsPlannerRouter;\n"],"sourceRoot":""}