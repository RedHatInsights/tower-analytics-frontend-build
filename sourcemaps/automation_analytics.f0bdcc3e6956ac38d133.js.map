{"version":3,"sources":["webpack:///./src/Api.js","webpack:///./src/Charts/BaseChart.js","webpack:///./src/Components/AlertModal/AlertModal.js","webpack:///./src/Components/ApiErrorState.js","webpack:///./src/Components/Breadcrumbs.js","webpack:///./src/Components/EmptyState.js","webpack:///./src/Components/ErrorDetail/ErrorDetail.js","webpack:///./src/Components/ErrorDetail/getErrorMessage.js","webpack:///./src/Components/LoadingState.js","webpack:///./src/Components/NoData.js","webpack:///./src/Components/NoResults.js","webpack:///./src/Components/Toolbar/constants.js","webpack:///./src/Components/Toolbar/Groups/CategoryDropdown.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/Select.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/helpers.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/Date.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/Text.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/index.js","webpack:///./src/Components/Toolbar/Groups/FiltersCategoriesGroup.js","webpack:///./src/Components/Toolbar/Groups/QuickDateGroup.js","webpack:///./src/Components/Toolbar/Groups/SortByGroup.js","webpack:///./src/Components/Toolbar/Groups/SettingsPanel.js","webpack:///./src/Components/Toolbar/Toolbar.js","webpack:///./src/Components/Toolbar/index.js","webpack:///./src/Charts/ROITopTemplates.js","webpack:///./src/Containers/AutomationCalculator/helpers.js","webpack:///./src/Containers/AutomationCalculator/TotalSavings.js","webpack:///./src/Containers/AutomationCalculator/CalculationCost.js","webpack:///./src/Containers/AutomationCalculator/AutomationFormula.js","webpack:///./src/Containers/AutomationCalculator/TopTemplates.js","webpack:///./src/Containers/AutomationCalculator/AutomationCalculator.js","webpack:///./src/Utilities/Tooltip.js","webpack:///./src/Charts/BarChart.js","webpack:///./src/Charts/LineChart.js","webpack:///./src/Components/ModulesList.js","webpack:///./src/Components/ModalContents.js","webpack:///./src/Components/TemplatesList.js","webpack:///./src/Containers/Clusters/Clusters.js","webpack:///./src/Components/JobStatus.js","webpack:///./src/Components/JobExplorerList.js","webpack:///./src/Containers/JobExplorer/JobExplorer.js","webpack:///./src/Components/NotificationsList.js","webpack:///./src/Containers/Notifications/Notifications.js","webpack:///./src/Utilities/Legend.js","webpack:///./src/Charts/GroupedBarChart/GroupedBarChart.js","webpack:///./src/Charts/GroupedBarChart/OrgsTooltip.js","webpack:///./src/Charts/GroupedBarChart/HostsTooltip.js","webpack:///./src/Charts/PieChart.js","webpack:///./src/Containers/OrganizationStatistics/OrganizationStatistics.js","webpack:///./src/Utilities/colors.ts","webpack:///./src/Containers/SavingsPlanner/Add/index.js","webpack:///./src/Components/CardActionsRow.js","webpack:///./src/Components/DeleteButton/DeleteButton.js","webpack:///./src/Components/RoutedTabs.js","webpack:///./src/Containers/SavingsPlanner/DetailsTab.js","webpack:///./src/Containers/SavingsPlanner/TotalSavings.tsx","webpack:///./src/Containers/SavingsPlanner/FormulaDescription.tsx","webpack:///./src/Containers/SavingsPlanner/StatisticsTab.tsx","webpack:///./src/Containers/SavingsPlanner/Edit/index.js","webpack:///./src/Containers/SavingsPlanner/SavingsPlan.js","webpack:///./src/Components/EmptyList.js","webpack:///./src/Containers/SavingsPlanner/PlanCard.js","webpack:///./src/Components/Toolbar/ToolbarDeleteButton.js","webpack:///./src/Containers/SavingsPlanner/SavingsPlanner.js","webpack:///./src/Utilities/useSelected.js","webpack:///./src/Containers/SavingsPlanner/Shared/constants.js","webpack:///./src/Containers/SavingsPlanner/Shared/usePlanData.js","webpack:///./src/Containers/SavingsPlanner/Shared/Details.js","webpack:///./src/Containers/SavingsPlanner/Shared/Tasks.js","webpack:///./src/Containers/SavingsPlanner/Shared/Templates.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Utilities/getRelatedResourceDeleteDetails.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Utilities/useApi.js","webpack:///./src/Utilities/useQueryParams.js","webpack:///./src/Utilities/useRedirect.js","webpack:///./src/Utilities/useRequest.js","webpack:///./src/Utilities/useIsMounted.js","webpack:////home/travis/build/RedHatInsights/tower-analytics-frontend/node_modules/moment/locale|sync|/^\\.\\/.*$/","webpack:///./src/Components/Pagination/Pagination.tsx","webpack:///./src/Components/Pagination/index.ts"],"names":["plansEndpoint","planEndpoint","handleResponse","response","json","then","ok","status","Promise","reject","message","error","authenticatedFetch","endpoint","options","window","insights","chrome","auth","getUser","fetch","preflightRequest","readJobExplorer","params","paginationParams","limit","offset","sort_by","qs","stringify","url","URL","location","origin","search","method","body","JSON","readEventExplorer","readROI","readHostExplorer","readPlans","createPlan","deletePlan","id","updatePlan","readPlan","readClustersOptions","readOrgOptions","readROIOptions","readPlanOptions","readClusters","readNotifications","Object","keys","forEach","key","searchParams","append","readJobExplorerOptions","initializeChart","Chart","BaseChart","props","margin","history","useHistory","getWidth","parseInt","d3","style","left","right","getHeight","top","bottom","propTypes","PropTypes","Header","styled","isOpen","title","label","variant","children","variantIcons","danger","size","css","info","success","warning","customHeader","Title","headingLevel","Modal","header","aria-label","aria-labelledby","Boolean","ApiErrorState","EmptyState","EmptyStateVariant","EmptyStateIcon","icon","ExclamationCircleIcon","color","globalDangerColor200","EmptyStateBody","Breadcrumbs","items","current","Breadcrumb","map","navigate","basePathNavigate","getBaseName","BreadcrumbItem","to","BreadcrumbHeading","defaultProps","DefaultEmptyState","preflightError","WrenchIcon","href","target","rel","Button","onClick","reload","Card","PFCard","CardBody","PFCardBody","Expandable","PFExpandable","ErrorDetail","useState","isExpanded","setIsExpanded","toggleText","onToggle","prototype","hasOwnProperty","call","data","detail","values","reduce","acc","currentValue","concat","getErrorMessage","Fragment","config","toUpperCase","Array","isArray","m","stack","Error","isRequired","CubesIcon","SearchIcon","optionsForCategories","type","isSingle","name","placeholder","hasChips","quick_date_range","start_date","end_date","job_type","org_id","cluster_id","template_id","sort_options","automation_status","frequency_period","category","inventory_id","CategoryDropdown","selected","setSelected","categories","ToolbarItem","Select","onSelect","_event","selection","selections","placeholderText","SelectOption","value","OptionSpan","renderValues","description","item","comparator","val","categoryKey","selectOptions","isVisible","setValue","expanded","setExpanded","ToolbarFilter","data-cy","showToolbarItem","chips","i","undefined","Number","isInteger","cmpItem","push","handleCheckboxChips","categoryName","deleteChip","_","valueToDelete","keyToDelete","find","filteredArr","filter","SelectVariant","includes","hasInlineFilter","onFilter","textInput","toLowerCase","maxHeight","Date","InputGroup","TextInput","onChange","Text","searchVal","setSearchVal","useEffect","components","select","date","text","ToolbarInput","SelectedInput","FilterCategoriesGroup","filterCategories","filters","setFilters","currentCategory","setCurrentCategory","ToolbarGroup","el","QuickDateGroup","e","SortByGroup","sort_order","SettingsPanel","settingsExpanded","setSettingsExpanded","isFlat","backgroundColor","CardHeader","CardActions","CardTitle","Switch","labelOff","isChecked","only_root_workflows_and_standalone_jobs","Tooltip","position","content","FilterableToolbar","pagination","hasSettings","additionalControls","hideQuickDateRange","hideSortOptions","restCategories","obj","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarContent","length","isActive","control","visibility","default","lg","d","savings","manualCost","automationCost","scrollLeftOffset","node","scrollLeft","x","svg","getBoundingClientRect","y","formatDollars","delta","automatedCost","toolTipWidth","toolTipBase","width","chartWidth","flipped","nameWidth","getComputedTextLength","savingsWidth","manualCostWidth","automationCostWidth","widestTextElem","adjustedWidth","maxTextPerc","boxWidth","overage","boundingBox","attr","toolTipPoint","interrupt","transition","delay","this","draw","amount","parseFloat","toFixed","toString","replace","slice","textWidthThreshold","TopTemplatesSavings","init","bind","resize","state","timeout","clearTimeout","setState","setTimeout","remove","ticks","height","rangeRound","padding","range","formatYAxisValue","xAxis","tickValues","yAxis","tickFormat","tickSize","taskNames","tooltip","domain","selectAll","bandwidth","enter","on","darker","handleMouseOver","handleMouseOut","addEventListener","removeEventListener","Component","BorderedCardTitle","TotalSavings","totalSavings","borderTop","paddingBottom","InputAndText","validFloat","floatValue","CalculationCost","costManual","setCostManual","costAutomation","setCostAutomation","InputGroupText","paddingTop","TemplateDetail","TemplateDetailSubTitle","TooltipWrapper","IconGroup","QuestionIconTooltip","details","Popover","bodyContent","k","capitalize","split","join","TopTemplates","sortBy","setDataRunTime","setEnabled","redirectToJobExplorer","overflow","flex","className","component","convertSecondsToMins","avgRunTime","minutes","convertMinsToSeconds","successful_hosts_total","trimmed","sortAttribute","showSortAttr","enabled","deselectedIds","setDeselectedIds","Wrapper","WrapperLeft","WrapperRight","filterDisabled","updateDeltaCost","convertSecondsToHours","successful_elapsed_total","calculateDelta","AutomationCalculator","toJobExplorer","useRedirect","useApi","preflight","setPreflight","setOptions","api","fetchApi","setDataInApi","useQueryParams","roiConst","queryParams","setFromToolbar","NotAuthorized","notAuthorizedParams","PageHeader","PageHeaderTitle","Main","isSuccess","isLoading","LoadingState","NoData","textAlign","paddingLeft","sum","curr","display","flexDirection","templateId","seconds","updatedData","setUnfilteredData","opts","fail","total","formatTooltipDate","RAN","FAIL","TOTAL","DATE","jobs","jobsWidth","failed","successful","successTextWidth","failTextWidth","circleSuccess","circleFail","failedIcon","successIcon","successText","failText","clickMore","colors","BarChart","formattedData","jobExplorer","Paths","formattedDate","formatDate","initialQueryParams","arrayFormat","pathname","parseTime","formatted","created_date","successful_count","failed_count","barTooltip","layers","order","maxTicks","Math","round","layer","_d","duration","ease","prevProps","LineChart","updateCluster","path","attrTween","tweenDash","l","getTotalLength","t","unformattedData","successLine","curve","failLine","defined","isNaN","vertical","handleMouseMove","intersectX","cx","baseVal","DataListCell","PFDataListCell","DataListItem","PFDataListItem","DataCellEnd","ModulesList","modules","DataList","background","border","module","index","host_task_count","trimStr","marginRight","PFDataListItemNoBorder","DataListItemCompact","DataListCellCompact","DataListFocus","DataCellEndCompact","ModalContents","successCount","totalCount","elapsed","selectedId","handleModal","qp","jobType","handleCloseBtn","relatedJobs","setRelatedJobs","stats","setStats","relatedTemplateJobsParams","attributes","group_by_time","agreggateTemplateParams","group_by","onClose","actions","total_count","toISOString","substr","ceil","formatAvgRun","most_failed_tasks","percentage","total_failed_count","task_name","formatTopFailedTask","most_failed_steps","template_name","formatTopFailedStep","Label","job","cluster_name","formatDateTime","started","formatSeconds","TemplatesList","templates","setSelectedId","isModalOpen","setIsModalOpen","displayJobType","initialTopTemplateParams","initialTopWorkflowParams","initialModuleParams","setPreFlightError","clusters","chartData","setData","setTemplates","workflows","setWorkflows","setModules","initialOptionsParams","optionsQueryParams","topTemplatesParams","topWorkflowParams","topModuleParams","initializeWithPreflight","marginTop","JobStatus","str","getColor","getIcon","charAt","headerLabels","ExternalLinkIcon","PFExternalLinkIcon","DataListCellHeader","DataListItemCells","PFDataListItemCells","DataListToggle","PFDataListToggle","mobileBreakpoint","AllJobsTemplate","innerWidth","windowWidth","setWindowWidth","onResize","ariaLabel","ariaLabelledBy","count","DataListItemRow","aria-controls","newExpanded","idx","indexOf","dataListCells","tower_link","fontWeight","org_name","formatJobType","DataListContent","isHidden","created","finished","buildListRow","JobExplorerList","labels","isCompact","JobExplorer","meta","setFromPagination","dispatch","appNavClick","secondaryNav","initialSearchParams","parse","parseBooleans","parseNumbers","updateURL","Pagination","setPagination","NoResults","PaginationVariant","ExternalLinkAltIcon","PFExternalLinkAltIcon","NotificationDrawerListItem","PFNotificationDrawerListItem","NotificationDrawerList","PFNotificationDrawerList","stringifyDate","day","moment","now","utc","isAfter","diff","isSame","valueOf","AllNotificationTemplate","notifications","notification_id","tower_url","NotificationDrawerListItemHeader","NotificationDrawerListItemBody","timestamp","ErrorNotificationTemplate","notification","NoticeNotificationTemplate","WarningNotificationTemplate","NotificationsList","filterBy","PFCardTitle","DropdownGroup","notificationOptions","disabled","formatClusterName","uuid","install_uuid","notificationsData","setNotificationsData","clusterOptions","setClusterOptions","selectedCluster","setSelectedCluster","firstRender","setFirstRender","setIsLoading","setMeta","setId","setSeverity","ignore","fetchEndpoints","all","p","clustersData","FormSelect","FormSelectOption","isDisabled","severity","NotificationDrawer","Container","LegendDetail","Color","SubTitle","Legend","chartName","some","pieces","GroupedBarChart","TooltipClass","legend","colorFunc","selectedIds","setSelectedIds","selectedOrgs","x0","x1","maxTicksOneMonth","maxTicksTwoMonths","dates","yLabel","exit","bars","merge","subEnter","moreDetail","endsWith","OrgsTooltip","orgName","HostsTooltip","perc","percSuccess","drawn","percent","success_rate","maxLength","percentageTotal","percentageSuccess","boundingBOx","showSuccess","boundingHeight","boundingWidth","PieChart","sort","a","b","radius","min","filteredData","getTotal","donutTooltip","pie","arc","outerRadius","innerRadius","classed","CardContainer","TopCard","scaleOrdinal","pieChartMapper","attrName","chartMapper","rest","dateForJobExplorer","OrganizationStatistics","activeTabKey","setActiveTabKey","orgs","setOrgs","setJobs","tasks","setTasks","constants","jobEventsByOrgParams","include_others","jobRunsByOrgParams","jobsByDateAndOrgParams","hostAcrossOrgParams","readJobsOrHosts","Tabs","activeKey","tabIndex","Tab","eventKey","marginLeft","canWrite","rbac","perms","write","Redirect","CardActionsWrapper","WarningMessage","Alert","DeleteButton","onConfirm","modalTitle","ouiaId","deleteMessage","deleteDetailsRequests","disabledTooltip","setIsOpen","deleteMessageError","setDeleteMessageError","deleteDetails","setDeleteDetails","toggleModal","getRelatedResourceDeleteCounts","results","AlertModal","spinnerAriaValueText","isInline","entries","Badge","RoutedTabs","tabsArray","defaultTabId","useLocation","tab","link","getActiveTabId","match","TabTitleText","role","arrayOf","shape","number","string","oneOfType","DetailsTab","plans","hosts","manual_time","modified","template_details","labelsAndValues","Name","Description","Frequency","Template","showTemplate","useRequest","useCallback","deletePlans","request","deleteError","relatedResourceDeleteRequests","isDeleteDisabled","result","deleteDetailsError","fetchDeleteDetails","useDismissableError","dismissError","DescriptionList","isHorizontal","columnModifier","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","Divider","TextContent","List","task","ListItem","CardFooter","_a","_b","_c","isMoney","isPlain","FormulaDescription","__assign","assign","s","n","arguments","apply","yearLabels","initial","year1","year2","year3","cost","benefit","net","setIsMoney","barChartData","charts","kind","parent","domainPadding","themeColor","cursor","stickToAxis","grid","stroke","axisLabel","barRatio","barWidth","fill","labelName","strokeWidth","functions","fetchFnc","resolve","year","total_costs","projections","monetary_stats","total_benefits","cumulative_net_benefits","total_hours_spent_risk_adjusted","time_stats","total_hours_saved","cumulative_time_net_benefits","response_type","getChartData","Grid","GridItem","span","ToggleGroup","ToggleGroupItem","buttonId","isSelected","schema","Edit","useParams","Form","pageTitle","breadcrumbUrl","breadcrumbsItems","Route","exact","SavingsPlanner","EmptyList","canAdd","AddCircleOIcon","CardLabel","PlanCard","template","plan","handleSelect","isCardKebabOpen","setIsCardKebabOpen","useRouteMatch","kebabDropDownItems","DropdownItem","isHoverable","CardHeaderMain","Link","Dropdown","toggle","KebabToggle","dropdownItems","Checkbox","row","requiredField","username","image","checkPropTypes","ItemToDelete","ToolbarDeleteButton","itemsToDelete","pluralizedItemName","errorMessage","onDelete","warningMessage","cannotDelete","deleteMessages","itemsUnableToDelete","shouldShowDeleteWarning","func","savingsPlanner","combinedOptions","list","isAllSelected","prevState","useSelected","useDeleteItems","qsConfig","allItemsSelected","fetchItems","deleteLoading","deletionError","deleteItems","clearDeletionError","handleDelete","Gallery","hasGutter","datum","isSticky","convertTasks","task_order","Details","formData","categoryIsOpen","setCategoryIsOpen","manualTimeIsOpen","setManualTimeIsOpen","frequencyPeriodIsOpen","setFrequencyPeriodIsOpen","md","FormGroup","fieldId","newName","newDescription","newHosts","TaskSection","TaskTitle","TaskDeleteButton","DeleteTaskActionSection","DataListAction","TaskRow","Tasks","taskToAdd","setTaskToAdd","liveText","setLiveText","appendTask","newTaskName","onKeyDown","preventDefault","onDragFinish","newItemOrder","onDragStart","newId","onDragMove","oldIndex","newIndex","onDragCancel","itemOrder","DataListControl","DataListDragButton","aria-describedby","aria-pressed","removeTask","aria-live","ListFooter","Templates","formDispatch","hash","queryParamsDispatch","TableComposable","Thead","Tr","Th","Tbody","Td","rowIndex","event","startStep","setStartStep","useReducer","requestPayload","hourly_rate","frequency_per_period","usePlanData","steps","step_number","nextButtonText","step","onStepChange","newStep","Wizard","navAriaLabel","mainAriaLabel","onGoToStep","onNext","onBack","onSave","startAtStep","defaultParams","roi","organizationStatistics","requests","hasCount","savingsPlan","readRecordApi","isNumeric","dateTime","format","startOf","mins","dataFetchReducer","action","payload","initialData","postprocess","setRequest","didCancel","initialWithCalculatedParams","startDate","endDate","newState","newValues","actionMapper","varName","setEndDate","setStartDate","days","subtract","setStartDateAsString","query","makeRequest","initialValue","setResult","setError","isMounted","useRef","useIsMounted","showError","setShowError","requestError","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","exports","perPageOptions","getOwnPropertySymbols","propertyIsEnumerable","__rest","currentPage","floor","returnOffsetVal","page","itemCount","widgetId","perPage","onPerPageSelect","onSetPage"],"mappings":"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","file":"js/automation_analytics.2b0cfe23f88c6f2fe587.js","sourcesContent":["import { stringify } from 'query-string';\n/* v0 endpoints */\nconst clustersEndpoint = `/api/tower-analytics/v0/clusters/`;\nconst notificationsEndpoint = `/api/tower-analytics/v0/notifications/`;\nconst preflightEndpoint = `/api/tower-analytics/v0/authorized/`;\n\n/* v1 endpoints */\nconst jobExplorerEndpoint = '/api/tower-analytics/v1/job_explorer/';\nconst hostExplorerEndpoint = '/api/tower-analytics/v1/host_explorer/';\nconst eventExplorerEndpoint = '/api/tower-analytics/v1/event_explorer/';\nconst ROIEndpoint = '/api/tower-analytics/v1/roi_templates/';\nconst plansEndpoint = '/api/tower-analytics/v1/plans/';\nconst planEndpoint = '/api/tower-analytics/v1/plan/';\n\n/* page options endpoints */\nconst jobExplorerOptionsEndpoint =\n  '/api/tower-analytics/v1/job_explorer_options/';\nconst ROITemplatesOptionsEndpoint =\n  '/api/tower-analytics/v1/roi_templates_options/';\nconst orgOptionsEndpoint =\n  '/api/tower-analytics/v1/dashboard_organization_statistics_options/';\nconst clustersOptionsEndpoint =\n  '/api/tower-analytics/v1/dashboard_clusters_options/';\nconst planOptionsEndpoint = '/api/tower-analytics/v1/plan_options/';\n\nfunction handleResponse(response) {\n  return response.json().then((json) => {\n    if (response.ok) {\n      return json;\n    }\n\n    if (response.status === 404 || response.status === 401) {\n      return Promise.reject({\n        status: response.status,\n        message: json,\n      });\n    } else if (response.status === 403) {\n      return Promise.reject({\n        status: response.status,\n        error: 'RBAC access denied',\n      });\n    } else {\n      return Promise.reject(json);\n    }\n  });\n}\n\nfunction authenticatedFetch(endpoint, options) {\n  return window.insights.chrome.auth\n    .getUser()\n    .then(() => fetch(endpoint, options));\n}\n\nexport const preflightRequest = () => {\n  return authenticatedFetch(preflightEndpoint).then(handleResponse);\n};\n\nexport const readJobExplorer = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(jobExplorerEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readEventExplorer = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(eventExplorerEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readROI = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(ROIEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readHostExplorer = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(hostExplorerEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readPlans = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(plansEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const createPlan = ({ params = {} }) => {\n  let url = new URL(planEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const deletePlan = ({ params = {} }) => {\n  let url = new URL(`${planEndpoint}${params.id}`, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'DELETE'\n  }).then(handleResponse);\n};\n\nexport const updatePlan = ({ id, params = {} }) => {\n  let url = new URL(`${planEndpoint}${id}`, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'PUT',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readPlan = ({ params = {} }) => {\n  let url = new URL(plansEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readClustersOptions = ({ params = {} }) => {\n  let url = new URL(clustersOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readOrgOptions = ({ params = {} }) => {\n  let url = new URL(orgOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readROIOptions = ({ params = {} }) => {\n  let url = new URL(ROITemplatesOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readPlanOptions = () => {\n  let url = new URL(planOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'GET',\n  }).then(handleResponse);\n};\n\n// v0 endpoints used in Notifications.js\nexport const readClusters = () => {\n  return authenticatedFetch(clustersEndpoint).then(handleResponse);\n};\n\nexport const readNotifications = ({ params = {} }) => {\n  let url = new URL(notificationsEndpoint, window.location.origin);\n  Object.keys(params).forEach((key) =>\n    url.searchParams.append(key, params[key])\n  );\n  return authenticatedFetch(url).then(handleResponse);\n};\n\nexport const readJobExplorerOptions = ({ params = {} }) => {\n  let url = new URL(jobExplorerOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nconst initializeChart = (Chart) => {\n  const BaseChart = (props) => {\n    const { id, margin } = props;\n\n    const getWidth = () => {\n      let width;\n      width =\n        parseInt(d3.select('#' + id).style('width')) -\n          margin.left -\n          margin.right || 700;\n      return width;\n    };\n\n    const getHeight = () => {\n      let height;\n      height =\n        parseInt(d3.select('#' + id).style('height')) -\n          margin.top -\n          margin.bottom || 450;\n      return height;\n    };\n\n    let history = useHistory();\n\n    return (\n      <Chart\n        {...props}\n        getWidth={getWidth}\n        getHeight={getHeight}\n        history={history}\n      />\n    );\n  };\n\n  BaseChart.propTypes = {\n    id: PropTypes.string,\n    margin: PropTypes.object,\n  };\n\n  return BaseChart;\n};\n\ninitializeChart.propTypes = {\n  Chart: PropTypes.element,\n};\n\nexport default initializeChart;\n","import React from 'react';\nimport { Modal, Title } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n  InfoCircleIcon,\n  TimesCircleIcon,\n} from '@patternfly/react-icons';\nimport styled from 'styled-components';\n\nconst Header = styled.div`\n  display: flex;\n  svg {\n    margin-right: 16px;\n  }\n`;\n\nfunction AlertModal({\n  isOpen = null,\n  title,\n  label,\n  variant,\n  children,\n  ...props\n}) {\n  const variantIcons = {\n    danger: (\n      <ExclamationCircleIcon\n        size=\"lg\"\n        css=\"color: var(--pf-global--danger-color--100)\"\n      />\n    ),\n    error: (\n      <TimesCircleIcon\n        size=\"lg\"\n        css=\"color: var(--pf-global--danger-color--100)\"\n      />\n    ),\n    info: (\n      <InfoCircleIcon\n        size=\"lg\"\n        css=\"color: var(--pf-global--info-color--100)\"\n      />\n    ),\n    success: (\n      <CheckCircleIcon\n        size=\"lg\"\n        css=\"color: var(--pf-global--success-color--100)\"\n      />\n    ),\n    warning: (\n      <ExclamationTriangleIcon\n        size=\"lg\"\n        css=\"color: var(--pf-global--warning-color--100)\"\n      />\n    ),\n  };\n\n  const customHeader = (\n    <Header>\n      {variant ? variantIcons[variant] : null}\n      <Title id=\"alert-modal-header-label\" size=\"2xl\" headingLevel=\"h2\">\n        {title}\n      </Title>\n    </Header>\n  );\n\n  return (\n    <Modal\n      header={customHeader}\n      aria-label={label || 'Alert modal'}\n      aria-labelledby=\"alert-modal-header-label\"\n      isOpen={Boolean(isOpen)}\n      variant=\"small\"\n      title={title}\n      {...props}\n    >\n      {children}\n    </Modal>\n  );\n}\n\nexport default AlertModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { global_danger_color_200 as globalDangerColor200 } from '@patternfly/react-tokens';\n\nconst ApiErrorState = ({ message }) => (\n  <EmptyState variant={EmptyStateVariant.small}>\n    <EmptyStateIcon\n      icon={ExclamationCircleIcon}\n      color={globalDangerColor200.value}\n    />\n    <Title headingLevel=\"h2\" size=\"lg\">\n      Error\n    </Title>\n    <EmptyStateBody>{message}</EmptyStateBody>\n  </EmptyState>\n);\n\nApiErrorState.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default ApiErrorState;\n","/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Breadcrumb, BreadcrumbItem, BreadcrumbHeading } from '@patternfly/react-core';\n\nimport getBaseName from '../Utilities/getBaseName';\n\nconst Breadcrumbs = ({items, current}) => {\n    return (\n        <Breadcrumb>\n            {items.map(({title, navigate}) => {\n                const basePathNavigate = getBaseName() + navigate;\n                return (<BreadcrumbItem key={title} to={basePathNavigate}>{title}</BreadcrumbItem>);\n            })}\n            {current && (<BreadcrumbHeading>{current}</BreadcrumbHeading>)}\n        </Breadcrumb>\n    );\n};\n\nBreadcrumbs.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n      navigate: PropTypes.any,\n      title: PropTypes.node\n  })),\n  current: PropTypes.node,\n};\n\nBreadcrumbs.defaultProps = {\n  items: [],\n  current: null,\n};\n\nexport default Breadcrumbs;\n","/*eslint max-len: [\"error\", { \"ignoreStrings\": true }]*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { WrenchIcon } from '@patternfly/react-icons';\n\nconst DefaultEmptyState = ({ preflightError: error }) => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={WrenchIcon} />\n    {error.status === 404 && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          No data found\n        </Title>\n        <EmptyStateBody>\n          Please visit{' '}\n          <a\n            href=\"https://docs.ansible.com/ansible-tower/latest/html/administration/usability_data_collection.html#automation-analytics\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            here\n          </a>{' '}\n          to learn how to enable Automation Analytics.\n        </EmptyStateBody>\n      </>\n    )}\n    {error.status === 401 && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          Not authorized\n        </Title>\n        <EmptyStateBody>\n          You do not have the correct permissions to view this page.\n        </EmptyStateBody>\n      </>\n    )}\n    {!error.status && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          Something went wrong, please try reloading the page\n        </Title>\n        <Button variant=\"primary\" onClick={() => window.location.reload()}>\n          Reload\n        </Button>\n      </>\n    )}\n  </EmptyState>\n);\n\nDefaultEmptyState.propTypes = {\n  preflightError: PropTypes.object,\n};\n\nexport default DefaultEmptyState;\n","import React, { useState, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Card as PFCard,\n  CardBody as PFCardBody,\n  ExpandableSection as PFExpandable,\n} from '@patternfly/react-core';\nimport getErrorMessage from './getErrorMessage';\n\nconst Card = styled(PFCard)`\n  background-color: var(--pf-global--BackgroundColor--200);\n  overflow-wrap: break-word;\n`;\n\nconst CardBody = styled(PFCardBody)`\n  max-height: 200px;\n  overflow: scroll;\n`;\n\nconst Expandable = styled(PFExpandable)`\n  text-align: left;\n\n  & .pf-c-expandable__toggle {\n    padding-left: 10px;\n    margin-left: 5px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n`;\n\nfunction ErrorDetail({ error }) {\n  const { response } = error;\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const handleToggle = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  const renderNetworkError = () => {\n    const message = getErrorMessage(response);\n\n    return (\n      <Fragment>\n        <CardBody>\n          {response?.config?.method.toUpperCase()} {response?.config?.url}{' '}\n          <strong>{response?.status}</strong>\n        </CardBody>\n        <CardBody>\n          {Array.isArray(message) ? (\n            <ul>\n              {message.map(m =>\n                typeof m === 'string' ? <li key={m}>{m}</li> : null\n              )}\n            </ul>\n          ) : (\n            message\n          )}\n        </CardBody>\n      </Fragment>\n    );\n  };\n\n  const renderStack = () => {\n    return <CardBody>{error.stack}</CardBody>;\n  };\n\n  return (\n    <Expandable\n      toggleText={'Details'}\n      onToggle={handleToggle}\n      isExpanded={isExpanded}\n    >\n      <Card>\n        {Object.prototype.hasOwnProperty.call(error, 'response')\n          ? renderNetworkError()\n          : renderStack()}\n      </Card>\n    </Expandable>\n  );\n}\n\nErrorDetail.propTypes = {\n  error: PropTypes.instanceOf(Error).isRequired,\n};\n\nexport default ErrorDetail;\n","export default function getErrorMessage(response) {\n  if (!response?.data) {\n    return null;\n  }\n  if (typeof response.data === 'string') {\n    return response.data;\n  }\n  if (response.data.detail) {\n    return response.data.detail;\n  }\n  return Object.values(response.data).reduce(\n    (acc, currentValue) => acc.concat(currentValue),\n    []\n  );\n}\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst DefaultLoadingState = () => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={CubesIcon} />\n    <Title headingLevel=\"h5\" size=\"lg\">\n      Loading...\n    </Title>\n    <EmptyStateBody>Please wait.</EmptyStateBody>\n  </EmptyState>\n);\n\nexport default DefaultLoadingState;\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst NoData = () => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={CubesIcon} />\n    <Title headingLevel=\"h5\" size=\"lg\">\n      No Data\n    </Title>\n  </EmptyState>\n);\n\nexport default NoData;\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst NoResults = () => {\n  return (\n    <EmptyState variant={EmptyStateVariant.full}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title size=\"lg\" headingLevel=\"h4\">\n        No results found\n      </Title>\n      <EmptyStateBody>\n        No results match the filter criteria. Remove all filters or clear all\n        filters to show results.\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n\nexport default NoResults;\n","export const optionsForCategories = {\n  status: {\n    type: 'select',\n    isSingle: false,\n    name: 'Status',\n    placeholder: 'Filter by job status',\n    hasChips: true,\n  },\n  quick_date_range: {\n    type: 'select',\n    isSingle: true,\n    name: 'Date',\n    placeholder: 'Filter by date',\n    hasChips: false,\n  },\n  start_date: {\n    type: 'date',\n    name: 'Start date',\n    hasChips: false,\n  },\n  end_date: {\n    type: 'date',\n    name: 'End date',\n    hasChips: false,\n  },\n  job_type: {\n    type: 'select',\n    isSingle: false,\n    name: 'Job',\n    placeholder: 'Filter by job type',\n    hasChips: true,\n  },\n  org_id: {\n    type: 'select',\n    isSingle: false,\n    name: 'Organization',\n    placeholder: 'Filter by organization',\n    hasChips: true,\n  },\n  cluster_id: {\n    type: 'select',\n    isSingle: false,\n    name: 'Cluster',\n    placeholder: 'Filter by cluster',\n    hasChips: true,\n  },\n  template_id: {\n    type: 'select',\n    isSingle: false,\n    name: 'Template',\n    placeholder: 'Filter by template',\n    hasChips: true,\n  },\n  sort_options: {\n    type: 'select',\n    isSingle: true,\n    name: 'Sort by',\n    placeholder: 'Sort by attribute',\n    hasChips: false,\n  },\n  automation_status: {\n    type: 'select',\n    isSingle: false,\n    name: 'Automation status',\n    placeholder: 'Filter by automation status',\n    hasChips: true,\n  },\n  frequency_period: {\n    type: 'select',\n    isSingle: false,\n    name: 'Frequency',\n    placeholder: 'Filter by frequency',\n    hasChips: true,\n  },\n  category: {\n    type: 'select',\n    isSingle: false,\n    name: 'Category',\n    placeholder: 'Filter by category',\n    hasChips: true,\n  },\n  inventory_id: {\n    type: 'select',\n    isSingle: false,\n    name: 'Inventory',\n    placeholder: 'Filter by inventory',\n    hasChips: true,\n  },\n  name: {\n    type: 'text',\n    name: 'Search by name',\n    hasChips: true,\n  },\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarItem, Select, SelectOption } from '@patternfly/react-core';\n\nconst CategoryDropdown = ({\n  selected,\n  setSelected = () => {},\n  categories = [],\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <ToolbarItem>\n      <Select\n        isOpen={isExpanded}\n        variant={'single'}\n        aria-label={'Categories'}\n        onToggle={() => setIsExpanded(!isExpanded)}\n        onSelect={(_event, selection) => {\n          setSelected(selection);\n          setIsExpanded(false);\n        }}\n        selections={selected}\n        placeholderText={'Filter by'}\n      >\n        {categories.map(({ key, name }) => (\n          <SelectOption key={key} value={key}>\n            {name}\n          </SelectOption>\n        ))}\n      </Select>\n    </ToolbarItem>\n  );\n};\n\nCategoryDropdown.propTypes = {\n  categories: PropTypes.array,\n  selected: PropTypes.string,\n  setSelected: PropTypes.func,\n};\n\nexport default CategoryDropdown;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ToolbarFilter,\n  Select as PFSelect,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\n\nimport { handleCheckboxChips, handleSingleChips } from './helpers';\nimport { optionsForCategories } from '../../constants';\nimport styled from 'styled-components';\n\nconst OptionSpan = styled('span')`\n  display: block;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n  max-width: 300px;\n`;\n\nconst renderValues = (values) =>\n  values &&\n  values.map(({ key, value, description }) => (\n    <SelectOption key={key} value={key} description={description}>\n      <OptionSpan>{value}</OptionSpan>\n    </SelectOption>\n  ));\n\nconst Select = ({\n  categoryKey,\n  value,\n  selectOptions,\n  isVisible = true,\n  setValue,\n}) => {\n  const [expanded, setExpanded] = useState(false);\n  const options = optionsForCategories[categoryKey];\n\n  const onDelete = (_, valueToDelete) => {\n    const single = optionsForCategories[categoryKey].isSingle;\n\n    if (single) {\n      setValue(null);\n    } else {\n      const keyToDelete = selectOptions.find(\n        ({ value }) => value === valueToDelete\n      ).key;\n      const filteredArr = value.filter((value) => value !== keyToDelete);\n      setValue(filteredArr);\n    }\n  };\n\n  const onFilter = (_, textInput) => {\n    if (textInput === '') {\n      return renderValues(selectOptions);\n    } else {\n      return renderValues(\n        selectOptions.filter(({ value }) =>\n          value.toLowerCase().includes(textInput.toLowerCase())\n        )\n      );\n    }\n  };\n\n  const handleChips = () => {\n    if (options.isSingle) {\n      return handleSingleChips(value, selectOptions);\n    } else {\n      return handleCheckboxChips(value, selectOptions);\n    }\n  };\n\n  const onSelect = (_, selection) => {\n    if (options.isSingle) {\n      setValue(selection);\n      setExpanded(false);\n    } else {\n      setValue(\n        !value.includes(selection)\n          ? [...value, selection]\n          : value.filter((value) => value !== selection)\n      );\n    }\n  };\n\n  return (\n    <ToolbarFilter\n      data-cy={categoryKey}\n      key={categoryKey}\n      showToolbarItem={isVisible}\n      chips={options.hasChips ? handleChips() : []}\n      categoryName={options.name}\n      deleteChip={options.hasChips ? onDelete : null}\n    >\n      <PFSelect\n        variant={\n          options.isSingle ? SelectVariant.single : SelectVariant.checkbox\n        }\n        aria-label={options.name}\n        onToggle={() => setExpanded(!expanded)}\n        onSelect={onSelect}\n        selections={value}\n        isOpen={expanded}\n        hasInlineFilter\n        placeholderText={options.placeholder}\n        onFilter={onFilter}\n        maxHeight={'1000%'}\n      >\n        {renderValues(selectOptions)}\n      </PFSelect>\n    </ToolbarFilter>\n  );\n};\n\nSelect.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]).isRequired,\n  selectOptions: PropTypes.array,\n  isVisible: PropTypes.bool,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default Select;\n","/**\n * Get comparator values if their key is in the item list\n */\nexport const handleCheckboxChips = (item, comparator) => {\n  if (item && comparator) {\n    return item.reduce((acc, i) => {\n      Number.isInteger(parseInt(i)) ? (i = parseInt(i)) : i;\n\n      comparator.forEach((cmpItem) => {\n        if (cmpItem.key === i) {\n          acc.push(cmpItem.value);\n        }\n      });\n\n      return acc;\n    }, []);\n  }\n\n  return [];\n};\n\n/**\n * Convert a list of objects to a list of the last value if defined\n */\nexport const handleSingleChips = (item, comparator) => {\n  if (item && typeof item === 'string' && comparator) {\n    let val;\n    comparator.forEach((i) => {\n      if (i.key === item) {\n        val = i.value;\n      }\n    });\n\n    if (val !== undefined) {\n      return [val];\n    }\n  }\n\n  return [];\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, TextInput } from '@patternfly/react-core';\nimport { optionsForCategories } from '../../constants';\n\nconst Date = ({ categoryKey, value = '', setValue = () => {} }) => {\n  const options = optionsForCategories[categoryKey];\n\n  return (\n    <InputGroup>\n      <TextInput\n        type=\"date\"\n        aria-label={options.name}\n        value={value}\n        onChange={setValue}\n      />\n    </InputGroup>\n  );\n};\n\nDate.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default Date;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ToolbarFilter,\n  TextInput,\n  InputGroup,\n  Button,\n} from '@patternfly/react-core';\n\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { optionsForCategories } from '../../constants';\n\nconst Text = ({ categoryKey, isVisible = true, value = '', setValue }) => {\n  const [searchVal, setSearchVal] = useState(value);\n  const options = optionsForCategories[categoryKey];\n\n  const onDelete = () => {\n    setValue('');\n  };\n\n  const handleChips = () => {\n    return value ? [value] : [];\n  };\n\n  useEffect(() => {\n    setSearchVal(value);\n  }, [value]);\n\n  return (\n    <ToolbarFilter\n      data-cy={categoryKey}\n      key={categoryKey}\n      showToolbarItem={isVisible}\n      chips={options.hasChips ? handleChips() : []}\n      categoryName={options.name}\n      deleteChip={options.hasChips ? onDelete : null}\n    >\n      <InputGroup>\n        <TextInput\n          type=\"search\"\n          aria-label={options.name}\n          value={searchVal}\n          onChange={setSearchVal}\n        />\n        <Button\n          variant=\"control\"\n          aria-label={`Search button for ${options.name}`}\n          onClick={() => {\n            setValue(searchVal);\n          }}\n        >\n          <SearchIcon />\n        </Button>\n      </InputGroup>\n    </ToolbarFilter>\n  );\n};\n\nText.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.any,\n  isVisible: PropTypes.bool,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default Text;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Select from './Select';\nimport Date from './Date';\nimport Text from './Text';\nimport { optionsForCategories } from '../../constants';\n\nconst components = {\n  select: Select,\n  date: Date,\n  text: Text,\n};\n\nconst ToolbarInput = ({\n  categoryKey,\n  value,\n  selectOptions,\n  isVisible = true,\n  setValue,\n}) => {\n  const options = optionsForCategories[categoryKey];\n  const SelectedInput = components[options.type];\n\n  const defaultValue = () => {\n    if (value) {\n      return value;\n    } else if (options.type !== 'select') {\n      return '';\n    } else if (options.isSingle) {\n      return '';\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <SelectedInput\n      categoryKey={categoryKey}\n      value={defaultValue()}\n      selectOptions={selectOptions}\n      isVisible={isVisible}\n      setValue={setValue}\n    />\n  );\n};\n\nToolbarInput.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  selectOptions: PropTypes.array,\n  isVisible: PropTypes.bool,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default ToolbarInput;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarGroup } from '@patternfly/react-core';\n\nimport CategoryDropdown from './CategoryDropdown';\nimport ToolbarInput from './ToolbarInput/';\nimport { optionsForCategories } from '../constants';\n\nconst FilterCategoriesGroup = ({ filterCategories, filters, setFilters }) => {\n  const [currentCategory, setCurrentCategory] = useState(\n    Object.keys(filterCategories)[0]\n  );\n\n  return (\n    <ToolbarGroup variant=\"filter-group\">\n      <CategoryDropdown\n        selected={currentCategory}\n        setSelected={setCurrentCategory}\n        categories={Object.keys(filterCategories).map((el) => ({\n          key: el,\n          name: optionsForCategories[el].name,\n        }))}\n      />\n      {Object.keys(filterCategories).map((key) => (\n        <ToolbarInput\n          key={key}\n          categoryKey={key}\n          value={filters[key]}\n          selectOptions={filterCategories[key]}\n          isVisible={currentCategory === key}\n          setValue={(value) => setFilters(key, value)}\n        />\n      ))}\n    </ToolbarGroup>\n  );\n};\n\nFilterCategoriesGroup.propTypes = {\n  filterCategories: PropTypes.object.isRequired,\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n};\n\nexport default FilterCategoriesGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarGroup } from '@patternfly/react-core';\n\nimport ToolbarInput from './ToolbarInput/';\n\nconst QuickDateGroup = ({ filters, setFilters, values }) => (\n  <ToolbarGroup variant=\"filter-group\">\n    <ToolbarInput\n      categoryKey=\"quick_date_range\"\n      value={filters.quick_date_range}\n      selectOptions={values}\n      setValue={(value) => setFilters('quick_date_range', value)}\n    />\n    {filters.quick_date_range && filters.quick_date_range.includes('custom') && (\n      <>\n        <ToolbarInput\n          categoryKey=\"start_date\"\n          value={filters.start_date}\n          setValue={(e) => setFilters('start_date', e)}\n        />\n        <ToolbarInput\n          categoryKey=\"end_date\"\n          value={filters.end_date}\n          setValue={(e) => setFilters('end_date', e)}\n        />\n      </>\n    )}\n  </ToolbarGroup>\n);\n\nQuickDateGroup.propTypes = {\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  values: PropTypes.array.isRequired,\n};\n\nexport default QuickDateGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarGroup, Button } from '@patternfly/react-core';\nimport { SortAmountDownIcon, SortAmountUpIcon } from '@patternfly/react-icons';\n\nimport ToolbarInput from './ToolbarInput';\n\nconst SortByGroup = ({ filters, setFilters, sort_options }) => (\n  <ToolbarGroup variant=\"filter-group\">\n    <ToolbarInput\n      categoryKey=\"sort_options\"\n      value={filters.sort_options}\n      selectOptions={sort_options}\n      setValue={(value) => setFilters('sort_options', value)}\n    />\n    <Button\n      variant=\"control\"\n      onClick={() =>\n        setFilters('sort_order', filters.sort_order === 'asc' ? 'desc' : 'asc')\n      }\n    >\n      {filters.sort_order === 'asc' && <SortAmountUpIcon />}\n      {filters.sort_order === 'desc' && <SortAmountDownIcon />}\n    </Button>\n  </ToolbarGroup>\n);\n\nSortByGroup.propTypes = {\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  sort_options: PropTypes.array.isRequired,\n};\n\nexport default SortByGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, Switch } from '@patternfly/react-core';\nimport {\n  Card,\n  CardTitle,\n  CardBody,\n  CardActions,\n  CardHeader,\n} from '@patternfly/react-core';\nimport { QuestionCircleIcon, TimesIcon } from '@patternfly/react-icons';\n\n/* TODO: For future work: make settings more modular for different pages */\nconst SettingsPanel = ({\n  filters,\n  setFilters,\n  settingsExpanded,\n  setSettingsExpanded,\n}) => (\n  <Card isFlat style={{ backgroundColor: '#EEEEEE' }}>\n    <CardHeader>\n      <CardActions>\n        <Button\n          variant=\"plain\"\n          onClick={() => setSettingsExpanded(!settingsExpanded)}\n        >\n          <TimesIcon />\n        </Button>\n      </CardActions>\n      <CardTitle>Settings</CardTitle>\n    </CardHeader>\n    <CardBody>\n      <Switch\n        id=\"showRootWorkflowJobs\"\n        label=\"Ignore nested workflows and jobs\"\n        labelOff=\"Ignore nested workflows and jobs\"\n        isChecked={filters.only_root_workflows_and_standalone_jobs}\n        onChange={(val) => {\n          setFilters('only_root_workflows_and_standalone_jobs', val);\n        }}\n      />\n      <Tooltip\n        position={'top'}\n        content={\n          <div>\n            {' '}\n            If enabled, nested workflows and jobs will not be included in the\n            overall totals. Enable this option to filter out duplicate entries.\n          </div>\n        }\n      >\n        <QuestionCircleIcon />\n      </Tooltip>\n    </CardBody>\n  </Card>\n);\n\nSettingsPanel.propTypes = {\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  settingsExpanded: PropTypes.bool.isRequired,\n  setSettingsExpanded: PropTypes.func.isRequired,\n};\n\nexport default SettingsPanel;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  Button,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { FilterIcon, CogIcon } from '@patternfly/react-icons';\n\nimport { optionsForCategories } from './constants';\nimport {\n  FilterCategoriesGroup,\n  QuickDateGroup,\n  SortByGroup,\n  SettingsPanel,\n} from './Groups/';\n\nconst FilterableToolbar = ({\n  categories,\n  filters,\n  setFilters,\n  pagination = null,\n  hasSettings = false,\n  additionalControls = [],\n  hideQuickDateRange = false,\n  hideSortOptions = false,\n}) => {\n  const [settingsExpanded, setSettingsExpanded] = useState(false);\n  const { quick_date_range, sort_options, ...restCategories } = categories;\n\n  // Filter out elements which are not in the option object.\n  const filterCategories = Object.keys(restCategories)\n    .filter((key) => Object.keys(optionsForCategories).includes(key))\n    .reduce((obj, key) => {\n      obj[key] = restCategories[key];\n      return obj;\n    }, {});\n\n  return (\n    <>\n      <Toolbar\n        id=\"filterable-toolbar-with-chip-groups\"\n        clearAllFilters={() => {\n          setFilters(null, null);\n        }}\n        collapseListedFiltersBreakpoint=\"xl\"\n      >\n        <ToolbarContent>\n          <Button variant=\"control\">\n            <FilterIcon />\n          </Button>\n          {Object.keys(filterCategories).length > 0 && (\n            <FilterCategoriesGroup\n              filterCategories={filterCategories}\n              filters={filters}\n              setFilters={setFilters}\n            />\n          )}\n          {!hideQuickDateRange && quick_date_range && (\n            <QuickDateGroup\n              filters={filters}\n              setFilters={setFilters}\n              values={quick_date_range}\n            />\n          )}\n          {!hideSortOptions && sort_options && (\n            <SortByGroup\n              filters={filters}\n              setFilters={setFilters}\n              sort_options={sort_options}\n            />\n          )}\n          {hasSettings && (\n            <ToolbarItem>\n              <Button\n                variant=\"plain\"\n                onClick={() => setSettingsExpanded(!settingsExpanded)}\n                aria-label=\"settings\"\n                isActive={settingsExpanded}\n              >\n                <CogIcon />\n              </Button>\n            </ToolbarItem>\n          )}\n          {additionalControls.length > 0 && (\n            <ToolbarGroup>\n              {additionalControls.map((control) => (\n                <ToolbarItem key={control.key}>{control}</ToolbarItem>\n              ))}\n            </ToolbarGroup>\n          )}\n          {pagination && (\n            <ToolbarItem\n              variant=\"pagination\"\n              visibility={{ default: 'hidden', lg: 'visible' }}\n            >\n              {pagination}\n            </ToolbarItem>\n          )}\n        </ToolbarContent>\n        {settingsExpanded && (\n          <SettingsPanel\n            filters={filters}\n            setFilters={setFilters}\n            settingsExpanded={settingsExpanded}\n            setSettingsExpanded={setSettingsExpanded}\n          />\n        )}\n      </Toolbar>\n    </>\n  );\n};\n\nFilterableToolbar.propTypes = {\n  categories: PropTypes.object.isRequired,\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  pagination: PropTypes.object,\n  hasSettings: PropTypes.bool,\n  additionalControls: PropTypes.array,\n  hideSortOptions: PropTypes.bool,\n  hideQuickDateRange: PropTypes.bool,\n};\n\nexport default FilterableToolbar;\n","import Toolbar from './Toolbar';\nexport default Toolbar;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\n\nclass Tooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  formatDollars(amount) {\n    return parseFloat(amount)\n      .toFixed(2)\n      .toString()\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip-base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, 0) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', 92)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.name = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', -2)\n      .text('Template name');\n    this.savings = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 52)\n      .attr('font-size', 12)\n      .attr('font-weight', 'bold')\n      .attr('fill', 'white')\n      .text('Total savings $0');\n    this.manualCost = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', 16)\n      .text('Manual cost $0');\n    this.automationCost = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', 34)\n      .text('Automation cost $0');\n  }\n\n  handleMouseOver = (d) => {\n    let name;\n    let savings;\n    let manualCost;\n    let automationCost;\n    const scrollLeftOffset = d3.select('#d3-roi-chart-root').node().scrollLeft;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10 +\n      scrollLeftOffset;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      30;\n    if (!d) {\n      return;\n    } else {\n      savings = this.formatDollars(d.delta);\n      name = d.name;\n      manualCost = this.formatDollars(d.manualCost);\n      automationCost = this.formatDollars(d.automatedCost);\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n    this.name.text('' + name);\n    this.savings.text('Total savings $' + savings);\n    this.manualCost.text('Manual Cost $' + manualCost);\n    this.automationCost.text('Automation Cost $' + automationCost);\n    this.nameWidth = this.name.node().getComputedTextLength();\n    this.savingsWidth = this.savings.node().getComputedTextLength();\n    this.manualCostWidth = this.manualCost.node().getComputedTextLength();\n    this.automationCostWidth = this.automationCost\n      .node()\n      .getComputedTextLength();\n    this.widestTextElem = d3.max([\n      this.nameWidth,\n      this.savingsWidth,\n      this.automationCostWidth,\n      this.manualCostWidth,\n    ]);\n\n    const maxTextPerc = (this.widestTextElem / this.boxWidth) * 100;\n    const threshold = 85;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 15) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.name.attr('x', -(toolTipWidth - 7));\n      this.savings.attr('x', -(toolTipWidth - 7));\n      this.manualCost.attr('x', -(toolTipWidth - 7));\n      this.automationCost.attr('x', -(toolTipWidth - 7));\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 15) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.name.attr('x', 20);\n      this.savings.attr('x', 20);\n      this.manualCost.attr('x', 20);\n      this.automationCost.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass TopTemplatesSavings extends Component {\n  constructor(props) {\n    super(props);\n    this.init = this.init.bind(this);\n    this.draw = this.draw.bind(this);\n    this.resize = this.resize.bind(this);\n    this.state = {\n      timeout: null,\n    };\n  }\n\n  // Methods\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  init() {\n    this.draw();\n  }\n\n  draw() {\n    // Use PF chart color\n    const color = '#0066CC'; //blue\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const { data } = this.props;\n    let width;\n    // adjust chart width to support larger datasets\n    if (data.length >= 15) {\n      const containerWidth = d3.select('.automation-wrapper').node();\n      width =\n        containerWidth.getBoundingClientRect().width -\n        this.props.margin.left -\n        this.props.margin.right;\n    } else {\n      width = this.props.getWidth();\n    }\n\n    const height = this.props.getHeight();\n    const x = d3.scaleBand().rangeRound([0, width]).padding(0.45);\n    const y = d3.scaleLinear().range([height, 0]);\n    // format our X Axis ticks\n    let ticks;\n    ticks = data.map((d) => d.name);\n    const formatYAxisValue = d3.format('.2s');\n    const xAxis = d3.axisBottom(x).tickValues(ticks);\n\n    const yAxis = d3\n      .axisLeft(y)\n      .ticks(8)\n      .tickFormat((d) => formatYAxisValue(d).replace('G', 'B'))\n      .tickSize(-width, 0, 0);\n\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n\n    const taskNames = data.map((d) => d.name);\n    const tooltip = new Tooltip({\n      svg: '#' + this.props.id,\n    });\n    x.domain(taskNames);\n    y.domain([0, d3.max(data, (d) => d.delta * 1.15) || 8]);\n\n    // add y axis\n    svg\n      .append('g')\n      .attr('class', 'y axis')\n      .call(yAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7')\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 6)\n      .attr('dy', '.71em')\n      .style('text-anchor', 'end')\n      .style('font-weight', 'bold')\n      .text('Value');\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Savings per template ($)');\n\n    // add x axis\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n      .selectAll('text')\n      .style('text-anchor', 'start')\n      .attr('dx', '0.75em')\n      .attr('dy', -x.bandwidth() / 1.45 - 8)\n      .attr('transform', 'rotate(-90)');\n\n    svg.selectAll('.x-axis line').attr('stroke', 'transparent');\n\n    svg\n      .selectAll('.bar')\n      .data(data)\n      .enter()\n      .append('rect')\n      .attr('x', (d) => x(d.name))\n      .attr('width', x.bandwidth())\n      .attr('y', (d) => y(d.delta))\n      .style('fill', () => color)\n      .attr('height', (d) => height - y(d.delta))\n      .on('mouseover', function (d) {\n        d3.select(this).style('fill', d3.rgb(color).darker(1));\n        tooltip.handleMouseOver(d);\n      })\n      .on('mousemove', tooltip.handleMouseOver)\n      .on('mouseout', function () {\n        d3.select(this).style('fill', color);\n        tooltip.handleMouseOut();\n      });\n  }\n\n  componentDidMount() {\n    this.init();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate() {\n    this.init();\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nTopTemplatesSavings.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n};\n\nexport default initializeChart(TopTemplatesSavings);\n","import styled from 'styled-components';\nimport { CardTitle } from '@patternfly/react-core';\n\nexport const BorderedCardTitle = styled(CardTitle)`\n  border-bottom: 1px solid #d7d7d7;\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle, Title } from '@patternfly/react-core';\n\nconst floatToStringWithCommas = (total) =>\n  total\n    .toFixed(2)\n    .toString()\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\nconst TotalSavings = ({ totalSavings = 0 }) => (\n  <Card style={{ borderTop: '3px solid #2B9AF3' }}>\n    <CardTitle style={{ paddingBottom: '0' }}>Total savings</CardTitle>\n    <CardBody>\n      <Title\n        headingLevel=\"h3\"\n        size=\"4xl\"\n        style={{ color: 'var(--pf-global--success-color--200)' }}\n      >\n        {floatToStringWithCommas(totalSavings)}\n      </Title>\n    </CardBody>\n  </Card>\n);\n\nTotalSavings.propTypes = {\n  totalSavings: PropTypes.number,\n};\n\nexport default TotalSavings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Card,\n  CardBody,\n  InputGroup,\n  InputGroupText,\n  TextInput,\n} from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst validFloat = (value) => {\n  const floatValue = parseFloat(value);\n  return floatValue && floatValue >= 0 ? value : '';\n};\n\nconst CalculationCost = ({\n  costManual = '0',\n  setCostManual = () => {},\n  costAutomation = '0',\n  setCostAutomation = () => {},\n}) => (\n  <Card>\n    <CardTitle>Calculate your automation</CardTitle>\n    <CardBody>\n      <InputAndText>\n        <p>Manual cost of automation</p>\n        <em style={{ color: 'var(--pf-global--Color--dark-200)' }}>\n          (e.g. average salary of mid-level Software Engineer)\n        </em>\n        <InputGroup style={{ width: '50%' }}>\n          <InputGroupText>\n            <DollarSignIcon />\n          </InputGroupText>\n          <TextInput\n            id=\"manual-cost\"\n            type=\"number\"\n            aria-label=\"manual-cost\"\n            value={costManual}\n            onChange={(e) => setCostManual(validFloat(e))}\n          />\n          <InputGroupText>/hr</InputGroupText>\n        </InputGroup>\n      </InputAndText>\n      <InputAndText style={{ paddingTop: '10px' }}>\n        <p>Automated process cost</p>\n        <InputGroup style={{ width: '50%' }}>\n          <InputGroupText>\n            <DollarSignIcon />\n          </InputGroupText>\n          <TextInput\n            id=\"automation-cost\"\n            type=\"number\"\n            aria-label=\"automation-cost\"\n            value={costAutomation}\n            onChange={(e) => setCostAutomation(validFloat(e))}\n          />\n          <InputGroupText>/hr</InputGroupText>\n        </InputGroup>\n      </InputAndText>\n    </CardBody>\n  </Card>\n);\n\nCalculationCost.propTypes = {\n  costManual: PropTypes.string,\n  setCostManual: PropTypes.func,\n  costAutomation: PropTypes.string,\n  setCostAutomation: PropTypes.func,\n};\n\nexport default CalculationCost;\n","import React from 'react';\n\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst AutomationFormula = () => (\n  <Card style={{ height: '100%' }}>\n    <CardTitle>Automation formula</CardTitle>\n    <CardBody>\n      <p>\n        <b>Manual cost for template x</b> =\n        <em>\n          (time for a manual run on one host in hours * (sum of all hosts across\n          all job runs) ) * cost per hour\n        </em>\n      </p>\n      <p>\n        <b>Automation cost for template x</b> =\n        <em>\n          cost of automation per hour * sum of total elapsed hours for a\n          template\n        </em>\n      </p>\n      <p>\n        <b>Savings</b> =\n        <em>Sum of (manual cost - automation cost) across all templates</em>\n      </p>\n    </CardBody>\n  </Card>\n);\n\nexport default AutomationFormula;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  InputGroup,\n  InputGroupText,\n  TextInput,\n  Tooltip,\n  Popover,\n} from '@patternfly/react-core';\nimport {\n  InfoCircleIcon,\n  ToggleOnIcon,\n  ToggleOffIcon,\n} from '@patternfly/react-icons';\n\nimport {\n  convertSecondsToMins,\n  convertMinsToSeconds,\n  capitalize,\n} from '../../Utilities/helpers';\n\nconst TemplateDetail = styled.div`\n  em {\n    display: block;\n    padding: 5px 0;\n  }\n\n  @media (max-width: 1490px) {\n    display: block;\n\n    em {\n      padding: 10px 0;\n      display: block;\n    }\n  }\n`;\n\nconst TemplateDetailSubTitle = styled.em`\n  color: var(--pf-global--Color--dark-200);\n`;\n\nconst TooltipWrapper = styled.div`\n  p {\n    text-align: left;\n  }\n`;\n\nconst IconGroup = styled.div`\n  & svg {\n    fill: var(--pf-global--Color--dark-200);\n\n    :hover {\n      cursor: pointer;\n    }\n\n    :first-of-type {\n      margin-right: 10px;\n      margin-left: 10px;\n\n      @media (max-width: 1350px) {\n        margin-left: 0;\n      }\n    }\n  }\n`;\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst showSortAttr = (details, sortBy) => {\n  const trimmed = sortBy.split(':')[0];\n  const sortAttribute = Object.keys(details).map((k) =>\n    k === trimmed ? `${details[k]}` : null\n  );\n\n  return (\n    <TemplateDetailSubTitle>\n      {capitalize(trimmed.split('_').join(' '))}: {sortAttribute}\n    </TemplateDetailSubTitle>\n  );\n};\n\nconst QuestionIconTooltip = ({ details }) => (\n  <Popover\n    aria-label=\"template detail popover\"\n    position=\"left\"\n    bodyContent={\n      <TooltipWrapper>\n        {Object.keys(details).map((k, i) => (\n          <p key={i}>\n            <b>{capitalize(k.split('_').join(' '))}</b>: {details[k]}\n          </p>\n        ))}\n      </TooltipWrapper>\n    }\n  >\n    <InfoCircleIcon />\n  </Popover>\n);\n\nQuestionIconTooltip.propTypes = {\n  details: PropTypes.object,\n};\n\nconst TopTemplates = ({\n  data = [],\n  sortBy = '',\n  setDataRunTime = () => {},\n  setEnabled = () => {},\n  redirectToJobExplorer = () => {},\n}) => (\n  <Card style={{ overflow: 'auto', flex: '1 1 0' }} className=\"top-templates\">\n    <CardBody>\n      <p>Enter the time it takes to run the following templates manually.</p>\n      {data.map((d) => (\n        <div key={d.id}>\n          <Tooltip content={'List of jobs for this template for past 30 days'}>\n            <Button\n              style={{ padding: '15px 0 10px' }}\n              component=\"a\"\n              onClick={() => redirectToJobExplorer(d.id)}\n              variant=\"link\"\n            >\n              {d.name}\n            </Button>\n          </Tooltip>\n          <TemplateDetail>\n            <InputAndText key={d.id}>\n              <InputGroup>\n                <TextInput\n                  id={d.id}\n                  type=\"number\"\n                  aria-label=\"time run manually\"\n                  value={convertSecondsToMins(d.avgRunTime)}\n                  onChange={(minutes) =>\n                    setDataRunTime(convertMinsToSeconds(minutes), d.id)\n                  }\n                />\n                <InputGroupText>min</InputGroupText>\n              </InputGroup>\n            </InputAndText>\n            <TemplateDetailSubTitle>\n              x {d.successful_hosts_total} host runs\n            </TemplateDetailSubTitle>\n            {showSortAttr(d, sortBy)}\n            <IconGroup>\n              <QuestionIconTooltip details={d} />\n              {!d.enabled && (\n                <ToggleOffIcon onClick={() => setEnabled(d.id)(true)} />\n              )}\n              {d.enabled && (\n                <ToggleOnIcon onClick={() => setEnabled(d.id)(false)} />\n              )}\n            </IconGroup>\n          </TemplateDetail>\n          <p style={{ color: '#486B00' }}>${d.delta.toFixed(2)}</p>\n        </div>\n      ))}\n    </CardBody>\n  </Card>\n);\n\nTopTemplates.propTypes = {\n  data: PropTypes.array,\n  setDataRunTime: PropTypes.func,\n  redirectToJobExplorer: PropTypes.func,\n  deselectedIds: PropTypes.array,\n  setDeselectedIds: PropTypes.func,\n  setEnabled: PropTypes.func,\n  sortBy: PropTypes.string,\n};\n\nexport default TopTemplates;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\n// Imports from custom components\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\n// Imports from API\nimport { preflightRequest, readROI, readROIOptions } from '../../Api';\n\n// Imports from utilities\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { roi as roiConst } from '../../Utilities/constants';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { calculateDelta, convertSecondsToHours } from '../../Utilities/helpers';\n\n// Chart\nimport TopTemplatesSavings from '../../Charts/ROITopTemplates';\n\n// Local imports\nimport { BorderedCardTitle } from './helpers';\nimport TotalSavings from './TotalSavings';\nimport CalculationCost from './CalculationCost';\nimport AutomationFormula from './AutomationFormula';\nimport TopTemplates from './TopTemplates';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 5fr 2fr;\n  height: 100%;\n`;\n\nconst WrapperLeft = styled.div`\n  flex: 5;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n`;\n\nconst WrapperRight = styled.div`\n  flex: 2;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst mapApi = ({ items = [] }) =>\n  items.map((el) => ({\n    ...el,\n    delta: 0,\n    avgRunTime: 3600,\n    manualCost: 0,\n    automatedCost: 0,\n    enabled: true,\n  }));\n\nconst filterDisabled = (data) => data.filter(({ enabled }) => enabled);\n\nconst updateDeltaCost = (data, costAutomation, costManual) =>\n  data.map((el) => {\n    const manualCost =\n      convertSecondsToHours(el.avgRunTime) *\n      el.successful_hosts_total *\n      parseFloat(costManual);\n    const automatedCost =\n      convertSecondsToHours(el.successful_elapsed_total) *\n      parseFloat(costAutomation);\n    const delta = calculateDelta(automatedCost, manualCost);\n\n    return { ...el, delta, manualCost, automatedCost };\n  });\n\nconst computeTotalSavings = (data) =>\n  data.reduce((sum, curr) => sum + curr.delta, 0);\n\nconst AutomationCalculator = ({ history }) => {\n  const toJobExplorer = useRedirect(history, 'jobExplorer');\n  const [costManual, setCostManual] = useState('50');\n  const [costAutomation, setCostAutomation] = useState('20');\n\n  const [preflight, setPreflight] = useApi(null);\n  const [options, setOptions] = useApi({});\n  const [api, fetchApi, setDataInApi] = useApi([], (data) =>\n    updateDeltaCost(mapApi(data), costAutomation, costManual)\n  );\n\n  const { queryParams, setFromToolbar } = useQueryParams(\n    roiConst.defaultParams\n  );\n\n  /**\n   * Modifies one elements avgRunTime in the unfilteredData\n   * and updates all calculated fields.\n   * Used in top templates.\n   */\n  const setDataRunTime = (seconds, id) => {\n    const updatedData = api.data.map((el) => {\n      if (el.id === id) {\n        el.avgRunTime = seconds;\n        const updatedDelta = updateDeltaCost(\n          [el],\n          costAutomation,\n          costManual\n        )[0];\n        return updatedDelta;\n      } else {\n        return el;\n      }\n    });\n\n    setDataInApi(updatedData);\n  };\n\n  const setEnabled = (id) => (value) => {\n    setDataInApi(\n      api.data.map((el) => (el.id === id ? { ...el, enabled: value } : el))\n    );\n  };\n\n  useEffect(() => {\n    setPreflight(preflightRequest());\n    setOptions(readROIOptions({ params: queryParams }));\n  }, []);\n\n  /**\n   * Recalculates the delta and costs in the data after the cost is changed.\n   */\n  useEffect(() => {\n    setDataInApi(updateDeltaCost(api.data, costAutomation, costManual));\n  }, [costAutomation, costManual]);\n\n  /**\n   * Get data from API depending on the queryParam.\n   */\n  useEffect(() => {\n    fetchApi(readROI({ params: queryParams }));\n  }, [queryParams]);\n\n  /**\n   * Function to redirect to the job explorer page\n   * with the same filters as is used here.\n   */\n  const redirectToJobExplorer = (templateId) => {\n    const initialQueryParams = {\n      quick_date_range: 'last_30_days',\n      template_id: [templateId],\n    };\n    toJobExplorer(initialQueryParams);\n  };\n\n  const renderLeft = () => (\n    <WrapperLeft>\n      <Main style={{ paddingBottom: '0' }}>\n        <Card>\n          <BorderedCardTitle>Automation savings</BorderedCardTitle>\n          <CardBody>\n            {api.isLoading && <LoadingState />}\n            {api.error && <ApiErrorState message={api.error.error} />}\n            {api.isSuccess && api.data.length <= 0 && <NoData />}\n            {api.isSuccess && api.data.length > 0 && (\n              <React.Fragment>\n                <TopTemplatesSavings\n                  margin={{ top: 20, right: 20, bottom: 20, left: 70 }}\n                  id=\"d3-roi-chart-root\"\n                  data={filterDisabled(api.data)}\n                />\n                <p style={{ textAlign: 'center' }}>Templates</p>\n              </React.Fragment>\n            )}\n          </CardBody>\n        </Card>\n      </Main>\n      <Main>\n        <AutomationFormula />\n      </Main>\n    </WrapperLeft>\n  );\n\n  const renderRight = () => (\n    <WrapperRight>\n      <Main style={{ paddingBottom: '0', paddingLeft: '0' }}>\n        <TotalSavings\n          totalSavings={computeTotalSavings(filterDisabled(api.data))}\n        />\n      </Main>\n      <Main\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          flex: '1 1 0',\n          paddingLeft: '0',\n        }}\n      >\n        <CalculationCost\n          costManual={costManual}\n          setCostManual={setCostManual}\n          costAutomation={costAutomation}\n          setCostAutomation={setCostAutomation}\n        />\n        <TopTemplates\n          redirectToJobExplorer={redirectToJobExplorer}\n          data={api.data}\n          setDataRunTime={setDataRunTime}\n          setUnfilteredData={api.data}\n          setEnabled={setEnabled}\n          sortBy={queryParams.sort_by}\n        />\n      </Main>\n    </WrapperRight>\n  );\n\n  if (preflight?.error?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader style={{ flex: '0' }}>\n        <PageHeaderTitle title={'Automation Calculator'} />\n        <FilterableToolbar\n          categories={options.data}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      {preflight.error && (\n        <Main>\n          <EmptyState preflightError={preflight.error} />\n        </Main>\n      )}\n      {preflight.isSuccess && (\n        <React.Fragment>\n          <Wrapper className=\"automation-wrapper\">\n            {renderLeft()}\n            {renderRight()}\n          </Wrapper>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nAutomationCalculator.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default AutomationCalculator;\n","import * as d3 from 'd3';\n\nclass Tooltip {\n  constructor(opts) {\n    this.svg = opts.svg;\n    this.colors = opts.colors;\n    this.draw();\n  }\n\n  draw() {\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 145;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -41)\n      .attr('rx', 2)\n      .attr('height', 110)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.circleSuccess = this.toolTipBase\n      .append('circle')\n      .attr('cx', 26)\n      .attr('cy', 0)\n      .attr('r', 8)\n      .attr('stroke', 'white')\n      .attr('fill', 'white');\n    this.circleFail = this.toolTipBase\n      .append('circle')\n      .attr('cx', 26)\n      .attr('cy', 26)\n      .attr('r', 8)\n      .attr('stroke', 'white')\n      .attr('fill', 'white');\n    this.successText = this.toolTipBase\n      .append('text')\n      .attr('x', 43)\n      .attr('y', 4)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Successful');\n    this.failText = this.toolTipBase\n      .append('text')\n      .attr('x', 43)\n      .attr('y', 28)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Failed');\n    this.successIcon = this.toolTipBase\n      .append('text')\n      .attr('class', 'fas fa-sm')\n      .attr('fill', this.colors(1))\n      .attr('x', 19)\n      .attr('y', 5)\n      .text('\\uf058');\n    this.failedIcon = this.toolTipBase\n      .append('text')\n      .attr('class', 'fas fa-sm')\n      .attr('fill', this.colors(0))\n      .attr('x', 20)\n      .attr('y', 31)\n      .text('\\uf06a');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 137)\n      .attr('y', -21)\n      .attr('font-size', 12)\n      .attr('text-anchor', 'end')\n      .text('No jobs');\n    this.successful = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 122)\n      .attr('y', 4)\n      .text('0');\n    this.failed = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 122)\n      .attr('y', 28)\n      .text('0');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('stroke', 'white')\n      .attr('x', 20)\n      .attr('y', -21)\n      .attr('font-size', 12)\n      .text('Never');\n    this.clickMore = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 20)\n      .attr('y', 55)\n      .attr('font-size', 12)\n      .text('Click for details');\n  }\n\n  handleMouseOver = (d) => {\n    let success = 0;\n    let fail = 0;\n    let total = 0;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    const formatTooltipDate = d3.timeFormat('%m/%d');\n    if (!d) {\n      return;\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n    if (d) {\n      success = d.RAN || 0;\n      fail = d.FAIL || 0;\n      total = d.TOTAL || 0;\n      this.date.text(formatTooltipDate(d.DATE || null));\n    }\n\n    if (d && d.data) {\n      success = d.data.RAN || 0;\n      fail = d.data.FAIL || 0;\n      total = d.data.TOTAL || 0;\n      this.date.text(formatTooltipDate(d.data.DATE || null));\n    }\n\n    this.jobs.text('' + total + ' jobs');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n    this.failed.text('' + fail);\n    this.successful.text('' + success);\n    this.successTextWidth = this.successful.node().getComputedTextLength();\n    this.failTextWidth = this.failed.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 40;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.circleSuccess.attr('cx', -adjustedWidth);\n      this.circleFail.attr('cx', -adjustedWidth);\n      this.failedIcon.attr('x', -adjustedWidth - 7);\n      this.successIcon.attr('x', -adjustedWidth - 7);\n      this.successText.attr('x', -adjustedWidth + 17);\n      this.failText.attr('x', -adjustedWidth + 17);\n      this.successful.attr('x', -this.successTextWidth - 20 - 12);\n      this.failed.attr('x', -this.failTextWidth - 20 - 12);\n      this.date.attr('x', -adjustedWidth - 5);\n      this.jobs.attr('x', -this.jobsWidth / 2 - 7);\n      this.clickMore.attr('x', -adjustedWidth);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.circleSuccess.attr('cx', 26);\n      this.circleFail.attr('cx', 26);\n      this.failedIcon.attr('x', 19);\n      this.successIcon.attr('x', 19);\n      this.successText.attr('x', 43);\n      this.failText.attr('x', 43);\n      this.successful.attr('x', adjustedWidth - this.successTextWidth);\n      this.failed.attr('x', adjustedWidth - this.failTextWidth);\n      this.date.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth);\n      this.clickMore.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nexport default Tooltip;\n","import React, { Component } from 'react';\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { stringify } from 'query-string';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\n\nclass BarChart extends Component {\n  constructor(props) {\n    super(props);\n    this.draw = this.draw.bind(this);\n    this.init = this.init.bind(this);\n    this.resize = this.resize.bind(this);\n    this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n    this.state = {\n      formattedData: [],\n      timeout: null,\n    };\n  }\n\n  redirectToJobExplorer({ data: { DATE: date } }) {\n    const { jobExplorer } = Paths;\n    const formattedDate = formatDate(date);\n    const initialQueryParams = {\n      start_date: formattedDate,\n      end_date: formattedDate,\n      quick_date_range: 'custom',\n      status: ['failed', 'successful'],\n      template_id: this.props.queryParams.template_id,\n      org_id: this.props.queryParams.org_id,\n      job_type: this.props.queryParams.job_type\n    };\n    \n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    this.props.history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  }\n\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  init() {\n    this.draw();\n  }\n\n  // Methods\n  draw() {\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const parseTime = d3.timeParse('%Y-%m-%d');\n    let { data: unformattedData } = this.props;\n    const data = unformattedData.reduce(\n      (formatted, { created_date, successful_count, failed_count }) => {\n        let DATE = parseTime(created_date) || new Date();\n        let RAN = +successful_count || 0;\n        let FAIL = +failed_count || 0;\n        let TOTAL = +successful_count + failed_count || 0;\n        return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n      },\n      []\n    );\n    const width = this.props.getWidth();\n    const height = this.props.getHeight();\n    const x = d3.scaleBand().rangeRound([0, width]).padding(0.35); // percentage\n    const y = d3.scaleLinear().range([height, 0]);\n\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n    //[fail, success]\n    let colors = d3.scaleOrdinal(['#6EC664', '#A30000']);\n\n    const barTooltip = new Tooltip({\n      svg: '#' + this.props.id,\n      colors,\n    });\n    const status = ['FAIL', 'RAN'];\n\n    // stack our data\n    const stack = d3\n      .stack()\n      .keys(status)\n      .order(d3.stackOrderNone)\n      .offset(d3.stackOffsetNone);\n\n    const layers = stack(data);\n    // Scale the range of the data\n    x.domain(layers[0].map((d) => d.data.DATE));\n    y.domain([0, d3.max(layers[layers.length - 1], (d) => d[1] * 1.15) || 8]);\n    // Add the Y Axis\n    svg\n      .append('g')\n      .attr('class', 'y-axis')\n      .call(d3.axisLeft(y).tickSize(-width, 0, 0))\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.y-axis .tick text').attr('x', -5);\n    // text label for the y axis\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Jobs across all clusters');\n    // Add the X Axis\n    let ticks;\n    const maxTicks = Math.round(data.length / (data.length / 2));\n    ticks = data.map((d) => d.DATE);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n        .filter((item) => item);\n    }\n\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(\n        d3.axisBottom(x).tickValues(ticks).tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n      )\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n    // text label for the x axis\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n\n    const layer = svg\n      .selectAll('layer')\n      .data(layers)\n      .enter()\n      .append('g')\n      .attr('class', 'layer')\n      .style('fill', (_d, i) => colors(i));\n    layer\n      .selectAll('rect')\n      .data((d) => d)\n      .enter()\n      .append('rect')\n      .attr('x', (d) => x(d.data.DATE))\n      .attr('y', (d) => y(d[0]))\n      .attr('height', 0)\n      .attr('width', x.bandwidth() - 1)\n      .transition()\n      .duration(550)\n      .ease(d3.easeCubic)\n      .attr('y', (d) => y(d[1]))\n      .attr('height', (d) => y(d[0]) - y(d[1]));\n    layer\n      .selectAll('rect')\n      .on('mouseover', barTooltip.handleMouseOver)\n      .on('mousemove', barTooltip.handleMouseOver)\n      .on('mouseout', barTooltip.handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n  }\n\n  componentDidMount() {\n    this.init();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      this.init();\n    }\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nBarChart.propTypes = {\n  id: PropTypes.string,\n  queryParams: PropTypes.object,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  history: PropTypes.object,\n};\n\nexport default initializeChart(BarChart);\n","import React, { Component } from 'react';\nimport initializeChart from './BaseChart';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\nimport { stringify } from 'query-string';\nimport * as d3 from 'd3';\n\nclass LineChart extends Component {\n  constructor(props) {\n    super(props);\n    this.init = this.init.bind(this);\n    this.draw = this.draw.bind(this);\n    this.resize = this.resize.bind(this);\n    this.updateCluster = this.updateCluster.bind(this);\n    this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n    this.state = {\n      formattedData: [],\n      timeout: null,\n    };\n  }\n\n  redirectToJobExplorer({ DATE: date }) {\n    const { jobExplorer } = Paths;\n    const formattedDate = formatDate(date);\n    const initialQueryParams = {\n      start_date: formattedDate,\n      end_date: formattedDate,\n      quick_date_range: 'custom',\n      status: ['failed', 'successful'],\n      cluster_id: this.props.queryParams.cluster_id,\n      org_id: this.props.queryParams.org_id,\n      template_id: this.props.queryParams.template_id,\n      job_type: this.props.queryParams.job_type\n    };\n\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    this.props.history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  }\n\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  updateCluster() {\n    this.init();\n  }\n  init() {\n    this.draw();\n  }\n  // Methods\n  draw() {\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const width = this.props.getWidth();\n    const height = this.props.getHeight();\n\n    function transition(path) {\n      path.transition().duration(1000).attrTween('stroke-dasharray', tweenDash);\n    }\n\n    function tweenDash() {\n      const l = this.getTotalLength();\n      const i = d3.interpolateString('0,' + l, l + ',' + l);\n      return function (t) {\n        return i(t);\n      };\n    }\n\n    const x = d3.scaleTime().rangeRound([0, width]);\n    const y = d3.scaleLinear().range([height, 0]);\n\n    //[success, fail, total]\n    let colors = d3.scaleOrdinal(['#6EC664', '#A30000', '#06C']);\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n      .attr('z', 100)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n    // Tooltip\n    const tooltip = new Tooltip({\n      svg: '#' + this.props.id,\n      colors,\n    });\n    const { data: unformattedData } = this.props;\n    const parseTime = d3.timeParse('%Y-%m-%d');\n\n    const data = unformattedData.reduce(\n      (formatted, { created_date, successful_count, failed_count }) => {\n        let DATE = parseTime(created_date) || new Date();\n        let RAN = +successful_count || 0;\n        let FAIL = +failed_count || 0;\n        let TOTAL = +successful_count + failed_count || 0;\n        return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n      },\n      []\n    );\n    // Scale the range of the data\n    x.domain(\n      d3.extent(data, function (d) {\n        return d.DATE;\n      })\n    );\n    y.domain([\n      0,\n      d3.max(data, function (d) {\n        return d.TOTAL * 1.15 || 8;\n      }),\n    ]);\n\n    const successLine = d3\n      .line()\n      .curve(d3.curveMonotoneX)\n      .x(function (d) {\n        return x(d.DATE);\n      })\n      .y(function (d) {\n        return y(d.RAN);\n      });\n\n    const failLine = d3\n      .line()\n      .defined((d) => !isNaN(d.FAIL))\n      .curve(d3.curveMonotoneX)\n      .x(function (d) {\n        return x(d.DATE);\n      })\n      .y(function (d) {\n        return y(d.FAIL);\n      });\n    // Add the Y Axis\n    svg\n      .append('g')\n      .attr('class', 'y-axis')\n      .call(d3.axisLeft(y).ticks(10).tickSize(-width))\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.y-axis .tick text').attr('x', -5);\n\n    // text label for the y axis\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Job runs');\n    // Add the X Axis\n    let ticks;\n    const maxTicks = Math.round(data.length / (data.length / 2));\n    ticks = data.map((d) => d.DATE);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n        .filter((item) => item);\n    }\n\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(\n        d3\n          .axisBottom(x)\n          .tickValues(ticks)\n          .tickSize(-height)\n          .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n      ) // \"Jan-01\"\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n    // text label for the x axis\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n    const vertical = svg\n      .append('path')\n      .attr('class', 'mouse-line')\n      .style('stroke', 'black')\n      .style('stroke-width', '3px')\n      .style('stroke-dasharray', '3, 3')\n      .style('opacity', '0');\n\n    const handleMouseOver = function (d) {\n      tooltip.handleMouseOver(d);\n      // show vertical line\n      vertical.transition().style('opacity', '1');\n    };\n\n    const handleMouseMove = function () {\n      let intersectX = this.cx.baseVal.value;\n      vertical.attr('d', function () {\n        let d = 'M' + intersectX + ',' + height;\n        d += ' ' + intersectX + ',' + 0;\n        return d;\n      });\n    };\n\n    const handleMouseOut = function () {\n      // hide tooltip\n      tooltip.handleMouseOut();\n      // hide vertical line\n      vertical.transition().style('opacity', 0);\n    };\n\n    // Add the successLine path.\n    svg\n      .append('path')\n      .data([data])\n      .attr('class', 'line')\n      .style('fill', 'none')\n      .style('stroke', () => colors(1))\n      .attr('stroke-width', 2)\n      .attr('d', successLine)\n      .call(transition);\n\n    // Add the failLine path.\n    svg\n      .append('path')\n      .data([data])\n      .attr('class', 'line')\n      .style('fill', 'none')\n      .style('stroke', () => colors(0))\n      .attr('stroke-width', 2)\n      .attr('d', failLine)\n      .call(transition);\n    svg\n      .selectAll('dot')\n      .data(data)\n      .enter()\n      .append('circle')\n      .attr('r', 3)\n      .style('stroke', () => colors(1))\n      .style('fill', () => colors(1))\n      .attr('cx', function (d) {\n        return x(d.DATE);\n      })\n      .attr('cy', function (d) {\n        return y(d.RAN);\n      })\n\n      .on('mouseover', handleMouseOver)\n      .on('mousemove', handleMouseMove)\n      .on('mouseout', handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n    // create our failLine circles\n    svg\n      .selectAll('dot')\n      .data(data)\n      .enter()\n      .append('circle')\n      .attr('r', 3)\n      .style('stroke', () => colors(0))\n      .style('fill', () => colors(0))\n      .attr('cx', function (d) {\n        return x(d.DATE);\n      })\n      .attr('cy', function (d) {\n        return y(d.FAIL);\n      })\n      .on('mouseover', handleMouseOver)\n      .on('mousemove', handleMouseMove)\n      .on('mouseout', handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n  }\n\n  componentDidMount() {\n    this.updateCluster();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      this.updateCluster();\n    }\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nLineChart.propTypes = {\n  id: PropTypes.string,\n  queryParams: PropTypes.object,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  history: PropTypes.object,\n};\n\nexport default initializeChart(LineChart);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { trimStr } from '../Utilities/helpers';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n  DataList,\n  DataListItem as PFDataListItem,\n  DataListCell as PFDataListCell,\n} from '@patternfly/react-core';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst ModulesList = ({ modules, isLoading }) => (\n  <DataList\n    aria-label=\"Top Modules\"\n    style={{\n      maxHeight: '400px',\n      overflow: 'auto',\n      height: '400px',\n      background: 'white',\n    }}\n  >\n    <DataListItem aria-labelledby=\"top-modules-header\">\n      <DataListCell>\n        <h3>Top modules</h3>\n      </DataListCell>\n      <DataCellEnd>\n        <h3>Usage</h3>\n      </DataCellEnd>\n    </DataListItem>\n    {isLoading && (\n      <PFDataListItem\n        aria-labelledby=\"modules-loading\"\n        key={isLoading}\n        style={{ border: 'none' }}\n      >\n        <PFDataListCell>\n          <LoadingState />\n        </PFDataListCell>\n      </PFDataListItem>\n    )}\n    {!isLoading && modules.length <= 0 && (\n      <PFDataListItem\n        aria-labelledby=\"modules-no-data\"\n        key={isLoading}\n        style={{ border: 'none' }}\n      >\n        <PFDataListCell>\n          <NoData />\n        </PFDataListCell>\n      </PFDataListItem>\n    )}\n    {!isLoading &&\n      modules\n        .filter((module) => module.name !== null)\n        .map(({ name, host_task_count }, index) => (\n          <DataListItem aria-labelledby=\"top-modules-detail\" key={index}>\n            <DataListCell>\n              <span>{trimStr(name)}</span>\n            </DataListCell>\n            <DataCellEnd>{host_task_count}</DataCellEnd>\n          </DataListItem>\n        ))}\n  </DataList>\n);\n\nModulesList.propTypes = {\n  modules: PropTypes.array,\n  isLoading: PropTypes.bool,\n};\n\nexport default ModulesList;\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport { Paths } from '../paths';\nimport { stringify } from 'query-string';\nimport useApi from '../Utilities/useApi';\nimport { formatDateTime, formatSeconds } from '../Utilities/helpers';\nimport { readJobExplorer } from '../Api';\n\nimport {\n  Button,\n  DataList,\n  DataListItem as PFDataListItem,\n  DataListCell as PFDataListCell,\n  Label,\n  Modal,\n} from '@patternfly/react-core';\n\nimport { CircleIcon } from '@patternfly/react-icons';\n\nconst success = (\n  <CircleIcon\n    size=\"sm\"\n    key=\"5\"\n    style={{ color: 'rgb(110, 198, 100)', marginRight: '5px' }}\n  />\n);\nconst fail = (\n  <>\n    <CircleIcon\n      size=\"sm\"\n      key=\"5\"\n      style={{ color: 'rgb(163, 0, 0)', marginRight: '5px' }}\n    />\n    <span id=\"fail-icon\">!</span>\n  </>\n);\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\nconst PFDataListItemNoBorder = styled(PFDataListItem)`\n  border-bottom: none;\n  margin-bottom: -20px;\n`;\nconst DataListItemCompact = styled(DataListItem)`\n  padding: 0;\n  > .pf-c-data-list__cell {\n    font-weight: 600;\n  }\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst DataListCellCompact = styled(DataListCell)`\n  padding: 7px;\n`;\n\nconst DataListFocus = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-gap: 10px;\n  padding: var(--pf-global--spacer--lg);\n  background: #ebebeb;\n  border: 1px solid #ccc;\n  border-top: none;\n  margin-bottom: 20px;\n`;\nconst DataCellEndCompact = styled(DataCellEnd)`\n  padding: 7px !important;\n`;\n\nconst formatTopFailedTask = (data) => {\n  if (!data) {\n    return;\n  }\n\n  if (data && data[0]) {\n    const percentage = Math.ceil(\n      (data[0].failed_count / data[0].total_failed_count) * 100\n    );\n    return `${data[0].task_name} ${percentage}%`;\n  }\n\n  return `Unavailable`;\n};\n\nconst formatTopFailedStep = (data) => {\n  if (!data) {\n    return;\n  }\n\n  if (data && data[0]) {\n    const percentage = Math.ceil(\n      (data[0].failed_count / data[0].total_failed_count) * 100\n    );\n    return `${data[0].template_name} ${percentage}%`;\n  }\n\n  return `Unavailable`;\n};\n\nconst formatSuccessRate = (successCount, totalCount) =>\n  Math.ceil((successCount / totalCount) * 100) + '%';\nconst formatAvgRun = (elapsed, totalCount) =>\n  new Date(Math.ceil(elapsed / totalCount) * 1000).toISOString().substr(11, 8);\nconst formatTotalTime = (elapsed) =>\n  new Date(elapsed * 1000).toISOString().substr(11, 8);\n\nconst ModalContents = ({\n  selectedId,\n  isOpen,\n  handleModal,\n  qp,\n  jobType,\n  handleCloseBtn,\n}) => {\n  const [\n    {\n      data: { items: relatedJobs = [] },\n    },\n    setRelatedJobs,\n  ] = useApi({ items: [] });\n  const [\n    {\n      data: {\n        items: [stats = 0],\n      },\n    },\n    setStats,\n  ] = useApi({ items: [] });\n\n  let history = useHistory();\n\n  const redirectToJobExplorer = () => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      template_id: [selectedId],\n      status: [\n        'successful',\n        'failed',\n        'new',\n        'pending',\n        'waiting',\n        'error',\n        'canceled',\n        'running',\n      ],\n      job_type: [jobType],\n      quick_date_range: 'last_30_days',\n    };\n\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const relatedTemplateJobsParams = {\n    ...qp,\n    template_id: [selectedId],\n    attributes: [\n      'id',\n      'status',\n      'job_type',\n      'started',\n      'finished',\n      'elapsed',\n      'created',\n      'cluster_name',\n      'org_name',\n    ],\n    group_by_time: false,\n    limit: 5,\n    sort_by: 'created:desc',\n    quick_date_range: qp.quick_date_range\n      ? qp.quick_date_range\n      : 'last_30_days',\n    job_type: [jobType],\n  };\n\n  const agreggateTemplateParams = {\n    group_by: 'template',\n    template_id: [selectedId],\n    attributes: [\n      'elapsed',\n      'job_type',\n      'successful_count',\n      'failed_count',\n      'total_count',\n      jobType === 'job' ? 'most_failed_tasks' : 'most_failed_steps',\n    ],\n    status: qp.status,\n    quick_date_range: qp.quick_date_range\n      ? qp.quick_date_range\n      : 'last_30_days',\n    job_type: [jobType],\n  };\n\n  useEffect(() => {\n    if (selectedId) {\n      setStats(readJobExplorer({ params: agreggateTemplateParams }));\n      setRelatedJobs(readJobExplorer({ params: relatedTemplateJobsParams }));\n    }\n  }, [selectedId]);\n\n  return (\n    <Modal\n      aria-label=\"modal\"\n      width={'80%'}\n      title={stats.name ? stats.name : 'no-template-name'}\n      isOpen={isOpen}\n      onClose={() => {\n        handleModal(false);\n        handleCloseBtn(null);\n      }}\n      actions={[\n        <Button\n          key=\"cancel\"\n          variant=\"secondary\"\n          onClick={() => {\n            handleModal(false);\n            handleCloseBtn(null);\n          }}\n        >\n          Close\n        </Button>,\n      ]}\n    >\n      <DataList aria-label=\"Selected Template Details\">\n        <PFDataListItemNoBorder aria-labelledby=\"Selected Template Statistics\">\n          <DataListFocus>\n            <div aria-labelledby=\"job runs\">\n              <b style={{ marginRight: '10px' }}>Number of runs</b>\n              {stats.total_count ? stats.total_count : 'Unavailable'}\n            </div>\n            <div aria-labelledby=\"total time\">\n              <b style={{ marginRight: '10px' }}>Total time</b>\n              {stats.elapsed ? formatTotalTime(stats.elapsed) : 'Unavailable'}\n            </div>\n            <div aria-labelledby=\"Avg Time\">\n              <b style={{ marginRight: '10px' }}>Avg time</b>\n              {stats.elapsed\n                ? formatAvgRun(stats.elapsed, stats.total_count)\n                : 'Unavailable'}\n            </div>\n            <div aria-labelledby=\"success rate\">\n              <b style={{ marginRight: '10px' }}>Success rate</b>\n              {!isNaN(stats.successful_count)\n                ? formatSuccessRate(stats.successful_count, stats.total_count)\n                : 'Unavailable'}\n            </div>\n            {stats.most_failed_tasks && (\n              <div aria-labelledby=\"most failed task\">\n                <b style={{ marginRight: '10px' }}>Most failed task</b>\n                {stats.most_failed_tasks\n                  ? formatTopFailedTask(stats.most_failed_tasks)\n                  : 'Unavailable'}\n              </div>\n            )}\n            {stats.most_failed_steps && (\n              <div aria-labelledby=\"most failed step\">\n                <b style={{ marginRight: '10px' }}>Most failed step</b>\n                {stats.most_failed_steps\n                  ? formatTopFailedStep(stats.most_failed_steps)\n                  : 'Unavailable'}\n              </div>\n            )}\n          </DataListFocus>\n        </PFDataListItemNoBorder>\n        <DataListItemCompact>\n          <DataListCellCompact key=\"last5jobs\">\n            <Label variant=\"outline\">Last 5 jobs</Label>\n          </DataListCellCompact>\n          ,\n          <DataCellEndCompact>\n            <Button\n              component=\"a\"\n              onClick={redirectToJobExplorer}\n              variant=\"link\"\n            >\n              View all jobs\n            </Button>\n          </DataCellEndCompact>\n        </DataListItemCompact>\n        <DataListItemCompact aria-labelledby=\"datalist header\">\n          <PFDataListCell key=\"job heading\">Id/Name</PFDataListCell>\n          <PFDataListCell key=\"cluster heading\">Cluster</PFDataListCell>\n          <PFDataListCell key=\"start time heading\">Start Time</PFDataListCell>\n          <PFDataListCell key=\"total time heading\">Total Time</PFDataListCell>\n        </DataListItemCompact>\n        {relatedJobs.length <= 0 && <LoadingState />}\n        {relatedJobs.length > 0 &&\n          relatedJobs.map((job, index) => (\n            <DataListItem\n              style={{ padding: '10px 0' }}\n              key={`job-details-${index}`}\n              aria-labelledby=\"job details\"\n            >\n              <PFDataListCell key=\"job name\">\n                {job.status === 'successful' ? success : fail} {job.id.id} -{' '}\n                {job.id.template_name}\n              </PFDataListCell>\n              <PFDataListCell key=\"job cluster\">\n                {job.cluster_name}\n              </PFDataListCell>\n              <PFDataListCell key=\"start time\">\n                {formatDateTime(job.started)}\n              </PFDataListCell>\n              <PFDataListCell key=\"total time\">\n                {formatSeconds(job.elapsed)}\n              </PFDataListCell>\n            </DataListItem>\n          ))}\n      </DataList>\n    </Modal>\n  );\n};\n\nModalContents.propTypes = {\n  selectedId: PropTypes.number,\n  qp: PropTypes.object,\n  jobType: PropTypes.string,\n  handleCloseBtn: PropTypes.func,\n  isOpen: PropTypes.bool,\n  handleModal: PropTypes.func,\n};\n\nexport default ModalContents;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n  DataList,\n  DataListItem as PFDataListItem,\n  DataListCell as PFDataListCell,\n} from '@patternfly/react-core';\n\nimport ModalContents from './ModalContents';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst TemplatesList = ({ templates, isLoading, qp, title, jobType }) => {\n  const [selectedId, setSelectedId] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const displayJobType = (type) => {\n    return type === 'job' ? 'templates' : 'workflows';\n  };\n\n  return (\n    <>\n      <DataList\n        aria-label={`Top ${displayJobType(jobType)}`}\n        style={{\n          maxHeight: '400px',\n          overflow: 'auto',\n          height: '400px',\n          background: 'white',\n        }}\n      >\n        <DataListItem aria-labelledby={`top-${displayJobType(jobType)}-header`}>\n          <DataListCell>\n            <h3>{title}</h3>\n          </DataListCell>\n          <DataCellEnd>\n            <h3>Usage</h3>\n          </DataCellEnd>\n        </DataListItem>\n        {isLoading && (\n          <PFDataListItem\n            aria-labelledby={`${displayJobType(jobType)}-loading`}\n            key={isLoading}\n            style={{ border: 'none' }}\n          >\n            <PFDataListCell>\n              <LoadingState />\n            </PFDataListCell>\n          </PFDataListItem>\n        )}\n        {!isLoading && templates.length <= 0 && (\n          <PFDataListItem\n            aria-labelledby={`${displayJobType(jobType)}-no-data`}\n            key={isLoading}\n            style={{ border: 'none' }}\n          >\n            <PFDataListCell>\n              <NoData />\n            </PFDataListCell>\n          </PFDataListItem>\n        )}\n        {!isLoading &&\n          templates.map(({ name, total_count, id }, index) => (\n            <DataListItem\n              aria-labelledby={`top-${displayJobType(jobType)}-detail`}\n              key={index}\n            >\n              <DataListCell>\n                <a\n                  onClick={() => {\n                    setIsModalOpen(true);\n                    setSelectedId(id);\n                  }}\n                >\n                  {name}\n                </a>\n              </DataListCell>\n              <DataCellEnd>{total_count}</DataCellEnd>\n            </DataListItem>\n          ))}\n      </DataList>\n      <ModalContents\n        isOpen={isModalOpen}\n        handleModal={setIsModalOpen}\n        selectedId={selectedId}\n        qp={qp}\n        jobType={jobType}\n        handleCloseBtn={setSelectedId}\n      />\n    </>\n  );\n};\n\nTemplatesList.propTypes = {\n  templates: PropTypes.array,\n  isLoading: PropTypes.bool,\n  queryParams: PropTypes.object,\n  title: PropTypes.string,\n  qp: PropTypes.object,\n  jobType: PropTypes.string,\n};\n\nexport default TemplatesList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport {\n  preflightRequest,\n  readClustersOptions,\n  readJobExplorer,\n  readEventExplorer,\n} from '../../Api';\n\nimport { jobExplorer } from '../../Utilities/constants';\nimport useApi from '../../Utilities/useApi';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle as PFCardTitle,\n} from '@patternfly/react-core';\n\nimport BarChart from '../../Charts/BarChart';\nimport LineChart from '../../Charts/LineChart';\nimport ModulesList from '../../Components/ModulesList';\nimport TemplatesList from '../../Components/TemplatesList';\nimport FilterableToolbar from '../../Components/Toolbar';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport { clusters } from '../../Utilities/constants';\n\nconst initialTopTemplateParams = {\n  group_by: 'template',\n  limit: 10,\n  job_type: ['job'],\n  group_by_time: false,\n  status: ['successful', 'failed'],\n};\n\nconst initialTopWorkflowParams = {\n  group_by: 'template',\n  limit: 10,\n  job_type: ['workflowjob'],\n  group_by_time: false,\n  status: ['successful', 'failed'],\n};\n\nconst initialModuleParams = {\n  group_by: 'module',\n  sort_by: 'host_task_count:desc',\n  limit: 10,\n};\n\nconst Clusters = () => {\n  const [preflightError, setPreFlightError] = useState(null);\n\n  const { queryParams, setFromToolbar } = useQueryParams({\n    ...clusters.defaultParams,\n  });\n\n  const [\n    {\n      isLoading,\n      isSuccess,\n      error,\n      data: { items: chartData = [] },\n    },\n    setData,\n  ] = useApi({ items: [] });\n\n  const [\n    {\n      data: { items: templates = [] },\n    },\n    setTemplates,\n  ] = useApi({ items: [] });\n  const [\n    {\n      data: { items: workflows = [] },\n    },\n    setWorkflows,\n  ] = useApi({ items: [] });\n  const [\n    {\n      data: { items: modules = [] },\n    },\n    setModules,\n  ] = useApi({ items: [] });\n  const [{ data: options = [] }, setOptions] = useApi({});\n\n  const initialOptionsParams = {\n    attributes: jobExplorer.attributes,\n  };\n\n  const { queryParams: optionsQueryParams } =\n    useQueryParams(initialOptionsParams);\n\n  const {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n  } = queryParams;\n\n  const topTemplatesParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialTopTemplateParams,\n  };\n\n  const topWorkflowParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialTopWorkflowParams,\n  };\n\n  const topModuleParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialModuleParams,\n  };\n\n  useEffect(() => {\n    async function initializeWithPreflight() {\n      await preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n      setOptions(readClustersOptions({ params: optionsQueryParams }));\n    }\n\n    initializeWithPreflight();\n  }, []);\n\n  // Get and update the data\n  useEffect(() => {\n    const fetchEndpoints = () => {\n      setData(readJobExplorer({ params: queryParams }));\n      setTemplates(readJobExplorer({ params: topTemplatesParams }));\n      setWorkflows(readJobExplorer({ params: topWorkflowParams }));\n      setModules(readEventExplorer({ params: topModuleParams }));\n    };\n    fetchEndpoints();\n  }, [queryParams]);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Clusters'} />\n        <FilterableToolbar\n          categories={options}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      {(preflightError || error) && (\n        <Main>\n          {preflightError ? (\n            <EmptyState {...preflightError} />\n          ) : (\n            <ApiErrorState message={error.error} />\n          )}\n        </Main>\n      )}\n      {!preflightError && !error && (\n        <Main>\n          <Card>\n            <PFCardTitle>\n              <h2>Job status</h2>\n            </PFCardTitle>\n            <CardBody>\n              {isLoading && <LoadingState />}\n              {queryParams.cluster_id.length <= 0 && isSuccess && (\n                <BarChart\n                  margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                  id=\"d3-bar-chart-root\"\n                  data={chartData}\n                  queryParams={queryParams}\n                />\n              )}\n              {queryParams.cluster_id.length > 0 && isSuccess && (\n                <LineChart\n                  margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                  id=\"d3-line-chart-root\"\n                  data={chartData}\n                  queryParams={queryParams}\n                />\n              )}\n            </CardBody>\n          </Card>\n          <div\n            className=\"dataCard\"\n            style={{ display: 'flex', marginTop: '20px' }}\n          >\n            <TemplatesList\n              qp={queryParams}\n              templates={workflows}\n              isLoading={isLoading}\n              title={'Top workflows'}\n              jobType={'workflowjob'}\n            />\n            <TemplatesList\n              qp={queryParams}\n              templates={templates}\n              isLoading={isLoading}\n              title={'Top templates'}\n              jobType={'job'}\n            />\n            <ModulesList modules={modules} isLoading={isLoading} />\n          </div>\n        </Main>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Clusters;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ClockIcon,\n  SyncAltIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\n\nconst JobStatus = ({ status }) => {\n  const capitalized = (str) => str.charAt(0).toUpperCase() + str.slice(1);\n\n  const getColor = () => {\n    switch (status) {\n      case 'successful':\n        return 'green';\n      case 'failed':\n      case 'error':\n        return 'red';\n      case 'running':\n      case 'pending':\n        return 'blue';\n      case 'canceled':\n        return 'orange';\n      // case new, waiting\n      default:\n        return 'grey';\n    }\n  };\n\n  const getIcon = () => {\n    switch (status) {\n      case 'successful':\n        return <CheckCircleIcon />;\n      case 'failed':\n      case 'error':\n        return <ExclamationCircleIcon />;\n      case 'running':\n        return <SyncAltIcon />;\n      case 'canceled':\n        return <ExclamationTriangleIcon />;\n      // case new, waiting, pending\n      default:\n        return <ClockIcon />;\n    }\n  };\n\n  return (\n    <Label variant=\"outline\" color={getColor()} icon={getIcon()}>\n      {capitalized(status)}\n    </Label>\n  );\n};\n\nJobStatus.propTypes = {\n  status: PropTypes.oneOf([\n    'successful',\n    'failed',\n    'error',\n    'running',\n    'new',\n    'waiting',\n    'pending',\n    'canceled',\n  ]),\n};\n\nexport default JobStatus;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  DataListCell as PFDataListCell,\n  DataListContent,\n  DataList,\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells as PFDataListItemCells,\n  DataListToggle as PFDataListToggle,\n  Tooltip,\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkIcon } from '@patternfly/react-icons';\n\nimport LoadingState from '../Components/LoadingState';\nimport { formatDateTime, formatJobType } from '../Utilities/helpers';\nimport JobStatus from './JobStatus';\n\nconst headerLabels = ['Id/Name', 'Status', 'Cluster', 'Organization', 'Type'];\n\nconst ExternalLinkIcon = styled(PFExternalLinkIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n`;\n\nconst DataListCell = styled(PFDataListCell)`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  text-align: center;\n`;\n\nconst DataListCellHeader = styled(DataListCell)`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  font-weight: bold;\n`;\n\nconst DataListItemCells = styled(PFDataListItemCells)`\n  align-items: center;\n`;\n\nconst DataListToggle = styled(PFDataListToggle)`\n  align-items: center;\n`;\n\nconst mobileBreakpoint = 765;\n\nconst buildHeader = (labels) => (\n  <DataListItem>\n    <DataListItemRow style={{ paddingLeft: '80px' }}>\n      <DataListItemCells\n        dataListCells={labels.map((label) => (\n          <DataListCellHeader key={label}>\n            {label}\n            {label === 'Id/Name' && <ExternalLinkIcon />}\n          </DataListCellHeader>\n        ))}\n      />\n    </DataListItemRow>\n  </DataListItem>\n);\n\nconst buildListRow = (items, ariaLabel, ariaLabelledBy, windowWidth) => {\n  const [isExpanded, setIsExpanded] = useState([]);\n\n  return (\n    <>\n      {items.map((item, count) => {\n        const toggle = (id) => {\n          const expanded = isExpanded;\n          const idx = expanded.indexOf(id);\n          const newExpanded =\n            idx >= 0\n              ? [\n                  ...expanded.slice(0, idx),\n                  ...expanded.slice(idx + 1, expanded.length),\n                ]\n              : [...expanded, id];\n          setIsExpanded(newExpanded);\n        };\n\n        return (\n          <DataListItem\n            key={item.id.id}\n            aria-labelledby={ariaLabelledBy}\n            isExpanded={isExpanded.includes(`${item.id.id}-toggle`)}\n          >\n            <DataListItemRow key={item.id.id}>\n              <DataListToggle\n                id={`${item.id.id}-toggle`}\n                aria-controls={`${item.id.id}-expand`}\n                onClick={() => toggle(`${item.id.id}-toggle`)}\n                isExpanded={isExpanded.includes(`${item.id.id}-toggle`)}\n              />\n              <DataListItemCells\n                dataListCells={[\n                  <DataListCell key={count++}>\n                    <a\n                      href={item.id.tower_link}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {windowWidth < mobileBreakpoint && (\n                        <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                          Id/Name\n                          <ExternalLinkIcon />:\n                        </span>\n                      )}\n                      &nbsp;\n                      {`${item.id.id} - ${item.id.template_name}`}\n                    </a>\n                  </DataListCell>,\n                  <DataListCell key={count++}>\n                    {windowWidth <= mobileBreakpoint && (\n                      <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Status:\n                      </span>\n                    )}\n                    &nbsp;\n                    <JobStatus status={item.status} />\n                  </DataListCell>,\n                  <Tooltip key={count++} content={<p>{item.cluster_name}</p>}>\n                    <DataListCell>\n                      {windowWidth <= mobileBreakpoint && (\n                        <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                          Cluster:\n                        </span>\n                      )}\n                      &nbsp;\n                      {item.cluster_name}\n                    </DataListCell>\n                  </Tooltip>,\n                  <DataListCell key={count++}>\n                    {windowWidth <= mobileBreakpoint && (\n                      <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Organization:\n                      </span>\n                    )}\n                    &nbsp;\n                    {item.org_name}\n                  </DataListCell>,\n                  <DataListCell key={count++}>\n                    {windowWidth <= mobileBreakpoint && (\n                      <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Type:\n                      </span>\n                    )}\n                    &nbsp;\n                    {formatJobType(item.job_type)}\n                  </DataListCell>,\n                ]}\n              />\n            </DataListItemRow>\n            <DataListContent\n              aria-label={`${item.id.id}-details`}\n              id={'${item.id.id}'}\n              isHidden={!isExpanded.includes(`${item.id.id}-toggle`)}\n            >\n              <DataListItemCells\n                dataListCells={[\n                  <DataListCell key={count++}>\n                    Created: {formatDateTime(item.created)}\n                  </DataListCell>,\n                  <DataListCell key={count++}>\n                    Started: {formatDateTime(item.started)}\n                  </DataListCell>,\n                  <DataListCell key={count++}>\n                    Finished: {formatDateTime(item.finished)}\n                  </DataListCell>,\n                ]}\n              />\n            </DataListContent>\n          </DataListItem>\n        );\n      })}\n    </>\n  );\n};\n\nconst AllJobsTemplate = ({ jobs }) => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  const onResize = () => setWindowWidth(window.innerWidth);\n\n  useEffect(() => {\n    window.addEventListener('resize', onResize);\n    return () => window.removeEventListener('resize', onResize);\n  }, []);\n\n  return buildListRow(jobs, 'All jobs view', 'all-jobs', windowWidth);\n};\n\nconst JobExplorerList = ({ jobs }) => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  const onResize = () => setWindowWidth(window.innerWidth);\n\n  useEffect(() => {\n    window.addEventListener('resize', onResize);\n    return () => window.removeEventListener('resize', onResize);\n  }, []);\n\n  return (\n    <>\n      {jobs.length <= 0 && <LoadingState />}\n      <DataList isCompact>\n        {windowWidth >= mobileBreakpoint && buildHeader(headerLabels)}\n        <AllJobsTemplate jobs={jobs} windowWidth={windowWidth} />\n      </DataList>\n    </>\n  );\n};\n\nJobExplorerList.propTypes = {\n  jobs: PropTypes.array,\n  windowWidth: PropTypes.number,\n};\n\nAllJobsTemplate.propTypes = {\n  jobs: PropTypes.array,\n  windowWidth: PropTypes.number,\n};\n\nexport default JobExplorerList;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { parse, stringify } from 'query-string';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { Paths } from '../../paths';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoResults from '../../Components/NoResults';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport Pagination from '../../Components/Pagination';\n\nimport {\n  preflightRequest,\n  readJobExplorer,\n  readJobExplorerOptions,\n} from '../../Api';\nimport { jobExplorer } from '../../Utilities/constants';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport { Card, CardBody, PaginationVariant } from '@patternfly/react-core';\n\nimport JobExplorerList from '../../Components/JobExplorerList';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\nconst initialQueryParams = {\n  ...jobExplorer.defaultParams,\n  attributes: jobExplorer.attributes,\n};\n\nconst JobExplorer = ({ location: { search }, history }) => {\n  const [preflightError, setPreFlightError] = useState(null);\n  const [\n    {\n      isLoading,\n      isSuccess,\n      error,\n      data: { meta = {}, items: data = [] },\n    },\n    setData,\n  ] = useApi({ meta: {}, items: [] });\n  const [options, setOptions] = useApi({});\n\n  const { queryParams, setFromPagination, setFromToolbar, dispatch } =\n    useQueryParams(initialQueryParams);\n\n  const updateURL = () => {\n    const { jobExplorer } = Paths;\n    const search = stringify(queryParams, { arrayFormat: 'bracket' });\n    history.replace({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'job-explorer', secondaryNav: true });\n\n    preflightRequest().catch((error) => {\n      setPreFlightError({ preflightError: error });\n    });\n\n    const initialSearchParams = parse(search, {\n      arrayFormat: 'bracket',\n      parseBooleans: true,\n      parseNumbers: true,\n    });\n\n    dispatch({\n      type: 'REINITIALIZE',\n      value: {\n        ...initialQueryParams,\n        ...initialSearchParams,\n      },\n    });\n  }, []);\n\n  useEffect(() => {\n    setData(readJobExplorer({ params: queryParams }));\n    setOptions(readJobExplorerOptions({ params: queryParams }));\n    updateURL();\n  }, [queryParams]);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Job Explorer'} />\n      </PageHeader>\n\n      {preflightError && (\n        <Main>\n          <EmptyState {...preflightError} />\n        </Main>\n      )}\n\n      {!preflightError && (\n        <Main>\n          <Card>\n            <CardBody>\n              <FilterableToolbar\n                categories={options.data}\n                filters={queryParams}\n                setFilters={setFromToolbar}\n                pagination={\n                  <Pagination\n                    count={meta?.count}\n                    params={{\n                      limit: queryParams.limit,\n                      offset: queryParams.offset,\n                    }}\n                    setPagination={setFromPagination}\n                    isCompact\n                  />\n                }\n                hasSettings\n              />\n              {error && <ApiErrorState message={error.error} />}\n              {isLoading && <LoadingState />}\n              {isSuccess && data.length <= 0 && <NoResults />}\n              {isSuccess && data.length > 0 && <JobExplorerList jobs={data} />}\n              <Pagination\n                count={meta?.count}\n                params={{\n                  limit: queryParams.limit,\n                  offset: queryParams.offset,\n                }}\n                setPagination={setFromPagination}\n                variant={PaginationVariant.bottom}\n              />\n            </CardBody>\n          </Card>\n        </Main>\n      )}\n    </React.Fragment>\n  );\n};\n\nJobExplorer.propTypes = {\n  location: PropTypes.object,\n  history: PropTypes.object,\n};\n\nexport default JobExplorer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nimport {\n  NotificationDrawerList as PFNotificationDrawerList,\n  NotificationDrawerListItem as PFNotificationDrawerListItem,\n  NotificationDrawerListItemBody,\n  NotificationDrawerListItemHeader,\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkAltIcon } from '@patternfly/react-icons';\nimport LoadingState from '../Components/LoadingState';\nimport { capitalize } from '../Utilities/helpers';\n\nconst ExternalLinkAltIcon = styled(PFExternalLinkAltIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n  font-size: 14px;\n`;\n\nconst NotificationDrawerListItem = styled(PFNotificationDrawerListItem)`\n  border-top: 1px solid var(--pf-global--BorderColor--light-100\n    );\n  border-bottom::nth-child(odd): 1px solid var(--pf-global--BorderColor--light-100\n    );\n  box-shadow: none;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst NotificationDrawerList = styled(PFNotificationDrawerList)`\n  &:last-child {\n    border-bottom: 1px solid var(--pf-global--BorderColor--light-100);\n  }\n`;\n\nconst stringifyDate = (date) => {\n  const day = moment(date);\n  const oneHour = 60 * 60 * 1000;\n  const now = moment().utc();\n\n  if (now.isAfter(day)) {\n    return `${now.diff(day, 'days')} day(s) ago.`;\n  }\n\n  if (day.isSame(now, 'day')) {\n    if (day.valueOf() > oneHour) {\n      return `${day.diff(now, 'hours')} hour(s) ago.`;\n    }\n\n    return `${now.diff(day, 'minutes')} minute(s) ago.`;\n  }\n};\n\nconst AllNotificationTemplate = ({ notifications }) =>\n  notifications.map(\n    ({ date, message, label, notification_id: id, tower_url: url }) => {\n      if (label === '' || label === 'notice') {\n        return (\n          <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"info\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n\n      if (label === 'error') {\n        return (\n          <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"danger\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n\n      if (label === 'warning') {\n        return (\n          <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"warning\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n    }\n  );\n\nconst ErrorNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'error')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"danger\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst NoticeNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'notice')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"info\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst WarningNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'warning')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"warning\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst NotificationsList = ({ filterBy, notifications }) => (\n  <>\n    <NotificationDrawerList>\n      {notifications.length <= 0 && <LoadingState />}\n      {filterBy === '' && (\n        <AllNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'notice' && (\n        <NoticeNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'error' && (\n        <ErrorNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'warning' && (\n        <WarningNotificationTemplate notifications={notifications} />\n      )}\n    </NotificationDrawerList>\n  </>\n);\n\nAllNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nErrorNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nWarningNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nNotificationsList.propTypes = {\n  notifications: PropTypes.array,\n  filterBy: PropTypes.string,\n};\n\nexport default NotificationsList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoData from '../../Components/NoData';\nimport { preflightRequest, readClusters, readNotifications } from '../../Api';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle as PFCardTitle,\n  FormSelect,\n  FormSelectOption,\n  PaginationVariant,\n  NotificationDrawer,\n} from '@patternfly/react-core';\n\nimport NotificationsList from '../../Components/NotificationsList';\nimport Pagination from '../../Components/Pagination';\n\nconst CardTitle = styled(PFCardTitle)`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n`;\n\nconst DropdownGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-end;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n\n  select {\n    margin: 0 10px;\n    width: 150px;\n\n    @media screen and (max-width: 1035px) {\n      margin: 10px 10px 0 0;\n    }\n\n    @media screen and (max-width: 865px) {\n      width: 100%;\n    }\n  }\n`;\n\nconst notificationOptions = [\n  {\n    value: 'please choose',\n    label: 'Select Notification Severity',\n    disabled: true,\n  },\n  { value: 'error', label: 'View Critical', disabled: false },\n  { value: 'warning', label: 'View Warning', disabled: false },\n  { value: 'notice', label: 'View Notice', disabled: false },\n  { value: '', label: 'View All', disabled: false },\n];\n\nfunction formatClusterName(data) {\n  const defaultClusterOptions = [\n    { value: 'please choose', label: 'Select cluster', disabled: true },\n    { value: '', label: 'All Clusters', disabled: false },\n    { value: -1, label: 'Unassociated', disabled: false },\n  ];\n  return data.reduce(\n    (formatted, { label, cluster_id: id, install_uuid: uuid }) => {\n      if (label.length === 0) {\n        formatted.push({ value: id, label: uuid, disabled: false });\n      } else {\n        formatted.push({ value: id, label, disabled: false });\n      }\n\n      return formatted;\n    },\n    defaultClusterOptions\n  );\n}\n\nconst initialQueryParams = {\n  limit: 5,\n  offset: 0,\n};\n\nconst Notifications = () => {\n  const [preflightError, setPreFlightError] = useState(null);\n  const [notificationsData, setNotificationsData] = useState([]);\n  const [clusterOptions, setClusterOptions] = useState([]);\n  const [selectedCluster, setSelectedCluster] = useState('');\n  const [firstRender, setFirstRender] = useState(true);\n  const [isLoading, setIsLoading] = useState(true);\n  const [meta, setMeta] = useState({});\n  const { queryParams, setId, setFromPagination, setSeverity } =\n    useQueryParams(initialQueryParams);\n\n  useEffect(() => {\n    if (firstRender) {\n      return;\n    }\n\n    const getData = () => {\n      return readNotifications({ params: queryParams });\n    };\n\n    const update = () => {\n      setIsLoading(true);\n      getData().then(({ notifications: notificationsData = [], meta }) => {\n        setNotificationsData(notificationsData);\n        setMeta(meta);\n        setIsLoading(false);\n      });\n    };\n\n    update();\n  }, [queryParams]);\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'notifications', secondaryNav: true });\n\n    let ignore = false;\n    const fetchEndpoints = () => {\n      return Promise.all(\n        [readClusters(), readNotifications({ params: queryParams })].map((p) =>\n          p.catch(() => [])\n        )\n      );\n    };\n\n    async function initializeWithPreflight() {\n      setIsLoading(true);\n      await preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n      fetchEndpoints().then(\n        ([\n          { templates: clustersData = [] },\n          { notifications: notificationsData = [], meta },\n        ]) => {\n          if (!ignore) {\n            const clusterOptions = formatClusterName(clustersData);\n            setClusterOptions(clusterOptions);\n            setNotificationsData(notificationsData);\n            setMeta(meta);\n            setFirstRender(false);\n            setIsLoading(false);\n          }\n        }\n      );\n    }\n\n    initializeWithPreflight();\n    return () => (ignore = true);\n  }, []);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Notifications'} />\n      </PageHeader>\n      {preflightError && (\n        <Main>\n          <EmptyState {...preflightError} />\n        </Main>\n      )}\n      {!preflightError && (\n        <>\n          <Main>\n            <Card>\n              <CardTitle>\n                <DropdownGroup>\n                  <FormSelect\n                    name=\"selectedCluster\"\n                    value={selectedCluster}\n                    onChange={(value) => {\n                      setSelectedCluster(value);\n                      setId(value);\n                      setFromPagination(0);\n                    }}\n                    aria-label=\"Select Cluster\"\n                  >\n                    {clusterOptions.map(({ value, label, disabled }, index) => (\n                      <FormSelectOption\n                        isDisabled={disabled}\n                        key={index}\n                        value={value}\n                        label={label}\n                      />\n                    ))}\n                  </FormSelect>\n                  <FormSelect\n                    name=\"selectedNotification\"\n                    value={queryParams.severity || ''}\n                    onChange={(value) => {\n                      setSeverity(value);\n                      setFromPagination(0);\n                    }}\n                    aria-label=\"Select Notification Type\"\n                  >\n                    {notificationOptions.map(\n                      ({ disabled, value, label }, index) => (\n                        <FormSelectOption\n                          isDisabled={disabled}\n                          key={index}\n                          value={value}\n                          label={label}\n                        />\n                      )\n                    )}\n                  </FormSelect>\n                </DropdownGroup>\n                <Pagination\n                  count={meta?.count}\n                  params={{\n                    limit: queryParams.limit,\n                    offset: queryParams.offset,\n                  }}\n                  setPagination={setFromPagination}\n                  isCompact\n                />\n              </CardTitle>\n              <CardBody>\n                {isLoading && <LoadingState />}\n                {!isLoading && notificationsData.length <= 0 && <NoData />}\n                {!isLoading && notificationsData.length > 0 && (\n                  <NotificationDrawer>\n                    <NotificationsList\n                      filterBy={queryParams.severity || ''}\n                      options={notificationOptions}\n                      notifications={notificationsData}\n                    />\n                  </NotificationDrawer>\n                )}\n                <Pagination\n                  count={meta?.count}\n                  params={{\n                    limit: queryParams.limit,\n                    offset: queryParams.offset,\n                  }}\n                  setPagination={setFromPagination}\n                  variant={PaginationVariant.bottom}\n                />\n              </CardBody>\n            </Card>\n          </Main>\n        </>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Notifications;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Switch } from '@patternfly/react-core';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  overflow: auto;\n  width: 100%;\n  height: ${(props) => props.height};\n`;\n\nconst LegendDetail = styled.div`\n  display: flex;\n  padding: 7.5px 15px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  overflow: auto;\n`;\n\nconst Color = styled.div.attrs((props) => ({\n  color: props.color || 'black',\n}))`\n  min-width: 12px;\n  height: 12px;\n  background: ${(props) => props.color};\n  margin-right: 20px;\n`;\n\nconst Title = styled.span`\n  font-size: 15px;\n  display: inline-block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n`;\n\nconst SubTitle = styled.span`\n  font-size: 15px;\n  margin-left: auto;\n  margin-right: 0;\n  padding-right: 10px;\n`;\n\nconst Legend = ({ data, selected, height, onToggle, chartName }) => {\n  return (\n    <Container height={height}>\n      {data.map(({ name, value, id, count }, index) => (\n        <LegendDetail key={index}>\n          <Wrapper>\n            <Color color={value} />\n            <Title>{name}</Title>\n          </Wrapper>\n          {count && <SubTitle>{count}</SubTitle>}\n          {selected && (\n            <Switch\n              isChecked={selected.some((selection) => selection === id)}\n              onChange={() => onToggle(id)}\n              aria-label={`${chartName}-${name}`}\n              value={id}\n              key={index}\n            />\n          )}\n        </LegendDetail>\n      ))}\n    </Container>\n  );\n};\n\nLegend.propTypes = {\n  data: PropTypes.array.isRequired,\n  selected: PropTypes.array.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  height: PropTypes.string.isRequired,\n  chartName: PropTypes.string.isRequired,\n};\n\nexport default Legend;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport styled from 'styled-components';\n\nimport initializeChart from '.././BaseChart';\nimport Legend from '../../Utilities/Legend';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nconst GroupedBarChart = ({\n  onClick = null,\n  TooltipClass,\n  legend,\n  ...props\n}) => {\n  const colors = legend.map(({ id, name }) => {\n    return {\n      name,\n      value: props.colorFunc(id),\n      id,\n    };\n  });\n  const [selectedIds, setSelectedIds] = useState(\n    legend.map(({ id }) => id).slice(0, 8)\n  );\n  let timeout = null;\n\n  const handleToggle = (id) => {\n    if (selectedIds.includes(id)) {\n      setSelectedIds(selectedIds.filter((el) => el !== id));\n    } else {\n      setSelectedIds([...selectedIds, id]);\n    }\n  };\n\n  const draw = () => {\n    // Clear our chart container element first\n    d3.selectAll('#' + props.id + ' > *').remove();\n    let { data: unformattedData } = props;\n    const data = unformattedData.reduce((formatted, { date, items }) => {\n      const selectedOrgs = items.filter(({ id }) => selectedIds.includes(id));\n      return formatted.concat({ date, selectedOrgs });\n    }, []);\n    const width = props.getWidth();\n    const height = props.getHeight();\n    // x scale of entire chart\n    const x0 = d3.scaleBand().range([0, width]).padding(0.35);\n    // x scale of individual grouped bars\n    const x1 = d3.scaleBand();\n    const y = d3.scaleLinear().range([height, 0]);\n    // format our X Axis ticks\n    const maxTicksOneMonth = Math.round(data.length / (data.length / 2));\n    const maxTicksTwoMonths = Math.round(data.length / (data.length / 4));\n    let ticks = data.map((d) => d.date);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) =>\n          i % (data.length > 31 ? maxTicksTwoMonths : maxTicksOneMonth) === 0\n            ? d.date\n            : undefined\n        )\n        .filter((item) => item);\n    }\n\n    const xAxis = d3.axisBottom(x0).tickValues(ticks).tickFormat(formatDate);\n\n    const yAxis = d3.axisLeft(y).ticks(8).tickSize(-width, 0, 0);\n\n    const svg = d3\n      .select('#' + props.id)\n      .append('svg')\n      .attr('width', width + props.margin.left + props.margin.right)\n      .attr('height', height + props.margin.bottom + props.margin.top)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' + props.margin.left + ',' + props.margin.top + ')'\n      );\n\n    const dates = data.map((d) => d.date);\n    const tooltip = new TooltipClass({\n      svg: '#' + props.id,\n    });\n    x0.domain(dates);\n    x1.domain(selectedIds).range([0, x0.bandwidth()]);\n    y.domain([\n      0,\n      d3.max(data, (date) =>\n        d3.max(date.selectedOrgs, (d) => d.value * 1.15)\n      ) || 8,\n    ]);\n\n    // add y axis\n    svg\n      .append('g')\n      .attr('class', 'y axis')\n      .call(yAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7')\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 6)\n      .attr('dy', '.71em')\n      .style('text-anchor', 'end')\n      .style('font-weight', 'bold')\n      .text('Value');\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text(props.yLabel);\n\n    // add x axis\n    svg\n      .append('g')\n      .attr('class', 'x axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' + width / 2 + ' ,' + (height + props.margin.top + 25) + ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n    // add the groups\n    let slice = svg.selectAll('.slice').data(data);\n    slice.exit().remove();\n\n    const enter = slice\n      .enter()\n      .append('g')\n      .attr('class', 'g foo')\n      .attr('transform', (d) => 'translate(' + x0(d.date) + ',0)');\n    slice = slice.merge(enter);\n    // add the individual bars\n    let bars = slice.selectAll('rect').data(function (d) {\n      return d.selectedOrgs;\n    });\n    bars.exit().remove();\n\n    const color = props.colorFunc;\n    const subEnter = bars\n      .enter()\n      .append('rect')\n      .attr('width', x1.bandwidth())\n      .attr('x', function (d) {\n        return x1(d.id);\n      }) // unsorted\n      .style('fill', function (d) {\n        return color(d.id);\n      })\n      .attr('y', function (d) {\n        return y(d.value);\n      })\n      .attr('height', function (d) {\n        return height - y(d.value);\n      })\n      .on('mouseover', function (d) {\n        d.moreDetail = !d.name.endsWith('Others');\n        d3.select(this).style('cursor', (onClick && d.moreDetail) ? 'pointer' : 'default');\n        d3.select(this).style('fill', d3.rgb(color(d.id)).darker(1));\n        tooltip.handleMouseOver(d);\n      })\n      .on('mousemove', tooltip.handleMouseOver)\n      .on('mouseout', function (d) {\n        d3.select(this).style('fill', color(d.id));\n        tooltip.handleMouseOut();\n      })\n      .on('click', onClick);\n    bars = bars.merge(subEnter);\n  };\n\n  const init = () => {\n    draw();\n  };\n\n  const resize = () => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      draw();\n    }, 500);\n  };\n\n  useEffect(() => {\n    init();\n    window.addEventListener('resize', resize);\n\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [props.data, selectedIds]);\n\n  return (\n    <Wrapper>\n      <div id={props.id} />\n      {colors.length > 0 && (\n        <Legend\n          id={`${props.id}-legend`}\n          data={colors}\n          selected={selectedIds}\n          onToggle={handleToggle}\n          height=\"350px\"\n          chartName={`${props.id}-legend`}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nGroupedBarChart.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  legend: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  colorFunc: PropTypes.func,\n  yLabel: PropTypes.string,\n  onClick: PropTypes.func,\n  TooltipClass: PropTypes.any.isRequired,\n};\n\nGroupedBarChart.defaultProps = {\n  legend: [],\n};\n\nexport default initializeChart(GroupedBarChart);\n","import * as d3 from 'd3';\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class OrgsTooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -12)\n      .attr('rx', 2)\n      .attr('height', 50)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 25)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Date');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 72)\n      .attr('y', 25)\n      .text('0 Jobs');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 10)\n      .attr('font-size', 12)\n      .text('Org');\n\n    this.clickMore = this.toolTipBase\n    .append('text')\n    .attr('fill', 'white')\n    .attr('x', 20)\n    .attr('y', 30)\n    .attr('font-size', 12)\n    .text('');\n  }\n\n  handleMouseOver = (d) => {\n    let date;\n    let orgName;\n    let jobs;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    } else {\n      const maxLength = 16;\n      date = d.date;\n      orgName = d.name;\n      jobs = d.value;\n      if (d.name.length > maxLength) {\n        orgName = d.name.slice(0, maxLength).concat('...');\n      }\n    }\n\n    let yAdjust = -11;\n    \n    // Include 'Click for details' if more detail is available\n    if (d.moreDetail) {\n      this.boundingBox.attr('height', 68);\n      this.boundingBox.attr('y', -23);\n      this.date.attr('y', 25 + yAdjust);\n      this.jobs.attr('y', 25 + yAdjust);\n      this.orgName.attr('y', 10 + yAdjust);\n      this.clickMore.text('Click for details');\n    } else {\n      this.boundingBox.attr('height', 50);\n      this.boundingBox.attr('y', -12);\n      this.date.attr('y', 25);\n      this.jobs.attr('y', 25);\n      this.orgName.attr('y', 10);\n      this.clickMore.text('');\n    }\n\n    const formatTooltipDate = formatDate;\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.date.text('' + formatTooltipDate(date));\n    this.orgName.text('' + orgName);\n    this.jobs.text('' + jobs + ' Jobs');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 45;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n      this.orgName.attr('x', -adjustedWidth - 7);\n      this.date.attr('x', -adjustedWidth - 7);\n      this.clickMore.attr('x', -adjustedWidth - 7);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth / 2);\n      this.date.attr('x', 20);\n      this.clickMore.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import * as d3 from 'd3';\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class HostsTooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -12)\n      .attr('rx', 2)\n      .attr('height', 50)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 25)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Date');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 72)\n      .attr('y', 25)\n      .text('0 Jobs');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 10)\n      .attr('font-size', 12)\n      .text('Org');\n  }\n\n  handleMouseOver = (d) => {\n    let date;\n    let orgName;\n    let jobs;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    } else {\n      const maxLength = 16;\n      date = d.date;\n      orgName = d.name;\n      jobs = d.value;\n      if (d.name.length > maxLength) {\n        orgName = d.name.slice(0, maxLength).concat('...');\n      }\n    }\n\n    const formatTooltipDate = formatDate;\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.date.text('' + formatTooltipDate(date));\n    this.orgName.text('' + orgName);\n    this.jobs.text('' + jobs + ' Hosts');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 45;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n      this.orgName.attr('x', -adjustedWidth - 7);\n      this.date.attr('x', -adjustedWidth - 7);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth / 2);\n      this.date.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport { getTotal } from '../Utilities/helpers';\nimport Legend from '../Utilities/Legend';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nclass Tooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    // defer drawing until we know the data shape\n    this.drawn = false;\n    // show the success rate or not\n    this.showSuccess = false;\n  }\n\n  draw(d) {\n    // chart1 has success rate data and chart2 does not ...\n    this.showSuccess = d && d.data && 'success_rate' in d.data ? true : false;\n    const boundingHeight = this.showSuccess ? 70 : 52;\n    const boundingWidth = this.showSuccess ? 120 : 108;\n\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBOx = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', boundingHeight)\n      .attr('width', boundingWidth)\n      .attr('fill', '#393f44');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 0)\n      .text('Organization');\n    this.percentageTotal = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 16)\n      .text('0');\n    this.percentageSuccess = null;\n    if (this.showSuccess) {\n      this.percentageSuccess = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 30)\n        .text('');\n    }\n  }\n\n  handleMouseOver = (d) => {\n    // treat draw() as a singleton to avoid a painted window effect\n    if (this.drawn !== true) {\n      this.draw(d);\n      this.drawn = true;\n    }\n\n    let perc;\n    let percSuccess;\n    let orgName;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    }\n\n    if (d && d.data) {\n      const maxLength = 16;\n      perc = d.data.percent;\n      percSuccess = d.data.success_rate;\n      orgName = d.data.name;\n      if (d.data.name.length > maxLength) {\n        orgName = d.data.name.slice(0, maxLength - 3).concat('...');\n      }\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.percentageTotal.text('' + perc + '%');\n    if (percSuccess && this.percentageSuccess) {\n      this.percentageSuccess.text('(' + percSuccess + '% successful)');\n    }\n\n    this.orgName.text(' ' + orgName);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, -10) rotate(45)');\n      this.boundingBOx.attr('x', -125);\n      this.orgName.attr('x', -112);\n      this.percentageTotal.attr('x', -112);\n      if (this.showSuccess) {\n        this.percentageSuccess.attr('x', -112);\n      }\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, -10) rotate(45)');\n      this.boundingBOx.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.percentageTotal.attr('x', 20);\n      if (this.showSuccess) {\n        this.percentageSuccess.attr('x', 20);\n      }\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nconst PieChart = ({\n  data,\n  id,\n  colorFunc: color,\n  margin,\n  getWidth,\n  getHeight,\n}) => {\n  const colors = data\n    .map(({ id, name, count }) => {\n      return {\n        id,\n        name,\n        value: color(id),\n        count: Math.round(count),\n      };\n    })\n    .sort((a, b) => (a.count > b.count ? 1 : b.count > a.count ? -1 : 0));\n\n  const [selectedIds, setSelectedIds] = useState(\n    data.map(({ id }) => id).slice(0, 8)\n  );\n\n  let timeout = null;\n\n  const handleToggle = (id) => {\n    if (selectedIds.includes(id)) {\n      setSelectedIds(selectedIds.filter((el) => el !== id));\n    } else {\n      setSelectedIds([...selectedIds, id]);\n    }\n  };\n\n  const draw = () => {\n    d3.selectAll('#' + id + ' > *').remove();\n    const width = getWidth();\n    const height = getHeight();\n    const svg = d3\n      .select('#' + id)\n      .append('svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.bottom)\n      .append('g');\n\n    svg.append('g').attr('class', 'slices');\n    svg.append('g').attr('class', 'labels');\n    svg.append('g').attr('class', 'lines');\n    const radius = Math.min(width, height) / 2;\n    const filteredData = data.filter(({ id }) => selectedIds.includes(id));\n    const total = getTotal(filteredData);\n    filteredData.forEach(function (d) {\n      d.count = +d.count;\n      d.percent = +Math.round((d.count / total) * 100);\n    });\n    const donutTooltip = new Tooltip({\n      svg: '#' + id,\n    });\n    const pie = d3\n      .pie()\n      .sort(null)\n      .value((d) => d.count);\n    const arc = d3\n      .arc()\n      .outerRadius(radius - 10) // controls top positioning of chart\n      .innerRadius(0);\n\n    svg.attr(\n      'transform',\n      'translate(' +\n        (width + margin.left + margin.right) / 2 +\n        ',' +\n        (height + margin.top + margin.bottom) / 2 +\n        ')'\n    );\n\n    svg\n      .selectAll('path')\n      .data(pie(filteredData))\n      .enter()\n      .append('path')\n      .attr('d', arc)\n      .attr('fill', (d) => color(d.data.id));\n\n    svg\n      .selectAll('path')\n      .on('mouseover', function (d) {\n        d3.select(this).style('fill', d3.rgb(color(d.data.id)).darker(1));\n        donutTooltip.handleMouseOver(d);\n      })\n      .on('mouseout', function (d) {\n        d3.select(this).style('fill', color(d.data.id));\n        donutTooltip.handleMouseOut();\n      })\n      .on('mousemove', donutTooltip.handleMouseOver);\n\n    svg.append('g').classed('labels', true);\n    svg.append('g').classed('lines', true);\n  };\n\n  const init = () => {\n    draw();\n  };\n\n  const resize = () => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      draw();\n    }, 500);\n  };\n\n  useEffect(() => {\n    init();\n    window.addEventListener('resize', resize);\n\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [data, selectedIds]);\n\n  return (\n    <Wrapper>\n      <div id={id} />\n      {colors.length > 0 && (\n        <Legend\n          id={`${id}-legend`}\n          data={colors}\n          selected={selectedIds}\n          onToggle={handleToggle}\n          height=\"300px\"\n          chartName={`${id}-legend`}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nPieChart.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  colorFunc: PropTypes.func,\n};\n\nexport default initializeChart(PieChart);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { formatDate as dateForJobExplorer } from '../../Utilities/helpers';\n\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport {\n  preflightRequest,\n  readJobExplorer,\n  readHostExplorer,\n  readOrgOptions,\n} from '../../Api';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle as PFCardTitle,\n  Tabs,\n  Tab,\n} from '@patternfly/react-core';\n\nimport {\n  GroupedBarChart,\n  OrgsTooltip,\n  HostsTooltip,\n} from '../../Charts/GroupedBarChart/';\nimport PieChart from '../../Charts/PieChart';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport { organizationStatistics as constants } from '../../Utilities/constants';\n\n// For chart colors\nimport { pfmulti } from '../../Utilities/colors';\nimport { scaleOrdinal } from 'd3';\n\nconst CardTitle = styled(PFCardTitle)`\n  border-bottom: 2px solid #ebebeb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &&& {\n    min-height: 60px;\n    --pf-c-card--first-child--PaddingTop: 10px;\n    --pf-c-card__header--not-last-child--PaddingBottom: 10px;\n\n    h3 {\n      font-size: 0.875em;\n    }\n  }\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  overflow: hidden;\n\n  .pf-c-card {\n    width: 50%;\n    margin-top: 20px;\n    overflow: auto;\n  }\n\n  .pf-c-card:first-of-type {\n    margin-right: 20px;\n  }\n`;\n\nconst TopCard = styled(Card)`\n  min-height: 500px;\n`;\n\nconst colorFunc = scaleOrdinal(pfmulti);\n\nconst orgsChartMapper =\n  (attrName) =>\n  ({ dates: data = [], meta }) => ({\n    data: data.map(({ date, items }) => ({\n      date,\n      items: items.map(({ id, [attrName]: value, name }) => ({\n        id,\n        date,\n        value,\n        name: name || 'No organization',\n      })),\n    })),\n    legend: meta.legend.map((el) => ({\n      ...el,\n      name: el.name || 'No organization',\n    })),\n  });\n\nconst pieChartMapper =\n  (attrName) =>\n  ({ items = [] }) =>\n    items.map(({ id, [attrName]: count, name }) => ({\n      id,\n      count,\n      name: name || 'No organization',\n    }));\n\nconst redirectToJobExplorer =\n  (toJobExplorer, queryParams) =>\n  ({ date, id }) => {\n    if (id === -1) {\n      // disable clicking on \"others\" block\n      return;\n    }\n\n    const { sort_by, ...rest } = queryParams;\n    const formattedDate = dateForJobExplorer(date);\n    const initialQueryParams = {\n      ...rest,\n      quick_date_range: 'custom',\n      start_date: formattedDate,\n      end_date: formattedDate,\n      status: [\n        'successful',\n        'failed',\n        'new',\n        'pending',\n        'waiting',\n        'error',\n        'canceled',\n        'running',\n      ],\n      org_id: [id],\n    };\n\n    toJobExplorer(initialQueryParams);\n  };\n\nconst chartMapper = [\n  {\n    api: readJobExplorer,\n    attr: 'total_count',\n    label: 'Jobs across organizations',\n    onClick: redirectToJobExplorer,\n    tooltip: OrgsTooltip,\n  },\n  {\n    api: readHostExplorer,\n    attr: 'total_unique_host_count',\n    label: 'Hosts across organizations',\n    onClick: () => null,\n    tooltip: HostsTooltip,\n  },\n];\n\nconst OrganizationStatistics = ({ history }) => {\n  const toJobExplorer = useRedirect(history, 'jobExplorer');\n  const [preflight, setPreflight] = useApi(null);\n  const [activeTabKey, setActiveTabKey] = useState(0);\n  const [orgs, setOrgs] = useApi(\n    [],\n    orgsChartMapper(chartMapper[activeTabKey].attr)\n  );\n  const [jobs, setJobs] = useApi([], pieChartMapper('total_count'));\n  const [tasks, setTasks] = useApi([], pieChartMapper('host_task_count'));\n  const [options, setOptions] = useApi({});\n  const { queryParams, setFromToolbar } = useQueryParams(\n    constants.defaultParams\n  );\n\n  const jobEventsByOrgParams = {\n    ...queryParams,\n    attributes: ['host_task_count'],\n    group_by: 'org',\n    include_others: true,\n    sort_by: `host_task_count:desc`,\n  };\n\n  const jobRunsByOrgParams = {\n    ...queryParams,\n    attributes: ['total_count'],\n    group_by: 'org',\n    include_others: true,\n    sort_by: `total_count:desc`,\n  };\n\n  const jobsByDateAndOrgParams = {\n    ...queryParams,\n    attributes: ['total_count'],\n    group_by: 'org',\n    group_by_time: true,\n    sort_by: `total_count:desc`,\n  };\n\n  const hostAcrossOrgParams = {\n    ...queryParams,\n    attributes: ['total_unique_host_count'],\n    group_by: 'org',\n    group_by_time: true,\n    sort_by: `host_task_count:desc`,\n  };\n\n  const handleTabClick = (_, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({\n      id: 'organization-statistics',\n      secondaryNav: true,\n    });\n    setPreflight(preflightRequest());\n    setOptions(readOrgOptions({ params: queryParams }));\n  }, []);\n\n  useEffect(() => {\n    const { api: readJobsOrHosts } = chartMapper[activeTabKey];\n    const params =\n      activeTabKey === 0 ? jobsByDateAndOrgParams : hostAcrossOrgParams;\n    setOrgs(readJobsOrHosts({ params }));\n  }, [queryParams, activeTabKey]);\n\n  useEffect(() => {\n    setJobs(readJobExplorer({ params: jobRunsByOrgParams }));\n    setTasks(readJobExplorer({ params: jobEventsByOrgParams }));\n  }, [queryParams]);\n\n  if (preflight?.error?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Organization Statistics'} />\n        <FilterableToolbar\n          categories={options.data}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      {preflight.error && (\n        <Main>\n          <EmptyState preflightError={preflight.error} />\n        </Main>\n      )}\n      {preflight.isSuccess && (\n        <React.Fragment>\n          <Main>\n            <TopCard>\n              <Tabs activeKey={activeTabKey} onSelect={handleTabClick}>\n                <Tab eventKey={0} title={'Jobs'} />\n                <Tab eventKey={1} title={'Hosts'} />\n              </Tabs>\n              <CardBody>\n                {orgs.isLoading && <LoadingState />}\n                {orgs.error && <ApiErrorState message={orgs.error.error} />}\n                {orgs.isSuccess && orgs.data?.data.length <= 0 && <NoData />}\n                {orgs.isSuccess && orgs.data?.data.length > 0 && (\n                  <GroupedBarChart\n                    margin={{ top: 20, right: 20, bottom: 50, left: 50 }}\n                    id=\"d3-grouped-bar-chart-root\"\n                    data={orgs.data.data}\n                    legend={orgs.data.legend}\n                    history={history}\n                    colorFunc={colorFunc}\n                    yLabel={chartMapper[activeTabKey].label}\n                    onClick={chartMapper[activeTabKey].onClick(\n                      toJobExplorer,\n                      queryParams\n                    )}\n                    TooltipClass={chartMapper[activeTabKey].tooltip}\n                  />\n                )}\n              </CardBody>\n            </TopCard>\n            <CardContainer>\n              <Card>\n                <CardBody style={{ padding: 0 }}>\n                  <CardTitle style={{ padding: 0 }}>\n                    <h2 style={{ marginLeft: '20px' }}>\n                      Job Runs by Organization\n                    </h2>\n                  </CardTitle>\n                  {jobs.isLoading && <LoadingState />}\n                  {jobs.error && <ApiErrorState message={jobs.error.error} />}\n                  {jobs.isSuccess && jobs.data.length <= 0 && <NoData />}\n                  {jobs.isSuccess && jobs.data.length > 0 && (\n                    <PieChart\n                      margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                      id=\"d3-donut-1-chart-root\"\n                      data={jobs.data}\n                      colorFunc={colorFunc}\n                    />\n                  )}\n                </CardBody>\n              </Card>\n              <Card>\n                <CardBody style={{ padding: 0 }}>\n                  <CardTitle style={{ padding: 0 }}>\n                    <h2 style={{ marginLeft: '20px' }}>\n                      Usage by Organization (Tasks)\n                    </h2>\n                  </CardTitle>\n                  {tasks.isLoading && <LoadingState />}\n                  {tasks.error && <ApiErrorState message={tasks.error.error} />}\n                  {tasks.isSuccess && tasks.data.length <= 0 && <NoData />}\n                  {tasks.isSuccess && tasks.data.length > 0 && (\n                    <PieChart\n                      margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                      id=\"d3-donut-2-chart-root\"\n                      data={tasks.data}\n                      colorFunc={colorFunc}\n                    />\n                  )}\n                </CardBody>\n              </Card>\n            </CardContainer>\n          </Main>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nOrganizationStatistics.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default OrganizationStatistics;\n","var pfmulti = [\n    '#06C',\n    '#4CB140',\n    '#009596',\n    '#5752D1',\n    '#F4C145',\n    '#EC7A08',\n    '#8BC1F7',\n    '#23511E',\n    '#A2D9D9',\n    '#2A265F',\n    '#F9E0A2',\n    '#8F4700',\n    '#002F5D'\n];\nexport { pfmulti };\n","import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { Card, CardBody } from '@patternfly/react-core';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport Breadcrumbs from '../../../Components/Breadcrumbs';\n\nimport useApi from '../../../Utilities/useApi';\n\nimport { readPlanOptions } from '../../../Api';\n\nimport Form from '../Shared/Form';\n\nimport { Paths } from '../../../paths';\n\nconst Add = () => {\n  const [options, setOptions] = useApi({});\n  useEffect(() => {\n    setOptions(readPlanOptions());\n  }, []);\n  const canWrite =\n    options.isSuccess &&\n    (options.data?.meta?.rbac?.perms?.write === true ||\n      options.data?.meta?.rbac?.perms?.all === true);\n  const title = 'Create new plan';\n\n  const showAdd = () => (\n    <>\n      <PageHeader>\n        <Breadcrumbs\n          items={[{ title: 'Savings Planner', navigate: '/savings-planner' }]}\n        />\n        <PageHeaderTitle title={title} />\n      </PageHeader>\n      <Main>\n        <Card>\n          <CardBody>\n            <Form title={title} options={options} />\n          </CardBody>\n        </Card>\n      </Main>\n    </>\n  );\n  if (options.isSuccess) {\n    return canWrite ? showAdd() : <Redirect to={Paths.savingsPlanner} />;\n  }\n  return null;\n};\n\nexport default Add;\n","import React from 'react';\nimport { CardActions } from '@patternfly/react-core';\nimport styled from 'styled-components';\n\nconst CardActionsWrapper = styled.div`\n  margin-top: 20px;\n  --pf-c-card__actions--PaddingLeft: 0;\n`;\n\nfunction CardActionsRow({ children }) {\n  return (\n    <CardActionsWrapper>\n      <CardActions>{children}</CardActions>\n    </CardActionsWrapper>\n  );\n}\n\nexport default CardActionsRow;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\nimport { Button, Badge, Alert, Tooltip } from '@patternfly/react-core';\nimport AlertModal from '../AlertModal';\nimport { getRelatedResourceDeleteCounts } from '../../Utilities/getRelatedResourceDeleteDetails';\nimport ErrorDetail from '../ErrorDetail';\n\nconst WarningMessage = styled(Alert)`\n  margin-top: 10px;\n`;\nconst Label = styled.span`\n  && {\n    margin-right: 10px;\n  }\n`;\nfunction DeleteButton({\n  onConfirm,\n  modalTitle,\n  name,\n  variant,\n  children,\n  isDisabled,\n  ouiaId,\n  deleteMessage,\n  deleteDetailsRequests,\n  disabledTooltip,\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [deleteMessageError, setDeleteMessageError] = useState();\n  const [deleteDetails, setDeleteDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const toggleModal = async isModalOpen => {\n    setIsLoading(true);\n    if (deleteDetailsRequests?.length && isModalOpen) {\n      const { results, error } = await getRelatedResourceDeleteCounts(\n        deleteDetailsRequests\n      );\n      if (error) {\n        setDeleteMessageError(error);\n      } else {\n        setDeleteDetails(results);\n      }\n    }\n    setIsLoading(false);\n    setIsOpen(isModalOpen);\n  };\n\n  if (deleteMessageError) {\n    return (\n      <AlertModal\n        isOpen={deleteMessageError}\n        title={'Error!'}\n        onClose={() => {\n          toggleModal(false);\n          setDeleteMessageError();\n        }}\n      >\n        <ErrorDetail error={deleteMessageError} />\n      </AlertModal>\n    );\n  }\n  return (\n    <>\n      {disabledTooltip ? (\n        <Tooltip content={disabledTooltip} position=\"top\">\n          <div>\n            <Button\n              spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n              variant={variant || 'secondary'}\n              aria-label={'Delete'}\n              isDisabled={isDisabled}\n              onClick={() => toggleModal(true)}\n              ouiaId={ouiaId}\n            >\n              {children || 'Delete'}\n            </Button>\n          </div>\n        </Tooltip>\n      ) : (\n        <Button\n          ouiaId={ouiaId}\n          spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n          variant={variant || 'secondary'}\n          aria-label={'Delete'}\n          isDisabled={isDisabled}\n          onClick={() => toggleModal(true)}\n        >\n          {children || 'Delete'}\n        </Button>\n      )}\n      <AlertModal\n        isOpen={isOpen}\n        title={modalTitle}\n        variant=\"danger\"\n        onClose={() => toggleModal(false)}\n        actions={[\n          <Button\n            ouiaId=\"delete-modal-confirm\"\n            key=\"delete\"\n            variant=\"danger\"\n            aria-label={'Confirm Delete'}\n            isDisabled={isDisabled}\n            onClick={() => {\n              onConfirm();\n              toggleModal(false);\n            }}\n          >\n            {'Delete'}\n          </Button>,\n          <Button\n            ouiaId=\"delete-modal-cancel\"\n            key=\"cancel\"\n            variant=\"link\"\n            aria-label={'Cancel'}\n            onClick={() => toggleModal(false)}\n          >\n            {'Cancel'}\n          </Button>,\n        ]}\n      >\n        {'Are you sure you want to delete:'}\n        <br />\n        <strong>{name}</strong>\n        {Object.values(deleteDetails).length > 0 && (\n          <WarningMessage\n            variant=\"warning\"\n            isInline\n            title={\n              <div>\n                <div aria-label={deleteMessage}>{deleteMessage}</div>\n                <br />\n                {Object.entries(deleteDetails).map(([key, value]) => (\n                  <div aria-label={`${key}: ${value}`} key={key}>\n                    <Label>{key}</Label> <Badge>{value}</Badge>\n                  </div>\n                ))}\n              </div>\n            }\n          />\n        )}\n      </AlertModal>\n    </>\n  );\n}\n\nDeleteButton.propTypes = {\n  ouiaId: PropTypes.string,\n};\n\nDeleteButton.defaultProps = {\n  ouiaId: null,\n};\n\nexport default DeleteButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { shape, string, number, arrayOf, node, oneOfType } from 'prop-types';\nimport { Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst RoutedTabs = ({ tabsArray, defaultTabId }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const getActiveTabId = (defaultTabId) => {\n    return (\n      tabsArray.find((tab) => tab.link === location.pathname)?.id ||\n      defaultTabId\n    );\n  };\n\n  const handleTabSelect = (_, eventKey) => {\n    const match = tabsArray.find((tab) => tab.id === eventKey);\n    if (match) {\n      history.push(match.link);\n    }\n  };\n\n  return (\n    <Tabs activeKey={getActiveTabId(defaultTabId)} onSelect={handleTabSelect}>\n      {tabsArray.map((tab) => (\n        <Tab\n          aria-label={typeof tab.name === 'string' ? tab.name : `${tab.id} tab`}\n          eventKey={tab.id}\n          key={tab.id}\n          link={tab.link}\n          title={<TabTitleText>{tab.name}</TabTitleText>}\n          role=\"tab\"\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nRoutedTabs.propTypes = {\n  defaultTabId: PropTypes.number,\n  tabsArray: arrayOf(\n    shape({\n      id: number.isRequired,\n      link: string.isRequired,\n      name: oneOfType([string.isRequired, node.isRequired]),\n    })\n  ).isRequired,\n};\n\nRoutedTabs.defaultProps = {\n  defaultTabId: 1,\n};\n\nexport default RoutedTabs;\n","import React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\nimport { Paths } from '../../paths';\nimport { stringify } from 'query-string';\n\nimport { useHistory } from 'react-router-dom';\n\nimport { Button } from '@patternfly/react-core';\n\nimport {\n  CardBody as PFCardBody,\n  CardFooter,\n  DescriptionList,\n  DescriptionListTerm,\n  DescriptionListGroup,\n  DescriptionListDescription,\n  Divider,\n  Label,\n  TextContent,\n  List,\n  ListItem,\n} from '@patternfly/react-core';\nimport CardActionsRow from '../../Components/CardActionsRow';\nimport {\n  relatedResourceDeleteRequests,\n  getRelatedResourceDeleteCounts,\n} from '../../Utilities/getRelatedResourceDeleteDetails';\nimport { deletePlan, readPlan } from '../../Api';\nimport useRequest, { useDismissableError } from '../../Utilities/useRequest';\nimport DeleteButton from '../../Components/DeleteButton/DeleteButton';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\nimport { formatDateTime } from '../../Utilities/helpers';\nimport RoutedTabs from '../../Components/RoutedTabs';\nimport AlertModal from '../../Components/AlertModal/AlertModal';\nimport ErrorDetail from '../../Components/ErrorDetail/ErrorDetail';\n\nconst CardBody = styled(PFCardBody)`\n  min-height: 500px;\n  padding: 0;\n  padding-bottom: 20px;\n\n  &:first-child {\n    padding-top: 0;\n  }\n`;\n\nconst DetailsTab = ({ tabsArray, plans, canWrite }) => {\n  let history = useHistory();\n  const {\n    id,\n    automation_status,\n    category,\n    description,\n    frequency_period,\n    hosts,\n    manual_time,\n    modified,\n    name,\n    tasks,\n    template_details,\n    template_id,\n  } = plans[0];\n\n  const redirectToJobExplorer = (templateId) => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      quick_date_range: 'last_30_days',\n      status: ['failed', 'successful'],\n      template_id: [templateId],\n    };\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const showTemplate = (template_details) => {\n    if (!template_details.id) {\n      return;\n    }\n\n    return (\n      <a onClick={() => redirectToJobExplorer(template_details.id)}>\n        {template_details.name}\n      </a>\n    );\n  };\n\n  const labelsAndValues = {\n    Name: name || undefined,\n    'Automation Type': category || undefined,\n    Description: description || undefined,\n    'Manual Time': manual_time || undefined,\n    'Run on hosts': hosts || undefined,\n    Frequency: frequency_period || undefined,\n    Template: template_id ? showTemplate(template_details) : undefined,\n    'Automation status':\n      automation_status.status === 'successful' ? (\n        <Label variant=\"outline\" color=\"green\" icon={<CheckCircleIcon />}>\n          Running\n        </Label>\n      ) : (\n        <Label variant=\"outline\" color=\"red\" icon={<ExclamationCircleIcon />}>\n          Not Running\n        </Label>\n      ),\n    'Last updated': modified ? <em>{formatDateTime(modified)}</em> : undefined,\n  };\n\n  const { request: deletePlans, error: deleteError } = useRequest(\n    useCallback(async () => {\n      await deletePlan({ params: { id: id } });\n      history.push(`/savings-planner`);\n    }, [id, history])\n  );\n\n  const {\n    result: { isDeleteDisabled },\n    error: deleteDetailsError,\n    request: fetchDeleteDetails,\n  } = useRequest(\n    useCallback(async () => {\n      const { results: deleteDetails, error } =\n        await getRelatedResourceDeleteCounts(\n          relatedResourceDeleteRequests.savingsPlan(plans[0], readPlan)\n        );\n      if (error) {\n        throw new Error(error);\n      }\n      if (deleteDetails) {\n        return { isDeleteDisabled: true };\n      }\n      return { isDeleteDisabled: false };\n    }, [plans[0]]),\n    { isDeleteDisabled: false }\n  );\n\n  useEffect(() => {\n    fetchDeleteDetails();\n  }, [fetchDeleteDetails]);\n  const { error, dismissError } = useDismissableError(\n    deleteError || deleteDetailsError\n  );\n\n  return (\n    <>\n      {plans && (\n        <>\n          <CardBody>\n            <RoutedTabs tabsArray={tabsArray} />\n            <div style={{ padding: '1rem' }}>\n              <DescriptionList isHorizontal columnModifier={{ lg: '3Col' }}>\n                {Object.keys(labelsAndValues).map(\n                  (key, i) =>\n                    labelsAndValues[key] !== undefined && (\n                      <DescriptionListGroup key={i}>\n                        <DescriptionListTerm>{key}</DescriptionListTerm>\n                        <DescriptionListDescription>\n                          {labelsAndValues[key]}\n                        </DescriptionListDescription>\n                      </DescriptionListGroup>\n                    )\n                )}\n              </DescriptionList>\n              {tasks.length > 0 && (\n                <>\n                  <Divider style={{ padding: '1rem' }} component=\"div\" />\n                  <DescriptionListTerm>Tasks</DescriptionListTerm>\n                  <TextContent>\n                    <List component=\"ol\" type=\"1\">\n                      {tasks.map(({ id, task }) => (\n                        <ListItem key={id}>{task}</ListItem>\n                      ))}\n                    </List>\n                  </TextContent>\n                </>\n              )}\n            </div>\n          </CardBody>\n          {canWrite && (\n            <CardFooter>\n              <CardActionsRow>\n                <Button\n                  key=\"edit-plan-button\"\n                  variant=\"primary\"\n                  aria-label=\"Edit plan\"\n                  onClick={() => {\n                    history.push({\n                      pathname: `${Paths.savingsPlan}${id}/edit`,\n                    });\n                  }}\n                >\n                  Edit\n                </Button>\n                <DeleteButton\n                  key={'delete-plan-button'}\n                  name={name}\n                  modalTitle={'Delete Plan'}\n                  onConfirm={deletePlans}\n                  disabledTooltip={\n                    isDeleteDisabled && 'This plan cannot be deleted'\n                  }\n                >\n                  {'Delete'}\n                </DeleteButton>\n              </CardActionsRow>\n              {error && (\n                <AlertModal\n                  isOpen={error}\n                  onClose={dismissError}\n                  title={'Error'}\n                  variant=\"error\"\n                >\n                  <ErrorDetail error={error} />\n                </AlertModal>\n              )}\n            </CardFooter>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nDetailsTab.propTypes = {\n  plans: PropTypes.array,\n  tabsArray: PropTypes.array,\n  canWrite: PropTypes.bool.isRequired,\n};\n\nexport default DetailsTab;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle, Title } from '@patternfly/react-core';\nvar floatToStringWithCommas = function (total) {\n    return total\n        .toFixed(2)\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\nvar TotalSavings = function (_a) {\n    var _b = _a.value, value = _b === void 0 ? 0 : _b, _c = _a.isMoney, isMoney = _c === void 0 ? true : _c;\n    return (React.createElement(Card, { isPlain: true },\n        React.createElement(CardTitle, { style: { paddingBottom: '0' } }, \"Total savings\"),\n        React.createElement(CardBody, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"4xl\", style: { color: isMoney ? '#81C46B' : '#0063CF' } }, isMoney ? \"$ \" + floatToStringWithCommas(value) : value.toFixed(0) + \" hours\"))));\n};\nTotalSavings.propTypes = {\n    value: PropTypes.number,\n    isMoney: PropTypes.bool\n};\nexport default TotalSavings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle } from '@patternfly/react-core';\nvar FormulaDescription = function (_a) {\n    var _b = _a.isMoney, isMoney = _b === void 0 ? true : _b;\n    return (React.createElement(Card, { isPlain: true },\n        React.createElement(CardTitle, null, \"Automation formula\"),\n        React.createElement(CardBody, null,\n            React.createElement(\"p\", null,\n                React.createElement(\"b\", null, \"Manual cost for template x\"),\n                \" =\",\n                React.createElement(\"em\", null, \"(time for a manual run on one host in hours * (sum of all hosts across all job runs) ) \" + (isMoney ? '* cost per hour' : ''))),\n            React.createElement(\"p\", null,\n                React.createElement(\"b\", null, \"Automation cost for template x\"),\n                \" =\",\n                React.createElement(\"em\", null, \"cost of automation per hour * sum of total elapsed hours for a template\")),\n            React.createElement(\"p\", null,\n                React.createElement(\"b\", null, \"Savings\"),\n                \" =\",\n                React.createElement(\"em\", null, \"Sum of (manual cost - automation cost) across all templates\")))));\n};\nFormulaDescription.propTypes = {\n    isMoney: PropTypes.bool\n};\nexport default FormulaDescription;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useState } from 'react';\nimport { Card, CardActions, CardBody, CardHeader, CardTitle, Grid, GridItem, List, ListItem, ToggleGroup, ToggleGroupItem } from '@patternfly/react-core';\nimport { SquareFullIcon } from '@patternfly/react-icons';\nimport ChartRenderer, { functions, ChartKind, ChartThemeColor, ChartType, ChartTopLevelType, ApiType, } from 'react-json-chart-builder';\nimport RoutedTabs from '../../Components/RoutedTabs';\nimport TotalSavings from \"./TotalSavings\";\nimport FormulaDescription from './FormulaDescription';\n;\n;\nvar yearLabels = {\n    initial: 'Initial',\n    year1: 'Year 1',\n    year2: 'Year 2',\n    year3: 'Year 3',\n};\nvar getChartData = function (data) {\n    var statsData = Object.keys(yearLabels).map(function (year) { return ({\n        year: yearLabels[year],\n        total_costs: +data.projections.monetary_stats.total_costs[year] * -1,\n        total_benefits: +data.projections.monetary_stats.total_benefits[year],\n        cumulative_net_benefits: +data.projections.monetary_stats.cumulative_net_benefits[year],\n        total_hours_spent_risk_adjusted: +data.projections.time_stats.total_hours_spent_risk_adjusted[year] * -1,\n        total_hours_saved: +data.projections.time_stats.total_hours_saved[year],\n        cumulative_time_net_benefits: +data.projections.time_stats.cumulative_time_net_benefits[year]\n    }); });\n    return { items: statsData, type: ApiType.nonGrouped, response_type: '' };\n};\nvar constants = function (isMoney) { return ({\n    cost: {\n        key: isMoney ? 'total_costs' : 'total_hours_spent_risk_adjusted',\n        color: '#8B8D8F',\n    },\n    benefit: {\n        key: isMoney ? 'total_benefits' : 'total_hours_saved',\n        color: isMoney ? '#81C46B' : '#0063CF',\n    },\n    net: {\n        key: isMoney ? 'cumulative_net_benefits' : 'cumulative_time_net_benefits',\n        color: '#EE7A00'\n    }\n}); };\nvar StatisticsTab = function (_a) {\n    var tabsArray = _a.tabsArray, data = _a.data;\n    var _b = useState(true), isMoney = _b[0], setIsMoney = _b[1];\n    var computeTotalSavings = function (d) {\n        return isMoney\n            ? d.projections.monetary_stats.cumulative_net_benefits.year3\n            : d.projections.time_stats.cumulative_time_net_benefits.year3;\n    };\n    var barChartData = {\n        charts: [\n            {\n                id: 1000,\n                kind: ChartKind.wrapper,\n                type: ChartTopLevelType.chart,\n                parent: null,\n                props: {\n                    height: 600,\n                    domainPadding: {\n                        x: 100\n                    },\n                    padding: {\n                        bottom: 60,\n                        left: 80\n                    },\n                    themeColor: ChartThemeColor.gray\n                },\n                tooltip: {\n                    cursor: true,\n                    stickToAxis: 'x'\n                },\n                xAxis: {\n                    label: 'Time',\n                },\n                yAxis: {\n                    label: isMoney ? 'Money Saved' : 'Hours Saved',\n                    tickFormat: 'formatNumberAsK',\n                    style: {\n                        grid: { stroke: '#D2D2D2' },\n                        axisLabel: { padding: 60 }\n                    },\n                },\n            },\n            {\n                id: 1001,\n                kind: ChartKind.stack,\n                parent: 1000,\n                props: {},\n            },\n            {\n                id: 1102,\n                kind: ChartKind.simple,\n                type: ChartType.bar,\n                parent: 1001,\n                props: {\n                    x: 'year',\n                    y: constants(isMoney).benefit.key,\n                    barRatio: 0.8,\n                    barWidth: 0,\n                    style: {\n                        data: {\n                            fill: constants(isMoney).benefit.color,\n                            width: 120,\n                        },\n                    },\n                },\n                tooltip: {\n                    labelName: 'Savings',\n                },\n            },\n            {\n                id: 1101,\n                kind: ChartKind.simple,\n                type: ChartType.bar,\n                parent: 1001,\n                props: {\n                    x: 'year',\n                    y: constants(isMoney).cost.key,\n                    barRatio: 0.8,\n                    barWidth: 0,\n                    style: {\n                        data: {\n                            fill: constants(isMoney).cost.color,\n                            width: 120,\n                        },\n                    },\n                },\n                tooltip: {\n                    labelName: 'Costs',\n                },\n            },\n            {\n                id: 1002,\n                kind: ChartKind.simple,\n                type: ChartType.line,\n                parent: 1000,\n                props: {\n                    x: 'year',\n                    y: constants(isMoney).net.key,\n                    style: {\n                        data: {\n                            stroke: constants(isMoney).net.color,\n                            strokeWidth: 5\n                        },\n                    },\n                },\n                tooltip: {\n                    labelName: 'Cumulative savings over time',\n                },\n            },\n        ],\n        functions: __assign(__assign({}, functions), { fetchFnc: function () { return new Promise(function (resolve) { resolve(getChartData(data)); }); } }),\n    };\n    var renderLeft = function () { return (React.createElement(Card, { isPlain: true },\n        React.createElement(CardHeader, null,\n            React.createElement(CardActions, null,\n                React.createElement(ToggleGroup, { \"aria-label\": \"toggleButton\" },\n                    React.createElement(ToggleGroupItem, { text: 'Money', buttonId: 'money', isSelected: isMoney, onChange: function () { return setIsMoney(true); } }),\n                    React.createElement(ToggleGroupItem, { text: 'Time', buttonId: 'time', isSelected: !isMoney, onChange: function () { return setIsMoney(false); } }))),\n            React.createElement(CardTitle, null, data.name)),\n        React.createElement(CardBody, null,\n            React.createElement(ChartRenderer, { schema: barChartData.charts, functions: barChartData.functions })))); };\n    var renderRight = function () { return (React.createElement(React.Fragment, null,\n        React.createElement(TotalSavings, { value: computeTotalSavings(data), isMoney: isMoney }),\n        React.createElement(Card, { isPlain: true },\n            React.createElement(CardBody, null,\n                React.createElement(List, { isPlain: true },\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).benefit.color }) }, \"Savings from automating this plan\"),\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).cost.color }) }, \"Costs from creating, maintaining and running the automation\"),\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).net.color }) }, \"Cumulative savings over time\")))),\n        React.createElement(FormulaDescription, { isMoney: isMoney }))); };\n    return (React.createElement(Card, null,\n        React.createElement(RoutedTabs, { tabsArray: tabsArray }),\n        React.createElement(Grid, null,\n            React.createElement(GridItem, { span: 9 }, renderLeft()),\n            React.createElement(GridItem, { span: 3 }, renderRight()))));\n};\nexport default StatisticsTab;\n","import React, { useEffect } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport useApi from '../../../Utilities/useApi';\n\nimport { readPlanOptions } from '../../../Api';\nimport { Paths } from '../../../paths';\n\nimport Form from '../Shared/Form';\n\nconst Edit = ({ data }) => {\n  const [options, setOptions] = useApi({});\n  const { id } = useParams();\n\n  useEffect(() => {\n    setOptions(readPlanOptions());\n  }, []);\n\n  const canWrite =\n    options.isSuccess &&\n    (options.data?.meta?.rbac?.perms?.write === true ||\n      options.data?.meta?.rbac?.perms?.all === true);\n\n  const showEdit = () => (\n    <>\n      <Form title=\"Edit plan\" options={options} data={data} />\n    </>\n  );\n\n  if (options.isSuccess) {\n    return canWrite ? (\n      showEdit()\n    ) : (\n      <Redirect to={`${Paths.savingsPlanner}/${id}`} />\n    );\n  }\n  return null;\n};\n\nEdit.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default Edit;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, Route, Switch } from 'react-router-dom';\nimport { CaretLeftIcon } from '@patternfly/react-icons';\nimport { Card } from '@patternfly/react-core';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\n\nimport DetailsTab from './DetailsTab';\nimport StatisticsTab from './StatisticsTab';\nimport SavingsPlanner from './SavingsPlanner';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nimport Breadcrumbs from '../../Components/Breadcrumbs';\n\nimport { preflightRequest, readPlan } from '../../Api';\n\nimport useApi from '../../Utilities/useApi';\n\nimport SavingsPlanEdit from './Edit';\n\nconst SavingsPlan = () => {\n  let { id } = useParams();\n  const [preflightError, setPreFlightError] = useState(null);\n  let pageTitle = 'Details';\n  if (location.pathname.indexOf('/statistics') !== -1) {\n    pageTitle = 'Statistics';\n  } else if (location.pathname.indexOf('/edit') !== -1) {\n    pageTitle = 'Edit plan';\n  }\n  const [selectedId, setSelectedId] = useState(id);\n  const [\n    {\n      isSuccess,\n      error,\n      data: { rbac = {}, items: plans = [] },\n    },\n    setData,\n  ] = useApi({ rbac: {}, items: [] });\n  const queryParams = { id: [selectedId] };\n\n  useEffect(() => {\n    setSelectedId(id);\n    preflightRequest().catch((error) => {\n      setPreFlightError({ preflightError: error });\n    });\n    const fetchEndpoints = () => {\n      setData(readPlan({ params: queryParams }));\n    };\n\n    fetchEndpoints();\n  }, []);\n\n  const canWrite =\n    isSuccess && (rbac.perms?.write === true || rbac.perms?.all === true);\n  const tabsArray = [\n    {\n      id: 0,\n      name: (\n        <>\n          <CaretLeftIcon />\n          {'Back to Plans'}\n        </>\n      ),\n      link: `/savings-planner`,\n    },\n    { id: 1, name: 'Details', link: `/savings-planner/${selectedId}/details` },\n    {\n      id: 2,\n      name: 'Statistics',\n      link: `/savings-planner/${selectedId}/statistics`,\n    },\n  ];\n\n  const breadcrumbUrl = `/savings-planner/${selectedId}`;\n  const breadcrumbsItems = isSuccess\n    ? [\n        { title: 'Savings Planner', navigate: '/savings-planner' },\n        { title: plans[0].name, navigate: breadcrumbUrl },\n      ]\n    : [];\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n  return (\n    <>\n      {error && (\n        <>\n          <ApiErrorState message={error.error} />\n        </>\n      )}\n      {isSuccess && (\n        <>\n          <PageHeader>\n            <Breadcrumbs items={breadcrumbsItems} />\n            <PageHeaderTitle title={pageTitle} />\n          </PageHeader>\n          <Main>\n            <Card>\n              <Switch>\n                <Route path=\"/savings-planner/:id/statistics\">\n                  <StatisticsTab\n                    tabsArray={tabsArray}\n                    data={plans[0]}\n                    queryParams={queryParams}\n                  />\n                </Route>\n                <Route path=\"/savings-planner/:id/details\">\n                  <DetailsTab\n                    plans={plans}\n                    tabsArray={tabsArray}\n                    canWrite={canWrite}\n                  />\n                </Route>\n                <Route path=\"/savings-planner/:id/edit\">\n                  <SavingsPlanEdit data={plans[0]} />\n                </Route>\n                <Route path=\"/savings-planner/:id\">\n                  <DetailsTab\n                    plans={plans}\n                    tabsArray={tabsArray}\n                    canWrite={canWrite}\n                  />\n                </Route>\n                <Route exact path=\"/savings-planner\">\n                  <SavingsPlanner />\n                </Route>\n              </Switch>\n            </Card>\n          </Main>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default SavingsPlan;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nimport {\n  Title,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody, Button,\n} from '@patternfly/react-core';\nimport { AddCircleOIcon } from '@patternfly/react-icons';\nimport {useHistory, useLocation} from \"react-router-dom\";\n\nconst EmptyList = ({ label = '', title = 'No items found.', message = '', canAdd = false, path }) => {\n  const history = useHistory();\n  return (\n    <EmptyState variant=\"full\">\n      <EmptyStateIcon icon={AddCircleOIcon}/>\n      <Title size=\"lg\" headingLevel=\"h3\">\n        {title}\n      </Title>\n      <EmptyStateBody>{message}</EmptyStateBody>\n      {canAdd && (\n          <Button\n            key=\"add-item-button\"\n            variant=\"primary\"\n            aria-label={label}\n            onClick={() => {\n              history.push({\n                pathname: path,\n              });\n            }}\n          >\n            {label}\n          </Button>\n        )\n        }\n    </EmptyState>\n  )\n};\n\nEmptyList.propTypes = {\n  canAdd: PropTypes.bool,\n  label: PropTypes.string,\n  message: PropTypes.string,\n  title: PropTypes.string,\n  path: PropTypes.string.isRequired\n};\n\nexport default EmptyList;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { Paths } from '../../paths';\n\nimport { formatDateTime } from '../../Utilities/helpers';\n\nimport {\n  Card,\n  CardHeader,\n  CardHeaderMain,\n  CardActions,\n  CardTitle,\n  CardBody,\n  CardFooter,\n  Checkbox,\n  Dropdown,\n  DropdownItem,\n  KebabToggle,\n  Label,\n} from '@patternfly/react-core';\n\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\nimport styled from 'styled-components';\nimport { stringify } from 'query-string';\n\nimport { Link, useRouteMatch } from 'react-router-dom';\n// import useSelected from \"../../Utilities/useSelected\";\n\nconst CardLabel = styled.span`\n  margin-right: 5px;\n`;\n\nconst PlanCard = ({\n  isSuccess,\n  plan,\n  selected = [],\n  handleSelect = () => {},\n  canWrite,\n}) => {\n  const {\n    id,\n    automation_status,\n    category,\n    description,\n    frequency_period,\n    modified,\n    name,\n    template_details,\n  } = plan;\n  const [isCardKebabOpen, setIsCardKebabOpen] = useState(false);\n\n  const match = useRouteMatch();\n  let history = useHistory();\n\n  const redirectToJobExplorer = (templateId) => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      quick_date_range: 'last_30_days',\n      status: ['failed', 'successful'],\n      template_id: [templateId],\n    };\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const renderTemplateLink = (template) => {\n    return template && isSuccess ? (\n      <a onClick={() => redirectToJobExplorer(template.id)}>{template.name}</a>\n    ) : null;\n  };\n\n  const kebabDropDownItems = [\n    <React.Fragment key={id}>\n      <DropdownItem\n        key=\"edit\"\n        onClick={() => history.push(`${match.url}/${id}/edit`)}\n        position=\"right\"\n      >\n        Edit\n      </DropdownItem>\n      <DropdownItem\n        key=\"link\"\n        onClick={() => history.push(`${match.url}/${id}/edit#link_template`)}\n        position=\"right\"\n      >\n        Link template\n      </DropdownItem>\n    </React.Fragment>,\n  ];\n\n  return (\n    <Card isHoverable isCompact>\n      <CardHeader>\n        <CardHeaderMain>\n          <CardTitle>\n            <Link to={`${match.url}/${id}`}>{name}</Link>\n          </CardTitle>\n        </CardHeaderMain>\n        {canWrite && (\n          <CardActions>\n            <Dropdown\n              onSelect={() => {}}\n              toggle={\n                <KebabToggle\n                  onToggle={() => setIsCardKebabOpen(!isCardKebabOpen)}\n                />\n              }\n              isOpen={isCardKebabOpen}\n              isPlain\n              dropdownItems={kebabDropDownItems}\n              position={'right'}\n            />\n            <Checkbox\n              onChange={() => handleSelect(plan)}\n              isChecked={selected.some((row) => row.id === plan.id)}\n              aria-label=\"card checkbox\"\n              id=\"check-1\"\n              name=\"check1\"\n            />\n          </CardActions>\n        )}\n      </CardHeader>\n      <CardBody>\n        {description ? <p>{description}</p> : null}\n        <div>\n          <CardLabel>Frequency</CardLabel>{' '}\n          {frequency_period ? frequency_period : <em>None</em>}\n        </div>\n        <div>\n          <CardLabel>Template</CardLabel>{' '}\n          {template_details ? (\n            renderTemplateLink(template_details)\n          ) : (\n            <em>None</em>\n          )}\n        </div>\n        <div>\n          <CardLabel>Automation status</CardLabel>\n          {automation_status.status === 'successful' ? (\n            <Label variant=\"outline\" color=\"green\" icon={<CheckCircleIcon />}>\n              Running\n            </Label>\n          ) : (\n            <Label\n              variant=\"outline\"\n              color=\"red\"\n              icon={<ExclamationCircleIcon />}\n            >\n              Not Running\n            </Label>\n          )}\n        </div>\n        <div>\n          <CardLabel>Last updated</CardLabel>{' '}\n          <em>{formatDateTime(modified)}</em>\n        </div>\n      </CardBody>\n      <CardFooter>\n        <Label>{category}</Label>\n      </CardFooter>\n    </Card>\n  );\n};\n\nPlanCard.propTypes = {\n  isSuccess: PropTypes.bool.isRequired,\n  canWrite: PropTypes.bool.isRequired,\n  selected: PropTypes.array,\n  handleSelect: PropTypes.func,\n  plan: PropTypes.object,\n};\n\nexport default PlanCard;\n","import React, { useContext, useEffect, useState } from 'react';\nimport {\n  func,\n  bool,\n  node,\n  number,\n  string,\n  arrayOf,\n  shape,\n  checkPropTypes,\n} from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  Alert,\n  Badge,\n  Button,\n  DropdownItem,\n  Tooltip,\n} from '@patternfly/react-core';\nimport AlertModal from '../AlertModal';\n\nimport { getRelatedResourceDeleteCounts } from '../../Utilities/getRelatedResourceDeleteDetails';\n\nimport ErrorDetail from '../ErrorDetail';\n\nconst WarningMessage = styled(Alert)`\n  margin-top: 10px;\n`;\n\nconst Label = styled.span`\n  && {\n    margin-right: 10px;\n  }\n`;\n\nconst requiredField = props => {\n  const { name, username, image } = props;\n  if (!name && !username && !image) {\n    return new Error(\n      `One of 'name', 'username' or 'image' is required by ItemToDelete component.`\n    );\n  }\n  if (name) {\n    checkPropTypes(\n      {\n        name: string,\n      },\n      { name: props.name },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  if (username) {\n    checkPropTypes(\n      {\n        username: string,\n      },\n      { username: props.username },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  if (image) {\n    checkPropTypes(\n      {\n        image: string,\n      },\n      { image: props.image },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  return null;\n};\n\nconst ItemToDelete = shape({\n  id: number.isRequired,\n  name: requiredField,\n  username: requiredField,\n  image: requiredField,\n});\n\nfunction ToolbarDeleteButton({\n  itemsToDelete,\n  pluralizedItemName,\n  errorMessage,\n  onDelete,\n  deleteDetailsRequests,\n  warningMessage,\n  deleteMessage,\n  cannotDelete,\n}) {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [deleteDetails, setDeleteDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [deleteMessageError, setDeleteMessageError] = useState();\n  const handleDelete = () => {\n    onDelete();\n    toggleModal();\n  };\n\n  const toggleModal = async isOpen => {\n    setIsLoading(true);\n    setDeleteDetails(null);\n    if (\n      isOpen &&\n      itemsToDelete.length === 1 &&\n      deleteDetailsRequests?.length > 0\n    ) {\n      const { results, error } = await getRelatedResourceDeleteCounts(\n        deleteDetailsRequests\n      );\n\n      if (error) {\n        setDeleteMessageError(error);\n      } else {\n        setDeleteDetails(results);\n      }\n    }\n    setIsLoading(false);\n    setIsModalOpen(isOpen);\n  };\n\n  const renderTooltip = () => {\n    const itemsUnableToDelete = itemsToDelete\n      .filter(cannotDelete)\n      .map(item => item.name || item.username)\n      .join(', ');\n    if (itemsToDelete.some(cannotDelete)) {\n      return (\n        <div>\n          {errorMessage ? (\n            <>\n              <span>{errorMessage}</span>\n              <span>{`: ${itemsUnableToDelete}`}</span>\n            </>\n          ) : (\n            `You do not have permission to delete ${pluralizedItemName}: ${itemsUnableToDelete}`\n          )}\n        </div>\n      );\n    }\n    if (itemsToDelete.length) {\n      return 'Delete';\n    }\n    return 'Select a plan to delete';\n  };\n\n  const modalTitle = `Delete ${pluralizedItemName}?`;\n\n  const isDisabled =\n    itemsToDelete.length === 0 || itemsToDelete.some(cannotDelete);\n\n  const buildDeleteWarning = () => {\n    const deleteMessages = [];\n    if (warningMessage) {\n      deleteMessages.push(warningMessage);\n    }\n    if (deleteMessage) {\n      if (deleteDetails || itemsToDelete.length > 1) {\n        deleteMessages.push(deleteMessage);\n      }\n    }\n\n    return (\n      <div>\n        {deleteMessages.map(message => (\n          <div aria-label={message} key={message}>\n            {message}\n          </div>\n        ))}\n        {deleteDetails &&\n          Object.entries(deleteDetails).map(([key, value]) => (\n            <div key={key} aria-label={`${key}: ${value}`}>\n              <Label>{key}</Label>\n              <Badge>{value}</Badge>\n            </div>\n          ))}\n      </div>\n    );\n  };\n\n  if (deleteMessageError) {\n    return (\n      <AlertModal\n        isOpen={deleteMessageError}\n        title={'Error!'}\n        onClose={() => {\n          toggleModal(false);\n          setDeleteMessageError();\n        }}\n      >\n        <ErrorDetail error={deleteMessageError} />\n      </AlertModal>\n    );\n  }\n  const shouldShowDeleteWarning =\n    warningMessage ||\n    (itemsToDelete.length === 1 && deleteDetails) ||\n    (itemsToDelete.length > 1 && deleteMessage);\n\n  return (\n    <>\n      <Tooltip content={renderTooltip()} position=\"top\">\n        <div>\n          <Button\n            variant=\"secondary\"\n            ouiaId=\"delete-button\"\n            spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n            aria-label={'Delete'}\n            onClick={() => toggleModal(true)}\n            isDisabled={isDisabled}\n          >\n            {'Delete'}\n          </Button>\n        </div>\n      </Tooltip>\n\n      {isModalOpen && (\n        <AlertModal\n          variant=\"danger\"\n          title={modalTitle}\n          isOpen={isModalOpen}\n          onClose={() => toggleModal(false)}\n          actions={[\n            <Button\n              ouiaId=\"delete-modal-confirm\"\n              key=\"delete\"\n              variant=\"danger\"\n              aria-label={'confirm delete'}\n              isDisabled={Boolean(\n                deleteDetails\n              )}\n              onClick={handleDelete}\n            >\n              {'Delete'}\n            </Button>,\n            <Button\n              key=\"cancel\"\n              variant=\"link\"\n              aria-label={'cancel delete'}\n              onClick={() => toggleModal(false)}\n            >\n              {'Cancel'}\n            </Button>,\n          ]}\n        >\n          <div>{'This action will delete the following:'}</div>\n          {itemsToDelete.map(item => (\n            <span key={item.id}>\n              <strong>{item.name || item.username || item.image}</strong>\n              <br />\n            </span>\n          ))}\n          {shouldShowDeleteWarning && (\n            <WarningMessage\n              variant=\"warning\"\n              isInline\n              title={buildDeleteWarning()}\n            />\n          )}\n        </AlertModal>\n      )}\n    </>\n  );\n}\n\nToolbarDeleteButton.propTypes = {\n  onDelete: func.isRequired,\n  itemsToDelete: arrayOf(ItemToDelete).isRequired,\n  pluralizedItemName: string,\n  warningMessage: node,\n  cannotDelete: func,\n};\n\nToolbarDeleteButton.defaultProps = {\n  pluralizedItemName: 'Items',\n  warningMessage: null,\n  cannotDelete: item => !item,\n};\n\nexport default ToolbarDeleteButton;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport {\n  deletePlan,\n  preflightRequest,\n  readPlanOptions,\n  readPlans,\n} from '../../Api';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport EmptyList from '../../Components/EmptyList';\nimport Pagination from '../../Components/Pagination';\nimport PlanCard from './PlanCard';\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { savingsPlanner } from '../../Utilities/constants';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nimport { Button, Gallery, PaginationVariant } from '@patternfly/react-core';\n\nimport ToolbarDeleteButton from '../../Components/Toolbar/ToolbarDeleteButton';\nimport useSelected from '../../Utilities/useSelected';\nimport { useDeleteItems } from '../../Utilities/useRequest';\nimport ErrorDetail from '../../Components/ErrorDetail';\nimport AlertModal from '../../Components/AlertModal';\n\nconst SavingsPlanner = () => {\n  const history = useHistory();\n  const { pathname } = useLocation();\n\n  const { queryParams, setFromPagination, setFromToolbar } = useQueryParams(\n    savingsPlanner.defaultParams\n  );\n  const [\n    {\n      isLoading,\n      isSuccess,\n      error,\n      data: { meta = {}, items: data = [] },\n    },\n    setData,\n  ] = useApi({ meta: {}, items: [] });\n  const [options, setOptions] = useApi({});\n  const [preflightError, setPreFlightError] = useState(null);\n\n  const combinedOptions = {\n    ...options.data,\n    name: [{ key: 'name', value: null }],\n  };\n\n  const fetchEndpoints = () => {\n    preflightRequest().catch((error) => {\n      setPreFlightError({ preflightError: error });\n    });\n    setData(readPlans({ params: queryParams }));\n    setOptions(readPlanOptions());\n  };\n\n  useEffect(() => {\n    fetchEndpoints();\n  }, [queryParams]);\n\n  const canWrite =\n    options.isSuccess &&\n    (options.data?.meta?.rbac?.perms?.write === true ||\n      options.data?.meta?.rbac?.perms?.all === true);\n\n  const { selected, isAllSelected, handleSelect, setSelected } =\n    useSelected(data);\n\n  const {\n    isLoading: deleteLoading,\n    deletionError,\n    deleteItems: deleteItems,\n    clearDeletionError,\n  } = useDeleteItems(\n    useCallback(async () => {\n      return Promise.all(\n        selected.map((plan) => deletePlan({ params: { id: plan.id } }))\n      );\n    }, [selected]),\n    {\n      qsConfig: queryParams,\n      allItemsSelected: isAllSelected,\n      fetchItems: fetchEndpoints,\n    }\n  );\n\n  const handleDelete = async () => {\n    await deleteItems();\n    setSelected([]);\n  };\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Savings Planner'} />\n        <FilterableToolbar\n          categories={combinedOptions}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n          additionalControls={[\n            ...(canWrite\n              ? [\n                  <Button\n                    key=\"add-plan-button\"\n                    variant=\"primary\"\n                    aria-label=\"Add plan\"\n                    onClick={() => {\n                      history.push({\n                        pathname: `${pathname}/add`,\n                      });\n                    }}\n                  >\n                    Add plan\n                  </Button>,\n                ]\n              : []),\n            canWrite && (\n              <ToolbarDeleteButton\n                key=\"delete-plan-button\"\n                onDelete={handleDelete}\n                itemsToDelete={selected}\n                pluralizedItemName={'Savings plan'}\n              />\n            ),\n          ]}\n          pagination={\n            <Pagination\n              count={meta?.total_count}\n              params={{\n                limit: queryParams.limit,\n                offset: queryParams.offset,\n              }}\n              setPagination={setFromPagination}\n              isCompact\n            />\n          }\n        />\n      </PageHeader>\n      {preflightError && (\n        <Main>\n          <EmptyState {...preflightError} />\n        </Main>\n      )}\n      {error && (\n        <Main style={{ height: '100vh' }}>\n          <ApiErrorState message={error.error} />\n        </Main>\n      )}\n      {(isLoading || deleteLoading) && (\n        <Main style={{ height: '100vh' }}>\n          <LoadingState />\n        </Main>\n      )}\n      {isSuccess && data.length === 0 && (\n        <Main>\n          <EmptyList\n            label={'Add plan'}\n            title={'No plans added'}\n            message={canWrite ? 'No plans have been added yet. Add your first plan.' : 'No plans have been added yet.'}\n            canAdd={canWrite}\n            path={`${pathname}/add`}\n           />\n        </Main>\n      )}\n      {isSuccess && (\n        <Main style={{ height: '100vh' }}>\n          <Gallery hasGutter>\n            {options.isSuccess &&\n              data.map((datum) => (\n                <PlanCard\n                  key={datum.id}\n                  isSuccess={options.isSuccess}\n                  selected={selected}\n                  plan={datum}\n                  handleSelect={handleSelect}\n                  canWrite={canWrite}\n                />\n              ))}\n          </Gallery>\n        </Main>\n      )}\n      <Pagination\n        count={meta?.total_count}\n        params={{\n          limit: queryParams.limit,\n          offset: queryParams.offset,\n        }}\n        setPagination={setFromPagination}\n        variant={PaginationVariant.bottom}\n        isSticky\n      />\n      {deletionError && (\n        <AlertModal\n          aria-label={'Deletion error'}\n          isOpen={deletionError}\n          onClose={clearDeletionError}\n          title={'Error'}\n          variant=\"error\"\n        >\n          {'Failed to delete one or more plans.'}\n          <ErrorDetail error={deletionError} />\n        </AlertModal>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default SavingsPlanner;\n","import { useState } from 'react';\n\n/**\n * useSelected hook provides a way to read and update a selected list\n * Param: array of list items\n * Returns: {\n *  selected: array of selected list items\n *  isAllSelected: boolean that indicates if all items are selected\n *  handleSelect: function that adds and removes items from selected list\n *  setSelected: setter function\n * }\n */\n\nexport default function useSelected(list = []) {\n  const [selected, setSelected] = useState([]);\n  const isAllSelected = selected.length > 0 && selected.length === list.length;\n\n  const handleSelect = row => {\n    if (selected.some(s => s.id === row.id)) {\n      setSelected(prevState => [...prevState.filter(i => i.id !== row.id)]);\n    } else {\n      setSelected(prevState => [...prevState, row]);\n    }\n  };\n  return { selected, isAllSelected, handleSelect, setSelected };\n}\n","export const actions = {\n  SET_NAME: 'SET_NAME',\n  SET_CATEGORY: 'SET_CATEGORY',\n  SET_DESCRIPTION: 'SET_DESCRIPTION',\n  SET_MANUAL_TIME: 'SET_MANUAL_TIME',\n  SET_HOSTS: 'SET_HOSTS',\n  SET_FREQUENCY_PERIOD: 'SET_FREQUENCY_PERIOD',\n  SET_TASKS: 'SET_TASKS',\n  SET_TEMPLATE_ID: 'SET_TEMPLATE_ID',\n};\n","import { useReducer } from 'react';\n\nimport { actions } from './constants';\n\nconst formatPayload = (data) => {\n  if (data.template_id === -2) {\n    delete data.template_id;\n  }\n\n  data.tasks = data.tasks.map((task, index) => ({\n    task,\n    task_order: index + 1,\n  }));\n\n  // these two are fields the api expects but we don't\n  // have form elements for in the MVP.\n  data.hourly_rate = 50;\n  data.frequency_per_period = 1;\n\n  return data;\n};\n\nconst convertTasks = (tasks = []) => {\n  if (tasks?.length) {\n    return tasks\n      .sort((a, b) => a.task_order - b.task_order)\n      .map(({ task }) => task);\n  }\n  return undefined;\n};\n\nconst usePlanData = (initial) => {\n  const formReducer = (state, { type, value }) => {\n    switch (type) {\n      /* v1 api reducers */\n      case actions.SET_NAME:\n        return {\n          ...state,\n          name: value,\n        };\n      case actions.SET_CATEGORY:\n        return {\n          ...state,\n          category: value,\n        };\n      case actions.SET_DESCRIPTION:\n        return {\n          ...state,\n          description: value,\n        };\n      case actions.SET_MANUAL_TIME:\n        return {\n          ...state,\n          manual_time: value,\n        };\n\n      case actions.SET_HOSTS:\n        return {\n          ...state,\n          hosts: value,\n        };\n      case actions.SET_FREQUENCY_PERIOD:\n        return {\n          ...state,\n          frequency_period: value,\n        };\n      case actions.SET_TASKS:\n        return {\n          ...state,\n          tasks: value,\n        };\n      case actions.SET_TEMPLATE_ID:\n        return {\n          ...state,\n          template_id: value,\n        };\n      default:\n        throw new Error(\n          `usePlanData reducer action type ${type} was not found.`\n        );\n    }\n  };\n\n  const [formData, dispatch] = useReducer(formReducer, {\n    name: initial?.name || '',\n    category: initial?.category || 'system',\n    description: initial?.description || '',\n    manual_time: initial?.manual_time || 240,\n    hosts: initial?.hosts || 1,\n    frequency_period: initial?.frequency_period || 'weekly',\n    tasks: convertTasks(initial?.tasks) || [],\n    template_id: initial?.template_id || -2,\n  });\n\n  return {\n    formData,\n    requestPayload: formatPayload({ ...formData }),\n    dispatch,\n  };\n};\n\nexport default usePlanData;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Form,\n  FormGroup,\n  Grid,\n  Select,\n  SelectOption,\n  TextInput,\n} from '@patternfly/react-core';\n\nimport { actions } from './constants';\n\nconst Details = ({ options, formData, dispatch }) => {\n  const { name, category, description, manual_time, hosts, frequency_period } =\n    formData;\n\n  const [categoryIsOpen, setCategoryIsOpen] = useState(false);\n  const [manualTimeIsOpen, setManualTimeIsOpen] = useState(false);\n  const [frequencyPeriodIsOpen, setFrequencyPeriodIsOpen] = useState(false);\n\n  return (\n    <Form>\n      {options?.data && (\n        <Grid hasGutter md={6}>\n          <FormGroup\n            label=\"What do you want to automate?\"\n            isRequired\n            fieldId=\"name-field\"\n          >\n            <TextInput\n              isRequired\n              placeholder=\"Example: Provision NGINX server\"\n              type=\"text\"\n              id=\"name-field\"\n              name=\"name\"\n              value={name}\n              onChange={(newName) =>\n                dispatch({\n                  type: actions.SET_NAME,\n                  value: newName,\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"What type of task is it?\"\n            isRequired\n            fieldId=\"category-field\"\n          >\n            <Select\n              id=\"category-field\"\n              isOpen={categoryIsOpen}\n              variant={'single'}\n              aria-label={'Plan category selector'}\n              onToggle={() => setCategoryIsOpen(!categoryIsOpen)}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_CATEGORY,\n                  value: selection,\n                });\n                setCategoryIsOpen(false);\n              }}\n              selections={category}\n            >\n              {(options.data?.category || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n          <FormGroup\n            label=\"Enter a description of your automation plan\"\n            fieldId=\"description-field\"\n          >\n            <TextInput\n              type=\"text\"\n              placeholder=\"Place description here\"\n              id=\"description-field\"\n              name=\"description\"\n              value={description}\n              onChange={(newDescription) =>\n                dispatch({\n                  type: actions.SET_DESCRIPTION,\n                  value: newDescription,\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"How long does it take to do this manually?\"\n            fieldId=\"manual-time-field\"\n          >\n            <Select\n              id=\"manual-time-field\"\n              isOpen={manualTimeIsOpen}\n              variant={'single'}\n              placeholderText=\"Select amount\"\n              aria-label={'Plan time selector'}\n              onToggle={() => setManualTimeIsOpen(!manualTimeIsOpen)}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_MANUAL_TIME,\n                  value: selection,\n                });\n                setManualTimeIsOpen(false);\n              }}\n              selections={manual_time}\n            >\n              {(options.data?.manual_time || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n          <FormGroup\n            label=\"How many hosts do you plan to run this on?\"\n            fieldId=\"hosts-field\"\n          >\n            <TextInput\n              type=\"number\"\n              placeholder=\"Enter number of hosts\"\n              id=\"hosts-field\"\n              name=\"hosts\"\n              value={hosts}\n              onChange={(newHosts) =>\n                dispatch({\n                  type: actions.SET_HOSTS,\n                  value: newHosts,\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"How often do you do this?\"\n            fieldId=\"frequency-period-field\"\n          >\n            <Select\n              id=\"frequency-period-field\"\n              isOpen={frequencyPeriodIsOpen}\n              variant={'single'}\n              placeholderText=\"Select frequency period\"\n              aria-label={'Plan frequency period selector'}\n              onToggle={() => {\n                setFrequencyPeriodIsOpen(!frequencyPeriodIsOpen);\n              }}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_FREQUENCY_PERIOD,\n                  value: selection,\n                });\n                setFrequencyPeriodIsOpen(false);\n              }}\n              selections={frequency_period}\n            >\n              {(options.data?.frequency_period || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n        </Grid>\n      )}\n    </Form>\n  );\n};\n\nDetails.propTypes = {\n  options: PropTypes.object.isRequired,\n  formData: PropTypes.object.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Details;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  DataList,\n  DataListAction,\n  DataListItem,\n  DataListCell,\n  DataListItemRow,\n  DataListControl,\n  DataListDragButton,\n  DataListItemCells,\n  Form,\n  FormGroup,\n  Grid,\n  InputGroup,\n  TextInput,\n  Title,\n} from '@patternfly/react-core';\nimport { PlusIcon, TimesIcon } from '@patternfly/react-icons';\n\nimport { actions } from './constants';\n\nconst TaskSection = styled.div`\n  margin-top: 20px;\n`;\n\nconst TaskTitle = styled(Title)`\n  margin-bottom: 10px;\n`;\n\nconst TaskDeleteButton = styled(Button)`\n  padding: 0 16px;\n`;\n\nconst DeleteTaskActionSection = styled(DataListAction)`\n  padding: 6px 0;\n`;\n\nconst TaskRow = styled(DataListItemRow)`\n  align-items: center;\n`;\n\nconst Tasks = ({ tasks, dispatch }) => {\n  const setTasks = (val) => {\n    dispatch({ type: actions.SET_TASKS, value: val });\n  };\n\n  const [taskToAdd, setTaskToAdd] = useState('');\n\n  const [liveText, setLiveText] = useState('');\n  const [id, setId] = useState('');\n\n  const onDragStart = (newId) => {\n    setId(newId);\n    setLiveText(`Dragging started for task ${newId}.`);\n  };\n\n  const onDragMove = (oldIndex, newIndex) => {\n    setLiveText(\n      `Dragging task ${id}.  Task ${oldIndex} is now task ${newIndex}.`\n    );\n  };\n\n  const onDragCancel = () => {\n    setLiveText('Dragging cancelled. Tasks list order is unchanged.');\n  };\n\n  const onDragFinish = (newItemOrder) => {\n    setLiveText('Dragging finsihed');\n    setTasks([...newItemOrder]);\n  };\n\n  const appendTask = () => {\n    setTasks([...tasks, taskToAdd]);\n    setTaskToAdd('');\n  };\n\n  const handleTextKeyDown = (e) => {\n    if (e.key && e.key === 'Enter') {\n      e.preventDefault();\n      appendTask();\n    }\n  };\n\n  const removeTask = (task) => {\n    setTasks(tasks.filter((t) => t !== task));\n  };\n\n  return (\n    <>\n      <Form>\n        <Grid hasGutter md={6}>\n          <FormGroup\n            label=\"What tasks do you need to accomplish this plan?\"\n            fieldId=\"task-field\"\n          >\n            <InputGroup>\n              <TextInput\n                placeholder=\"Enter a description of each task\"\n                type=\"text\"\n                id=\"task-field\"\n                name=\"task\"\n                value={taskToAdd}\n                onChange={(newTaskName) => setTaskToAdd(newTaskName)}\n                onKeyDown={handleTextKeyDown}\n              />\n              <Button\n                onClick={appendTask}\n                variant=\"control\"\n                aria-label=\"Add task\"\n              >\n                <PlusIcon />\n              </Button>\n            </InputGroup>\n          </FormGroup>\n        </Grid>\n      </Form>\n      {tasks.length > 0 && (\n        <TaskSection>\n          <TaskTitle headingLevel=\"h4\" size=\"xl\">\n            Tasks\n          </TaskTitle>\n          <DataList\n            aria-label=\"Draggable list to reorder and remove tasks.\"\n            isCompact\n            onDragFinish={onDragFinish}\n            onDragStart={onDragStart}\n            onDragMove={onDragMove}\n            onDragCancel={onDragCancel}\n            itemOrder={tasks}\n          >\n            {tasks.map((task, index) => (\n              <DataListItem\n                aria-labelledby={`cell-${index + 1}`}\n                id={task}\n                key={index + 1}\n              >\n                <TaskRow>\n                  <DataListControl>\n                    <DataListDragButton\n                      aria-label=\"Reorder\"\n                      aria-labelledby={`cell-${index + 1}`}\n                      aria-describedby=\"Press space or enter to begin dragging, and use the arrow keys to navigate up or down. Press enter to confirm the drag, or any other key to cancel the drag operation.\"\n                      aria-pressed=\"false\"\n                    />\n                  </DataListControl>\n                  <DataListItemCells\n                    dataListCells={[\n                      <DataListCell key={index + 1}>\n                        <span id={`cell-${index + 1}`}>{`${\n                          index + 1\n                        }. ${task}`}</span>\n                      </DataListCell>,\n                    ]}\n                  />\n                  <DeleteTaskActionSection aria-label=\"Actions\">\n                    <TaskDeleteButton\n                      onClick={() => removeTask(task)}\n                      variant=\"plain\"\n                      aria-label=\"Delete\"\n                    >\n                      <TimesIcon />\n                    </TaskDeleteButton>\n                  </DeleteTaskActionSection>\n                </TaskRow>\n              </DataListItem>\n            ))}\n          </DataList>\n        </TaskSection>\n      )}\n      <div className=\"pf-screen-reader\" aria-live=\"assertive\">\n        {liveText}\n      </div>\n    </>\n  );\n};\n\nTasks.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Tasks;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { parse, stringify } from 'query-string';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  Form,\n  FormGroup,\n  PaginationVariant,\n} from '@patternfly/react-core';\nimport {\n  TableComposable,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n} from '@patternfly/react-table';\n\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nimport LoadingState from '../../../Components/LoadingState';\nimport EmptyState from '../../../Components/EmptyState';\nimport NoResults from '../../../Components/NoResults';\nimport ApiErrorState from '../../../Components/ApiErrorState';\nimport Pagination from '../../../Components/Pagination';\n\nimport { notAuthorizedParams } from '../../../Utilities/constants';\nimport { useQueryParams } from '../../../Utilities/useQueryParams';\nimport useApi from '../../../Utilities/useApi';\n\nimport {\n  preflightRequest,\n  readJobExplorer,\n  readJobExplorerOptions,\n} from '../../../Api';\n\nimport FilterableToolbar from '../../../Components/Toolbar/';\n\nimport { actions } from './constants';\n\nconst ListFooter = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst initialQueryParams = {\n  group_by: 'template',\n  limit: 10,\n  group_by_time: false,\n  offset: 0,\n};\n\nconst Templates = ({ template_id, dispatch: formDispatch }) => {\n  const { pathname, hash, search } = useLocation();\n  const history = useHistory();\n\n  const [preflightError, setPreFlightError] = useState(null);\n  const [\n    {\n      isLoading,\n      isSuccess,\n      error,\n      data: { meta = {}, items: templates = [] },\n    },\n    setData,\n  ] = useApi({ meta: {}, items: [] });\n  const [options, setOptions] = useApi({});\n\n  const {\n    queryParams,\n    setFromPagination,\n    setFromToolbar,\n    dispatch: queryParamsDispatch,\n  } = useQueryParams(initialQueryParams);\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'job-explorer', secondaryNav: true });\n\n    preflightRequest().catch((error) => {\n      setPreFlightError({ preflightError: error });\n    });\n\n    const initialSearchParams = parse(search, {\n      arrayFormat: 'bracket',\n      parseBooleans: true,\n      parseNumbers: true,\n    });\n\n    queryParamsDispatch({\n      type: 'REINITIALIZE',\n      value: {\n        ...initialQueryParams,\n        ...initialSearchParams,\n      },\n    });\n  }, []);\n\n  useEffect(() => {\n    setData(readJobExplorer({ params: queryParams }));\n    setOptions(readJobExplorerOptions({ params: queryParams }));\n    history.replace({\n      pathname,\n      hash,\n      search: stringify(queryParams, { arrayFormat: 'bracket' }),\n    });\n  }, [queryParams]);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <>\n      {preflightError && <EmptyState {...preflightError} />}\n\n      {!preflightError && (\n        <Form>\n          <FormGroup\n            label=\"Link a template to this plan:\"\n            fieldId=\"template-link-field\"\n          >\n            <FilterableToolbar\n              hideQuickDateRange\n              hideSortOptions\n              categories={options.data}\n              filters={queryParams}\n              setFilters={setFromToolbar}\n              pagination={\n                <Pagination\n                  count={meta?.count}\n                  params={{\n                    limit: queryParams.limit,\n                    offset: queryParams.offset,\n                  }}\n                  setPagination={setFromPagination}\n                  isCompact\n                />\n              }\n            />\n            {error && <ApiErrorState message={error.error} />}\n            {isLoading && <LoadingState />}\n            {isSuccess && templates.length <= 0 && <NoResults />}\n            {isSuccess && templates.length > 0 && (\n              <TableComposable\n                aria-label=\"Template link table\"\n                variant=\"compact\"\n              >\n                <Thead>\n                  <Tr>\n                    <Th />\n                    <Th key=\"template-name-column-header\">Name</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {templates.map(({ id, name }) => (\n                    <Tr key={`template-detail-${id}`}>\n                      <Td\n                        key={`template-detail-${id}-radio-td`}\n                        select={{\n                          rowIndex: id,\n                          onSelect: (event, isSelected, value) =>\n                            formDispatch({\n                              type: actions.SET_TEMPLATE_ID,\n                              value,\n                            }),\n                          isSelected: template_id === id,\n                          variant: 'radio',\n                        }}\n                      />\n                      <Td>{name}</Td>\n                    </Tr>\n                  ))}\n                </Tbody>\n              </TableComposable>\n            )}\n            <ListFooter>\n              <div>\n                {template_id !== -2 && (\n                  <Button\n                    key=\"clear-selection-button\"\n                    variant=\"link\"\n                    aria-label=\"Clear selection\"\n                    onClick={() => {\n                      formDispatch({\n                        type: actions.SET_TEMPLATE_ID,\n                        value: -2,\n                      });\n                    }}\n                  >\n                    Clear selection\n                  </Button>\n                )}\n              </div>\n              <Pagination\n                count={meta?.count}\n                params={{\n                  limit: queryParams.limit,\n                  offset: queryParams.offset,\n                }}\n                setPagination={setFromPagination}\n                variant={PaginationVariant.bottom}\n              />\n            </ListFooter>\n          </FormGroup>\n        </Form>\n      )}\n    </>\n  );\n};\n\nTemplates.propTypes = {\n  template_id: PropTypes.number.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Templates;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory, useLocation, Redirect } from 'react-router-dom';\n\nimport { Wizard } from '@patternfly/react-core';\n\nimport { Paths } from '../../../paths';\n\nimport useApi from '../../../Utilities/useApi';\nimport usePlanData from './usePlanData';\n\nimport { createPlan, updatePlan } from '../../../Api';\n\nimport Details from './Details';\nimport Tasks from './Tasks';\nimport Templates from './Templates';\n\nconst Form = ({ title, options, data = {} }) => {\n  const history = useHistory();\n  const { hash, pathname } = useLocation();\n\n  const [startStep, setStartStep] = useState(null);\n\n  const [{ isSuccess }, setData] = useApi({ meta: {}, items: [] });\n  const { formData, requestPayload, dispatch } = usePlanData(data);\n\n  const steps = [\n    {\n      step_number: 1,\n      id: 'details',\n      name: 'Details',\n      component: (\n        <Details options={options} formData={formData} dispatch={dispatch} />\n      ),\n    },\n    {\n      step_number: 2,\n      id: 'tasks',\n      name: 'Tasks',\n      component: <Tasks tasks={formData.tasks} dispatch={dispatch} />,\n    },\n    {\n      step_number: 3,\n      id: 'link_template',\n      name: 'Link template',\n      component: (\n        <Templates template_id={formData.template_id} dispatch={dispatch} />\n      ),\n      nextButtonText: 'Save',\n    },\n  ];\n\n  useEffect(() => {\n    if (pathname.indexOf('/add') === -1 && hash) {\n      setStartStep(steps.find((step) => `#${step.id}` === hash).step_number);\n    } else {\n      history.replace({\n        hash: 'details',\n      });\n      setStartStep(1);\n    }\n  }, []);\n\n  const onStepChange = (newStep) => {\n    history.replace({\n      hash: newStep.id,\n    });\n  };\n\n  const onSave = () => {\n    data?.id\n      ? setData(\n          updatePlan({\n            id: data?.id,\n            params: requestPayload,\n          })\n        )\n      : setData(\n          createPlan({\n            params: requestPayload,\n          })\n        );\n  };\n\n  const onClose = () => {\n    history.push({\n      pathname: Paths.savingsPlanner,\n    });\n  };\n\n  return (\n    <>\n      {isSuccess && <Redirect to={Paths.savingsPlanner} />}\n      {startStep && (\n        <Wizard\n          navAriaLabel={`${title} steps`}\n          mainAriaLabel={`${title} content`}\n          steps={steps}\n          onGoToStep={onStepChange}\n          onNext={onStepChange}\n          onBack={onStepChange}\n          onSave={onSave}\n          onClose={onClose}\n          startAtStep={startStep}\n          height=\"calc(100vh - 285px)\"\n        />\n      )}\n    </>\n  );\n};\n\nForm.propTypes = {\n  title: PropTypes.string.isRequired,\n  options: PropTypes.object.isRequired,\n  data: PropTypes.object,\n};\n\nForm.defaultProps = {\n  data: {},\n};\n\nexport default Form;\n","export const jobExplorer = {\n  attributes: [\n    'id',\n    'status',\n    'job_type',\n    'started',\n    'finished',\n    'elapsed',\n    'created',\n    'cluster_name',\n    'org_name',\n    'most_failed_tasks',\n  ],\n  defaultParams: {\n    status: ['successful', 'failed'],\n    quick_date_range: 'last_30_days',\n    job_type: ['workflowjob', 'job'],\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    sort_options: 'created',\n    sort_order: 'desc',\n    only_root_workflows_and_standalone_jobs: false,\n    limit: 5,\n    offset: 0,\n  },\n};\n\nexport const roi = {\n  defaultParams: {\n    status: ['successful'],\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    quick_date_range: 'roi_last_year',\n    job_type: ['job'],\n    sort_options: 'template_productivity_score',\n    sort_order: 'desc',\n    start_date: null,\n    end_date: null,\n    limit: 25,\n    only_root_workflows_and_standalone_jobs: true,\n    attributes: [\n      'successful_hosts_total',\n      'successful_elapsed_total',\n      'total_org_count',\n      'total_cluster_count',\n    ],\n    group_by: 'template',\n    group_by_time: false,\n  },\n};\n\nexport const organizationStatistics = {\n  defaultParams: {\n    status: [],\n    org_id: [],\n    quick_date_range: 'last_30_days',\n    limit: 5,\n    offset: 0,\n    job_type: ['workflowjob', 'job'],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    start_date: null,\n    end_date: null,\n  },\n};\n\nexport const clusters = {\n  defaultParams: {\n    status: ['successful', 'failed'],\n    quick_date_range: 'last_30_days',\n    job_type: ['workflowjob', 'job'],\n    group_by_time: true,\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    only_root_workflows_and_standalone_jobs: false,\n  },\n};\n\nexport const savingsPlanner = {\n  defaultParams: {\n    template_id: [],\n    inventory_id: [],\n    automation_status: [],\n    category: [],\n    frequency_period: [],\n    name: '',\n    limit: 5,\n    offset: 0,\n    sort_options: 'modified',\n    sort_order: 'desc',\n  },\n};\n\nexport const notAuthorizedParams = {\n  title: 'RBAC Access Denied',\n  description:\n    'User does not have privileges to perform this action. Contact your organization adminstrator(s) for more information.',\n};\n","export async function getRelatedResourceDeleteCounts(requests) {\n  const results = {};\n  let error = null;\n  let hasCount = false;\n\n  try {\n    await Promise.all(\n      requests.map(async ({ request, label }) => {\n        const {\n          items: { count },\n        } = await request();\n        if (count > 0) {\n          results[label] = count;\n          hasCount = true;\n        }\n      })\n    );\n  } catch (err) {\n    error = err;\n  }\n\n  return {\n    results: hasCount && results,\n    error,\n  };\n}\n\nexport const relatedResourceDeleteRequests = {\n  savingsPlan: (selected, readRecordApi) => [\n    {\n      request: async () =>\n        readRecordApi({\n          params: {id: [selected.id]}\n        }),\n      label: 'Plan',\n    },\n  ],\n};\n","import moment from 'moment';\n\n/*\n * isNumeric - return true if input is a real number\n */\nexport function isNumeric(val) {\n  if (val === 0 || val === '0') {\n    return true;\n  }\n\n  if (parseInt(val)) {\n    return true;\n  }\n\n  if (parseFloat(val)) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function trimStr(str) {\n  return str.toString().replace(/['\"]+/g, '');\n}\n\nexport function formatDateTime(dateTime) {\n  return moment(new Date(dateTime).toISOString()).format('M/D/YYYY h:mm:ssa');\n}\n\nexport function formatDate(date) {\n  return moment(date).format('YYYY-MM-DD');\n}\n\nexport function formatSeconds(seconds) {\n  return moment().startOf('day').seconds(seconds).format('H:mm:ss');\n}\n\nexport function getTotal(data) {\n  if (!data) {\n    return;\n  } else {\n    let total = 0;\n    data.forEach((datum) => {\n      total += parseInt(datum.count);\n    });\n    return total;\n  }\n}\n\nexport function formatPercentage(val) {\n  if (isNaN(val)) {\n    return;\n  }\n\n  return `${val}%`;\n}\n\nexport const capitalize = (s) => {\n  if (typeof s !== 'string') {\n    return '';\n  }\n\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport function calculateDelta(a, b) {\n  if (!isNumeric(a) || !isNumeric(b)) {\n    return 0;\n  }\n\n  // never return less than zero ...\n  if (b - a < 0) {\n    return 0;\n  }\n\n  return b - a;\n}\n\nexport function convertMinsToMs(mins) {\n  if (!parseInt(mins)) {\n    return 0;\n  }\n\n  return mins * 60000;\n}\n\nexport function convertMsToMins(ms) {\n  if (!parseInt(ms)) {\n    return 0;\n  }\n\n  return ms / 60000;\n}\n\nexport function convertSecondsToMins(seconds) {\n  if (!parseInt(seconds)) {\n    return 0;\n  }\n\n  return seconds / 60;\n}\n\nexport function convertMinsToSeconds(mins) {\n  if (!parseInt(mins) || parseInt(mins) < 0) {\n    return 0;\n  }\n\n  return +parseInt(mins) * 60;\n}\n\nexport function convertSecondsToHours(seconds) {\n  if (!parseInt(seconds)) {\n    return 0;\n  }\n\n  return seconds / 3600;\n}\n\nexport function convertWithCommas(arr, key) {\n  const split = arr.reduce((strs, datum) => {\n    strs.push(datum[key]);\n    return strs;\n  }, []);\n  return split.join(', ');\n}\n\nexport function formatJobType(type) {\n  return type === 'job' ? 'Playbook run' : 'Workflow job';\n}\n\nexport function formatJobStatus(status) {\n  return status === 'successful' ? 'Success' : 'Failed';\n}\n\nexport function formatJobDetailsURL(baseURL, jobId) {\n  const subDirectory1 = 'job';\n  const subDirectory2 = 'details';\n  return `${baseURL}/#/${subDirectory1}/${jobId}/${subDirectory2}/`;\n}\n","import { useState, useEffect, useReducer } from 'react';\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return {\n        ...state,\n        isLoading: true,\n        isSuccess: false,\n        error: null,\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isSuccess: true,\n        error: null,\n        data: action.payload,\n      };\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        isSuccess: false,\n        error: action.payload,\n      };\n    case 'UPDATE_DATA':\n      return {\n        ...state,\n        data: action.payload,\n      };\n    default:\n      throw new Error();\n  }\n};\n\nconst useApi = (initialData, postprocess = (d) => d) => {\n  const [request, setRequest] = useState(null);\n\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isSuccess: false,\n    error: null,\n    data: initialData,\n  });\n\n  useEffect(() => {\n    // Prevent fetching nothing\n    if (!request) {\n      return;\n    }\n\n    // Initialize\n    let didCancel = false;\n    dispatch({ type: 'FETCH_INIT' });\n\n    // Fetching\n    request\n      .then((data) => {\n        if (!didCancel) {\n          dispatch({\n            type: 'FETCH_SUCCESS',\n            payload: postprocess(data),\n          });\n        }\n      })\n      .catch((e) => {\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_FAILURE', payload: e });\n        }\n      });\n\n    return () => {\n      didCancel = true;\n    };\n  }, [request]);\n\n  const setData = (data) => {\n    dispatch({ type: 'UPDATE_DATA', payload: data });\n  };\n\n  return [state, setRequest, setData];\n};\n\nexport default useApi;\n","import { useReducer } from 'react';\nimport moment from 'moment';\n\nimport { formatDate } from '../Utilities/helpers';\n\nexport const useQueryParams = (initial) => {\n  const initialWithCalculatedParams = {\n    ...initial,\n    ...(initial.sort_options &&\n      initial.sort_order && {\n        sort_by: `${initial.sort_options}:${initial.sort_order}`,\n      }),\n  };\n\n  const paramsReducer = (state, { type, value }) => {\n    switch (type) {\n      /* v0 api reducers */\n      case 'SET_STARTDATE':\n        return { ...state, startDate: value };\n      case 'SET_ENDDATE':\n        return { ...state, endDate: value };\n      case 'SET_ID':\n        if (!parseInt(value)) {\n          const { id: ignored, ...rest } = state;\n          return rest;\n        }\n\n        return { ...state, id: parseInt(value) };\n      case 'SET_SEVERITY':\n        if (value.severity === '') {\n          const { severity: ignored, ...rest } = state;\n          return rest;\n        }\n\n        return { ...state, ...value };\n\n      /* v1 api reducers */\n      case 'SET_LIMIT':\n        return isNaN(value)\n          ? { ...state, limit: 5 } // Defaults back to 5\n          : { ...state, limit: parseInt(value) };\n      case 'SET_OFFSET':\n        return isNaN(value)\n          ? { ...state, offset: 0 } // Defaults back to 0\n          : { ...state, offset: parseInt(value) };\n      case 'SET_ATTRIBUTES':\n      case 'SET_JOB_TYPE':\n      case 'SET_STATUS':\n      case 'SET_ORG':\n      case 'SET_CLUSTER':\n      case 'SET_TEMPLATE':\n      case 'SET_AUTOMATION_STATUS':\n      case 'SET_CATEGORY':\n      case 'SET_FREQUENCY':\n      case 'SET_NAME':\n      case 'SET_ROOT_WORKFLOWS_AND_JOBS':\n      case 'SET_INVENTORY':\n        return { ...state, ...value };\n      case 'SET_QUICK_DATE_RANGE': {\n        let newState = { ...state };\n        if (value !== 'custom') {\n          newState = { ...newState, start_date: null, end_date: null };\n        }\n\n        newState = { ...newState, ...value };\n        return newState;\n      }\n\n      case 'SET_START_DATE':\n      case 'SET_END_DATE': {\n        let newValues = {};\n        Object.entries(value).forEach(([key, value]) => {\n          newValues[key] = formatDate(value);\n        });\n        return { ...state, ...newValues };\n      }\n\n      case 'SET_SORT_OPTIONS': {\n        return {\n          ...state,\n          sort_options: value.sort_options,\n          ...(state.sort_order && {\n            sort_by: `${value.sort_options}:${state.sort_order}`,\n          }), // Update sort by\n        };\n      }\n\n      case 'SET_SORT_ORDER': {\n        return {\n          ...state,\n          sort_order: value.sort_order,\n          ...(state.sort_options && {\n            sort_by: `${state.sort_options}:${value.sort_order}`,\n          }), // Update sort by\n        };\n      }\n\n      case 'REINITIALIZE':\n        return { ...value };\n      case 'RESET_FILTER':\n        return { ...initialWithCalculatedParams };\n      default:\n        throw new Error(`The query params reducer action (${type}) not found.`);\n    }\n  };\n\n  const [queryParams, dispatch] = useReducer(paramsReducer, {\n    ...initialWithCalculatedParams,\n  });\n\n  const actionMapper = {\n    status: 'SET_STATUS',\n    quick_date_range: 'SET_QUICK_DATE_RANGE',\n    job_type: 'SET_JOB_TYPE',\n    org_id: 'SET_ORG',\n    cluster_id: 'SET_CLUSTER',\n    template_id: 'SET_TEMPLATE',\n    sort_order: 'SET_SORT_ORDER',\n    sort_options: `SET_SORT_OPTIONS`,\n    start_date: 'SET_START_DATE',\n    end_date: 'SET_END_DATE',\n    automation_status: 'SET_AUTOMATION_STATUS',\n    category: 'SET_CATEGORY',\n    frequency_period: 'SET_FREQUENCY',\n    name: 'SET_NAME',\n    only_root_workflows_and_standalone_jobs: 'SET_ROOT_WORKFLOWS_AND_JOBS',\n    inventory_id: 'SET_INVENTORY',\n  };\n\n  return {\n    queryParams,\n    dispatch,\n    setFromToolbar: (varName, value = null) => {\n      if (!varName) {\n        dispatch({ type: 'RESET_FILTER' });\n      } else {\n        dispatch({ type: actionMapper[varName], value: { [varName]: value } });\n      }\n    },\n    setFromPagination: (offset, limit = null) => {\n      dispatch({ type: 'SET_OFFSET', value: offset });\n      if (limit) {\n        dispatch({ type: 'SET_LIMIT', value: limit });\n      }\n    },\n    /* v0 api usage after this line */\n    setSeverity: (severity) =>\n      dispatch({ type: 'SET_SEVERITY', value: { severity } }),\n    setEndDate: () => {\n      const endDate = moment().format('YYYY-MM-DD');\n      dispatch({ type: 'SET_ENDDATE', value: endDate });\n    },\n    setId: (value) => dispatch({ type: 'SET_ID', value }),\n    setStartDate: (days) => {\n      let startDate;\n      if (days === 7) {\n        startDate = moment().subtract(1, 'week').format('YYYY-MM-DD');\n      }\n\n      if (days === 14) {\n        startDate = moment().subtract(2, 'weeks').format('YYYY-MM-DD');\n      }\n\n      if (days === 31) {\n        startDate = moment().subtract(1, 'month').format('YYYY-MM-DD');\n      } else {\n        startDate = moment().subtract(days, 'days').format('YYYY-MM-DD');\n      }\n\n      dispatch({ type: 'SET_STARTDATE', value: startDate });\n    },\n    setStartDateAsString: (value) => dispatch({ type: 'SET_STARTDATE', value }),\n  };\n};\n","import { Paths } from '../paths';\nimport { stringify } from 'query-string';\n\nconst useRedirect = (history, path) => (query) => {\n  const search = stringify(query, { arrayFormat: 'bracket' });\n  history.push({\n    pathname: Paths[path],\n    search,\n  });\n};\n\nexport default useRedirect;\n","import { useEffect, useState, useCallback } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport useIsMounted from './useIsMounted';\n\n/*\n * The useRequest hook accepts a request function and returns an object with\n * five values:\n *   request: a function to call to invoke the request\n *   result: the value returned from the request function (once invoked)\n *   isLoading: boolean state indicating whether the request is in active/in flight\n *   error: any caught error resulting from the request\n *   setValue: setter to explicitly set the result value\n *\n * The hook also accepts an optional second parameter which is a default\n * value to set as result before the first time the request is made.\n */\nexport default function useRequest(makeRequest, initialValue) {\n  const [result, setResult] = useState(initialValue);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const isMounted = useIsMounted();\n\n  return {\n    result,\n    error,\n    isLoading,\n    request: useCallback(\n      async (...args) => {\n        setIsLoading(true);\n        try {\n          const response = await makeRequest(...args);\n          if (isMounted.current) {\n            setResult(response);\n            setError(null);\n          }\n        } catch (err) {\n          if (isMounted.current) {\n            setError(err);\n            setResult(initialValue);\n          }\n        } finally {\n          if (isMounted.current) {\n            setIsLoading(false);\n          }\n        }\n      },\n      /* eslint-disable-next-line react-hooks/exhaustive-deps */\n      [makeRequest]\n    ),\n    setValue: setResult,\n  };\n}\n\n/*\n * Provides controls for \"dismissing\" an error message\n *\n * Params: an error object\n * Returns: { error, dismissError }\n *   The returned error object is the same object passed in via the paremeter,\n *   until the dismissError function is called, at which point the returned\n *   error will be set to null on the subsequent render.\n */\nexport function useDismissableError(error) {\n  const [showError, setShowError] = useState(false);\n\n  useEffect(() => {\n    if (error) {\n      setShowError(true);\n    }\n  }, [error]);\n\n  return {\n    error: showError ? error : null,\n    dismissError: () => {\n      setShowError(false);\n    },\n  };\n}\n\n/*\n * Hook to assist with deletion of items from a paginated item list. The page\n * url will be navigated back one page on a paginated list if needed to prevent\n * the UI from re-loading an empty set and displaying a \"No items found\"\n * message.\n *\n * Params: a callback function that will be invoked in order to delete items,\n *   and an object with structure { qsConfig, allItemsSelected, fetchItems }\n * Returns: { isLoading, deleteItems, deletionError, clearDeletionError }\n */\nexport function useDeleteItems(\n  makeRequest,\n  { qsConfig = null, allItemsSelected = false, fetchItems = null } = {}\n) {\n  const location = useLocation();\n  const history = useHistory();\n\n  const { error: requestError, isLoading, request } = useRequest(\n    makeRequest,\n    null\n  );\n  const { error, dismissError } = useDismissableError(requestError);\n  const deleteItems = async () => {\n    await request();\n    if (!qsConfig) {\n      return;\n    }\n    fetchItems();\n  };\n\n  return {\n    isLoading,\n    deleteItems,\n    deletionError: error,\n    clearDeletionError: dismissError,\n  };\n}\n","import { useEffect, useRef } from 'react';\n\nexport default function useIsMounted() {\n  const isMounted = useRef(null);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  });\n  return isMounted;\n}\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PFPagination } from '@patternfly/react-core';\nvar perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '15', value: 15 },\n    { title: '20', value: 20 },\n    { title: '25', value: 25 },\n];\n;\nvar Pagination = function (_a) {\n    var _b = _a.count, count = _b === void 0 ? 0 : _b, params = _a.params, setPagination = _a.setPagination, props = __rest(_a, [\"count\", \"params\", \"setPagination\"]);\n    var offset = params.offset, limit = params.limit;\n    var currentPage = Math.floor(offset / limit + 1);\n    var returnOffsetVal = function (page) { return (page - 1) * limit; };\n    return (React.createElement(PFPagination, __assign({ itemCount: count, widgetId: \"aa-pagination\", perPageOptions: perPageOptions, perPage: limit, page: currentPage, onPerPageSelect: function (_event, perPage, page) {\n            setPagination(returnOffsetVal(page), perPage);\n        }, onSetPage: function (_event, page) {\n            setPagination(returnOffsetVal(page));\n        } }, props)));\n};\nPagination.propTypes = {\n    count: PropTypes.number,\n    params: PropTypes.exact({\n        offset: PropTypes.number.isRequired,\n        limit: PropTypes.number.isRequired,\n    }).isRequired,\n    setPagination: PropTypes.func.isRequired,\n};\nexport default Pagination;\n","import Pagination from './Pagination';\nexport default Pagination;\n"],"sourceRoot":""}