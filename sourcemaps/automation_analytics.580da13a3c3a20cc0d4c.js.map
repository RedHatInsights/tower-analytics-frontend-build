{"version":3,"sources":["webpack:///./src/Api.js","webpack:///./src/Charts/BaseChart.js","webpack:///./src/Components/AlertModal/AlertModal.js","webpack:///./src/Components/ApiErrorState.js","webpack:///./src/Components/Breadcrumbs.js","webpack:///./src/Components/EmptyState.js","webpack:///./src/Components/ErrorDetail/ErrorDetail.js","webpack:///./src/Components/ErrorDetail/getErrorMessage.js","webpack:///./src/Components/LoadingState.js","webpack:///./src/Components/NoData.js","webpack:///./src/Components/Toolbar/constants.js","webpack:///./src/Components/Toolbar/Groups/CategoryDropdown.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/Select.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/helpers.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/Date.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/Text.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/index.js","webpack:///./src/Components/Toolbar/Groups/FiltersCategoriesGroup.js","webpack:///./src/Components/Toolbar/Groups/QuickDateGroup.js","webpack:///./src/Components/Toolbar/Groups/SortByGroup.js","webpack:///./src/Components/Toolbar/Groups/SettingsPanel.js","webpack:///./src/Components/Toolbar/Toolbar.js","webpack:///./src/Components/Toolbar/index.js","webpack:///./src/Charts/ROITopTemplates.js","webpack:///./src/Containers/AutomationCalculator/CalculationCost.js","webpack:///./src/Containers/AutomationCalculator/TopTemplates.js","webpack:///./src/Containers/AutomationCalculator/AutomationCalculator.js","webpack:///./src/Containers/AutomationCalculator/AutomationFormula.js","webpack:///./src/Containers/AutomationCalculator/TotalSavings.js","webpack:///./src/Containers/AutomationCalculator/helpers.js","webpack:///./src/Utilities/Tooltip.js","webpack:///./src/Charts/BarChart.js","webpack:///./src/Charts/LineChart.js","webpack:///./src/Components/ModulesList.js","webpack:///./src/Components/ModalContents.js","webpack:///./src/Components/TemplatesList.js","webpack:///./src/Containers/Clusters/Clusters.js","webpack:///./src/Components/NoResults.js","webpack:///./src/Components/JobStatus.js","webpack:///./src/Components/JobExplorerList.js","webpack:///./src/Containers/JobExplorer/JobExplorer.js","webpack:///./src/Components/NotificationsList.js","webpack:///./src/Containers/Notifications/Notifications.js","webpack:///./src/Utilities/Legend.js","webpack:///./src/Charts/GroupedBarChart/GroupedBarChart.js","webpack:///./src/Charts/GroupedBarChart/OrgsTooltip.js","webpack:///./src/Charts/GroupedBarChart/HostsTooltip.js","webpack:///./src/Charts/PieChart.js","webpack:///./src/Containers/OrganizationStatistics/OrganizationStatistics.js","webpack:///./src/Utilities/colors.ts","webpack:///./src/Containers/SavingsPlanner/Add/index.js","webpack:///./src/Components/CardActionsRow.js","webpack:///./src/Components/DeleteButton/DeleteButton.js","webpack:///./src/Components/RoutedTabs.js","webpack:///./src/Containers/SavingsPlanner/DetailsTab.js","webpack:///./src/Containers/SavingsPlanner/StatisticsTab.tsx","webpack:///./src/Containers/SavingsPlanner/Edit/index.js","webpack:///./src/Containers/SavingsPlanner/SavingsPlan.js","webpack:///./src/Containers/SavingsPlanner/PlanCard.js","webpack:///./src/Components/Toolbar/ToolbarDeleteButton.js","webpack:///./src/Containers/SavingsPlanner/SavingsPlanner.js","webpack:///./src/Utilities/useSelected.js","webpack:///./src/Containers/SavingsPlanner/Shared/constants.js","webpack:///./src/Containers/SavingsPlanner/Shared/usePlanData.js","webpack:///./src/Containers/SavingsPlanner/Shared/Details.js","webpack:///./src/Containers/SavingsPlanner/Shared/Tasks.js","webpack:///./src/Containers/SavingsPlanner/Shared/Templates.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Utilities/getRelatedResourceDeleteDetails.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Utilities/useApi.js","webpack:///./src/Utilities/useQueryParams.js","webpack:///./src/Utilities/useRedirect.js","webpack:///./src/Utilities/useRequest.js","webpack:///./src/Utilities/useIsMounted.js","webpack:////home/travis/build/RedHatInsights/tower-analytics-frontend/node_modules/moment/locale|sync|/^\\.\\/.*$/","webpack:///./src/Components/Pagination/Pagination.tsx","webpack:///./src/Components/Pagination/index.ts"],"names":["plansEndpoint","planEndpoint","handleResponse","response","json","then","ok","status","Promise","reject","message","error","authenticatedFetch","endpoint","options","window","insights","chrome","auth","getUser","fetch","preflightRequest","readJobExplorer","params","paginationParams","limit","offset","sort_by","qs","stringify","url","URL","location","origin","search","method","body","JSON","readEventExplorer","readROI","readHostExplorer","readPlans","createPlan","deletePlan","id","updatePlan","readPlan","readClustersOptions","readOrgOptions","readROIOptions","readPlanOptions","readClusters","readNotifications","Object","keys","forEach","key","searchParams","append","readJobExplorerOptions","initializeChart","Chart","BaseChart","props","margin","history","useHistory","getWidth","parseInt","d3","style","left","right","getHeight","top","bottom","propTypes","PropTypes","Header","styled","isOpen","title","label","variant","children","variantIcons","danger","size","css","info","success","warning","customHeader","Title","headingLevel","Modal","header","aria-label","aria-labelledby","Boolean","ApiErrorState","EmptyState","EmptyStateVariant","EmptyStateIcon","icon","ExclamationCircleIcon","color","globalDangerColor200","EmptyStateBody","Breadcrumbs","items","current","Breadcrumb","map","navigate","basePathNavigate","getBaseName","BreadcrumbItem","to","BreadcrumbHeading","defaultProps","DefaultEmptyState","preflightError","WrenchIcon","href","target","rel","Button","onClick","reload","Card","PFCard","CardBody","PFCardBody","Expandable","PFExpandable","ErrorDetail","useState","isExpanded","setIsExpanded","toggleText","onToggle","prototype","hasOwnProperty","call","data","detail","values","reduce","acc","currentValue","concat","getErrorMessage","Fragment","config","toUpperCase","Array","isArray","m","stack","Error","isRequired","CubesIcon","optionsForCategories","type","isSingle","name","placeholder","hasChips","quick_date_range","start_date","end_date","job_type","org_id","cluster_id","template_id","sort_options","automation_status","frequency_period","category","inventory_id","CategoryDropdown","selected","setSelected","categories","ToolbarItem","Select","onSelect","_event","selection","selections","placeholderText","SelectOption","value","OptionSpan","renderValues","description","item","comparator","val","categoryKey","selectOptions","isVisible","setValue","expanded","setExpanded","ToolbarFilter","data-cy","showToolbarItem","chips","i","undefined","Number","isInteger","cmpItem","push","handleCheckboxChips","categoryName","deleteChip","_","valueToDelete","keyToDelete","find","filteredArr","filter","SelectVariant","includes","hasInlineFilter","onFilter","textInput","toLowerCase","maxHeight","Date","InputGroup","TextInput","onChange","Text","searchVal","setSearchVal","useEffect","components","select","date","text","ToolbarInput","SelectedInput","FilterCategoriesGroup","filterCategories","filters","setFilters","currentCategory","setCurrentCategory","ToolbarGroup","el","QuickDateGroup","e","SortByGroup","sort_order","SettingsPanel","settingsExpanded","setSettingsExpanded","isFlat","backgroundColor","CardHeader","CardActions","CardTitle","Switch","labelOff","isChecked","only_root_workflows_and_standalone_jobs","Tooltip","position","content","FilterableToolbar","pagination","hasSettings","additionalControls","restCategories","obj","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarContent","length","isActive","control","visibility","default","lg","d","savings","manualCost","automationCost","scrollLeftOffset","node","scrollLeft","x","svg","getBoundingClientRect","y","formatDollars","delta","automatedCost","toolTipWidth","toolTipBase","width","chartWidth","flipped","nameWidth","getComputedTextLength","savingsWidth","manualCostWidth","automationCostWidth","widestTextElem","adjustedWidth","maxTextPerc","boxWidth","overage","boundingBox","attr","toolTipPoint","interrupt","transition","delay","this","draw","amount","parseFloat","toFixed","toString","replace","slice","textWidthThreshold","TopTemplatesSavings","init","bind","resize","state","timeout","clearTimeout","setState","setTimeout","remove","ticks","height","rangeRound","padding","range","formatYAxisValue","xAxis","tickValues","yAxis","tickFormat","tickSize","taskNames","tooltip","domain","selectAll","bandwidth","enter","on","darker","handleMouseOver","handleMouseOut","addEventListener","removeEventListener","Component","InputAndText","validFloat","floatValue","CalculationCost","costManual","setCostManual","costAutomation","setCostAutomation","InputGroupText","paddingTop","TemplateDetail","TemplateDetailSubTitle","TooltipWrapper","IconGroup","QuestionIconTooltip","details","Popover","bodyContent","k","capitalize","split","join","TopTemplates","sortBy","setDataRunTime","setEnabled","redirectToJobExplorer","overflow","flex","className","component","convertSecondsToMins","avgRunTime","minutes","convertMinsToSeconds","successful_hosts_total","trimmed","sortAttribute","showSortAttr","enabled","deselectedIds","setDeselectedIds","Wrapper","WrapperLeft","WrapperRight","filterDisabled","updateDeltaCost","convertSecondsToHours","successful_elapsed_total","calculateDelta","AutomationCalculator","toJobExplorer","useRedirect","useApi","preflight","setPreflight","setOptions","api","fetchApi","setDataInApi","useQueryParams","roiConst","queryParams","setFromToolbar","NotAuthorized","notAuthorizedParams","PageHeader","PageHeaderTitle","Main","isSuccess","paddingBottom","isLoading","LoadingState","NoData","textAlign","AutomationFormula","paddingLeft","TotalSavings","totalSavings","sum","curr","display","flexDirection","templateId","seconds","updatedData","setUnfilteredData","borderTop","BorderedCardTitle","opts","fail","total","formatTooltipDate","RAN","FAIL","TOTAL","DATE","jobs","jobsWidth","failed","successful","successTextWidth","failTextWidth","circleSuccess","circleFail","failedIcon","successIcon","successText","failText","clickMore","colors","BarChart","formattedData","jobExplorer","Paths","formattedDate","formatDate","orgId","initialQueryParams","arrayFormat","pathname","parseTime","formatted","created_date","successful_count","failed_count","barTooltip","layers","order","maxTicks","Math","round","layer","_d","duration","ease","prevProps","LineChart","updateCluster","clusterId","path","attrTween","tweenDash","l","getTotalLength","t","unformattedData","successLine","curve","failLine","defined","isNaN","vertical","handleMouseMove","intersectX","cx","baseVal","DataListCell","PFDataListCell","DataListItem","PFDataListItem","DataCellEnd","ModulesList","modules","DataList","background","border","module","index","host_task_count","trimStr","marginRight","PFDataListItemNoBorder","DataListItemCompact","DataListCellCompact","DataListFocus","DataCellEndCompact","ModalContents","successCount","totalCount","elapsed","selectedId","handleModal","qp","jobType","handleCloseBtn","relatedJobs","setRelatedJobs","stats","setStats","relatedTemplateJobsParams","attributes","group_by_time","agreggateTemplateParams","group_by","onClose","actions","total_count","toISOString","substr","ceil","formatAvgRun","most_failed_tasks","percentage","total_failed_count","task_name","formatTopFailedTask","most_failed_steps","template_name","formatTopFailedStep","Label","job","cluster_name","formatDateTime","started","formatSeconds","TemplatesList","templates","setSelectedId","isModalOpen","setIsModalOpen","displayJobType","initialTopTemplateParams","initialTopWorkflowParams","initialModuleParams","setPreFlightError","clusters","chartData","setData","setTemplates","workflows","setWorkflows","setModules","initialOptionsParams","optionsQueryParams","topTemplatesParams","topWorkflowParams","topModuleParams","initializeWithPreflight","marginTop","SearchIcon","JobStatus","str","getColor","getIcon","charAt","headerLabels","ExternalLinkIcon","PFExternalLinkIcon","DataListCellHeader","DataListItemCells","PFDataListItemCells","DataListToggle","PFDataListToggle","mobileBreakpoint","AllJobsTemplate","innerWidth","windowWidth","setWindowWidth","onResize","ariaLabel","ariaLabelledBy","count","DataListItemRow","aria-controls","newExpanded","idx","indexOf","dataListCells","tower_link","fontWeight","org_name","formatJobType","DataListContent","isHidden","created","finished","buildListRow","JobExplorerList","labels","isCompact","JobExplorer","meta","setFromPagination","dispatch","appNavClick","secondaryNav","initialSearchParams","parse","parseBooleans","parseNumbers","updateURL","Pagination","setPagination","PaginationVariant","ExternalLinkAltIcon","PFExternalLinkAltIcon","NotificationDrawerListItem","PFNotificationDrawerListItem","NotificationDrawerList","PFNotificationDrawerList","stringifyDate","day","moment","now","utc","isAfter","diff","isSame","valueOf","AllNotificationTemplate","notifications","notification_id","tower_url","NotificationDrawerListItemHeader","NotificationDrawerListItemBody","timestamp","ErrorNotificationTemplate","notification","NoticeNotificationTemplate","WarningNotificationTemplate","NotificationsList","filterBy","PFCardTitle","DropdownGroup","notificationOptions","disabled","formatClusterName","uuid","install_uuid","notificationsData","setNotificationsData","clusterOptions","setClusterOptions","selectedCluster","setSelectedCluster","firstRender","setFirstRender","setIsLoading","setMeta","setId","setSeverity","ignore","fetchEndpoints","all","p","clustersData","FormSelect","FormSelectOption","isDisabled","severity","NotificationDrawer","Container","LegendDetail","Color","SubTitle","Legend","chartName","some","pieces","GroupedBarChart","TooltipClass","legend","colorFunc","selectedIds","setSelectedIds","selectedOrgs","x0","x1","maxTicksOneMonth","maxTicksTwoMonths","dates","yLabel","exit","bars","merge","subEnter","OrgsTooltip","orgName","HostsTooltip","perc","percSuccess","drawn","percent","success_rate","maxLength","percentageTotal","percentageSuccess","boundingBOx","showSuccess","boundingHeight","boundingWidth","PieChart","sort","a","b","radius","min","filteredData","getTotal","donutTooltip","pie","arc","outerRadius","innerRadius","classed","CardContainer","TopCard","scaleOrdinal","pieChartMapper","attrName","chartMapper","rest","dateForJobExplorer","OrganizationStatistics","activeTabKey","setActiveTabKey","orgs","setOrgs","setJobs","tasks","setTasks","constants","jobEventsByOrgParams","include_others","jobRunsByOrgParams","jobsByDateAndOrgParams","hostAcrossOrgParams","readJobsOrHosts","Tabs","activeKey","tabIndex","Tab","eventKey","marginLeft","CardActionsWrapper","WarningMessage","Alert","DeleteButton","onConfirm","modalTitle","ouiaId","deleteMessage","deleteDetailsRequests","disabledTooltip","setIsOpen","deleteMessageError","setDeleteMessageError","deleteDetails","setDeleteDetails","toggleModal","getRelatedResourceDeleteCounts","results","AlertModal","spinnerAriaValueText","isInline","entries","Badge","RoutedTabs","tabsArray","defaultTabId","useLocation","tab","link","getActiveTabId","match","TabTitleText","role","arrayOf","shape","number","string","oneOfType","DetailsTab","plans","hosts","manual_time","modified","template_details","labelsAndValues","Name","Description","Frequency","Template","showTemplate","useRequest","useCallback","deletePlans","request","deleteError","relatedResourceDeleteRequests","isDeleteDisabled","result","deleteDetailsError","fetchDeleteDetails","useDismissableError","dismissError","DescriptionList","isHorizontal","columnModifier","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","Divider","TextContent","List","task","ListItem","CardFooter","__makeTemplateObject","cooked","raw","defineProperty","__assign","assign","s","n","arguments","apply","templateObject_1","templateObject_2","templateObject_3","templateObject_4","LegendGroup","templateObject_5","LegendIcon","templateObject_6","LegendDescription","templateObject_7","StatisticsTab","_a","types","_b","chartType","setChartType","barChartData","charts","kind","parent","domainPadding","themeColor","cursor","grid","stroke","barRatio","barWidth","fill","strokeWidth","functions","fetchFnc","resolve","year","total_costs","projections","monetary_stats","total_benefits","cumulative_net_benefits","total_hours_spent_risk_adjusted","time_stats","total_hours_saved","cumulative_time_net_benefits","response_type","getChartData","ToggleGroup","ToggleGroupItem","buttonId","isSelected","toggleButton","year3","Edit","Form","useParams","pageTitle","breadcrumbUrl","breadcrumbsItems","Route","exact","SavingsPlanner","CardLabel","PlanCard","template","plan","handleSelect","isCardKebabOpen","setIsCardKebabOpen","useRouteMatch","kebabDropDownItems","DropdownItem","isHoverable","CardHeaderMain","Link","Dropdown","toggle","KebabToggle","isPlain","dropdownItems","Checkbox","row","requiredField","username","image","checkPropTypes","ItemToDelete","ToolbarDeleteButton","itemsToDelete","pluralizedItemName","errorMessage","onDelete","warningMessage","cannotDelete","deleteMessages","itemsUnableToDelete","shouldShowDeleteWarning","func","savingsPlanner","combinedOptions","list","isAllSelected","prevState","useSelected","useDeleteItems","qsConfig","allItemsSelected","fetchItems","deleteLoading","deletionError","deleteItems","clearDeletionError","handleDelete","Gallery","hasGutter","datum","isSticky","convertTasks","task_order","Details","formData","categoryIsOpen","setCategoryIsOpen","manualTimeIsOpen","setManualTimeIsOpen","frequencyPeriodIsOpen","setFrequencyPeriodIsOpen","Grid","md","FormGroup","fieldId","newName","newDescription","newHosts","TaskSection","TaskTitle","TaskDeleteButton","DeleteTaskActionSection","DataListAction","TaskRow","Tasks","taskToAdd","setTaskToAdd","liveText","setLiveText","appendTask","newTaskName","onKeyDown","preventDefault","onDragFinish","newItemOrder","onDragStart","newId","onDragMove","oldIndex","newIndex","onDragCancel","itemOrder","DataListControl","DataListDragButton","aria-describedby","aria-pressed","removeTask","aria-live","TemplateRow","Templates","Radio","hash","startStep","setStartStep","initial","useReducer","requestPayload","hourly_rate","frequency_per_period","usePlanData","steps","step_number","nextButtonText","step","onStepChange","newStep","Redirect","Wizard","navAriaLabel","mainAriaLabel","onGoToStep","onNext","onBack","onSave","startAtStep","defaultParams","roi","organizationStatistics","requests","hasCount","savingsPlan","readRecordApi","isNumeric","dateTime","format","startOf","mins","dataFetchReducer","action","payload","initialData","postprocess","setRequest","didCancel","initialWithCalculatedParams","startDate","endDate","newState","newValues","actionMapper","varName","setEndDate","setStartDate","days","subtract","setStartDateAsString","query","makeRequest","initialValue","setResult","setError","isMounted","useRef","useIsMounted","showError","setShowError","requestError","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","exports","perPageOptions","getOwnPropertySymbols","propertyIsEnumerable","__rest","currentPage","floor","returnOffsetVal","page","itemCount","widgetId","perPage","onPerPageSelect","onSetPage"],"mappings":"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","file":"js/automation_analytics.25eefa244f55da7879c6.js","sourcesContent":["import { stringify } from 'query-string';\n/* v0 endpoints */\nconst clustersEndpoint = `/api/tower-analytics/v0/clusters/`;\nconst notificationsEndpoint = `/api/tower-analytics/v0/notifications/`;\nconst preflightEndpoint = `/api/tower-analytics/v0/authorized/`;\n\n/* v1 endpoints */\nconst jobExplorerEndpoint = '/api/tower-analytics/v1/job_explorer/';\nconst hostExplorerEndpoint = '/api/tower-analytics/v1/host_explorer/';\nconst eventExplorerEndpoint = '/api/tower-analytics/v1/event_explorer/';\nconst ROIEndpoint = '/api/tower-analytics/v1/roi_templates/';\nconst plansEndpoint = '/api/tower-analytics/v1/plans/';\nconst planEndpoint = '/api/tower-analytics/v1/plan/';\n\n/* page options endpoints */\nconst jobExplorerOptionsEndpoint =\n  '/api/tower-analytics/v1/job_explorer_options/';\nconst ROITemplatesOptionsEndpoint =\n  '/api/tower-analytics/v1/roi_templates_options/';\nconst orgOptionsEndpoint =\n  '/api/tower-analytics/v1/dashboard_organization_statistics_options/';\nconst clustersOptionsEndpoint =\n  '/api/tower-analytics/v1/dashboard_clusters_options/';\nconst planOptionsEndpoint = '/api/tower-analytics/v1/plan_options/';\n\nfunction handleResponse(response) {\n  return response.json().then((json) => {\n    if (response.ok) {\n      return json;\n    }\n\n    if (response.status === 404 || response.status === 401) {\n      return Promise.reject({\n        status: response.status,\n        message: json,\n      });\n    } else if (response.status === 403) {\n      return Promise.reject({\n        status: response.status,\n        error: 'RBAC access denied',\n      });\n    } else {\n      return Promise.reject(json);\n    }\n  });\n}\n\nfunction authenticatedFetch(endpoint, options) {\n  return window.insights.chrome.auth\n    .getUser()\n    .then(() => fetch(endpoint, options));\n}\n\nexport const preflightRequest = () => {\n  return authenticatedFetch(preflightEndpoint).then(handleResponse);\n};\n\nexport const readJobExplorer = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(jobExplorerEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readEventExplorer = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(eventExplorerEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readROI = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(ROIEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readHostExplorer = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(hostExplorerEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readPlans = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(plansEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const createPlan = ({ params = {} }) => {\n  let url = new URL(planEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const deletePlan = ({ params = {} }) => {\n  let url = new URL(`${planEndpoint}${params.id}`, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'DELETE'\n  }).then(handleResponse);\n};\n\nexport const updatePlan = ({ id, params = {} }) => {\n  let url = new URL(`${planEndpoint}${id}`, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'PUT',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readPlan = ({ params = {} }) => {\n  let url = new URL(plansEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readClustersOptions = ({ params = {} }) => {\n  let url = new URL(clustersOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readOrgOptions = ({ params = {} }) => {\n  let url = new URL(orgOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readROIOptions = ({ params = {} }) => {\n  let url = new URL(ROITemplatesOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readPlanOptions = () => {\n  let url = new URL(planOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'GET',\n  }).then(handleResponse);\n};\n\n// v0 endpoints used in Notifications.js\nexport const readClusters = () => {\n  return authenticatedFetch(clustersEndpoint).then(handleResponse);\n};\n\nexport const readNotifications = ({ params = {} }) => {\n  let url = new URL(notificationsEndpoint, window.location.origin);\n  Object.keys(params).forEach((key) =>\n    url.searchParams.append(key, params[key])\n  );\n  return authenticatedFetch(url).then(handleResponse);\n};\n\nexport const readJobExplorerOptions = ({ params = {} }) => {\n  let url = new URL(jobExplorerOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nconst initializeChart = (Chart) => {\n  const BaseChart = (props) => {\n    const { id, margin } = props;\n\n    const getWidth = () => {\n      let width;\n      width =\n        parseInt(d3.select('#' + id).style('width')) -\n          margin.left -\n          margin.right || 700;\n      return width;\n    };\n\n    const getHeight = () => {\n      let height;\n      height =\n        parseInt(d3.select('#' + id).style('height')) -\n          margin.top -\n          margin.bottom || 450;\n      return height;\n    };\n\n    let history = useHistory();\n\n    return (\n      <Chart\n        {...props}\n        getWidth={getWidth}\n        getHeight={getHeight}\n        history={history}\n      />\n    );\n  };\n\n  BaseChart.propTypes = {\n    id: PropTypes.string,\n    margin: PropTypes.object,\n  };\n\n  return BaseChart;\n};\n\ninitializeChart.propTypes = {\n  Chart: PropTypes.element,\n};\n\nexport default initializeChart;\n","import React from 'react';\nimport { Modal, Title } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n  InfoCircleIcon,\n  TimesCircleIcon,\n} from '@patternfly/react-icons';\nimport styled from 'styled-components';\n\nconst Header = styled.div`\n  display: flex;\n  svg {\n    margin-right: 16px;\n  }\n`;\n\nfunction AlertModal({\n  isOpen = null,\n  title,\n  label,\n  variant,\n  children,\n  ...props\n}) {\n  const variantIcons = {\n    danger: (\n      <ExclamationCircleIcon\n        size=\"lg\"\n        css=\"color: var(--pf-global--danger-color--100)\"\n      />\n    ),\n    error: (\n      <TimesCircleIcon\n        size=\"lg\"\n        css=\"color: var(--pf-global--danger-color--100)\"\n      />\n    ),\n    info: (\n      <InfoCircleIcon\n        size=\"lg\"\n        css=\"color: var(--pf-global--info-color--100)\"\n      />\n    ),\n    success: (\n      <CheckCircleIcon\n        size=\"lg\"\n        css=\"color: var(--pf-global--success-color--100)\"\n      />\n    ),\n    warning: (\n      <ExclamationTriangleIcon\n        size=\"lg\"\n        css=\"color: var(--pf-global--warning-color--100)\"\n      />\n    ),\n  };\n\n  const customHeader = (\n    <Header>\n      {variant ? variantIcons[variant] : null}\n      <Title id=\"alert-modal-header-label\" size=\"2xl\" headingLevel=\"h2\">\n        {title}\n      </Title>\n    </Header>\n  );\n\n  return (\n    <Modal\n      header={customHeader}\n      aria-label={label || 'Alert modal'}\n      aria-labelledby=\"alert-modal-header-label\"\n      isOpen={Boolean(isOpen)}\n      variant=\"small\"\n      title={title}\n      {...props}\n    >\n      {children}\n    </Modal>\n  );\n}\n\nexport default AlertModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { global_danger_color_200 as globalDangerColor200 } from '@patternfly/react-tokens';\n\nconst ApiErrorState = ({ message }) => (\n  <EmptyState variant={EmptyStateVariant.small}>\n    <EmptyStateIcon\n      icon={ExclamationCircleIcon}\n      color={globalDangerColor200.value}\n    />\n    <Title headingLevel=\"h2\" size=\"lg\">\n      Error\n    </Title>\n    <EmptyStateBody>{message}</EmptyStateBody>\n  </EmptyState>\n);\n\nApiErrorState.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default ApiErrorState;\n","/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Breadcrumb, BreadcrumbItem, BreadcrumbHeading } from '@patternfly/react-core';\n\nimport getBaseName from '../Utilities/getBaseName';\n\nconst Breadcrumbs = ({items, current}) => {\n    return (\n        <Breadcrumb>\n            {items.map(({title, navigate}) => {\n                const basePathNavigate = getBaseName() + navigate;\n                return (<BreadcrumbItem key={title} to={basePathNavigate}>{title}</BreadcrumbItem>);\n            })}\n            {current && (<BreadcrumbHeading>{current}</BreadcrumbHeading>)}\n        </Breadcrumb>\n    );\n};\n\nBreadcrumbs.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n      navigate: PropTypes.any,\n      title: PropTypes.node\n  })),\n  current: PropTypes.node,\n};\n\nBreadcrumbs.defaultProps = {\n  items: [],\n  current: null,\n};\n\nexport default Breadcrumbs;\n","/*eslint max-len: [\"error\", { \"ignoreStrings\": true }]*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { WrenchIcon } from '@patternfly/react-icons';\n\nconst DefaultEmptyState = ({ preflightError: error }) => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={WrenchIcon} />\n    {error.status === 404 && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          No data found\n        </Title>\n        <EmptyStateBody>\n          Please visit{' '}\n          <a\n            href=\"https://docs.ansible.com/ansible-tower/latest/html/administration/usability_data_collection.html#automation-analytics\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            here\n          </a>{' '}\n          to learn how to enable Automation Analytics.\n        </EmptyStateBody>\n      </>\n    )}\n    {error.status === 401 && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          Not authorized\n        </Title>\n        <EmptyStateBody>\n          You do not have the correct permissions to view this page.\n        </EmptyStateBody>\n      </>\n    )}\n    {!error.status && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          Something went wrong, please try reloading the page\n        </Title>\n        <Button variant=\"primary\" onClick={() => window.location.reload()}>\n          Reload\n        </Button>\n      </>\n    )}\n  </EmptyState>\n);\n\nDefaultEmptyState.propTypes = {\n  preflightError: PropTypes.object,\n};\n\nexport default DefaultEmptyState;\n","import React, { useState, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Card as PFCard,\n  CardBody as PFCardBody,\n  ExpandableSection as PFExpandable,\n} from '@patternfly/react-core';\nimport getErrorMessage from './getErrorMessage';\n\nconst Card = styled(PFCard)`\n  background-color: var(--pf-global--BackgroundColor--200);\n  overflow-wrap: break-word;\n`;\n\nconst CardBody = styled(PFCardBody)`\n  max-height: 200px;\n  overflow: scroll;\n`;\n\nconst Expandable = styled(PFExpandable)`\n  text-align: left;\n\n  & .pf-c-expandable__toggle {\n    padding-left: 10px;\n    margin-left: 5px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n`;\n\nfunction ErrorDetail({ error }) {\n  const { response } = error;\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const handleToggle = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  const renderNetworkError = () => {\n    const message = getErrorMessage(response);\n\n    return (\n      <Fragment>\n        <CardBody>\n          {response?.config?.method.toUpperCase()} {response?.config?.url}{' '}\n          <strong>{response?.status}</strong>\n        </CardBody>\n        <CardBody>\n          {Array.isArray(message) ? (\n            <ul>\n              {message.map(m =>\n                typeof m === 'string' ? <li key={m}>{m}</li> : null\n              )}\n            </ul>\n          ) : (\n            message\n          )}\n        </CardBody>\n      </Fragment>\n    );\n  };\n\n  const renderStack = () => {\n    return <CardBody>{error.stack}</CardBody>;\n  };\n\n  return (\n    <Expandable\n      toggleText={'Details'}\n      onToggle={handleToggle}\n      isExpanded={isExpanded}\n    >\n      <Card>\n        {Object.prototype.hasOwnProperty.call(error, 'response')\n          ? renderNetworkError()\n          : renderStack()}\n      </Card>\n    </Expandable>\n  );\n}\n\nErrorDetail.propTypes = {\n  error: PropTypes.instanceOf(Error).isRequired,\n};\n\nexport default ErrorDetail;\n","export default function getErrorMessage(response) {\n  if (!response?.data) {\n    return null;\n  }\n  if (typeof response.data === 'string') {\n    return response.data;\n  }\n  if (response.data.detail) {\n    return response.data.detail;\n  }\n  return Object.values(response.data).reduce(\n    (acc, currentValue) => acc.concat(currentValue),\n    []\n  );\n}\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst DefaultLoadingState = () => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={CubesIcon} />\n    <Title headingLevel=\"h5\" size=\"lg\">\n      Loading...\n    </Title>\n    <EmptyStateBody>Please wait.</EmptyStateBody>\n  </EmptyState>\n);\n\nexport default DefaultLoadingState;\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst NoData = () => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={CubesIcon} />\n    <Title headingLevel=\"h5\" size=\"lg\">\n      No Data\n    </Title>\n  </EmptyState>\n);\n\nexport default NoData;\n","export const optionsForCategories = {\n  status: {\n    type: 'select',\n    isSingle: false,\n    name: 'Status',\n    placeholder: 'Filter by job status',\n    hasChips: true,\n  },\n  quick_date_range: {\n    type: 'select',\n    isSingle: true,\n    name: 'Date',\n    placeholder: 'Filter by date',\n    hasChips: false,\n  },\n  start_date: {\n    type: 'date',\n    name: 'Start date',\n    hasChips: false,\n  },\n  end_date: {\n    type: 'date',\n    name: 'End date',\n    hasChips: false,\n  },\n  job_type: {\n    type: 'select',\n    isSingle: false,\n    name: 'Job',\n    placeholder: 'Filter by job type',\n    hasChips: true,\n  },\n  org_id: {\n    type: 'select',\n    isSingle: false,\n    name: 'Organization',\n    placeholder: 'Filter by organization',\n    hasChips: true,\n  },\n  cluster_id: {\n    type: 'select',\n    isSingle: false,\n    name: 'Cluster',\n    placeholder: 'Filter by cluster',\n    hasChips: true,\n  },\n  template_id: {\n    type: 'select',\n    isSingle: false,\n    name: 'Template',\n    placeholder: 'Filter by template',\n    hasChips: true,\n  },\n  sort_options: {\n    type: 'select',\n    isSingle: true,\n    name: 'Sort by',\n    placeholder: 'Sort by attribute',\n    hasChips: false,\n  },\n  automation_status: {\n    type: 'select',\n    isSingle: false,\n    name: 'Automation status',\n    placeholder: 'Filter by automation status',\n    hasChips: true,\n  },\n  frequency_period: {\n    type: 'select',\n    isSingle: false,\n    name: 'Frequency',\n    placeholder: 'Filter by frequency',\n    hasChips: true,\n  },\n  category: {\n    type: 'select',\n    isSingle: false,\n    name: 'Category',\n    placeholder: 'Filter by category',\n    hasChips: true,\n  },\n  inventory_id: {\n    type: 'select',\n    isSingle: false,\n    name: 'Inventory',\n    placeholder: 'Filter by inventory',\n    hasChips: true,\n  },\n  name: {\n    type: 'text',\n    name: 'Search by name',\n    hasChips: true,\n  },\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarItem, Select, SelectOption } from '@patternfly/react-core';\n\nconst CategoryDropdown = ({\n  selected,\n  setSelected = () => {},\n  categories = [],\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <ToolbarItem>\n      <Select\n        isOpen={isExpanded}\n        variant={'single'}\n        aria-label={'Categories'}\n        onToggle={() => setIsExpanded(!isExpanded)}\n        onSelect={(_event, selection) => {\n          setSelected(selection);\n          setIsExpanded(false);\n        }}\n        selections={selected}\n        placeholderText={'Filter by'}\n      >\n        {categories.map(({ key, name }) => (\n          <SelectOption key={key} value={key}>\n            {name}\n          </SelectOption>\n        ))}\n      </Select>\n    </ToolbarItem>\n  );\n};\n\nCategoryDropdown.propTypes = {\n  categories: PropTypes.array,\n  selected: PropTypes.string,\n  setSelected: PropTypes.func,\n};\n\nexport default CategoryDropdown;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ToolbarFilter,\n  Select as PFSelect,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\n\nimport { handleCheckboxChips, handleSingleChips } from './helpers';\nimport { optionsForCategories } from '../../constants';\nimport styled from 'styled-components';\n\nconst OptionSpan = styled('span')`\n  display: block;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n  max-width: 300px;\n`;\n\nconst renderValues = (values) =>\n  values &&\n  values.map(({ key, value, description }) => (\n    <SelectOption key={key} value={key} description={description}>\n      <OptionSpan>{value}</OptionSpan>\n    </SelectOption>\n  ));\n\nconst Select = ({\n  categoryKey,\n  value,\n  selectOptions,\n  isVisible = true,\n  setValue,\n}) => {\n  const [expanded, setExpanded] = useState(false);\n  const options = optionsForCategories[categoryKey];\n\n  const onDelete = (_, valueToDelete) => {\n    const single = optionsForCategories[categoryKey].isSingle;\n\n    if (single) {\n      setValue(null);\n    } else {\n      const keyToDelete = selectOptions.find(\n        ({ value }) => value === valueToDelete\n      ).key;\n      const filteredArr = value.filter((value) => value !== keyToDelete);\n      setValue(filteredArr);\n    }\n  };\n\n  const onFilter = (_, textInput) => {\n    if (textInput === '') {\n      return renderValues(selectOptions);\n    } else {\n      return renderValues(\n        selectOptions.filter(({ value }) =>\n          value.toLowerCase().includes(textInput.toLowerCase())\n        )\n      );\n    }\n  };\n\n  const handleChips = () => {\n    if (options.isSingle) {\n      return handleSingleChips(value, selectOptions);\n    } else {\n      return handleCheckboxChips(value, selectOptions);\n    }\n  };\n\n  const onSelect = (_, selection) => {\n    if (options.isSingle) {\n      setValue(selection);\n      setExpanded(false);\n    } else {\n      setValue(\n        !value.includes(selection)\n          ? [...value, selection]\n          : value.filter((value) => value !== selection)\n      );\n    }\n  };\n\n  return (\n    <ToolbarFilter\n      data-cy={categoryKey}\n      key={categoryKey}\n      showToolbarItem={isVisible}\n      chips={options.hasChips ? handleChips() : []}\n      categoryName={options.name}\n      deleteChip={options.hasChips ? onDelete : null}\n    >\n      <PFSelect\n        variant={\n          options.isSingle ? SelectVariant.single : SelectVariant.checkbox\n        }\n        aria-label={options.name}\n        onToggle={() => setExpanded(!expanded)}\n        onSelect={onSelect}\n        selections={value}\n        isOpen={expanded}\n        hasInlineFilter\n        placeholderText={options.placeholder}\n        onFilter={onFilter}\n        maxHeight={'1000%'}\n      >\n        {renderValues(selectOptions)}\n      </PFSelect>\n    </ToolbarFilter>\n  );\n};\n\nSelect.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]).isRequired,\n  selectOptions: PropTypes.array,\n  isVisible: PropTypes.bool,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default Select;\n","/**\n * Get comparator values if their key is in the item list\n */\nexport const handleCheckboxChips = (item, comparator) => {\n  if (item && comparator) {\n    return item.reduce((acc, i) => {\n      Number.isInteger(parseInt(i)) ? (i = parseInt(i)) : i;\n\n      comparator.forEach((cmpItem) => {\n        if (cmpItem.key === i) {\n          acc.push(cmpItem.value);\n        }\n      });\n\n      return acc;\n    }, []);\n  }\n\n  return [];\n};\n\n/**\n * Convert a list of objects to a list of the last value if defined\n */\nexport const handleSingleChips = (item, comparator) => {\n  if (item && typeof item === 'string' && comparator) {\n    let val;\n    comparator.forEach((i) => {\n      if (i.key === item) {\n        val = i.value;\n      }\n    });\n\n    if (val !== undefined) {\n      return [val];\n    }\n  }\n\n  return [];\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, TextInput } from '@patternfly/react-core';\nimport { optionsForCategories } from '../../constants';\n\nconst Date = ({ categoryKey, value = '', setValue = () => {} }) => {\n  const options = optionsForCategories[categoryKey];\n\n  return (\n    <InputGroup>\n      <TextInput\n        type=\"date\"\n        aria-label={options.name}\n        value={value}\n        onChange={setValue}\n      />\n    </InputGroup>\n  );\n};\n\nDate.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default Date;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ToolbarFilter,\n  TextInput,\n  InputGroup,\n  Button,\n} from '@patternfly/react-core';\n\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { optionsForCategories } from '../../constants';\n\nconst Text = ({ categoryKey, isVisible = true, value = '', setValue }) => {\n  const [searchVal, setSearchVal] = useState(value);\n  const options = optionsForCategories[categoryKey];\n\n  const onDelete = () => {\n    setValue('');\n  };\n\n  const handleChips = () => {\n    return value ? [value] : [];\n  };\n\n  useEffect(() => {\n    setSearchVal(value);\n  }, [value]);\n\n  return (\n    <ToolbarFilter\n      data-cy={categoryKey}\n      key={categoryKey}\n      showToolbarItem={isVisible}\n      chips={options.hasChips ? handleChips() : []}\n      categoryName={options.name}\n      deleteChip={options.hasChips ? onDelete : null}\n    >\n      <InputGroup>\n        <TextInput\n          type=\"search\"\n          aria-label={options.name}\n          value={searchVal}\n          onChange={setSearchVal}\n        />\n        <Button\n          variant=\"control\"\n          aria-label={`Search button for ${options.name}`}\n          onClick={() => {\n            setValue(searchVal);\n          }}\n        >\n          <SearchIcon />\n        </Button>\n      </InputGroup>\n    </ToolbarFilter>\n  );\n};\n\nText.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.any,\n  isVisible: PropTypes.bool,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default Text;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Select from './Select';\nimport Date from './Date';\nimport Text from './Text';\nimport { optionsForCategories } from '../../constants';\n\nconst components = {\n  select: Select,\n  date: Date,\n  text: Text,\n};\n\nconst ToolbarInput = ({\n  categoryKey,\n  value,\n  selectOptions,\n  isVisible = true,\n  setValue,\n}) => {\n  const options = optionsForCategories[categoryKey];\n  const SelectedInput = components[options.type];\n\n  const defaultValue = () => {\n    if (value) {\n      return value;\n    } else if (options.type !== 'select') {\n      return '';\n    } else if (options.isSingle) {\n      return '';\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <SelectedInput\n      categoryKey={categoryKey}\n      value={defaultValue()}\n      selectOptions={selectOptions}\n      isVisible={isVisible}\n      setValue={setValue}\n    />\n  );\n};\n\nToolbarInput.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  selectOptions: PropTypes.array,\n  isVisible: PropTypes.bool,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default ToolbarInput;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarGroup } from '@patternfly/react-core';\n\nimport CategoryDropdown from './CategoryDropdown';\nimport ToolbarInput from './ToolbarInput/';\nimport { optionsForCategories } from '../constants';\n\nconst FilterCategoriesGroup = ({ filterCategories, filters, setFilters }) => {\n  const [currentCategory, setCurrentCategory] = useState(\n    Object.keys(filterCategories)[0]\n  );\n\n  return (\n    <ToolbarGroup variant=\"filter-group\">\n      <CategoryDropdown\n        selected={currentCategory}\n        setSelected={setCurrentCategory}\n        categories={Object.keys(filterCategories).map((el) => ({\n          key: el,\n          name: optionsForCategories[el].name,\n        }))}\n      />\n      {Object.keys(filterCategories).map((key) => (\n        <ToolbarInput\n          key={key}\n          categoryKey={key}\n          value={filters[key]}\n          selectOptions={filterCategories[key]}\n          isVisible={currentCategory === key}\n          setValue={(value) => setFilters(key, value)}\n        />\n      ))}\n    </ToolbarGroup>\n  );\n};\n\nFilterCategoriesGroup.propTypes = {\n  filterCategories: PropTypes.object.isRequired,\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n};\n\nexport default FilterCategoriesGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarGroup } from '@patternfly/react-core';\n\nimport ToolbarInput from './ToolbarInput/';\n\nconst QuickDateGroup = ({ filters, setFilters, values }) => (\n  <ToolbarGroup variant=\"filter-group\">\n    <ToolbarInput\n      categoryKey=\"quick_date_range\"\n      value={filters.quick_date_range}\n      selectOptions={values}\n      setValue={(value) => setFilters('quick_date_range', value)}\n    />\n    {filters.quick_date_range && filters.quick_date_range.includes('custom') && (\n      <>\n        <ToolbarInput\n          categoryKey=\"start_date\"\n          value={filters.start_date}\n          setValue={(e) => setFilters('start_date', e)}\n        />\n        <ToolbarInput\n          categoryKey=\"end_date\"\n          value={filters.end_date}\n          setValue={(e) => setFilters('end_date', e)}\n        />\n      </>\n    )}\n  </ToolbarGroup>\n);\n\nQuickDateGroup.propTypes = {\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  values: PropTypes.array.isRequired,\n};\n\nexport default QuickDateGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarGroup, Button } from '@patternfly/react-core';\nimport { SortAmountDownIcon, SortAmountUpIcon } from '@patternfly/react-icons';\n\nimport ToolbarInput from './ToolbarInput';\n\nconst SortByGroup = ({ filters, setFilters, sort_options }) => (\n  <ToolbarGroup variant=\"filter-group\">\n    <ToolbarInput\n      categoryKey=\"sort_options\"\n      value={filters.sort_options}\n      selectOptions={sort_options}\n      setValue={(value) => setFilters('sort_options', value)}\n    />\n    <Button\n      variant=\"control\"\n      onClick={() =>\n        setFilters('sort_order', filters.sort_order === 'asc' ? 'desc' : 'asc')\n      }\n    >\n      {filters.sort_order === 'asc' && <SortAmountUpIcon />}\n      {filters.sort_order === 'desc' && <SortAmountDownIcon />}\n    </Button>\n  </ToolbarGroup>\n);\n\nSortByGroup.propTypes = {\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  sort_options: PropTypes.array.isRequired,\n};\n\nexport default SortByGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, Switch } from '@patternfly/react-core';\nimport {\n  Card,\n  CardTitle,\n  CardBody,\n  CardActions,\n  CardHeader,\n} from '@patternfly/react-core';\nimport { QuestionCircleIcon, TimesIcon } from '@patternfly/react-icons';\n\n/* TODO: For future work: make settings more modular for different pages */\nconst SettingsPanel = ({\n  filters,\n  setFilters,\n  settingsExpanded,\n  setSettingsExpanded,\n}) => (\n  <Card isFlat style={{ backgroundColor: '#EEEEEE' }}>\n    <CardHeader>\n      <CardActions>\n        <Button\n          variant=\"plain\"\n          onClick={() => setSettingsExpanded(!settingsExpanded)}\n        >\n          <TimesIcon />\n        </Button>\n      </CardActions>\n      <CardTitle>Settings</CardTitle>\n    </CardHeader>\n    <CardBody>\n      <Switch\n        id=\"showRootWorkflowJobs\"\n        label=\"Ignore nested workflows and jobs\"\n        labelOff=\"Ignore nested workflows and jobs\"\n        isChecked={filters.only_root_workflows_and_standalone_jobs}\n        onChange={(val) => {\n          setFilters('only_root_workflows_and_standalone_jobs', val);\n        }}\n      />\n      <Tooltip\n        position={'top'}\n        content={\n          <div>\n            {' '}\n            If enabled, nested workflows and jobs will not be included in the\n            overall totals. Enable this option to filter out duplicate entries.\n          </div>\n        }\n      >\n        <QuestionCircleIcon />\n      </Tooltip>\n    </CardBody>\n  </Card>\n);\n\nSettingsPanel.propTypes = {\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  settingsExpanded: PropTypes.bool.isRequired,\n  setSettingsExpanded: PropTypes.func.isRequired,\n};\n\nexport default SettingsPanel;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  Button,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { FilterIcon, CogIcon } from '@patternfly/react-icons';\n\nimport { optionsForCategories } from './constants';\nimport {\n  FilterCategoriesGroup,\n  QuickDateGroup,\n  SortByGroup,\n  SettingsPanel,\n} from './Groups/';\n\nconst FilterableToolbar = ({\n  categories,\n  filters,\n  setFilters,\n  pagination = null,\n  hasSettings = false,\n  additionalControls = [],\n}) => {\n  const [settingsExpanded, setSettingsExpanded] = useState(false);\n  const { quick_date_range, sort_options, ...restCategories } = categories;\n\n  // Filter out elements which are not in the option object.\n  const filterCategories = Object.keys(restCategories)\n    .filter((key) => Object.keys(optionsForCategories).includes(key))\n    .reduce((obj, key) => {\n      obj[key] = restCategories[key];\n      return obj;\n    }, {});\n\n  return (\n    <>\n      <Toolbar\n        id=\"filterable-toolbar-with-chip-groups\"\n        clearAllFilters={() => {\n          setFilters(null, null);\n        }}\n        collapseListedFiltersBreakpoint=\"xl\"\n      >\n        <ToolbarContent>\n          <Button variant=\"control\">\n            <FilterIcon />\n          </Button>\n          {Object.keys(filterCategories).length > 0 && (\n            <FilterCategoriesGroup\n              filterCategories={filterCategories}\n              filters={filters}\n              setFilters={setFilters}\n            />\n          )}\n          {quick_date_range && (\n            <QuickDateGroup\n              filters={filters}\n              setFilters={setFilters}\n              values={quick_date_range}\n            />\n          )}\n          {sort_options && (\n            <SortByGroup\n              filters={filters}\n              setFilters={setFilters}\n              sort_options={sort_options}\n            />\n          )}\n          {hasSettings && (\n            <ToolbarItem>\n              <Button\n                variant=\"plain\"\n                onClick={() => setSettingsExpanded(!settingsExpanded)}\n                aria-label=\"settings\"\n                isActive={settingsExpanded}\n              >\n                <CogIcon />\n              </Button>\n            </ToolbarItem>\n          )}\n          {additionalControls.length > 0 && (\n            <ToolbarGroup>\n              {additionalControls.map((control) => (\n                <ToolbarItem key={control.key}>{control}</ToolbarItem>\n              ))}\n            </ToolbarGroup>\n          )}\n          {pagination && (\n            <ToolbarItem\n              variant=\"pagination\"\n              visibility={{ default: 'hidden', lg: 'visible' }}\n            >\n              {pagination}\n            </ToolbarItem>\n          )}\n        </ToolbarContent>\n        {settingsExpanded && (\n          <SettingsPanel\n            filters={filters}\n            setFilters={setFilters}\n            settingsExpanded={settingsExpanded}\n            setSettingsExpanded={setSettingsExpanded}\n          />\n        )}\n      </Toolbar>\n    </>\n  );\n};\n\nFilterableToolbar.propTypes = {\n  categories: PropTypes.object.isRequired,\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  pagination: PropTypes.object,\n  hasSettings: PropTypes.bool,\n  additionalControls: PropTypes.array,\n};\n\nexport default FilterableToolbar;\n","import Toolbar from './Toolbar';\nexport default Toolbar;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\n\nclass Tooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  formatDollars(amount) {\n    return parseFloat(amount)\n      .toFixed(2)\n      .toString()\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip-base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, 0) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', 92)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.name = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', -2)\n      .text('Template name');\n    this.savings = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 52)\n      .attr('font-size', 12)\n      .attr('font-weight', 'bold')\n      .attr('fill', 'white')\n      .text('Total savings $0');\n    this.manualCost = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', 16)\n      .text('Manual cost $0');\n    this.automationCost = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', 34)\n      .text('Automation cost $0');\n  }\n\n  handleMouseOver = (d) => {\n    let name;\n    let savings;\n    let manualCost;\n    let automationCost;\n    const scrollLeftOffset = d3.select('#d3-roi-chart-root').node().scrollLeft;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10 +\n      scrollLeftOffset;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      30;\n    if (!d) {\n      return;\n    } else {\n      savings = this.formatDollars(d.delta);\n      name = d.name;\n      manualCost = this.formatDollars(d.manualCost);\n      automationCost = this.formatDollars(d.automatedCost);\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n    this.name.text('' + name);\n    this.savings.text('Total savings $' + savings);\n    this.manualCost.text('Manual Cost $' + manualCost);\n    this.automationCost.text('Automation Cost $' + automationCost);\n    this.nameWidth = this.name.node().getComputedTextLength();\n    this.savingsWidth = this.savings.node().getComputedTextLength();\n    this.manualCostWidth = this.manualCost.node().getComputedTextLength();\n    this.automationCostWidth = this.automationCost\n      .node()\n      .getComputedTextLength();\n    this.widestTextElem = d3.max([\n      this.nameWidth,\n      this.savingsWidth,\n      this.automationCostWidth,\n      this.manualCostWidth,\n    ]);\n\n    const maxTextPerc = (this.widestTextElem / this.boxWidth) * 100;\n    const threshold = 85;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 15) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.name.attr('x', -(toolTipWidth - 7));\n      this.savings.attr('x', -(toolTipWidth - 7));\n      this.manualCost.attr('x', -(toolTipWidth - 7));\n      this.automationCost.attr('x', -(toolTipWidth - 7));\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 15) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.name.attr('x', 20);\n      this.savings.attr('x', 20);\n      this.manualCost.attr('x', 20);\n      this.automationCost.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass TopTemplatesSavings extends Component {\n  constructor(props) {\n    super(props);\n    this.init = this.init.bind(this);\n    this.draw = this.draw.bind(this);\n    this.resize = this.resize.bind(this);\n    this.state = {\n      timeout: null,\n    };\n  }\n\n  // Methods\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  init() {\n    this.draw();\n  }\n\n  draw() {\n    // Use PF chart color\n    const color = '#0066CC'; //blue\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const { data } = this.props;\n    let width;\n    // adjust chart width to support larger datasets\n    if (data.length >= 15) {\n      const containerWidth = d3.select('.automation-wrapper').node();\n      width =\n        containerWidth.getBoundingClientRect().width -\n        this.props.margin.left -\n        this.props.margin.right;\n    } else {\n      width = this.props.getWidth();\n    }\n\n    const height = this.props.getHeight();\n    const x = d3.scaleBand().rangeRound([0, width]).padding(0.45);\n    const y = d3.scaleLinear().range([height, 0]);\n    // format our X Axis ticks\n    let ticks;\n    ticks = data.map((d) => d.name);\n    const formatYAxisValue = d3.format('.2s');\n    const xAxis = d3.axisBottom(x).tickValues(ticks);\n\n    const yAxis = d3\n      .axisLeft(y)\n      .ticks(8)\n      .tickFormat((d) => formatYAxisValue(d).replace('G', 'B'))\n      .tickSize(-width, 0, 0);\n\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n\n    const taskNames = data.map((d) => d.name);\n    const tooltip = new Tooltip({\n      svg: '#' + this.props.id,\n    });\n    x.domain(taskNames);\n    y.domain([0, d3.max(data, (d) => d.delta * 1.15) || 8]);\n\n    // add y axis\n    svg\n      .append('g')\n      .attr('class', 'y axis')\n      .call(yAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7')\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 6)\n      .attr('dy', '.71em')\n      .style('text-anchor', 'end')\n      .style('font-weight', 'bold')\n      .text('Value');\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Savings per template ($)');\n\n    // add x axis\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n      .selectAll('text')\n      .style('text-anchor', 'start')\n      .attr('dx', '0.75em')\n      .attr('dy', -x.bandwidth() / 1.45 - 8)\n      .attr('transform', 'rotate(-90)');\n\n    svg.selectAll('.x-axis line').attr('stroke', 'transparent');\n\n    svg\n      .selectAll('.bar')\n      .data(data)\n      .enter()\n      .append('rect')\n      .attr('x', (d) => x(d.name))\n      .attr('width', x.bandwidth())\n      .attr('y', (d) => y(d.delta))\n      .style('fill', () => color)\n      .attr('height', (d) => height - y(d.delta))\n      .on('mouseover', function (d) {\n        d3.select(this).style('fill', d3.rgb(color).darker(1));\n        tooltip.handleMouseOver(d);\n      })\n      .on('mousemove', tooltip.handleMouseOver)\n      .on('mouseout', function () {\n        d3.select(this).style('fill', color);\n        tooltip.handleMouseOut();\n      });\n  }\n\n  componentDidMount() {\n    this.init();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate() {\n    this.init();\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nTopTemplatesSavings.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n};\n\nexport default initializeChart(TopTemplatesSavings);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Card,\n  CardBody,\n  InputGroup,\n  InputGroupText,\n  TextInput,\n} from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst validFloat = (value) => {\n  const floatValue = parseFloat(value);\n  return floatValue && floatValue >= 0 ? value : '';\n};\n\nconst CalculationCost = ({\n  costManual = '0',\n  setCostManual = () => {},\n  costAutomation = '0',\n  setCostAutomation = () => {},\n}) => (\n  <Card>\n    <CardTitle>Calculate your automation</CardTitle>\n    <CardBody>\n      <InputAndText>\n        <p>Manual cost of automation</p>\n        <em style={{ color: 'var(--pf-global--Color--dark-200)' }}>\n          (e.g. average salary of mid-level Software Engineer)\n        </em>\n        <InputGroup style={{ width: '50%' }}>\n          <InputGroupText>\n            <DollarSignIcon />\n          </InputGroupText>\n          <TextInput\n            id=\"manual-cost\"\n            type=\"number\"\n            aria-label=\"manual-cost\"\n            value={costManual}\n            onChange={(e) => setCostManual(validFloat(e))}\n          />\n          <InputGroupText>/hr</InputGroupText>\n        </InputGroup>\n      </InputAndText>\n      <InputAndText style={{ paddingTop: '10px' }}>\n        <p>Automated process cost</p>\n        <InputGroup style={{ width: '50%' }}>\n          <InputGroupText>\n            <DollarSignIcon />\n          </InputGroupText>\n          <TextInput\n            id=\"automation-cost\"\n            type=\"number\"\n            aria-label=\"automation-cost\"\n            value={costAutomation}\n            onChange={(e) => setCostAutomation(validFloat(e))}\n          />\n          <InputGroupText>/hr</InputGroupText>\n        </InputGroup>\n      </InputAndText>\n    </CardBody>\n  </Card>\n);\n\nCalculationCost.propTypes = {\n  costManual: PropTypes.string,\n  setCostManual: PropTypes.func,\n  costAutomation: PropTypes.string,\n  setCostAutomation: PropTypes.func,\n};\n\nexport default CalculationCost;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  InputGroup,\n  InputGroupText,\n  TextInput,\n  Tooltip,\n  Popover,\n} from '@patternfly/react-core';\nimport {\n  InfoCircleIcon,\n  ToggleOnIcon,\n  ToggleOffIcon,\n} from '@patternfly/react-icons';\n\nimport {\n  convertSecondsToMins,\n  convertMinsToSeconds,\n  capitalize,\n} from '../../Utilities/helpers';\n\nconst TemplateDetail = styled.div`\n  em {\n    display: block;\n    padding: 5px 0;\n  }\n\n  @media (max-width: 1490px) {\n    display: block;\n\n    em {\n      padding: 10px 0;\n      display: block;\n    }\n  }\n`;\n\nconst TemplateDetailSubTitle = styled.em`\n  color: var(--pf-global--Color--dark-200);\n`;\n\nconst TooltipWrapper = styled.div`\n  p {\n    text-align: left;\n  }\n`;\n\nconst IconGroup = styled.div`\n  & svg {\n    fill: var(--pf-global--Color--dark-200);\n\n    :hover {\n      cursor: pointer;\n    }\n\n    :first-of-type {\n      margin-right: 10px;\n      margin-left: 10px;\n\n      @media (max-width: 1350px) {\n        margin-left: 0;\n      }\n    }\n  }\n`;\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst showSortAttr = (details, sortBy) => {\n  const trimmed = sortBy.split(':')[0];\n  const sortAttribute = Object.keys(details).map((k) =>\n    k === trimmed ? `${details[k]}` : null\n  );\n\n  return (\n    <TemplateDetailSubTitle>\n      {capitalize(trimmed.split('_').join(' '))}: {sortAttribute}\n    </TemplateDetailSubTitle>\n  );\n};\n\nconst QuestionIconTooltip = ({ details }) => (\n  <Popover\n    aria-label=\"template detail popover\"\n    position=\"left\"\n    bodyContent={\n      <TooltipWrapper>\n        {Object.keys(details).map((k, i) => (\n          <p key={i}>\n            <b>{capitalize(k.split('_').join(' '))}</b>: {details[k]}\n          </p>\n        ))}\n      </TooltipWrapper>\n    }\n  >\n    <InfoCircleIcon />\n  </Popover>\n);\n\nQuestionIconTooltip.propTypes = {\n  details: PropTypes.object,\n};\n\nconst TopTemplates = ({\n  data = [],\n  sortBy = '',\n  setDataRunTime = () => {},\n  setEnabled = () => {},\n  redirectToJobExplorer = () => {},\n}) => (\n  <Card style={{ overflow: 'auto', flex: '1 1 0' }} className=\"top-templates\">\n    <CardBody>\n      <p>Enter the time it takes to run the following templates manually.</p>\n      {data.map((d) => (\n        <div key={d.id}>\n          <Tooltip content={'List of jobs for this template for past 30 days'}>\n            <Button\n              style={{ padding: '15px 0 10px' }}\n              component=\"a\"\n              onClick={() => redirectToJobExplorer(d.id)}\n              variant=\"link\"\n            >\n              {d.name}\n            </Button>\n          </Tooltip>\n          <TemplateDetail>\n            <InputAndText key={d.id}>\n              <InputGroup>\n                <TextInput\n                  id={d.id}\n                  type=\"number\"\n                  aria-label=\"time run manually\"\n                  value={convertSecondsToMins(d.avgRunTime)}\n                  onChange={(minutes) =>\n                    setDataRunTime(convertMinsToSeconds(minutes), d.id)\n                  }\n                />\n                <InputGroupText>min</InputGroupText>\n              </InputGroup>\n            </InputAndText>\n            <TemplateDetailSubTitle>\n              x {d.successful_hosts_total} host runs\n            </TemplateDetailSubTitle>\n            {showSortAttr(d, sortBy)}\n            <IconGroup>\n              <QuestionIconTooltip details={d} />\n              {!d.enabled && (\n                <ToggleOffIcon onClick={() => setEnabled(d.id)(true)} />\n              )}\n              {d.enabled && (\n                <ToggleOnIcon onClick={() => setEnabled(d.id)(false)} />\n              )}\n            </IconGroup>\n          </TemplateDetail>\n          <p style={{ color: '#486B00' }}>${d.delta.toFixed(2)}</p>\n        </div>\n      ))}\n    </CardBody>\n  </Card>\n);\n\nTopTemplates.propTypes = {\n  data: PropTypes.array,\n  setDataRunTime: PropTypes.func,\n  redirectToJobExplorer: PropTypes.func,\n  deselectedIds: PropTypes.array,\n  setDeselectedIds: PropTypes.func,\n  setEnabled: PropTypes.func,\n  sortBy: PropTypes.string,\n};\n\nexport default TopTemplates;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\n// Imports from custom components\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\n// Imports from API\nimport { preflightRequest, readROI, readROIOptions } from '../../Api';\n\n// Imports from utilities\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { roi as roiConst } from '../../Utilities/constants';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { calculateDelta, convertSecondsToHours } from '../../Utilities/helpers';\n\n// Chart\nimport TopTemplatesSavings from '../../Charts/ROITopTemplates';\n\n// Local imports\nimport { BorderedCardTitle } from './helpers';\nimport TotalSavings from './TotalSavings';\nimport CalculationCost from './CalculationCost';\nimport AutomationFormula from './AutomationFormula';\nimport TopTemplates from './TopTemplates';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 5fr 2fr;\n  height: 100%;\n`;\n\nconst WrapperLeft = styled.div`\n  flex: 5;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n`;\n\nconst WrapperRight = styled.div`\n  flex: 2;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst mapApi = ({ items = [] }) =>\n  items.map((el) => ({\n    ...el,\n    delta: 0,\n    avgRunTime: 3600,\n    manualCost: 0,\n    automatedCost: 0,\n    enabled: true,\n  }));\n\nconst filterDisabled = (data) => data.filter(({ enabled }) => enabled);\n\nconst updateDeltaCost = (data, costAutomation, costManual) =>\n  data.map((el) => {\n    const manualCost =\n      convertSecondsToHours(el.avgRunTime) *\n      el.successful_hosts_total *\n      parseFloat(costManual);\n    const automatedCost =\n      convertSecondsToHours(el.successful_elapsed_total) *\n      parseFloat(costAutomation);\n    const delta = calculateDelta(automatedCost, manualCost);\n\n    return { ...el, delta, manualCost, automatedCost };\n  });\n\nconst computeTotalSavings = (data) =>\n  data.reduce((sum, curr) => sum + curr.delta, 0);\n\nconst AutomationCalculator = ({ history }) => {\n  const toJobExplorer = useRedirect(history, 'jobExplorer');\n  const [costManual, setCostManual] = useState('50');\n  const [costAutomation, setCostAutomation] = useState('20');\n\n  const [preflight, setPreflight] = useApi(null);\n  const [options, setOptions] = useApi({});\n  const [api, fetchApi, setDataInApi] = useApi([], (data) =>\n    updateDeltaCost(mapApi(data), costAutomation, costManual)\n  );\n\n  const { queryParams, setFromToolbar } = useQueryParams(\n    roiConst.defaultParams\n  );\n\n  /**\n   * Modifies one elements avgRunTime in the unfilteredData\n   * and updates all calculated fields.\n   * Used in top templates.\n   */\n  const setDataRunTime = (seconds, id) => {\n    const updatedData = api.data.map((el) => {\n      if (el.id === id) {\n        el.avgRunTime = seconds;\n        const updatedDelta = updateDeltaCost(\n          [el],\n          costAutomation,\n          costManual\n        )[0];\n        return updatedDelta;\n      } else {\n        return el;\n      }\n    });\n\n    setDataInApi(updatedData);\n  };\n\n  const setEnabled = (id) => (value) => {\n    setDataInApi(\n      api.data.map((el) => (el.id === id ? { ...el, enabled: value } : el))\n    );\n  };\n\n  useEffect(() => {\n    setPreflight(preflightRequest());\n    setOptions(readROIOptions({ params: queryParams }));\n  }, []);\n\n  /**\n   * Recalculates the delta and costs in the data after the cost is changed.\n   */\n  useEffect(() => {\n    setDataInApi(updateDeltaCost(api.data, costAutomation, costManual));\n  }, [costAutomation, costManual]);\n\n  /**\n   * Get data from API depending on the queryParam.\n   */\n  useEffect(() => {\n    fetchApi(readROI({ params: queryParams }));\n  }, [queryParams]);\n\n  /**\n   * Function to redirect to the job explorer page\n   * with the same filters as is used here.\n   */\n  const redirectToJobExplorer = (templateId) => {\n    const initialQueryParams = {\n      quick_date_range: 'last_30_days',\n      template_id: [templateId],\n    };\n    toJobExplorer(initialQueryParams);\n  };\n\n  const renderLeft = () => (\n    <WrapperLeft>\n      <Main style={{ paddingBottom: '0' }}>\n        <Card>\n          <BorderedCardTitle>Automation savings</BorderedCardTitle>\n          <CardBody>\n            {api.isLoading && <LoadingState />}\n            {api.error && <ApiErrorState message={api.error.error} />}\n            {api.isSuccess && api.data.length <= 0 && <NoData />}\n            {api.isSuccess && api.data.length > 0 && (\n              <React.Fragment>\n                <TopTemplatesSavings\n                  margin={{ top: 20, right: 20, bottom: 20, left: 70 }}\n                  id=\"d3-roi-chart-root\"\n                  data={filterDisabled(api.data)}\n                />\n                <p style={{ textAlign: 'center' }}>Templates</p>\n              </React.Fragment>\n            )}\n          </CardBody>\n        </Card>\n      </Main>\n      <Main>\n        <AutomationFormula />\n      </Main>\n    </WrapperLeft>\n  );\n\n  const renderRight = () => (\n    <WrapperRight>\n      <Main style={{ paddingBottom: '0', paddingLeft: '0' }}>\n        <TotalSavings\n          totalSavings={computeTotalSavings(filterDisabled(api.data))}\n        />\n      </Main>\n      <Main\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          flex: '1 1 0',\n          paddingLeft: '0',\n        }}\n      >\n        <CalculationCost\n          costManual={costManual}\n          setCostManual={setCostManual}\n          costAutomation={costAutomation}\n          setCostAutomation={setCostAutomation}\n        />\n        <TopTemplates\n          redirectToJobExplorer={redirectToJobExplorer}\n          data={api.data}\n          setDataRunTime={setDataRunTime}\n          setUnfilteredData={api.data}\n          setEnabled={setEnabled}\n          sortBy={queryParams.sort_by}\n        />\n      </Main>\n    </WrapperRight>\n  );\n\n  if (preflight?.error?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader style={{ flex: '0' }}>\n        <PageHeaderTitle title={'Automation Calculator'} />\n        <FilterableToolbar\n          categories={options.data}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      {preflight.error && (\n        <Main>\n          <EmptyState preflightError={preflight.error} />\n        </Main>\n      )}\n      {preflight.isSuccess && (\n        <React.Fragment>\n          <Wrapper className=\"automation-wrapper\">\n            {renderLeft()}\n            {renderRight()}\n          </Wrapper>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nAutomationCalculator.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default AutomationCalculator;\n","import React from 'react';\n\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst AutomationFormula = () => (\n  <Card style={{ height: '100%' }}>\n    <CardTitle>Automation formula</CardTitle>\n    <CardBody>\n      <p>\n        <b>Manual cost for template x</b> =\n        <em>\n          (time for a manual run on one host in hours * (sum of all hosts across\n          all job runs) ) * cost per hour\n        </em>\n      </p>\n      <p>\n        <b>Automation cost for template x</b> =\n        <em>\n          cost of automation per hour * sum of total elapsed hours for a\n          template\n        </em>\n      </p>\n      <p>\n        <b>Savings</b> =\n        <em>Sum of (manual cost - automation cost) across all templates</em>\n      </p>\n    </CardBody>\n  </Card>\n);\n\nexport default AutomationFormula;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle, Title } from '@patternfly/react-core';\n\nconst floatToStringWithCommas = (total) =>\n  total\n    .toFixed(2)\n    .toString()\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\nconst TotalSavings = ({ totalSavings = 0 }) => (\n  <Card style={{ borderTop: '3px solid #2B9AF3' }}>\n    <CardTitle style={{ paddingBottom: '0' }}>Total savings</CardTitle>\n    <CardBody>\n      <Title\n        headingLevel=\"h3\"\n        size=\"4xl\"\n        style={{ color: 'var(--pf-global--success-color--200)' }}\n      >\n        {floatToStringWithCommas(totalSavings)}\n      </Title>\n    </CardBody>\n  </Card>\n);\n\nTotalSavings.propTypes = {\n  totalSavings: PropTypes.number,\n};\n\nexport default TotalSavings;\n","import styled from 'styled-components';\nimport { CardTitle } from '@patternfly/react-core';\n\nexport const BorderedCardTitle = styled(CardTitle)`\n  border-bottom: 1px solid #d7d7d7;\n  margin-bottom: 10px;\n`;\n","import * as d3 from 'd3';\n\nclass Tooltip {\n  constructor(opts) {\n    this.svg = opts.svg;\n    this.colors = opts.colors;\n    this.draw();\n  }\n\n  draw() {\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 145;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -41)\n      .attr('rx', 2)\n      .attr('height', 110)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.circleSuccess = this.toolTipBase\n      .append('circle')\n      .attr('cx', 26)\n      .attr('cy', 0)\n      .attr('r', 8)\n      .attr('stroke', 'white')\n      .attr('fill', 'white');\n    this.circleFail = this.toolTipBase\n      .append('circle')\n      .attr('cx', 26)\n      .attr('cy', 26)\n      .attr('r', 8)\n      .attr('stroke', 'white')\n      .attr('fill', 'white');\n    this.successText = this.toolTipBase\n      .append('text')\n      .attr('x', 43)\n      .attr('y', 4)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Successful');\n    this.failText = this.toolTipBase\n      .append('text')\n      .attr('x', 43)\n      .attr('y', 28)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Failed');\n    this.successIcon = this.toolTipBase\n      .append('text')\n      .attr('class', 'fas fa-sm')\n      .attr('fill', this.colors(1))\n      .attr('x', 19)\n      .attr('y', 5)\n      .text('\\uf058');\n    this.failedIcon = this.toolTipBase\n      .append('text')\n      .attr('class', 'fas fa-sm')\n      .attr('fill', this.colors(0))\n      .attr('x', 20)\n      .attr('y', 31)\n      .text('\\uf06a');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 137)\n      .attr('y', -21)\n      .attr('font-size', 12)\n      .attr('text-anchor', 'end')\n      .text('No jobs');\n    this.successful = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 122)\n      .attr('y', 4)\n      .text('0');\n    this.failed = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 122)\n      .attr('y', 28)\n      .text('0');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('stroke', 'white')\n      .attr('x', 20)\n      .attr('y', -21)\n      .attr('font-size', 12)\n      .text('Never');\n    this.clickMore = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 20)\n      .attr('y', 55)\n      .attr('font-size', 12)\n      .text('Click for details');\n  }\n\n  handleMouseOver = (d) => {\n    let success = 0;\n    let fail = 0;\n    let total = 0;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    const formatTooltipDate = d3.timeFormat('%m/%d');\n    if (!d) {\n      return;\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n    if (d) {\n      success = d.RAN || 0;\n      fail = d.FAIL || 0;\n      total = d.TOTAL || 0;\n      this.date.text(formatTooltipDate(d.DATE || null));\n    }\n\n    if (d && d.data) {\n      success = d.data.RAN || 0;\n      fail = d.data.FAIL || 0;\n      total = d.data.TOTAL || 0;\n      this.date.text(formatTooltipDate(d.data.DATE || null));\n    }\n\n    this.jobs.text('' + total + ' jobs');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n    this.failed.text('' + fail);\n    this.successful.text('' + success);\n    this.successTextWidth = this.successful.node().getComputedTextLength();\n    this.failTextWidth = this.failed.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 40;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.circleSuccess.attr('cx', -adjustedWidth);\n      this.circleFail.attr('cx', -adjustedWidth);\n      this.failedIcon.attr('x', -adjustedWidth - 7);\n      this.successIcon.attr('x', -adjustedWidth - 7);\n      this.successText.attr('x', -adjustedWidth + 17);\n      this.failText.attr('x', -adjustedWidth + 17);\n      this.successful.attr('x', -this.successTextWidth - 20 - 12);\n      this.failed.attr('x', -this.failTextWidth - 20 - 12);\n      this.date.attr('x', -adjustedWidth - 5);\n      this.jobs.attr('x', -this.jobsWidth / 2 - 7);\n      this.clickMore.attr('x', -adjustedWidth);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.circleSuccess.attr('cx', 26);\n      this.circleFail.attr('cx', 26);\n      this.failedIcon.attr('x', 19);\n      this.successIcon.attr('x', 19);\n      this.successText.attr('x', 43);\n      this.failText.attr('x', 43);\n      this.successful.attr('x', adjustedWidth - this.successTextWidth);\n      this.failed.attr('x', adjustedWidth - this.failTextWidth);\n      this.date.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth);\n      this.clickMore.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nexport default Tooltip;\n","import React, { Component } from 'react';\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { stringify } from 'query-string';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\n\nclass BarChart extends Component {\n  constructor(props) {\n    super(props);\n    this.draw = this.draw.bind(this);\n    this.init = this.init.bind(this);\n    this.resize = this.resize.bind(this);\n    this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n    this.state = {\n      formattedData: [],\n      timeout: null,\n    };\n  }\n\n  redirectToJobExplorer({ data: { DATE: date } }) {\n    const { jobExplorer } = Paths;\n    const formattedDate = formatDate(date);\n    const { orgId, templateId } = this.props;\n    const initialQueryParams = {\n      start_date: formattedDate,\n      end_date: formattedDate,\n      quick_date_range: 'custom',\n      status: ['failed', 'successful'],\n      template_id: templateId,\n      org_id: orgId,\n    };\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    this.props.history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  }\n\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  init() {\n    this.draw();\n  }\n\n  // Methods\n  draw() {\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const parseTime = d3.timeParse('%Y-%m-%d');\n    let { data: unformattedData } = this.props;\n    const data = unformattedData.reduce(\n      (formatted, { created_date, successful_count, failed_count }) => {\n        let DATE = parseTime(created_date) || new Date();\n        let RAN = +successful_count || 0;\n        let FAIL = +failed_count || 0;\n        let TOTAL = +successful_count + failed_count || 0;\n        return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n      },\n      []\n    );\n    const width = this.props.getWidth();\n    const height = this.props.getHeight();\n    const x = d3.scaleBand().rangeRound([0, width]).padding(0.35); // percentage\n    const y = d3.scaleLinear().range([height, 0]);\n\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n    //[fail, success]\n    let colors = d3.scaleOrdinal(['#6EC664', '#A30000']);\n\n    const barTooltip = new Tooltip({\n      svg: '#' + this.props.id,\n      colors,\n    });\n    const status = ['FAIL', 'RAN'];\n\n    // stack our data\n    const stack = d3\n      .stack()\n      .keys(status)\n      .order(d3.stackOrderNone)\n      .offset(d3.stackOffsetNone);\n\n    const layers = stack(data);\n    // Scale the range of the data\n    x.domain(layers[0].map((d) => d.data.DATE));\n    y.domain([0, d3.max(layers[layers.length - 1], (d) => d[1] * 1.15) || 8]);\n    // Add the Y Axis\n    svg\n      .append('g')\n      .attr('class', 'y-axis')\n      .call(d3.axisLeft(y).tickSize(-width, 0, 0))\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.y-axis .tick text').attr('x', -5);\n    // text label for the y axis\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Jobs across all clusters');\n    // Add the X Axis\n    let ticks;\n    const maxTicks = Math.round(data.length / (data.length / 2));\n    ticks = data.map((d) => d.DATE);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n        .filter((item) => item);\n    }\n\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(\n        d3.axisBottom(x).tickValues(ticks).tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n      )\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n    // text label for the x axis\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n\n    const layer = svg\n      .selectAll('layer')\n      .data(layers)\n      .enter()\n      .append('g')\n      .attr('class', 'layer')\n      .style('fill', (_d, i) => colors(i));\n    layer\n      .selectAll('rect')\n      .data((d) => d)\n      .enter()\n      .append('rect')\n      .attr('x', (d) => x(d.data.DATE))\n      .attr('y', (d) => y(d[0]))\n      .attr('height', 0)\n      .attr('width', x.bandwidth() - 1)\n      .transition()\n      .duration(550)\n      .ease(d3.easeCubic)\n      .attr('y', (d) => y(d[1]))\n      .attr('height', (d) => y(d[0]) - y(d[1]));\n    layer\n      .selectAll('rect')\n      .on('mouseover', barTooltip.handleMouseOver)\n      .on('mousemove', barTooltip.handleMouseOver)\n      .on('mouseout', barTooltip.handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n  }\n\n  componentDidMount() {\n    this.init();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      this.init();\n    }\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nBarChart.propTypes = {\n  id: PropTypes.string,\n  templateId: PropTypes.array,\n  orgId: PropTypes.array,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  history: PropTypes.object,\n};\n\nexport default initializeChart(BarChart);\n","import React, { Component } from 'react';\nimport initializeChart from './BaseChart';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\nimport { stringify } from 'query-string';\nimport * as d3 from 'd3';\n\nclass LineChart extends Component {\n  constructor(props) {\n    super(props);\n    this.init = this.init.bind(this);\n    this.draw = this.draw.bind(this);\n    this.resize = this.resize.bind(this);\n    this.updateCluster = this.updateCluster.bind(this);\n    this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n    this.state = {\n      formattedData: [],\n      timeout: null,\n    };\n  }\n\n  redirectToJobExplorer({ DATE: date }) {\n    const { jobExplorer } = Paths;\n    const formattedDate = formatDate(date);\n    const { clusterId, templateId, orgId } = this.props;\n    const initialQueryParams = {\n      start_date: formattedDate,\n      end_date: formattedDate,\n      quick_date_range: 'custom',\n      status: ['failed', 'successful'],\n      cluster_id: clusterId,\n      org_id: orgId,\n      template_id: templateId,\n    };\n\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    this.props.history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  }\n\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  updateCluster() {\n    this.init();\n  }\n  init() {\n    this.draw();\n  }\n  // Methods\n  draw() {\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const width = this.props.getWidth();\n    const height = this.props.getHeight();\n\n    function transition(path) {\n      path.transition().duration(1000).attrTween('stroke-dasharray', tweenDash);\n    }\n\n    function tweenDash() {\n      const l = this.getTotalLength();\n      const i = d3.interpolateString('0,' + l, l + ',' + l);\n      return function (t) {\n        return i(t);\n      };\n    }\n\n    const x = d3.scaleTime().rangeRound([0, width]);\n    const y = d3.scaleLinear().range([height, 0]);\n\n    //[success, fail, total]\n    let colors = d3.scaleOrdinal(['#6EC664', '#A30000', '#06C']);\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n      .attr('z', 100)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n    // Tooltip\n    const tooltip = new Tooltip({\n      svg: '#' + this.props.id,\n      colors,\n    });\n    const { data: unformattedData } = this.props;\n    const parseTime = d3.timeParse('%Y-%m-%d');\n\n    const data = unformattedData.reduce(\n      (formatted, { created_date, successful_count, failed_count }) => {\n        let DATE = parseTime(created_date) || new Date();\n        let RAN = +successful_count || 0;\n        let FAIL = +failed_count || 0;\n        let TOTAL = +successful_count + failed_count || 0;\n        return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n      },\n      []\n    );\n    // Scale the range of the data\n    x.domain(\n      d3.extent(data, function (d) {\n        return d.DATE;\n      })\n    );\n    y.domain([\n      0,\n      d3.max(data, function (d) {\n        return d.TOTAL * 1.15 || 8;\n      }),\n    ]);\n\n    const successLine = d3\n      .line()\n      .curve(d3.curveMonotoneX)\n      .x(function (d) {\n        return x(d.DATE);\n      })\n      .y(function (d) {\n        return y(d.RAN);\n      });\n\n    const failLine = d3\n      .line()\n      .defined((d) => !isNaN(d.FAIL))\n      .curve(d3.curveMonotoneX)\n      .x(function (d) {\n        return x(d.DATE);\n      })\n      .y(function (d) {\n        return y(d.FAIL);\n      });\n    // Add the Y Axis\n    svg\n      .append('g')\n      .attr('class', 'y-axis')\n      .call(d3.axisLeft(y).ticks(10).tickSize(-width))\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.y-axis .tick text').attr('x', -5);\n\n    // text label for the y axis\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Job runs');\n    // Add the X Axis\n    let ticks;\n    const maxTicks = Math.round(data.length / (data.length / 2));\n    ticks = data.map((d) => d.DATE);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n        .filter((item) => item);\n    }\n\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(\n        d3\n          .axisBottom(x)\n          .tickValues(ticks)\n          .tickSize(-height)\n          .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n      ) // \"Jan-01\"\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n    // text label for the x axis\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n    const vertical = svg\n      .append('path')\n      .attr('class', 'mouse-line')\n      .style('stroke', 'black')\n      .style('stroke-width', '3px')\n      .style('stroke-dasharray', '3, 3')\n      .style('opacity', '0');\n\n    const handleMouseOver = function (d) {\n      tooltip.handleMouseOver(d);\n      // show vertical line\n      vertical.transition().style('opacity', '1');\n    };\n\n    const handleMouseMove = function () {\n      let intersectX = this.cx.baseVal.value;\n      vertical.attr('d', function () {\n        let d = 'M' + intersectX + ',' + height;\n        d += ' ' + intersectX + ',' + 0;\n        return d;\n      });\n    };\n\n    const handleMouseOut = function () {\n      // hide tooltip\n      tooltip.handleMouseOut();\n      // hide vertical line\n      vertical.transition().style('opacity', 0);\n    };\n\n    // Add the successLine path.\n    svg\n      .append('path')\n      .data([data])\n      .attr('class', 'line')\n      .style('fill', 'none')\n      .style('stroke', () => colors(1))\n      .attr('stroke-width', 2)\n      .attr('d', successLine)\n      .call(transition);\n\n    // Add the failLine path.\n    svg\n      .append('path')\n      .data([data])\n      .attr('class', 'line')\n      .style('fill', 'none')\n      .style('stroke', () => colors(0))\n      .attr('stroke-width', 2)\n      .attr('d', failLine)\n      .call(transition);\n    svg\n      .selectAll('dot')\n      .data(data)\n      .enter()\n      .append('circle')\n      .attr('r', 3)\n      .style('stroke', () => colors(1))\n      .style('fill', () => colors(1))\n      .attr('cx', function (d) {\n        return x(d.DATE);\n      })\n      .attr('cy', function (d) {\n        return y(d.RAN);\n      })\n\n      .on('mouseover', handleMouseOver)\n      .on('mousemove', handleMouseMove)\n      .on('mouseout', handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n    // create our failLine circles\n    svg\n      .selectAll('dot')\n      .data(data)\n      .enter()\n      .append('circle')\n      .attr('r', 3)\n      .style('stroke', () => colors(0))\n      .style('fill', () => colors(0))\n      .attr('cx', function (d) {\n        return x(d.DATE);\n      })\n      .attr('cy', function (d) {\n        return y(d.FAIL);\n      })\n      .on('mouseover', handleMouseOver)\n      .on('mousemove', handleMouseMove)\n      .on('mouseout', handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n  }\n\n  componentDidMount() {\n    this.updateCluster();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      this.updateCluster();\n    }\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nLineChart.propTypes = {\n  id: PropTypes.string,\n  clusterId: PropTypes.array,\n  templateId: PropTypes.array,\n  orgId: PropTypes.array,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  history: PropTypes.object,\n};\n\nexport default initializeChart(LineChart);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { trimStr } from '../Utilities/helpers';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n  DataList,\n  DataListItem as PFDataListItem,\n  DataListCell as PFDataListCell,\n} from '@patternfly/react-core';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst ModulesList = ({ modules, isLoading }) => (\n  <DataList\n    aria-label=\"Top Modules\"\n    style={{\n      maxHeight: '400px',\n      overflow: 'auto',\n      height: '400px',\n      background: 'white',\n    }}\n  >\n    <DataListItem aria-labelledby=\"top-modules-header\">\n      <DataListCell>\n        <h3>Top modules</h3>\n      </DataListCell>\n      <DataCellEnd>\n        <h3>Usage</h3>\n      </DataCellEnd>\n    </DataListItem>\n    {isLoading && (\n      <PFDataListItem\n        aria-labelledby=\"modules-loading\"\n        key={isLoading}\n        style={{ border: 'none' }}\n      >\n        <PFDataListCell>\n          <LoadingState />\n        </PFDataListCell>\n      </PFDataListItem>\n    )}\n    {!isLoading && modules.length <= 0 && (\n      <PFDataListItem\n        aria-labelledby=\"modules-no-data\"\n        key={isLoading}\n        style={{ border: 'none' }}\n      >\n        <PFDataListCell>\n          <NoData />\n        </PFDataListCell>\n      </PFDataListItem>\n    )}\n    {!isLoading &&\n      modules\n        .filter((module) => module.name !== null)\n        .map(({ name, host_task_count }, index) => (\n          <DataListItem aria-labelledby=\"top-modules-detail\" key={index}>\n            <DataListCell>\n              <span>{trimStr(name)}</span>\n            </DataListCell>\n            <DataCellEnd>{host_task_count}</DataCellEnd>\n          </DataListItem>\n        ))}\n  </DataList>\n);\n\nModulesList.propTypes = {\n  modules: PropTypes.array,\n  isLoading: PropTypes.bool,\n};\n\nexport default ModulesList;\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport { Paths } from '../paths';\nimport { stringify } from 'query-string';\nimport useApi from '../Utilities/useApi';\nimport { formatDateTime, formatSeconds } from '../Utilities/helpers';\nimport { readJobExplorer } from '../Api';\n\nimport {\n  Button,\n  DataList,\n  DataListItem as PFDataListItem,\n  DataListCell as PFDataListCell,\n  Label,\n  Modal,\n} from '@patternfly/react-core';\n\nimport { CircleIcon } from '@patternfly/react-icons';\n\nconst success = (\n  <CircleIcon\n    size=\"sm\"\n    key=\"5\"\n    style={{ color: 'rgb(110, 198, 100)', marginRight: '5px' }}\n  />\n);\nconst fail = (\n  <>\n    <CircleIcon\n      size=\"sm\"\n      key=\"5\"\n      style={{ color: 'rgb(163, 0, 0)', marginRight: '5px' }}\n    />\n    <span id=\"fail-icon\">!</span>\n  </>\n);\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\nconst PFDataListItemNoBorder = styled(PFDataListItem)`\n  border-bottom: none;\n  margin-bottom: -20px;\n`;\nconst DataListItemCompact = styled(DataListItem)`\n  padding: 0;\n  > .pf-c-data-list__cell {\n    font-weight: 600;\n  }\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst DataListCellCompact = styled(DataListCell)`\n  padding: 7px;\n`;\n\nconst DataListFocus = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-gap: 10px;\n  padding: var(--pf-global--spacer--lg);\n  background: #ebebeb;\n  border: 1px solid #ccc;\n  border-top: none;\n  margin-bottom: 20px;\n`;\nconst DataCellEndCompact = styled(DataCellEnd)`\n  padding: 7px !important;\n`;\n\nconst formatTopFailedTask = (data) => {\n  if (!data) {\n    return;\n  }\n\n  if (data && data[0]) {\n    const percentage = Math.ceil(\n      (data[0].failed_count / data[0].total_failed_count) * 100\n    );\n    return `${data[0].task_name} ${percentage}%`;\n  }\n\n  return `Unavailable`;\n};\n\nconst formatTopFailedStep = (data) => {\n  if (!data) {\n    return;\n  }\n\n  if (data && data[0]) {\n    const percentage = Math.ceil(\n      (data[0].failed_count / data[0].total_failed_count) * 100\n    );\n    return `${data[0].template_name} ${percentage}%`;\n  }\n\n  return `Unavailable`;\n};\n\nconst formatSuccessRate = (successCount, totalCount) =>\n  Math.ceil((successCount / totalCount) * 100) + '%';\nconst formatAvgRun = (elapsed, totalCount) =>\n  new Date(Math.ceil(elapsed / totalCount) * 1000).toISOString().substr(11, 8);\nconst formatTotalTime = (elapsed) =>\n  new Date(elapsed * 1000).toISOString().substr(11, 8);\n\nconst ModalContents = ({\n  selectedId,\n  isOpen,\n  handleModal,\n  qp,\n  jobType,\n  handleCloseBtn,\n}) => {\n  const [\n    {\n      data: { items: relatedJobs = [] },\n    },\n    setRelatedJobs,\n  ] = useApi({ items: [] });\n  const [\n    {\n      data: {\n        items: [stats = 0],\n      },\n    },\n    setStats,\n  ] = useApi({ items: [] });\n\n  let history = useHistory();\n\n  const redirectToJobExplorer = () => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      template_id: [selectedId],\n      status: [\n        'successful',\n        'failed',\n        'new',\n        'pending',\n        'waiting',\n        'error',\n        'canceled',\n        'running',\n      ],\n      job_type: [jobType],\n      quick_date_range: 'last_30_days',\n    };\n\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const relatedTemplateJobsParams = {\n    ...qp,\n    template_id: [selectedId],\n    attributes: [\n      'id',\n      'status',\n      'job_type',\n      'started',\n      'finished',\n      'elapsed',\n      'created',\n      'cluster_name',\n      'org_name',\n    ],\n    group_by_time: false,\n    limit: 5,\n    sort_by: 'created:desc',\n    quick_date_range: qp.quick_date_range\n      ? qp.quick_date_range\n      : 'last_30_days',\n    job_type: [jobType],\n  };\n\n  const agreggateTemplateParams = {\n    group_by: 'template',\n    template_id: [selectedId],\n    attributes: [\n      'elapsed',\n      'job_type',\n      'successful_count',\n      'failed_count',\n      'total_count',\n      jobType === 'job' ? 'most_failed_tasks' : 'most_failed_steps',\n    ],\n    status: qp.status,\n    quick_date_range: qp.quick_date_range\n      ? qp.quick_date_range\n      : 'last_30_days',\n    job_type: [jobType],\n  };\n\n  useEffect(() => {\n    if (selectedId) {\n      setStats(readJobExplorer({ params: agreggateTemplateParams }));\n      setRelatedJobs(readJobExplorer({ params: relatedTemplateJobsParams }));\n    }\n  }, [selectedId]);\n\n  return (\n    <Modal\n      aria-label=\"modal\"\n      width={'80%'}\n      title={stats.name ? stats.name : 'no-template-name'}\n      isOpen={isOpen}\n      onClose={() => {\n        handleModal(false);\n        handleCloseBtn(null);\n      }}\n      actions={[\n        <Button\n          key=\"cancel\"\n          variant=\"secondary\"\n          onClick={() => {\n            handleModal(false);\n            handleCloseBtn(null);\n          }}\n        >\n          Close\n        </Button>,\n      ]}\n    >\n      <DataList aria-label=\"Selected Template Details\">\n        <PFDataListItemNoBorder aria-labelledby=\"Selected Template Statistics\">\n          <DataListFocus>\n            <div aria-labelledby=\"job runs\">\n              <b style={{ marginRight: '10px' }}>Number of runs</b>\n              {stats.total_count ? stats.total_count : 'Unavailable'}\n            </div>\n            <div aria-labelledby=\"total time\">\n              <b style={{ marginRight: '10px' }}>Total time</b>\n              {stats.elapsed ? formatTotalTime(stats.elapsed) : 'Unavailable'}\n            </div>\n            <div aria-labelledby=\"Avg Time\">\n              <b style={{ marginRight: '10px' }}>Avg time</b>\n              {stats.elapsed\n                ? formatAvgRun(stats.elapsed, stats.total_count)\n                : 'Unavailable'}\n            </div>\n            <div aria-labelledby=\"success rate\">\n              <b style={{ marginRight: '10px' }}>Success rate</b>\n              {!isNaN(stats.successful_count)\n                ? formatSuccessRate(stats.successful_count, stats.total_count)\n                : 'Unavailable'}\n            </div>\n            {stats.most_failed_tasks && (\n              <div aria-labelledby=\"most failed task\">\n                <b style={{ marginRight: '10px' }}>Most failed task</b>\n                {stats.most_failed_tasks\n                  ? formatTopFailedTask(stats.most_failed_tasks)\n                  : 'Unavailable'}\n              </div>\n            )}\n            {stats.most_failed_steps && (\n              <div aria-labelledby=\"most failed step\">\n                <b style={{ marginRight: '10px' }}>Most failed step</b>\n                {stats.most_failed_steps\n                  ? formatTopFailedStep(stats.most_failed_steps)\n                  : 'Unavailable'}\n              </div>\n            )}\n          </DataListFocus>\n        </PFDataListItemNoBorder>\n        <DataListItemCompact>\n          <DataListCellCompact key=\"last5jobs\">\n            <Label variant=\"outline\">Last 5 jobs</Label>\n          </DataListCellCompact>\n          ,\n          <DataCellEndCompact>\n            <Button\n              component=\"a\"\n              onClick={redirectToJobExplorer}\n              variant=\"link\"\n            >\n              View all jobs\n            </Button>\n          </DataCellEndCompact>\n        </DataListItemCompact>\n        <DataListItemCompact aria-labelledby=\"datalist header\">\n          <PFDataListCell key=\"job heading\">Id/Name</PFDataListCell>\n          <PFDataListCell key=\"cluster heading\">Cluster</PFDataListCell>\n          <PFDataListCell key=\"start time heading\">Start Time</PFDataListCell>\n          <PFDataListCell key=\"total time heading\">Total Time</PFDataListCell>\n        </DataListItemCompact>\n        {relatedJobs.length <= 0 && <LoadingState />}\n        {relatedJobs.length > 0 &&\n          relatedJobs.map((job, index) => (\n            <DataListItem\n              style={{ padding: '10px 0' }}\n              key={`job-details-${index}`}\n              aria-labelledby=\"job details\"\n            >\n              <PFDataListCell key=\"job name\">\n                {job.status === 'successful' ? success : fail} {job.id.id} -{' '}\n                {job.id.template_name}\n              </PFDataListCell>\n              <PFDataListCell key=\"job cluster\">\n                {job.cluster_name}\n              </PFDataListCell>\n              <PFDataListCell key=\"start time\">\n                {formatDateTime(job.started)}\n              </PFDataListCell>\n              <PFDataListCell key=\"total time\">\n                {formatSeconds(job.elapsed)}\n              </PFDataListCell>\n            </DataListItem>\n          ))}\n      </DataList>\n    </Modal>\n  );\n};\n\nModalContents.propTypes = {\n  selectedId: PropTypes.number,\n  qp: PropTypes.object,\n  jobType: PropTypes.string,\n  handleCloseBtn: PropTypes.func,\n  isOpen: PropTypes.bool,\n  handleModal: PropTypes.func,\n};\n\nexport default ModalContents;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n  DataList,\n  DataListItem as PFDataListItem,\n  DataListCell as PFDataListCell,\n} from '@patternfly/react-core';\n\nimport ModalContents from './ModalContents';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst TemplatesList = ({ templates, isLoading, qp, title, jobType }) => {\n  const [selectedId, setSelectedId] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const displayJobType = (type) => {\n    return type === 'job' ? 'templates' : 'workflows';\n  };\n\n  return (\n    <>\n      <DataList\n        aria-label={`Top ${displayJobType(jobType)}`}\n        style={{\n          maxHeight: '400px',\n          overflow: 'auto',\n          height: '400px',\n          background: 'white',\n        }}\n      >\n        <DataListItem aria-labelledby={`top-${displayJobType(jobType)}-header`}>\n          <DataListCell>\n            <h3>{title}</h3>\n          </DataListCell>\n          <DataCellEnd>\n            <h3>Usage</h3>\n          </DataCellEnd>\n        </DataListItem>\n        {isLoading && (\n          <PFDataListItem\n            aria-labelledby={`${displayJobType(jobType)}-loading`}\n            key={isLoading}\n            style={{ border: 'none' }}\n          >\n            <PFDataListCell>\n              <LoadingState />\n            </PFDataListCell>\n          </PFDataListItem>\n        )}\n        {!isLoading && templates.length <= 0 && (\n          <PFDataListItem\n            aria-labelledby={`${displayJobType(jobType)}-no-data`}\n            key={isLoading}\n            style={{ border: 'none' }}\n          >\n            <PFDataListCell>\n              <NoData />\n            </PFDataListCell>\n          </PFDataListItem>\n        )}\n        {!isLoading &&\n          templates.map(({ name, total_count, id }, index) => (\n            <DataListItem\n              aria-labelledby={`top-${displayJobType(jobType)}-detail`}\n              key={index}\n            >\n              <DataListCell>\n                <a\n                  onClick={() => {\n                    setIsModalOpen(true);\n                    setSelectedId(id);\n                  }}\n                >\n                  {name}\n                </a>\n              </DataListCell>\n              <DataCellEnd>{total_count}</DataCellEnd>\n            </DataListItem>\n          ))}\n      </DataList>\n      <ModalContents\n        isOpen={isModalOpen}\n        handleModal={setIsModalOpen}\n        selectedId={selectedId}\n        qp={qp}\n        jobType={jobType}\n        handleCloseBtn={setSelectedId}\n      />\n    </>\n  );\n};\n\nTemplatesList.propTypes = {\n  templates: PropTypes.array,\n  isLoading: PropTypes.bool,\n  queryParams: PropTypes.object,\n  title: PropTypes.string,\n  qp: PropTypes.object,\n  jobType: PropTypes.string,\n};\n\nexport default TemplatesList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport {\n  preflightRequest,\n  readClustersOptions,\n  readJobExplorer,\n  readEventExplorer,\n} from '../../Api';\n\nimport { jobExplorer } from '../../Utilities/constants';\nimport useApi from '../../Utilities/useApi';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle as PFCardTitle,\n} from '@patternfly/react-core';\n\nimport BarChart from '../../Charts/BarChart';\nimport LineChart from '../../Charts/LineChart';\nimport ModulesList from '../../Components/ModulesList';\nimport TemplatesList from '../../Components/TemplatesList';\nimport FilterableToolbar from '../../Components/Toolbar';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport { clusters } from '../../Utilities/constants';\n\nconst initialTopTemplateParams = {\n  group_by: 'template',\n  limit: 10,\n  job_type: ['job'],\n  group_by_time: false,\n  status: ['successful', 'failed'],\n};\n\nconst initialTopWorkflowParams = {\n  group_by: 'template',\n  limit: 10,\n  job_type: ['workflowjob'],\n  group_by_time: false,\n  status: ['successful', 'failed'],\n};\n\nconst initialModuleParams = {\n  group_by: 'module',\n  sort_by: 'host_task_count:desc',\n  limit: 10,\n};\n\nconst Clusters = () => {\n  const [preflightError, setPreFlightError] = useState(null);\n\n  const { queryParams, setFromToolbar } = useQueryParams({\n    ...clusters.defaultParams,\n  });\n\n  const [\n    {\n      isLoading,\n      isSuccess,\n      error,\n      data: { items: chartData = [] },\n    },\n    setData,\n  ] = useApi({ items: [] });\n\n  const [\n    {\n      data: { items: templates = [] },\n    },\n    setTemplates,\n  ] = useApi({ items: [] });\n  const [\n    {\n      data: { items: workflows = [] },\n    },\n    setWorkflows,\n  ] = useApi({ items: [] });\n  const [\n    {\n      data: { items: modules = [] },\n    },\n    setModules,\n  ] = useApi({ items: [] });\n  const [{ data: options = [] }, setOptions] = useApi({});\n\n  const initialOptionsParams = {\n    attributes: jobExplorer.attributes,\n  };\n\n  const { queryParams: optionsQueryParams } =\n    useQueryParams(initialOptionsParams);\n\n  const {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n  } = queryParams;\n\n  const topTemplatesParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialTopTemplateParams,\n  };\n\n  const topWorkflowParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialTopWorkflowParams,\n  };\n\n  const topModuleParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialModuleParams,\n  };\n\n  useEffect(() => {\n    async function initializeWithPreflight() {\n      await preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n      setOptions(readClustersOptions({ params: optionsQueryParams }));\n    }\n\n    initializeWithPreflight();\n  }, []);\n\n  // Get and update the data\n  useEffect(() => {\n    const fetchEndpoints = () => {\n      setData(readJobExplorer({ params: queryParams }));\n      setTemplates(readJobExplorer({ params: topTemplatesParams }));\n      setWorkflows(readJobExplorer({ params: topWorkflowParams }));\n      setModules(readEventExplorer({ params: topModuleParams }));\n    };\n    fetchEndpoints();\n  }, [queryParams]);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Clusters'} />\n        <FilterableToolbar\n          categories={options}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      {(preflightError || error) && (\n        <Main>\n          {preflightError ? (\n            <EmptyState {...preflightError} />\n          ) : (\n            <ApiErrorState message={error.error} />\n          )}\n        </Main>\n      )}\n      {!preflightError && !error && (\n        <Main>\n          <Card>\n            <PFCardTitle>\n              <h2>Job status</h2>\n            </PFCardTitle>\n            <CardBody>\n              {isLoading && <LoadingState />}\n              {queryParams.cluster_id.length <= 0 && isSuccess && (\n                <BarChart\n                  margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                  id=\"d3-bar-chart-root\"\n                  data={chartData}\n                  templateId={queryParams.template_id}\n                  orgId={queryParams.org_id}\n                />\n              )}\n              {queryParams.cluster_id.length > 0 && isSuccess && (\n                <LineChart\n                  margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                  id=\"d3-line-chart-root\"\n                  data={chartData}\n                  clusterId={queryParams.cluster_id}\n                  templateId={queryParams.template_id}\n                  orgId={queryParams.org_id}\n                />\n              )}\n            </CardBody>\n          </Card>\n          <div\n            className=\"dataCard\"\n            style={{ display: 'flex', marginTop: '20px' }}\n          >\n            <TemplatesList\n              qp={queryParams}\n              templates={workflows}\n              isLoading={isLoading}\n              title={'Top workflows'}\n              jobType={'workflowjob'}\n            />\n            <TemplatesList\n              qp={queryParams}\n              templates={templates}\n              isLoading={isLoading}\n              title={'Top templates'}\n              jobType={'job'}\n            />\n            <ModulesList modules={modules} isLoading={isLoading} />\n          </div>\n        </Main>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Clusters;\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst NoResults = () => {\n  return (\n    <EmptyState variant={EmptyStateVariant.full}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title size=\"lg\" headingLevel=\"h4\">\n        No results found\n      </Title>\n      <EmptyStateBody>\n        No results match the filter criteria. Remove all filters or clear all\n        filters to show results.\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n\nexport default NoResults;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ClockIcon,\n  SyncAltIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\n\nconst JobStatus = ({ status }) => {\n  const capitalized = (str) => str.charAt(0).toUpperCase() + str.slice(1);\n\n  const getColor = () => {\n    switch (status) {\n      case 'successful':\n        return 'green';\n      case 'failed':\n      case 'error':\n        return 'red';\n      case 'running':\n      case 'pending':\n        return 'blue';\n      case 'canceled':\n        return 'orange';\n      // case new, waiting\n      default:\n        return 'grey';\n    }\n  };\n\n  const getIcon = () => {\n    switch (status) {\n      case 'successful':\n        return <CheckCircleIcon />;\n      case 'failed':\n      case 'error':\n        return <ExclamationCircleIcon />;\n      case 'running':\n        return <SyncAltIcon />;\n      case 'canceled':\n        return <ExclamationTriangleIcon />;\n      // case new, waiting, pending\n      default:\n        return <ClockIcon />;\n    }\n  };\n\n  return (\n    <Label variant=\"outline\" color={getColor()} icon={getIcon()}>\n      {capitalized(status)}\n    </Label>\n  );\n};\n\nJobStatus.propTypes = {\n  status: PropTypes.oneOf([\n    'successful',\n    'failed',\n    'error',\n    'running',\n    'new',\n    'waiting',\n    'pending',\n    'canceled',\n  ]),\n};\n\nexport default JobStatus;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  DataListCell as PFDataListCell,\n  DataListContent,\n  DataList,\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells as PFDataListItemCells,\n  DataListToggle as PFDataListToggle,\n  Tooltip,\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkIcon } from '@patternfly/react-icons';\n\nimport LoadingState from '../Components/LoadingState';\nimport { formatDateTime, formatJobType } from '../Utilities/helpers';\nimport JobStatus from './JobStatus';\n\nconst headerLabels = ['Id/Name', 'Status', 'Cluster', 'Organization', 'Type'];\n\nconst ExternalLinkIcon = styled(PFExternalLinkIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n`;\n\nconst DataListCell = styled(PFDataListCell)`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  text-align: center;\n`;\n\nconst DataListCellHeader = styled(DataListCell)`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  font-weight: bold;\n`;\n\nconst DataListItemCells = styled(PFDataListItemCells)`\n  align-items: center;\n`;\n\nconst DataListToggle = styled(PFDataListToggle)`\n  align-items: center;\n`;\n\nconst mobileBreakpoint = 765;\n\nconst buildHeader = (labels) => (\n  <DataListItem>\n    <DataListItemRow style={{ paddingLeft: '80px' }}>\n      <DataListItemCells\n        dataListCells={labels.map((label) => (\n          <DataListCellHeader key={label}>\n            {label}\n            {label === 'Id/Name' && <ExternalLinkIcon />}\n          </DataListCellHeader>\n        ))}\n      />\n    </DataListItemRow>\n  </DataListItem>\n);\n\nconst buildListRow = (items, ariaLabel, ariaLabelledBy, windowWidth) => {\n  const [isExpanded, setIsExpanded] = useState([]);\n\n  return (\n    <>\n      {items.map((item, count) => {\n        const toggle = (id) => {\n          const expanded = isExpanded;\n          const idx = expanded.indexOf(id);\n          const newExpanded =\n            idx >= 0\n              ? [\n                  ...expanded.slice(0, idx),\n                  ...expanded.slice(idx + 1, expanded.length),\n                ]\n              : [...expanded, id];\n          setIsExpanded(newExpanded);\n        };\n\n        return (\n          <DataListItem\n            key={item.id.id}\n            aria-labelledby={ariaLabelledBy}\n            isExpanded={isExpanded.includes(`${item.id.id}-toggle`)}\n          >\n            <DataListItemRow key={item.id.id}>\n              <DataListToggle\n                id={`${item.id.id}-toggle`}\n                aria-controls={`${item.id.id}-expand`}\n                onClick={() => toggle(`${item.id.id}-toggle`)}\n                isExpanded={isExpanded.includes(`${item.id.id}-toggle`)}\n              />\n              <DataListItemCells\n                dataListCells={[\n                  <DataListCell key={count++}>\n                    <a\n                      href={item.id.tower_link}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {windowWidth < mobileBreakpoint && (\n                        <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                          Id/Name\n                          <ExternalLinkIcon />:\n                        </span>\n                      )}\n                      &nbsp;\n                      {`${item.id.id} - ${item.id.template_name}`}\n                    </a>\n                  </DataListCell>,\n                  <DataListCell key={count++}>\n                    {windowWidth <= mobileBreakpoint && (\n                      <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Status:\n                      </span>\n                    )}\n                    &nbsp;\n                    <JobStatus status={item.status} />\n                  </DataListCell>,\n                  <Tooltip key={count++} content={<p>{item.cluster_name}</p>}>\n                    <DataListCell>\n                      {windowWidth <= mobileBreakpoint && (\n                        <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                          Cluster:\n                        </span>\n                      )}\n                      &nbsp;\n                      {item.cluster_name}\n                    </DataListCell>\n                  </Tooltip>,\n                  <DataListCell key={count++}>\n                    {windowWidth <= mobileBreakpoint && (\n                      <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Organization:\n                      </span>\n                    )}\n                    &nbsp;\n                    {item.org_name}\n                  </DataListCell>,\n                  <DataListCell key={count++}>\n                    {windowWidth <= mobileBreakpoint && (\n                      <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Type:\n                      </span>\n                    )}\n                    &nbsp;\n                    {formatJobType(item.job_type)}\n                  </DataListCell>,\n                ]}\n              />\n            </DataListItemRow>\n            <DataListContent\n              aria-label={`${item.id.id}-details`}\n              id={'${item.id.id}'}\n              isHidden={!isExpanded.includes(`${item.id.id}-toggle`)}\n            >\n              <DataListItemCells\n                dataListCells={[\n                  <DataListCell key={count++}>\n                    Created: {formatDateTime(item.created)}\n                  </DataListCell>,\n                  <DataListCell key={count++}>\n                    Started: {formatDateTime(item.started)}\n                  </DataListCell>,\n                  <DataListCell key={count++}>\n                    Finished: {formatDateTime(item.finished)}\n                  </DataListCell>,\n                ]}\n              />\n            </DataListContent>\n          </DataListItem>\n        );\n      })}\n    </>\n  );\n};\n\nconst AllJobsTemplate = ({ jobs }) => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  const onResize = () => setWindowWidth(window.innerWidth);\n\n  useEffect(() => {\n    window.addEventListener('resize', onResize);\n    return () => window.removeEventListener('resize', onResize);\n  }, []);\n\n  return buildListRow(jobs, 'All jobs view', 'all-jobs', windowWidth);\n};\n\nconst JobExplorerList = ({ jobs }) => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  const onResize = () => setWindowWidth(window.innerWidth);\n\n  useEffect(() => {\n    window.addEventListener('resize', onResize);\n    return () => window.removeEventListener('resize', onResize);\n  }, []);\n\n  return (\n    <>\n      {jobs.length <= 0 && <LoadingState />}\n      <DataList isCompact>\n        {windowWidth >= mobileBreakpoint && buildHeader(headerLabels)}\n        <AllJobsTemplate jobs={jobs} windowWidth={windowWidth} />\n      </DataList>\n    </>\n  );\n};\n\nJobExplorerList.propTypes = {\n  jobs: PropTypes.array,\n  windowWidth: PropTypes.number,\n};\n\nAllJobsTemplate.propTypes = {\n  jobs: PropTypes.array,\n  windowWidth: PropTypes.number,\n};\n\nexport default JobExplorerList;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { parse, stringify } from 'query-string';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { Paths } from '../../paths';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoResults from '../../Components/NoResults';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport Pagination from '../../Components/Pagination';\n\nimport {\n  preflightRequest,\n  readJobExplorer,\n  readJobExplorerOptions,\n} from '../../Api';\nimport { jobExplorer } from '../../Utilities/constants';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport { Card, CardBody, PaginationVariant } from '@patternfly/react-core';\n\nimport JobExplorerList from '../../Components/JobExplorerList';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\nconst initialQueryParams = {\n  ...jobExplorer.defaultParams,\n  attributes: jobExplorer.attributes,\n};\n\nconst JobExplorer = ({ location: { search }, history }) => {\n  const [preflightError, setPreFlightError] = useState(null);\n  const [\n    {\n      isLoading,\n      isSuccess,\n      error,\n      data: { meta = {}, items: data = [] },\n    },\n    setData,\n  ] = useApi({ meta: {}, items: [] });\n  const [options, setOptions] = useApi({});\n\n  const { queryParams, setFromPagination, setFromToolbar, dispatch } =\n    useQueryParams(initialQueryParams);\n\n  const updateURL = () => {\n    const { jobExplorer } = Paths;\n    const search = stringify(queryParams, { arrayFormat: 'bracket' });\n    history.replace({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'job-explorer', secondaryNav: true });\n\n    preflightRequest().catch((error) => {\n      setPreFlightError({ preflightError: error });\n    });\n\n    const initialSearchParams = parse(search, {\n      arrayFormat: 'bracket',\n      parseBooleans: true,\n      parseNumbers: true,\n    });\n\n    dispatch({\n      type: 'REINITIALIZE',\n      value: {\n        ...initialQueryParams,\n        ...initialSearchParams,\n      },\n    });\n  }, []);\n\n  useEffect(() => {\n    setData(readJobExplorer({ params: queryParams }));\n    setOptions(readJobExplorerOptions({ params: queryParams }));\n    updateURL();\n  }, [queryParams]);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Job Explorer'} />\n      </PageHeader>\n\n      {preflightError && (\n        <Main>\n          <EmptyState {...preflightError} />\n        </Main>\n      )}\n\n      {!preflightError && (\n        <Main>\n          <Card>\n            <CardBody>\n              <FilterableToolbar\n                categories={options.data}\n                filters={queryParams}\n                setFilters={setFromToolbar}\n                pagination={\n                  <Pagination\n                    count={meta?.count}\n                    params={{\n                      limit: queryParams.limit,\n                      offset: queryParams.offset,\n                    }}\n                    setPagination={setFromPagination}\n                    isCompact\n                  />\n                }\n                hasSettings\n              />\n              {error && <ApiErrorState message={error.error} />}\n              {isLoading && <LoadingState />}\n              {isSuccess && data.length <= 0 && <NoResults />}\n              {isSuccess && data.length > 0 && <JobExplorerList jobs={data} />}\n              <Pagination\n                count={meta?.count}\n                params={{\n                  limit: queryParams.limit,\n                  offset: queryParams.offset,\n                }}\n                setPagination={setFromPagination}\n                variant={PaginationVariant.bottom}\n              />\n            </CardBody>\n          </Card>\n        </Main>\n      )}\n    </React.Fragment>\n  );\n};\n\nJobExplorer.propTypes = {\n  location: PropTypes.object,\n  history: PropTypes.object,\n};\n\nexport default JobExplorer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nimport {\n  NotificationDrawerList as PFNotificationDrawerList,\n  NotificationDrawerListItem as PFNotificationDrawerListItem,\n  NotificationDrawerListItemBody,\n  NotificationDrawerListItemHeader,\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkAltIcon } from '@patternfly/react-icons';\nimport LoadingState from '../Components/LoadingState';\nimport { capitalize } from '../Utilities/helpers';\n\nconst ExternalLinkAltIcon = styled(PFExternalLinkAltIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n  font-size: 14px;\n`;\n\nconst NotificationDrawerListItem = styled(PFNotificationDrawerListItem)`\n  border-top: 1px solid var(--pf-global--BorderColor--light-100\n    );\n  border-bottom::nth-child(odd): 1px solid var(--pf-global--BorderColor--light-100\n    );\n  box-shadow: none;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst NotificationDrawerList = styled(PFNotificationDrawerList)`\n  &:last-child {\n    border-bottom: 1px solid var(--pf-global--BorderColor--light-100);\n  }\n`;\n\nconst stringifyDate = (date) => {\n  const day = moment(date);\n  const oneHour = 60 * 60 * 1000;\n  const now = moment().utc();\n\n  if (now.isAfter(day)) {\n    return `${now.diff(day, 'days')} day(s) ago.`;\n  }\n\n  if (day.isSame(now, 'day')) {\n    if (day.valueOf() > oneHour) {\n      return `${day.diff(now, 'hours')} hour(s) ago.`;\n    }\n\n    return `${now.diff(day, 'minutes')} minute(s) ago.`;\n  }\n};\n\nconst AllNotificationTemplate = ({ notifications }) =>\n  notifications.map(\n    ({ date, message, label, notification_id: id, tower_url: url }) => {\n      if (label === '' || label === 'notice') {\n        return (\n          <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"info\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n\n      if (label === 'error') {\n        return (\n          <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"danger\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n\n      if (label === 'warning') {\n        return (\n          <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"warning\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n    }\n  );\n\nconst ErrorNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'error')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"danger\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst NoticeNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'notice')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"info\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst WarningNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'warning')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"warning\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst NotificationsList = ({ filterBy, notifications }) => (\n  <>\n    <NotificationDrawerList>\n      {notifications.length <= 0 && <LoadingState />}\n      {filterBy === '' && (\n        <AllNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'notice' && (\n        <NoticeNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'error' && (\n        <ErrorNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'warning' && (\n        <WarningNotificationTemplate notifications={notifications} />\n      )}\n    </NotificationDrawerList>\n  </>\n);\n\nAllNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nErrorNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nWarningNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nNotificationsList.propTypes = {\n  notifications: PropTypes.array,\n  filterBy: PropTypes.string,\n};\n\nexport default NotificationsList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoData from '../../Components/NoData';\nimport { preflightRequest, readClusters, readNotifications } from '../../Api';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle as PFCardTitle,\n  FormSelect,\n  FormSelectOption,\n  PaginationVariant,\n  NotificationDrawer,\n} from '@patternfly/react-core';\n\nimport NotificationsList from '../../Components/NotificationsList';\nimport Pagination from '../../Components/Pagination';\n\nconst CardTitle = styled(PFCardTitle)`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n`;\n\nconst DropdownGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-end;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n\n  select {\n    margin: 0 10px;\n    width: 150px;\n\n    @media screen and (max-width: 1035px) {\n      margin: 10px 10px 0 0;\n    }\n\n    @media screen and (max-width: 865px) {\n      width: 100%;\n    }\n  }\n`;\n\nconst notificationOptions = [\n  {\n    value: 'please choose',\n    label: 'Select Notification Severity',\n    disabled: true,\n  },\n  { value: 'error', label: 'View Critical', disabled: false },\n  { value: 'warning', label: 'View Warning', disabled: false },\n  { value: 'notice', label: 'View Notice', disabled: false },\n  { value: '', label: 'View All', disabled: false },\n];\n\nfunction formatClusterName(data) {\n  const defaultClusterOptions = [\n    { value: 'please choose', label: 'Select cluster', disabled: true },\n    { value: '', label: 'All Clusters', disabled: false },\n    { value: -1, label: 'Unassociated', disabled: false },\n  ];\n  return data.reduce(\n    (formatted, { label, cluster_id: id, install_uuid: uuid }) => {\n      if (label.length === 0) {\n        formatted.push({ value: id, label: uuid, disabled: false });\n      } else {\n        formatted.push({ value: id, label, disabled: false });\n      }\n\n      return formatted;\n    },\n    defaultClusterOptions\n  );\n}\n\nconst initialQueryParams = {\n  limit: 5,\n  offset: 0,\n};\n\nconst Notifications = () => {\n  const [preflightError, setPreFlightError] = useState(null);\n  const [notificationsData, setNotificationsData] = useState([]);\n  const [clusterOptions, setClusterOptions] = useState([]);\n  const [selectedCluster, setSelectedCluster] = useState('');\n  const [firstRender, setFirstRender] = useState(true);\n  const [isLoading, setIsLoading] = useState(true);\n  const [meta, setMeta] = useState({});\n  const { queryParams, setId, setFromPagination, setSeverity } =\n    useQueryParams(initialQueryParams);\n\n  useEffect(() => {\n    if (firstRender) {\n      return;\n    }\n\n    const getData = () => {\n      return readNotifications({ params: queryParams });\n    };\n\n    const update = () => {\n      setIsLoading(true);\n      getData().then(({ notifications: notificationsData = [], meta }) => {\n        setNotificationsData(notificationsData);\n        setMeta(meta);\n        setIsLoading(false);\n      });\n    };\n\n    update();\n  }, [queryParams]);\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'notifications', secondaryNav: true });\n\n    let ignore = false;\n    const fetchEndpoints = () => {\n      return Promise.all(\n        [readClusters(), readNotifications({ params: queryParams })].map((p) =>\n          p.catch(() => [])\n        )\n      );\n    };\n\n    async function initializeWithPreflight() {\n      setIsLoading(true);\n      await preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n      fetchEndpoints().then(\n        ([\n          { templates: clustersData = [] },\n          { notifications: notificationsData = [], meta },\n        ]) => {\n          if (!ignore) {\n            const clusterOptions = formatClusterName(clustersData);\n            setClusterOptions(clusterOptions);\n            setNotificationsData(notificationsData);\n            setMeta(meta);\n            setFirstRender(false);\n            setIsLoading(false);\n          }\n        }\n      );\n    }\n\n    initializeWithPreflight();\n    return () => (ignore = true);\n  }, []);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Notifications'} />\n      </PageHeader>\n      {preflightError && (\n        <Main>\n          <EmptyState {...preflightError} />\n        </Main>\n      )}\n      {!preflightError && (\n        <>\n          <Main>\n            <Card>\n              <CardTitle>\n                <DropdownGroup>\n                  <FormSelect\n                    name=\"selectedCluster\"\n                    value={selectedCluster}\n                    onChange={(value) => {\n                      setSelectedCluster(value);\n                      setId(value);\n                      setFromPagination(0);\n                    }}\n                    aria-label=\"Select Cluster\"\n                  >\n                    {clusterOptions.map(({ value, label, disabled }, index) => (\n                      <FormSelectOption\n                        isDisabled={disabled}\n                        key={index}\n                        value={value}\n                        label={label}\n                      />\n                    ))}\n                  </FormSelect>\n                  <FormSelect\n                    name=\"selectedNotification\"\n                    value={queryParams.severity || ''}\n                    onChange={(value) => {\n                      setSeverity(value);\n                      setFromPagination(0);\n                    }}\n                    aria-label=\"Select Notification Type\"\n                  >\n                    {notificationOptions.map(\n                      ({ disabled, value, label }, index) => (\n                        <FormSelectOption\n                          isDisabled={disabled}\n                          key={index}\n                          value={value}\n                          label={label}\n                        />\n                      )\n                    )}\n                  </FormSelect>\n                </DropdownGroup>\n                <Pagination\n                  count={meta?.count}\n                  params={{\n                    limit: queryParams.limit,\n                    offset: queryParams.offset,\n                  }}\n                  setPagination={setFromPagination}\n                  isCompact\n                />\n              </CardTitle>\n              <CardBody>\n                {isLoading && <LoadingState />}\n                {!isLoading && notificationsData.length <= 0 && <NoData />}\n                {!isLoading && notificationsData.length > 0 && (\n                  <NotificationDrawer>\n                    <NotificationsList\n                      filterBy={queryParams.severity || ''}\n                      options={notificationOptions}\n                      notifications={notificationsData}\n                    />\n                  </NotificationDrawer>\n                )}\n                <Pagination\n                  count={meta?.count}\n                  params={{\n                    limit: queryParams.limit,\n                    offset: queryParams.offset,\n                  }}\n                  setPagination={setFromPagination}\n                  variant={PaginationVariant.bottom}\n                />\n              </CardBody>\n            </Card>\n          </Main>\n        </>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Notifications;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Switch } from '@patternfly/react-core';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  overflow: auto;\n  width: 100%;\n  height: ${(props) => props.height};\n`;\n\nconst LegendDetail = styled.div`\n  display: flex;\n  padding: 7.5px 15px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  overflow: auto;\n`;\n\nconst Color = styled.div.attrs((props) => ({\n  color: props.color || 'black',\n}))`\n  min-width: 12px;\n  height: 12px;\n  background: ${(props) => props.color};\n  margin-right: 20px;\n`;\n\nconst Title = styled.span`\n  font-size: 15px;\n  display: inline-block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n`;\n\nconst SubTitle = styled.span`\n  font-size: 15px;\n  margin-left: auto;\n  margin-right: 0;\n  padding-right: 10px;\n`;\n\nconst Legend = ({ data, selected, height, onToggle, chartName }) => {\n  return (\n    <Container height={height}>\n      {data.map(({ name, value, id, count }, index) => (\n        <LegendDetail key={index}>\n          <Wrapper>\n            <Color color={value} />\n            <Title>{name}</Title>\n          </Wrapper>\n          {count && <SubTitle>{count}</SubTitle>}\n          {selected && (\n            <Switch\n              isChecked={selected.some((selection) => selection === id)}\n              onChange={() => onToggle(id)}\n              aria-label={`${chartName}-${name}`}\n              value={id}\n              key={index}\n            />\n          )}\n        </LegendDetail>\n      ))}\n    </Container>\n  );\n};\n\nLegend.propTypes = {\n  data: PropTypes.array.isRequired,\n  selected: PropTypes.array.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  height: PropTypes.string.isRequired,\n  chartName: PropTypes.string.isRequired,\n};\n\nexport default Legend;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport styled from 'styled-components';\n\nimport initializeChart from '.././BaseChart';\nimport Legend from '../../Utilities/Legend';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nconst GroupedBarChart = ({\n  onClick = null,\n  TooltipClass,\n  legend,\n  ...props\n}) => {\n  const colors = legend.map(({ id, name }) => {\n    return {\n      name,\n      value: props.colorFunc(id),\n      id,\n    };\n  });\n  const [selectedIds, setSelectedIds] = useState(\n    legend.map(({ id }) => id).slice(0, 8)\n  );\n  let timeout = null;\n\n  const handleToggle = (id) => {\n    if (selectedIds.includes(id)) {\n      setSelectedIds(selectedIds.filter((el) => el !== id));\n    } else {\n      setSelectedIds([...selectedIds, id]);\n    }\n  };\n\n  const draw = () => {\n    // Clear our chart container element first\n    d3.selectAll('#' + props.id + ' > *').remove();\n    let { data: unformattedData } = props;\n    const data = unformattedData.reduce((formatted, { date, items }) => {\n      const selectedOrgs = items.filter(({ id }) => selectedIds.includes(id));\n      return formatted.concat({ date, selectedOrgs });\n    }, []);\n    const width = props.getWidth();\n    const height = props.getHeight();\n    // x scale of entire chart\n    const x0 = d3.scaleBand().range([0, width]).padding(0.35);\n    // x scale of individual grouped bars\n    const x1 = d3.scaleBand();\n    const y = d3.scaleLinear().range([height, 0]);\n    // format our X Axis ticks\n    const maxTicksOneMonth = Math.round(data.length / (data.length / 2));\n    const maxTicksTwoMonths = Math.round(data.length / (data.length / 4));\n    let ticks = data.map((d) => d.date);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) =>\n          i % (data.length > 31 ? maxTicksTwoMonths : maxTicksOneMonth) === 0\n            ? d.date\n            : undefined\n        )\n        .filter((item) => item);\n    }\n\n    const xAxis = d3.axisBottom(x0).tickValues(ticks).tickFormat(formatDate);\n\n    const yAxis = d3.axisLeft(y).ticks(8).tickSize(-width, 0, 0);\n\n    const svg = d3\n      .select('#' + props.id)\n      .append('svg')\n      .attr('width', width + props.margin.left + props.margin.right)\n      .attr('height', height + props.margin.bottom + props.margin.top)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' + props.margin.left + ',' + props.margin.top + ')'\n      );\n\n    const dates = data.map((d) => d.date);\n    const tooltip = new TooltipClass({\n      svg: '#' + props.id,\n    });\n    x0.domain(dates);\n    x1.domain(selectedIds).range([0, x0.bandwidth()]);\n    y.domain([\n      0,\n      d3.max(data, (date) =>\n        d3.max(date.selectedOrgs, (d) => d.value * 1.15)\n      ) || 8,\n    ]);\n\n    // add y axis\n    svg\n      .append('g')\n      .attr('class', 'y axis')\n      .call(yAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7')\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 6)\n      .attr('dy', '.71em')\n      .style('text-anchor', 'end')\n      .style('font-weight', 'bold')\n      .text('Value');\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text(props.yLabel);\n\n    // add x axis\n    svg\n      .append('g')\n      .attr('class', 'x axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' + width / 2 + ' ,' + (height + props.margin.top + 25) + ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n    // add the groups\n    let slice = svg.selectAll('.slice').data(data);\n    slice.exit().remove();\n\n    const enter = slice\n      .enter()\n      .append('g')\n      .attr('class', 'g foo')\n      .attr('transform', (d) => 'translate(' + x0(d.date) + ',0)');\n    slice = slice.merge(enter);\n    // add the individual bars\n    let bars = slice.selectAll('rect').data(function (d) {\n      return d.selectedOrgs;\n    });\n    bars.exit().remove();\n\n    const color = props.colorFunc;\n    const subEnter = bars\n      .enter()\n      .append('rect')\n      .attr('width', x1.bandwidth())\n      .attr('x', function (d) {\n        return x1(d.id);\n      }) // unsorted\n      .style('fill', function (d) {\n        return color(d.id);\n      })\n      .attr('y', function (d) {\n        return y(d.value);\n      })\n      .attr('height', function (d) {\n        return height - y(d.value);\n      })\n      .on('mouseover', function (d) {\n        d3.select(this).style('cursor', onClick ? 'pointer' : 'default');\n        d3.select(this).style('fill', d3.rgb(color(d.id)).darker(1));\n        tooltip.handleMouseOver();\n      })\n      .on('mousemove', tooltip.handleMouseOver)\n      .on('mouseout', function (d) {\n        d3.select(this).style('fill', color(d.id));\n        tooltip.handleMouseOut();\n      })\n      .on('click', onClick);\n    bars = bars.merge(subEnter);\n  };\n\n  const init = () => {\n    draw();\n  };\n\n  const resize = () => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      draw();\n    }, 500);\n  };\n\n  useEffect(() => {\n    init();\n    window.addEventListener('resize', resize);\n\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [props.data, selectedIds]);\n\n  return (\n    <Wrapper>\n      <div id={props.id} />\n      {colors.length > 0 && (\n        <Legend\n          id={`${props.id}-legend`}\n          data={colors}\n          selected={selectedIds}\n          onToggle={handleToggle}\n          height=\"350px\"\n          chartName={`${props.id}-legend`}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nGroupedBarChart.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  legend: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  colorFunc: PropTypes.func,\n  yLabel: PropTypes.string,\n  onClick: PropTypes.func,\n  TooltipClass: PropTypes.any.isRequired,\n};\n\nGroupedBarChart.defaultProps = {\n  legend: [],\n};\n\nexport default initializeChart(GroupedBarChart);\n","import * as d3 from 'd3';\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class OrgsTooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', 68)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 14)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Date');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 72)\n      .attr('y', 14)\n      .text('0 Jobs');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', -1)\n      .attr('font-size', 12)\n      .text('Org');\n    this.clickMore = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 20)\n      .attr('y', 30)\n      .attr('font-size', 12)\n      .text('Click for details');\n  }\n\n  handleMouseOver = (d) => {\n    let date;\n    let orgName;\n    let jobs;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    } else {\n      const maxLength = 16;\n      date = d.date;\n      orgName = d.name;\n      jobs = d.value;\n      if (d.name.length > maxLength) {\n        orgName = d.name.slice(0, maxLength).concat('...');\n      }\n    }\n\n    const formatTooltipDate = formatDate;\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.date.text('' + formatTooltipDate(date));\n    this.orgName.text('' + orgName);\n    this.jobs.text('' + jobs + ' Jobs');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 45;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n      this.orgName.attr('x', -adjustedWidth - 7);\n      this.clickMore.attr('x', -adjustedWidth - 7);\n      this.date.attr('x', -adjustedWidth - 7);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.clickMore.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth / 2);\n      this.date.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import * as d3 from 'd3';\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class HostsTooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', 68)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 14)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Date');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 72)\n      .attr('y', 14)\n      .text('0 Jobs');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', -1)\n      .attr('font-size', 12)\n      .text('Org');\n    this.clickMore = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 20)\n      .attr('y', 30)\n      .attr('font-size', 12)\n      .text('Click for details');\n  }\n\n  handleMouseOver = (d) => {\n    let date;\n    let orgName;\n    let jobs;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    } else {\n      const maxLength = 16;\n      date = d.date;\n      orgName = d.name;\n      jobs = d.value;\n      if (d.name.length > maxLength) {\n        orgName = d.name.slice(0, maxLength).concat('...');\n      }\n    }\n\n    const formatTooltipDate = formatDate;\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.date.text('' + formatTooltipDate(date));\n    this.orgName.text('' + orgName);\n    this.jobs.text('' + jobs + ' Hosts');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 45;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n      this.orgName.attr('x', -adjustedWidth - 7);\n      this.clickMore.attr('x', -adjustedWidth - 7);\n      this.date.attr('x', -adjustedWidth - 7);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.clickMore.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth / 2);\n      this.date.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport { getTotal } from '../Utilities/helpers';\nimport Legend from '../Utilities/Legend';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nclass Tooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    // defer drawing until we know the data shape\n    this.drawn = false;\n    // show the success rate or not\n    this.showSuccess = false;\n  }\n\n  draw(d) {\n    // chart1 has success rate data and chart2 does not ...\n    this.showSuccess = d && d.data && 'success_rate' in d.data ? true : false;\n    const boundingHeight = this.showSuccess ? 70 : 52;\n    const boundingWidth = this.showSuccess ? 120 : 108;\n\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBOx = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', boundingHeight)\n      .attr('width', boundingWidth)\n      .attr('fill', '#393f44');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 0)\n      .text('Organization');\n    this.percentageTotal = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 16)\n      .text('0');\n    this.percentageSuccess = null;\n    if (this.showSuccess) {\n      this.percentageSuccess = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 30)\n        .text('');\n    }\n  }\n\n  handleMouseOver = (d) => {\n    // treat draw() as a singleton to avoid a painted window effect\n    if (this.drawn !== true) {\n      this.draw(d);\n      this.drawn = true;\n    }\n\n    let perc;\n    let percSuccess;\n    let orgName;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    }\n\n    if (d && d.data) {\n      const maxLength = 16;\n      perc = d.data.percent;\n      percSuccess = d.data.success_rate;\n      orgName = d.data.name;\n      if (d.data.name.length > maxLength) {\n        orgName = d.data.name.slice(0, maxLength - 3).concat('...');\n      }\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.percentageTotal.text('' + perc + '%');\n    if (percSuccess && this.percentageSuccess) {\n      this.percentageSuccess.text('(' + percSuccess + '% successful)');\n    }\n\n    this.orgName.text(' ' + orgName);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, -10) rotate(45)');\n      this.boundingBOx.attr('x', -125);\n      this.orgName.attr('x', -112);\n      this.percentageTotal.attr('x', -112);\n      if (this.showSuccess) {\n        this.percentageSuccess.attr('x', -112);\n      }\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, -10) rotate(45)');\n      this.boundingBOx.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.percentageTotal.attr('x', 20);\n      if (this.showSuccess) {\n        this.percentageSuccess.attr('x', 20);\n      }\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nconst PieChart = ({\n  data,\n  id,\n  colorFunc: color,\n  margin,\n  getWidth,\n  getHeight,\n}) => {\n  const colors = data\n    .map(({ id, name, count }) => {\n      return {\n        id,\n        name,\n        value: color(id),\n        count: Math.round(count),\n      };\n    })\n    .sort((a, b) => (a.count > b.count ? 1 : b.count > a.count ? -1 : 0));\n\n  const [selectedIds, setSelectedIds] = useState(\n    data.map(({ id }) => id).slice(0, 8)\n  );\n\n  let timeout = null;\n\n  const handleToggle = (id) => {\n    if (selectedIds.includes(id)) {\n      setSelectedIds(selectedIds.filter((el) => el !== id));\n    } else {\n      setSelectedIds([...selectedIds, id]);\n    }\n  };\n\n  const draw = () => {\n    d3.selectAll('#' + id + ' > *').remove();\n    const width = getWidth();\n    const height = getHeight();\n    const svg = d3\n      .select('#' + id)\n      .append('svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.bottom)\n      .append('g');\n\n    svg.append('g').attr('class', 'slices');\n    svg.append('g').attr('class', 'labels');\n    svg.append('g').attr('class', 'lines');\n    const radius = Math.min(width, height) / 2;\n    const filteredData = data.filter(({ id }) => selectedIds.includes(id));\n    const total = getTotal(filteredData);\n    filteredData.forEach(function (d) {\n      d.count = +d.count;\n      d.percent = +Math.round((d.count / total) * 100);\n    });\n    const donutTooltip = new Tooltip({\n      svg: '#' + id,\n    });\n    const pie = d3\n      .pie()\n      .sort(null)\n      .value((d) => d.count);\n    const arc = d3\n      .arc()\n      .outerRadius(radius - 10) // controls top positioning of chart\n      .innerRadius(0);\n\n    svg.attr(\n      'transform',\n      'translate(' +\n        (width + margin.left + margin.right) / 2 +\n        ',' +\n        (height + margin.top + margin.bottom) / 2 +\n        ')'\n    );\n\n    svg\n      .selectAll('path')\n      .data(pie(filteredData))\n      .enter()\n      .append('path')\n      .attr('d', arc)\n      .attr('fill', (d) => color(d.data.id));\n\n    svg\n      .selectAll('path')\n      .on('mouseover', function (d) {\n        d3.select(this).style('fill', d3.rgb(color(d.data.id)).darker(1));\n        donutTooltip.handleMouseOver(d);\n      })\n      .on('mouseout', function (d) {\n        d3.select(this).style('fill', color(d.data.id));\n        donutTooltip.handleMouseOut();\n      })\n      .on('mousemove', donutTooltip.handleMouseOver);\n\n    svg.append('g').classed('labels', true);\n    svg.append('g').classed('lines', true);\n  };\n\n  const init = () => {\n    draw();\n  };\n\n  const resize = () => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      draw();\n    }, 500);\n  };\n\n  useEffect(() => {\n    init();\n    window.addEventListener('resize', resize);\n\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [data, selectedIds]);\n\n  return (\n    <Wrapper>\n      <div id={id} />\n      {colors.length > 0 && (\n        <Legend\n          id={`${id}-legend`}\n          data={colors}\n          selected={selectedIds}\n          onToggle={handleToggle}\n          height=\"300px\"\n          chartName={`${id}-legend`}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nPieChart.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  colorFunc: PropTypes.func,\n};\n\nexport default initializeChart(PieChart);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { formatDate as dateForJobExplorer } from '../../Utilities/helpers';\n\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport {\n  preflightRequest,\n  readJobExplorer,\n  readHostExplorer,\n  readOrgOptions,\n} from '../../Api';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle as PFCardTitle,\n  Tabs,\n  Tab,\n} from '@patternfly/react-core';\n\nimport {\n  GroupedBarChart,\n  OrgsTooltip,\n  HostsTooltip,\n} from '../../Charts/GroupedBarChart/';\nimport PieChart from '../../Charts/PieChart';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport { organizationStatistics as constants } from '../../Utilities/constants';\n\n// For chart colors\nimport { pfmulti } from '../../Utilities/colors';\nimport { scaleOrdinal } from 'd3';\n\nconst CardTitle = styled(PFCardTitle)`\n  border-bottom: 2px solid #ebebeb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &&& {\n    min-height: 60px;\n    --pf-c-card--first-child--PaddingTop: 10px;\n    --pf-c-card__header--not-last-child--PaddingBottom: 10px;\n\n    h3 {\n      font-size: 0.875em;\n    }\n  }\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  overflow: hidden;\n\n  .pf-c-card {\n    width: 50%;\n    margin-top: 20px;\n    overflow: auto;\n  }\n\n  .pf-c-card:first-of-type {\n    margin-right: 20px;\n  }\n`;\n\nconst TopCard = styled(Card)`\n  min-height: 500px;\n`;\n\nconst colorFunc = scaleOrdinal(pfmulti);\n\nconst orgsChartMapper =\n  (attrName) =>\n  ({ dates: data = [], meta }) => ({\n    data: data.map(({ date, items }) => ({\n      date,\n      items: items.map(({ id, [attrName]: value, name }) => ({\n        id,\n        date,\n        value,\n        name: name || 'No organization',\n      })),\n    })),\n    legend: meta.legend.map((el) => ({\n      ...el,\n      name: el.name || 'No organization',\n    })),\n  });\n\nconst pieChartMapper =\n  (attrName) =>\n  ({ items = [] }) =>\n    items.map(({ id, [attrName]: count, name }) => ({\n      id,\n      count,\n      name: name || 'No organization',\n    }));\n\nconst redirectToJobExplorer =\n  (toJobExplorer, queryParams) =>\n  ({ date, id }) => {\n    if (id === -1) {\n      // disable clicking on \"others\" block\n      return;\n    }\n\n    const { sort_by, ...rest } = queryParams;\n    const formattedDate = dateForJobExplorer(date);\n    const initialQueryParams = {\n      ...rest,\n      quick_date_range: 'custom',\n      start_date: formattedDate,\n      end_date: formattedDate,\n      status: [\n        'successful',\n        'failed',\n        'new',\n        'pending',\n        'waiting',\n        'error',\n        'canceled',\n        'running',\n      ],\n      org_id: [id],\n    };\n\n    toJobExplorer(initialQueryParams);\n  };\n\nconst chartMapper = [\n  {\n    api: readJobExplorer,\n    attr: 'total_count',\n    label: 'Jobs across organizations',\n    onClick: redirectToJobExplorer,\n    tooltip: OrgsTooltip,\n  },\n  {\n    api: readHostExplorer,\n    attr: 'total_unique_host_count',\n    label: 'Hosts across organizations',\n    onClick: () => null,\n    tooltip: HostsTooltip,\n  },\n];\n\nconst OrganizationStatistics = ({ history }) => {\n  const toJobExplorer = useRedirect(history, 'jobExplorer');\n  const [preflight, setPreflight] = useApi(null);\n  const [activeTabKey, setActiveTabKey] = useState(0);\n  const [orgs, setOrgs] = useApi(\n    [],\n    orgsChartMapper(chartMapper[activeTabKey].attr)\n  );\n  const [jobs, setJobs] = useApi([], pieChartMapper('total_count'));\n  const [tasks, setTasks] = useApi([], pieChartMapper('host_task_count'));\n  const [options, setOptions] = useApi({});\n  const { queryParams, setFromToolbar } = useQueryParams(\n    constants.defaultParams\n  );\n\n  const jobEventsByOrgParams = {\n    ...queryParams,\n    attributes: ['host_task_count'],\n    group_by: 'org',\n    include_others: true,\n    sort_by: `host_task_count:desc`,\n  };\n\n  const jobRunsByOrgParams = {\n    ...queryParams,\n    attributes: ['total_count'],\n    group_by: 'org',\n    include_others: true,\n    sort_by: `total_count:desc`,\n  };\n\n  const jobsByDateAndOrgParams = {\n    ...queryParams,\n    attributes: ['total_count'],\n    group_by: 'org',\n    group_by_time: true,\n    sort_by: `total_count:desc`,\n  };\n\n  const hostAcrossOrgParams = {\n    ...queryParams,\n    attributes: ['total_unique_host_count'],\n    group_by: 'org',\n    group_by_time: true,\n    sort_by: `host_task_count:desc`,\n  };\n\n  const handleTabClick = (_, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({\n      id: 'organization-statistics',\n      secondaryNav: true,\n    });\n    setPreflight(preflightRequest());\n    setOptions(readOrgOptions({ params: queryParams }));\n  }, []);\n\n  useEffect(() => {\n    const { api: readJobsOrHosts } = chartMapper[activeTabKey];\n    const params =\n      activeTabKey === 0 ? jobsByDateAndOrgParams : hostAcrossOrgParams;\n    setOrgs(readJobsOrHosts({ params }));\n  }, [queryParams, activeTabKey]);\n\n  useEffect(() => {\n    setJobs(readJobExplorer({ params: jobRunsByOrgParams }));\n    setTasks(readJobExplorer({ params: jobEventsByOrgParams }));\n  }, [queryParams]);\n\n  if (preflight?.error?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Organization Statistics'} />\n        <FilterableToolbar\n          categories={options.data}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      {preflight.error && (\n        <Main>\n          <EmptyState preflightError={preflight.error} />\n        </Main>\n      )}\n      {preflight.isSuccess && (\n        <React.Fragment>\n          <Main>\n            <TopCard>\n              <Tabs activeKey={activeTabKey} onSelect={handleTabClick}>\n                <Tab eventKey={0} title={'Jobs'} />\n                <Tab eventKey={1} title={'Hosts'} />\n              </Tabs>\n              <CardBody>\n                {orgs.isLoading && <LoadingState />}\n                {orgs.error && <ApiErrorState message={orgs.error.error} />}\n                {orgs.isSuccess && orgs.data?.data.length <= 0 && <NoData />}\n                {orgs.isSuccess && orgs.data?.data.length > 0 && (\n                  <GroupedBarChart\n                    margin={{ top: 20, right: 20, bottom: 50, left: 50 }}\n                    id=\"d3-grouped-bar-chart-root\"\n                    data={orgs.data.data}\n                    legend={orgs.data.legend}\n                    history={history}\n                    colorFunc={colorFunc}\n                    yLabel={chartMapper[activeTabKey].label}\n                    onClick={chartMapper[activeTabKey].onClick(\n                      toJobExplorer,\n                      queryParams\n                    )}\n                    TooltipClass={chartMapper[activeTabKey].tooltip}\n                  />\n                )}\n              </CardBody>\n            </TopCard>\n            <CardContainer>\n              <Card>\n                <CardBody style={{ padding: 0 }}>\n                  <CardTitle style={{ padding: 0 }}>\n                    <h2 style={{ marginLeft: '20px' }}>\n                      Job Runs by Organization\n                    </h2>\n                  </CardTitle>\n                  {jobs.isLoading && <LoadingState />}\n                  {jobs.error && <ApiErrorState message={jobs.error.error} />}\n                  {jobs.isSuccess && jobs.data.length <= 0 && <NoData />}\n                  {jobs.isSuccess && jobs.data.length > 0 && (\n                    <PieChart\n                      margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                      id=\"d3-donut-1-chart-root\"\n                      data={jobs.data}\n                      colorFunc={colorFunc}\n                    />\n                  )}\n                </CardBody>\n              </Card>\n              <Card>\n                <CardBody style={{ padding: 0 }}>\n                  <CardTitle style={{ padding: 0 }}>\n                    <h2 style={{ marginLeft: '20px' }}>\n                      Usage by Organization (Tasks)\n                    </h2>\n                  </CardTitle>\n                  {tasks.isLoading && <LoadingState />}\n                  {tasks.error && <ApiErrorState message={tasks.error.error} />}\n                  {tasks.isSuccess && tasks.data.length <= 0 && <NoData />}\n                  {tasks.isSuccess && tasks.data.length > 0 && (\n                    <PieChart\n                      margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                      id=\"d3-donut-2-chart-root\"\n                      data={tasks.data}\n                      colorFunc={colorFunc}\n                    />\n                  )}\n                </CardBody>\n              </Card>\n            </CardContainer>\n          </Main>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nOrganizationStatistics.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default OrganizationStatistics;\n","var pfmulti = [\n    '#06C',\n    '#4CB140',\n    '#009596',\n    '#5752D1',\n    '#F4C145',\n    '#EC7A08',\n    '#8BC1F7',\n    '#23511E',\n    '#A2D9D9',\n    '#2A265F',\n    '#F9E0A2',\n    '#8F4700',\n    '#002F5D'\n];\nexport { pfmulti };\n","import React, { useEffect } from 'react';\n\nimport { Card, CardBody } from '@patternfly/react-core';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport Breadcrumbs from '../../../Components/Breadcrumbs';\n\nimport useApi from '../../../Utilities/useApi';\n\nimport { readPlanOptions } from '../../../Api';\n\nimport Form from '../Shared/Form';\n\nconst Add = () => {\n  const [options, setOptions] = useApi({});\n\n  useEffect(() => {\n    setOptions(readPlanOptions());\n  }, []);\n\n  const title = 'Create new plan';\n\n  return (\n    <>\n      <PageHeader>\n        <Breadcrumbs\n          items={[{ title: 'Savings Planner', navigate: '/savings-planner' }]}\n        />\n        <PageHeaderTitle title={title} />\n      </PageHeader>\n      <Main>\n        <Card>\n          <CardBody>\n            {options.isSuccess && <Form title={title} options={options} />}\n          </CardBody>\n        </Card>\n      </Main>\n    </>\n  );\n};\n\nexport default Add;\n","import React from 'react';\nimport { CardActions } from '@patternfly/react-core';\nimport styled from 'styled-components';\n\nconst CardActionsWrapper = styled.div`\n  margin-top: 20px;\n  --pf-c-card__actions--PaddingLeft: 0;\n`;\n\nfunction CardActionsRow({ children }) {\n  return (\n    <CardActionsWrapper>\n      <CardActions>{children}</CardActions>\n    </CardActionsWrapper>\n  );\n}\n\nexport default CardActionsRow;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\nimport { Button, Badge, Alert, Tooltip } from '@patternfly/react-core';\nimport AlertModal from '../AlertModal';\nimport { getRelatedResourceDeleteCounts } from '../../Utilities/getRelatedResourceDeleteDetails';\nimport ErrorDetail from '../ErrorDetail';\n\nconst WarningMessage = styled(Alert)`\n  margin-top: 10px;\n`;\nconst Label = styled.span`\n  && {\n    margin-right: 10px;\n  }\n`;\nfunction DeleteButton({\n  onConfirm,\n  modalTitle,\n  name,\n  variant,\n  children,\n  isDisabled,\n  ouiaId,\n  deleteMessage,\n  deleteDetailsRequests,\n  disabledTooltip,\n}) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [deleteMessageError, setDeleteMessageError] = useState();\n  const [deleteDetails, setDeleteDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const toggleModal = async isModalOpen => {\n    setIsLoading(true);\n    if (deleteDetailsRequests?.length && isModalOpen) {\n      const { results, error } = await getRelatedResourceDeleteCounts(\n        deleteDetailsRequests\n      );\n      if (error) {\n        setDeleteMessageError(error);\n      } else {\n        setDeleteDetails(results);\n      }\n    }\n    setIsLoading(false);\n    setIsOpen(isModalOpen);\n  };\n\n  if (deleteMessageError) {\n    return (\n      <AlertModal\n        isOpen={deleteMessageError}\n        title={'Error!'}\n        onClose={() => {\n          toggleModal(false);\n          setDeleteMessageError();\n        }}\n      >\n        <ErrorDetail error={deleteMessageError} />\n      </AlertModal>\n    );\n  }\n  return (\n    <>\n      {disabledTooltip ? (\n        <Tooltip content={disabledTooltip} position=\"top\">\n          <div>\n            <Button\n              spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n              variant={variant || 'secondary'}\n              aria-label={'Delete'}\n              isDisabled={isDisabled}\n              onClick={() => toggleModal(true)}\n              ouiaId={ouiaId}\n            >\n              {children || 'Delete'}\n            </Button>\n          </div>\n        </Tooltip>\n      ) : (\n        <Button\n          ouiaId={ouiaId}\n          spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n          variant={variant || 'secondary'}\n          aria-label={'Delete'}\n          isDisabled={isDisabled}\n          onClick={() => toggleModal(true)}\n        >\n          {children || 'Delete'}\n        </Button>\n      )}\n      <AlertModal\n        isOpen={isOpen}\n        title={modalTitle}\n        variant=\"danger\"\n        onClose={() => toggleModal(false)}\n        actions={[\n          <Button\n            ouiaId=\"delete-modal-confirm\"\n            key=\"delete\"\n            variant=\"danger\"\n            aria-label={'Confirm Delete'}\n            isDisabled={isDisabled}\n            onClick={() => {\n              onConfirm();\n              toggleModal(false);\n            }}\n          >\n            {'Delete'}\n          </Button>,\n          <Button\n            ouiaId=\"delete-modal-cancel\"\n            key=\"cancel\"\n            variant=\"link\"\n            aria-label={'Cancel'}\n            onClick={() => toggleModal(false)}\n          >\n            {'Cancel'}\n          </Button>,\n        ]}\n      >\n        {'Are you sure you want to delete:'}\n        <br />\n        <strong>{name}</strong>\n        {Object.values(deleteDetails).length > 0 && (\n          <WarningMessage\n            variant=\"warning\"\n            isInline\n            title={\n              <div>\n                <div aria-label={deleteMessage}>{deleteMessage}</div>\n                <br />\n                {Object.entries(deleteDetails).map(([key, value]) => (\n                  <div aria-label={`${key}: ${value}`} key={key}>\n                    <Label>{key}</Label> <Badge>{value}</Badge>\n                  </div>\n                ))}\n              </div>\n            }\n          />\n        )}\n      </AlertModal>\n    </>\n  );\n}\n\nDeleteButton.propTypes = {\n  ouiaId: PropTypes.string,\n};\n\nDeleteButton.defaultProps = {\n  ouiaId: null,\n};\n\nexport default DeleteButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { shape, string, number, arrayOf, node, oneOfType } from 'prop-types';\nimport { Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst RoutedTabs = ({ tabsArray, defaultTabId }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const getActiveTabId = (defaultTabId) => {\n    return (\n      tabsArray.find((tab) => tab.link === location.pathname)?.id ||\n      defaultTabId\n    );\n  };\n\n  const handleTabSelect = (_, eventKey) => {\n    const match = tabsArray.find((tab) => tab.id === eventKey);\n    if (match) {\n      history.push(match.link);\n    }\n  };\n\n  return (\n    <Tabs activeKey={getActiveTabId(defaultTabId)} onSelect={handleTabSelect}>\n      {tabsArray.map((tab) => (\n        <Tab\n          aria-label={typeof tab.name === 'string' ? tab.name : `${tab.id} tab`}\n          eventKey={tab.id}\n          key={tab.id}\n          link={tab.link}\n          title={<TabTitleText>{tab.name}</TabTitleText>}\n          role=\"tab\"\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nRoutedTabs.propTypes = {\n  defaultTabId: PropTypes.number,\n  tabsArray: arrayOf(\n    shape({\n      id: number.isRequired,\n      link: string.isRequired,\n      name: oneOfType([string.isRequired, node.isRequired]),\n    })\n  ).isRequired,\n};\n\nRoutedTabs.defaultProps = {\n  defaultTabId: 1,\n};\n\nexport default RoutedTabs;\n","import React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\nimport { Paths } from '../../paths';\nimport { stringify } from 'query-string';\n\nimport { useHistory } from 'react-router-dom';\n\nimport { Button } from '@patternfly/react-core';\n\nimport {\n  CardBody as PFCardBody,\n  CardFooter,\n  DescriptionList,\n  DescriptionListTerm,\n  DescriptionListGroup,\n  DescriptionListDescription,\n  Divider,\n  Label,\n  TextContent,\n  List,\n  ListItem,\n} from '@patternfly/react-core';\nimport CardActionsRow from '../../Components/CardActionsRow';\nimport {\n  relatedResourceDeleteRequests,\n  getRelatedResourceDeleteCounts,\n} from '../../Utilities/getRelatedResourceDeleteDetails';\nimport {deletePlan, readPlan} from '../../Api';\nimport useRequest, { useDismissableError } from '../../Utilities/useRequest';\nimport DeleteButton from '../../Components/DeleteButton/DeleteButton';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\nimport { formatDateTime } from '../../Utilities/helpers';\nimport RoutedTabs from '../../Components/RoutedTabs';\nimport AlertModal from '../../Components/AlertModal/AlertModal';\nimport ErrorDetail from '../../Components/ErrorDetail/ErrorDetail';\n\nconst CardBody = styled(PFCardBody)`\n  min-height: 500px;\n  padding: 0;\n  padding-bottom: 20px;\n\n  &:first-child {\n    padding-top: 0;\n  }\n`;\n\nconst DetailsTab = ({ tabsArray, plans }) => {\n  let history = useHistory();\n  const {\n    id,\n    automation_status,\n    category,\n    description,\n    frequency_period,\n    hosts,\n    manual_time,\n    modified,\n    name,\n    tasks,\n    template_details,\n    template_id,\n  } = plans[0];\n\n  const redirectToJobExplorer = (templateId) => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      quick_date_range: 'last_30_days',\n      status: ['failed', 'successful'],\n      template_id: [templateId],\n    };\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const showTemplate = (template_details) => {\n    if (!template_details.id) {\n      return;\n    }\n\n    return (\n      <a onClick={() => redirectToJobExplorer(template_details.id)}>\n        {template_details.name}\n      </a>\n    );\n  };\n\n  const labelsAndValues = {\n    Name: name || undefined,\n    'Automation Type': category || undefined,\n    Description: description || undefined,\n    'Manual Time': manual_time || undefined,\n    'Run on hosts': hosts || undefined,\n    Frequency: frequency_period || undefined,\n    Template: template_id ? showTemplate(template_details) : undefined,\n    'Automation status':\n      automation_status.status === 'successful' ? (\n        <Label variant=\"outline\" color=\"green\" icon={<CheckCircleIcon />}>\n          Running\n        </Label>\n      ) : (\n        <Label variant=\"outline\" color=\"red\" icon={<ExclamationCircleIcon />}>\n          Not Running\n        </Label>\n      ),\n    'Last updated': modified ? <em>{formatDateTime(modified)}</em> : undefined,\n  };\n\n  const { request: deletePlans, error: deleteError } = useRequest(\n    useCallback(async () => {\n      await deletePlan({ params: { id: id } });\n      history.push(`/savings-planner`);\n    }, [id, history])\n  );\n\n  const {\n    result: { isDeleteDisabled },\n    error: deleteDetailsError,\n    request: fetchDeleteDetails,\n  } = useRequest(\n    useCallback(async () => {\n      const { results: deleteDetails, error } =\n        await getRelatedResourceDeleteCounts(\n          relatedResourceDeleteRequests.savingsPlan(plans[0], readPlan)\n        );\n      if (error) {\n        throw new Error(error);\n      }\n      if (deleteDetails) {\n        return { isDeleteDisabled: true };\n      }\n      return { isDeleteDisabled: false };\n    }, [plans[0]]),\n    { isDeleteDisabled: false }\n  );\n\n  useEffect(() => {\n    fetchDeleteDetails();\n  }, [fetchDeleteDetails]);\n  const { error, dismissError } = useDismissableError(\n    deleteError || deleteDetailsError\n  );\n\n  return (\n    <>\n      {plans && (\n        <>\n          <CardBody>\n            <RoutedTabs tabsArray={tabsArray} />\n            <div style={{ padding: '1rem' }}>\n              <DescriptionList isHorizontal columnModifier={{ lg: '3Col' }}>\n                {Object.keys(labelsAndValues).map(\n                  (key, i) =>\n                    labelsAndValues[key] !== undefined && (\n                      <DescriptionListGroup key={i}>\n                        <DescriptionListTerm>{key}</DescriptionListTerm>\n                        <DescriptionListDescription>\n                          {labelsAndValues[key]}\n                        </DescriptionListDescription>\n                      </DescriptionListGroup>\n                    )\n                )}\n              </DescriptionList>\n              {tasks.length > 0 && (\n                <>\n                  <Divider style={{ padding: '1rem' }} component=\"div\" />\n                  <DescriptionListTerm>Tasks</DescriptionListTerm>\n                  <TextContent>\n                    <List component=\"ol\" type=\"1\">\n                      {tasks.map(({ id, task }) => (\n                        <ListItem key={id}>{task}</ListItem>\n                      ))}\n                    </List>\n                  </TextContent>\n                </>\n              )}\n            </div>\n          </CardBody>\n          <CardFooter>\n            <CardActionsRow>\n              <Button\n                key=\"edit-plan-button\"\n                variant=\"primary\"\n                aria-label=\"Edit plan\"\n                onClick={() => {\n                  history.push({\n                    pathname: `${Paths.savingsPlan}${id}/edit`,\n                  });\n                }}\n              >\n                Edit\n              </Button>\n              <DeleteButton\n                key={'delete-plan-button'}\n                name={name}\n                modalTitle={'Delete Plan'}\n                onConfirm={deletePlans}\n                disabledTooltip={\n                  isDeleteDisabled && 'This plan cannot be deleted'\n                }\n              >\n                {'Delete'}\n              </DeleteButton>\n            </CardActionsRow>\n            {error && (\n              <AlertModal\n                isOpen={error}\n                onClose={dismissError}\n                title={'Error'}\n                variant=\"error\"\n              >\n                <ErrorDetail error={error} />\n              </AlertModal>\n            )}\n          </CardFooter>\n        </>\n      )}\n    </>\n  );\n};\n\nDetailsTab.propTypes = {\n  plans: PropTypes.array,\n  tabsArray: PropTypes.array,\n};\n\nexport default DetailsTab;\n","var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Card, CardBody, ToggleGroup, ToggleGroupItem } from '@patternfly/react-core';\nimport { functions, ChartRenderer, ChartKind, ChartThemeColor, ChartType, ChartTopLevelType, ApiType, } from 'react-data-explorer';\nimport RoutedTabs from '../../Components/RoutedTabs';\nimport AutomationFormula from \"../AutomationCalculator/AutomationFormula\";\nimport TotalSavings from \"../AutomationCalculator/TotalSavings\";\nvar TopCard = styled(Card)(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  min-height: 500px;\\n\"], [\"\\n  min-height: 500px;\\n\"])));\nvar Wrapper = styled.div(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  display: grid;\\n  grid-template-columns: 5fr 2fr;\\n  height: 100%;\\n\"], [\"\\n  display: grid;\\n  grid-template-columns: 5fr 2fr;\\n  height: 100%;\\n\"])));\nvar WrapperLeft = styled.div(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n  flex: 5;\\n  display: flex;\\n  flex-direction: column;\\n  overflow: auto;\\n\"], [\"\\n  flex: 5;\\n  display: flex;\\n  flex-direction: column;\\n  overflow: auto;\\n\"])));\nvar WrapperRight = styled.div(templateObject_4 || (templateObject_4 = __makeTemplateObject([\"\\n  flex: 2;\\n  height: 600;\\n  display: flex;\\n  flex-direction: column;\\n\"], [\"\\n  flex: 2;\\n  height: 600;\\n  display: flex;\\n  flex-direction: column;\\n\"])));\nvar LegendGroup = styled.div(templateObject_5 || (templateObject_5 = __makeTemplateObject([\"\\n  display: flex;\\n  align-items: center;\\n\"], [\"\\n  display: flex;\\n  align-items: center;\\n\"])));\nvar LegendIcon = styled.div(templateObject_6 || (templateObject_6 = __makeTemplateObject([\"\\n  height: 10px;\\n  width: 10px;\\n  margin-right: 10px;\\n  background: \", \";\\n\"], [\"\\n  height: 10px;\\n  width: 10px;\\n  margin-right: 10px;\\n  background: \", \";\\n\"])), function (props) { return props.color; });\nvar LegendDescription = styled.div(templateObject_7 || (templateObject_7 = __makeTemplateObject([\"\\n  flex: 1;\\n\"], [\"\\n  flex: 1;\\n\"])));\n;\n;\nvar getChartData = function (data) {\n    var years = ['initial', 'year1', 'year2', 'year3'];\n    var statsData = years.map(function (year) { return ({\n        year: year,\n        total_costs: data.projections.monetary_stats.total_costs[year] * -1,\n        total_benefits: data.projections.monetary_stats.total_benefits[year],\n        cumulative_net_benefits: data.projections.monetary_stats.cumulative_net_benefits[year],\n        total_hours_spent_risk_adjusted: data.projections.time_stats.total_hours_spent_risk_adjusted[year] * -1,\n        total_hours_saved: data.projections.time_stats.total_hours_saved[year],\n        cumulative_time_net_benefits: data.projections.time_stats.cumulative_time_net_benefits[year]\n    }); });\n    return { items: statsData, type: ApiType.nonGrouped, response_type: '' };\n};\nvar StatisticsTab = function (_a) {\n    var tabsArray = _a.tabsArray, data = _a.data;\n    var types = ['Money', 'Time'];\n    var _b = useState(types[0]), chartType = _b[0], setChartType = _b[1];\n    var computeTotalSavings = function (d) {\n        return chartType == 'Money'\n            ? d.projections.monetary_stats.cumulative_net_benefits.year3\n            : d.projections.time_stats.cumulative_time_net_benefits.year3;\n    };\n    var barChartData = {\n        charts: [\n            {\n                id: 1000,\n                kind: ChartKind.wrapper,\n                type: ChartTopLevelType.chart,\n                parent: null,\n                props: {\n                    height: 600,\n                    domainPadding: {\n                        y: 20,\n                        x: 100\n                    },\n                    themeColor: ChartThemeColor.gray,\n                    style: {\n                        parent: {\n                            border: '1px solid gray'\n                        }\n                    },\n                },\n                tooltip: {\n                    cursor: true\n                },\n                xAxis: {\n                    label: 'Time',\n                },\n                yAxis: {\n                    label: chartType == 'Money' ? 'Money Saved' : 'Hours Saved',\n                    style: {\n                        grid: { stroke: '#D2D2D2' },\n                    },\n                },\n            },\n            {\n                id: 1001,\n                kind: ChartKind.stack,\n                parent: 1000,\n                props: {},\n            },\n            {\n                id: 1101,\n                kind: ChartKind.simple,\n                type: ChartType.bar,\n                parent: 1001,\n                props: {\n                    x: 'year',\n                    y: chartType == 'Money' ? 'total_costs' : 'total_hours_spent_risk_adjusted',\n                    barRatio: 0.8,\n                    barWidth: 0,\n                    style: {\n                        data: {\n                            fill: '#8B8D8F',\n                            width: 120,\n                        },\n                    },\n                },\n            },\n            {\n                id: 1102,\n                kind: ChartKind.simple,\n                type: ChartType.bar,\n                parent: 1001,\n                props: {\n                    x: 'year',\n                    y: chartType == 'Money' ? 'total_benefits' : 'total_hours_saved',\n                    barRatio: 0.8,\n                    barWidth: 0,\n                    style: {\n                        data: {\n                            fill: chartType == 'Money' ? '#81C46B' : '#0063CF',\n                            width: 120,\n                        },\n                    },\n                },\n            },\n            {\n                id: 1002,\n                kind: ChartKind.simple,\n                type: ChartType.line,\n                parent: 1000,\n                props: {\n                    x: 'year',\n                    y: chartType === 'Money' ? 'cumulative_net_benefits' : 'cumulative_time_net_benefits',\n                    style: {\n                        data: {\n                            stroke: '#EE7A00',\n                            strokeWidth: 5\n                        },\n                    },\n                },\n            },\n        ],\n        functions: __assign(__assign({}, functions), { fetchFnc: function () { return new Promise(function (resolve) { resolve(getChartData(data)); }); } }),\n    };\n    var toggleButton = function (type) {\n        setChartType(type);\n    };\n    var renderButtons = function () {\n        return (React.createElement(ToggleGroup, { \"aria-label\": \"toggleButton\" }, types.map(function (type) { return (React.createElement(ToggleGroupItem, { key: type, text: type, buttonId: type, isSelected: chartType === type, onChange: function () { return toggleButton(type); } })); })));\n    };\n    var renderLeft = function () { return (React.createElement(WrapperLeft, null,\n        React.createElement(Card, null,\n            React.createElement(\"div\", null,\n                React.createElement(\"div\", { style: { padding: '1rem', 'float': 'left' } }, data.name),\n                React.createElement(\"div\", { style: { padding: '1rem', 'float': 'right' } }, renderButtons())),\n            React.createElement(CardBody, null,\n                React.createElement(ChartRenderer, { data: barChartData }))))); };\n    var renderRight = function () { return (React.createElement(WrapperRight, null,\n        React.createElement(TotalSavings, { totalSavings: computeTotalSavings(data) }),\n        React.createElement(Card, null,\n            React.createElement(CardBody, null,\n                React.createElement(LegendGroup, null,\n                    React.createElement(LegendIcon, { color: chartType == 'Money' ? '#81C46B' : '#0063CF' }),\n                    React.createElement(LegendDescription, null, \"Operation savings efficiency from Ansible template\")),\n                React.createElement(LegendGroup, null,\n                    React.createElement(LegendIcon, { color: \"#EE7A00\" }),\n                    React.createElement(LegendDescription, null, \"Cumulative net benefits\")),\n                React.createElement(LegendGroup, null,\n                    React.createElement(LegendIcon, { color: \"#58595c\" }),\n                    React.createElement(LegendDescription, null, \"Costs\")))),\n        React.createElement(AutomationFormula, null))); };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(TopCard, null,\n            React.createElement(RoutedTabs, { tabsArray: tabsArray }),\n            React.createElement(Wrapper, { className: \"statistics-wrapper\" },\n                renderLeft(),\n                renderRight()))));\n};\nStatisticsTab.propTypes = {\n    tabsArray: PropTypes.arrayOf(PropTypes.exact({\n        id: PropTypes.number,\n        link: PropTypes.string,\n        name: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    })).isRequired,\n    // This is really hard to modell, we can just comment out so we don't get \n    // runtime warnings but TS should make it pretty safe to use as long as it is not\n    // dependent on user input which we sepcify in TS as 'any'\n    // data: PropTypes.object\n};\nexport default StatisticsTab;\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport useApi from '../../../Utilities/useApi';\n\nimport { readPlanOptions } from '../../../Api';\n\nimport Form from '../Shared/Form';\n\nconst Edit = ({ data }) => {\n  const [options, setOptions] = useApi({});\n\n  useEffect(() => {\n    setOptions(readPlanOptions());\n  }, []);\n\n  const title = 'Edit plan';\n\n  return (\n    <>\n      {options.isSuccess && (\n        <Form title={title} options={options} data={data} />\n      )}\n    </>\n  );\n};\n\nEdit.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default Edit;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, Route, Switch } from 'react-router-dom';\nimport { CaretLeftIcon } from '@patternfly/react-icons';\nimport { Card } from '@patternfly/react-core';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\n\nimport DetailsTab from './DetailsTab';\nimport StatisticsTab from './StatisticsTab';\nimport SavingsPlanner from './SavingsPlanner';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nimport Breadcrumbs from '../../Components/Breadcrumbs';\n\nimport { preflightRequest, readPlan } from '../../Api';\n\nimport useApi from '../../Utilities/useApi';\n\nimport SavingsPlanEdit from './Edit';\n\nconst SavingsPlan = () => {\n  let { id } = useParams();\n  const [preflightError, setPreFlightError] = useState(null);\n  let pageTitle = 'Details';\n  if (location.pathname.indexOf('/statistics') !== -1) {\n    pageTitle = 'Statistics';\n  } else if (location.pathname.indexOf('/edit') !== -1) {\n    pageTitle = 'Edit plan';\n  }\n  const [selectedId, setSelectedId] = useState(id);\n  const [\n    {\n      isSuccess,\n      error,\n      data: { items: plans = [] },\n    },\n    setData,\n  ] = useApi({ items: [] });\n  const queryParams = { id: [selectedId] };\n\n  useEffect(() => {\n    setSelectedId(id);\n    preflightRequest().catch((error) => {\n      setPreFlightError({ preflightError: error });\n    });\n    const fetchEndpoints = () => {\n      setData(readPlan({ params: queryParams }));\n    };\n\n    fetchEndpoints();\n  }, []);\n\n  const tabsArray = [\n    {\n      id: 0,\n      name: (\n        <>\n          <CaretLeftIcon />\n          {'Back to Plans'}\n        </>\n      ),\n      link: `/savings-planner`,\n    },\n    { id: 1, name: 'Details', link: `/savings-planner/${selectedId}/details` },\n    {\n      id: 2,\n      name: 'Statistics',\n      link: `/savings-planner/${selectedId}/statistics`,\n    },\n  ];\n\n  const breadcrumbUrl = `/savings-planner/${selectedId}`;\n  const breadcrumbsItems = isSuccess\n    ? [\n        { title: 'Savings Planner', navigate: '/savings-planner' },\n        { title: plans[0].name, navigate: breadcrumbUrl },\n      ]\n    : [];\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n  return (\n    <>\n      {error && (\n        <>\n          <ApiErrorState message={error.error} />\n        </>\n      )}\n      {isSuccess && (\n        <>\n          <PageHeader>\n            <Breadcrumbs items={breadcrumbsItems} />\n            <PageHeaderTitle title={pageTitle} />\n          </PageHeader>\n          <Main>\n            <Card>\n              <Switch>\n                <Route path=\"/savings-planner/:id/statistics\">\n                  <StatisticsTab\n                    tabsArray={tabsArray}\n                    data={plans[0]}\n                    queryParams={queryParams}\n                  />\n                </Route>\n                <Route path=\"/savings-planner/:id/details\">\n                  <DetailsTab plans={plans} tabsArray={tabsArray} />\n                </Route>\n                <Route path=\"/savings-planner/:id/edit\">\n                  <SavingsPlanEdit data={plans[0]} />\n                </Route>\n                <Route path=\"/savings-planner/:id\">\n                  <DetailsTab plans={plans} tabsArray={tabsArray} />\n                </Route>\n                <Route exact path=\"/savings-planner\">\n                  <SavingsPlanner />\n                </Route>\n              </Switch>\n            </Card>\n          </Main>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default SavingsPlan;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { Paths } from '../../paths';\n\nimport { formatDateTime } from '../../Utilities/helpers';\n\nimport {\n  Card,\n  CardHeader,\n  CardHeaderMain,\n  CardActions,\n  CardTitle,\n  CardBody,\n  CardFooter,\n  Checkbox,\n  Dropdown,\n  DropdownItem,\n  KebabToggle,\n  Label,\n} from '@patternfly/react-core';\n\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\nimport styled from 'styled-components';\nimport { stringify } from 'query-string';\n\nimport { Link, useRouteMatch } from 'react-router-dom';\n// import useSelected from \"../../Utilities/useSelected\";\n\nconst CardLabel = styled.span`\n  margin-right: 5px;\n`;\n\nconst PlanCard = ({\n  isSuccess,\n  plan,\n  selected = [],\n  handleSelect = () => {},\n}) => {\n  const {\n    id,\n    automation_status,\n    category,\n    description,\n    frequency_period,\n    modified,\n    name,\n    template_details,\n  } = plan;\n  const [isCardKebabOpen, setIsCardKebabOpen] = useState(false);\n\n  const match = useRouteMatch();\n  let history = useHistory();\n\n  const redirectToJobExplorer = (templateId) => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      quick_date_range: 'last_30_days',\n      status: ['failed', 'successful'],\n      template_id: [templateId],\n    };\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const renderTemplateLink = (template) => {\n    return template && isSuccess ? (\n      <a onClick={() => redirectToJobExplorer(template.id)}>{template.name}</a>\n    ) : null;\n  };\n\n  const kebabDropDownItems = [\n    <React.Fragment key={id}>\n      <DropdownItem key=\"edit\" onClick={() => {}} position=\"right\">\n        Edit\n      </DropdownItem>\n      <DropdownItem key=\"link\" onClick={() => {}} position=\"right\">\n        Link template\n      </DropdownItem>\n    </React.Fragment>,\n  ];\n\n  return (\n    <Card isHoverable isCompact>\n      <CardHeader>\n        <CardHeaderMain>\n          <CardTitle>\n            <Link to={`${match.url}/${id}`}>{name}</Link>\n          </CardTitle>\n        </CardHeaderMain>\n        <CardActions>\n          <Dropdown\n            onSelect={() => {}}\n            toggle={\n              <KebabToggle\n                onToggle={() => setIsCardKebabOpen(!isCardKebabOpen)}\n              />\n            }\n            isOpen={isCardKebabOpen}\n            isPlain\n            dropdownItems={kebabDropDownItems}\n            position={'right'}\n          />\n          <Checkbox\n            onChange={() => handleSelect(plan)}\n            isChecked={selected.some(row => row.id === plan.id)}\n            aria-label=\"card checkbox\"\n            id=\"check-1\"\n            name=\"check1\"\n          />\n        </CardActions>\n      </CardHeader>\n      <CardBody>\n        {description ? <p>{description}</p> : null}\n        <div>\n          <CardLabel>Frequency</CardLabel>{' '}\n          {frequency_period ? frequency_period : <em>None</em>}\n        </div>\n        <div>\n          <CardLabel>Template</CardLabel>{' '}\n          {template_details ? (\n            renderTemplateLink(template_details)\n          ) : (\n            <em>None</em>\n          )}\n        </div>\n        <div>\n          <CardLabel>Automation status</CardLabel>\n          {automation_status.status === 'successful' ? (\n            <Label variant=\"outline\" color=\"green\" icon={<CheckCircleIcon />}>\n              Running\n            </Label>\n          ) : (\n            <Label\n              variant=\"outline\"\n              color=\"red\"\n              icon={<ExclamationCircleIcon />}\n            >\n              Not Running\n            </Label>\n          )}\n        </div>\n        <div>\n          <CardLabel>Last updated</CardLabel>{' '}\n          <em>{formatDateTime(modified)}</em>\n        </div>\n      </CardBody>\n      <CardFooter>\n        <Label>{category}</Label>\n      </CardFooter>\n    </Card>\n  );\n};\n\nPlanCard.propTypes = {\n  isSuccess: PropTypes.bool.isRequired,\n  selected: PropTypes.array,\n  handleSelect: PropTypes.func,\n  plan: PropTypes.object,\n};\n\nexport default PlanCard;\n","import React, { useContext, useEffect, useState } from 'react';\nimport {\n  func,\n  bool,\n  node,\n  number,\n  string,\n  arrayOf,\n  shape,\n  checkPropTypes,\n} from 'prop-types';\nimport styled from 'styled-components';\nimport {\n  Alert,\n  Badge,\n  Button,\n  DropdownItem,\n  Tooltip,\n} from '@patternfly/react-core';\nimport AlertModal from '../AlertModal';\n\nimport { getRelatedResourceDeleteCounts } from '../../Utilities/getRelatedResourceDeleteDetails';\n\nimport ErrorDetail from '../ErrorDetail';\n\nconst WarningMessage = styled(Alert)`\n  margin-top: 10px;\n`;\n\nconst Label = styled.span`\n  && {\n    margin-right: 10px;\n  }\n`;\n\nconst requiredField = props => {\n  const { name, username, image } = props;\n  if (!name && !username && !image) {\n    return new Error(\n      `One of 'name', 'username' or 'image' is required by ItemToDelete component.`\n    );\n  }\n  if (name) {\n    checkPropTypes(\n      {\n        name: string,\n      },\n      { name: props.name },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  if (username) {\n    checkPropTypes(\n      {\n        username: string,\n      },\n      { username: props.username },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  if (image) {\n    checkPropTypes(\n      {\n        image: string,\n      },\n      { image: props.image },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  return null;\n};\n\nconst ItemToDelete = shape({\n  id: number.isRequired,\n  name: requiredField,\n  username: requiredField,\n  image: requiredField,\n});\n\nfunction ToolbarDeleteButton({\n  itemsToDelete,\n  pluralizedItemName,\n  errorMessage,\n  onDelete,\n  deleteDetailsRequests,\n  warningMessage,\n  deleteMessage,\n  cannotDelete,\n}) {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [deleteDetails, setDeleteDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [deleteMessageError, setDeleteMessageError] = useState();\n  const handleDelete = () => {\n    onDelete();\n    toggleModal();\n  };\n\n  const toggleModal = async isOpen => {\n    setIsLoading(true);\n    setDeleteDetails(null);\n    if (\n      isOpen &&\n      itemsToDelete.length === 1 &&\n      deleteDetailsRequests?.length > 0\n    ) {\n      const { results, error } = await getRelatedResourceDeleteCounts(\n        deleteDetailsRequests\n      );\n\n      if (error) {\n        setDeleteMessageError(error);\n      } else {\n        setDeleteDetails(results);\n      }\n    }\n    setIsLoading(false);\n    setIsModalOpen(isOpen);\n  };\n\n  const renderTooltip = () => {\n    const itemsUnableToDelete = itemsToDelete\n      .filter(cannotDelete)\n      .map(item => item.name || item.username)\n      .join(', ');\n    if (itemsToDelete.some(cannotDelete)) {\n      return (\n        <div>\n          {errorMessage ? (\n            <>\n              <span>{errorMessage}</span>\n              <span>{`: ${itemsUnableToDelete}`}</span>\n            </>\n          ) : (\n            `You do not have permission to delete ${pluralizedItemName}: ${itemsUnableToDelete}`\n          )}\n        </div>\n      );\n    }\n    if (itemsToDelete.length) {\n      return 'Delete';\n    }\n    return 'Select a plan to delete';\n  };\n\n  const modalTitle = `Delete ${pluralizedItemName}?`;\n\n  const isDisabled =\n    itemsToDelete.length === 0 || itemsToDelete.some(cannotDelete);\n\n  const buildDeleteWarning = () => {\n    const deleteMessages = [];\n    if (warningMessage) {\n      deleteMessages.push(warningMessage);\n    }\n    if (deleteMessage) {\n      if (deleteDetails || itemsToDelete.length > 1) {\n        deleteMessages.push(deleteMessage);\n      }\n    }\n\n    return (\n      <div>\n        {deleteMessages.map(message => (\n          <div aria-label={message} key={message}>\n            {message}\n          </div>\n        ))}\n        {deleteDetails &&\n          Object.entries(deleteDetails).map(([key, value]) => (\n            <div key={key} aria-label={`${key}: ${value}`}>\n              <Label>{key}</Label>\n              <Badge>{value}</Badge>\n            </div>\n          ))}\n      </div>\n    );\n  };\n\n  if (deleteMessageError) {\n    return (\n      <AlertModal\n        isOpen={deleteMessageError}\n        title={'Error!'}\n        onClose={() => {\n          toggleModal(false);\n          setDeleteMessageError();\n        }}\n      >\n        <ErrorDetail error={deleteMessageError} />\n      </AlertModal>\n    );\n  }\n  const shouldShowDeleteWarning =\n    warningMessage ||\n    (itemsToDelete.length === 1 && deleteDetails) ||\n    (itemsToDelete.length > 1 && deleteMessage);\n\n  return (\n    <>\n      <Tooltip content={renderTooltip()} position=\"top\">\n        <Button\n          variant=\"secondary\"\n          ouiaId=\"delete-button\"\n          spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n          aria-label={'Delete'}\n          onClick={() => toggleModal(true)}\n          isDisabled={isDisabled}\n        >\n          {'Delete'}\n        </Button>\n      </Tooltip>\n\n      {isModalOpen && (\n        <AlertModal\n          variant=\"danger\"\n          title={modalTitle}\n          isOpen={isModalOpen}\n          onClose={() => toggleModal(false)}\n          actions={[\n            <Button\n              ouiaId=\"delete-modal-confirm\"\n              key=\"delete\"\n              variant=\"danger\"\n              aria-label={'confirm delete'}\n              isDisabled={Boolean(\n                deleteDetails //&& itemsToDelete[0]?.type === 'credential_type'\n              )}\n              onClick={handleDelete}\n            >\n              {'Delete'}\n            </Button>,\n            <Button\n              key=\"cancel\"\n              variant=\"link\"\n              aria-label={'cancel delete'}\n              onClick={() => toggleModal(false)}\n            >\n              {'Cancel'}\n            </Button>,\n          ]}\n        >\n          <div>{'This action will delete the following:'}</div>\n          {itemsToDelete.map(item => (\n            <span key={item.id}>\n              <strong>{item.name || item.username || item.image}</strong>\n              <br />\n            </span>\n          ))}\n          {shouldShowDeleteWarning && (\n            <WarningMessage\n              variant=\"warning\"\n              isInline\n              title={buildDeleteWarning()}\n            />\n          )}\n        </AlertModal>\n      )}\n    </>\n  );\n}\n\nToolbarDeleteButton.propTypes = {\n  onDelete: func.isRequired,\n  itemsToDelete: arrayOf(ItemToDelete).isRequired,\n  pluralizedItemName: string,\n  warningMessage: node,\n  cannotDelete: func,\n};\n\nToolbarDeleteButton.defaultProps = {\n  pluralizedItemName: 'Items',\n  warningMessage: null,\n  cannotDelete: item => !item,\n};\n\nexport default ToolbarDeleteButton;\n","import React, {useCallback, useEffect, useState} from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { deletePlan, preflightRequest, readPlanOptions, readPlans } from '../../Api';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport Pagination from '../../Components/Pagination';\nimport PlanCard from './PlanCard';\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { savingsPlanner } from '../../Utilities/constants';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nimport { Button, Gallery, PaginationVariant } from '@patternfly/react-core';\n\nimport ToolbarDeleteButton from '../../Components/Toolbar/ToolbarDeleteButton';\nimport useSelected from '../../Utilities/useSelected';\nimport { useDeleteItems } from \"../../Utilities/useRequest\";\nimport ErrorDetail from \"../../Components/ErrorDetail\";\nimport AlertModal from \"../../Components/AlertModal\";\n\n\n// TODO: update to fining this out from API RBAC\nconst canAddPlan = true;\nconst canDeletePlan = true;\n\nconst SavingsPlanner = () => {\n  const history = useHistory();\n  const { pathname } = useLocation();\n\n  const { queryParams, setFromPagination, setFromToolbar } = useQueryParams(\n    savingsPlanner.defaultParams\n  );\n  const [\n    {\n      isLoading,\n      isSuccess,\n      error,\n      data: { meta = {}, items: data = [] },\n    },\n    setData,\n  ] = useApi({ meta: {}, items: [] });\n  const [options, setOptions] = useApi({});\n  const [preflightError, setPreFlightError] = useState(null);\n\n  const combinedOptions = {\n    ...options.data,\n    name: [{ key: 'name', value: null }],\n  };\n\n  const fetchEndpoints = () => {\n    preflightRequest().catch((error) => {\n      setPreFlightError({ preflightError: error });\n    });\n    setData(readPlans({ params: queryParams }));\n    setOptions(readPlanOptions());\n  };\n\n  useEffect(() => {\n    fetchEndpoints();\n  }, [queryParams]);\n\n  const { selected, isAllSelected, handleSelect, setSelected } = useSelected(\n    data\n  );\n\n  const {\n    isLoading: deleteLoading,\n    deletionError,\n    deleteItems: deleteItems,\n    clearDeletionError,\n  } = useDeleteItems(\n    useCallback(async () => {\n      return Promise.all(\n        selected.map((plan) => deletePlan({ params: {id: plan.id }}))\n      );\n    }, [selected]),\n    {\n      qsConfig: queryParams,\n      allItemsSelected: isAllSelected,\n      fetchItems: fetchEndpoints,\n    }\n  );\n\n  const handleDelete = async () => {\n    await deleteItems()\n    setSelected([]);\n  };\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Savings Planner'} />\n        <FilterableToolbar\n          categories={combinedOptions}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n          additionalControls={[\n            ...(canAddPlan\n              ? [\n                  <Button\n                    key=\"add-plan-button\"\n                    variant=\"primary\"\n                    aria-label=\"Add plan\"\n                    onClick={() => {\n                      history.push({\n                        pathname: `${pathname}/add`,\n                      });\n                    }}\n                  >\n                    Add plan\n                  </Button>,\n                ]\n              : []),\n              (canDeletePlan &&\n                <ToolbarDeleteButton\n                  key=\"delete-plan-button\"\n                  onDelete={handleDelete}\n                  itemsToDelete={selected}\n                  pluralizedItemName={'Savings plan'}\n                />\n              )\n          ]}\n          pagination={\n            <Pagination\n              count={meta?.total_count}\n              params={{\n                limit: queryParams.limit,\n                offset: queryParams.offset,\n              }}\n              setPagination={setFromPagination}\n              isCompact\n            />\n          }\n        />\n      </PageHeader>\n      {preflightError && (\n        <Main>\n          <EmptyState {...preflightError} />\n        </Main>\n      )}\n      {error && (\n        <Main style={{ height: '100vh' }}>\n          <ApiErrorState message={error.error} />\n        </Main>\n      )}\n      {(isLoading || deleteLoading) && (\n        <Main style={{ height: '100vh' }}>\n          <LoadingState />\n        </Main>\n      )}\n      {isSuccess && (\n        <Main style={{ height: '100vh' }}>\n          <Gallery hasGutter>\n            {options.isSuccess &&\n              data.map((datum) => (\n                <PlanCard\n                  key={datum.id}\n                  isSuccess={options.isSuccess}\n                  selected={selected}\n                  plan={datum}\n                  handleSelect={handleSelect}\n                />\n              ))}\n          </Gallery>\n        </Main>\n      )}\n      <Pagination\n        count={meta?.total_count}\n        params={{\n          limit: queryParams.limit,\n          offset: queryParams.offset,\n        }}\n        setPagination={setFromPagination}\n        variant={PaginationVariant.bottom}\n        isSticky\n      />\n      {deletionError && (\n          <AlertModal\n            aria-label={'Deletion error'}\n            isOpen={deletionError}\n            onClose={clearDeletionError}\n            title={'Error'}\n            variant=\"error\"\n          >\n            {'Failed to delete one or more plans.'}\n            <ErrorDetail error={deletionError} />\n          </AlertModal>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default SavingsPlanner;\n","import { useState } from 'react';\n\n/**\n * useSelected hook provides a way to read and update a selected list\n * Param: array of list items\n * Returns: {\n *  selected: array of selected list items\n *  isAllSelected: boolean that indicates if all items are selected\n *  handleSelect: function that adds and removes items from selected list\n *  setSelected: setter function\n * }\n */\n\nexport default function useSelected(list = []) {\n  const [selected, setSelected] = useState([]);\n  const isAllSelected = selected.length > 0 && selected.length === list.length;\n\n  const handleSelect = row => {\n    if (selected.some(s => s.id === row.id)) {\n      setSelected(prevState => [...prevState.filter(i => i.id !== row.id)]);\n    } else {\n      setSelected(prevState => [...prevState, row]);\n    }\n  };\n  return { selected, isAllSelected, handleSelect, setSelected };\n}\n","export const actions = {\n  SET_NAME: 'SET_NAME',\n  SET_CATEGORY: 'SET_CATEGORY',\n  SET_DESCRIPTION: 'SET_DESCRIPTION',\n  SET_MANUAL_TIME: 'SET_MANUAL_TIME',\n  SET_HOSTS: 'SET_HOSTS',\n  SET_FREQUENCY_PERIOD: 'SET_FREQUENCY_PERIOD',\n  SET_TASKS: 'SET_TASKS',\n  SET_TEMPLATE_ID: 'SET_TEMPLATE_ID',\n};\n","import { useReducer } from 'react';\n\nimport { actions } from './constants';\n\nconst formatPayload = (data) => {\n  if (data.template_id === -2) {\n    delete data.template_id;\n  }\n\n  data.tasks = data.tasks.map((task, index) => ({\n    task,\n    task_order: index + 1,\n  }));\n\n  // these two are fields the api expects but we don't\n  // have form elements for in the MVP.\n  data.hourly_rate = 50;\n  data.frequency_per_period = 1;\n\n  return data;\n};\n\nconst convertTasks = (tasks = []) => {\n  if (tasks?.length) {\n    return tasks\n      .sort((a, b) => a.task_order - b.task_order)\n      .map(({ task }) => task);\n  }\n  return undefined;\n};\n\nconst usePlanData = (initial) => {\n  const formReducer = (state, { type, value }) => {\n    switch (type) {\n      /* v1 api reducers */\n      case actions.SET_NAME:\n        return {\n          ...state,\n          name: value,\n        };\n      case actions.SET_CATEGORY:\n        return {\n          ...state,\n          category: value,\n        };\n      case actions.SET_DESCRIPTION:\n        return {\n          ...state,\n          description: value,\n        };\n      case actions.SET_MANUAL_TIME:\n        return {\n          ...state,\n          manual_time: value,\n        };\n\n      case actions.SET_HOSTS:\n        return {\n          ...state,\n          hosts: value,\n        };\n      case actions.SET_FREQUENCY_PERIOD:\n        return {\n          ...state,\n          frequency_period: value,\n        };\n      case actions.SET_TASKS:\n        return {\n          ...state,\n          tasks: value,\n        };\n      case actions.SET_TEMPLATE_ID:\n        return {\n          ...state,\n          template_id: value,\n        };\n      default:\n        throw new Error(\n          `usePlanData reducer action type ${type} was not found.`\n        );\n    }\n  };\n\n  const [formData, dispatch] = useReducer(formReducer, {\n    name: initial?.name || '',\n    category: initial?.category || 'system',\n    description: initial?.description || '',\n    manual_time: initial?.manual_time || 240,\n    hosts: initial?.hosts || 1,\n    frequency_period: initial?.frequency_period || 'weekly',\n    tasks: convertTasks(initial?.tasks) || [],\n    template_id: initial?.template_id || -2,\n  });\n\n  return {\n    formData,\n    requestPayload: formatPayload({ ...formData }),\n    dispatch,\n  };\n};\n\nexport default usePlanData;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Form,\n  FormGroup,\n  Grid,\n  Select,\n  SelectOption,\n  TextInput,\n} from '@patternfly/react-core';\n\nimport { actions } from './constants';\n\nconst Details = ({ options, formData, dispatch }) => {\n  const { name, category, description, manual_time, hosts, frequency_period } =\n    formData;\n\n  const [categoryIsOpen, setCategoryIsOpen] = useState(false);\n  const [manualTimeIsOpen, setManualTimeIsOpen] = useState(false);\n  const [frequencyPeriodIsOpen, setFrequencyPeriodIsOpen] = useState(false);\n\n  return (\n    <Form>\n      {options?.data && (\n        <Grid hasGutter md={6}>\n          <FormGroup\n            label=\"What do you want to automate?\"\n            isRequired\n            fieldId=\"name-field\"\n          >\n            <TextInput\n              isRequired\n              placeholder=\"Example: Provision NGINX server\"\n              type=\"text\"\n              id=\"name-field\"\n              name=\"name\"\n              value={name}\n              onChange={(newName) =>\n                dispatch({\n                  type: actions.SET_NAME,\n                  value: newName,\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"What type of task is it?\"\n            isRequired\n            fieldId=\"category-field\"\n          >\n            <Select\n              id=\"category-field\"\n              isOpen={categoryIsOpen}\n              variant={'single'}\n              aria-label={'Plan category selector'}\n              onToggle={() => setCategoryIsOpen(!categoryIsOpen)}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_CATEGORY,\n                  value: selection,\n                });\n                setCategoryIsOpen(false);\n              }}\n              selections={category}\n            >\n              {(options.data?.category || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n          <FormGroup\n            label=\"Enter a description of your automation plan\"\n            fieldId=\"description-field\"\n          >\n            <TextInput\n              type=\"text\"\n              placeholder=\"Place description here\"\n              id=\"description-field\"\n              name=\"description\"\n              value={description}\n              onChange={(newDescription) =>\n                dispatch({\n                  type: actions.SET_DESCRIPTION,\n                  value: newDescription,\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"How long does it take to do this manually?\"\n            fieldId=\"manual-time-field\"\n          >\n            <Select\n              id=\"manual-time-field\"\n              isOpen={manualTimeIsOpen}\n              variant={'single'}\n              placeholderText=\"Select amount\"\n              aria-label={'Plan time selector'}\n              onToggle={() => setManualTimeIsOpen(!manualTimeIsOpen)}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_MANUAL_TIME,\n                  value: selection,\n                });\n                setManualTimeIsOpen(false);\n              }}\n              selections={manual_time}\n            >\n              {(options.data?.manual_time || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n          <FormGroup\n            label=\"How many hosts do you plan to run this on?\"\n            fieldId=\"hosts-field\"\n          >\n            <TextInput\n              type=\"number\"\n              placeholder=\"Enter number of hosts\"\n              id=\"hosts-field\"\n              name=\"hosts\"\n              value={hosts}\n              onChange={(newHosts) =>\n                dispatch({\n                  type: actions.SET_HOSTS,\n                  value: newHosts,\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"How often do you do this?\"\n            fieldId=\"frequency-period-field\"\n          >\n            <Select\n              id=\"frequency-period-field\"\n              isOpen={frequencyPeriodIsOpen}\n              variant={'single'}\n              placeholderText=\"Select frequency period\"\n              aria-label={'Plan frequency period selector'}\n              onToggle={() => {\n                setFrequencyPeriodIsOpen(!frequencyPeriodIsOpen);\n              }}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_FREQUENCY_PERIOD,\n                  value: selection,\n                });\n                setFrequencyPeriodIsOpen(false);\n              }}\n              selections={frequency_period}\n            >\n              {(options.data?.frequency_period || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n        </Grid>\n      )}\n    </Form>\n  );\n};\n\nDetails.propTypes = {\n  options: PropTypes.object.isRequired,\n  formData: PropTypes.object.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Details;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  DataList,\n  DataListAction,\n  DataListItem,\n  DataListCell,\n  DataListItemRow,\n  DataListControl,\n  DataListDragButton,\n  DataListItemCells,\n  Form,\n  FormGroup,\n  Grid,\n  InputGroup,\n  TextInput,\n  Title,\n} from '@patternfly/react-core';\nimport { PlusIcon, TimesIcon } from '@patternfly/react-icons';\n\nimport { actions } from './constants';\n\nconst TaskSection = styled.div`\n  margin-top: 20px;\n`;\n\nconst TaskTitle = styled(Title)`\n  margin-bottom: 10px;\n`;\n\nconst TaskDeleteButton = styled(Button)`\n  padding: 0 16px;\n`;\n\nconst DeleteTaskActionSection = styled(DataListAction)`\n  padding: 6px 0;\n`;\n\nconst TaskRow = styled(DataListItemRow)`\n  align-items: center;\n`;\n\nconst Tasks = ({ tasks, dispatch }) => {\n  const setTasks = (val) => {\n    dispatch({ type: actions.SET_TASKS, value: val });\n  };\n\n  const [taskToAdd, setTaskToAdd] = useState('');\n\n  const [liveText, setLiveText] = useState('');\n  const [id, setId] = useState('');\n\n  const onDragStart = (newId) => {\n    setId(newId);\n    setLiveText(`Dragging started for task ${newId}.`);\n  };\n\n  const onDragMove = (oldIndex, newIndex) => {\n    setLiveText(\n      `Dragging task ${id}.  Task ${oldIndex} is now task ${newIndex}.`\n    );\n  };\n\n  const onDragCancel = () => {\n    setLiveText('Dragging cancelled. Tasks list order is unchanged.');\n  };\n\n  const onDragFinish = (newItemOrder) => {\n    setLiveText('Dragging finsihed');\n    setTasks([...newItemOrder]);\n  };\n\n  const appendTask = () => {\n    setTasks([...tasks, taskToAdd]);\n    setTaskToAdd('');\n  };\n\n  const handleTextKeyDown = (e) => {\n    if (e.key && e.key === 'Enter') {\n      e.preventDefault();\n      appendTask();\n    }\n  };\n\n  const removeTask = (task) => {\n    setTasks(tasks.filter((t) => t !== task));\n  };\n\n  return (\n    <>\n      <Form>\n        <Grid hasGutter md={6}>\n          <FormGroup\n            label=\"What tasks do you need to accomplish this plan?\"\n            fieldId=\"task-field\"\n          >\n            <InputGroup>\n              <TextInput\n                placeholder=\"Enter a description of each task\"\n                type=\"text\"\n                id=\"task-field\"\n                name=\"task\"\n                value={taskToAdd}\n                onChange={(newTaskName) => setTaskToAdd(newTaskName)}\n                onKeyDown={handleTextKeyDown}\n              />\n              <Button\n                onClick={appendTask}\n                variant=\"control\"\n                aria-label=\"Add task\"\n              >\n                <PlusIcon />\n              </Button>\n            </InputGroup>\n          </FormGroup>\n        </Grid>\n      </Form>\n      {tasks.length > 0 && (\n        <TaskSection>\n          <TaskTitle headingLevel=\"h4\" size=\"xl\">\n            Tasks\n          </TaskTitle>\n          <DataList\n            aria-label=\"Draggable list to reorder and remove tasks.\"\n            isCompact\n            onDragFinish={onDragFinish}\n            onDragStart={onDragStart}\n            onDragMove={onDragMove}\n            onDragCancel={onDragCancel}\n            itemOrder={tasks}\n          >\n            {tasks.map((task, index) => (\n              <DataListItem\n                aria-labelledby={`cell-${index + 1}`}\n                id={task}\n                key={index + 1}\n              >\n                <TaskRow>\n                  <DataListControl>\n                    <DataListDragButton\n                      aria-label=\"Reorder\"\n                      aria-labelledby={`cell-${index + 1}`}\n                      aria-describedby=\"Press space or enter to begin dragging, and use the arrow keys to navigate up or down. Press enter to confirm the drag, or any other key to cancel the drag operation.\"\n                      aria-pressed=\"false\"\n                    />\n                  </DataListControl>\n                  <DataListItemCells\n                    dataListCells={[\n                      <DataListCell key={index + 1}>\n                        <span id={`cell-${index + 1}`}>{`${\n                          index + 1\n                        }. ${task}`}</span>\n                      </DataListCell>,\n                    ]}\n                  />\n                  <DeleteTaskActionSection aria-label=\"Actions\">\n                    <TaskDeleteButton\n                      onClick={() => removeTask(task)}\n                      variant=\"plain\"\n                      aria-label=\"Delete\"\n                    >\n                      <TimesIcon />\n                    </TaskDeleteButton>\n                  </DeleteTaskActionSection>\n                </TaskRow>\n              </DataListItem>\n            ))}\n          </DataList>\n        </TaskSection>\n      )}\n      <div className=\"pf-screen-reader\" aria-live=\"assertive\">\n        {liveText}\n      </div>\n    </>\n  );\n};\n\nTasks.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Tasks;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  DataList,\n  DataListItem,\n  DataListCell,\n  DataListItemRow,\n  DataListControl,\n  DataListItemCells,\n  Form,\n  FormGroup,\n  Radio,\n} from '@patternfly/react-core';\n\nimport { actions } from './constants';\n\nconst TemplateRow = styled(DataListItemRow)`\n  align-items: center;\n`;\n\nconst Templates = ({ templates = [], template_id, dispatch }) => {\n  return (\n    <Form>\n      <>\n        <FormGroup\n          label=\"Link a template to this plan:\"\n          fieldId=\"template-link-field\"\n        >\n          <DataList aria-label=\"draggable data list example\" isCompact>\n            {templates.map(({ key, value }) => (\n              <DataListItem aria-labelledby={`cell-${key}`} id={key} key={key}>\n                <TemplateRow>\n                  <DataListControl>\n                    <Radio\n                      isChecked={template_id === key}\n                      name={`radio-${key}`}\n                      onChange={() =>\n                        dispatch({ type: actions.SET_TEMPLATE_ID, value: key })\n                      }\n                      aria-label={`Radio selector for template ${key}.`}\n                      id={`radio-${key}`}\n                      value={key}\n                    />\n                  </DataListControl>\n                  <DataListItemCells\n                    dataListCells={[\n                      <DataListCell key={key}>\n                        <span id={`cell-${key}`}>{value}</span>\n                      </DataListCell>,\n                    ]}\n                  />\n                </TemplateRow>\n              </DataListItem>\n            ))}\n          </DataList>\n        </FormGroup>\n      </>\n    </Form>\n  );\n};\n\nTemplates.propTypes = {\n  templates: PropTypes.array,\n  template_id: PropTypes.number.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nTemplates.defaultProps = {\n  templates: [],\n};\n\nexport default Templates;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory, useLocation, Redirect } from 'react-router-dom';\n\nimport { Wizard } from '@patternfly/react-core';\n\nimport { Paths } from '../../../paths';\n\nimport useApi from '../../../Utilities/useApi';\nimport usePlanData from './usePlanData';\n\nimport { createPlan, updatePlan } from '../../../Api';\n\nimport Details from './Details';\nimport Tasks from './Tasks';\nimport Templates from './Templates';\n\nconst Form = ({ title, options, data = {} }) => {\n  const history = useHistory();\n  const { hash, pathname } = useLocation();\n\n  const [startStep, setStartStep] = useState(null);\n\n  const [{ isSuccess }, setData] = useApi({ meta: {}, items: [] });\n  const { formData, requestPayload, dispatch } = usePlanData(data);\n\n  const steps = [\n    {\n      step_number: 1,\n      id: 'details',\n      name: 'Details',\n      component: (\n        <Details options={options} formData={formData} dispatch={dispatch} />\n      ),\n    },\n    {\n      step_number: 2,\n      id: 'tasks',\n      name: 'Tasks',\n      component: <Tasks tasks={formData.tasks} dispatch={dispatch} />,\n    },\n    {\n      step_number: 3,\n      id: 'link_template',\n      name: 'Link template',\n      component: (\n        <Templates\n          templates={options?.data?.template_id}\n          template_id={formData.template_id}\n          dispatch={dispatch}\n        />\n      ),\n      nextButtonText: 'Save',\n    },\n  ];\n\n  useEffect(() => {\n    if (pathname.indexOf('/add') === -1 && hash) {\n      setStartStep(steps.find((step) => `#${step.id}` === hash).step_number);\n    } else {\n      history.replace({\n        hash: 'details',\n      });\n      setStartStep(1);\n    }\n  }, []);\n\n  const onStepChange = (newStep) => {\n    history.replace({\n      hash: newStep.id,\n    });\n  };\n\n  const onSave = () => {\n    data?.id\n      ? setData(\n          updatePlan({\n            id: data?.id,\n            params: requestPayload,\n          })\n        )\n      : setData(\n          createPlan({\n            params: requestPayload,\n          })\n        );\n  };\n\n  const onClose = () => {\n    history.push({\n      pathname: Paths.savingsPlanner,\n    });\n  };\n\n  return (\n    <>\n      {isSuccess && <Redirect to={Paths.savingsPlanner} />}\n      {startStep && (\n        <Wizard\n          navAriaLabel={`${title} steps`}\n          mainAriaLabel={`${title} content`}\n          steps={steps}\n          onGoToStep={onStepChange}\n          onNext={onStepChange}\n          onBack={onStepChange}\n          onSave={onSave}\n          onClose={onClose}\n          startAtStep={startStep}\n          height=\"calc(100vh - 285px)\"\n        />\n      )}\n    </>\n  );\n};\n\nForm.propTypes = {\n  title: PropTypes.string.isRequired,\n  options: PropTypes.object.isRequired,\n  data: PropTypes.object,\n};\n\nForm.defaultProps = {\n  data: {},\n};\n\nexport default Form;\n","export const jobExplorer = {\n  attributes: [\n    'id',\n    'status',\n    'job_type',\n    'started',\n    'finished',\n    'elapsed',\n    'created',\n    'cluster_name',\n    'org_name',\n    'most_failed_tasks',\n  ],\n  defaultParams: {\n    status: ['successful', 'failed'],\n    quick_date_range: 'last_30_days',\n    job_type: ['workflowjob', 'job'],\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    sort_options: 'created',\n    sort_order: 'desc',\n    only_root_workflows_and_standalone_jobs: false,\n    limit: 5,\n    offset: 0,\n  },\n};\n\nexport const roi = {\n  defaultParams: {\n    status: ['successful'],\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    quick_date_range: 'roi_last_year',\n    job_type: ['job'],\n    sort_options: 'template_productivity_score',\n    sort_order: 'desc',\n    start_date: null,\n    end_date: null,\n    limit: 25,\n    only_root_workflows_and_standalone_jobs: true,\n    attributes: [\n      'successful_hosts_total',\n      'successful_elapsed_total',\n      'total_org_count',\n      'total_cluster_count',\n    ],\n    group_by: 'template',\n    group_by_time: false,\n  },\n};\n\nexport const organizationStatistics = {\n  defaultParams: {\n    status: [],\n    org_id: [],\n    quick_date_range: 'last_30_days',\n    limit: 5,\n    offset: 0,\n    job_type: ['workflowjob', 'job'],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    start_date: null,\n    end_date: null,\n  },\n};\n\nexport const clusters = {\n  defaultParams: {\n    status: ['successful', 'failed'],\n    quick_date_range: 'last_30_days',\n    job_type: ['workflowjob', 'job'],\n    group_by_time: true,\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    only_root_workflows_and_standalone_jobs: false,\n  },\n};\n\nexport const savingsPlanner = {\n  defaultParams: {\n    template_id: [],\n    inventory_id: [],\n    automation_status: [],\n    category: [],\n    frequency_period: [],\n    name: '',\n    limit: 5,\n    offset: 0,\n    sort_options: 'modified',\n    sort_order: 'desc',\n  },\n};\n\nexport const notAuthorizedParams = {\n  title: 'RBAC Access Denied',\n  description:\n    'User does not have privileges to perform this action. Contact your organization adminstrator(s) for more information.',\n};\n","export async function getRelatedResourceDeleteCounts(requests) {\n  const results = {};\n  let error = null;\n  let hasCount = false;\n\n  try {\n    await Promise.all(\n      requests.map(async ({ request, label }) => {\n        const {\n          items: { count },\n        } = await request();\n        if (count > 0) {\n          results[label] = count;\n          hasCount = true;\n        }\n      })\n    );\n  } catch (err) {\n    error = err;\n  }\n\n  return {\n    results: hasCount && results,\n    error,\n  };\n}\n\nexport const relatedResourceDeleteRequests = {\n  savingsPlan: (selected, readRecordApi) => [\n    {\n      request: async () =>\n        readRecordApi({\n          params: {id: [selected.id]}\n        }),\n      label: 'Plan',\n    },\n  ],\n};\n","import moment from 'moment';\n\n/*\n * isNumeric - return true if input is a real number\n */\nexport function isNumeric(val) {\n  if (val === 0 || val === '0') {\n    return true;\n  }\n\n  if (parseInt(val)) {\n    return true;\n  }\n\n  if (parseFloat(val)) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function trimStr(str) {\n  return str.toString().replace(/['\"]+/g, '');\n}\n\nexport function formatDateTime(dateTime) {\n  return moment(new Date(dateTime).toISOString()).format('M/D/YYYY h:mm:ssa');\n}\n\nexport function formatDate(date) {\n  return moment(date).format('YYYY-MM-DD');\n}\n\nexport function formatSeconds(seconds) {\n  return moment().startOf('day').seconds(seconds).format('H:mm:ss');\n}\n\nexport function getTotal(data) {\n  if (!data) {\n    return;\n  } else {\n    let total = 0;\n    data.forEach((datum) => {\n      total += parseInt(datum.count);\n    });\n    return total;\n  }\n}\n\nexport function formatPercentage(val) {\n  if (isNaN(val)) {\n    return;\n  }\n\n  return `${val}%`;\n}\n\nexport const capitalize = (s) => {\n  if (typeof s !== 'string') {\n    return '';\n  }\n\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport function calculateDelta(a, b) {\n  if (!isNumeric(a) || !isNumeric(b)) {\n    return 0;\n  }\n\n  // never return less than zero ...\n  if (b - a < 0) {\n    return 0;\n  }\n\n  return b - a;\n}\n\nexport function convertMinsToMs(mins) {\n  if (!parseInt(mins)) {\n    return 0;\n  }\n\n  return mins * 60000;\n}\n\nexport function convertMsToMins(ms) {\n  if (!parseInt(ms)) {\n    return 0;\n  }\n\n  return ms / 60000;\n}\n\nexport function convertSecondsToMins(seconds) {\n  if (!parseInt(seconds)) {\n    return 0;\n  }\n\n  return seconds / 60;\n}\n\nexport function convertMinsToSeconds(mins) {\n  if (!parseInt(mins) || parseInt(mins) < 0) {\n    return 0;\n  }\n\n  return +parseInt(mins) * 60;\n}\n\nexport function convertSecondsToHours(seconds) {\n  if (!parseInt(seconds)) {\n    return 0;\n  }\n\n  return seconds / 3600;\n}\n\nexport function convertWithCommas(arr, key) {\n  const split = arr.reduce((strs, datum) => {\n    strs.push(datum[key]);\n    return strs;\n  }, []);\n  return split.join(', ');\n}\n\nexport function formatJobType(type) {\n  return type === 'job' ? 'Playbook run' : 'Workflow job';\n}\n\nexport function formatJobStatus(status) {\n  return status === 'successful' ? 'Success' : 'Failed';\n}\n\nexport function formatJobDetailsURL(baseURL, jobId) {\n  const subDirectory1 = 'job';\n  const subDirectory2 = 'details';\n  return `${baseURL}/#/${subDirectory1}/${jobId}/${subDirectory2}/`;\n}\n","import { useState, useEffect, useReducer } from 'react';\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return {\n        ...state,\n        isLoading: true,\n        isSuccess: false,\n        error: null,\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isSuccess: true,\n        error: null,\n        data: action.payload,\n      };\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        isSuccess: false,\n        error: action.payload,\n      };\n    case 'UPDATE_DATA':\n      return {\n        ...state,\n        data: action.payload,\n      };\n    default:\n      throw new Error();\n  }\n};\n\nconst useApi = (initialData, postprocess = (d) => d) => {\n  const [request, setRequest] = useState(null);\n\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isSuccess: false,\n    error: null,\n    data: initialData,\n  });\n\n  useEffect(() => {\n    // Prevent fetching nothing\n    if (!request) {\n      return;\n    }\n\n    // Initialize\n    let didCancel = false;\n    dispatch({ type: 'FETCH_INIT' });\n\n    // Fetching\n    request\n      .then((data) => {\n        if (!didCancel) {\n          dispatch({\n            type: 'FETCH_SUCCESS',\n            payload: postprocess(data),\n          });\n        }\n      })\n      .catch((e) => {\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_FAILURE', payload: e });\n        }\n      });\n\n    return () => {\n      didCancel = true;\n    };\n  }, [request]);\n\n  const setData = (data) => {\n    dispatch({ type: 'UPDATE_DATA', payload: data });\n  };\n\n  return [state, setRequest, setData];\n};\n\nexport default useApi;\n","import { useReducer } from 'react';\nimport moment from 'moment';\n\nimport { formatDate } from '../Utilities/helpers';\n\nexport const useQueryParams = (initial) => {\n  const initialWithCalculatedParams = {\n    ...initial,\n    ...(initial.sort_options &&\n      initial.sort_order && {\n        sort_by: `${initial.sort_options}:${initial.sort_order}`,\n      }),\n  };\n\n  const paramsReducer = (state, { type, value }) => {\n    switch (type) {\n      /* v0 api reducers */\n      case 'SET_STARTDATE':\n        return { ...state, startDate: value };\n      case 'SET_ENDDATE':\n        return { ...state, endDate: value };\n      case 'SET_ID':\n        if (!parseInt(value)) {\n          const { id: ignored, ...rest } = state;\n          return rest;\n        }\n\n        return { ...state, id: parseInt(value) };\n      case 'SET_SEVERITY':\n        if (value.severity === '') {\n          const { severity: ignored, ...rest } = state;\n          return rest;\n        }\n\n        return { ...state, ...value };\n\n      /* v1 api reducers */\n      case 'SET_LIMIT':\n        return isNaN(value)\n          ? { ...state, limit: 5 } // Defaults back to 5\n          : { ...state, limit: parseInt(value) };\n      case 'SET_OFFSET':\n        return isNaN(value)\n          ? { ...state, offset: 0 } // Defaults back to 0\n          : { ...state, offset: parseInt(value) };\n      case 'SET_ATTRIBUTES':\n      case 'SET_JOB_TYPE':\n      case 'SET_STATUS':\n      case 'SET_ORG':\n      case 'SET_CLUSTER':\n      case 'SET_TEMPLATE':\n      case 'SET_AUTOMATION_STATUS':\n      case 'SET_CATEGORY':\n      case 'SET_FREQUENCY':\n      case 'SET_NAME':\n      case 'SET_ROOT_WORKFLOWS_AND_JOBS':\n      case 'SET_INVENTORY':\n        return { ...state, ...value };\n      case 'SET_QUICK_DATE_RANGE': {\n        let newState = { ...state };\n        if (value !== 'custom') {\n          newState = { ...newState, start_date: null, end_date: null };\n        }\n\n        newState = { ...newState, ...value };\n        return newState;\n      }\n\n      case 'SET_START_DATE':\n      case 'SET_END_DATE': {\n        let newValues = {};\n        Object.entries(value).forEach(([key, value]) => {\n          newValues[key] = formatDate(value);\n        });\n        return { ...state, ...newValues };\n      }\n\n      case 'SET_SORT_OPTIONS': {\n        return {\n          ...state,\n          sort_options: value.sort_options,\n          ...(state.sort_order && {\n            sort_by: `${value.sort_options}:${state.sort_order}`,\n          }), // Update sort by\n        };\n      }\n\n      case 'SET_SORT_ORDER': {\n        return {\n          ...state,\n          sort_order: value.sort_order,\n          ...(state.sort_options && {\n            sort_by: `${state.sort_options}:${value.sort_order}`,\n          }), // Update sort by\n        };\n      }\n\n      case 'REINITIALIZE':\n        return { ...value };\n      case 'RESET_FILTER':\n        return { ...initialWithCalculatedParams };\n      default:\n        throw new Error(`The query params reducer action (${type}) not found.`);\n    }\n  };\n\n  const [queryParams, dispatch] = useReducer(paramsReducer, {\n    ...initialWithCalculatedParams,\n  });\n\n  const actionMapper = {\n    status: 'SET_STATUS',\n    quick_date_range: 'SET_QUICK_DATE_RANGE',\n    job_type: 'SET_JOB_TYPE',\n    org_id: 'SET_ORG',\n    cluster_id: 'SET_CLUSTER',\n    template_id: 'SET_TEMPLATE',\n    sort_order: 'SET_SORT_ORDER',\n    sort_options: `SET_SORT_OPTIONS`,\n    start_date: 'SET_START_DATE',\n    end_date: 'SET_END_DATE',\n    automation_status: 'SET_AUTOMATION_STATUS',\n    category: 'SET_CATEGORY',\n    frequency_period: 'SET_FREQUENCY',\n    name: 'SET_NAME',\n    only_root_workflows_and_standalone_jobs: 'SET_ROOT_WORKFLOWS_AND_JOBS',\n    inventory_id: 'SET_INVENTORY',\n  };\n\n  return {\n    queryParams,\n    dispatch,\n    setFromToolbar: (varName, value = null) => {\n      if (!varName) {\n        dispatch({ type: 'RESET_FILTER' });\n      } else {\n        dispatch({ type: actionMapper[varName], value: { [varName]: value } });\n      }\n    },\n    setFromPagination: (offset, limit = null) => {\n      dispatch({ type: 'SET_OFFSET', value: offset });\n      if (limit) {\n        dispatch({ type: 'SET_LIMIT', value: limit });\n      }\n    },\n    /* v0 api usage after this line */\n    setSeverity: (severity) =>\n      dispatch({ type: 'SET_SEVERITY', value: { severity } }),\n    setEndDate: () => {\n      const endDate = moment().format('YYYY-MM-DD');\n      dispatch({ type: 'SET_ENDDATE', value: endDate });\n    },\n    setId: (value) => dispatch({ type: 'SET_ID', value }),\n    setStartDate: (days) => {\n      let startDate;\n      if (days === 7) {\n        startDate = moment().subtract(1, 'week').format('YYYY-MM-DD');\n      }\n\n      if (days === 14) {\n        startDate = moment().subtract(2, 'weeks').format('YYYY-MM-DD');\n      }\n\n      if (days === 31) {\n        startDate = moment().subtract(1, 'month').format('YYYY-MM-DD');\n      } else {\n        startDate = moment().subtract(days, 'days').format('YYYY-MM-DD');\n      }\n\n      dispatch({ type: 'SET_STARTDATE', value: startDate });\n    },\n    setStartDateAsString: (value) => dispatch({ type: 'SET_STARTDATE', value }),\n  };\n};\n","import { Paths } from '../paths';\nimport { stringify } from 'query-string';\n\nconst useRedirect = (history, path) => (query) => {\n  const search = stringify(query, { arrayFormat: 'bracket' });\n  history.push({\n    pathname: Paths[path],\n    search,\n  });\n};\n\nexport default useRedirect;\n","import { useEffect, useState, useCallback } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport useIsMounted from './useIsMounted';\n\n/*\n * The useRequest hook accepts a request function and returns an object with\n * five values:\n *   request: a function to call to invoke the request\n *   result: the value returned from the request function (once invoked)\n *   isLoading: boolean state indicating whether the request is in active/in flight\n *   error: any caught error resulting from the request\n *   setValue: setter to explicitly set the result value\n *\n * The hook also accepts an optional second parameter which is a default\n * value to set as result before the first time the request is made.\n */\nexport default function useRequest(makeRequest, initialValue) {\n  const [result, setResult] = useState(initialValue);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const isMounted = useIsMounted();\n\n  return {\n    result,\n    error,\n    isLoading,\n    request: useCallback(\n      async (...args) => {\n        setIsLoading(true);\n        try {\n          const response = await makeRequest(...args);\n          if (isMounted.current) {\n            setResult(response);\n            setError(null);\n          }\n        } catch (err) {\n          if (isMounted.current) {\n            setError(err);\n            setResult(initialValue);\n          }\n        } finally {\n          if (isMounted.current) {\n            setIsLoading(false);\n          }\n        }\n      },\n      /* eslint-disable-next-line react-hooks/exhaustive-deps */\n      [makeRequest]\n    ),\n    setValue: setResult,\n  };\n}\n\n/*\n * Provides controls for \"dismissing\" an error message\n *\n * Params: an error object\n * Returns: { error, dismissError }\n *   The returned error object is the same object passed in via the paremeter,\n *   until the dismissError function is called, at which point the returned\n *   error will be set to null on the subsequent render.\n */\nexport function useDismissableError(error) {\n  const [showError, setShowError] = useState(false);\n\n  useEffect(() => {\n    if (error) {\n      setShowError(true);\n    }\n  }, [error]);\n\n  return {\n    error: showError ? error : null,\n    dismissError: () => {\n      setShowError(false);\n    },\n  };\n}\n\n/*\n * Hook to assist with deletion of items from a paginated item list. The page\n * url will be navigated back one page on a paginated list if needed to prevent\n * the UI from re-loading an empty set and displaying a \"No items found\"\n * message.\n *\n * Params: a callback function that will be invoked in order to delete items,\n *   and an object with structure { qsConfig, allItemsSelected, fetchItems }\n * Returns: { isLoading, deleteItems, deletionError, clearDeletionError }\n */\nexport function useDeleteItems(\n  makeRequest,\n  { qsConfig = null, allItemsSelected = false, fetchItems = null } = {}\n) {\n  const location = useLocation();\n  const history = useHistory();\n\n  const { error: requestError, isLoading, request } = useRequest(\n    makeRequest,\n    null\n  );\n  const { error, dismissError } = useDismissableError(requestError);\n  const deleteItems = async () => {\n    await request();\n    if (!qsConfig) {\n      return;\n    }\n    fetchItems();\n  };\n\n  return {\n    isLoading,\n    deleteItems,\n    deletionError: error,\n    clearDeletionError: dismissError,\n  };\n}\n","import { useEffect, useRef } from 'react';\n\nexport default function useIsMounted() {\n  const isMounted = useRef(null);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  });\n  return isMounted;\n}\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PFPagination } from '@patternfly/react-core';\nvar perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '15', value: 15 },\n    { title: '20', value: 20 },\n    { title: '25', value: 25 },\n];\n;\nvar Pagination = function (_a) {\n    var _b = _a.count, count = _b === void 0 ? 0 : _b, params = _a.params, setPagination = _a.setPagination, props = __rest(_a, [\"count\", \"params\", \"setPagination\"]);\n    var offset = params.offset, limit = params.limit;\n    var currentPage = Math.floor(offset / limit + 1);\n    var returnOffsetVal = function (page) { return (page - 1) * limit; };\n    return (React.createElement(PFPagination, __assign({ itemCount: count, widgetId: \"aa-pagination\", perPageOptions: perPageOptions, perPage: limit, page: currentPage, onPerPageSelect: function (_event, perPage, page) {\n            setPagination(returnOffsetVal(page), perPage);\n        }, onSetPage: function (_event, page) {\n            setPagination(returnOffsetVal(page));\n        } }, props)));\n};\nPagination.propTypes = {\n    count: PropTypes.number,\n    params: PropTypes.exact({\n        offset: PropTypes.number.isRequired,\n        limit: PropTypes.number.isRequired,\n    }).isRequired,\n    setPagination: PropTypes.func.isRequired,\n};\nexport default Pagination;\n","import Pagination from './Pagination';\nexport default Pagination;\n"],"sourceRoot":""}