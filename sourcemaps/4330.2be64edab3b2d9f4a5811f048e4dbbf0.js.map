{"version":3,"file":"js/4330.1675872911414.a97f282189a7a0962d7b.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/caret-left-icon.js","webpack:///./src/Components/CardActionsRow.tsx","webpack:///./src/Components/DeleteButton/DeleteButton.js","webpack:///./src/Components/RoutedTabs.js","webpack:///./src/Containers/SavingsPlanner/Details/DetailsTab/index.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/square-full-icon.js","webpack:///./src/Utilities/hoursFormatter.ts","webpack:///./src/Containers/SavingsPlanner/Details/StatisticsTab/TotalSavings/index.tsx","webpack:///./src/Containers/SavingsPlanner/Details/StatisticsTab/FormulaDescription/index.tsx","webpack:///./src/Containers/SavingsPlanner/Details/StatisticsTab/index.tsx","webpack:///./src/Containers/SavingsPlanner/Edit/index.js","webpack:///./src/Containers/SavingsPlanner/index.tsx","webpack:///./src/Containers/SavingsPlanner/Details/index.js","webpack:///./src/Containers/SavingsPlanner/Details/Details.js","webpack:///./src/Utilities/getRelatedResourceDeleteDetails.js","webpack:///./src/Components/Chart/types.ts","webpack:///./src/Components/Chart/convertApi.ts","webpack:///./src/Components/Chart/index.tsx","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/sync-alt-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/clock-icon.js","webpack:///./src/Components/JobStatus.tsx","webpack:///./src/Utilities/currencyFormatter.ts"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.CaretLeftIconConfig = {\n  name: 'CaretLeftIcon',\n  height: 512,\n  width: 192,\n  svgPath: 'M192 127.338v257.324c0 17.818-21.543 26.741-34.142 14.142L29.196 270.142c-7.81-7.81-7.81-20.474 0-28.284l128.662-128.662c12.599-12.6 34.142-3.676 34.142 14.142z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.CaretLeftIcon = require('../createIcon').createIcon(exports.CaretLeftIconConfig);\nexports[\"default\"] = exports.CaretLeftIcon;","var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nimport React from 'react';\nimport { CardActions } from '@patternfly/react-core';\nimport styled from 'styled-components';\nvar CardActionsWrapper = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  margin-top: 20px;\\n  --pf-c-card__actions--PaddingLeft: 0;\\n\"], [\"\\n  margin-top: 20px;\\n  --pf-c-card__actions--PaddingLeft: 0;\\n\"])));\nvar CardActionsRow = function (_a) {\n    var children = _a.children;\n    return (React.createElement(CardActionsWrapper, null,\n        React.createElement(CardActions, null, children)));\n};\nexport default CardActionsRow;\nvar templateObject_1;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\nimport { Button, Badge, Alert, Tooltip } from '@patternfly/react-core';\nimport AlertModal from '../AlertModal';\nimport { getRelatedResourceDeleteCounts } from '../../Utilities/getRelatedResourceDeleteDetails';\nimport ErrorDetail from '../ErrorDetail';\n\nconst WarningMessage = styled(Alert)`\n  margin-top: 10px;\n`;\n\nconst Label = styled.span`\n  && {\n    margin-right: 10px;\n  }\n`;\n\nconst DeleteButton = ({\n  onConfirm,\n  modalTitle = 'Delete',\n  name = '',\n  variant = 'secondary',\n  isDisabled = false,\n  ouiaId = null,\n  deleteMessage = 'Delete?',\n  deleteDetailsRequests = [],\n  disabledTooltip = 'This item cannot be deleted',\n  children,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [deleteMessageError, setDeleteMessageError] = useState();\n  const [deleteDetails, setDeleteDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const toggleModal = async (isModalOpen) => {\n    setIsLoading(true);\n    if (deleteDetailsRequests.length > 0 && isModalOpen) {\n      const { results, error } = await getRelatedResourceDeleteCounts(\n        deleteDetailsRequests\n      );\n      if (error) {\n        setDeleteMessageError(error);\n      } else {\n        setDeleteDetails(results);\n      }\n    }\n    setIsLoading(false);\n    setIsOpen(isModalOpen);\n  };\n\n  if (deleteMessageError) {\n    return (\n      <AlertModal\n        isOpen={!!deleteMessageError}\n        variant={'error'}\n        title={'Error!'}\n        onClose={() => {\n          toggleModal(false);\n          setDeleteMessageError();\n        }}\n      >\n        <ErrorDetail error={deleteMessageError.detail} />\n      </AlertModal>\n    );\n  }\n\n  return (\n    <>\n      {disabledTooltip ? (\n        <Tooltip content={disabledTooltip} position=\"top\">\n          <div>\n            <Button\n              spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n              variant={variant || 'secondary'}\n              aria-label={'Delete'}\n              isDisabled={isDisabled}\n              onClick={() => toggleModal(true)}\n              ouiaId={ouiaId}\n            >\n              {children || 'Delete'}\n            </Button>\n          </div>\n        </Tooltip>\n      ) : (\n        <Button\n          ouiaId={ouiaId}\n          spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n          variant={variant || 'secondary'}\n          aria-label={'Delete'}\n          isDisabled={isDisabled}\n          onClick={() => toggleModal(true)}\n        >\n          {children || 'Delete'}\n        </Button>\n      )}\n      <AlertModal\n        isOpen={isOpen}\n        title={modalTitle}\n        variant=\"danger\"\n        onClose={() => toggleModal(false)}\n        actions={[\n          <Button\n            ouiaId=\"delete-modal-confirm\"\n            key=\"delete\"\n            variant=\"danger\"\n            aria-label={'Confirm Delete'}\n            isDisabled={isDisabled}\n            onClick={() => {\n              onConfirm();\n              toggleModal(false);\n            }}\n          >\n            {'Delete'}\n          </Button>,\n          <Button\n            ouiaId=\"delete-modal-cancel\"\n            key=\"cancel\"\n            variant=\"link\"\n            aria-label={'Cancel'}\n            onClick={() => toggleModal(false)}\n          >\n            {'Cancel'}\n          </Button>,\n        ]}\n      >\n        {'Are you sure you want to delete:'}\n        <br />\n        <strong>{name}</strong>\n        {Object.values(deleteDetails).length > 0 && (\n          <WarningMessage\n            variant=\"warning\"\n            isInline\n            title={\n              <div>\n                <div aria-label={deleteMessage}>{deleteMessage}</div>\n                <br />\n                {Object.entries(deleteDetails).map(([key, value]) => (\n                  <div aria-label={`${key}: ${value}`} key={key}>\n                    <Label>{key}</Label> <Badge>{value}</Badge>\n                  </div>\n                ))}\n              </div>\n            }\n          />\n        )}\n      </AlertModal>\n    </>\n  );\n};\n\nDeleteButton.propTypes = {\n  onConfirm: PropTypes.func.isRequired,\n  modalTitle: PropTypes.string,\n  name: PropTypes.string,\n  variant: PropTypes.object,\n  isDisabled: PropTypes.bool,\n  ouiaId: PropTypes.string,\n  deleteMessage: PropTypes.string,\n  deleteDetailsRequests: PropTypes.array,\n  disabledTooltip: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nexport default DeleteButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { shape, string, number, arrayOf, node, oneOfType } from 'prop-types';\nimport { Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nconst RoutedTabs = ({ tabsArray, defaultTabId = 1 }) => {\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const getActiveTabId = (defaultTabId) => {\n    return (\n      tabsArray.find(\n        (tab) =>\n          typeof tab.name === 'string' &&\n          location.pathname.includes(tab.name.toLowerCase())\n      )?.id || defaultTabId\n    );\n  };\n\n  const handleTabSelect = (_, eventKey) => {\n    const match = tabsArray.find((tab) => tab.id === eventKey);\n    if (match) {\n      navigate(match.link);\n    }\n  };\n\n  return (\n    <Tabs activeKey={getActiveTabId(defaultTabId)} onSelect={handleTabSelect}>\n      {tabsArray.map((tab) => (\n        <Tab\n          aria-label={typeof tab.name === 'string' ? tab.name : `${tab.id} tab`}\n          eventKey={tab.id}\n          key={tab.id}\n          link={tab.link}\n          title={<TabTitleText>{tab.name}</TabTitleText>}\n          role=\"tab\"\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nRoutedTabs.propTypes = {\n  defaultTabId: PropTypes.number,\n  tabsArray: arrayOf(\n    shape({\n      id: number.isRequired,\n      link: string.isRequired,\n      name: oneOfType([string.isRequired, node.isRequired]),\n    })\n  ).isRequired,\n};\n\nexport default RoutedTabs;\n","import React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\nimport { useLocation, useNavigate } from 'react-router-dom';\n\nimport { Button } from '@patternfly/react-core';\n\nimport {\n  CardBody as PFCardBody,\n  CardFooter,\n  DescriptionList,\n  DescriptionListTerm,\n  DescriptionListGroup,\n  DescriptionListDescription,\n  Divider as PFDivider,\n  Label,\n  List,\n  ListItem,\n  Tooltip,\n  TooltipPosition,\n} from '@patternfly/react-core';\nimport CardActionsRow from '../../../../Components/CardActionsRow';\nimport { deletePlan, readPlanOptions } from '../../../../Api/';\nimport useRequest, {\n  useDismissableError,\n} from '../../../../Utilities/useRequest';\nimport DeleteButton from '../../../../Components/DeleteButton/DeleteButton';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { formatDateTime } from '../../../../Utilities/helpers';\nimport RoutedTabs from '../../../../Components/RoutedTabs';\nimport AlertModal from '../../../../Components/AlertModal/AlertModal';\nimport ErrorDetail from '../../../../Components/ErrorDetail/ErrorDetail';\nimport JobStatus from '../../../../Components/JobStatus';\n\nimport { createUrl, DEFAULT_NAMESPACE } from '../../../../QueryParams/';\nimport { jobExplorer } from '../../../../Utilities/constants';\nimport { Paths } from '../../../../paths';\n\nconst CardBody = styled(PFCardBody)`\n  min-height: 500px;\n  padding: 0;\n  padding-bottom: 20px;\n\n  &:first-child {\n    padding-top: 0;\n  }\n`;\n\nconst Divider = styled(PFDivider)`\n  padding-top: 24px;\n`;\n\nconst DetailsTab = ({ tabsArray, plan, canWrite }) => {\n  const { pathname } = useLocation();\n  const navigate = useNavigate();\n  const {\n    id,\n    automation_status,\n    category,\n    description,\n    frequency_period,\n    hosts,\n    manual_time,\n    modified,\n    name,\n    tasks,\n    template_details,\n    template_id,\n  } = plan;\n\n  const {\n    result: options,\n    isSuccess: optionsSuccess,\n    request: fetchOptions,\n  } = useRequest(readPlanOptions, {});\n\n  useEffect(() => {\n    fetchOptions({});\n  }, []);\n\n  const navigateToJobExplorer = (templateId) => {\n    const initialQueryParams = {\n      [DEFAULT_NAMESPACE]: {\n        ...jobExplorer.defaultParams,\n        quick_date_range: 'last_30_days',\n        status: ['failed', 'successful'],\n        template_id: [templateId],\n      },\n    };\n\n    navigate(createUrl(Paths.jobExplorer, true, initialQueryParams));\n  };\n\n  const showTemplate = (template_details) => {\n    if (!template_details.id) {\n      return;\n    }\n\n    return (\n      <a onClick={() => navigateToJobExplorer(template_details.id)}>\n        {template_details.name}\n      </a>\n    );\n  };\n\n  const renderOptionsBasedValue = (name, val) => {\n    // Return if no options yet or no key in the options is found.\n    if (!optionsSuccess || !options[name]) return '';\n\n    // Search for the key and return the value if exists.\n    const fromOptionsValue = options[name].find(({ key }) => key === val);\n    return fromOptionsValue?.value ?? '';\n  };\n\n  const jobStatusLabel = (item, index) => {\n    return item !== 'None' ? (\n      <JobStatus key={index} status={item} />\n    ) : (\n      <Label\n        key={index}\n        variant=\"outline\"\n        color=\"red\"\n        icon={<ExclamationCircleIcon />}\n        style={{ marginRight: '0.5rem', marginBottom: '0.5rem' }}\n      >\n        Not Running\n      </Label>\n    );\n  };\n\n  const labelsAndValues = {\n    Name: name || undefined,\n    'Automation type': category\n      ? renderOptionsBasedValue('category', category)\n      : undefined,\n    Description: description || undefined,\n    'Manual time': manual_time\n      ? renderOptionsBasedValue('manual_time', manual_time)\n      : undefined,\n    'Run on hosts': hosts || undefined,\n    Frequency: frequency_period\n      ? renderOptionsBasedValue('frequency_period', frequency_period)\n      : undefined,\n    Template: template_id ? showTemplate(template_details) : undefined,\n    'Last job status': Array.isArray(automation_status.status)\n      ? automation_status.status.map((item, index) =>\n          jobStatusLabel(item, index)\n        )\n      : jobStatusLabel(automation_status.status),\n    'Last updated': modified ? (\n      <span>{formatDateTime(modified)}</span>\n    ) : undefined,\n  };\n\n  const { request: deletePlans, error: deleteError } = useRequest(\n    async (props) => {\n      await deletePlan(props);\n      navigate(createUrl(Paths.savingsPlanner, true));\n    }\n  );\n\n  const { error, dismissError } = useDismissableError(deleteError);\n\n  return (\n    <>\n      {plan && (\n        <>\n          <CardBody>\n            <RoutedTabs tabsArray={tabsArray} />\n            <div style={{ padding: '1rem' }}>\n              <DescriptionList isHorizontal columnModifier={{ lg: '3Col' }}>\n                {Object.keys(labelsAndValues).map(\n                  (key, i) =>\n                    labelsAndValues[key] !== undefined && (\n                      <DescriptionListGroup key={i}>\n                        {key === 'Last job status' ? (\n                          <Tooltip\n                            key={'last_job_status_tooltip'}\n                            position={TooltipPosition.top}\n                            content={\n                              automation_status.last_known_day\n                                ? `Status last reported on: ${automation_status.last_known_day}`\n                                : automation_status.last_known_month\n                                ? `Status last reported on: ${automation_status.last_known_month}`\n                                : automation_status.last_known_year\n                                ? `Status last reported on: ${automation_status.last_known_year}`\n                                : `Status last reported on: ${automation_status.last_known_date}`\n                            }\n                          >\n                            <DescriptionListTerm>{key}</DescriptionListTerm>\n                          </Tooltip>\n                        ) : (\n                          <DescriptionListTerm>{key}</DescriptionListTerm>\n                        )}\n                        <DescriptionListDescription>\n                          {labelsAndValues[key]}\n                        </DescriptionListDescription>\n                      </DescriptionListGroup>\n                    )\n                )}\n              </DescriptionList>\n              {tasks.length > 0 && (\n                <DescriptionList>\n                  <Divider component=\"div\" />\n                  <DescriptionListGroup key={tasks}>\n                    <DescriptionListTerm>Tasks</DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <List component=\"ol\" type=\"1\">\n                        {tasks.map(({ id, task }) => (\n                          <ListItem key={id}>{task}</ListItem>\n                        ))}\n                      </List>\n                    </DescriptionListDescription>\n                  </DescriptionListGroup>\n                </DescriptionList>\n              )}\n            </div>\n          </CardBody>\n          {canWrite && (\n            <CardFooter>\n              <CardActionsRow>\n                <Button\n                  key=\"edit-plan-button\"\n                  variant=\"primary\"\n                  aria-label=\"Edit plan\"\n                  onClick={() => {\n                    navigate(\n                      createUrl(`${pathname.split('/details')[0]}/edit`)\n                    );\n                  }}\n                >\n                  Edit\n                </Button>\n                <DeleteButton\n                  key={'delete-plan-button'}\n                  name={name}\n                  modalTitle={'Delete Plan'}\n                  onConfirm={() => deletePlans(id)}\n                >\n                  {'Delete'}\n                </DeleteButton>\n              </CardActionsRow>\n              {error && (\n                <AlertModal\n                  isOpen={!!error}\n                  onClose={dismissError}\n                  title={'Error'}\n                  variant=\"error\"\n                >\n                  <ErrorDetail error={error.detail} />\n                </AlertModal>\n              )}\n            </CardFooter>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nDetailsTab.propTypes = {\n  plan: PropTypes.object,\n  tabsArray: PropTypes.array,\n  canWrite: PropTypes.bool.isRequired,\n};\n\nexport default DetailsTab;\n","import { createIcon } from '../createIcon';\n\nexport const SquareFullIconConfig = {\n  name: 'SquareFullIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M512 512H0V0h512v512z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const SquareFullIcon = createIcon(SquareFullIconConfig);\n\nexport default SquareFullIcon;","var hoursFormatter = function (n) {\n    return \"\".concat((+n.toFixed(0)).toLocaleString(), \" hours\");\n}; /* 2,500 hours */\nexport default hoursFormatter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle, Title } from '@patternfly/react-core';\nimport currencyFormatter from '../../../../../Utilities/currencyFormatter';\nimport hoursFormatter from '../../../../../Utilities/hoursFormatter';\nvar TotalSavings = function (_a) {\n    var _b = _a.value, value = _b === void 0 ? 0 : _b, _c = _a.isMoney, isMoney = _c === void 0 ? true : _c;\n    return (React.createElement(Card, { isPlain: true },\n        React.createElement(CardTitle, { style: { paddingBottom: '0' } }, \"Total savings\"),\n        React.createElement(CardBody, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"4xl\", style: {\n                    color: isMoney ? 'var(--pf-global--success-color--200)' : '#0063CF',\n                } }, isMoney ? \"\".concat(currencyFormatter(value)) : \"\".concat(hoursFormatter(value))))));\n};\nTotalSavings.propTypes = {\n    value: PropTypes.number,\n    isMoney: PropTypes.bool,\n};\nexport default TotalSavings;\n","import React, { useState } from 'react';\nimport { Button, ButtonVariant, CodeBlock, CodeBlockCode, Modal, ModalVariant, } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nvar CostsText = function () { return (React.createElement(React.Fragment, null,\n    React.createElement(\"p\", null,\n        React.createElement(\"strong\", null, \"Cost\")),\n    React.createElement(\"p\", null, \"The cost includes the hours spent in implementation, deployment, training and other expenditures for creating, maintaining and running the automation. These hours (cost of investment) are usually higher at the onset, and will be greatly reduced once the automation has been created and only maintenance is required.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"For the initial period and the first year, we assume approximately 10 hours spent on each host, as well as some buffer time and a 40% risk adjustment to account for unforeseen situations.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"For the next two years after the first year, we assume 4 hours spent on each host, as well as a 40% risk adjustment to account for unforeseen situations.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate cost for the initial period and year 1:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"C1 = (time for a manual run on one host in hours * 10) + buffer time\\nC2 = C1 * 40% risk adjustment\\ninitial cost = (C1 + C2) * (cost per hour in USD if applicable, based on display)\\nyear 1 cost = (C1 + C2) * (cost per hour in USD if applicable, based on display)\")),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate cost for years 2 and 3:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"C1 = (time for a manual run on one host in hours * 4)\\nC2 = C1 * 40% risk adjustment\\nyear 2 cost = (C1 + C2) * (cost per hour in USD if applicable, based on display)\\nyear 3 cost = (C1 + C2) * (cost per hour in USD if applicable, based on display)\")))); };\nvar SavingsText = function () { return (React.createElement(React.Fragment, null,\n    React.createElement(\"p\", null,\n        React.createElement(\"strong\", null, \"Savings\")),\n    React.createElement(\"p\", null, \"The savings indicates the time and money saved as a result of automating the plan.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"We assume 50% productivity recapture to account for the productivity that is usually gained by repeated manual implementation of a task over a period of time. We also add a -5% risk adjustment for unforeseen situations that might arise and need to be handled. We also assume a 15% year over year growth in savings.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"Money savings for the initial period is 0, so there is no formula necessary.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate savings for year 0:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"initial period savings = 0 - initial cost\")),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used for savings for year 1:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"S1 = (number of hosts * (manual time in minutes / 60) * yearly frequency of automation)\\nS2 = S1 * 50% productivity recapture\\nS3 = S2 * 5% risk adjustment * (cost per hour in USD if applicable, based on display)\\nyear 1 savings = S2 - S3 - year 1 cost\")),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate savings for year 2:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"S1 = year 1 savings * 15% growth\\nyear 2 savings = year 1 savings + S1 - year 2 cost\")),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate savings for year 3:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"S2 = year 2 savings * 15% growth\\nyear 3 savings = year 2 savings + S2 - year 3 cost\")))); };\nvar FormulaDescription = function () {\n    var _a = useState(false), isOpen = _a[0], setIsOpen = _a[1];\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Button, { variant: ButtonVariant.link, onClick: function () { return setIsOpen(true); }, icon: React.createElement(InfoCircleIcon, null) }, \"Automation formula\"),\n        React.createElement(Modal, { title: \"Automation formula\", isOpen: isOpen, onClose: function () { return setIsOpen(false); }, variant: ModalVariant.medium, actions: [\n                React.createElement(Button, { key: \"cancel\", variant: ButtonVariant.primary, onClick: function () { return setIsOpen(false); } }, \"Close\"),\n            ] },\n            React.createElement(\"p\", null, \"We use risk-adjusted factors to create the 3-year projection of cost and savings related to automation. While we aim to provide as accurate an account of the cost and savings as possible, actual values may differ in practice. The following information breaks down where we get the data, the risk-adjustment factors we use, the assumptions we make, and the formula used to compute the values as displayed in the chart.\"),\n            React.createElement(\"br\", null),\n            React.createElement(CostsText, null),\n            React.createElement(\"br\", null),\n            React.createElement(SavingsText, null))));\n};\nexport default FormulaDescription;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useState } from 'react';\nimport { Card, CardActions, CardBody, CardHeader, CardTitle, Grid, GridItem, List, ListItem, ToggleGroup, ToggleGroupItem, } from '@patternfly/react-core';\nimport { SquareFullIcon } from '@patternfly/react-icons';\nimport { ChartKind, ChartThemeColor, ChartType, ChartTopLevelType, } from 'react-json-chart-builder';\nimport RoutedTabs from '../../../../Components/RoutedTabs';\nimport TotalSavings from './TotalSavings';\nimport FormulaDescription from './FormulaDescription';\nimport currencyFormatter from '../../../../Utilities/currencyFormatter';\nimport hoursFormatter from '../../../../Utilities/hoursFormatter';\nimport Chart from '../../../../Components/Chart';\nvar dataConversion = function (data) {\n    var yearConversion = {\n        initial: 'Initial',\n        year1: 'Year 1',\n        year2: 'Year 2',\n        year3: 'Year 3',\n    };\n    var seriesStats = data.projections.series_stats.map(function (item) { return (__assign(__assign({}, item), { year: yearConversion[item.year], total_costs: item.total_costs * -1, total_hours_spent_risk_adjusted: item.total_hours_spent_risk_adjusted * -1 })); });\n    return __assign(__assign({}, data), { projections: __assign(__assign({}, data.projections), { series_stats: seriesStats }) });\n};\nvar getChartData = function (data) {\n    return {\n        items: data.projections.series_stats,\n        meta: {\n            legend: [],\n            count: 0,\n        },\n    };\n};\nvar constants = function (isMoney) { return ({\n    cost: {\n        key: isMoney ? 'total_costs' : 'total_hours_spent_risk_adjusted',\n        color: '#8B8D8F',\n    },\n    benefit: {\n        key: isMoney ? 'total_benefits' : 'total_hours_saved',\n        color: isMoney ? 'var(--pf-global--success-color--100)' : '#0063CF',\n    },\n    net: {\n        key: isMoney ? 'cumulative_net_benefits' : 'cumulative_time_net_benefits',\n        color: '#EE7A00',\n    },\n}); };\nvar StatisticsTab = function (_a) {\n    var tabsArray = _a.tabsArray, plan = _a.plan;\n    var statsPlan = dataConversion(plan);\n    var _b = useState(true), isMoney = _b[0], setIsMoney = _b[1];\n    var customTooltipFormatting = function (_a) {\n        var datum = _a.datum;\n        return isMoney ? currencyFormatter(+datum.y) : hoursFormatter(+datum.y);\n    };\n    var computeTotalSavings = function (d) {\n        return isMoney\n            ? d.projections.series_stats[3].cumulative_net_benefits\n            : d.projections.series_stats[3].cumulative_time_net_benefits;\n    };\n    var chartSchema = [\n        {\n            id: 1000,\n            kind: ChartKind.wrapper,\n            type: ChartTopLevelType.chart,\n            parent: null,\n            props: {\n                height: 600,\n                domainPadding: {\n                    x: 100,\n                },\n                padding: {\n                    bottom: 60,\n                    left: 80,\n                },\n                themeColor: ChartThemeColor.gray,\n            },\n            tooltip: {\n                cursor: true,\n                stickToAxis: 'x',\n                mouseFollow: true,\n                legendTooltip: {\n                    legendData: [\n                        {\n                            childName: constants(isMoney).benefit.key,\n                            name: 'Savings',\n                            symbol: {\n                                fill: constants(isMoney).benefit.color,\n                            },\n                        },\n                        {\n                            childName: constants(isMoney).cost.key,\n                            name: 'Costs',\n                            symbol: {\n                                fill: constants(isMoney).cost.color,\n                            },\n                        },\n                        {\n                            childName: constants(isMoney).net.key,\n                            name: 'Cumulative savings',\n                            symbol: {\n                                fill: constants(isMoney).net.color,\n                            },\n                        },\n                    ],\n                    titleProperyForLegend: 'year',\n                },\n                labelFormat: 'customTooltipFormatting',\n            },\n            xAxis: {\n                label: 'Time',\n            },\n            yAxis: {\n                label: isMoney ? 'Money Saved' : 'Hours Saved',\n                tickFormat: 'formatNumberAsK',\n                style: {\n                    grid: { stroke: '#D2D2D2' },\n                    axisLabel: { padding: 60 },\n                },\n            },\n        },\n        {\n            id: 1001,\n            kind: ChartKind.stack,\n            parent: 1000,\n            props: {},\n        },\n        {\n            id: 1102,\n            kind: ChartKind.simple,\n            type: ChartType.bar,\n            name: constants(isMoney).benefit.key,\n            parent: 1001,\n            props: {\n                x: 'year',\n                y: constants(isMoney).benefit.key,\n                barRatio: 0.8,\n                barWidth: 0,\n                style: {\n                    data: {\n                        fill: constants(isMoney).benefit.color,\n                        width: 120,\n                    },\n                },\n            },\n            tooltip: {\n                labelName: '',\n            },\n        },\n        {\n            id: 1101,\n            kind: ChartKind.simple,\n            type: ChartType.bar,\n            name: constants(isMoney).cost.key,\n            parent: 1001,\n            props: {\n                x: 'year',\n                y: constants(isMoney).cost.key,\n                barRatio: 0.8,\n                barWidth: 0,\n                style: {\n                    data: {\n                        fill: constants(isMoney).cost.color,\n                        width: 120,\n                    },\n                },\n            },\n            tooltip: {\n                labelName: '',\n            },\n        },\n        {\n            id: 1002,\n            kind: ChartKind.simple,\n            type: ChartType.line,\n            name: constants(isMoney).net.key,\n            parent: 1000,\n            props: {\n                x: 'year',\n                y: constants(isMoney).net.key,\n                style: {\n                    data: {\n                        stroke: constants(isMoney).net.color,\n                        strokeWidth: 5,\n                    },\n                },\n            },\n            tooltip: {\n                labelName: '',\n            },\n        },\n    ];\n    var renderLeft = function () { return (React.createElement(Card, { isPlain: true },\n        React.createElement(CardHeader, null,\n            React.createElement(CardActions, null,\n                React.createElement(ToggleGroup, { \"aria-label\": \"toggleButton\" },\n                    React.createElement(ToggleGroupItem, { text: \"Money\", buttonId: \"money\", isSelected: isMoney, onChange: function () { return setIsMoney(true); } }),\n                    React.createElement(ToggleGroupItem, { text: \"Time\", buttonId: \"time\", isSelected: !isMoney, onChange: function () { return setIsMoney(false); } }))),\n            React.createElement(CardTitle, null, statsPlan.name)),\n        React.createElement(CardBody, null,\n            React.createElement(Chart, { schema: chartSchema, data: getChartData(statsPlan), specificFunctions: {\n                    labelFormat: {\n                        customTooltipFormatting: customTooltipFormatting,\n                    },\n                } })))); };\n    var renderRight = function () { return (React.createElement(React.Fragment, null,\n        React.createElement(TotalSavings, { value: computeTotalSavings(statsPlan), isMoney: isMoney }),\n        React.createElement(Card, { isPlain: true },\n            React.createElement(CardBody, null,\n                React.createElement(List, { isPlain: true },\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).benefit.color }) }, \"Savings from automating this plan\"),\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).cost.color }) }, \"Costs from creating, maintaining and running the automation\"),\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).net.color }) }, \"Cumulative savings over time\")))),\n        React.createElement(FormulaDescription, null))); };\n    return (React.createElement(Card, null,\n        React.createElement(RoutedTabs, { tabsArray: tabsArray }),\n        React.createElement(Grid, null,\n            React.createElement(GridItem, { span: 9 }, renderLeft()),\n            React.createElement(GridItem, { span: 3 }, renderRight()))));\n};\nexport default StatisticsTab;\n","import React, { useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { readPlanOptions } from '../../../Api/';\nimport { paths } from '../index';\n\nimport Form from '../Shared/Form';\nimport useRequest from '../../../Utilities/useRequest';\nimport { createUrl } from '../../../QueryParams/';\n\nconst Edit = ({ data }) => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const {\n    result: options,\n    isSuccess,\n    request: fetchPlanOptions,\n  } = useRequest(readPlanOptions, {\n    meta: {\n      rbac: {\n        perms: {},\n      },\n    },\n  });\n\n  const canWrite =\n    options.meta.rbac.perms?.write === true ||\n    options.meta.rbac.perms?.all === true;\n\n  useEffect(() => {\n    fetchPlanOptions({});\n  }, []);\n\n  useEffect(() => {\n    if (isSuccess && !canWrite) navigate(createUrl(paths.getDetails(id)));\n  }, [canWrite]);\n\n  const renderContent = () => {\n    if (!isSuccess) return null;\n    return <Form title=\"Edit plan\" options={options} data={data} />;\n  };\n\n  return renderContent();\n};\n\nEdit.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default Edit;\n","import { Paths } from '../../paths';\nexport var paths = {\n    getDetails: function (id) { return \"\".concat(Paths.savingsPlanner, \"/\").concat(id); },\n};\n","import Details from './Details';\n\nexport default Details;\n","import React, { useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { CaretLeftIcon } from '@patternfly/react-icons';\nimport { Card } from '@patternfly/react-core';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\n\nimport DetailsTab from './DetailsTab';\nimport StatisticsTab from './StatisticsTab';\nimport ApiErrorState from '../../../Components/ApiStatus/ApiErrorState';\n\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport Breadcrumbs from '../../../Components/Breadcrumbs';\n\nimport { readPlan } from '../../../Api/';\n\nimport SavingsPlanEdit from '../Edit';\nimport useRequest from '../../../Utilities/useRequest';\n\nconst Details = () => {\n  const { id } = useParams();\n  const location = useLocation();\n\n  const queryParams = { id: [id] };\n\n  let pageTitle = 'Details';\n  if (location.pathname.indexOf('/statistics') !== -1) {\n    pageTitle = 'Statistics';\n  } else if (location.pathname.indexOf('/edit') !== -1) {\n    pageTitle = 'Edit plan';\n  }\n\n  const {\n    result: { rbac, plan },\n    isSuccess: dataSuccess,\n    error: dataError,\n    request: fetchEndpoints,\n  } = useRequest(readPlan, {\n    plan: {},\n    rbac: {\n      perms: {},\n    },\n  });\n  useEffect(() => {\n    if (!location.pathname.includes('/edit')) fetchEndpoints(id);\n  }, [location]);\n\n  useEffect(() => {\n    fetchEndpoints(id);\n  }, [id]);\n\n  const canWrite =\n    dataSuccess && (rbac.perms?.write === true || rbac.perms?.all === true);\n\n  const tabsArray = [\n    {\n      id: 0,\n      name: (\n        <>\n          <CaretLeftIcon />\n          {'Back to Plans'}\n        </>\n      ),\n      link: '../savings-planner',\n    },\n    { id: 1, name: 'Details', link: `../savings-planner/${id}` },\n    {\n      id: 2,\n      name: 'Statistics',\n      link: `../savings-planner/${id}/statistics`,\n    },\n  ];\n\n  const breadcrumbsItems = dataSuccess\n    ? [\n        { title: 'Savings Planner', navigate: '../savings-planner' },\n        { title: plan.name, navigate: `../savings-planner/${id}` },\n      ]\n    : [];\n\n  return (\n    <>\n      {dataError && <ApiErrorState message={dataError.error} />}\n      {dataSuccess && (\n        <>\n          <PageHeader>\n            <Breadcrumbs items={breadcrumbsItems} />\n            <PageHeaderTitle title={pageTitle} />\n          </PageHeader>\n          <Main>\n            <Card>\n              {location.pathname.includes('edit') && (\n                <SavingsPlanEdit data={plan} />\n              )}\n              {location.pathname.includes('statistics') && (\n                <StatisticsTab\n                  tabsArray={tabsArray}\n                  plan={plan}\n                  queryParams={queryParams}\n                />\n              )}\n              {!location.pathname.includes('statistics') &&\n                !location.pathname.includes('edit') && (\n                  <DetailsTab\n                    plan={plan}\n                    tabsArray={tabsArray}\n                    canWrite={canWrite}\n                  />\n                )}\n            </Card>\n          </Main>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Details;\n","export async function getRelatedResourceDeleteCounts(requests) {\n  const results = {};\n  let error = null;\n  let hasCount = false;\n\n  try {\n    await Promise.all(\n      requests.map(async ({ request, label }) => {\n        const {\n          items: { count },\n        } = await request();\n        if (count > 0) {\n          results[label] = count;\n          hasCount = true;\n        }\n      })\n    );\n  } catch (err) {\n    error = err;\n  }\n\n  return {\n    results: hasCount && results,\n    error,\n  };\n}\n","export var ApiType;\n(function (ApiType) {\n    ApiType[\"nonGrouped\"] = \"nonGrouped\";\n    ApiType[\"grouped\"] = \"grouped\";\n})(ApiType || (ApiType = {}));\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { v4 as uuidv4 } from 'uuid';\nimport { ApiType } from './types';\nexport var convertGroupedByData = function (data) {\n    var dates = data.dates;\n    var items = [];\n    dates.forEach(function (el) {\n        // Add items to the correct serie\n        el.items.forEach(function (item, idx) {\n            if (!items[idx]) {\n                items[idx] = {\n                    serie: [],\n                    hidden: false,\n                    name: uuidv4(),\n                };\n            }\n            items[idx].serie.push(__assign({ created_date: el.date }, item));\n        });\n    });\n    return items;\n};\nexport var convertApiToData = function (result) {\n    var _a;\n    var data = {\n        series: [],\n        legend: [],\n    };\n    if ('dates' in result) {\n        result.type = ApiType.grouped;\n    }\n    else {\n        result.type = ApiType.nonGrouped;\n    }\n    switch (result.type) {\n        case ApiType.grouped:\n            data.series = convertGroupedByData(result);\n            break;\n        case ApiType.nonGrouped:\n            data.series = [\n                {\n                    serie: result.items || result.meta.legend,\n                    hidden: false,\n                    name: uuidv4(),\n                },\n            ];\n            break;\n    }\n    if ((_a = result.meta) === null || _a === void 0 ? void 0 : _a.legend) {\n        data.legend = result.meta.legend.map(function (item) {\n            var s = data.series.find(function (_a) {\n                var serie = _a.serie;\n                return serie.find(function (_a) {\n                    var serieId = _a.id;\n                    return serieId === item.id;\n                });\n            });\n            return __assign(__assign({}, item), { childName: s && s.name ? s.name : '' });\n        });\n    }\n    return data;\n};\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React, { useEffect, useState } from 'react';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport ChartBuilder, { functions, } from 'react-json-chart-builder';\nimport { useQueryParams } from '../../QueryParams';\nimport { convertApiToData } from './convertApi';\nvar CustomPoint = function (_a) {\n    var x = _a.x, y = _a.y, disableInlineStyles = _a.disableInlineStyles, props = __rest(_a, [\"x\", \"y\", \"disableInlineStyles\"]);\n    return x != undefined && y != undefined ? (React.createElement(ExclamationCircleIcon, __assign({ x: x - 8, y: y - 8 }, props, props.events))) : null;\n};\nvar customFunctions = function (specificFunctions) { return (__assign(__assign({}, functions), { axisFormat: __assign(__assign(__assign({}, functions.axisFormat), { formatAsYear: function (tick) {\n            return Intl.DateTimeFormat('en', { year: 'numeric' }).format(new Date(tick));\n        }, formatAsMonth: function (tick) {\n            return Intl.DateTimeFormat('en', { month: 'long' }).format(new Date(tick));\n        } }), specificFunctions === null || specificFunctions === void 0 ? void 0 : specificFunctions.axisFormat), labelFormat: __assign(__assign({}, functions.labelFormat), specificFunctions === null || specificFunctions === void 0 ? void 0 : specificFunctions.labelFormat), onClick: __assign(__assign({}, functions.onClick), specificFunctions === null || specificFunctions === void 0 ? void 0 : specificFunctions.onClick), dataComponent: {\n        scatterPlot: CustomPoint,\n    } })); };\nvar applyHiddenFilter = function (chartData, chartSeriesHidden) {\n    if (chartSeriesHidden === void 0) { chartSeriesHidden = []; }\n    return (__assign(__assign({}, chartData), { series: chartData.series.map(function (series) { return (__assign(__assign({}, series), { hidden: (!!series.serie[0].id || !!series.serie[0].host_id) &&\n                !!chartSeriesHidden.includes(\n                // eslint-disable-next-line no-prototype-builtins\n                series.serie[0].hasOwnProperty('host_id').toString() ||\n                    // eslint-disable-next-line no-prototype-builtins\n                    series.serie[0].hasOwnProperty('id').toString()) })); }) }));\n};\nvar Chart = function (_a) {\n    var schema = _a.schema, data = _a.data, specificFunctions = _a.specificFunctions, _b = _a.namespace, namespace = _b === void 0 ? 'settings' : _b;\n    var _c = useQueryParams({\n        chartSeriesHiddenProps: [],\n    }, namespace), chartSeriesHiddenProps = _c.queryParams.chartSeriesHiddenProps, dispatch = _c.dispatch;\n    var _d = useState({\n        series: [],\n        legend: [],\n    }), chartData = _d[0], setChartData = _d[1];\n    var setChartDataHook = function (newChartData) {\n        dispatch({\n            type: 'SET_CHART_SERIES_HIDDEN_PROPS',\n            value: newChartData.series.map(function (line) { return [line.serie[0].id, line.hidden]; }),\n        });\n        setChartData(newChartData);\n    };\n    useEffect(function () {\n        setChartData(applyHiddenFilter(convertApiToData(data), chartSeriesHiddenProps));\n    }, [data]);\n    return (React.createElement(ChartBuilder, { schema: schema, functions: __assign({}, customFunctions(specificFunctions)), dataState: [chartData, setChartDataHook] }));\n};\nexport default Chart;\n","import { createIcon } from '../createIcon';\n\nexport const SyncAltIconConfig = {\n  name: 'SyncAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M370.72 133.28C339.458 104.008 298.888 87.962 255.848 88c-77.458.068-144.328 53.178-162.791 126.85-1.344 5.363-6.122 9.15-11.651 9.15H24.103c-7.498 0-13.194-6.807-11.807-14.176C33.933 94.924 134.813 8 256 8c66.448 0 126.791 26.136 171.315 68.685L463.03 40.97C478.149 25.851 504 36.559 504 57.941V192c0 13.255-10.745 24-24 24H345.941c-21.382 0-32.09-25.851-16.971-40.971l41.75-41.749zM32 296h134.059c21.382 0 32.09 25.851 16.971 40.971l-41.75 41.75c31.262 29.273 71.835 45.319 114.876 45.28 77.418-.07 144.315-53.144 162.787-126.849 1.344-5.363 6.122-9.15 11.651-9.15h57.304c7.498 0 13.194 6.807 11.807 14.176C478.067 417.076 377.187 504 256 504c-66.448 0-126.791-26.136-171.315-68.685L48.97 471.03C33.851 486.149 8 475.441 8 454.059V320c0-13.255 10.745-24 24-24z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const SyncAltIcon = createIcon(SyncAltIconConfig);\n\nexport default SyncAltIcon;","import { createIcon } from '../createIcon';\n\nexport const ClockIconConfig = {\n  name: 'ClockIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256,8C119,8,8,119,8,256S119,504,256,504,504,393,504,256,393,8,256,8Zm92.49,313h0l-20,25a16,16,0,0,1-22.49,2.5h0l-67-49.72a40,40,0,0,1-15-31.23V112a16,16,0,0,1,16-16h32a16,16,0,0,1,16,16V256l58,42.5A16,16,0,0,1,348.49,321Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ClockIcon = createIcon(ClockIconConfig);\n\nexport default ClockIcon;","import React from 'react';\nimport { Label } from '@patternfly/react-core';\nimport { CheckCircleIcon, ExclamationCircleIcon, ClockIcon, SyncAltIcon, ExclamationTriangleIcon, } from '@patternfly/react-icons';\nimport { capitalize } from '../Utilities/helpers';\nvar JobStatus = function (_a) {\n    var status = _a.status;\n    var getColor = function () {\n        switch (status) {\n            case 'successful':\n                return 'green';\n            case 'failed':\n            case 'error':\n                return 'red';\n            case 'running':\n            case 'pending':\n                return 'blue';\n            case 'canceled':\n                return 'orange';\n            // case new, waiting\n            default:\n                return 'grey';\n        }\n    };\n    var getIcon = function () {\n        switch (status) {\n            case 'successful':\n                return React.createElement(CheckCircleIcon, null);\n            case 'failed':\n            case 'error':\n                return React.createElement(ExclamationCircleIcon, null);\n            case 'running':\n                return React.createElement(SyncAltIcon, null);\n            case 'canceled':\n                return React.createElement(ExclamationTriangleIcon, null);\n            // case new, waiting, pending\n            default:\n                return React.createElement(ClockIcon, null);\n        }\n    };\n    return (React.createElement(Label, { variant: \"outline\", color: getColor(), icon: getIcon(), style: { marginRight: '0.5rem', marginBottom: '0.5rem' } }, capitalize(status)));\n};\nexport default JobStatus;\n","var currencyFormatter = function (n) {\n    var formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n    });\n    return formatter.format(n); /* $2,500.00 */\n};\nexport default currencyFormatter;\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","cooked","raw","CardActionsWrapper","templateObject_1","Object","defineProperty","value","_a","children","CardActions","WarningMessage","styled","Alert","Label","DeleteButton","onConfirm","modalTitle","variant","isDisabled","ouiaId","deleteMessage","deleteDetailsRequests","disabledTooltip","useState","isOpen","setIsOpen","deleteMessageError","setDeleteMessageError","deleteDetails","setDeleteDetails","isLoading","setIsLoading","toggleModal","isModalOpen","length","getRelatedResourceDeleteCounts","results","error","AlertModal","title","onClose","ErrorDetail","detail","Tooltip","content","position","Button","spinnerAriaValueText","undefined","onClick","actions","key","values","isInline","entries","map","Badge","propTypes","PropTypes","RoutedTabs","tabsArray","defaultTabId","navigate","useNavigate","location","useLocation","Tabs","activeKey","find","tab","pathname","includes","toLowerCase","id","getActiveTabId","onSelect","_","eventKey","match","link","Tab","TabTitleText","role","arrayOf","shape","number","string","oneOfType","node","isRequired","CardBody","PFCardBody","Divider","PFDivider","DetailsTab","plan","canWrite","automation_status","category","description","frequency_period","hosts","manual_time","modified","tasks","template_details","template_id","useRequest","readPlanOptions","options","result","optionsSuccess","isSuccess","fetchOptions","request","useEffect","renderOptionsBasedValue","val","fromOptionsValue","jobStatusLabel","item","index","JobStatus","status","color","icon","style","marginRight","marginBottom","labelsAndValues","Name","Description","Frequency","Template","templateId","initialQueryParams","DEFAULT_NAMESPACE","jobExplorer","quick_date_range","createUrl","Paths","showTemplate","Array","isArray","formatDateTime","props","deletePlan","deletePlans","deleteError","useDismissableError","dismissError","padding","DescriptionList","isHorizontal","columnModifier","lg","keys","i","DescriptionListGroup","TooltipPosition","last_known_day","last_known_month","last_known_year","last_known_date","DescriptionListTerm","DescriptionListDescription","component","List","type","task","ListItem","CardFooter","split","SquareFullIcon","n","concat","toFixed","toLocaleString","TotalSavings","_b","_c","isMoney","Card","isPlain","CardTitle","paddingBottom","Title","headingLevel","size","currencyFormatter","CostsText","CodeBlock","CodeBlockCode","SavingsText","ButtonVariant","Modal","ModalVariant","__assign","assign","t","s","arguments","p","prototype","hasOwnProperty","call","apply","this","getChartData","data","items","projections","series_stats","meta","legend","count","cost","benefit","net","yearConversion","seriesStats","d","statsPlan","initial","year1","year2","year3","year","total_costs","total_hours_spent_risk_adjusted","setIsMoney","chartSchema","kind","parent","domainPadding","x","bottom","left","themeColor","tooltip","cursor","stickToAxis","mouseFollow","legendTooltip","legendData","childName","symbol","fill","titleProperyForLegend","labelFormat","xAxis","label","yAxis","tickFormat","grid","stroke","axisLabel","y","barRatio","barWidth","labelName","strokeWidth","Grid","GridItem","span","CardHeader","ToggleGroup","ToggleGroupItem","text","buttonId","isSelected","onChange","Chart","schema","specificFunctions","customTooltipFormatting","datum","cumulative_net_benefits","cumulative_time_net_benefits","Edit","useParams","rbac","perms","fetchPlanOptions","write","all","paths","Form","queryParams","pageTitle","indexOf","readPlan","dataSuccess","dataError","fetchEndpoints","breadcrumbsItems","ApiErrorState","message","PageHeader","Breadcrumbs","PageHeaderTitle","Main","requests","hasCount","Promise","ApiType","CustomPoint","disableInlineStyles","e","getOwnPropertySymbols","propertyIsEnumerable","__rest","events","customFunctions","axisFormat","formatAsYear","tick","Intl","DateTimeFormat","format","Date","formatAsMonth","month","dataComponent","scatterPlot","namespace","chartSeriesHiddenProps","dispatch","_d","series","chartData","setChartData","chartSeriesHidden","hidden","serie","host_id","toString","applyHiddenFilter","grouped","nonGrouped","dates","forEach","el","idx","push","created_date","date","convertGroupedByData","convertApiToData","functions","dataState","newChartData","line","SyncAltIcon","createIcon","ClockIcon","getColor","getIcon","NumberFormat","currency"],"sourceRoot":""}