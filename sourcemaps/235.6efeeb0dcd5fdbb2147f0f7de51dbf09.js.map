{"version":3,"file":"js/235.b43436e370dd9ae4555c.js","mappings":"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","sources":["webpack:///./src/Charts/ROITopTemplates.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport currencyFormatter from '../Utilities/currencyFormatter';\n\nclass Tooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip-base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, 0) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', 92)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.name = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', -2)\n      .text('Template name');\n    this.savings = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 52)\n      .attr('font-size', 12)\n      .attr('font-weight', 'bold')\n      .attr('fill', 'white')\n      .text('Total savings $0');\n    this.manualCost = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', 16)\n      .text('Manual cost $0');\n    this.automationCost = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', 34)\n      .text('Automation cost $0');\n  }\n\n  handleMouseOver = (d) => {\n    let name;\n    let savings;\n    let manualCost;\n    let automationCost;\n    const scrollLeftOffset = d3.select('#d3-roi-chart-root').node().scrollLeft;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10 +\n      scrollLeftOffset;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      30;\n    if (!d) {\n      return;\n    } else {\n      savings = currencyFormatter(+d.delta);\n      name = d.name;\n      manualCost = currencyFormatter(+d.manualCost);\n      automationCost = currencyFormatter(+d.automatedCost);\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n    this.name.text('' + name);\n    this.savings.text(`Total savings ${savings}`);\n    this.manualCost.text(`Manual Cost ${manualCost}`);\n    this.automationCost.text(`Automation Cost ${automationCost}`);\n    this.nameWidth = this.name.node().getComputedTextLength();\n    this.savingsWidth = this.savings.node().getComputedTextLength();\n    this.manualCostWidth = this.manualCost.node().getComputedTextLength();\n    this.automationCostWidth = this.automationCost\n      .node()\n      .getComputedTextLength();\n    this.widestTextElem = d3.max([\n      this.nameWidth,\n      this.savingsWidth,\n      this.automationCostWidth,\n      this.manualCostWidth,\n    ]);\n\n    const maxTextPerc = (this.widestTextElem / this.boxWidth) * 100;\n    const threshold = 85;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 15) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.name.attr('x', -(toolTipWidth - 7));\n      this.savings.attr('x', -(toolTipWidth - 7));\n      this.manualCost.attr('x', -(toolTipWidth - 7));\n      this.automationCost.attr('x', -(toolTipWidth - 7));\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 15) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.name.attr('x', 20);\n      this.savings.attr('x', 20);\n      this.manualCost.attr('x', 20);\n      this.automationCost.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass TopTemplatesSavings extends Component {\n  constructor(props) {\n    super(props);\n    this.init = this.init.bind(this);\n    this.draw = this.draw.bind(this);\n    this.resize = this.resize.bind(this);\n    this.state = {\n      timeout: null,\n    };\n  }\n\n  // Methods\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  init() {\n    this.draw();\n  }\n\n  draw() {\n    // Use PF chart color\n    const color = '#0066CC'; //blue\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const { data } = this.props;\n    let width;\n    // adjust chart width to support larger datasets\n    if (data.length >= 15) {\n      const containerWidth = d3.select('.automation-wrapper').node();\n      width =\n        containerWidth.getBoundingClientRect().width -\n        this.props.margin.left -\n        this.props.margin.right;\n    } else {\n      width = this.props.getWidth();\n    }\n\n    const height = this.props.getHeight();\n    const x = d3.scaleBand().rangeRound([0, width]).padding(0.45);\n    const y = d3.scaleLinear().range([height, 0]);\n    // format our X Axis ticks\n    let ticks;\n    ticks = data.map((d) => d.name);\n    const formatYAxisValue = d3.format('.2s');\n    const xAxis = d3.axisBottom(x).tickValues(ticks);\n\n    const yAxis = d3\n      .axisLeft(y)\n      .ticks(8)\n      .tickFormat((d) => formatYAxisValue(d).replace('G', 'B'))\n      .tickSize(-width, 0, 0);\n\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n\n    const taskNames = data.map((d) => d.name);\n    const tooltip = new Tooltip({\n      svg: '#' + this.props.id,\n    });\n    x.domain(taskNames);\n    y.domain([0, d3.max(data, (d) => d.delta * 1.15) || 8]);\n\n    // add y axis\n    svg\n      .append('g')\n      .attr('class', 'y axis')\n      .call(yAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7')\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 6)\n      .attr('dy', '.71em')\n      .style('text-anchor', 'end')\n      .style('font-weight', 'bold')\n      .text('Value');\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Savings per template ($)');\n\n    // add x axis\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n      .selectAll('text')\n      .style('text-anchor', 'start')\n      .attr('dx', '0.75em')\n      .attr('dy', -x.bandwidth() / 1.45 - 8)\n      .attr('transform', 'rotate(-90)');\n\n    svg.selectAll('.x-axis line').attr('stroke', 'transparent');\n\n    svg\n      .selectAll('.bar')\n      .data(data)\n      .enter()\n      .append('rect')\n      .attr('x', (d) => x(d.name))\n      .attr('width', x.bandwidth())\n      .attr('y', (d) => y(d.delta))\n      .style('fill', () => color)\n      .attr('height', (d) => height - y(d.delta))\n      .on('mouseover', function (d) {\n        d3.select(this).style('fill', d3.rgb(color).darker(1));\n        tooltip.handleMouseOver(d);\n      })\n      .on('mousemove', tooltip.handleMouseOver)\n      .on('mouseout', function () {\n        d3.select(this).style('fill', color);\n        tooltip.handleMouseOut();\n      });\n  }\n\n  componentDidMount() {\n    this.init();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate() {\n    this.init();\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nTopTemplatesSavings.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n};\n\nexport default initializeChart(TopTemplatesSavings);\n"],"names":["Tooltip","props","d","name","savings","manualCost","automationCost","scrollLeftOffset","d3","node","scrollLeft","x","svg","getBoundingClientRect","y","currencyFormatter","delta","automatedCost","toolTipWidth","toolTipBase","width","chartWidth","flipped","text","nameWidth","getComputedTextLength","savingsWidth","manualCostWidth","automationCostWidth","widestTextElem","adjustedWidth","maxTextPerc","boxWidth","overage","boundingBox","attr","toolTipPoint","style","interrupt","transition","delay","this","draw","append","slice","textWidthThreshold","TopTemplatesSavings","init","bind","resize","state","timeout","clearTimeout","setState","setTimeout","color","id","remove","data","length","margin","left","right","getWidth","ticks","height","getHeight","rangeRound","padding","range","map","formatYAxisValue","xAxis","tickValues","yAxis","tickFormat","replace","tickSize","bottom","top","taskNames","tooltip","domain","call","selectAll","bandwidth","enter","on","darker","handleMouseOver","handleMouseOut","window","addEventListener","removeEventListener","Component","propTypes","PropTypes","initializeChart"],"sourceRoot":""}