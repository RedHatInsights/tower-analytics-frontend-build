{"version":3,"sources":["webpack:///./src/Api.js","webpack:///./src/Charts/BaseChart.js","webpack:///./src/Components/ApiErrorState.js","webpack:///./src/Components/EmptyState.js","webpack:///./src/Components/LoadingState.js","webpack:///./src/Components/NoData.js","webpack:///./src/Components/Toolbar/constants.js","webpack:///./src/Components/Toolbar/CustomFormElements/CategoryDropdown.js","webpack:///./src/Components/Toolbar/CustomFormElements/ToolbarFilterItem.js","webpack:///./src/Components/Toolbar/helpers.js","webpack:///./src/Components/Toolbar/Groups/FiltersCategoriesGroup.js","webpack:///./src/Components/Toolbar/CustomFormElements/CustomDateSelector.js","webpack:///./src/Components/Toolbar/Groups/QuickDateGroup.js","webpack:///./src/Components/Toolbar/Groups/SortByGroup.js","webpack:///./src/Components/Toolbar/Groups/SettingsPanel.js","webpack:///./src/Components/Toolbar/Toolbar.js","webpack:///./src/Components/Toolbar/index.js","webpack:///./src/Charts/ROITopTemplates.js","webpack:///./src/Containers/AutomationCalculator/helpers.js","webpack:///./src/Containers/AutomationCalculator/TotalSavings.js","webpack:///./src/Containers/AutomationCalculator/CalculationCost.js","webpack:///./src/Containers/AutomationCalculator/AutomationFormula.js","webpack:///./src/Containers/AutomationCalculator/TopTemplates.js","webpack:///./src/Containers/AutomationCalculator/AutomationCalculator.js","webpack:///./src/Utilities/Tooltip.js","webpack:///./src/Charts/BarChart.js","webpack:///./src/Charts/LineChart.js","webpack:///./src/Components/ModulesList.js","webpack:///./src/Components/ModalContents.js","webpack:///./src/Components/TemplatesList.js","webpack:///./src/Containers/Clusters/Clusters.js","webpack:///./src/Components/NoResults.js","webpack:///./src/Components/JobStatus.js","webpack:///./src/Components/JobExplorerList.js","webpack:///./src/Containers/JobExplorer/JobExplorer.js","webpack:///./src/Components/NotificationsList.js","webpack:///./src/Containers/Notifications/Notifications.js","webpack:///./src/Utilities/Legend.js","webpack:///./src/Charts/GroupedBarChart/GroupedBarChart.js","webpack:///./src/Charts/GroupedBarChart/OrgsTooltip.js","webpack:///./src/Charts/GroupedBarChart/HostsTooltip.js","webpack:///./src/Charts/PieChart.js","webpack:///./src/Containers/OrganizationStatistics/OrganizationStatistics.js","webpack:///./src/Utilities/colors.ts","webpack:///./src/Components/RoutedTabs.js","webpack:///./src/Containers/SavingsPlanner/DetailsTab.js","webpack:///./src/Containers/SavingsPlanner/GraphTab.js","webpack:///./src/Components/Breadcrumbs.js","webpack:///./src/Containers/SavingsPlanner/SavingsPlan.js","webpack:///./src/Containers/SavingsPlanner/PlanCard.js","webpack:///./src/Containers/SavingsPlanner/SavingsPlanner.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Utilities/useApi.js","webpack:///./src/Utilities/useQueryParams.js","webpack:///./src/Utilities/useRedirect.js","webpack:////home/travis/build/RedHatInsights/tower-analytics-frontend/node_modules/moment/locale|sync|/^\\.\\/.*$/","webpack:///./src/Components/Pagination/Pagination.tsx","webpack:///./src/Components/Pagination/index.ts"],"names":["plansEndpoint","handleResponse","response","json","then","ok","status","Promise","reject","message","error","authenticatedFetch","endpoint","options","window","insights","chrome","auth","getUser","fetch","preflightRequest","readJobExplorer","params","paginationParams","limit","offset","sort_by","qs","stringify","url","URL","location","origin","search","method","body","JSON","readEventExplorer","readROI","readHostExplorer","readPlans","readPlan","readClustersOptions","readOrgOptions","readROIOptions","readPlanOptions","readClusters","readNotifications","Object","keys","forEach","key","searchParams","append","readJobExplorerOptions","initializeChart","Chart","BaseChart","props","id","margin","getWidth","parseInt","d3","style","left","right","getHeight","top","bottom","propTypes","PropTypes","ApiErrorState","EmptyState","variant","EmptyStateVariant","EmptyStateIcon","icon","ExclamationCircleIcon","color","globalDangerColor200","Title","headingLevel","size","EmptyStateBody","DefaultEmptyState","preflightError","WrenchIcon","href","target","rel","Button","onClick","reload","CubesIcon","optionsForCategories","isSingle","name","placeholder","quick_date_range","job_type","org_id","cluster_id","template_id","sort_options","automation_status","frequency_period","category","inventory_id","CategoryDropdown","selected","setSelected","categories","useState","isExpanded","setIsExpanded","ToolbarItem","Select","isOpen","aria-label","onToggle","onSelect","_event","selection","selections","placeholderText","map","SelectOption","value","styled","PFSelectOption","renderValues","values","description","marginLeft","ToolbarFilterItem","item","comparator","val","categoryKey","filter","isVisible","hasChips","setFilter","expanded","setExpanded","searchVal","setSearchVal","ToolbarFilter","data-cy","showToolbarItem","chips","categoryName","deleteChip","InputGroup","TextInput","type","onChange","e","i","undefined","reduce","acc","Number","isInteger","cmpItem","push","handleCheckboxChips","valueToDelete","keyToDelete","find","filteredArr","event","includes","hasInlineFilter","onFilter","textInput","toLowerCase","maxHeight","FilterCategoriesGroup","filterCategories","filters","setFilters","currentCategory","setCurrentCategory","ToolbarGroup","el","CustomDateSelector","onInputChange","startDate","endDate","QuickDateGroup","start_date","end_date","SortByGroup","sort_order","SettingsPanel","settingsExpanded","setSettingsExpanded","Card","isFlat","backgroundColor","CardHeader","CardActions","CardTitle","CardBody","Switch","label","labelOff","isChecked","only_root_workflows_and_standalone_jobs","Tooltip","position","content","FilterableToolbar","pagination","hasSettings","restCategories","obj","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarContent","length","isActive","visibility","default","lg","d","savings","manualCost","automationCost","scrollLeftOffset","node","scrollLeft","x","svg","getBoundingClientRect","y","formatDollars","delta","automatedCost","toolTipWidth","toolTipBase","width","chartWidth","flipped","text","nameWidth","getComputedTextLength","savingsWidth","manualCostWidth","automationCostWidth","widestTextElem","adjustedWidth","maxTextPerc","boxWidth","overage","boundingBox","attr","toolTipPoint","interrupt","transition","delay","this","draw","amount","parseFloat","toFixed","toString","replace","slice","textWidthThreshold","TopTemplatesSavings","init","bind","resize","state","timeout","clearTimeout","setState","setTimeout","remove","data","ticks","height","rangeRound","padding","range","formatYAxisValue","xAxis","tickValues","yAxis","tickFormat","tickSize","taskNames","tooltip","domain","call","selectAll","bandwidth","enter","on","darker","handleMouseOver","handleMouseOut","addEventListener","removeEventListener","Component","BorderedCardTitle","TotalSavings","totalSavings","borderTop","paddingBottom","InputAndText","validFloat","floatValue","CalculationCost","costManual","setCostManual","costAutomation","setCostAutomation","InputGroupText","paddingTop","TemplateDetail","TemplateDetailSubTitle","TooltipWrapper","IconGroup","QuestionIconTooltip","details","Popover","bodyContent","k","capitalize","split","join","TopTemplates","sortBy","setDataRunTime","setEnabled","redirectToJobExplorer","overflow","flex","className","component","convertSecondsToMins","avgRunTime","minutes","convertMinsToSeconds","successful_hosts_total","trimmed","sortAttribute","showSortAttr","enabled","deselectedIds","setDeselectedIds","Wrapper","WrapperLeft","WrapperRight","filterDisabled","updateDeltaCost","convertSecondsToHours","successful_elapsed_total","calculateDelta","AutomationCalculator","history","toJobExplorer","useRedirect","useApi","preflight","setPreflight","setOptions","items","api","fetchApi","setDataInApi","useQueryParams","roiConst","queryParams","setFromToolbar","useEffect","NotAuthorized","notAuthorizedParams","PageHeader","PageHeaderTitle","title","Main","isSuccess","isLoading","LoadingState","NoData","textAlign","paddingLeft","sum","curr","display","flexDirection","templateId","seconds","updatedData","setUnfilteredData","opts","success","fail","total","formatTooltipDate","RAN","FAIL","TOTAL","date","DATE","jobs","jobsWidth","failed","successful","successTextWidth","failTextWidth","circleSuccess","circleFail","failedIcon","successIcon","successText","failText","clickMore","colors","BarChart","formattedData","jobExplorer","Paths","formattedDate","formatDate","orgId","initialQueryParams","arrayFormat","pathname","parseTime","formatted","created_date","successful_count","failed_count","Date","concat","barTooltip","layers","order","stack","maxTicks","Math","round","layer","_d","duration","ease","prevProps","LineChart","updateCluster","clusterId","path","attrTween","tweenDash","l","getTotalLength","t","unformattedData","successLine","curve","failLine","defined","isNaN","vertical","handleMouseMove","intersectX","cx","baseVal","DataListCell","PFDataListCell","DataListItem","PFDataListItem","DataCellEnd","ModulesList","modules","DataList","background","aria-labelledby","border","module","index","host_task_count","trimStr","marginRight","PFDataListItemNoBorder","DataListItemCompact","DataListCellCompact","DataListFocus","DataCellEndCompact","ModalContents","successCount","totalCount","elapsed","selectedId","handleModal","qp","jobType","handleCloseBtn","relatedJobs","setRelatedJobs","stats","setStats","useHistory","relatedTemplateJobsParams","attributes","group_by_time","agreggateTemplateParams","group_by","Modal","onClose","actions","total_count","toISOString","substr","ceil","formatAvgRun","most_failed_tasks","percentage","total_failed_count","task_name","formatTopFailedTask","most_failed_steps","template_name","formatTopFailedStep","Label","job","cluster_name","formatDateTime","started","formatSeconds","TemplatesList","templates","setSelectedId","isModalOpen","setIsModalOpen","initialTopTemplateParams","initialTopWorkflowParams","initialModuleParams","setPreFlightError","clusters","chartData","setData","setTemplates","workflows","setWorkflows","setModules","initialOptionsParams","optionsQueryParams","topTemplatesParams","topWorkflowParams","topModuleParams","initializeWithPreflight","marginTop","SearchIcon","JobStatus","str","getColor","getIcon","charAt","toUpperCase","headerLabels","ExternalLinkIcon","PFExternalLinkIcon","DataListCellHeader","DataListItemCells","PFDataListItemCells","DataListToggle","PFDataListToggle","mobileBreakpoint","AllJobsTemplate","innerWidth","windowWidth","setWindowWidth","onResize","ariaLabel","ariaLabelledBy","count","DataListItemRow","aria-controls","newExpanded","idx","indexOf","dataListCells","tower_link","fontWeight","org_name","formatJobType","DataListContent","isHidden","created","finished","buildListRow","JobExplorerList","labels","isCompact","JobExplorer","meta","setFromPagination","dispatch","appNavClick","secondaryNav","initialSearchParams","parse","parseBooleans","parseNumbers","updateURL","Pagination","setPagination","PaginationVariant","ExternalLinkAltIcon","PFExternalLinkAltIcon","NotificationDrawerListItem","PFNotificationDrawerListItem","NotificationDrawerList","PFNotificationDrawerList","stringifyDate","day","moment","now","utc","isAfter","diff","isSame","valueOf","AllNotificationTemplate","notifications","notification_id","tower_url","NotificationDrawerListItemHeader","NotificationDrawerListItemBody","timestamp","ErrorNotificationTemplate","notification","NoticeNotificationTemplate","WarningNotificationTemplate","NotificationsList","filterBy","PFCardTitle","DropdownGroup","notificationOptions","disabled","formatClusterName","uuid","install_uuid","notificationsData","setNotificationsData","clusterOptions","setClusterOptions","selectedCluster","setSelectedCluster","firstRender","setFirstRender","setIsLoading","setMeta","setId","setSeverity","ignore","fetchEndpoints","all","p","clustersData","FormSelect","FormSelectOption","isDisabled","severity","NotificationDrawer","Container","LegendDetail","Color","SubTitle","Legend","chartName","some","pieces","GroupedBarChart","TooltipClass","legend","colorFunc","selectedIds","setSelectedIds","selectedOrgs","x0","x1","maxTicksOneMonth","maxTicksTwoMonths","dates","yLabel","exit","bars","merge","subEnter","defaultProps","OrgsTooltip","orgName","HostsTooltip","perc","percSuccess","drawn","percent","success_rate","maxLength","percentageTotal","percentageSuccess","boundingBOx","showSuccess","boundingHeight","boundingWidth","PieChart","sort","a","b","radius","min","filteredData","getTotal","donutTooltip","pie","arc","outerRadius","innerRadius","classed","CardContainer","TopCard","scaleOrdinal","pieChartMapper","attrName","chartMapper","rest","dateForJobExplorer","OrganizationStatistics","activeTabKey","setActiveTabKey","orgs","setOrgs","setJobs","tasks","setTasks","constants","jobEventsByOrgParams","include_others","jobRunsByOrgParams","jobsByDateAndOrgParams","hostAcrossOrgParams","readJobsOrHosts","Tabs","activeKey","_","tabIndex","Tab","eventKey","RoutedTabs","tabsArray","defaultTabId","useLocation","tab","link","getActiveTabId","match","TabTitleText","role","arrayOf","shape","number","string","oneOfType","isRequired","DetailsTab","plans","hosts","manual_time","modified","template_details","labelsAndValues","Name","Description","Frequency","Template","showTemplate","DescriptionList","isHorizontal","columnModifier","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","Divider","TextContent","List","task","ListItem","GraphTab","Breadcrumbs","current","Breadcrumb","navigate","basePathNavigate","getBaseName","BreadcrumbItem","to","BreadcrumbHeading","useParams","pageTitle","showCardHeader","endsWith","breadcrumbUrl","breadcrumbsItems","Route","exact","SavingsPlanner","CardLabel","PlanCard","template","isCardKebabOpen","setIsCardKebabOpen","useRouteMatch","kebabDropDownItems","DropdownItem","isHoverable","CardHeaderMain","Link","Dropdown","toggle","KebabToggle","isPlain","dropdownItems","Checkbox","CardFooter","savingsPlanner","combinedOptions","Gallery","hasGutter","datum","isSticky","defaultParams","roi","organizationStatistics","isNumeric","dateTime","format","startOf","s","mins","dataFetchReducer","action","payload","Error","initialData","postprocess","request","setRequest","useReducer","didCancel","initial","initialWithCalculatedParams","newState","newValues","entries","actionMapper","varName","setEndDate","setStartDate","days","subtract","setStartDateAsString","query","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","resolve","exports","__assign","assign","n","arguments","prototype","hasOwnProperty","apply","perPageOptions","_a","_b","getOwnPropertySymbols","propertyIsEnumerable","__rest","currentPage","floor","returnOffsetVal","page","itemCount","widgetId","perPage","onPerPageSelect","onSetPage"],"mappings":"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","file":"js/automation_analytics.d61b4ee55d70c8026fcb.js","sourcesContent":["import { stringify } from 'query-string';\n/* v0 endpoints */\nconst clustersEndpoint = `/api/tower-analytics/v0/clusters/`;\nconst notificationsEndpoint = `/api/tower-analytics/v0/notifications/`;\nconst preflightEndpoint = `/api/tower-analytics/v0/authorized/`;\n\n/* v1 endpoints */\nconst jobExplorerEndpoint = '/api/tower-analytics/v1/job_explorer/';\nconst hostExplorerEndpoint = '/api/tower-analytics/v1/host_explorer/';\nconst eventExplorerEndpoint = '/api/tower-analytics/v1/event_explorer/';\nconst ROIEndpoint = '/api/tower-analytics/v1/roi_templates/';\nconst plansEndpoint = '/api/tower-analytics/v1/plans/';\n\n/* page options endpoints */\nconst jobExplorerOptionsEndpoint =\n  '/api/tower-analytics/v1/job_explorer_options/';\nconst ROITemplatesOptionsEndpoint =\n  '/api/tower-analytics/v1/roi_templates_options/';\nconst orgOptionsEndpoint =\n  '/api/tower-analytics/v1/dashboard_organization_statistics_options/';\nconst clustersOptionsEndpoint =\n  '/api/tower-analytics/v1/dashboard_clusters_options/';\nconst planOptionsEndpoint = '/api/tower-analytics/v1/plan_options/';\n\nfunction handleResponse(response) {\n  return response.json().then((json) => {\n    if (response.ok) {\n      return json;\n    }\n\n    if (response.status === 404 || response.status === 401) {\n      return Promise.reject({\n        status: response.status,\n        message: json,\n      });\n    } else if (response.status === 403) {\n      return Promise.reject({\n        status: response.status,\n        error: 'RBAC access denied',\n      });\n    } else {\n      return Promise.reject(json);\n    }\n  });\n}\n\nfunction authenticatedFetch(endpoint, options) {\n  return window.insights.chrome.auth\n    .getUser()\n    .then(() => fetch(endpoint, options));\n}\n\nexport const preflightRequest = () => {\n  return authenticatedFetch(preflightEndpoint).then(handleResponse);\n};\n\nexport const readJobExplorer = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(jobExplorerEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readEventExplorer = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(eventExplorerEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readROI = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(ROIEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readHostExplorer = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(hostExplorerEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readPlans = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(plansEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readPlan = ({ params = {} }) => {\n  let url = new URL(plansEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readClustersOptions = ({ params = {} }) => {\n  let url = new URL(clustersOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readOrgOptions = ({ params = {} }) => {\n  let url = new URL(orgOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readROIOptions = ({ params = {} }) => {\n  let url = new URL(ROITemplatesOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readPlanOptions = () => {\n  let url = new URL(planOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'GET',\n  }).then(handleResponse);\n};\n\n// v0 endpoints used in Notifications.js\nexport const readClusters = () => {\n  return authenticatedFetch(clustersEndpoint).then(handleResponse);\n};\n\nexport const readNotifications = ({ params = {} }) => {\n  let url = new URL(notificationsEndpoint, window.location.origin);\n  Object.keys(params).forEach((key) =>\n    url.searchParams.append(key, params[key])\n  );\n  return authenticatedFetch(url).then(handleResponse);\n};\n\nexport const readJobExplorerOptions = ({ params = {} }) => {\n  let url = new URL(jobExplorerOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nconst initializeChart = (Chart) => {\n  const BaseChart = (props) => {\n    const { id, margin } = props;\n\n    const getWidth = () => {\n      let width;\n      width =\n        parseInt(d3.select('#' + id).style('width')) -\n          margin.left -\n          margin.right || 700;\n      return width;\n    };\n\n    const getHeight = () => {\n      let height;\n      height =\n        parseInt(d3.select('#' + id).style('height')) -\n          margin.top -\n          margin.bottom || 450;\n      return height;\n    };\n\n    return <Chart {...props} getWidth={getWidth} getHeight={getHeight} />;\n  };\n\n  BaseChart.propTypes = {\n    id: PropTypes.string,\n    margin: PropTypes.object,\n  };\n\n  return BaseChart;\n};\n\ninitializeChart.propTypes = {\n  Chart: PropTypes.element,\n};\n\nexport default initializeChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { global_danger_color_200 as globalDangerColor200 } from '@patternfly/react-tokens';\n\nconst ApiErrorState = ({ message }) => (\n  <EmptyState variant={EmptyStateVariant.small}>\n    <EmptyStateIcon\n      icon={ExclamationCircleIcon}\n      color={globalDangerColor200.value}\n    />\n    <Title headingLevel=\"h2\" size=\"lg\">\n      Error\n    </Title>\n    <EmptyStateBody>{message}</EmptyStateBody>\n  </EmptyState>\n);\n\nApiErrorState.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default ApiErrorState;\n","/*eslint max-len: [\"error\", { \"ignoreStrings\": true }]*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { WrenchIcon } from '@patternfly/react-icons';\n\nconst DefaultEmptyState = ({ preflightError: error }) => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={WrenchIcon} />\n    {error.status === 404 && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          No data found\n        </Title>\n        <EmptyStateBody>\n          Please visit{' '}\n          <a\n            href=\"https://docs.ansible.com/ansible-tower/latest/html/administration/usability_data_collection.html#automation-analytics\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            here\n          </a>{' '}\n          to learn how to enable Automation Analytics.\n        </EmptyStateBody>\n      </>\n    )}\n    {error.status === 401 && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          Not authorized\n        </Title>\n        <EmptyStateBody>\n          You do not have the correct permissions to view this page.\n        </EmptyStateBody>\n      </>\n    )}\n    {!error.status && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          Something went wrong, please try reloading the page\n        </Title>\n        <Button variant=\"primary\" onClick={() => window.location.reload()}>\n          Reload\n        </Button>\n      </>\n    )}\n  </EmptyState>\n);\n\nDefaultEmptyState.propTypes = {\n  preflightError: PropTypes.object,\n};\n\nexport default DefaultEmptyState;\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst DefaultLoadingState = () => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={CubesIcon} />\n    <Title headingLevel=\"h5\" size=\"lg\">\n      Loading...\n    </Title>\n    <EmptyStateBody>Please wait.</EmptyStateBody>\n  </EmptyState>\n);\n\nexport default DefaultLoadingState;\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst NoData = () => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={CubesIcon} />\n    <Title headingLevel=\"h5\" size=\"lg\">\n      No Data\n    </Title>\n  </EmptyState>\n);\n\nexport default NoData;\n","export const optionsForCategories = {\n  status: {\n    isSingle: false,\n    name: 'Status',\n    placeholder: 'Filter by job status',\n  },\n  quick_date_range: {\n    isSingle: true,\n    name: 'Date',\n    placeholder: 'Filter by date',\n  },\n  job_type: {\n    isSingle: false,\n    name: 'Job',\n    placeholder: 'Filter by job type',\n  },\n  org_id: {\n    isSingle: false,\n    name: 'Organization',\n    placeholder: 'Filter by organization',\n  },\n  cluster_id: {\n    isSingle: false,\n    name: 'Cluster',\n    placeholder: 'Filter by cluster',\n  },\n  template_id: {\n    isSingle: false,\n    name: 'Template',\n    placeholder: 'Filter by template',\n  },\n  sort_options: {\n    isSingle: true,\n    name: 'Sort by',\n    placeholder: 'Sort by attribute',\n  },\n  automation_status: {\n    isSingle: false,\n    name: 'Automation status',\n    placeholder: 'Filter by automation status',\n  },\n  frequency_period: {\n    isSingle: false,\n    name: 'Frequency',\n    placeholder: 'Filter by frequency',\n  },\n  category: {\n    isSingle: false,\n    name: 'Category',\n    placeholder: 'Filter by category',\n  },\n  name: {\n    isSingle: true,\n    name: 'Name',\n    placeholder: 'Filter by name',\n  },\n  inventory_id: {\n    isSingle: false,\n    name: 'Inventory',\n    placeholder: 'Filter by inventory',\n  },\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarItem, Select, SelectOption } from '@patternfly/react-core';\n\nconst CategoryDropdown = ({\n  selected,\n  setSelected = () => {},\n  categories = [],\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <ToolbarItem>\n      <Select\n        isOpen={isExpanded}\n        variant={'single'}\n        aria-label={'Categories'}\n        onToggle={() => setIsExpanded(!isExpanded)}\n        onSelect={(_event, selection) => {\n          setSelected(selection);\n          setIsExpanded(false);\n        }}\n        selections={selected}\n        placeholderText={'Filter by'}\n      >\n        {categories.map(({ key, name }) => (\n          <SelectOption key={key} value={key}>\n            {name}\n          </SelectOption>\n        ))}\n      </Select>\n    </ToolbarItem>\n  );\n};\n\nCategoryDropdown.propTypes = {\n  categories: PropTypes.array,\n  selected: PropTypes.string,\n  setSelected: PropTypes.func,\n};\n\nexport default CategoryDropdown;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ToolbarFilter,\n  Select,\n  SelectOption as PFSelectOption,\n  TextInput,\n  InputGroup,\n  ToolbarItem,\n  Button,\n} from '@patternfly/react-core';\n\nimport { SearchIcon } from '@patternfly/react-icons';\n\nimport { handleCheckboxChips, handleSingleChips } from '../helpers';\nimport { optionsForCategories } from '../constants';\nimport styled from 'styled-components';\n\nconst SelectOption = styled(PFSelectOption)`\n  display: block;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n  max-width: 300px;\n`;\n\nconst renderValues = (values) =>\n  values &&\n  values.map(({ key, value, description }) => (\n    <SelectOption key={key} value={key} description={description}>\n      <span style={{ marginLeft: 5 }}>{value} </span>\n    </SelectOption>\n  ));\n\nconst ToolbarFilterItem = ({\n  categoryKey,\n  filter = null,\n  values = [],\n  isVisible = true,\n  hasChips = true,\n  setFilter,\n}) => {\n  const [expanded, setExpanded] = useState(false);\n  const [searchVal, setSearchVal] = useState('');\n  const options = optionsForCategories[categoryKey];\n\n  const onDelete = (name, valueToDelete) => {\n    const single = optionsForCategories[categoryKey].isSingle;\n\n    if (single) {\n      setFilter(null);\n    } else {\n      const keyToDelete = values.find(\n        ({ value }) => value === valueToDelete\n      ).key;\n      const filteredArr = filter.filter((value) => value !== keyToDelete);\n      setFilter(filteredArr);\n    }\n  };\n\n  const onFilter = (_event, textInput) => {\n    if (textInput === '') {\n      return renderValues(values);\n    } else {\n      return renderValues(\n        values.filter(({ value }) =>\n          value.toLowerCase().includes(textInput.toLowerCase())\n        )\n      );\n    }\n  };\n\n  const handleChips = () => {\n    if (options.isSingle) {\n      return handleSingleChips(filter, values);\n    } else {\n      return handleCheckboxChips(filter, values);\n    }\n  };\n\n  const onSelect = (event, selection) => {\n    if (options.isSingle) {\n      setFilter(selection);\n      setExpanded(false);\n    } else {\n      setFilter(\n        !filter.includes(selection)\n          ? [...filter, selection]\n          : filter.filter((value) => value !== selection)\n      );\n    }\n  };\n\n  const handleOnClick = () => {\n    setFilter(searchVal);\n    setSearchVal(searchVal);\n  };\n\n  const handleInputChange = (e) => {\n    setSearchVal(e);\n  };\n\n  const renderSearch = () => {\n    return (\n      <ToolbarItem>\n        <InputGroup>\n          <TextInput\n            name=\"textInput1\"\n            id=\"textInput1\"\n            type=\"search\"\n            aria-label=\"search input\"\n            onChange={handleInputChange}\n          />\n          <Button variant=\"control\" aria-label=\"search button for search input\">\n            <SearchIcon onClick={handleOnClick} />\n          </Button>\n        </InputGroup>\n      </ToolbarItem>\n    );\n  };\n\n  if (categoryKey === 'name') {\n    return (\n      <ToolbarFilter\n        data-cy={categoryKey}\n        key={categoryKey}\n        showToolbarItem={isVisible}\n        chips={[]}\n        categoryName={options.name}\n        deleteChip={null}\n      >\n        {renderSearch()}\n      </ToolbarFilter>\n    );\n  } else {\n    return (\n      <ToolbarFilter\n        data-cy={categoryKey}\n        key={categoryKey}\n        showToolbarItem={isVisible}\n        chips={hasChips ? handleChips() : []}\n        categoryName={options.name}\n        deleteChip={hasChips ? onDelete : null}\n      >\n        <Select\n          variant={options.isSingle ? 'single' : 'checkbox'}\n          aria-label={categoryKey}\n          onToggle={() => setExpanded(!expanded)}\n          onSelect={onSelect}\n          selections={filter}\n          isOpen={expanded}\n          hasInlineFilter\n          placeholderText={options.placeholder}\n          onFilter={onFilter}\n          maxHeight={'1000%'}\n        >\n          {renderValues(values)}\n        </Select>\n      </ToolbarFilter>\n    );\n  }\n};\n\nToolbarFilterItem.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  filter: PropTypes.any,\n  values: PropTypes.array,\n  isVisible: PropTypes.bool,\n  hasChips: PropTypes.bool,\n  setFilter: PropTypes.func.isRequired,\n};\n\nexport default ToolbarFilterItem;\n","/**\n * Get comparator values if their key is in the item list\n */\nexport const handleCheckboxChips = (item, comparator) => {\n  if (item && comparator) {\n    return item.reduce((acc, i) => {\n      Number.isInteger(parseInt(i)) ? (i = parseInt(i)) : i;\n\n      comparator.forEach((cmpItem) => {\n        if (cmpItem.key === i) {\n          acc.push(cmpItem.value);\n        }\n      });\n\n      return acc;\n    }, []);\n  }\n\n  return [];\n};\n\n/**\n * Convert a list of objects to a list of the last value if defined\n */\nexport const handleSingleChips = (item, comparator) => {\n  if (item && typeof item === 'string' && comparator) {\n    let val;\n    comparator.forEach((i) => {\n      if (i.key === item) {\n        val = i.value;\n      }\n    });\n\n    if (val !== undefined) {\n      return [val];\n    }\n  }\n\n  return [];\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarGroup } from '@patternfly/react-core';\n\nimport CategoryDropdown from '../CustomFormElements/CategoryDropdown';\nimport ToolbarFilterItem from '../CustomFormElements/ToolbarFilterItem';\nimport { optionsForCategories } from '../constants';\n\nconst FilterCategoriesGroup = ({ filterCategories, filters, setFilters }) => {\n  const [currentCategory, setCurrentCategory] = useState(\n    Object.keys(filterCategories)[0]\n  );\n\n  return (\n    <ToolbarGroup variant=\"filter-group\">\n      <CategoryDropdown\n        selected={currentCategory}\n        setSelected={setCurrentCategory}\n        categories={Object.keys(filterCategories).map((el) => ({\n          key: el,\n          name: optionsForCategories[el].name,\n        }))}\n      />\n      {Object.keys(filterCategories).map((key) => (\n        <ToolbarFilterItem\n          key={key}\n          categoryKey={key}\n          filter={filters[key]}\n          values={filterCategories[key]}\n          isVisible={currentCategory === key}\n          setFilter={(value) => setFilters(key, value)}\n        />\n      ))}\n    </ToolbarGroup>\n  );\n};\n\nFilterCategoriesGroup.propTypes = {\n  filterCategories: PropTypes.object.isRequired,\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n};\n\nexport default FilterCategoriesGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, TextInput } from '@patternfly/react-core';\n\nconst CustomDateSelector = ({\n  onInputChange = () => {},\n  startDate = '',\n  endDate = '',\n}) => {\n  return (\n    <>\n      <InputGroup>\n        <TextInput\n          name=\"startDate\"\n          id=\"startDate\"\n          type=\"date\"\n          aria-label=\"Start Date\"\n          value={startDate}\n          onChange={(e) => onInputChange('start_date', e)}\n        />\n      </InputGroup>\n      <InputGroup>\n        <TextInput\n          name=\"endDate\"\n          id=\"endDate\"\n          type=\"date\"\n          aria-label=\"End Date\"\n          value={endDate}\n          onChange={(e) => onInputChange('end_date', e)}\n        />\n      </InputGroup>\n    </>\n  );\n};\n\nCustomDateSelector.propTypes = {\n  startDate: PropTypes.string,\n  endDate: PropTypes.string,\n  onInputChange: PropTypes.func,\n};\n\nexport default CustomDateSelector;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarGroup } from '@patternfly/react-core';\n\nimport ToolbarFilterItem from '../CustomFormElements/ToolbarFilterItem';\nimport CustomDateSelector from '../CustomFormElements/CustomDateSelector';\n\nconst QuickDateGroup = ({ filters, setFilters, values }) => (\n  <ToolbarGroup variant=\"filter-group\">\n    <ToolbarFilterItem\n      categoryKey=\"quick_date_range\"\n      filter={filters.quick_date_range}\n      values={values}\n      setFilter={(value) => setFilters('quick_date_range', value)}\n      hasChips={false}\n    />\n    {filters.quick_date_range &&\n      filters.quick_date_range.includes('custom') && (\n        <CustomDateSelector\n          startDate={filters.start_date ? filters.start_date : ''}\n          endDate={filters.end_date ? filters.end_date : ''}\n          onInputChange={setFilters}\n        />\n      )}\n  </ToolbarGroup>\n);\n\nQuickDateGroup.propTypes = {\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  values: PropTypes.array.isRequired,\n};\n\nexport default QuickDateGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarGroup, Button } from '@patternfly/react-core';\nimport { SortAmountDownIcon, SortAmountUpIcon } from '@patternfly/react-icons';\n\nimport ToolbarFilterItem from '../CustomFormElements/ToolbarFilterItem';\n\nconst SortByGroup = ({ filters, setFilters, sort_options }) => (\n  <ToolbarGroup variant=\"filter-group\">\n    <ToolbarFilterItem\n      categoryKey=\"sort_options\"\n      filter={filters.sort_options}\n      values={sort_options}\n      setFilter={(value) => setFilters('sort_options', value)}\n      hasChips={false}\n    />\n    <Button\n      variant=\"control\"\n      onClick={() =>\n        setFilters('sort_order', filters.sort_order === 'asc' ? 'desc' : 'asc')\n      }\n    >\n      {filters.sort_order === 'asc' && <SortAmountUpIcon />}\n      {filters.sort_order === 'desc' && <SortAmountDownIcon />}\n    </Button>\n  </ToolbarGroup>\n);\n\nSortByGroup.propTypes = {\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  sort_options: PropTypes.array.isRequired,\n};\n\nexport default SortByGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, Switch } from '@patternfly/react-core';\nimport {\n  Card,\n  CardTitle,\n  CardBody,\n  CardActions,\n  CardHeader,\n} from '@patternfly/react-core';\nimport { QuestionCircleIcon, TimesIcon } from '@patternfly/react-icons';\n\n/* TODO: For future work: make settings more modular for different pages */\nconst SettingsPanel = ({\n  filters,\n  setFilters,\n  settingsExpanded,\n  setSettingsExpanded,\n}) => (\n  <Card isFlat style={{ backgroundColor: '#EEEEEE' }}>\n    <CardHeader>\n      <CardActions>\n        <Button\n          variant=\"plain\"\n          onClick={() => setSettingsExpanded(!settingsExpanded)}\n        >\n          <TimesIcon />\n        </Button>\n      </CardActions>\n      <CardTitle>Settings</CardTitle>\n    </CardHeader>\n    <CardBody>\n      <Switch\n        id=\"showRootWorkflowJobs\"\n        label=\"Ignore nested workflows and jobs\"\n        labelOff=\"Ignore nested workflows and jobs\"\n        isChecked={filters.only_root_workflows_and_standalone_jobs}\n        onChange={(val) => {\n          setFilters('only_root_workflows_and_standalone_jobs', val);\n        }}\n      />\n      <Tooltip\n        position={'top'}\n        content={\n          <div>\n            {' '}\n            If enabled, nested workflows and jobs will not be included in the\n            overall totals. Enable this option to filter out duplicate entries.\n          </div>\n        }\n      >\n        <QuestionCircleIcon />\n      </Tooltip>\n    </CardBody>\n  </Card>\n);\n\nSettingsPanel.propTypes = {\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  settingsExpanded: PropTypes.bool.isRequired,\n  setSettingsExpanded: PropTypes.func.isRequired,\n};\n\nexport default SettingsPanel;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Toolbar,\n  ToolbarContent,\n  Button,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { FilterIcon, CogIcon } from '@patternfly/react-icons';\n\nimport { optionsForCategories } from './constants';\nimport FilterCategoriesGroup from './Groups/FiltersCategoriesGroup';\nimport QuickDateGroup from './Groups/QuickDateGroup';\nimport SortByGroup from './Groups/SortByGroup';\nimport SettingsPanel from './Groups/SettingsPanel';\n\nconst FilterableToolbar = ({\n  categories,\n  filters,\n  setFilters,\n  pagination = null,\n  hasSettings = false,\n}) => {\n  const [settingsExpanded, setSettingsExpanded] = useState(false);\n  const { quick_date_range, sort_options, ...restCategories } = categories;\n\n  // Filter out elements which are not in the option object.\n  const filterCategories = Object.keys(restCategories)\n    .filter((key) => Object.keys(optionsForCategories).includes(key))\n    .reduce((obj, key) => {\n      obj[key] = restCategories[key];\n      return obj;\n    }, {});\n\n  return (\n    <>\n      <Toolbar\n        id=\"filterable-toolbar-with-chip-groups\"\n        clearAllFilters={() => {\n          setFilters(null, null);\n        }}\n        collapseListedFiltersBreakpoint=\"xl\"\n      >\n        <ToolbarContent>\n          <Button variant=\"control\">\n            <FilterIcon />\n          </Button>\n          {Object.keys(filterCategories).length > 0 && (\n            <FilterCategoriesGroup\n              filterCategories={filterCategories}\n              filters={filters}\n              setFilters={setFilters}\n            />\n          )}\n          {quick_date_range && (\n            <QuickDateGroup\n              filters={filters}\n              setFilters={setFilters}\n              values={quick_date_range}\n            />\n          )}\n          {sort_options && (\n            <SortByGroup\n              filters={filters}\n              setFilters={setFilters}\n              sort_options={sort_options}\n            />\n          )}\n          {hasSettings && (\n            <ToolbarItem>\n              <Button\n                variant=\"plain\"\n                onClick={() => setSettingsExpanded(!settingsExpanded)}\n                aria-label=\"settings\"\n                isActive={settingsExpanded}\n              >\n                <CogIcon />\n              </Button>\n            </ToolbarItem>\n          )}\n          {pagination && (\n            <ToolbarItem\n              variant=\"pagination\"\n              visibility={{ default: 'hidden', lg: 'visible' }}\n            >\n              {pagination}\n            </ToolbarItem>\n          )}\n        </ToolbarContent>\n        {settingsExpanded && (\n          <SettingsPanel\n            filters={filters}\n            setFilters={setFilters}\n            settingsExpanded={settingsExpanded}\n            setSettingsExpanded={setSettingsExpanded}\n          />\n        )}\n      </Toolbar>\n    </>\n  );\n};\n\nFilterableToolbar.propTypes = {\n  categories: PropTypes.object.isRequired,\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  pagination: PropTypes.object,\n  hasSettings: PropTypes.bool,\n};\n\nexport default FilterableToolbar;\n","import Toolbar from './Toolbar';\n\nexport default Toolbar;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\n\nclass Tooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  formatDollars(amount) {\n    return parseFloat(amount)\n      .toFixed(2)\n      .toString()\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip-base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, 0) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', 92)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.name = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', -2)\n      .text('Template name');\n    this.savings = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 52)\n      .attr('font-size', 12)\n      .attr('font-weight', 'bold')\n      .attr('fill', 'white')\n      .text('Total savings $0');\n    this.manualCost = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', 16)\n      .text('Manual cost $0');\n    this.automationCost = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', 34)\n      .text('Automation cost $0');\n  }\n\n  handleMouseOver = (d) => {\n    let name;\n    let savings;\n    let manualCost;\n    let automationCost;\n    const scrollLeftOffset = d3.select('#d3-roi-chart-root').node().scrollLeft;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10 +\n      scrollLeftOffset;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      30;\n    if (!d) {\n      return;\n    } else {\n      savings = this.formatDollars(d.delta);\n      name = d.name;\n      manualCost = this.formatDollars(d.manualCost);\n      automationCost = this.formatDollars(d.automatedCost);\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n    this.name.text('' + name);\n    this.savings.text('Total savings $' + savings);\n    this.manualCost.text('Manual Cost $' + manualCost);\n    this.automationCost.text('Automation Cost $' + automationCost);\n    this.nameWidth = this.name.node().getComputedTextLength();\n    this.savingsWidth = this.savings.node().getComputedTextLength();\n    this.manualCostWidth = this.manualCost.node().getComputedTextLength();\n    this.automationCostWidth = this.automationCost\n      .node()\n      .getComputedTextLength();\n    this.widestTextElem = d3.max([\n      this.nameWidth,\n      this.savingsWidth,\n      this.automationCostWidth,\n      this.manualCostWidth,\n    ]);\n\n    const maxTextPerc = (this.widestTextElem / this.boxWidth) * 100;\n    const threshold = 85;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 15) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.name.attr('x', -(toolTipWidth - 7));\n      this.savings.attr('x', -(toolTipWidth - 7));\n      this.manualCost.attr('x', -(toolTipWidth - 7));\n      this.automationCost.attr('x', -(toolTipWidth - 7));\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 15) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.name.attr('x', 20);\n      this.savings.attr('x', 20);\n      this.manualCost.attr('x', 20);\n      this.automationCost.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass TopTemplatesSavings extends Component {\n  constructor(props) {\n    super(props);\n    this.init = this.init.bind(this);\n    this.draw = this.draw.bind(this);\n    this.resize = this.resize.bind(this);\n    this.state = {\n      timeout: null,\n    };\n  }\n\n  // Methods\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  init() {\n    this.draw();\n  }\n\n  draw() {\n    // Use PF chart color\n    const color = '#0066CC'; //blue\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const { data } = this.props;\n    let width;\n    // adjust chart width to support larger datasets\n    if (data.length >= 15) {\n      const containerWidth = d3.select('.automation-wrapper').node();\n      width =\n        containerWidth.getBoundingClientRect().width -\n        this.props.margin.left -\n        this.props.margin.right;\n    } else {\n      width = this.props.getWidth();\n    }\n\n    const height = this.props.getHeight();\n    const x = d3.scaleBand().rangeRound([0, width]).padding(0.45);\n    const y = d3.scaleLinear().range([height, 0]);\n    // format our X Axis ticks\n    let ticks;\n    ticks = data.map((d) => d.name);\n    const formatYAxisValue = d3.format('.2s');\n    const xAxis = d3.axisBottom(x).tickValues(ticks);\n\n    const yAxis = d3\n      .axisLeft(y)\n      .ticks(8)\n      .tickFormat((d) => formatYAxisValue(d).replace('G', 'B'))\n      .tickSize(-width, 0, 0);\n\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n\n    const taskNames = data.map((d) => d.name);\n    const tooltip = new Tooltip({\n      svg: '#' + this.props.id,\n    });\n    x.domain(taskNames);\n    y.domain([0, d3.max(data, (d) => d.delta * 1.15) || 8]);\n\n    // add y axis\n    svg\n      .append('g')\n      .attr('class', 'y axis')\n      .call(yAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7')\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 6)\n      .attr('dy', '.71em')\n      .style('text-anchor', 'end')\n      .style('font-weight', 'bold')\n      .text('Value');\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Savings per template ($)');\n\n    // add x axis\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n      .selectAll('text')\n      .style('text-anchor', 'start')\n      .attr('dx', '0.75em')\n      .attr('dy', -x.bandwidth() / 1.45 - 8)\n      .attr('transform', 'rotate(-90)');\n\n    svg.selectAll('.x-axis line').attr('stroke', 'transparent');\n\n    svg\n      .selectAll('.bar')\n      .data(data)\n      .enter()\n      .append('rect')\n      .attr('x', (d) => x(d.name))\n      .attr('width', x.bandwidth())\n      .attr('y', (d) => y(d.delta))\n      .style('fill', () => color)\n      .attr('height', (d) => height - y(d.delta))\n      .on('mouseover', function (d) {\n        d3.select(this).style('fill', d3.rgb(color).darker(1));\n        tooltip.handleMouseOver(d);\n      })\n      .on('mousemove', tooltip.handleMouseOver)\n      .on('mouseout', function () {\n        d3.select(this).style('fill', color);\n        tooltip.handleMouseOut();\n      });\n  }\n\n  componentDidMount() {\n    this.init();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate() {\n    this.init();\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nTopTemplatesSavings.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n};\n\nexport default initializeChart(TopTemplatesSavings);\n","import styled from 'styled-components';\nimport { CardTitle } from '@patternfly/react-core';\n\nexport const BorderedCardTitle = styled(CardTitle)`\n  border-bottom: 1px solid #d7d7d7;\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle, Title } from '@patternfly/react-core';\n\nconst floatToStringWithCommas = (total) =>\n  total\n    .toFixed(2)\n    .toString()\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\nconst TotalSavings = ({ totalSavings = 0 }) => (\n  <Card style={{ borderTop: '3px solid #2B9AF3' }}>\n    <CardTitle style={{ paddingBottom: '0' }}>Total savings</CardTitle>\n    <CardBody>\n      <Title\n        headingLevel=\"h3\"\n        size=\"4xl\"\n        style={{ color: 'var(--pf-global--success-color--200)' }}\n      >\n        {floatToStringWithCommas(totalSavings)}\n      </Title>\n    </CardBody>\n  </Card>\n);\n\nTotalSavings.propTypes = {\n  totalSavings: PropTypes.number,\n};\n\nexport default TotalSavings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Card,\n  CardBody,\n  InputGroup,\n  InputGroupText,\n  TextInput,\n} from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst validFloat = (value) => {\n  const floatValue = parseFloat(value);\n  return floatValue && floatValue >= 0 ? value : '';\n};\n\nconst CalculationCost = ({\n  costManual = '0',\n  setCostManual = () => {},\n  costAutomation = '0',\n  setCostAutomation = () => {},\n}) => (\n  <Card>\n    <CardTitle>Calculate your automation</CardTitle>\n    <CardBody>\n      <InputAndText>\n        <p>Manual cost of automation</p>\n        <em style={{ color: 'var(--pf-global--Color--dark-200)' }}>\n          (e.g. average salary of mid-level Software Engineer)\n        </em>\n        <InputGroup style={{ width: '50%' }}>\n          <InputGroupText>\n            <DollarSignIcon />\n          </InputGroupText>\n          <TextInput\n            id=\"manual-cost\"\n            type=\"number\"\n            aria-label=\"manual-cost\"\n            value={costManual}\n            onChange={(e) => setCostManual(validFloat(e))}\n          />\n          <InputGroupText>/hr</InputGroupText>\n        </InputGroup>\n      </InputAndText>\n      <InputAndText style={{ paddingTop: '10px' }}>\n        <p>Automated process cost</p>\n        <InputGroup style={{ width: '50%' }}>\n          <InputGroupText>\n            <DollarSignIcon />\n          </InputGroupText>\n          <TextInput\n            id=\"automation-cost\"\n            type=\"number\"\n            aria-label=\"automation-cost\"\n            value={costAutomation}\n            onChange={(e) => setCostAutomation(validFloat(e))}\n          />\n          <InputGroupText>/hr</InputGroupText>\n        </InputGroup>\n      </InputAndText>\n    </CardBody>\n  </Card>\n);\n\nCalculationCost.propTypes = {\n  costManual: PropTypes.string,\n  setCostManual: PropTypes.func,\n  costAutomation: PropTypes.string,\n  setCostAutomation: PropTypes.func,\n};\n\nexport default CalculationCost;\n","import React from 'react';\n\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst AutomationFormula = () => (\n  <Card style={{ height: '100%' }}>\n    <CardTitle>Automation formula</CardTitle>\n    <CardBody>\n      <p>\n        <b>Manual cost for template x</b> =\n        <em>\n          (time for a manual run on one host in hours * (sum of all hosts across\n          all job runs) ) * cost per hour\n        </em>\n      </p>\n      <p>\n        <b>Automation cost for template x</b> =\n        <em>\n          cost of automation per hour * sum of total elapsed hours for a\n          template\n        </em>\n      </p>\n      <p>\n        <b>Savings</b> =\n        <em>Sum of (manual cost - automation cost) across all templates</em>\n      </p>\n    </CardBody>\n  </Card>\n);\n\nexport default AutomationFormula;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  InputGroup,\n  InputGroupText,\n  TextInput,\n  Tooltip,\n  Popover,\n} from '@patternfly/react-core';\nimport {\n  InfoCircleIcon,\n  ToggleOnIcon,\n  ToggleOffIcon,\n} from '@patternfly/react-icons';\n\nimport {\n  convertSecondsToMins,\n  convertMinsToSeconds,\n  capitalize,\n} from '../../Utilities/helpers';\n\nconst TemplateDetail = styled.div`\n  em {\n    display: block;\n    padding: 5px 0;\n  }\n\n  @media (max-width: 1490px) {\n    display: block;\n\n    em {\n      padding: 10px 0;\n      display: block;\n    }\n  }\n`;\n\nconst TemplateDetailSubTitle = styled.em`\n  color: var(--pf-global--Color--dark-200);\n`;\n\nconst TooltipWrapper = styled.div`\n  p {\n    text-align: left;\n  }\n`;\n\nconst IconGroup = styled.div`\n  & svg {\n    fill: var(--pf-global--Color--dark-200);\n\n    :hover {\n      cursor: pointer;\n    }\n\n    :first-of-type {\n      margin-right: 10px;\n      margin-left: 10px;\n\n      @media (max-width: 1350px) {\n        margin-left: 0;\n      }\n    }\n  }\n`;\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst showSortAttr = (details, sortBy) => {\n  const trimmed = sortBy.split(':')[0];\n  const sortAttribute = Object.keys(details).map((k) =>\n    k === trimmed ? `${details[k]}` : null\n  );\n\n  return (\n    <TemplateDetailSubTitle>\n      {capitalize(trimmed.split('_').join(' '))}: {sortAttribute}\n    </TemplateDetailSubTitle>\n  );\n};\n\nconst QuestionIconTooltip = ({ details }) => (\n  <Popover\n    aria-label=\"template detail popover\"\n    position=\"left\"\n    bodyContent={\n      <TooltipWrapper>\n        {Object.keys(details).map((k, i) => (\n          <p key={i}>\n            <b>{capitalize(k.split('_').join(' '))}</b>: {details[k]}\n          </p>\n        ))}\n      </TooltipWrapper>\n    }\n  >\n    <InfoCircleIcon />\n  </Popover>\n);\n\nQuestionIconTooltip.propTypes = {\n  details: PropTypes.object,\n};\n\nconst TopTemplates = ({\n  data = [],\n  sortBy = '',\n  setDataRunTime = () => {},\n  setEnabled = () => {},\n  redirectToJobExplorer = () => {},\n}) => (\n  <Card style={{ overflow: 'auto', flex: '1 1 0' }} className=\"top-templates\">\n    <CardBody>\n      <p>Enter the time it takes to run the following templates manually.</p>\n      {data.map((d) => (\n        <div key={d.id}>\n          <Tooltip content={'List of jobs for this template for past 30 days'}>\n            <Button\n              style={{ padding: '15px 0 10px' }}\n              component=\"a\"\n              onClick={() => redirectToJobExplorer(d.id)}\n              variant=\"link\"\n            >\n              {d.name}\n            </Button>\n          </Tooltip>\n          <TemplateDetail>\n            <InputAndText key={d.id}>\n              <InputGroup>\n                <TextInput\n                  id={d.id}\n                  type=\"number\"\n                  aria-label=\"time run manually\"\n                  value={convertSecondsToMins(d.avgRunTime)}\n                  onChange={(minutes) =>\n                    setDataRunTime(convertMinsToSeconds(minutes), d.id)\n                  }\n                />\n                <InputGroupText>min</InputGroupText>\n              </InputGroup>\n            </InputAndText>\n            <TemplateDetailSubTitle>\n              x {d.successful_hosts_total} host runs\n            </TemplateDetailSubTitle>\n            {showSortAttr(d, sortBy)}\n            <IconGroup>\n              <QuestionIconTooltip details={d} />\n              {!d.enabled && (\n                <ToggleOffIcon onClick={() => setEnabled(d.id)(true)} />\n              )}\n              {d.enabled && (\n                <ToggleOnIcon onClick={() => setEnabled(d.id)(false)} />\n              )}\n            </IconGroup>\n          </TemplateDetail>\n          <p style={{ color: '#486B00' }}>${d.delta.toFixed(2)}</p>\n        </div>\n      ))}\n    </CardBody>\n  </Card>\n);\n\nTopTemplates.propTypes = {\n  data: PropTypes.array,\n  setDataRunTime: PropTypes.func,\n  redirectToJobExplorer: PropTypes.func,\n  deselectedIds: PropTypes.array,\n  setDeselectedIds: PropTypes.func,\n  setEnabled: PropTypes.func,\n  sortBy: PropTypes.string,\n};\n\nexport default TopTemplates;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\n// Imports from custom components\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\n// Imports from API\nimport { preflightRequest, readROI, readROIOptions } from '../../Api';\n\n// Imports from utilities\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { roi as roiConst } from '../../Utilities/constants';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { calculateDelta, convertSecondsToHours } from '../../Utilities/helpers';\n\n// Chart\nimport TopTemplatesSavings from '../../Charts/ROITopTemplates';\n\n// Local imports\nimport { BorderedCardTitle } from './helpers';\nimport TotalSavings from './TotalSavings';\nimport CalculationCost from './CalculationCost';\nimport AutomationFormula from './AutomationFormula';\nimport TopTemplates from './TopTemplates';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 5fr 2fr;\n  height: 100%;\n`;\n\nconst WrapperLeft = styled.div`\n  flex: 5;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n`;\n\nconst WrapperRight = styled.div`\n  flex: 2;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst mapApi = ({ items = [] }) =>\n  items.map((el) => ({\n    ...el,\n    delta: 0,\n    avgRunTime: 3600,\n    manualCost: 0,\n    automatedCost: 0,\n    enabled: true,\n  }));\n\nconst filterDisabled = (data) => data.filter(({ enabled }) => enabled);\n\nconst updateDeltaCost = (data, costAutomation, costManual) =>\n  data.map((el) => {\n    const manualCost =\n      convertSecondsToHours(el.avgRunTime) *\n      el.successful_hosts_total *\n      parseFloat(costManual);\n    const automatedCost =\n      convertSecondsToHours(el.successful_elapsed_total) *\n      parseFloat(costAutomation);\n    const delta = calculateDelta(automatedCost, manualCost);\n\n    return { ...el, delta, manualCost, automatedCost };\n  });\n\nconst computeTotalSavings = (data) =>\n  data.reduce((sum, curr) => sum + curr.delta, 0);\n\nconst AutomationCalculator = ({ history }) => {\n  const toJobExplorer = useRedirect(history, 'jobExplorer');\n  const [costManual, setCostManual] = useState('50');\n  const [costAutomation, setCostAutomation] = useState('20');\n\n  const [preflight, setPreflight] = useApi(null);\n  const [options, setOptions] = useApi({});\n  const [api, fetchApi, setDataInApi] = useApi([], (data) =>\n    updateDeltaCost(mapApi(data), costAutomation, costManual)\n  );\n\n  const { queryParams, setFromToolbar } = useQueryParams(\n    roiConst.defaultParams\n  );\n\n  /**\n   * Modifies one elements avgRunTime in the unfilteredData\n   * and updates all calculated fields.\n   * Used in top templates.\n   */\n  const setDataRunTime = (seconds, id) => {\n    const updatedData = api.data.map((el) => {\n      if (el.id === id) {\n        el.avgRunTime = seconds;\n        const updatedDelta = updateDeltaCost(\n          [el],\n          costAutomation,\n          costManual\n        )[0];\n        return updatedDelta;\n      } else {\n        return el;\n      }\n    });\n\n    setDataInApi(updatedData);\n  };\n\n  const setEnabled = (id) => (value) => {\n    setDataInApi(\n      api.data.map((el) => (el.id === id ? { ...el, enabled: value } : el))\n    );\n  };\n\n  useEffect(() => {\n    setPreflight(preflightRequest());\n    setOptions(readROIOptions({ params: queryParams }));\n  }, []);\n\n  /**\n   * Recalculates the delta and costs in the data after the cost is changed.\n   */\n  useEffect(() => {\n    setDataInApi(updateDeltaCost(api.data, costAutomation, costManual));\n  }, [costAutomation, costManual]);\n\n  /**\n   * Get data from API depending on the queryParam.\n   */\n  useEffect(() => {\n    fetchApi(readROI({ params: queryParams }));\n  }, [queryParams]);\n\n  /**\n   * Function to redirect to the job explorer page\n   * with the same filters as is used here.\n   */\n  const redirectToJobExplorer = (templateId) => {\n    const initialQueryParams = {\n      quick_date_range: 'last_30_days',\n      template_id: [templateId],\n    };\n    toJobExplorer(initialQueryParams);\n  };\n\n  const renderLeft = () => (\n    <WrapperLeft>\n      <Main style={{ paddingBottom: '0' }}>\n        <Card>\n          <BorderedCardTitle>Automation savings</BorderedCardTitle>\n          <CardBody>\n            {api.isLoading && <LoadingState />}\n            {api.error && <ApiErrorState message={api.error.error} />}\n            {api.isSuccess && api.data.length <= 0 && <NoData />}\n            {api.isSuccess && api.data.length > 0 && (\n              <React.Fragment>\n                <TopTemplatesSavings\n                  margin={{ top: 20, right: 20, bottom: 20, left: 70 }}\n                  id=\"d3-roi-chart-root\"\n                  data={filterDisabled(api.data)}\n                />\n                <p style={{ textAlign: 'center' }}>Templates</p>\n              </React.Fragment>\n            )}\n          </CardBody>\n        </Card>\n      </Main>\n      <Main>\n        <AutomationFormula />\n      </Main>\n    </WrapperLeft>\n  );\n\n  const renderRight = () => (\n    <WrapperRight>\n      <Main style={{ paddingBottom: '0', paddingLeft: '0' }}>\n        <TotalSavings\n          totalSavings={computeTotalSavings(filterDisabled(api.data))}\n        />\n      </Main>\n      <Main\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          flex: '1 1 0',\n          paddingLeft: '0',\n        }}\n      >\n        <CalculationCost\n          costManual={costManual}\n          setCostManual={setCostManual}\n          costAutomation={costAutomation}\n          setCostAutomation={setCostAutomation}\n        />\n        <TopTemplates\n          redirectToJobExplorer={redirectToJobExplorer}\n          data={api.data}\n          setDataRunTime={setDataRunTime}\n          setUnfilteredData={api.data}\n          setEnabled={setEnabled}\n          sortBy={queryParams.sort_by}\n        />\n      </Main>\n    </WrapperRight>\n  );\n\n  if (preflight?.error?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader style={{ flex: '0' }}>\n        <PageHeaderTitle title={'Automation Calculator'} />\n        <FilterableToolbar\n          categories={options.data}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      {preflight.error && (\n        <Main>\n          <EmptyState preflightError={preflight.error} />\n        </Main>\n      )}\n      {preflight.isSuccess && (\n        <React.Fragment>\n          <Wrapper className=\"automation-wrapper\">\n            {renderLeft()}\n            {renderRight()}\n          </Wrapper>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nAutomationCalculator.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default AutomationCalculator;\n","import * as d3 from 'd3';\n\nclass Tooltip {\n  constructor(opts) {\n    this.svg = opts.svg;\n    this.colors = opts.colors;\n    this.draw();\n  }\n\n  draw() {\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 145;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -41)\n      .attr('rx', 2)\n      .attr('height', 110)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.circleSuccess = this.toolTipBase\n      .append('circle')\n      .attr('cx', 26)\n      .attr('cy', 0)\n      .attr('r', 8)\n      .attr('stroke', 'white')\n      .attr('fill', 'white');\n    this.circleFail = this.toolTipBase\n      .append('circle')\n      .attr('cx', 26)\n      .attr('cy', 26)\n      .attr('r', 8)\n      .attr('stroke', 'white')\n      .attr('fill', 'white');\n    this.successText = this.toolTipBase\n      .append('text')\n      .attr('x', 43)\n      .attr('y', 4)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Successful');\n    this.failText = this.toolTipBase\n      .append('text')\n      .attr('x', 43)\n      .attr('y', 28)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Failed');\n    this.successIcon = this.toolTipBase\n      .append('text')\n      .attr('class', 'fas fa-sm')\n      .attr('fill', this.colors(1))\n      .attr('x', 19)\n      .attr('y', 5)\n      .text('\\uf058');\n    this.failedIcon = this.toolTipBase\n      .append('text')\n      .attr('class', 'fas fa-sm')\n      .attr('fill', this.colors(0))\n      .attr('x', 20)\n      .attr('y', 31)\n      .text('\\uf06a');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 137)\n      .attr('y', -21)\n      .attr('font-size', 12)\n      .attr('text-anchor', 'end')\n      .text('No jobs');\n    this.successful = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 122)\n      .attr('y', 4)\n      .text('0');\n    this.failed = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 122)\n      .attr('y', 28)\n      .text('0');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('stroke', 'white')\n      .attr('x', 20)\n      .attr('y', -21)\n      .attr('font-size', 12)\n      .text('Never');\n    this.clickMore = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 20)\n      .attr('y', 55)\n      .attr('font-size', 12)\n      .text('Click for details');\n  }\n\n  handleMouseOver = (d) => {\n    let success = 0;\n    let fail = 0;\n    let total = 0;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    const formatTooltipDate = d3.timeFormat('%m/%d');\n    if (!d) {\n      return;\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n    if (d) {\n      success = d.RAN || 0;\n      fail = d.FAIL || 0;\n      total = d.TOTAL || 0;\n      this.date.text(formatTooltipDate(d.DATE || null));\n    }\n\n    if (d && d.data) {\n      success = d.data.RAN || 0;\n      fail = d.data.FAIL || 0;\n      total = d.data.TOTAL || 0;\n      this.date.text(formatTooltipDate(d.data.DATE || null));\n    }\n\n    this.jobs.text('' + total + ' jobs');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n    this.failed.text('' + fail);\n    this.successful.text('' + success);\n    this.successTextWidth = this.successful.node().getComputedTextLength();\n    this.failTextWidth = this.failed.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 40;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.circleSuccess.attr('cx', -adjustedWidth);\n      this.circleFail.attr('cx', -adjustedWidth);\n      this.failedIcon.attr('x', -adjustedWidth - 7);\n      this.successIcon.attr('x', -adjustedWidth - 7);\n      this.successText.attr('x', -adjustedWidth + 17);\n      this.failText.attr('x', -adjustedWidth + 17);\n      this.successful.attr('x', -this.successTextWidth - 20 - 12);\n      this.failed.attr('x', -this.failTextWidth - 20 - 12);\n      this.date.attr('x', -adjustedWidth - 5);\n      this.jobs.attr('x', -this.jobsWidth / 2 - 7);\n      this.clickMore.attr('x', -adjustedWidth);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.circleSuccess.attr('cx', 26);\n      this.circleFail.attr('cx', 26);\n      this.failedIcon.attr('x', 19);\n      this.successIcon.attr('x', 19);\n      this.successText.attr('x', 43);\n      this.failText.attr('x', 43);\n      this.successful.attr('x', adjustedWidth - this.successTextWidth);\n      this.failed.attr('x', adjustedWidth - this.failTextWidth);\n      this.date.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth);\n      this.clickMore.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nexport default Tooltip;\n","import React, { Component } from 'react';\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { stringify } from 'query-string';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\n\nclass BarChart extends Component {\n  constructor(props) {\n    super(props);\n    this.draw = this.draw.bind(this);\n    this.init = this.init.bind(this);\n    this.resize = this.resize.bind(this);\n    this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n    this.state = {\n      formattedData: [],\n      timeout: null,\n    };\n  }\n\n  redirectToJobExplorer({ data: { DATE: date } }) {\n    const { jobExplorer } = Paths;\n    const formattedDate = formatDate(date);\n    const { orgId, templateId } = this.props;\n    const initialQueryParams = {\n      start_date: formattedDate,\n      end_date: formattedDate,\n      quick_date_range: 'custom',\n      status: ['failed', 'successful'],\n      template_id: templateId,\n      org_id: orgId,\n    };\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    this.props.history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  }\n\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  init() {\n    this.draw();\n  }\n\n  // Methods\n  draw() {\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const parseTime = d3.timeParse('%Y-%m-%d');\n    let { data: unformattedData } = this.props;\n    const data = unformattedData.reduce(\n      (formatted, { created_date, successful_count, failed_count }) => {\n        let DATE = parseTime(created_date) || new Date();\n        let RAN = +successful_count || 0;\n        let FAIL = +failed_count || 0;\n        let TOTAL = +successful_count + failed_count || 0;\n        return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n      },\n      []\n    );\n    const width = this.props.getWidth();\n    const height = this.props.getHeight();\n    const x = d3.scaleBand().rangeRound([0, width]).padding(0.35); // percentage\n    const y = d3.scaleLinear().range([height, 0]);\n\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n    //[fail, success]\n    let colors = d3.scaleOrdinal(['#6EC664', '#A30000']);\n\n    const barTooltip = new Tooltip({\n      svg: '#' + this.props.id,\n      colors,\n    });\n    const status = ['FAIL', 'RAN'];\n\n    // stack our data\n    const stack = d3\n      .stack()\n      .keys(status)\n      .order(d3.stackOrderNone)\n      .offset(d3.stackOffsetNone);\n\n    const layers = stack(data);\n    // Scale the range of the data\n    x.domain(layers[0].map((d) => d.data.DATE));\n    y.domain([0, d3.max(layers[layers.length - 1], (d) => d[1] * 1.15) || 8]);\n    // Add the Y Axis\n    svg\n      .append('g')\n      .attr('class', 'y-axis')\n      .call(d3.axisLeft(y).tickSize(-width, 0, 0))\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.y-axis .tick text').attr('x', -5);\n    // text label for the y axis\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Jobs across all clusters');\n    // Add the X Axis\n    let ticks;\n    const maxTicks = Math.round(data.length / (data.length / 2));\n    ticks = data.map((d) => d.DATE);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n        .filter((item) => item);\n    }\n\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(\n        d3.axisBottom(x).tickValues(ticks).tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n      )\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n    // text label for the x axis\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n\n    const layer = svg\n      .selectAll('layer')\n      .data(layers)\n      .enter()\n      .append('g')\n      .attr('class', 'layer')\n      .style('fill', (_d, i) => colors(i));\n    layer\n      .selectAll('rect')\n      .data((d) => d)\n      .enter()\n      .append('rect')\n      .attr('x', (d) => x(d.data.DATE))\n      .attr('y', (d) => y(d[0]))\n      .attr('height', 0)\n      .attr('width', x.bandwidth() - 1)\n      .transition()\n      .duration(550)\n      .ease(d3.easeCubic)\n      .attr('y', (d) => y(d[1]))\n      .attr('height', (d) => y(d[0]) - y(d[1]));\n    layer\n      .selectAll('rect')\n      .on('mouseover', barTooltip.handleMouseOver)\n      .on('mousemove', barTooltip.handleMouseOver)\n      .on('mouseout', barTooltip.handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n  }\n\n  componentDidMount() {\n    this.init();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      this.init();\n    }\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nBarChart.propTypes = {\n  id: PropTypes.string,\n  templateId: PropTypes.array,\n  orgId: PropTypes.array,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  history: PropTypes.object,\n};\n\nexport default initializeChart(BarChart);\n","import React, { Component } from 'react';\nimport initializeChart from './BaseChart';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\nimport { stringify } from 'query-string';\nimport * as d3 from 'd3';\n\nclass LineChart extends Component {\n  constructor(props) {\n    super(props);\n    this.init = this.init.bind(this);\n    this.draw = this.draw.bind(this);\n    this.resize = this.resize.bind(this);\n    this.updateCluster = this.updateCluster.bind(this);\n    this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n    this.state = {\n      formattedData: [],\n      timeout: null,\n    };\n  }\n\n  redirectToJobExplorer({ DATE: date }) {\n    const { jobExplorer } = Paths;\n    const formattedDate = formatDate(date);\n    const { clusterId, templateId, orgId } = this.props;\n    const initialQueryParams = {\n      start_date: formattedDate,\n      end_date: formattedDate,\n      quick_date_range: 'custom',\n      status: ['failed', 'successful'],\n      cluster_id: clusterId,\n      org_id: orgId,\n      template_id: templateId,\n    };\n\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    this.props.history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  }\n\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  updateCluster() {\n    this.init();\n  }\n  init() {\n    this.draw();\n  }\n  // Methods\n  draw() {\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const width = this.props.getWidth();\n    const height = this.props.getHeight();\n\n    function transition(path) {\n      path.transition().duration(1000).attrTween('stroke-dasharray', tweenDash);\n    }\n\n    function tweenDash() {\n      const l = this.getTotalLength();\n      const i = d3.interpolateString('0,' + l, l + ',' + l);\n      return function (t) {\n        return i(t);\n      };\n    }\n\n    const x = d3.scaleTime().rangeRound([0, width]);\n    const y = d3.scaleLinear().range([height, 0]);\n\n    //[success, fail, total]\n    let colors = d3.scaleOrdinal(['#6EC664', '#A30000', '#06C']);\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n      .attr('z', 100)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n    // Tooltip\n    const tooltip = new Tooltip({\n      svg: '#' + this.props.id,\n      colors,\n    });\n    const { data: unformattedData } = this.props;\n    const parseTime = d3.timeParse('%Y-%m-%d');\n\n    const data = unformattedData.reduce(\n      (formatted, { created_date, successful_count, failed_count }) => {\n        let DATE = parseTime(created_date) || new Date();\n        let RAN = +successful_count || 0;\n        let FAIL = +failed_count || 0;\n        let TOTAL = +successful_count + failed_count || 0;\n        return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n      },\n      []\n    );\n    // Scale the range of the data\n    x.domain(\n      d3.extent(data, function (d) {\n        return d.DATE;\n      })\n    );\n    y.domain([\n      0,\n      d3.max(data, function (d) {\n        return d.TOTAL * 1.15 || 8;\n      }),\n    ]);\n\n    const successLine = d3\n      .line()\n      .curve(d3.curveMonotoneX)\n      .x(function (d) {\n        return x(d.DATE);\n      })\n      .y(function (d) {\n        return y(d.RAN);\n      });\n\n    const failLine = d3\n      .line()\n      .defined((d) => !isNaN(d.FAIL))\n      .curve(d3.curveMonotoneX)\n      .x(function (d) {\n        return x(d.DATE);\n      })\n      .y(function (d) {\n        return y(d.FAIL);\n      });\n    // Add the Y Axis\n    svg\n      .append('g')\n      .attr('class', 'y-axis')\n      .call(d3.axisLeft(y).ticks(10).tickSize(-width))\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.y-axis .tick text').attr('x', -5);\n\n    // text label for the y axis\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Job runs');\n    // Add the X Axis\n    let ticks;\n    const maxTicks = Math.round(data.length / (data.length / 2));\n    ticks = data.map((d) => d.DATE);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n        .filter((item) => item);\n    }\n\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(\n        d3\n          .axisBottom(x)\n          .tickValues(ticks)\n          .tickSize(-height)\n          .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n      ) // \"Jan-01\"\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n    // text label for the x axis\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n    const vertical = svg\n      .append('path')\n      .attr('class', 'mouse-line')\n      .style('stroke', 'black')\n      .style('stroke-width', '3px')\n      .style('stroke-dasharray', '3, 3')\n      .style('opacity', '0');\n\n    const handleMouseOver = function (d) {\n      tooltip.handleMouseOver(d);\n      // show vertical line\n      vertical.transition().style('opacity', '1');\n    };\n\n    const handleMouseMove = function () {\n      let intersectX = this.cx.baseVal.value;\n      vertical.attr('d', function () {\n        let d = 'M' + intersectX + ',' + height;\n        d += ' ' + intersectX + ',' + 0;\n        return d;\n      });\n    };\n\n    const handleMouseOut = function () {\n      // hide tooltip\n      tooltip.handleMouseOut();\n      // hide vertical line\n      vertical.transition().style('opacity', 0);\n    };\n\n    // Add the successLine path.\n    svg\n      .append('path')\n      .data([data])\n      .attr('class', 'line')\n      .style('fill', 'none')\n      .style('stroke', () => colors(1))\n      .attr('stroke-width', 2)\n      .attr('d', successLine)\n      .call(transition);\n\n    // Add the failLine path.\n    svg\n      .append('path')\n      .data([data])\n      .attr('class', 'line')\n      .style('fill', 'none')\n      .style('stroke', () => colors(0))\n      .attr('stroke-width', 2)\n      .attr('d', failLine)\n      .call(transition);\n    svg\n      .selectAll('dot')\n      .data(data)\n      .enter()\n      .append('circle')\n      .attr('r', 3)\n      .style('stroke', () => colors(1))\n      .style('fill', () => colors(1))\n      .attr('cx', function (d) {\n        return x(d.DATE);\n      })\n      .attr('cy', function (d) {\n        return y(d.RAN);\n      })\n\n      .on('mouseover', handleMouseOver)\n      .on('mousemove', handleMouseMove)\n      .on('mouseout', handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n    // create our failLine circles\n    svg\n      .selectAll('dot')\n      .data(data)\n      .enter()\n      .append('circle')\n      .attr('r', 3)\n      .style('stroke', () => colors(0))\n      .style('fill', () => colors(0))\n      .attr('cx', function (d) {\n        return x(d.DATE);\n      })\n      .attr('cy', function (d) {\n        return y(d.FAIL);\n      })\n      .on('mouseover', handleMouseOver)\n      .on('mousemove', handleMouseMove)\n      .on('mouseout', handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n  }\n\n  componentDidMount() {\n    this.updateCluster();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      this.updateCluster();\n    }\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nLineChart.propTypes = {\n  id: PropTypes.string,\n  clusterId: PropTypes.array,\n  templateId: PropTypes.array,\n  orgId: PropTypes.array,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  history: PropTypes.object,\n};\n\nexport default initializeChart(LineChart);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { trimStr } from '../Utilities/helpers';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n  DataList,\n  DataListItem as PFDataListItem,\n  DataListCell as PFDataListCell,\n} from '@patternfly/react-core';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst ModulesList = ({ modules, isLoading }) => (\n  <DataList\n    aria-label=\"Top Modules\"\n    style={{\n      maxHeight: '400px',\n      overflow: 'auto',\n      height: '400px',\n      background: 'white',\n    }}\n  >\n    <DataListItem aria-labelledby=\"top-modules-header\">\n      <DataListCell>\n        <h3>Top modules</h3>\n      </DataListCell>\n      <DataCellEnd>\n        <h3>Usage</h3>\n      </DataCellEnd>\n    </DataListItem>\n    {isLoading && (\n      <PFDataListItem\n        aria-labelledby=\"modules-loading\"\n        key={isLoading}\n        style={{ border: 'none' }}\n      >\n        <PFDataListCell>\n          <LoadingState />\n        </PFDataListCell>\n      </PFDataListItem>\n    )}\n    {!isLoading && modules.length <= 0 && (\n      <PFDataListItem\n        aria-labelledby=\"modules-no-data\"\n        key={isLoading}\n        style={{ border: 'none' }}\n      >\n        <PFDataListCell>\n          <NoData />\n        </PFDataListCell>\n      </PFDataListItem>\n    )}\n    {!isLoading &&\n      modules\n        .filter((module) => module.name !== null)\n        .map(({ name, host_task_count }, index) => (\n          <DataListItem aria-labelledby=\"top-modules-detail\" key={index}>\n            <DataListCell>\n              <span>{trimStr(name)}</span>\n            </DataListCell>\n            <DataCellEnd>{host_task_count}</DataCellEnd>\n          </DataListItem>\n        ))}\n  </DataList>\n);\n\nModulesList.propTypes = {\n  modules: PropTypes.array,\n  isLoading: PropTypes.bool,\n};\n\nexport default ModulesList;\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport { Paths } from '../paths';\nimport { stringify } from 'query-string';\nimport useApi from '../Utilities/useApi';\nimport { formatDateTime, formatSeconds } from '../Utilities/helpers';\nimport { readJobExplorer } from '../Api';\n\nimport {\n  Button,\n  DataList,\n  DataListItem as PFDataListItem,\n  DataListCell as PFDataListCell,\n  Label,\n  Modal,\n} from '@patternfly/react-core';\n\nimport { CircleIcon } from '@patternfly/react-icons';\n\nconst success = (\n  <CircleIcon\n    size=\"sm\"\n    key=\"5\"\n    style={{ color: 'rgb(110, 198, 100)', marginRight: '5px' }}\n  />\n);\nconst fail = (\n  <>\n    <CircleIcon\n      size=\"sm\"\n      key=\"5\"\n      style={{ color: 'rgb(163, 0, 0)', marginRight: '5px' }}\n    />\n    <span id=\"fail-icon\">!</span>\n  </>\n);\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\nconst PFDataListItemNoBorder = styled(PFDataListItem)`\n  border-bottom: none;\n  margin-bottom: -20px;\n`;\nconst DataListItemCompact = styled(DataListItem)`\n  padding: 0;\n  > .pf-c-data-list__cell {\n    font-weight: 600;\n  }\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst DataListCellCompact = styled(DataListCell)`\n  padding: 7px;\n`;\n\nconst DataListFocus = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-gap: 10px;\n  padding: var(--pf-global--spacer--lg);\n  background: #ebebeb;\n  border: 1px solid #ccc;\n  border-top: none;\n  margin-bottom: 20px;\n`;\nconst DataCellEndCompact = styled(DataCellEnd)`\n  padding: 7px !important;\n`;\n\nconst formatTopFailedTask = (data) => {\n  if (!data) {\n    return;\n  }\n\n  if (data && data[0]) {\n    const percentage = Math.ceil(\n      (data[0].failed_count / data[0].total_failed_count) * 100\n    );\n    return `${data[0].task_name} ${percentage}%`;\n  }\n\n  return `Unavailable`;\n};\n\nconst formatTopFailedStep = (data) => {\n  if (!data) {\n    return;\n  }\n\n  if (data && data[0]) {\n    const percentage = Math.ceil(\n      (data[0].failed_count / data[0].total_failed_count) * 100\n    );\n    return `${data[0].template_name} ${percentage}%`;\n  }\n\n  return `Unavailable`;\n};\n\nconst formatSuccessRate = (successCount, totalCount) =>\n  Math.ceil((successCount / totalCount) * 100) + '%';\nconst formatAvgRun = (elapsed, totalCount) =>\n  new Date(Math.ceil(elapsed / totalCount) * 1000).toISOString().substr(11, 8);\nconst formatTotalTime = (elapsed) =>\n  new Date(elapsed * 1000).toISOString().substr(11, 8);\n\nconst ModalContents = ({\n  selectedId,\n  isOpen,\n  handleModal,\n  qp,\n  jobType,\n  handleCloseBtn,\n}) => {\n  const [\n    {\n      data: { items: relatedJobs = [] },\n    },\n    setRelatedJobs,\n  ] = useApi({ items: [] });\n  const [\n    {\n      data: {\n        items: [stats = 0],\n      },\n    },\n    setStats,\n  ] = useApi({ items: [] });\n\n  let history = useHistory();\n\n  const redirectToJobExplorer = () => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      template_id: [selectedId],\n      status: [\n        'successful',\n        'failed',\n        'new',\n        'pending',\n        'waiting',\n        'error',\n        'canceled',\n        'running',\n      ],\n      job_type: [jobType],\n      quick_date_range: 'last_30_days',\n    };\n\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const relatedTemplateJobsParams = {\n    ...qp,\n    template_id: [selectedId],\n    attributes: [\n      'id',\n      'status',\n      'job_type',\n      'started',\n      'finished',\n      'elapsed',\n      'created',\n      'cluster_name',\n      'org_name',\n    ],\n    group_by_time: false,\n    limit: 5,\n    sort_by: 'created:desc',\n    quick_date_range: qp.quick_date_range\n      ? qp.quick_date_range\n      : 'last_30_days',\n    job_type: [jobType],\n  };\n\n  const agreggateTemplateParams = {\n    group_by: 'template',\n    template_id: [selectedId],\n    attributes: [\n      'elapsed',\n      'job_type',\n      'successful_count',\n      'failed_count',\n      'total_count',\n      jobType === 'job' ? 'most_failed_tasks' : 'most_failed_steps',\n    ],\n    status: qp.status,\n    quick_date_range: qp.quick_date_range\n      ? qp.quick_date_range\n      : 'last_30_days',\n    job_type: [jobType],\n  };\n\n  useEffect(() => {\n    if (selectedId) {\n      setStats(readJobExplorer({ params: agreggateTemplateParams }));\n      setRelatedJobs(readJobExplorer({ params: relatedTemplateJobsParams }));\n    }\n  }, [selectedId]);\n\n  return (\n    <Modal\n      aria-label=\"modal\"\n      width={'80%'}\n      title={stats.name ? stats.name : 'no-template-name'}\n      isOpen={isOpen}\n      onClose={() => {\n        handleModal(false);\n        handleCloseBtn(null);\n      }}\n      actions={[\n        <Button\n          key=\"cancel\"\n          variant=\"secondary\"\n          onClick={() => {\n            handleModal(false);\n            handleCloseBtn(null);\n          }}\n        >\n          Close\n        </Button>,\n      ]}\n    >\n      <DataList aria-label=\"Selected Template Details\">\n        <PFDataListItemNoBorder aria-labelledby=\"Selected Template Statistics\">\n          <DataListFocus>\n            <div aria-labelledby=\"job runs\">\n              <b style={{ marginRight: '10px' }}>Number of runs</b>\n              {stats.total_count ? stats.total_count : 'Unavailable'}\n            </div>\n            <div aria-labelledby=\"total time\">\n              <b style={{ marginRight: '10px' }}>Total time</b>\n              {stats.elapsed ? formatTotalTime(stats.elapsed) : 'Unavailable'}\n            </div>\n            <div aria-labelledby=\"Avg Time\">\n              <b style={{ marginRight: '10px' }}>Avg time</b>\n              {stats.elapsed\n                ? formatAvgRun(stats.elapsed, stats.total_count)\n                : 'Unavailable'}\n            </div>\n            <div aria-labelledby=\"success rate\">\n              <b style={{ marginRight: '10px' }}>Success rate</b>\n              {!isNaN(stats.successful_count)\n                ? formatSuccessRate(stats.successful_count, stats.total_count)\n                : 'Unavailable'}\n            </div>\n            {stats.most_failed_tasks && (\n              <div aria-labelledby=\"most failed task\">\n                <b style={{ marginRight: '10px' }}>Most failed task</b>\n                {stats.most_failed_tasks\n                  ? formatTopFailedTask(stats.most_failed_tasks)\n                  : 'Unavailable'}\n              </div>\n            )}\n            {stats.most_failed_steps && (\n              <div aria-labelledby=\"most failed step\">\n                <b style={{ marginRight: '10px' }}>Most failed step</b>\n                {stats.most_failed_steps\n                  ? formatTopFailedStep(stats.most_failed_steps)\n                  : 'Unavailable'}\n              </div>\n            )}\n          </DataListFocus>\n        </PFDataListItemNoBorder>\n        <DataListItemCompact>\n          <DataListCellCompact key=\"last5jobs\">\n            <Label variant=\"outline\">Last 5 jobs</Label>\n          </DataListCellCompact>\n          ,\n          <DataCellEndCompact>\n            <Button\n              component=\"a\"\n              onClick={redirectToJobExplorer}\n              variant=\"link\"\n            >\n              View all jobs\n            </Button>\n          </DataCellEndCompact>\n        </DataListItemCompact>\n        <DataListItemCompact aria-labelledby=\"datalist header\">\n          <PFDataListCell key=\"job heading\">Id/Name</PFDataListCell>\n          <PFDataListCell key=\"cluster heading\">Cluster</PFDataListCell>\n          <PFDataListCell key=\"start time heading\">Start Time</PFDataListCell>\n          <PFDataListCell key=\"total time heading\">Total Time</PFDataListCell>\n        </DataListItemCompact>\n        {relatedJobs.length <= 0 && <LoadingState />}\n        {relatedJobs.length > 0 &&\n          relatedJobs.map((job, index) => (\n            <DataListItem\n              style={{ padding: '10px 0' }}\n              key={`job-details-${index}`}\n              aria-labelledby=\"job details\"\n            >\n              <PFDataListCell key=\"job name\">\n                {job.status === 'successful' ? success : fail} {job.id.id} -{' '}\n                {job.id.template_name}\n              </PFDataListCell>\n              <PFDataListCell key=\"job cluster\">\n                {job.cluster_name}\n              </PFDataListCell>\n              <PFDataListCell key=\"start time\">\n                {formatDateTime(job.started)}\n              </PFDataListCell>\n              <PFDataListCell key=\"total time\">\n                {formatSeconds(job.elapsed)}\n              </PFDataListCell>\n            </DataListItem>\n          ))}\n      </DataList>\n    </Modal>\n  );\n};\n\nModalContents.propTypes = {\n  selectedId: PropTypes.number,\n  qp: PropTypes.object,\n  jobType: PropTypes.string,\n  handleCloseBtn: PropTypes.func,\n  isOpen: PropTypes.bool,\n  handleModal: PropTypes.func,\n};\n\nexport default ModalContents;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n  DataList,\n  DataListItem as PFDataListItem,\n  DataListCell as PFDataListCell,\n} from '@patternfly/react-core';\n\nimport ModalContents from './ModalContents';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst TemplatesList = ({ templates, isLoading, qp, title, jobType }) => {\n  const [selectedId, setSelectedId] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  return (\n    <>\n      <DataList\n        aria-label=\"Top Templates\"\n        style={{\n          maxHeight: '400px',\n          overflow: 'auto',\n          height: '400px',\n          background: 'white',\n        }}\n      >\n        <DataListItem aria-labelledby=\"top-templates-header\">\n          <DataListCell>\n            <h3>{title}</h3>\n          </DataListCell>\n          <DataCellEnd>\n            <h3>Usage</h3>\n          </DataCellEnd>\n        </DataListItem>\n        {isLoading && (\n          <PFDataListItem\n            aria-labelledby=\"templates-loading\"\n            key={isLoading}\n            style={{ border: 'none' }}\n          >\n            <PFDataListCell>\n              <LoadingState />\n            </PFDataListCell>\n          </PFDataListItem>\n        )}\n        {!isLoading && templates.length <= 0 && (\n          <PFDataListItem\n            aria-labelledby=\"templates-no-data\"\n            key={isLoading}\n            style={{ border: 'none' }}\n          >\n            <PFDataListCell>\n              <NoData />\n            </PFDataListCell>\n          </PFDataListItem>\n        )}\n        {!isLoading &&\n          templates.map(({ name, total_count, id }, index) => (\n            <DataListItem aria-labelledby=\"top-templates-detail\" key={index}>\n              <DataListCell>\n                <a\n                  onClick={() => {\n                    setIsModalOpen(true);\n                    setSelectedId(id);\n                  }}\n                >\n                  {name}\n                </a>\n              </DataListCell>\n              <DataCellEnd>{total_count}</DataCellEnd>\n            </DataListItem>\n          ))}\n      </DataList>\n      <ModalContents\n        isOpen={isModalOpen}\n        handleModal={setIsModalOpen}\n        selectedId={selectedId}\n        qp={qp}\n        jobType={jobType}\n        handleCloseBtn={setSelectedId}\n      />\n    </>\n  );\n};\n\nTemplatesList.propTypes = {\n  templates: PropTypes.array,\n  isLoading: PropTypes.bool,\n  queryParams: PropTypes.object,\n  title: PropTypes.string,\n  qp: PropTypes.object,\n  jobType: PropTypes.string,\n};\n\nexport default TemplatesList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport {\n  preflightRequest,\n  readClustersOptions,\n  readJobExplorer,\n  readEventExplorer,\n} from '../../Api';\n\nimport { jobExplorer } from '../../Utilities/constants';\nimport useApi from '../../Utilities/useApi';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle as PFCardTitle,\n} from '@patternfly/react-core';\n\nimport BarChart from '../../Charts/BarChart';\nimport LineChart from '../../Charts/LineChart';\nimport ModulesList from '../../Components/ModulesList';\nimport TemplatesList from '../../Components/TemplatesList';\nimport FilterableToolbar from '../../Components/Toolbar';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport { clusters } from '../../Utilities/constants';\n\nconst initialTopTemplateParams = {\n  group_by: 'template',\n  limit: 10,\n  job_type: ['job'],\n  group_by_time: false,\n  status: ['successful', 'failed'],\n};\n\nconst initialTopWorkflowParams = {\n  group_by: 'template',\n  limit: 10,\n  job_type: ['workflowjob'],\n  group_by_time: false,\n  status: ['successful', 'failed'],\n};\n\nconst initialModuleParams = {\n  group_by: 'module',\n  sort_by: 'host_task_count:desc',\n  limit: 10,\n};\n\nconst Clusters = () => {\n  const [preflightError, setPreFlightError] = useState(null);\n\n  const { queryParams, setFromToolbar } = useQueryParams({\n    ...clusters.defaultParams,\n  });\n\n  const [\n    {\n      isLoading,\n      isSuccess,\n      error,\n      data: { items: chartData = [] },\n    },\n    setData,\n  ] = useApi({ items: [] });\n\n  const [\n    {\n      data: { items: templates = [] },\n    },\n    setTemplates,\n  ] = useApi({ items: [] });\n  const [\n    {\n      data: { items: workflows = [] },\n    },\n    setWorkflows,\n  ] = useApi({ items: [] });\n  const [\n    {\n      data: { items: modules = [] },\n    },\n    setModules,\n  ] = useApi({ items: [] });\n  const [{ data: options = [] }, setOptions] = useApi({});\n\n  const initialOptionsParams = {\n    attributes: jobExplorer.attributes,\n  };\n\n  const { queryParams: optionsQueryParams } =\n    useQueryParams(initialOptionsParams);\n\n  const {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n  } = queryParams;\n\n  const topTemplatesParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialTopTemplateParams,\n  };\n\n  const topWorkflowParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialTopWorkflowParams,\n  };\n\n  const topModuleParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialModuleParams,\n  };\n\n  useEffect(() => {\n    async function initializeWithPreflight() {\n      await preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n      setOptions(readClustersOptions({ params: optionsQueryParams }));\n    }\n\n    initializeWithPreflight();\n  }, []);\n\n  // Get and update the data\n  useEffect(() => {\n    const fetchEndpoints = () => {\n      setData(readJobExplorer({ params: queryParams }));\n      setTemplates(readJobExplorer({ params: topTemplatesParams }));\n      setWorkflows(readJobExplorer({ params: topWorkflowParams }));\n      setModules(readEventExplorer({ params: topModuleParams }));\n    };\n    fetchEndpoints();\n  }, [queryParams]);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Clusters'} />\n        <FilterableToolbar\n          categories={options}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      {(preflightError || error) && (\n        <Main>\n          {preflightError ? (\n            <EmptyState {...preflightError} />\n          ) : (\n            <ApiErrorState message={error.error} />\n          )}\n        </Main>\n      )}\n      {!preflightError && !error && (\n        <Main>\n          <Card>\n            <PFCardTitle>\n              <h2>Job status</h2>\n            </PFCardTitle>\n            <CardBody>\n              {isLoading && <LoadingState />}\n              {queryParams.cluster_id.length <= 0 && isSuccess && (\n                <BarChart\n                  margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                  id=\"d3-bar-chart-root\"\n                  data={chartData}\n                  templateId={queryParams.template_id}\n                  orgId={queryParams.org_id}\n                />\n              )}\n              {queryParams.cluster_id.length > 0 && isSuccess && (\n                <LineChart\n                  margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                  id=\"d3-line-chart-root\"\n                  data={chartData}\n                  clusterId={queryParams.cluster_id}\n                  templateId={queryParams.template_id}\n                  orgId={queryParams.org_id}\n                />\n              )}\n            </CardBody>\n          </Card>\n          <div\n            className=\"dataCard\"\n            style={{ display: 'flex', marginTop: '20px' }}\n          >\n            <TemplatesList\n              qp={queryParams}\n              templates={workflows}\n              isLoading={isLoading}\n              title={'Top workflows'}\n              jobType={'workflowjob'}\n            />\n            <TemplatesList\n              qp={queryParams}\n              templates={templates}\n              isLoading={isLoading}\n              title={'Top templates'}\n              jobType={'job'}\n            />\n            <ModulesList modules={modules} isLoading={isLoading} />\n          </div>\n        </Main>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Clusters;\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst NoResults = () => {\n  return (\n    <EmptyState variant={EmptyStateVariant.full}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title size=\"lg\" headingLevel=\"h4\">\n        No results found\n      </Title>\n      <EmptyStateBody>\n        No results match the filter criteria. Remove all filters or clear all\n        filters to show results.\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n\nexport default NoResults;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ClockIcon,\n  SyncAltIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\n\nconst JobStatus = ({ status }) => {\n  const capitalized = (str) => str.charAt(0).toUpperCase() + str.slice(1);\n\n  const getColor = () => {\n    switch (status) {\n      case 'successful':\n        return 'green';\n      case 'failed':\n      case 'error':\n        return 'red';\n      case 'running':\n      case 'pending':\n        return 'blue';\n      case 'canceled':\n        return 'orange';\n      // case new, waiting\n      default:\n        return 'grey';\n    }\n  };\n\n  const getIcon = () => {\n    switch (status) {\n      case 'successful':\n        return <CheckCircleIcon />;\n      case 'failed':\n      case 'error':\n        return <ExclamationCircleIcon />;\n      case 'running':\n        return <SyncAltIcon />;\n      case 'canceled':\n        return <ExclamationTriangleIcon />;\n      // case new, waiting, pending\n      default:\n        return <ClockIcon />;\n    }\n  };\n\n  return (\n    <Label variant=\"outline\" color={getColor()} icon={getIcon()}>\n      {capitalized(status)}\n    </Label>\n  );\n};\n\nJobStatus.propTypes = {\n  status: PropTypes.oneOf([\n    'successful',\n    'failed',\n    'error',\n    'running',\n    'new',\n    'waiting',\n    'pending',\n    'canceled',\n  ]),\n};\n\nexport default JobStatus;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  DataListCell as PFDataListCell,\n  DataListContent,\n  DataList,\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells as PFDataListItemCells,\n  DataListToggle as PFDataListToggle,\n  Tooltip,\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkIcon } from '@patternfly/react-icons';\n\nimport LoadingState from '../Components/LoadingState';\nimport { formatDateTime, formatJobType } from '../Utilities/helpers';\nimport JobStatus from './JobStatus';\n\nconst headerLabels = ['Id/Name', 'Status', 'Cluster', 'Organization', 'Type'];\n\nconst ExternalLinkIcon = styled(PFExternalLinkIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n`;\n\nconst DataListCell = styled(PFDataListCell)`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  text-align: center;\n`;\n\nconst DataListCellHeader = styled(DataListCell)`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  font-weight: bold;\n`;\n\nconst DataListItemCells = styled(PFDataListItemCells)`\n  align-items: center;\n`;\n\nconst DataListToggle = styled(PFDataListToggle)`\n  align-items: center;\n`;\n\nconst mobileBreakpoint = 765;\n\nconst buildHeader = (labels) => (\n  <DataListItem>\n    <DataListItemRow style={{ paddingLeft: '80px' }}>\n      <DataListItemCells\n        dataListCells={labels.map((label) => (\n          <DataListCellHeader key={label}>\n            {label}\n            {label === 'Id/Name' && <ExternalLinkIcon />}\n          </DataListCellHeader>\n        ))}\n      />\n    </DataListItemRow>\n  </DataListItem>\n);\n\nconst buildListRow = (items, ariaLabel, ariaLabelledBy, windowWidth) => {\n  const [isExpanded, setIsExpanded] = useState([]);\n\n  return (\n    <>\n      {items.map((item, count) => {\n        const toggle = (id) => {\n          const expanded = isExpanded;\n          const idx = expanded.indexOf(id);\n          const newExpanded =\n            idx >= 0\n              ? [\n                  ...expanded.slice(0, idx),\n                  ...expanded.slice(idx + 1, expanded.length),\n                ]\n              : [...expanded, id];\n          setIsExpanded(newExpanded);\n        };\n\n        return (\n          <DataListItem\n            key={item.id.id}\n            aria-labelledby={ariaLabelledBy}\n            isExpanded={isExpanded.includes(`${item.id.id}-toggle`)}\n          >\n            <DataListItemRow key={item.id.id}>\n              <DataListToggle\n                id={`${item.id.id}-toggle`}\n                aria-controls={`${item.id.id}-expand`}\n                onClick={() => toggle(`${item.id.id}-toggle`)}\n                isExpanded={isExpanded.includes(`${item.id.id}-toggle`)}\n              />\n              <DataListItemCells\n                dataListCells={[\n                  <DataListCell key={count++}>\n                    <a\n                      href={item.id.tower_link}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {windowWidth < mobileBreakpoint && (\n                        <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                          Id/Name\n                          <ExternalLinkIcon />:\n                        </span>\n                      )}\n                      &nbsp;\n                      {`${item.id.id} - ${item.id.template_name}`}\n                    </a>\n                  </DataListCell>,\n                  <DataListCell key={count++}>\n                    {windowWidth <= mobileBreakpoint && (\n                      <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Status:\n                      </span>\n                    )}\n                    &nbsp;\n                    <JobStatus status={item.status} />\n                  </DataListCell>,\n                  <Tooltip key={count++} content={<p>{item.cluster_name}</p>}>\n                    <DataListCell>\n                      {windowWidth <= mobileBreakpoint && (\n                        <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                          Cluster:\n                        </span>\n                      )}\n                      &nbsp;\n                      {item.cluster_name}\n                    </DataListCell>\n                  </Tooltip>,\n                  <DataListCell key={count++}>\n                    {windowWidth <= mobileBreakpoint && (\n                      <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Organization:\n                      </span>\n                    )}\n                    &nbsp;\n                    {item.org_name}\n                  </DataListCell>,\n                  <DataListCell key={count++}>\n                    {windowWidth <= mobileBreakpoint && (\n                      <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Type:\n                      </span>\n                    )}\n                    &nbsp;\n                    {formatJobType(item.job_type)}\n                  </DataListCell>,\n                ]}\n              />\n            </DataListItemRow>\n            <DataListContent\n              aria-label={`${item.id.id}-details`}\n              id={'${item.id.id}'}\n              isHidden={!isExpanded.includes(`${item.id.id}-toggle`)}\n            >\n              <DataListItemCells\n                dataListCells={[\n                  <DataListCell key={count++}>\n                    Created: {formatDateTime(item.created)}\n                  </DataListCell>,\n                  <DataListCell key={count++}>\n                    Started: {formatDateTime(item.started)}\n                  </DataListCell>,\n                  <DataListCell key={count++}>\n                    Finished: {formatDateTime(item.finished)}\n                  </DataListCell>,\n                ]}\n              />\n            </DataListContent>\n          </DataListItem>\n        );\n      })}\n    </>\n  );\n};\n\nconst AllJobsTemplate = ({ jobs }) => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  const onResize = () => setWindowWidth(window.innerWidth);\n\n  useEffect(() => {\n    window.addEventListener('resize', onResize);\n    return () => window.removeEventListener('resize', onResize);\n  }, []);\n\n  return buildListRow(jobs, 'All jobs view', 'all-jobs', windowWidth);\n};\n\nconst JobExplorerList = ({ jobs }) => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  const onResize = () => setWindowWidth(window.innerWidth);\n\n  useEffect(() => {\n    window.addEventListener('resize', onResize);\n    return () => window.removeEventListener('resize', onResize);\n  }, []);\n\n  return (\n    <>\n      {jobs.length <= 0 && <LoadingState />}\n      <DataList isCompact>\n        {windowWidth >= mobileBreakpoint && buildHeader(headerLabels)}\n        <AllJobsTemplate jobs={jobs} windowWidth={windowWidth} />\n      </DataList>\n    </>\n  );\n};\n\nJobExplorerList.propTypes = {\n  jobs: PropTypes.array,\n  windowWidth: PropTypes.number,\n};\n\nAllJobsTemplate.propTypes = {\n  jobs: PropTypes.array,\n  windowWidth: PropTypes.number,\n};\n\nexport default JobExplorerList;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { parse, stringify } from 'query-string';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { Paths } from '../../paths';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoResults from '../../Components/NoResults';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport Pagination from '../../Components/Pagination';\n\nimport {\n  preflightRequest,\n  readJobExplorer,\n  readJobExplorerOptions,\n} from '../../Api';\nimport { jobExplorer } from '../../Utilities/constants';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport { Card, CardBody, PaginationVariant } from '@patternfly/react-core';\n\nimport JobExplorerList from '../../Components/JobExplorerList';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\nconst initialQueryParams = {\n  ...jobExplorer.defaultParams,\n  attributes: jobExplorer.attributes,\n};\n\nconst JobExplorer = ({ location: { search }, history }) => {\n  const [preflightError, setPreFlightError] = useState(null);\n  const [\n    {\n      isLoading,\n      isSuccess,\n      error,\n      data: { meta = {}, items: data = [] },\n    },\n    setData,\n  ] = useApi({ meta: {}, items: [] });\n  const [options, setOptions] = useApi({});\n\n  const { queryParams, setFromPagination, setFromToolbar, dispatch } =\n    useQueryParams(initialQueryParams);\n\n  const updateURL = () => {\n    const { jobExplorer } = Paths;\n    const search = stringify(queryParams, { arrayFormat: 'bracket' });\n    history.replace({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'job-explorer', secondaryNav: true });\n\n    preflightRequest().catch((error) => {\n      setPreFlightError({ preflightError: error });\n    });\n\n    const initialSearchParams = parse(search, {\n      arrayFormat: 'bracket',\n      parseBooleans: true,\n      parseNumbers: true,\n    });\n\n    dispatch({\n      type: 'REINITIALIZE',\n      value: {\n        ...initialQueryParams,\n        ...initialSearchParams,\n      },\n    });\n  }, []);\n\n  useEffect(() => {\n    setData(readJobExplorer({ params: queryParams }));\n    setOptions(readJobExplorerOptions({ params: queryParams }));\n    updateURL();\n  }, [queryParams]);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Job Explorer'} />\n      </PageHeader>\n\n      {preflightError && (\n        <Main>\n          <EmptyState {...preflightError} />\n        </Main>\n      )}\n\n      {!preflightError && (\n        <Main>\n          <Card>\n            <CardBody>\n              <FilterableToolbar\n                categories={options.data}\n                filters={queryParams}\n                setFilters={setFromToolbar}\n                pagination={\n                  <Pagination\n                    count={meta?.count}\n                    params={{\n                      limit: queryParams.limit,\n                      offset: queryParams.offset,\n                    }}\n                    setPagination={setFromPagination}\n                    isCompact\n                  />\n                }\n                hasSettings\n              />\n              {error && <ApiErrorState message={error.error} />}\n              {isLoading && <LoadingState />}\n              {isSuccess && data.length <= 0 && <NoResults />}\n              {isSuccess && data.length > 0 && <JobExplorerList jobs={data} />}\n              <Pagination\n                count={meta?.count}\n                params={{\n                  limit: queryParams.limit,\n                  offset: queryParams.offset,\n                }}\n                setPagination={setFromPagination}\n                variant={PaginationVariant.bottom}\n              />\n            </CardBody>\n          </Card>\n        </Main>\n      )}\n    </React.Fragment>\n  );\n};\n\nJobExplorer.propTypes = {\n  location: PropTypes.object,\n  history: PropTypes.object,\n};\n\nexport default JobExplorer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nimport {\n  NotificationDrawerList as PFNotificationDrawerList,\n  NotificationDrawerListItem as PFNotificationDrawerListItem,\n  NotificationDrawerListItemBody,\n  NotificationDrawerListItemHeader,\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkAltIcon } from '@patternfly/react-icons';\nimport LoadingState from '../Components/LoadingState';\nimport { capitalize } from '../Utilities/helpers';\n\nconst ExternalLinkAltIcon = styled(PFExternalLinkAltIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n  font-size: 14px;\n`;\n\nconst NotificationDrawerListItem = styled(PFNotificationDrawerListItem)`\n  border-top: 1px solid var(--pf-global--BorderColor--light-100\n    );\n  border-bottom::nth-child(odd): 1px solid var(--pf-global--BorderColor--light-100\n    );\n  box-shadow: none;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst NotificationDrawerList = styled(PFNotificationDrawerList)`\n  &:last-child {\n    border-bottom: 1px solid var(--pf-global--BorderColor--light-100);\n  }\n`;\n\nconst stringifyDate = (date) => {\n  const day = moment(date);\n  const oneHour = 60 * 60 * 1000;\n  const now = moment().utc();\n\n  if (now.isAfter(day)) {\n    return `${now.diff(day, 'days')} day(s) ago.`;\n  }\n\n  if (day.isSame(now, 'day')) {\n    if (day.valueOf() > oneHour) {\n      return `${day.diff(now, 'hours')} hour(s) ago.`;\n    }\n\n    return `${now.diff(day, 'minutes')} minute(s) ago.`;\n  }\n};\n\nconst AllNotificationTemplate = ({ notifications }) =>\n  notifications.map(\n    ({ date, message, label, notification_id: id, tower_url: url }) => {\n      if (label === '' || label === 'notice') {\n        return (\n          <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"info\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n\n      if (label === 'error') {\n        return (\n          <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"danger\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n\n      if (label === 'warning') {\n        return (\n          <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"warning\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n    }\n  );\n\nconst ErrorNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'error')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"danger\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst NoticeNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'notice')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"info\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst WarningNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'warning')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"warning\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst NotificationsList = ({ filterBy, notifications }) => (\n  <>\n    <NotificationDrawerList>\n      {notifications.length <= 0 && <LoadingState />}\n      {filterBy === '' && (\n        <AllNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'notice' && (\n        <NoticeNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'error' && (\n        <ErrorNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'warning' && (\n        <WarningNotificationTemplate notifications={notifications} />\n      )}\n    </NotificationDrawerList>\n  </>\n);\n\nAllNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nErrorNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nWarningNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nNotificationsList.propTypes = {\n  notifications: PropTypes.array,\n  filterBy: PropTypes.string,\n};\n\nexport default NotificationsList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoData from '../../Components/NoData';\nimport { preflightRequest, readClusters, readNotifications } from '../../Api';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle as PFCardTitle,\n  FormSelect,\n  FormSelectOption,\n  PaginationVariant,\n  NotificationDrawer,\n} from '@patternfly/react-core';\n\nimport NotificationsList from '../../Components/NotificationsList';\nimport Pagination from '../../Components/Pagination';\n\nconst CardTitle = styled(PFCardTitle)`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n`;\n\nconst DropdownGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-end;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n\n  select {\n    margin: 0 10px;\n    width: 150px;\n\n    @media screen and (max-width: 1035px) {\n      margin: 10px 10px 0 0;\n    }\n\n    @media screen and (max-width: 865px) {\n      width: 100%;\n    }\n  }\n`;\n\nconst notificationOptions = [\n  {\n    value: 'please choose',\n    label: 'Select Notification Severity',\n    disabled: true,\n  },\n  { value: 'error', label: 'View Critical', disabled: false },\n  { value: 'warning', label: 'View Warning', disabled: false },\n  { value: 'notice', label: 'View Notice', disabled: false },\n  { value: '', label: 'View All', disabled: false },\n];\n\nfunction formatClusterName(data) {\n  const defaultClusterOptions = [\n    { value: 'please choose', label: 'Select cluster', disabled: true },\n    { value: '', label: 'All Clusters', disabled: false },\n    { value: -1, label: 'Unassociated', disabled: false },\n  ];\n  return data.reduce(\n    (formatted, { label, cluster_id: id, install_uuid: uuid }) => {\n      if (label.length === 0) {\n        formatted.push({ value: id, label: uuid, disabled: false });\n      } else {\n        formatted.push({ value: id, label, disabled: false });\n      }\n\n      return formatted;\n    },\n    defaultClusterOptions\n  );\n}\n\nconst initialQueryParams = {\n  limit: 5,\n  offset: 0,\n};\n\nconst Notifications = () => {\n  const [preflightError, setPreFlightError] = useState(null);\n  const [notificationsData, setNotificationsData] = useState([]);\n  const [clusterOptions, setClusterOptions] = useState([]);\n  const [selectedCluster, setSelectedCluster] = useState('');\n  const [firstRender, setFirstRender] = useState(true);\n  const [isLoading, setIsLoading] = useState(true);\n  const [meta, setMeta] = useState({});\n  const { queryParams, setId, setFromPagination, setSeverity } =\n    useQueryParams(initialQueryParams);\n\n  useEffect(() => {\n    if (firstRender) {\n      return;\n    }\n\n    const getData = () => {\n      return readNotifications({ params: queryParams });\n    };\n\n    const update = () => {\n      setIsLoading(true);\n      getData().then(({ notifications: notificationsData = [], meta }) => {\n        setNotificationsData(notificationsData);\n        setMeta(meta);\n        setIsLoading(false);\n      });\n    };\n\n    update();\n  }, [queryParams]);\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'notifications', secondaryNav: true });\n\n    let ignore = false;\n    const fetchEndpoints = () => {\n      return Promise.all(\n        [readClusters(), readNotifications({ params: queryParams })].map((p) =>\n          p.catch(() => [])\n        )\n      );\n    };\n\n    async function initializeWithPreflight() {\n      setIsLoading(true);\n      await preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n      fetchEndpoints().then(\n        ([\n          { templates: clustersData = [] },\n          { notifications: notificationsData = [], meta },\n        ]) => {\n          if (!ignore) {\n            const clusterOptions = formatClusterName(clustersData);\n            setClusterOptions(clusterOptions);\n            setNotificationsData(notificationsData);\n            setMeta(meta);\n            setFirstRender(false);\n            setIsLoading(false);\n          }\n        }\n      );\n    }\n\n    initializeWithPreflight();\n    return () => (ignore = true);\n  }, []);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Notifications'} />\n      </PageHeader>\n      {preflightError && (\n        <Main>\n          <EmptyState {...preflightError} />\n        </Main>\n      )}\n      {!preflightError && (\n        <>\n          <Main>\n            <Card>\n              <CardTitle>\n                <DropdownGroup>\n                  <FormSelect\n                    name=\"selectedCluster\"\n                    value={selectedCluster}\n                    onChange={(value) => {\n                      setSelectedCluster(value);\n                      setId(value);\n                      setFromPagination(0);\n                    }}\n                    aria-label=\"Select Cluster\"\n                  >\n                    {clusterOptions.map(({ value, label, disabled }, index) => (\n                      <FormSelectOption\n                        isDisabled={disabled}\n                        key={index}\n                        value={value}\n                        label={label}\n                      />\n                    ))}\n                  </FormSelect>\n                  <FormSelect\n                    name=\"selectedNotification\"\n                    value={queryParams.severity || ''}\n                    onChange={(value) => {\n                      setSeverity(value);\n                      setFromPagination(0);\n                    }}\n                    aria-label=\"Select Notification Type\"\n                  >\n                    {notificationOptions.map(\n                      ({ disabled, value, label }, index) => (\n                        <FormSelectOption\n                          isDisabled={disabled}\n                          key={index}\n                          value={value}\n                          label={label}\n                        />\n                      )\n                    )}\n                  </FormSelect>\n                </DropdownGroup>\n                <Pagination\n                  count={meta?.count}\n                  params={{\n                    limit: queryParams.limit,\n                    offset: queryParams.offset,\n                  }}\n                  setPagination={setFromPagination}\n                  isCompact\n                />\n              </CardTitle>\n              <CardBody>\n                {isLoading && <LoadingState />}\n                {!isLoading && notificationsData.length <= 0 && <NoData />}\n                {!isLoading && notificationsData.length > 0 && (\n                  <NotificationDrawer>\n                    <NotificationsList\n                      filterBy={queryParams.severity || ''}\n                      options={notificationOptions}\n                      notifications={notificationsData}\n                    />\n                  </NotificationDrawer>\n                )}\n                <Pagination\n                  count={meta?.count}\n                  params={{\n                    limit: queryParams.limit,\n                    offset: queryParams.offset,\n                  }}\n                  setPagination={setFromPagination}\n                  variant={PaginationVariant.bottom}\n                />\n              </CardBody>\n            </Card>\n          </Main>\n        </>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Notifications;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Switch } from '@patternfly/react-core';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  overflow: auto;\n  width: 100%;\n  height: ${(props) => props.height};\n`;\n\nconst LegendDetail = styled.div`\n  display: flex;\n  padding: 7.5px 15px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  overflow: auto;\n`;\n\nconst Color = styled.div.attrs((props) => ({\n  color: props.color || 'black',\n}))`\n  min-width: 12px;\n  height: 12px;\n  background: ${(props) => props.color};\n  margin-right: 20px;\n`;\n\nconst Title = styled.span`\n  font-size: 15px;\n  display: inline-block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n`;\n\nconst SubTitle = styled.span`\n  font-size: 15px;\n  margin-left: auto;\n  margin-right: 0;\n  padding-right: 10px;\n`;\n\nconst Legend = ({ data, selected, height, onToggle, chartName }) => {\n  return (\n    <Container height={height}>\n      {data.map(({ name, value, id, count }, index) => (\n        <LegendDetail key={index}>\n          <Wrapper>\n            <Color color={value} />\n            <Title>{name}</Title>\n          </Wrapper>\n          {count && <SubTitle>{count}</SubTitle>}\n          {selected && (\n            <Switch\n              isChecked={selected.some((selection) => selection === id)}\n              onChange={() => onToggle(id)}\n              aria-label={`${chartName}-${name}`}\n              value={id}\n              key={index}\n            />\n          )}\n        </LegendDetail>\n      ))}\n    </Container>\n  );\n};\n\nLegend.propTypes = {\n  data: PropTypes.array.isRequired,\n  selected: PropTypes.array.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  height: PropTypes.string.isRequired,\n  chartName: PropTypes.string.isRequired,\n};\n\nexport default Legend;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport styled from 'styled-components';\n\nimport initializeChart from '.././BaseChart';\nimport Legend from '../../Utilities/Legend';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nconst GroupedBarChart = ({\n  onClick = null,\n  TooltipClass,\n  legend,\n  ...props\n}) => {\n  const colors = legend.map(({ id, name }) => {\n    return {\n      name,\n      value: props.colorFunc(id),\n      id,\n    };\n  });\n  const [selectedIds, setSelectedIds] = useState(\n    legend.map(({ id }) => id).slice(0, 8)\n  );\n  let timeout = null;\n\n  const handleToggle = (id) => {\n    if (selectedIds.includes(id)) {\n      setSelectedIds(selectedIds.filter((el) => el !== id));\n    } else {\n      setSelectedIds([...selectedIds, id]);\n    }\n  };\n\n  const draw = () => {\n    // Clear our chart container element first\n    d3.selectAll('#' + props.id + ' > *').remove();\n    let { data: unformattedData } = props;\n    const data = unformattedData.reduce((formatted, { date, items }) => {\n      const selectedOrgs = items.filter(({ id }) => selectedIds.includes(id));\n      return formatted.concat({ date, selectedOrgs });\n    }, []);\n    const width = props.getWidth();\n    const height = props.getHeight();\n    // x scale of entire chart\n    const x0 = d3.scaleBand().range([0, width]).padding(0.35);\n    // x scale of individual grouped bars\n    const x1 = d3.scaleBand();\n    const y = d3.scaleLinear().range([height, 0]);\n    // format our X Axis ticks\n    const maxTicksOneMonth = Math.round(data.length / (data.length / 2));\n    const maxTicksTwoMonths = Math.round(data.length / (data.length / 4));\n    let ticks = data.map((d) => d.date);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) =>\n          i % (data.length > 31 ? maxTicksTwoMonths : maxTicksOneMonth) === 0\n            ? d.date\n            : undefined\n        )\n        .filter((item) => item);\n    }\n\n    const xAxis = d3.axisBottom(x0).tickValues(ticks).tickFormat(formatDate);\n\n    const yAxis = d3.axisLeft(y).ticks(8).tickSize(-width, 0, 0);\n\n    const svg = d3\n      .select('#' + props.id)\n      .append('svg')\n      .attr('width', width + props.margin.left + props.margin.right)\n      .attr('height', height + props.margin.bottom + props.margin.top)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' + props.margin.left + ',' + props.margin.top + ')'\n      );\n\n    const dates = data.map((d) => d.date);\n    const tooltip = new TooltipClass({\n      svg: '#' + props.id,\n    });\n    x0.domain(dates);\n    x1.domain(selectedIds).range([0, x0.bandwidth()]);\n    y.domain([\n      0,\n      d3.max(data, (date) =>\n        d3.max(date.selectedOrgs, (d) => d.value * 1.15)\n      ) || 8,\n    ]);\n\n    // add y axis\n    svg\n      .append('g')\n      .attr('class', 'y axis')\n      .call(yAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7')\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 6)\n      .attr('dy', '.71em')\n      .style('text-anchor', 'end')\n      .style('font-weight', 'bold')\n      .text('Value');\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text(props.yLabel);\n\n    // add x axis\n    svg\n      .append('g')\n      .attr('class', 'x axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' + width / 2 + ' ,' + (height + props.margin.top + 25) + ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n    // add the groups\n    let slice = svg.selectAll('.slice').data(data);\n    slice.exit().remove();\n\n    const enter = slice\n      .enter()\n      .append('g')\n      .attr('class', 'g foo')\n      .attr('transform', (d) => 'translate(' + x0(d.date) + ',0)');\n    slice = slice.merge(enter);\n    // add the individual bars\n    let bars = slice.selectAll('rect').data(function (d) {\n      return d.selectedOrgs;\n    });\n    bars.exit().remove();\n\n    const color = props.colorFunc;\n    const subEnter = bars\n      .enter()\n      .append('rect')\n      .attr('width', x1.bandwidth())\n      .attr('x', function (d) {\n        return x1(d.id);\n      }) // unsorted\n      .style('fill', function (d) {\n        return color(d.id);\n      })\n      .attr('y', function (d) {\n        return y(d.value);\n      })\n      .attr('height', function (d) {\n        return height - y(d.value);\n      })\n      .on('mouseover', function (d) {\n        d3.select(this).style('cursor', onClick ? 'pointer' : 'default');\n        d3.select(this).style('fill', d3.rgb(color(d.id)).darker(1));\n        tooltip.handleMouseOver();\n      })\n      .on('mousemove', tooltip.handleMouseOver)\n      .on('mouseout', function (d) {\n        d3.select(this).style('fill', color(d.id));\n        tooltip.handleMouseOut();\n      })\n      .on('click', onClick);\n    bars = bars.merge(subEnter);\n  };\n\n  const init = () => {\n    draw();\n  };\n\n  const resize = () => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      draw();\n    }, 500);\n  };\n\n  useEffect(() => {\n    init();\n    window.addEventListener('resize', resize);\n\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [props.data, selectedIds]);\n\n  return (\n    <Wrapper>\n      <div id={props.id} />\n      {colors.length > 0 && (\n        <Legend\n          id={`${props.id}-legend`}\n          data={colors}\n          selected={selectedIds}\n          onToggle={handleToggle}\n          height=\"350px\"\n          chartName={`${props.id}-legend`}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nGroupedBarChart.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  legend: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  colorFunc: PropTypes.func,\n  yLabel: PropTypes.string,\n  onClick: PropTypes.func,\n  TooltipClass: PropTypes.any.isRequired,\n};\n\nGroupedBarChart.defaultProps = {\n  legend: [],\n};\n\nexport default initializeChart(GroupedBarChart);\n","import * as d3 from 'd3';\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class OrgsTooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', 68)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 14)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Date');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 72)\n      .attr('y', 14)\n      .text('0 Jobs');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', -1)\n      .attr('font-size', 12)\n      .text('Org');\n    this.clickMore = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 20)\n      .attr('y', 30)\n      .attr('font-size', 12)\n      .text('Click for details');\n  }\n\n  handleMouseOver = (d) => {\n    let date;\n    let orgName;\n    let jobs;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    } else {\n      const maxLength = 16;\n      date = d.date;\n      orgName = d.name;\n      jobs = d.value;\n      if (d.name.length > maxLength) {\n        orgName = d.name.slice(0, maxLength).concat('...');\n      }\n    }\n\n    const formatTooltipDate = formatDate;\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.date.text('' + formatTooltipDate(date));\n    this.orgName.text('' + orgName);\n    this.jobs.text('' + jobs + ' Jobs');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 45;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n      this.orgName.attr('x', -adjustedWidth - 7);\n      this.clickMore.attr('x', -adjustedWidth - 7);\n      this.date.attr('x', -adjustedWidth - 7);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.clickMore.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth / 2);\n      this.date.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import * as d3 from 'd3';\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class HostsTooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', 68)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 14)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Date');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 72)\n      .attr('y', 14)\n      .text('0 Jobs');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', -1)\n      .attr('font-size', 12)\n      .text('Org');\n    this.clickMore = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 20)\n      .attr('y', 30)\n      .attr('font-size', 12)\n      .text('Click for details');\n  }\n\n  handleMouseOver = (d) => {\n    let date;\n    let orgName;\n    let jobs;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    } else {\n      const maxLength = 16;\n      date = d.date;\n      orgName = d.name;\n      jobs = d.value;\n      if (d.name.length > maxLength) {\n        orgName = d.name.slice(0, maxLength).concat('...');\n      }\n    }\n\n    const formatTooltipDate = formatDate;\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.date.text('' + formatTooltipDate(date));\n    this.orgName.text('' + orgName);\n    this.jobs.text('' + jobs + ' Hosts');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 45;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n      this.orgName.attr('x', -adjustedWidth - 7);\n      this.clickMore.attr('x', -adjustedWidth - 7);\n      this.date.attr('x', -adjustedWidth - 7);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.clickMore.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth / 2);\n      this.date.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport { getTotal } from '../Utilities/helpers';\nimport Legend from '../Utilities/Legend';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nclass Tooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    // defer drawing until we know the data shape\n    this.drawn = false;\n    // show the success rate or not\n    this.showSuccess = false;\n  }\n\n  draw(d) {\n    // chart1 has success rate data and chart2 does not ...\n    this.showSuccess = d && d.data && 'success_rate' in d.data ? true : false;\n    const boundingHeight = this.showSuccess ? 70 : 52;\n    const boundingWidth = this.showSuccess ? 120 : 108;\n\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBOx = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', boundingHeight)\n      .attr('width', boundingWidth)\n      .attr('fill', '#393f44');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 0)\n      .text('Organization');\n    this.percentageTotal = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 16)\n      .text('0');\n    this.percentageSuccess = null;\n    if (this.showSuccess) {\n      this.percentageSuccess = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 30)\n        .text('');\n    }\n  }\n\n  handleMouseOver = (d) => {\n    // treat draw() as a singleton to avoid a painted window effect\n    if (this.drawn !== true) {\n      this.draw(d);\n      this.drawn = true;\n    }\n\n    let perc;\n    let percSuccess;\n    let orgName;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    }\n\n    if (d && d.data) {\n      const maxLength = 16;\n      perc = d.data.percent;\n      percSuccess = d.data.success_rate;\n      orgName = d.data.name;\n      if (d.data.name.length > maxLength) {\n        orgName = d.data.name.slice(0, maxLength - 3).concat('...');\n      }\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.percentageTotal.text('' + perc + '%');\n    if (percSuccess && this.percentageSuccess) {\n      this.percentageSuccess.text('(' + percSuccess + '% successful)');\n    }\n\n    this.orgName.text(' ' + orgName);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, -10) rotate(45)');\n      this.boundingBOx.attr('x', -125);\n      this.orgName.attr('x', -112);\n      this.percentageTotal.attr('x', -112);\n      if (this.showSuccess) {\n        this.percentageSuccess.attr('x', -112);\n      }\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, -10) rotate(45)');\n      this.boundingBOx.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.percentageTotal.attr('x', 20);\n      if (this.showSuccess) {\n        this.percentageSuccess.attr('x', 20);\n      }\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nconst PieChart = ({\n  data,\n  id,\n  colorFunc: color,\n  margin,\n  getWidth,\n  getHeight,\n}) => {\n  const colors = data\n    .map(({ id, name, count }) => {\n      return {\n        id,\n        name,\n        value: color(id),\n        count: Math.round(count),\n      };\n    })\n    .sort((a, b) => (a.count > b.count ? 1 : b.count > a.count ? -1 : 0));\n\n  const [selectedIds, setSelectedIds] = useState(\n    data.map(({ id }) => id).slice(0, 8)\n  );\n\n  let timeout = null;\n\n  const handleToggle = (id) => {\n    if (selectedIds.includes(id)) {\n      setSelectedIds(selectedIds.filter((el) => el !== id));\n    } else {\n      setSelectedIds([...selectedIds, id]);\n    }\n  };\n\n  const draw = () => {\n    d3.selectAll('#' + id + ' > *').remove();\n    const width = getWidth();\n    const height = getHeight();\n    const svg = d3\n      .select('#' + id)\n      .append('svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.bottom)\n      .append('g');\n\n    svg.append('g').attr('class', 'slices');\n    svg.append('g').attr('class', 'labels');\n    svg.append('g').attr('class', 'lines');\n    const radius = Math.min(width, height) / 2;\n    const filteredData = data.filter(({ id }) => selectedIds.includes(id));\n    const total = getTotal(filteredData);\n    filteredData.forEach(function (d) {\n      d.count = +d.count;\n      d.percent = +Math.round((d.count / total) * 100);\n    });\n    const donutTooltip = new Tooltip({\n      svg: '#' + id,\n    });\n    const pie = d3\n      .pie()\n      .sort(null)\n      .value((d) => d.count);\n    const arc = d3\n      .arc()\n      .outerRadius(radius - 10) // controls top positioning of chart\n      .innerRadius(0);\n\n    svg.attr(\n      'transform',\n      'translate(' +\n        (width + margin.left + margin.right) / 2 +\n        ',' +\n        (height + margin.top + margin.bottom) / 2 +\n        ')'\n    );\n\n    svg\n      .selectAll('path')\n      .data(pie(filteredData))\n      .enter()\n      .append('path')\n      .attr('d', arc)\n      .attr('fill', (d) => color(d.data.id));\n\n    svg\n      .selectAll('path')\n      .on('mouseover', function (d) {\n        d3.select(this).style('fill', d3.rgb(color(d.data.id)).darker(1));\n        donutTooltip.handleMouseOver(d);\n      })\n      .on('mouseout', function (d) {\n        d3.select(this).style('fill', color(d.data.id));\n        donutTooltip.handleMouseOut();\n      })\n      .on('mousemove', donutTooltip.handleMouseOver);\n\n    svg.append('g').classed('labels', true);\n    svg.append('g').classed('lines', true);\n  };\n\n  const init = () => {\n    draw();\n  };\n\n  const resize = () => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      draw();\n    }, 500);\n  };\n\n  useEffect(() => {\n    init();\n    window.addEventListener('resize', resize);\n\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [data, selectedIds]);\n\n  return (\n    <Wrapper>\n      <div id={id} />\n      {colors.length > 0 && (\n        <Legend\n          id={`${id}-legend`}\n          data={colors}\n          selected={selectedIds}\n          onToggle={handleToggle}\n          height=\"300px\"\n          chartName={`${id}-legend`}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nPieChart.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  colorFunc: PropTypes.func,\n};\n\nexport default initializeChart(PieChart);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { formatDate as dateForJobExplorer } from '../../Utilities/helpers';\n\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport {\n  preflightRequest,\n  readJobExplorer,\n  readHostExplorer,\n  readOrgOptions,\n} from '../../Api';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle as PFCardTitle,\n  Tabs,\n  Tab,\n} from '@patternfly/react-core';\n\nimport {\n  GroupedBarChart,\n  OrgsTooltip,\n  HostsTooltip,\n} from '../../Charts/GroupedBarChart/';\nimport PieChart from '../../Charts/PieChart';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport { organizationStatistics as constants } from '../../Utilities/constants';\n\n// For chart colors\nimport { pfmulti } from '../../Utilities/colors';\nimport { scaleOrdinal } from 'd3';\n\nconst CardTitle = styled(PFCardTitle)`\n  border-bottom: 2px solid #ebebeb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &&& {\n    min-height: 60px;\n    --pf-c-card--first-child--PaddingTop: 10px;\n    --pf-c-card__header--not-last-child--PaddingBottom: 10px;\n\n    h3 {\n      font-size: 0.875em;\n    }\n  }\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  overflow: hidden;\n\n  .pf-c-card {\n    width: 50%;\n    margin-top: 20px;\n    overflow: auto;\n  }\n\n  .pf-c-card:first-of-type {\n    margin-right: 20px;\n  }\n`;\n\nconst TopCard = styled(Card)`\n  min-height: 500px;\n`;\n\nconst colorFunc = scaleOrdinal(pfmulti);\n\nconst orgsChartMapper =\n  (attrName) =>\n  ({ dates: data = [], meta }) => ({\n    data: data.map(({ date, items }) => ({\n      date,\n      items: items.map(({ id, [attrName]: value, name }) => ({\n        id,\n        date,\n        value,\n        name: name || 'No organization',\n      })),\n    })),\n    legend: meta.legend.map((el) => ({\n      ...el,\n      name: el.name || 'No organization',\n    })),\n  });\n\nconst pieChartMapper =\n  (attrName) =>\n  ({ items = [] }) =>\n    items.map(({ id, [attrName]: count, name }) => ({\n      id,\n      count,\n      name: name || 'No organization',\n    }));\n\nconst redirectToJobExplorer =\n  (toJobExplorer, queryParams) =>\n  ({ date, id }) => {\n    if (id === -1) {\n      // disable clicking on \"others\" block\n      return;\n    }\n\n    const { sort_by, ...rest } = queryParams;\n    const formattedDate = dateForJobExplorer(date);\n    const initialQueryParams = {\n      ...rest,\n      quick_date_range: 'custom',\n      start_date: formattedDate,\n      end_date: formattedDate,\n      status: [\n        'successful',\n        'failed',\n        'new',\n        'pending',\n        'waiting',\n        'error',\n        'canceled',\n        'running',\n      ],\n      org_id: [id],\n    };\n\n    toJobExplorer(initialQueryParams);\n  };\n\nconst chartMapper = [\n  {\n    api: readJobExplorer,\n    attr: 'total_count',\n    label: 'Jobs across organizations',\n    onClick: redirectToJobExplorer,\n    tooltip: OrgsTooltip,\n  },\n  {\n    api: readHostExplorer,\n    attr: 'total_unique_host_count',\n    label: 'Hosts across organizations',\n    onClick: () => null,\n    tooltip: HostsTooltip,\n  },\n];\n\nconst OrganizationStatistics = ({ history }) => {\n  const toJobExplorer = useRedirect(history, 'jobExplorer');\n  const [preflight, setPreflight] = useApi(null);\n  const [activeTabKey, setActiveTabKey] = useState(0);\n  const [orgs, setOrgs] = useApi(\n    [],\n    orgsChartMapper(chartMapper[activeTabKey].attr)\n  );\n  const [jobs, setJobs] = useApi([], pieChartMapper('total_count'));\n  const [tasks, setTasks] = useApi([], pieChartMapper('host_task_count'));\n  const [options, setOptions] = useApi({});\n  const { queryParams, setFromToolbar } = useQueryParams(\n    constants.defaultParams\n  );\n\n  const jobEventsByOrgParams = {\n    ...queryParams,\n    attributes: ['host_task_count'],\n    group_by: 'org',\n    include_others: true,\n    sort_by: `host_task_count:desc`,\n  };\n\n  const jobRunsByOrgParams = {\n    ...queryParams,\n    attributes: ['total_count'],\n    group_by: 'org',\n    include_others: true,\n    sort_by: `total_count:desc`,\n  };\n\n  const jobsByDateAndOrgParams = {\n    ...queryParams,\n    attributes: ['total_count'],\n    group_by: 'org',\n    group_by_time: true,\n    sort_by: `total_count:desc`,\n  };\n\n  const hostAcrossOrgParams = {\n    ...queryParams,\n    attributes: ['total_unique_host_count'],\n    group_by: 'org',\n    group_by_time: true,\n    sort_by: `host_task_count:desc`,\n  };\n\n  const handleTabClick = (_, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({\n      id: 'organization-statistics',\n      secondaryNav: true,\n    });\n    setPreflight(preflightRequest());\n    setOptions(readOrgOptions({ params: queryParams }));\n  }, []);\n\n  useEffect(() => {\n    const { api: readJobsOrHosts } = chartMapper[activeTabKey];\n    const params =\n      activeTabKey === 0 ? jobsByDateAndOrgParams : hostAcrossOrgParams;\n    setOrgs(readJobsOrHosts({ params }));\n  }, [queryParams, activeTabKey]);\n\n  useEffect(() => {\n    setJobs(readJobExplorer({ params: jobRunsByOrgParams }));\n    setTasks(readJobExplorer({ params: jobEventsByOrgParams }));\n  }, [queryParams]);\n\n  if (preflight?.error?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Organization Statistics'} />\n        <FilterableToolbar\n          categories={options.data}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      {preflight.error && (\n        <Main>\n          <EmptyState preflightError={preflight.error} />\n        </Main>\n      )}\n      {preflight.isSuccess && (\n        <React.Fragment>\n          <Main>\n            <TopCard>\n              <Tabs activeKey={activeTabKey} onSelect={handleTabClick}>\n                <Tab eventKey={0} title={'Jobs'} />\n                <Tab eventKey={1} title={'Hosts'} />\n              </Tabs>\n              <CardBody>\n                {orgs.isLoading && <LoadingState />}\n                {orgs.error && <ApiErrorState message={orgs.error.error} />}\n                {orgs.isSuccess && orgs.data?.data.length <= 0 && <NoData />}\n                {orgs.isSuccess && orgs.data?.data.length > 0 && (\n                  <GroupedBarChart\n                    margin={{ top: 20, right: 20, bottom: 50, left: 50 }}\n                    id=\"d3-grouped-bar-chart-root\"\n                    data={orgs.data.data}\n                    legend={orgs.data.legend}\n                    history={history}\n                    colorFunc={colorFunc}\n                    yLabel={chartMapper[activeTabKey].label}\n                    onClick={chartMapper[activeTabKey].onClick(\n                      toJobExplorer,\n                      queryParams\n                    )}\n                    TooltipClass={chartMapper[activeTabKey].tooltip}\n                  />\n                )}\n              </CardBody>\n            </TopCard>\n            <CardContainer>\n              <Card>\n                <CardBody style={{ padding: 0 }}>\n                  <CardTitle style={{ padding: 0 }}>\n                    <h2 style={{ marginLeft: '20px' }}>\n                      Job Runs by Organization\n                    </h2>\n                  </CardTitle>\n                  {jobs.isLoading && <LoadingState />}\n                  {jobs.error && <ApiErrorState message={jobs.error.error} />}\n                  {jobs.isSuccess && jobs.data.length <= 0 && <NoData />}\n                  {jobs.isSuccess && jobs.data.length > 0 && (\n                    <PieChart\n                      margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                      id=\"d3-donut-1-chart-root\"\n                      data={jobs.data}\n                      colorFunc={colorFunc}\n                    />\n                  )}\n                </CardBody>\n              </Card>\n              <Card>\n                <CardBody style={{ padding: 0 }}>\n                  <CardTitle style={{ padding: 0 }}>\n                    <h2 style={{ marginLeft: '20px' }}>\n                      Usage by Organization (Tasks)\n                    </h2>\n                  </CardTitle>\n                  {tasks.isLoading && <LoadingState />}\n                  {tasks.error && <ApiErrorState message={tasks.error.error} />}\n                  {tasks.isSuccess && tasks.data.length <= 0 && <NoData />}\n                  {tasks.isSuccess && tasks.data.length > 0 && (\n                    <PieChart\n                      margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                      id=\"d3-donut-2-chart-root\"\n                      data={tasks.data}\n                      colorFunc={colorFunc}\n                    />\n                  )}\n                </CardBody>\n              </Card>\n            </CardContainer>\n          </Main>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nOrganizationStatistics.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default OrganizationStatistics;\n","var pfmulti = [\n    '#06C',\n    '#4CB140',\n    '#009596',\n    '#5752D1',\n    '#F4C145',\n    '#EC7A08',\n    '#8BC1F7',\n    '#23511E',\n    '#A2D9D9',\n    '#2A265F',\n    '#F9E0A2',\n    '#8F4700',\n    '#002F5D'\n];\nexport { pfmulti };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { shape, string, number, arrayOf, node, oneOfType } from 'prop-types';\nimport { Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst RoutedTabs = ({ tabsArray, defaultTabId }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const getActiveTabId = (defaultTabId) => {\n    return (\n      tabsArray.find((tab) => tab.link === location.pathname)?.id ||\n      defaultTabId\n    );\n  };\n\n  const handleTabSelect = (_, eventKey) => {\n    const match = tabsArray.find((tab) => tab.id === eventKey);\n    if (match) {\n      history.push(match.link);\n    }\n  };\n\n  return (\n    <Tabs activeKey={getActiveTabId(defaultTabId)} onSelect={handleTabSelect}>\n      {tabsArray.map((tab) => (\n        <Tab\n          aria-label={typeof tab.name === 'string' ? tab.name : `${tab.id} tab`}\n          eventKey={tab.id}\n          key={tab.id}\n          link={tab.link}\n          title={<TabTitleText>{tab.name}</TabTitleText>}\n          role=\"tab\"\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nRoutedTabs.propTypes = {\n  defaultTabId: PropTypes.number,\n  tabsArray: arrayOf(\n    shape({\n      id: number.isRequired,\n      link: string.isRequired,\n      name: oneOfType([string.isRequired, node.isRequired]),\n    })\n  ).isRequired,\n};\n\nRoutedTabs.defaultProps = {\n  defaultTabId: 1,\n};\n\nexport default RoutedTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\nimport { Paths } from '../../paths';\nimport { stringify } from 'query-string';\n\nimport { useHistory } from 'react-router-dom';\n\nimport {\n  Card,\n  DescriptionList,\n  DescriptionListTerm,\n  DescriptionListGroup,\n  DescriptionListDescription,\n  Divider,\n  Label,\n  TextContent,\n  List,\n  ListItem,\n} from '@patternfly/react-core';\n\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\nimport { formatDateTime } from '../../Utilities/helpers';\nimport RoutedTabs from '../../Components/RoutedTabs';\n\nconst TopCard = styled(Card)`\n  min-height: 500px;\n`;\n\nconst DetailsTab = ({ tabsArray, plans }) => {\n  let history = useHistory();\n  const {\n    automation_status,\n    category,\n    description,\n    frequency_period,\n    hosts,\n    manual_time,\n    modified,\n    name,\n    tasks,\n    template_details,\n    template_id,\n  } = plans[0];\n\n  const redirectToJobExplorer = (templateId) => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      quick_date_range: 'last_30_days',\n      status: ['failed', 'successful'],\n      template_id: [templateId],\n    };\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const showTemplate = (template_details) => {\n    if (!template_details.id) {\n      return;\n    }\n\n    return (\n      <a onClick={() => redirectToJobExplorer(template_details.id)}>\n        {template_details.name}\n      </a>\n    );\n  };\n\n  const labelsAndValues = {\n    Name: name || undefined,\n    'Automation Type': category || undefined,\n    Description: description || undefined,\n    'Manual Time': manual_time || undefined,\n    'Run on hosts': hosts || undefined,\n    Frequency: frequency_period || undefined,\n    Template: template_id ? showTemplate(template_details) : undefined,\n    'Automation status':\n      automation_status.status === 'successful' ? (\n        <Label variant=\"outline\" color=\"green\" icon={<CheckCircleIcon />}>\n          Running\n        </Label>\n      ) : (\n        <Label variant=\"outline\" color=\"red\" icon={<ExclamationCircleIcon />}>\n          Not Running\n        </Label>\n      ),\n    'Last updated': modified ? <em>{formatDateTime(modified)}</em> : undefined,\n  };\n\n  return (\n    <React.Fragment>\n      {plans && (\n        <TopCard>\n          <RoutedTabs tabsArray={tabsArray} />\n          <div style={{ padding: '1rem' }}>\n            <DescriptionList isHorizontal columnModifier={{ lg: '3Col' }}>\n              {Object.keys(labelsAndValues).map(\n                (key, i) =>\n                  labelsAndValues[key] !== undefined && (\n                    <DescriptionListGroup key={i}>\n                      <DescriptionListTerm>{key}</DescriptionListTerm>\n                      <DescriptionListDescription>\n                        {labelsAndValues[key]}\n                      </DescriptionListDescription>\n                    </DescriptionListGroup>\n                  )\n              )}\n            </DescriptionList>\n            {tasks.length > 0 && (\n              <>\n                <Divider style={{ padding: '1rem' }} component=\"div\" />\n                <DescriptionListTerm>Tasks</DescriptionListTerm>\n                <TextContent>\n                  <List component=\"ol\" type=\"1\">\n                    {tasks.map((task) => (\n                      <ListItem key={task.id}>{task.task}</ListItem>\n                    ))}\n                  </List>\n                </TextContent>\n              </>\n            )}\n          </div>\n        </TopCard>\n      )}\n    </React.Fragment>\n  );\n};\n\nDetailsTab.propTypes = {\n  plans: PropTypes.array,\n  tabsArray: PropTypes.array,\n};\n\nexport default DetailsTab;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\n\nimport { Card, CardBody } from '@patternfly/react-core';\nimport RoutedTabs from '../../Components/RoutedTabs';\n\nconst TopCard = styled(Card)`\n  min-height: 500px;\n`;\n\nconst GraphTab = ({ tabsArray }) => {\n  return (\n    <>\n      <TopCard>\n        <RoutedTabs tabsArray={tabsArray} />\n        <CardBody />\n      </TopCard>\n    </>\n  );\n};\n\nGraphTab.propTypes = {\n  tabsArray: PropTypes.array,\n};\n\nexport default GraphTab;\n","/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Breadcrumb, BreadcrumbItem, BreadcrumbHeading } from '@patternfly/react-core';\n\nimport getBaseName from '../Utilities/getBaseName';\n\nconst Breadcrumbs = ({items, current}) => {\n    return (\n        <Breadcrumb>\n            {items.map(({title, navigate}) => {\n                const basePathNavigate = getBaseName() + navigate;\n                return (<BreadcrumbItem key={title} to={basePathNavigate}>{title}</BreadcrumbItem>);\n            })}\n            {current && (<BreadcrumbHeading>{current}</BreadcrumbHeading>)}\n        </Breadcrumb>\n    );\n};\n\nBreadcrumbs.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n      navigate: PropTypes.any,\n      title: PropTypes.node\n  })),\n  current: PropTypes.node,\n};\n\nBreadcrumbs.defaultProps = {\n  items: [],\n  current: null,\n};\n\nexport default Breadcrumbs;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, Route, Switch } from 'react-router-dom';\nimport { CaretLeftIcon } from '@patternfly/react-icons';\n\nimport DetailsTab from './DetailsTab';\nimport GraphTab from './GraphTab';\nimport SavingsPlanner from './SavingsPlanner';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport Breadcrumbs from '../../Components/Breadcrumbs';\n\nimport { readPlan } from '../../Api';\n\nimport useApi from '../../Utilities/useApi';\n\nconst SavingsPlan = () => {\n  let { id } = useParams();\n  const pageTitle =\n    location.pathname.indexOf('/graph') !== -1 ? 'Graph' : 'Details';\n  const [selectedId, setSelectedId] = useState(id);\n  const [\n    {\n      isSuccess,\n      error,\n      data: { items: plans = [] },\n    },\n    setData,\n  ] = useApi({ items: [] });\n  const queryParams = { id: [selectedId] };\n\n  useEffect(() => {\n    setSelectedId(id);\n    const fetchEndpoints = () => {\n      setData(readPlan({ params: queryParams }));\n    };\n\n    fetchEndpoints();\n  }, []);\n\n  const tabsArray = [\n    {\n      id: 0,\n      name: (\n        <>\n          <CaretLeftIcon />\n          {'Back to Plans'}\n        </>\n      ),\n      link: `/savings-planner`,\n    },\n    { id: 1, name: 'Details', link: `/savings-planner/${selectedId}/details` },\n    { id: 2, name: 'Graph', link: `/savings-planner/${selectedId}/graph` },\n  ];\n\n  const showCardHeader = !location.pathname.endsWith('edit');\n  const breadcrumbUrl = `/savings-planner/${selectedId}`;\n  const breadcrumbsItems = isSuccess\n    ? [\n        { title: 'Savings Planner', navigate: '/savings-planner' },\n        { title: plans[0].name, navigate: breadcrumbUrl },\n      ]\n    : [];\n\n  return (\n    <>\n      {error && (\n        <>\n          <ApiErrorState message={error.error} />\n        </>\n      )}\n      {isSuccess && (\n        <React.Fragment>\n          <PageHeader>\n            <Breadcrumbs items={breadcrumbsItems} />\n            <PageHeaderTitle title={pageTitle} />\n          </PageHeader>\n          {showCardHeader && (\n            <Switch>\n              <Route path=\"/savings-planner/:id/graph\">\n                <GraphTab tabsArray={tabsArray} />\n              </Route>\n              <Route path=\"/savings-planner/:id/details\">\n                <DetailsTab plans={plans} tabsArray={tabsArray} />\n              </Route>\n              <Route path=\"/savings-planner/:id\">\n                <DetailsTab plans={plans} tabsArray={tabsArray} />\n              </Route>\n              <Route exact path=\"/savings-planner\">\n                <SavingsPlanner />\n              </Route>\n            </Switch>\n          )}\n        </React.Fragment>\n      )}\n    </>\n  );\n};\n\nexport default SavingsPlan;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { Paths } from '../../paths';\n\nimport { formatDateTime } from '../../Utilities/helpers';\n\nimport {\n  Card,\n  CardHeader,\n  CardHeaderMain,\n  CardActions,\n  CardTitle,\n  CardBody,\n  CardFooter,\n  Checkbox,\n  Dropdown,\n  DropdownItem,\n  KebabToggle,\n  Label,\n} from '@patternfly/react-core';\n\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\nimport styled from 'styled-components';\nimport { stringify } from 'query-string';\n\nimport { Link, useRouteMatch } from 'react-router-dom';\n\nconst CardLabel = styled.span`\n  margin-right: 5px;\n`;\n\nconst PlanCard = ({\n  name,\n  id = null,\n  description = '',\n  frequency_period = '',\n  template_details = {},\n  automation_status = {},\n  modified = '',\n  category = '',\n  isSuccess,\n}) => {\n  const [isCardKebabOpen, setIsCardKebabOpen] = useState(false);\n\n  const match = useRouteMatch();\n  let history = useHistory();\n\n  const redirectToJobExplorer = (templateId) => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      quick_date_range: 'last_30_days',\n      status: ['failed', 'successful'],\n      template_id: [templateId],\n    };\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const renderTemplateLink = (template) => {\n    return template && isSuccess ? (\n      <a onClick={() => redirectToJobExplorer(template.id)}>{template.name}</a>\n    ) : null;\n  };\n\n  const kebabDropDownItems = [\n    <React.Fragment key={id}>\n      <DropdownItem key=\"edit\" onClick={() => {}} position=\"right\">\n        Edit\n      </DropdownItem>\n      <DropdownItem key=\"link\" onClick={() => {}} position=\"right\">\n        Link template\n      </DropdownItem>\n    </React.Fragment>,\n  ];\n\n  return (\n    <Card isHoverable isCompact>\n      <CardHeader>\n        <CardHeaderMain>\n          <CardTitle>\n            <Link to={`${match.url}/${id}`}>{name}</Link>\n          </CardTitle>\n        </CardHeaderMain>\n        <CardActions>\n          <Dropdown\n            onSelect={() => {}}\n            toggle={\n              <KebabToggle\n                onToggle={() => setIsCardKebabOpen(!isCardKebabOpen)}\n              />\n            }\n            isOpen={isCardKebabOpen}\n            isPlain\n            dropdownItems={kebabDropDownItems}\n            position={'right'}\n          />\n          <Checkbox\n            isChecked={false}\n            onChange={() => {}}\n            aria-label=\"card checkbox\"\n            id=\"check-1\"\n            name=\"check1\"\n          />\n        </CardActions>\n      </CardHeader>\n      <CardBody>\n        {description ? <p>{description}</p> : null}\n        <div>\n          <CardLabel>Frequency</CardLabel>{' '}\n          {frequency_period ? frequency_period : <em>None</em>}\n        </div>\n        <div>\n          <CardLabel>Template</CardLabel>{' '}\n          {template_details ? (\n            renderTemplateLink(template_details)\n          ) : (\n            <em>None</em>\n          )}\n        </div>\n        <div>\n          <CardLabel>Automation status</CardLabel>\n          {automation_status.status === 'successful' ? (\n            <Label variant=\"outline\" color=\"green\" icon={<CheckCircleIcon />}>\n              Running\n            </Label>\n          ) : (\n            <Label\n              variant=\"outline\"\n              color=\"red\"\n              icon={<ExclamationCircleIcon />}\n            >\n              Not Running\n            </Label>\n          )}\n        </div>\n        <div>\n          <CardLabel>Last updated</CardLabel>{' '}\n          <em>{formatDateTime(modified)}</em>\n        </div>\n      </CardBody>\n      <CardFooter>\n        <Label>{category}</Label>\n      </CardFooter>\n    </Card>\n  );\n};\n\nPlanCard.propTypes = {\n  isSuccess: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  id: PropTypes.number,\n  description: PropTypes.string,\n  frequency_period: PropTypes.string,\n  template_details: PropTypes.object,\n  modified: PropTypes.string,\n  category: PropTypes.string,\n  automation_status: PropTypes.object,\n};\n\nexport default PlanCard;\n","import React, { useEffect, useState } from 'react';\n\nimport { preflightRequest, readPlanOptions, readPlans } from '../../Api';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport Pagination from '../../Components/Pagination';\nimport PlanCard from './PlanCard';\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { savingsPlanner } from '../../Utilities/constants';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nimport { Gallery, PaginationVariant } from '@patternfly/react-core';\n\nconst SavingsPlanner = () => {\n  const { queryParams, setFromPagination, setFromToolbar } = useQueryParams(\n    savingsPlanner.defaultParams\n  );\n  const [\n    {\n      isLoading,\n      isSuccess,\n      error,\n      data: { meta = {}, items: data = [] },\n    },\n    setData,\n  ] = useApi({ meta: {}, items: [] });\n  const [options, setOptions] = useApi({});\n  const [preflightError, setPreFlightError] = useState(null);\n\n  const combinedOptions = {\n    ...options.data,\n    name: [{ key: 'name', value: null }],\n  };\n\n  useEffect(() => {\n    const fetchEndpoints = () => {\n      preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n      setData(readPlans({ params: queryParams }));\n      setOptions(readPlanOptions());\n    };\n\n    fetchEndpoints();\n  }, [queryParams]);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Savings Planner'} />\n        <FilterableToolbar\n          categories={combinedOptions}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n          pagination={\n            <Pagination\n              count={meta?.total_count}\n              params={{\n                limit: queryParams.limit,\n                offset: queryParams.offset,\n              }}\n              setPagination={setFromPagination}\n              isCompact\n            />\n          }\n        />\n      </PageHeader>\n      {preflightError && (\n        <Main>\n          <EmptyState {...preflightError} />\n        </Main>\n      )}\n      {error && (\n        <Main style={{ height: '100vh' }}>\n          <ApiErrorState message={error.error} />\n        </Main>\n      )}\n      {isLoading && (\n        <Main style={{ height: '100vh' }}>\n          <LoadingState />\n        </Main>\n      )}\n      {isSuccess && (\n        <Main style={{ height: '100vh' }}>\n          <Gallery hasGutter>\n            {options.isSuccess &&\n              data.map((datum) => (\n                <PlanCard\n                  key={datum.id}\n                  isSuccess={options.isSuccess}\n                  {...datum}\n                />\n              ))}\n          </Gallery>\n        </Main>\n      )}\n      <Pagination\n        count={meta?.total_count}\n        params={{\n          limit: queryParams.limit,\n          offset: queryParams.offset,\n        }}\n        setPagination={setFromPagination}\n        variant={PaginationVariant.bottom}\n        isSticky\n      />\n    </React.Fragment>\n  );\n};\n\nexport default SavingsPlanner;\n","export const jobExplorer = {\n  attributes: [\n    'id',\n    'status',\n    'job_type',\n    'started',\n    'finished',\n    'elapsed',\n    'created',\n    'cluster_name',\n    'org_name',\n    'most_failed_tasks',\n  ],\n  defaultParams: {\n    status: ['successful', 'failed'],\n    quick_date_range: 'last_30_days',\n    job_type: ['workflowjob', 'job'],\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    sort_options: 'created',\n    sort_order: 'desc',\n    only_root_workflows_and_standalone_jobs: false,\n    limit: 5,\n    offset: 0,\n  },\n};\n\nexport const roi = {\n  defaultParams: {\n    status: ['successful'],\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    quick_date_range: 'roi_last_year',\n    job_type: ['job'],\n    sort_options: 'template_productivity_score',\n    sort_order: 'desc',\n    start_date: null,\n    end_date: null,\n    limit: 25,\n    only_root_workflows_and_standalone_jobs: true,\n    attributes: [\n      'successful_hosts_total',\n      'successful_elapsed_total',\n      'total_org_count',\n      'total_cluster_count',\n    ],\n    group_by: 'template',\n    group_by_time: false,\n  },\n};\n\nexport const organizationStatistics = {\n  defaultParams: {\n    status: [],\n    org_id: [],\n    quick_date_range: 'last_30_days',\n    limit: 5,\n    offset: 0,\n    job_type: ['workflowjob', 'job'],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    start_date: null,\n    end_date: null,\n  },\n};\n\nexport const clusters = {\n  defaultParams: {\n    status: ['successful', 'failed'],\n    quick_date_range: 'last_30_days',\n    job_type: ['workflowjob', 'job'],\n    group_by_time: true,\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    only_root_workflows_and_standalone_jobs: false,\n  },\n};\n\nexport const savingsPlanner = {\n  defaultParams: {\n    template_id: [],\n    inventory_id: [],\n    automation_status: [],\n    category: [],\n    frequency_period: [],\n    name: '',\n    limit: 5,\n    offset: 0,\n    sort_options: 'modified',\n    sort_order: 'desc',\n  },\n};\n\nexport const notAuthorizedParams = {\n  title: 'RBAC Access Denied',\n  description:\n    'User does not have privileges to perform this action. Contact your organization adminstrator(s) for more information.',\n};\n","import moment from 'moment';\n\n/*\n * isNumeric - return true if input is a real number\n */\nexport function isNumeric(val) {\n  if (val === 0 || val === '0') {\n    return true;\n  }\n\n  if (parseInt(val)) {\n    return true;\n  }\n\n  if (parseFloat(val)) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function trimStr(str) {\n  return str.toString().replace(/['\"]+/g, '');\n}\n\nexport function formatDateTime(dateTime) {\n  return moment(new Date(dateTime).toISOString()).format('M/D/YYYY h:mm:ssa');\n}\n\nexport function formatDate(date) {\n  return moment(date).format('YYYY-MM-DD');\n}\n\nexport function formatSeconds(seconds) {\n  return moment().startOf('day').seconds(seconds).format('H:mm:ss');\n}\n\nexport function getTotal(data) {\n  if (!data) {\n    return;\n  } else {\n    let total = 0;\n    data.forEach((datum) => {\n      total += parseInt(datum.count);\n    });\n    return total;\n  }\n}\n\nexport function formatPercentage(val) {\n  if (isNaN(val)) {\n    return;\n  }\n\n  return `${val}%`;\n}\n\nexport const capitalize = (s) => {\n  if (typeof s !== 'string') {\n    return '';\n  }\n\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport function calculateDelta(a, b) {\n  if (!isNumeric(a) || !isNumeric(b)) {\n    return 0;\n  }\n\n  // never return less than zero ...\n  if (b - a < 0) {\n    return 0;\n  }\n\n  return b - a;\n}\n\nexport function convertMinsToMs(mins) {\n  if (!parseInt(mins)) {\n    return 0;\n  }\n\n  return mins * 60000;\n}\n\nexport function convertMsToMins(ms) {\n  if (!parseInt(ms)) {\n    return 0;\n  }\n\n  return ms / 60000;\n}\n\nexport function convertSecondsToMins(seconds) {\n  if (!parseInt(seconds)) {\n    return 0;\n  }\n\n  return seconds / 60;\n}\n\nexport function convertMinsToSeconds(mins) {\n  if (!parseInt(mins) || parseInt(mins) < 0) {\n    return 0;\n  }\n\n  return +parseInt(mins) * 60;\n}\n\nexport function convertSecondsToHours(seconds) {\n  if (!parseInt(seconds)) {\n    return 0;\n  }\n\n  return seconds / 3600;\n}\n\nexport function convertWithCommas(arr, key) {\n  const split = arr.reduce((strs, datum) => {\n    strs.push(datum[key]);\n    return strs;\n  }, []);\n  return split.join(', ');\n}\n\nexport function formatJobType(type) {\n  return type === 'job' ? 'Playbook run' : 'Workflow job';\n}\n\nexport function formatJobStatus(status) {\n  return status === 'successful' ? 'Success' : 'Failed';\n}\n\nexport function formatJobDetailsURL(baseURL, jobId) {\n  const subDirectory1 = 'job';\n  const subDirectory2 = 'details';\n  return `${baseURL}/#/${subDirectory1}/${jobId}/${subDirectory2}/`;\n}\n","import { useState, useEffect, useReducer } from 'react';\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return {\n        ...state,\n        isLoading: true,\n        isSuccess: false,\n        error: null,\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isSuccess: true,\n        error: null,\n        data: action.payload,\n      };\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        isSuccess: false,\n        error: action.payload,\n      };\n    case 'UPDATE_DATA':\n      return {\n        ...state,\n        data: action.payload,\n      };\n    default:\n      throw new Error();\n  }\n};\n\nconst useApi = (initialData, postprocess = (d) => d) => {\n  const [request, setRequest] = useState(null);\n\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isSuccess: false,\n    error: null,\n    data: initialData,\n  });\n\n  useEffect(() => {\n    // Prevent fetching nothing\n    if (!request) {\n      return;\n    }\n\n    // Initialize\n    let didCancel = false;\n    dispatch({ type: 'FETCH_INIT' });\n\n    // Fetching\n    request\n      .then((data) => {\n        if (!didCancel) {\n          dispatch({\n            type: 'FETCH_SUCCESS',\n            payload: postprocess(data),\n          });\n        }\n      })\n      .catch((e) => {\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_FAILURE', payload: e });\n        }\n      });\n\n    return () => {\n      didCancel = true;\n    };\n  }, [request]);\n\n  const setData = (data) => {\n    dispatch({ type: 'UPDATE_DATA', payload: data });\n  };\n\n  return [state, setRequest, setData];\n};\n\nexport default useApi;\n","import { useReducer } from 'react';\nimport moment from 'moment';\n\nimport { formatDate } from '../Utilities/helpers';\n\nexport const useQueryParams = (initial) => {\n  const initialWithCalculatedParams = {\n    ...initial,\n    ...(initial.sort_options &&\n      initial.sort_order && {\n        sort_by: `${initial.sort_options}:${initial.sort_order}`,\n      }),\n  };\n\n  const paramsReducer = (state, { type, value }) => {\n    switch (type) {\n      /* v0 api reducers */\n      case 'SET_STARTDATE':\n        return { ...state, startDate: value };\n      case 'SET_ENDDATE':\n        return { ...state, endDate: value };\n      case 'SET_ID':\n        if (!parseInt(value)) {\n          const { id: ignored, ...rest } = state;\n          return rest;\n        }\n\n        return { ...state, id: parseInt(value) };\n      case 'SET_SEVERITY':\n        if (value.severity === '') {\n          const { severity: ignored, ...rest } = state;\n          return rest;\n        }\n\n        return { ...state, ...value };\n\n      /* v1 api reducers */\n      case 'SET_LIMIT':\n        return isNaN(value)\n          ? { ...state, limit: 5 } // Defaults back to 5\n          : { ...state, limit: parseInt(value) };\n      case 'SET_OFFSET':\n        return isNaN(value)\n          ? { ...state, offset: 0 } // Defaults back to 0\n          : { ...state, offset: parseInt(value) };\n      case 'SET_ATTRIBUTES':\n      case 'SET_JOB_TYPE':\n      case 'SET_STATUS':\n      case 'SET_ORG':\n      case 'SET_CLUSTER':\n      case 'SET_TEMPLATE':\n      case 'SET_AUTOMATION_STATUS':\n      case 'SET_CATEGORY':\n      case 'SET_FREQUENCY':\n      case 'SET_NAME':\n      case 'SET_ROOT_WORKFLOWS_AND_JOBS':\n      case 'SET_INVENTORY':\n        return { ...state, ...value };\n      case 'SET_QUICK_DATE_RANGE': {\n        let newState = { ...state };\n        if (value !== 'custom') {\n          newState = { ...newState, start_date: null, end_date: null };\n        }\n\n        newState = { ...newState, ...value };\n        return newState;\n      }\n\n      case 'SET_START_DATE':\n      case 'SET_END_DATE': {\n        let newValues = {};\n        Object.entries(value).forEach(([key, value]) => {\n          newValues[key] = formatDate(value);\n        });\n        return { ...state, ...newValues };\n      }\n\n      case 'SET_SORT_OPTIONS': {\n        return {\n          ...state,\n          sort_options: value.sort_options,\n          ...(state.sort_order && {\n            sort_by: `${value.sort_options}:${state.sort_order}`,\n          }), // Update sort by\n        };\n      }\n\n      case 'SET_SORT_ORDER': {\n        return {\n          ...state,\n          sort_order: value.sort_order,\n          ...(state.sort_options && {\n            sort_by: `${state.sort_options}:${value.sort_order}`,\n          }), // Update sort by\n        };\n      }\n\n      case 'REINITIALIZE':\n        return { ...value };\n      case 'RESET_FILTER':\n        return { ...initialWithCalculatedParams };\n      default:\n        throw new Error(`The query params reducer action (${type}) not found.`);\n    }\n  };\n\n  const [queryParams, dispatch] = useReducer(paramsReducer, {\n    ...initialWithCalculatedParams,\n  });\n\n  const actionMapper = {\n    status: 'SET_STATUS',\n    quick_date_range: 'SET_QUICK_DATE_RANGE',\n    job_type: 'SET_JOB_TYPE',\n    org_id: 'SET_ORG',\n    cluster_id: 'SET_CLUSTER',\n    template_id: 'SET_TEMPLATE',\n    sort_order: 'SET_SORT_ORDER',\n    sort_options: `SET_SORT_OPTIONS`,\n    start_date: 'SET_START_DATE',\n    end_date: 'SET_END_DATE',\n    automation_status: 'SET_AUTOMATION_STATUS',\n    category: 'SET_CATEGORY',\n    frequency_period: 'SET_FREQUENCY',\n    name: 'SET_NAME',\n    only_root_workflows_and_standalone_jobs: 'SET_ROOT_WORKFLOWS_AND_JOBS',\n    inventory_id: 'SET_INVENTORY',\n  };\n\n  return {\n    queryParams,\n    dispatch,\n    setFromToolbar: (varName, value = null) => {\n      if (!varName) {\n        dispatch({ type: 'RESET_FILTER' });\n      } else {\n        dispatch({ type: actionMapper[varName], value: { [varName]: value } });\n      }\n    },\n    setFromPagination: (offset, limit = null) => {\n      dispatch({ type: 'SET_OFFSET', value: offset });\n      if (limit) {\n        dispatch({ type: 'SET_LIMIT', value: limit });\n      }\n    },\n    /* v0 api usage after this line */\n    setSeverity: (severity) =>\n      dispatch({ type: 'SET_SEVERITY', value: { severity } }),\n    setEndDate: () => {\n      const endDate = moment().format('YYYY-MM-DD');\n      dispatch({ type: 'SET_ENDDATE', value: endDate });\n    },\n    setId: (value) => dispatch({ type: 'SET_ID', value }),\n    setStartDate: (days) => {\n      let startDate;\n      if (days === 7) {\n        startDate = moment().subtract(1, 'week').format('YYYY-MM-DD');\n      }\n\n      if (days === 14) {\n        startDate = moment().subtract(2, 'weeks').format('YYYY-MM-DD');\n      }\n\n      if (days === 31) {\n        startDate = moment().subtract(1, 'month').format('YYYY-MM-DD');\n      } else {\n        startDate = moment().subtract(days, 'days').format('YYYY-MM-DD');\n      }\n\n      dispatch({ type: 'SET_STARTDATE', value: startDate });\n    },\n    setStartDateAsString: (value) => dispatch({ type: 'SET_STARTDATE', value }),\n  };\n};\n","import { Paths } from '../paths';\nimport { stringify } from 'query-string';\n\nconst useRedirect = (history, path) => (query) => {\n  const search = stringify(query, { arrayFormat: 'bracket' });\n  history.push({\n    pathname: Paths[path],\n    search,\n  });\n};\n\nexport default useRedirect;\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PFPagination } from '@patternfly/react-core';\nvar perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '15', value: 15 },\n    { title: '20', value: 20 },\n    { title: '25', value: 25 },\n];\n;\nvar Pagination = function (_a) {\n    var _b = _a.count, count = _b === void 0 ? 0 : _b, params = _a.params, setPagination = _a.setPagination, props = __rest(_a, [\"count\", \"params\", \"setPagination\"]);\n    var offset = params.offset, limit = params.limit;\n    var currentPage = Math.floor(offset / limit + 1);\n    var returnOffsetVal = function (page) { return (page - 1) * limit; };\n    return (React.createElement(PFPagination, __assign({ itemCount: count, widgetId: \"aa-pagination\", perPageOptions: perPageOptions, perPage: limit, page: currentPage, onPerPageSelect: function (_event, perPage, page) {\n            setPagination(returnOffsetVal(page), perPage);\n        }, onSetPage: function (_event, page) {\n            setPagination(returnOffsetVal(page));\n        } }, props)));\n};\nPagination.propTypes = {\n    count: PropTypes.number,\n    params: PropTypes.exact({\n        offset: PropTypes.number.isRequired,\n        limit: PropTypes.number.isRequired,\n    }).isRequired,\n    setPagination: PropTypes.func.isRequired,\n};\nexport default Pagination;\n","import Pagination from './Pagination';\nexport default Pagination;\n"],"sourceRoot":""}