{"version":3,"sources":["webpack:///./src/Api.js","webpack:///./src/Charts/BaseChart.js","webpack:///./src/Components/ApiErrorState.js","webpack:///./src/Components/Breadcrumbs.js","webpack:///./src/Components/EmptyState.js","webpack:///./src/Components/LoadingState.js","webpack:///./src/Components/NoData.js","webpack:///./src/Components/Toolbar/constants.js","webpack:///./src/Components/Toolbar/Groups/CategoryDropdown.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/Select.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/helpers.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/Date.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/Text.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/index.js","webpack:///./src/Components/Toolbar/Groups/FiltersCategoriesGroup.js","webpack:///./src/Components/Toolbar/Groups/QuickDateGroup.js","webpack:///./src/Components/Toolbar/Groups/SortByGroup.js","webpack:///./src/Components/Toolbar/Groups/SettingsPanel.js","webpack:///./src/Components/Toolbar/Toolbar.js","webpack:///./src/Components/Toolbar/index.js","webpack:///./src/Charts/ROITopTemplates.js","webpack:///./src/Containers/AutomationCalculator/CalculationCost.js","webpack:///./src/Containers/AutomationCalculator/TopTemplates.js","webpack:///./src/Containers/AutomationCalculator/AutomationCalculator.js","webpack:///./src/Containers/AutomationCalculator/AutomationFormula.js","webpack:///./src/Containers/AutomationCalculator/TotalSavings.js","webpack:///./src/Containers/AutomationCalculator/helpers.js","webpack:///./src/Utilities/Tooltip.js","webpack:///./src/Charts/BarChart.js","webpack:///./src/Charts/LineChart.js","webpack:///./src/Components/ModulesList.js","webpack:///./src/Components/ModalContents.js","webpack:///./src/Components/TemplatesList.js","webpack:///./src/Containers/Clusters/Clusters.js","webpack:///./src/Components/NoResults.js","webpack:///./src/Components/JobStatus.js","webpack:///./src/Components/JobExplorerList.js","webpack:///./src/Containers/JobExplorer/JobExplorer.js","webpack:///./src/Components/NotificationsList.js","webpack:///./src/Containers/Notifications/Notifications.js","webpack:///./src/Utilities/Legend.js","webpack:///./src/Charts/GroupedBarChart/GroupedBarChart.js","webpack:///./src/Charts/GroupedBarChart/OrgsTooltip.js","webpack:///./src/Charts/GroupedBarChart/HostsTooltip.js","webpack:///./src/Charts/PieChart.js","webpack:///./src/Containers/OrganizationStatistics/OrganizationStatistics.js","webpack:///./src/Utilities/colors.ts","webpack:///./src/Components/Popover.js","webpack:///./src/Containers/SavingsPlanner/Shared/Details.js","webpack:///./src/Containers/SavingsPlanner/Shared/Tasks.js","webpack:///./src/Containers/SavingsPlanner/Shared/Templates.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form.js","webpack:///./src/Utilities/useForm.js","webpack:///./src/Containers/SavingsPlanner/Add/index.js","webpack:///./src/Components/RoutedTabs.js","webpack:///./src/Containers/SavingsPlanner/DetailsTab.js","webpack:///./src/Containers/SavingsPlanner/StatisticsTab.tsx","webpack:///./src/Containers/SavingsPlanner/SavingsPlan.js","webpack:///./src/Containers/SavingsPlanner/PlanCard.js","webpack:///./src/Containers/SavingsPlanner/SavingsPlanner.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Utilities/useApi.js","webpack:///./src/Utilities/useQueryParams.js","webpack:///./src/Utilities/useRedirect.js","webpack:////home/travis/build/RedHatInsights/tower-analytics-frontend/node_modules/moment/locale|sync|/^\\.\\/.*$/","webpack:///./src/Components/Pagination/Pagination.tsx","webpack:///./src/Components/Pagination/index.ts"],"names":["plansEndpoint","handleResponse","response","json","then","ok","status","Promise","reject","message","error","authenticatedFetch","endpoint","options","window","insights","chrome","auth","getUser","fetch","preflightRequest","readJobExplorer","params","paginationParams","limit","offset","sort_by","qs","stringify","url","URL","location","origin","search","method","body","JSON","readEventExplorer","readROI","readHostExplorer","readPlans","createPlan","readPlan","readClustersOptions","readOrgOptions","readROIOptions","readPlanOptions","readClusters","readNotifications","Object","keys","forEach","key","searchParams","append","readJobExplorerOptions","initializeChart","Chart","BaseChart","props","id","margin","history","useHistory","getWidth","parseInt","d3","style","left","right","getHeight","top","bottom","propTypes","PropTypes","ApiErrorState","EmptyState","variant","EmptyStateVariant","EmptyStateIcon","icon","ExclamationCircleIcon","color","globalDangerColor200","Title","headingLevel","size","EmptyStateBody","Breadcrumbs","items","current","Breadcrumb","map","title","navigate","basePathNavigate","getBaseName","BreadcrumbItem","to","BreadcrumbHeading","defaultProps","DefaultEmptyState","preflightError","WrenchIcon","href","target","rel","Button","onClick","reload","CubesIcon","optionsForCategories","type","isSingle","name","placeholder","hasChips","quick_date_range","start_date","end_date","job_type","org_id","cluster_id","template_id","sort_options","automation_status","frequency_period","category","inventory_id","CategoryDropdown","selected","setSelected","categories","useState","isExpanded","setIsExpanded","ToolbarItem","Select","isOpen","aria-label","onToggle","onSelect","_event","selection","selections","placeholderText","SelectOption","value","OptionSpan","styled","renderValues","values","description","item","comparator","val","categoryKey","selectOptions","isVisible","setValue","expanded","setExpanded","ToolbarFilter","data-cy","showToolbarItem","chips","i","undefined","reduce","acc","Number","isInteger","cmpItem","push","handleCheckboxChips","categoryName","deleteChip","_","valueToDelete","keyToDelete","find","filteredArr","filter","SelectVariant","includes","hasInlineFilter","onFilter","textInput","toLowerCase","maxHeight","isRequired","Date","InputGroup","TextInput","onChange","Text","searchVal","setSearchVal","useEffect","components","select","date","text","ToolbarInput","SelectedInput","FilterCategoriesGroup","filterCategories","filters","setFilters","currentCategory","setCurrentCategory","ToolbarGroup","el","QuickDateGroup","e","SortByGroup","sort_order","SettingsPanel","settingsExpanded","setSettingsExpanded","Card","isFlat","backgroundColor","CardHeader","CardActions","CardTitle","CardBody","Switch","label","labelOff","isChecked","only_root_workflows_and_standalone_jobs","Tooltip","position","content","FilterableToolbar","pagination","hasSettings","additionalControls","restCategories","obj","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarContent","length","isActive","control","visibility","default","lg","d","savings","manualCost","automationCost","scrollLeftOffset","node","scrollLeft","x","svg","getBoundingClientRect","y","formatDollars","delta","automatedCost","toolTipWidth","toolTipBase","width","chartWidth","flipped","nameWidth","getComputedTextLength","savingsWidth","manualCostWidth","automationCostWidth","widestTextElem","adjustedWidth","maxTextPerc","boxWidth","overage","boundingBox","attr","toolTipPoint","interrupt","transition","delay","this","draw","amount","parseFloat","toFixed","toString","replace","slice","textWidthThreshold","TopTemplatesSavings","init","bind","resize","state","timeout","clearTimeout","setState","setTimeout","remove","data","ticks","height","rangeRound","padding","range","formatYAxisValue","xAxis","tickValues","yAxis","tickFormat","tickSize","taskNames","tooltip","domain","call","selectAll","bandwidth","enter","on","darker","handleMouseOver","handleMouseOut","addEventListener","removeEventListener","Component","InputAndText","validFloat","floatValue","CalculationCost","costManual","setCostManual","costAutomation","setCostAutomation","InputGroupText","paddingTop","TemplateDetail","TemplateDetailSubTitle","TooltipWrapper","IconGroup","QuestionIconTooltip","details","Popover","bodyContent","k","capitalize","split","join","TopTemplates","sortBy","setDataRunTime","setEnabled","redirectToJobExplorer","overflow","flex","className","component","convertSecondsToMins","avgRunTime","minutes","convertMinsToSeconds","successful_hosts_total","trimmed","sortAttribute","showSortAttr","enabled","deselectedIds","setDeselectedIds","Wrapper","WrapperLeft","WrapperRight","filterDisabled","updateDeltaCost","convertSecondsToHours","successful_elapsed_total","calculateDelta","AutomationCalculator","toJobExplorer","useRedirect","useApi","preflight","setPreflight","setOptions","api","fetchApi","setDataInApi","useQueryParams","roiConst","queryParams","setFromToolbar","NotAuthorized","notAuthorizedParams","PageHeader","PageHeaderTitle","Main","isSuccess","paddingBottom","isLoading","LoadingState","NoData","textAlign","AutomationFormula","paddingLeft","TotalSavings","totalSavings","sum","curr","display","flexDirection","templateId","seconds","updatedData","setUnfilteredData","borderTop","BorderedCardTitle","opts","success","fail","total","formatTooltipDate","RAN","FAIL","TOTAL","DATE","jobs","jobsWidth","failed","successful","successTextWidth","failTextWidth","circleSuccess","circleFail","failedIcon","successIcon","successText","failText","clickMore","colors","BarChart","formattedData","jobExplorer","Paths","formattedDate","formatDate","orgId","initialQueryParams","arrayFormat","pathname","parseTime","formatted","created_date","successful_count","failed_count","concat","barTooltip","layers","order","stack","maxTicks","Math","round","layer","_d","duration","ease","prevProps","LineChart","updateCluster","clusterId","path","attrTween","tweenDash","l","getTotalLength","t","unformattedData","successLine","curve","failLine","defined","isNaN","vertical","handleMouseMove","intersectX","cx","baseVal","DataListCell","PFDataListCell","DataListItem","PFDataListItem","DataCellEnd","ModulesList","modules","DataList","background","aria-labelledby","border","module","index","host_task_count","trimStr","marginRight","PFDataListItemNoBorder","DataListItemCompact","DataListCellCompact","DataListFocus","DataCellEndCompact","ModalContents","successCount","totalCount","elapsed","selectedId","handleModal","qp","jobType","handleCloseBtn","relatedJobs","setRelatedJobs","stats","setStats","relatedTemplateJobsParams","attributes","group_by_time","agreggateTemplateParams","group_by","Modal","onClose","actions","total_count","toISOString","substr","ceil","formatAvgRun","most_failed_tasks","percentage","total_failed_count","task_name","formatTopFailedTask","most_failed_steps","template_name","formatTopFailedStep","Label","job","cluster_name","formatDateTime","started","formatSeconds","TemplatesList","templates","setSelectedId","isModalOpen","setIsModalOpen","initialTopTemplateParams","initialTopWorkflowParams","initialModuleParams","setPreFlightError","clusters","chartData","setData","setTemplates","workflows","setWorkflows","setModules","initialOptionsParams","optionsQueryParams","topTemplatesParams","topWorkflowParams","topModuleParams","initializeWithPreflight","marginTop","SearchIcon","JobStatus","str","getColor","getIcon","charAt","toUpperCase","headerLabels","ExternalLinkIcon","PFExternalLinkIcon","DataListCellHeader","DataListItemCells","PFDataListItemCells","DataListToggle","PFDataListToggle","mobileBreakpoint","AllJobsTemplate","innerWidth","windowWidth","setWindowWidth","onResize","ariaLabel","ariaLabelledBy","count","DataListItemRow","aria-controls","newExpanded","idx","indexOf","dataListCells","tower_link","fontWeight","org_name","formatJobType","DataListContent","isHidden","created","finished","buildListRow","JobExplorerList","labels","isCompact","JobExplorer","meta","setFromPagination","dispatch","appNavClick","secondaryNav","initialSearchParams","parse","parseBooleans","parseNumbers","updateURL","Pagination","setPagination","PaginationVariant","ExternalLinkAltIcon","PFExternalLinkAltIcon","NotificationDrawerListItem","PFNotificationDrawerListItem","NotificationDrawerList","PFNotificationDrawerList","stringifyDate","day","moment","now","utc","isAfter","diff","isSame","valueOf","AllNotificationTemplate","notifications","notification_id","tower_url","NotificationDrawerListItemHeader","NotificationDrawerListItemBody","timestamp","ErrorNotificationTemplate","notification","NoticeNotificationTemplate","WarningNotificationTemplate","NotificationsList","filterBy","PFCardTitle","DropdownGroup","notificationOptions","disabled","formatClusterName","uuid","install_uuid","notificationsData","setNotificationsData","clusterOptions","setClusterOptions","selectedCluster","setSelectedCluster","firstRender","setFirstRender","setIsLoading","setMeta","setId","setSeverity","ignore","fetchEndpoints","all","p","clustersData","FormSelect","FormSelectOption","isDisabled","severity","NotificationDrawer","Container","LegendDetail","Color","SubTitle","Legend","chartName","some","pieces","GroupedBarChart","TooltipClass","legend","colorFunc","selectedIds","setSelectedIds","selectedOrgs","x0","x1","maxTicksOneMonth","maxTicksTwoMonths","dates","yLabel","exit","bars","merge","subEnter","OrgsTooltip","orgName","HostsTooltip","perc","percSuccess","drawn","percent","success_rate","maxLength","percentageTotal","percentageSuccess","boundingBOx","showSuccess","boundingHeight","boundingWidth","PieChart","sort","a","b","radius","min","filteredData","getTotal","donutTooltip","pie","arc","outerRadius","innerRadius","classed","CardContainer","TopCard","scaleOrdinal","pieChartMapper","attrName","chartMapper","rest","dateForJobExplorer","OrganizationStatistics","activeTabKey","setActiveTabKey","orgs","setOrgs","setJobs","tasks","setTasks","constants","jobEventsByOrgParams","include_others","jobRunsByOrgParams","jobsByDateAndOrgParams","hostAcrossOrgParams","readJobsOrHosts","Tabs","activeKey","tabIndex","Tab","eventKey","marginLeft","PopoverButton","header","maxWidth","headerContent","hideOnOutsideClick","aria-haspopup","preventDefault","noVerticalAlign","string","Details","formData","setField","manual_time","hosts","categoryIsOpen","setCategoryIsOpen","manualTimeIsOpen","setManualTimeIsOpen","frequencyPeriodIsOpen","setFrequencyPeriodIsOpen","Form","Grid","hasGutter","md","FormGroup","fieldId","newName","newDescription","labelIcon","newHosts","TaskSection","TaskTitle","TaskDeleteButton","DeleteTaskActionSection","DataListAction","TaskRow","Tasks","taskToAdd","setTaskToAdd","liveText","setLiveText","appendTask","newTaskName","onKeyDown","onDragFinish","newItemOrder","onDragStart","newId","onDragMove","oldIndex","newIndex","onDragCancel","itemOrder","task","DataListControl","DataListDragButton","aria-describedby","aria-pressed","removeTask","aria-live","TemplateRow","Templates","Radio","hash","useLocation","startStep","setStartStep","steps","step","step_number","initial","useReducer","Error","field","useForm","onStepChange","newStep","nextButtonText","Redirect","Wizard","navAriaLabel","mainAriaLabel","onGoToStep","onNext","onBack","onSave","task_order","hourly_rate","frequency_per_period","startAtStep","RoutedTabs","tabsArray","defaultTabId","tab","link","getActiveTabId","match","TabTitleText","role","arrayOf","shape","number","oneOfType","DetailsTab","plans","modified","template_details","labelsAndValues","Name","Description","Frequency","Template","showTemplate","DescriptionList","isHorizontal","columnModifier","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","Divider","TextContent","List","ListItem","__makeTemplateObject","cooked","raw","defineProperty","__assign","assign","s","n","arguments","prototype","hasOwnProperty","apply","templateObject_1","templateObject_2","templateObject_3","templateObject_4","LegendGroup","templateObject_5","LegendIcon","templateObject_6","LegendDescription","templateObject_7","StatisticsTab","_a","types","_b","chartType","setChartType","barChartData","charts","kind","parent","domainPadding","themeColor","cursor","grid","stroke","barRatio","barWidth","fill","strokeWidth","functions","fetchFnc","resolve","year","total_costs","projections","monetary_stats","total_benefits","cumulative_net_benefits","total_hours_spent_risk_adjusted","time_stats","total_hours_saved","cumulative_time_net_benefits","response_type","getChartData","ToggleGroup","ToggleGroupItem","buttonId","isSelected","toggleButton","year3","useParams","pageTitle","showCardHeader","endsWith","breadcrumbUrl","breadcrumbsItems","Route","exact","SavingsPlanner","CardLabel","PlanCard","template","isCardKebabOpen","setIsCardKebabOpen","useRouteMatch","kebabDropDownItems","DropdownItem","isHoverable","CardHeaderMain","Link","Dropdown","toggle","KebabToggle","isPlain","dropdownItems","Checkbox","CardFooter","savingsPlanner","combinedOptions","Gallery","datum","isSticky","defaultParams","roi","organizationStatistics","isNumeric","dateTime","format","startOf","mins","dataFetchReducer","action","payload","initialData","postprocess","request","setRequest","didCancel","initialWithCalculatedParams","startDate","endDate","newState","newValues","entries","actionMapper","varName","setEndDate","setStartDate","days","subtract","setStartDateAsString","query","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","exports","perPageOptions","getOwnPropertySymbols","propertyIsEnumerable","__rest","currentPage","floor","returnOffsetVal","page","itemCount","widgetId","perPage","onPerPageSelect","onSetPage"],"mappings":"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","file":"js/automation_analytics.ad68d4f9b7702045f060.js","sourcesContent":["import { stringify } from 'query-string';\n/* v0 endpoints */\nconst clustersEndpoint = `/api/tower-analytics/v0/clusters/`;\nconst notificationsEndpoint = `/api/tower-analytics/v0/notifications/`;\nconst preflightEndpoint = `/api/tower-analytics/v0/authorized/`;\n\n/* v1 endpoints */\nconst jobExplorerEndpoint = '/api/tower-analytics/v1/job_explorer/';\nconst hostExplorerEndpoint = '/api/tower-analytics/v1/host_explorer/';\nconst eventExplorerEndpoint = '/api/tower-analytics/v1/event_explorer/';\nconst ROIEndpoint = '/api/tower-analytics/v1/roi_templates/';\nconst plansEndpoint = '/api/tower-analytics/v1/plans/';\nconst planEndpoint = '/api/tower-analytics/v1/plan/';\n\n/* page options endpoints */\nconst jobExplorerOptionsEndpoint =\n  '/api/tower-analytics/v1/job_explorer_options/';\nconst ROITemplatesOptionsEndpoint =\n  '/api/tower-analytics/v1/roi_templates_options/';\nconst orgOptionsEndpoint =\n  '/api/tower-analytics/v1/dashboard_organization_statistics_options/';\nconst clustersOptionsEndpoint =\n  '/api/tower-analytics/v1/dashboard_clusters_options/';\nconst planOptionsEndpoint = '/api/tower-analytics/v1/plan_options/';\n\nfunction handleResponse(response) {\n  return response.json().then((json) => {\n    if (response.ok) {\n      return json;\n    }\n\n    if (response.status === 404 || response.status === 401) {\n      return Promise.reject({\n        status: response.status,\n        message: json,\n      });\n    } else if (response.status === 403) {\n      return Promise.reject({\n        status: response.status,\n        error: 'RBAC access denied',\n      });\n    } else {\n      return Promise.reject(json);\n    }\n  });\n}\n\nfunction authenticatedFetch(endpoint, options) {\n  return window.insights.chrome.auth\n    .getUser()\n    .then(() => fetch(endpoint, options));\n}\n\nexport const preflightRequest = () => {\n  return authenticatedFetch(preflightEndpoint).then(handleResponse);\n};\n\nexport const readJobExplorer = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(jobExplorerEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readEventExplorer = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(eventExplorerEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readROI = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(ROIEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readHostExplorer = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(hostExplorerEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readPlans = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(plansEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const createPlan = ({ params = {} }) => {\n  let url = new URL(planEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readPlan = ({ params = {} }) => {\n  let url = new URL(plansEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readClustersOptions = ({ params = {} }) => {\n  let url = new URL(clustersOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readOrgOptions = ({ params = {} }) => {\n  let url = new URL(orgOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readROIOptions = ({ params = {} }) => {\n  let url = new URL(ROITemplatesOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readPlanOptions = () => {\n  let url = new URL(planOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'GET',\n  }).then(handleResponse);\n};\n\n// v0 endpoints used in Notifications.js\nexport const readClusters = () => {\n  return authenticatedFetch(clustersEndpoint).then(handleResponse);\n};\n\nexport const readNotifications = ({ params = {} }) => {\n  let url = new URL(notificationsEndpoint, window.location.origin);\n  Object.keys(params).forEach((key) =>\n    url.searchParams.append(key, params[key])\n  );\n  return authenticatedFetch(url).then(handleResponse);\n};\n\nexport const readJobExplorerOptions = ({ params = {} }) => {\n  let url = new URL(jobExplorerOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nconst initializeChart = (Chart) => {\n  const BaseChart = (props) => {\n    const { id, margin } = props;\n\n    const getWidth = () => {\n      let width;\n      width =\n        parseInt(d3.select('#' + id).style('width')) -\n          margin.left -\n          margin.right || 700;\n      return width;\n    };\n\n    const getHeight = () => {\n      let height;\n      height =\n        parseInt(d3.select('#' + id).style('height')) -\n          margin.top -\n          margin.bottom || 450;\n      return height;\n    };\n\n    let history = useHistory();\n\n    return <Chart {...props} getWidth={getWidth} getHeight={getHeight} history={history} />;\n  };\n\n  BaseChart.propTypes = {\n    id: PropTypes.string,\n    margin: PropTypes.object,\n  };\n\n  return BaseChart;\n};\n\ninitializeChart.propTypes = {\n  Chart: PropTypes.element,\n};\n\nexport default initializeChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { global_danger_color_200 as globalDangerColor200 } from '@patternfly/react-tokens';\n\nconst ApiErrorState = ({ message }) => (\n  <EmptyState variant={EmptyStateVariant.small}>\n    <EmptyStateIcon\n      icon={ExclamationCircleIcon}\n      color={globalDangerColor200.value}\n    />\n    <Title headingLevel=\"h2\" size=\"lg\">\n      Error\n    </Title>\n    <EmptyStateBody>{message}</EmptyStateBody>\n  </EmptyState>\n);\n\nApiErrorState.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default ApiErrorState;\n","/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Breadcrumb, BreadcrumbItem, BreadcrumbHeading } from '@patternfly/react-core';\n\nimport getBaseName from '../Utilities/getBaseName';\n\nconst Breadcrumbs = ({items, current}) => {\n    return (\n        <Breadcrumb>\n            {items.map(({title, navigate}) => {\n                const basePathNavigate = getBaseName() + navigate;\n                return (<BreadcrumbItem key={title} to={basePathNavigate}>{title}</BreadcrumbItem>);\n            })}\n            {current && (<BreadcrumbHeading>{current}</BreadcrumbHeading>)}\n        </Breadcrumb>\n    );\n};\n\nBreadcrumbs.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n      navigate: PropTypes.any,\n      title: PropTypes.node\n  })),\n  current: PropTypes.node,\n};\n\nBreadcrumbs.defaultProps = {\n  items: [],\n  current: null,\n};\n\nexport default Breadcrumbs;\n","/*eslint max-len: [\"error\", { \"ignoreStrings\": true }]*/\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { WrenchIcon } from '@patternfly/react-icons';\n\nconst DefaultEmptyState = ({ preflightError: error }) => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={WrenchIcon} />\n    {error.status === 404 && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          No data found\n        </Title>\n        <EmptyStateBody>\n          Please visit{' '}\n          <a\n            href=\"https://docs.ansible.com/ansible-tower/latest/html/administration/usability_data_collection.html#automation-analytics\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            here\n          </a>{' '}\n          to learn how to enable Automation Analytics.\n        </EmptyStateBody>\n      </>\n    )}\n    {error.status === 401 && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          Not authorized\n        </Title>\n        <EmptyStateBody>\n          You do not have the correct permissions to view this page.\n        </EmptyStateBody>\n      </>\n    )}\n    {!error.status && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          Something went wrong, please try reloading the page\n        </Title>\n        <Button variant=\"primary\" onClick={() => window.location.reload()}>\n          Reload\n        </Button>\n      </>\n    )}\n  </EmptyState>\n);\n\nDefaultEmptyState.propTypes = {\n  preflightError: PropTypes.object,\n};\n\nexport default DefaultEmptyState;\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst DefaultLoadingState = () => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={CubesIcon} />\n    <Title headingLevel=\"h5\" size=\"lg\">\n      Loading...\n    </Title>\n    <EmptyStateBody>Please wait.</EmptyStateBody>\n  </EmptyState>\n);\n\nexport default DefaultLoadingState;\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst NoData = () => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={CubesIcon} />\n    <Title headingLevel=\"h5\" size=\"lg\">\n      No Data\n    </Title>\n  </EmptyState>\n);\n\nexport default NoData;\n","export const optionsForCategories = {\n  status: {\n    type: 'select',\n    isSingle: false,\n    name: 'Status',\n    placeholder: 'Filter by job status',\n    hasChips: true,\n  },\n  quick_date_range: {\n    type: 'select',\n    isSingle: true,\n    name: 'Date',\n    placeholder: 'Filter by date',\n    hasChips: false,\n  },\n  start_date: {\n    type: 'date',\n    name: 'Start date',\n    hasChips: false,\n  },\n  end_date: {\n    type: 'date',\n    name: 'End date',\n    hasChips: false,\n  },\n  job_type: {\n    type: 'select',\n    isSingle: false,\n    name: 'Job',\n    placeholder: 'Filter by job type',\n    hasChips: true,\n  },\n  org_id: {\n    type: 'select',\n    isSingle: false,\n    name: 'Organization',\n    placeholder: 'Filter by organization',\n    hasChips: true,\n  },\n  cluster_id: {\n    type: 'select',\n    isSingle: false,\n    name: 'Cluster',\n    placeholder: 'Filter by cluster',\n    hasChips: true,\n  },\n  template_id: {\n    type: 'select',\n    isSingle: false,\n    name: 'Template',\n    placeholder: 'Filter by template',\n    hasChips: true,\n  },\n  sort_options: {\n    type: 'select',\n    isSingle: true,\n    name: 'Sort by',\n    placeholder: 'Sort by attribute',\n    hasChips: false,\n  },\n  automation_status: {\n    type: 'select',\n    isSingle: false,\n    name: 'Automation status',\n    placeholder: 'Filter by automation status',\n    hasChips: true,\n  },\n  frequency_period: {\n    type: 'select',\n    isSingle: false,\n    name: 'Frequency',\n    placeholder: 'Filter by frequency',\n    hasChips: true,\n  },\n  category: {\n    type: 'select',\n    isSingle: false,\n    name: 'Category',\n    placeholder: 'Filter by category',\n    hasChips: true,\n  },\n  inventory_id: {\n    type: 'select',\n    isSingle: false,\n    name: 'Inventory',\n    placeholder: 'Filter by inventory',\n    hasChips: true,\n  },\n  name: {\n    type: 'text',\n    name: 'Search by name',\n    hasChips: true,\n  },\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarItem, Select, SelectOption } from '@patternfly/react-core';\n\nconst CategoryDropdown = ({\n  selected,\n  setSelected = () => {},\n  categories = [],\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <ToolbarItem>\n      <Select\n        isOpen={isExpanded}\n        variant={'single'}\n        aria-label={'Categories'}\n        onToggle={() => setIsExpanded(!isExpanded)}\n        onSelect={(_event, selection) => {\n          setSelected(selection);\n          setIsExpanded(false);\n        }}\n        selections={selected}\n        placeholderText={'Filter by'}\n      >\n        {categories.map(({ key, name }) => (\n          <SelectOption key={key} value={key}>\n            {name}\n          </SelectOption>\n        ))}\n      </Select>\n    </ToolbarItem>\n  );\n};\n\nCategoryDropdown.propTypes = {\n  categories: PropTypes.array,\n  selected: PropTypes.string,\n  setSelected: PropTypes.func,\n};\n\nexport default CategoryDropdown;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ToolbarFilter,\n  Select as PFSelect,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\n\nimport { handleCheckboxChips, handleSingleChips } from './helpers';\nimport { optionsForCategories } from '../../constants';\nimport styled from 'styled-components';\n\nconst OptionSpan = styled('span')`\n  display: block;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n  max-width: 300px;\n`;\n\nconst renderValues = (values) =>\n  values &&\n  values.map(({ key, value, description }) => (\n    <SelectOption key={key} value={key} description={description}>\n      <OptionSpan>{value}</OptionSpan>\n    </SelectOption>\n  ));\n\nconst Select = ({\n  categoryKey,\n  value,\n  selectOptions,\n  isVisible = true,\n  setValue,\n}) => {\n  const [expanded, setExpanded] = useState(false);\n  const options = optionsForCategories[categoryKey];\n\n  const onDelete = (_, valueToDelete) => {\n    const single = optionsForCategories[categoryKey].isSingle;\n\n    if (single) {\n      setValue(null);\n    } else {\n      const keyToDelete = selectOptions.find(\n        ({ value }) => value === valueToDelete\n      ).key;\n      const filteredArr = value.filter((value) => value !== keyToDelete);\n      setValue(filteredArr);\n    }\n  };\n\n  const onFilter = (_, textInput) => {\n    if (textInput === '') {\n      return renderValues(selectOptions);\n    } else {\n      return renderValues(\n        selectOptions.filter(({ value }) =>\n          value.toLowerCase().includes(textInput.toLowerCase())\n        )\n      );\n    }\n  };\n\n  const handleChips = () => {\n    if (options.isSingle) {\n      return handleSingleChips(value, selectOptions);\n    } else {\n      return handleCheckboxChips(value, selectOptions);\n    }\n  };\n\n  const onSelect = (_, selection) => {\n    if (options.isSingle) {\n      setValue(selection);\n      setExpanded(false);\n    } else {\n      setValue(\n        !value.includes(selection)\n          ? [...value, selection]\n          : value.filter((value) => value !== selection)\n      );\n    }\n  };\n\n  return (\n    <ToolbarFilter\n      data-cy={categoryKey}\n      key={categoryKey}\n      showToolbarItem={isVisible}\n      chips={options.hasChips ? handleChips() : []}\n      categoryName={options.name}\n      deleteChip={options.hasChips ? onDelete : null}\n    >\n      <PFSelect\n        variant={\n          options.isSingle ? SelectVariant.single : SelectVariant.checkbox\n        }\n        aria-label={options.name}\n        onToggle={() => setExpanded(!expanded)}\n        onSelect={onSelect}\n        selections={value}\n        isOpen={expanded}\n        hasInlineFilter\n        placeholderText={options.placeholder}\n        onFilter={onFilter}\n        maxHeight={'1000%'}\n      >\n        {renderValues(selectOptions)}\n      </PFSelect>\n    </ToolbarFilter>\n  );\n};\n\nSelect.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]).isRequired,\n  selectOptions: PropTypes.array,\n  isVisible: PropTypes.bool,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default Select;\n","/**\n * Get comparator values if their key is in the item list\n */\nexport const handleCheckboxChips = (item, comparator) => {\n  if (item && comparator) {\n    return item.reduce((acc, i) => {\n      Number.isInteger(parseInt(i)) ? (i = parseInt(i)) : i;\n\n      comparator.forEach((cmpItem) => {\n        if (cmpItem.key === i) {\n          acc.push(cmpItem.value);\n        }\n      });\n\n      return acc;\n    }, []);\n  }\n\n  return [];\n};\n\n/**\n * Convert a list of objects to a list of the last value if defined\n */\nexport const handleSingleChips = (item, comparator) => {\n  if (item && typeof item === 'string' && comparator) {\n    let val;\n    comparator.forEach((i) => {\n      if (i.key === item) {\n        val = i.value;\n      }\n    });\n\n    if (val !== undefined) {\n      return [val];\n    }\n  }\n\n  return [];\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, TextInput } from '@patternfly/react-core';\nimport { optionsForCategories } from '../../constants';\n\nconst Date = ({ categoryKey, value = '', setValue = () => {} }) => {\n  const options = optionsForCategories[categoryKey];\n\n  return (\n    <InputGroup>\n      <TextInput\n        type=\"date\"\n        aria-label={options.name}\n        value={value}\n        onChange={setValue}\n      />\n    </InputGroup>\n  );\n};\n\nDate.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default Date;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ToolbarFilter,\n  TextInput,\n  InputGroup,\n  Button,\n} from '@patternfly/react-core';\n\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { optionsForCategories } from '../../constants';\n\nconst Text = ({ categoryKey, isVisible = true, value = '', setValue }) => {\n  const [searchVal, setSearchVal] = useState(value);\n  const options = optionsForCategories[categoryKey];\n\n  const onDelete = () => {\n    setValue('');\n  };\n\n  const handleChips = () => {\n    return value ? [value] : [];\n  };\n\n  useEffect(() => {\n    setSearchVal(value);\n  }, [value]);\n\n  return (\n    <ToolbarFilter\n      data-cy={categoryKey}\n      key={categoryKey}\n      showToolbarItem={isVisible}\n      chips={options.hasChips ? handleChips() : []}\n      categoryName={options.name}\n      deleteChip={options.hasChips ? onDelete : null}\n    >\n      <InputGroup>\n        <TextInput\n          type=\"search\"\n          aria-label={options.name}\n          value={searchVal}\n          onChange={setSearchVal}\n        />\n        <Button\n          variant=\"control\"\n          aria-label={`Search button for ${options.name}`}\n          onClick={() => {\n            setValue(searchVal);\n          }}\n        >\n          <SearchIcon />\n        </Button>\n      </InputGroup>\n    </ToolbarFilter>\n  );\n};\n\nText.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.any,\n  isVisible: PropTypes.bool,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default Text;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Select from './Select';\nimport Date from './Date';\nimport Text from './Text';\nimport { optionsForCategories } from '../../constants';\n\nconst components = {\n  select: Select,\n  date: Date,\n  text: Text,\n};\n\nconst ToolbarInput = ({\n  categoryKey,\n  value,\n  selectOptions,\n  isVisible = true,\n  setValue,\n}) => {\n  const options = optionsForCategories[categoryKey];\n  const SelectedInput = components[options.type];\n\n  const defaultValue = () => {\n    if (value) {\n      return value;\n    } else if (options.type !== 'select') {\n      return '';\n    } else if (options.isSingle) {\n      return '';\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <SelectedInput\n      categoryKey={categoryKey}\n      value={defaultValue()}\n      selectOptions={selectOptions}\n      isVisible={isVisible}\n      setValue={setValue}\n    />\n  );\n};\n\nToolbarInput.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(PropTypes.string),\n  ]),\n  selectOptions: PropTypes.array,\n  isVisible: PropTypes.bool,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default ToolbarInput;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarGroup } from '@patternfly/react-core';\n\nimport CategoryDropdown from './CategoryDropdown';\nimport ToolbarInput from './ToolbarInput/';\nimport { optionsForCategories } from '../constants';\n\nconst FilterCategoriesGroup = ({ filterCategories, filters, setFilters }) => {\n  const [currentCategory, setCurrentCategory] = useState(\n    Object.keys(filterCategories)[0]\n  );\n\n  return (\n    <ToolbarGroup variant=\"filter-group\">\n      <CategoryDropdown\n        selected={currentCategory}\n        setSelected={setCurrentCategory}\n        categories={Object.keys(filterCategories).map((el) => ({\n          key: el,\n          name: optionsForCategories[el].name,\n        }))}\n      />\n      {Object.keys(filterCategories).map((key) => (\n        <ToolbarInput\n          key={key}\n          categoryKey={key}\n          value={filters[key]}\n          selectOptions={filterCategories[key]}\n          isVisible={currentCategory === key}\n          setValue={(value) => setFilters(key, value)}\n        />\n      ))}\n    </ToolbarGroup>\n  );\n};\n\nFilterCategoriesGroup.propTypes = {\n  filterCategories: PropTypes.object.isRequired,\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n};\n\nexport default FilterCategoriesGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarGroup } from '@patternfly/react-core';\n\nimport ToolbarInput from './ToolbarInput/';\n\nconst QuickDateGroup = ({ filters, setFilters, values }) => (\n  <ToolbarGroup variant=\"filter-group\">\n    <ToolbarInput\n      categoryKey=\"quick_date_range\"\n      value={filters.quick_date_range}\n      selectOptions={values}\n      setValue={(value) => setFilters('quick_date_range', value)}\n    />\n    {filters.quick_date_range && filters.quick_date_range.includes('custom') && (\n      <>\n        <ToolbarInput\n          categoryKey=\"start_date\"\n          value={filters.start_date}\n          setValue={(e) => setFilters('start_date', e)}\n        />\n        <ToolbarInput\n          categoryKey=\"end_date\"\n          value={filters.end_date}\n          setValue={(e) => setFilters('end_date', e)}\n        />\n      </>\n    )}\n  </ToolbarGroup>\n);\n\nQuickDateGroup.propTypes = {\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  values: PropTypes.array.isRequired,\n};\n\nexport default QuickDateGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarGroup, Button } from '@patternfly/react-core';\nimport { SortAmountDownIcon, SortAmountUpIcon } from '@patternfly/react-icons';\n\nimport ToolbarInput from './ToolbarInput';\n\nconst SortByGroup = ({ filters, setFilters, sort_options }) => (\n  <ToolbarGroup variant=\"filter-group\">\n    <ToolbarInput\n      categoryKey=\"sort_options\"\n      value={filters.sort_options}\n      selectOptions={sort_options}\n      setValue={(value) => setFilters('sort_options', value)}\n    />\n    <Button\n      variant=\"control\"\n      onClick={() =>\n        setFilters('sort_order', filters.sort_order === 'asc' ? 'desc' : 'asc')\n      }\n    >\n      {filters.sort_order === 'asc' && <SortAmountUpIcon />}\n      {filters.sort_order === 'desc' && <SortAmountDownIcon />}\n    </Button>\n  </ToolbarGroup>\n);\n\nSortByGroup.propTypes = {\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  sort_options: PropTypes.array.isRequired,\n};\n\nexport default SortByGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, Switch } from '@patternfly/react-core';\nimport {\n  Card,\n  CardTitle,\n  CardBody,\n  CardActions,\n  CardHeader,\n} from '@patternfly/react-core';\nimport { QuestionCircleIcon, TimesIcon } from '@patternfly/react-icons';\n\n/* TODO: For future work: make settings more modular for different pages */\nconst SettingsPanel = ({\n  filters,\n  setFilters,\n  settingsExpanded,\n  setSettingsExpanded,\n}) => (\n  <Card isFlat style={{ backgroundColor: '#EEEEEE' }}>\n    <CardHeader>\n      <CardActions>\n        <Button\n          variant=\"plain\"\n          onClick={() => setSettingsExpanded(!settingsExpanded)}\n        >\n          <TimesIcon />\n        </Button>\n      </CardActions>\n      <CardTitle>Settings</CardTitle>\n    </CardHeader>\n    <CardBody>\n      <Switch\n        id=\"showRootWorkflowJobs\"\n        label=\"Ignore nested workflows and jobs\"\n        labelOff=\"Ignore nested workflows and jobs\"\n        isChecked={filters.only_root_workflows_and_standalone_jobs}\n        onChange={(val) => {\n          setFilters('only_root_workflows_and_standalone_jobs', val);\n        }}\n      />\n      <Tooltip\n        position={'top'}\n        content={\n          <div>\n            {' '}\n            If enabled, nested workflows and jobs will not be included in the\n            overall totals. Enable this option to filter out duplicate entries.\n          </div>\n        }\n      >\n        <QuestionCircleIcon />\n      </Tooltip>\n    </CardBody>\n  </Card>\n);\n\nSettingsPanel.propTypes = {\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  settingsExpanded: PropTypes.bool.isRequired,\n  setSettingsExpanded: PropTypes.func.isRequired,\n};\n\nexport default SettingsPanel;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  Button,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { FilterIcon, CogIcon } from '@patternfly/react-icons';\n\nimport { optionsForCategories } from './constants';\nimport {\n  FilterCategoriesGroup,\n  QuickDateGroup,\n  SortByGroup,\n  SettingsPanel,\n} from './Groups/';\n\nconst FilterableToolbar = ({\n  categories,\n  filters,\n  setFilters,\n  pagination = null,\n  hasSettings = false,\n  additionalControls = [],\n}) => {\n  const [settingsExpanded, setSettingsExpanded] = useState(false);\n  const { quick_date_range, sort_options, ...restCategories } = categories;\n\n  // Filter out elements which are not in the option object.\n  const filterCategories = Object.keys(restCategories)\n    .filter((key) => Object.keys(optionsForCategories).includes(key))\n    .reduce((obj, key) => {\n      obj[key] = restCategories[key];\n      return obj;\n    }, {});\n\n  return (\n    <>\n      <Toolbar\n        id=\"filterable-toolbar-with-chip-groups\"\n        clearAllFilters={() => {\n          setFilters(null, null);\n        }}\n        collapseListedFiltersBreakpoint=\"xl\"\n      >\n        <ToolbarContent>\n          <Button variant=\"control\">\n            <FilterIcon />\n          </Button>\n          {Object.keys(filterCategories).length > 0 && (\n            <FilterCategoriesGroup\n              filterCategories={filterCategories}\n              filters={filters}\n              setFilters={setFilters}\n            />\n          )}\n          {quick_date_range && (\n            <QuickDateGroup\n              filters={filters}\n              setFilters={setFilters}\n              values={quick_date_range}\n            />\n          )}\n          {sort_options && (\n            <SortByGroup\n              filters={filters}\n              setFilters={setFilters}\n              sort_options={sort_options}\n            />\n          )}\n          {hasSettings && (\n            <ToolbarItem>\n              <Button\n                variant=\"plain\"\n                onClick={() => setSettingsExpanded(!settingsExpanded)}\n                aria-label=\"settings\"\n                isActive={settingsExpanded}\n              >\n                <CogIcon />\n              </Button>\n            </ToolbarItem>\n          )}\n          {additionalControls.length > 0 && (\n            <ToolbarGroup>\n              {additionalControls.map((control) => (\n                <ToolbarItem key={control.key}>{control}</ToolbarItem>\n              ))}\n            </ToolbarGroup>\n          )}\n          {pagination && (\n            <ToolbarItem\n              variant=\"pagination\"\n              visibility={{ default: 'hidden', lg: 'visible' }}\n            >\n              {pagination}\n            </ToolbarItem>\n          )}\n        </ToolbarContent>\n        {settingsExpanded && (\n          <SettingsPanel\n            filters={filters}\n            setFilters={setFilters}\n            settingsExpanded={settingsExpanded}\n            setSettingsExpanded={setSettingsExpanded}\n          />\n        )}\n      </Toolbar>\n    </>\n  );\n};\n\nFilterableToolbar.propTypes = {\n  categories: PropTypes.object.isRequired,\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  pagination: PropTypes.object,\n  hasSettings: PropTypes.bool,\n  additionalControls: PropTypes.array,\n};\n\nexport default FilterableToolbar;\n","import Toolbar from './Toolbar';\nexport default Toolbar;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\n\nclass Tooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  formatDollars(amount) {\n    return parseFloat(amount)\n      .toFixed(2)\n      .toString()\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip-base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, 0) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', 92)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.name = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', -2)\n      .text('Template name');\n    this.savings = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 52)\n      .attr('font-size', 12)\n      .attr('font-weight', 'bold')\n      .attr('fill', 'white')\n      .text('Total savings $0');\n    this.manualCost = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', 16)\n      .text('Manual cost $0');\n    this.automationCost = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', 34)\n      .text('Automation cost $0');\n  }\n\n  handleMouseOver = (d) => {\n    let name;\n    let savings;\n    let manualCost;\n    let automationCost;\n    const scrollLeftOffset = d3.select('#d3-roi-chart-root').node().scrollLeft;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10 +\n      scrollLeftOffset;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      30;\n    if (!d) {\n      return;\n    } else {\n      savings = this.formatDollars(d.delta);\n      name = d.name;\n      manualCost = this.formatDollars(d.manualCost);\n      automationCost = this.formatDollars(d.automatedCost);\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n    this.name.text('' + name);\n    this.savings.text('Total savings $' + savings);\n    this.manualCost.text('Manual Cost $' + manualCost);\n    this.automationCost.text('Automation Cost $' + automationCost);\n    this.nameWidth = this.name.node().getComputedTextLength();\n    this.savingsWidth = this.savings.node().getComputedTextLength();\n    this.manualCostWidth = this.manualCost.node().getComputedTextLength();\n    this.automationCostWidth = this.automationCost\n      .node()\n      .getComputedTextLength();\n    this.widestTextElem = d3.max([\n      this.nameWidth,\n      this.savingsWidth,\n      this.automationCostWidth,\n      this.manualCostWidth,\n    ]);\n\n    const maxTextPerc = (this.widestTextElem / this.boxWidth) * 100;\n    const threshold = 85;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 15) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.name.attr('x', -(toolTipWidth - 7));\n      this.savings.attr('x', -(toolTipWidth - 7));\n      this.manualCost.attr('x', -(toolTipWidth - 7));\n      this.automationCost.attr('x', -(toolTipWidth - 7));\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 15) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.name.attr('x', 20);\n      this.savings.attr('x', 20);\n      this.manualCost.attr('x', 20);\n      this.automationCost.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass TopTemplatesSavings extends Component {\n  constructor(props) {\n    super(props);\n    this.init = this.init.bind(this);\n    this.draw = this.draw.bind(this);\n    this.resize = this.resize.bind(this);\n    this.state = {\n      timeout: null,\n    };\n  }\n\n  // Methods\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  init() {\n    this.draw();\n  }\n\n  draw() {\n    // Use PF chart color\n    const color = '#0066CC'; //blue\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const { data } = this.props;\n    let width;\n    // adjust chart width to support larger datasets\n    if (data.length >= 15) {\n      const containerWidth = d3.select('.automation-wrapper').node();\n      width =\n        containerWidth.getBoundingClientRect().width -\n        this.props.margin.left -\n        this.props.margin.right;\n    } else {\n      width = this.props.getWidth();\n    }\n\n    const height = this.props.getHeight();\n    const x = d3.scaleBand().rangeRound([0, width]).padding(0.45);\n    const y = d3.scaleLinear().range([height, 0]);\n    // format our X Axis ticks\n    let ticks;\n    ticks = data.map((d) => d.name);\n    const formatYAxisValue = d3.format('.2s');\n    const xAxis = d3.axisBottom(x).tickValues(ticks);\n\n    const yAxis = d3\n      .axisLeft(y)\n      .ticks(8)\n      .tickFormat((d) => formatYAxisValue(d).replace('G', 'B'))\n      .tickSize(-width, 0, 0);\n\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n\n    const taskNames = data.map((d) => d.name);\n    const tooltip = new Tooltip({\n      svg: '#' + this.props.id,\n    });\n    x.domain(taskNames);\n    y.domain([0, d3.max(data, (d) => d.delta * 1.15) || 8]);\n\n    // add y axis\n    svg\n      .append('g')\n      .attr('class', 'y axis')\n      .call(yAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7')\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 6)\n      .attr('dy', '.71em')\n      .style('text-anchor', 'end')\n      .style('font-weight', 'bold')\n      .text('Value');\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Savings per template ($)');\n\n    // add x axis\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n      .selectAll('text')\n      .style('text-anchor', 'start')\n      .attr('dx', '0.75em')\n      .attr('dy', -x.bandwidth() / 1.45 - 8)\n      .attr('transform', 'rotate(-90)');\n\n    svg.selectAll('.x-axis line').attr('stroke', 'transparent');\n\n    svg\n      .selectAll('.bar')\n      .data(data)\n      .enter()\n      .append('rect')\n      .attr('x', (d) => x(d.name))\n      .attr('width', x.bandwidth())\n      .attr('y', (d) => y(d.delta))\n      .style('fill', () => color)\n      .attr('height', (d) => height - y(d.delta))\n      .on('mouseover', function (d) {\n        d3.select(this).style('fill', d3.rgb(color).darker(1));\n        tooltip.handleMouseOver(d);\n      })\n      .on('mousemove', tooltip.handleMouseOver)\n      .on('mouseout', function () {\n        d3.select(this).style('fill', color);\n        tooltip.handleMouseOut();\n      });\n  }\n\n  componentDidMount() {\n    this.init();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate() {\n    this.init();\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nTopTemplatesSavings.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n};\n\nexport default initializeChart(TopTemplatesSavings);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Card,\n  CardBody,\n  InputGroup,\n  InputGroupText,\n  TextInput,\n} from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst validFloat = (value) => {\n  const floatValue = parseFloat(value);\n  return floatValue && floatValue >= 0 ? value : '';\n};\n\nconst CalculationCost = ({\n  costManual = '0',\n  setCostManual = () => {},\n  costAutomation = '0',\n  setCostAutomation = () => {},\n}) => (\n  <Card>\n    <CardTitle>Calculate your automation</CardTitle>\n    <CardBody>\n      <InputAndText>\n        <p>Manual cost of automation</p>\n        <em style={{ color: 'var(--pf-global--Color--dark-200)' }}>\n          (e.g. average salary of mid-level Software Engineer)\n        </em>\n        <InputGroup style={{ width: '50%' }}>\n          <InputGroupText>\n            <DollarSignIcon />\n          </InputGroupText>\n          <TextInput\n            id=\"manual-cost\"\n            type=\"number\"\n            aria-label=\"manual-cost\"\n            value={costManual}\n            onChange={(e) => setCostManual(validFloat(e))}\n          />\n          <InputGroupText>/hr</InputGroupText>\n        </InputGroup>\n      </InputAndText>\n      <InputAndText style={{ paddingTop: '10px' }}>\n        <p>Automated process cost</p>\n        <InputGroup style={{ width: '50%' }}>\n          <InputGroupText>\n            <DollarSignIcon />\n          </InputGroupText>\n          <TextInput\n            id=\"automation-cost\"\n            type=\"number\"\n            aria-label=\"automation-cost\"\n            value={costAutomation}\n            onChange={(e) => setCostAutomation(validFloat(e))}\n          />\n          <InputGroupText>/hr</InputGroupText>\n        </InputGroup>\n      </InputAndText>\n    </CardBody>\n  </Card>\n);\n\nCalculationCost.propTypes = {\n  costManual: PropTypes.string,\n  setCostManual: PropTypes.func,\n  costAutomation: PropTypes.string,\n  setCostAutomation: PropTypes.func,\n};\n\nexport default CalculationCost;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  InputGroup,\n  InputGroupText,\n  TextInput,\n  Tooltip,\n  Popover,\n} from '@patternfly/react-core';\nimport {\n  InfoCircleIcon,\n  ToggleOnIcon,\n  ToggleOffIcon,\n} from '@patternfly/react-icons';\n\nimport {\n  convertSecondsToMins,\n  convertMinsToSeconds,\n  capitalize,\n} from '../../Utilities/helpers';\n\nconst TemplateDetail = styled.div`\n  em {\n    display: block;\n    padding: 5px 0;\n  }\n\n  @media (max-width: 1490px) {\n    display: block;\n\n    em {\n      padding: 10px 0;\n      display: block;\n    }\n  }\n`;\n\nconst TemplateDetailSubTitle = styled.em`\n  color: var(--pf-global--Color--dark-200);\n`;\n\nconst TooltipWrapper = styled.div`\n  p {\n    text-align: left;\n  }\n`;\n\nconst IconGroup = styled.div`\n  & svg {\n    fill: var(--pf-global--Color--dark-200);\n\n    :hover {\n      cursor: pointer;\n    }\n\n    :first-of-type {\n      margin-right: 10px;\n      margin-left: 10px;\n\n      @media (max-width: 1350px) {\n        margin-left: 0;\n      }\n    }\n  }\n`;\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst showSortAttr = (details, sortBy) => {\n  const trimmed = sortBy.split(':')[0];\n  const sortAttribute = Object.keys(details).map((k) =>\n    k === trimmed ? `${details[k]}` : null\n  );\n\n  return (\n    <TemplateDetailSubTitle>\n      {capitalize(trimmed.split('_').join(' '))}: {sortAttribute}\n    </TemplateDetailSubTitle>\n  );\n};\n\nconst QuestionIconTooltip = ({ details }) => (\n  <Popover\n    aria-label=\"template detail popover\"\n    position=\"left\"\n    bodyContent={\n      <TooltipWrapper>\n        {Object.keys(details).map((k, i) => (\n          <p key={i}>\n            <b>{capitalize(k.split('_').join(' '))}</b>: {details[k]}\n          </p>\n        ))}\n      </TooltipWrapper>\n    }\n  >\n    <InfoCircleIcon />\n  </Popover>\n);\n\nQuestionIconTooltip.propTypes = {\n  details: PropTypes.object,\n};\n\nconst TopTemplates = ({\n  data = [],\n  sortBy = '',\n  setDataRunTime = () => {},\n  setEnabled = () => {},\n  redirectToJobExplorer = () => {},\n}) => (\n  <Card style={{ overflow: 'auto', flex: '1 1 0' }} className=\"top-templates\">\n    <CardBody>\n      <p>Enter the time it takes to run the following templates manually.</p>\n      {data.map((d) => (\n        <div key={d.id}>\n          <Tooltip content={'List of jobs for this template for past 30 days'}>\n            <Button\n              style={{ padding: '15px 0 10px' }}\n              component=\"a\"\n              onClick={() => redirectToJobExplorer(d.id)}\n              variant=\"link\"\n            >\n              {d.name}\n            </Button>\n          </Tooltip>\n          <TemplateDetail>\n            <InputAndText key={d.id}>\n              <InputGroup>\n                <TextInput\n                  id={d.id}\n                  type=\"number\"\n                  aria-label=\"time run manually\"\n                  value={convertSecondsToMins(d.avgRunTime)}\n                  onChange={(minutes) =>\n                    setDataRunTime(convertMinsToSeconds(minutes), d.id)\n                  }\n                />\n                <InputGroupText>min</InputGroupText>\n              </InputGroup>\n            </InputAndText>\n            <TemplateDetailSubTitle>\n              x {d.successful_hosts_total} host runs\n            </TemplateDetailSubTitle>\n            {showSortAttr(d, sortBy)}\n            <IconGroup>\n              <QuestionIconTooltip details={d} />\n              {!d.enabled && (\n                <ToggleOffIcon onClick={() => setEnabled(d.id)(true)} />\n              )}\n              {d.enabled && (\n                <ToggleOnIcon onClick={() => setEnabled(d.id)(false)} />\n              )}\n            </IconGroup>\n          </TemplateDetail>\n          <p style={{ color: '#486B00' }}>${d.delta.toFixed(2)}</p>\n        </div>\n      ))}\n    </CardBody>\n  </Card>\n);\n\nTopTemplates.propTypes = {\n  data: PropTypes.array,\n  setDataRunTime: PropTypes.func,\n  redirectToJobExplorer: PropTypes.func,\n  deselectedIds: PropTypes.array,\n  setDeselectedIds: PropTypes.func,\n  setEnabled: PropTypes.func,\n  sortBy: PropTypes.string,\n};\n\nexport default TopTemplates;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\n// Imports from custom components\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\n// Imports from API\nimport { preflightRequest, readROI, readROIOptions } from '../../Api';\n\n// Imports from utilities\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { roi as roiConst } from '../../Utilities/constants';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { calculateDelta, convertSecondsToHours } from '../../Utilities/helpers';\n\n// Chart\nimport TopTemplatesSavings from '../../Charts/ROITopTemplates';\n\n// Local imports\nimport { BorderedCardTitle } from './helpers';\nimport TotalSavings from './TotalSavings';\nimport CalculationCost from './CalculationCost';\nimport AutomationFormula from './AutomationFormula';\nimport TopTemplates from './TopTemplates';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 5fr 2fr;\n  height: 100%;\n`;\n\nconst WrapperLeft = styled.div`\n  flex: 5;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n`;\n\nconst WrapperRight = styled.div`\n  flex: 2;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst mapApi = ({ items = [] }) =>\n  items.map((el) => ({\n    ...el,\n    delta: 0,\n    avgRunTime: 3600,\n    manualCost: 0,\n    automatedCost: 0,\n    enabled: true,\n  }));\n\nconst filterDisabled = (data) => data.filter(({ enabled }) => enabled);\n\nconst updateDeltaCost = (data, costAutomation, costManual) =>\n  data.map((el) => {\n    const manualCost =\n      convertSecondsToHours(el.avgRunTime) *\n      el.successful_hosts_total *\n      parseFloat(costManual);\n    const automatedCost =\n      convertSecondsToHours(el.successful_elapsed_total) *\n      parseFloat(costAutomation);\n    const delta = calculateDelta(automatedCost, manualCost);\n\n    return { ...el, delta, manualCost, automatedCost };\n  });\n\nconst computeTotalSavings = (data) =>\n  data.reduce((sum, curr) => sum + curr.delta, 0);\n\nconst AutomationCalculator = ({ history }) => {\n  const toJobExplorer = useRedirect(history, 'jobExplorer');\n  const [costManual, setCostManual] = useState('50');\n  const [costAutomation, setCostAutomation] = useState('20');\n\n  const [preflight, setPreflight] = useApi(null);\n  const [options, setOptions] = useApi({});\n  const [api, fetchApi, setDataInApi] = useApi([], (data) =>\n    updateDeltaCost(mapApi(data), costAutomation, costManual)\n  );\n\n  const { queryParams, setFromToolbar } = useQueryParams(\n    roiConst.defaultParams\n  );\n\n  /**\n   * Modifies one elements avgRunTime in the unfilteredData\n   * and updates all calculated fields.\n   * Used in top templates.\n   */\n  const setDataRunTime = (seconds, id) => {\n    const updatedData = api.data.map((el) => {\n      if (el.id === id) {\n        el.avgRunTime = seconds;\n        const updatedDelta = updateDeltaCost(\n          [el],\n          costAutomation,\n          costManual\n        )[0];\n        return updatedDelta;\n      } else {\n        return el;\n      }\n    });\n\n    setDataInApi(updatedData);\n  };\n\n  const setEnabled = (id) => (value) => {\n    setDataInApi(\n      api.data.map((el) => (el.id === id ? { ...el, enabled: value } : el))\n    );\n  };\n\n  useEffect(() => {\n    setPreflight(preflightRequest());\n    setOptions(readROIOptions({ params: queryParams }));\n  }, []);\n\n  /**\n   * Recalculates the delta and costs in the data after the cost is changed.\n   */\n  useEffect(() => {\n    setDataInApi(updateDeltaCost(api.data, costAutomation, costManual));\n  }, [costAutomation, costManual]);\n\n  /**\n   * Get data from API depending on the queryParam.\n   */\n  useEffect(() => {\n    fetchApi(readROI({ params: queryParams }));\n  }, [queryParams]);\n\n  /**\n   * Function to redirect to the job explorer page\n   * with the same filters as is used here.\n   */\n  const redirectToJobExplorer = (templateId) => {\n    const initialQueryParams = {\n      quick_date_range: 'last_30_days',\n      template_id: [templateId],\n    };\n    toJobExplorer(initialQueryParams);\n  };\n\n  const renderLeft = () => (\n    <WrapperLeft>\n      <Main style={{ paddingBottom: '0' }}>\n        <Card>\n          <BorderedCardTitle>Automation savings</BorderedCardTitle>\n          <CardBody>\n            {api.isLoading && <LoadingState />}\n            {api.error && <ApiErrorState message={api.error.error} />}\n            {api.isSuccess && api.data.length <= 0 && <NoData />}\n            {api.isSuccess && api.data.length > 0 && (\n              <React.Fragment>\n                <TopTemplatesSavings\n                  margin={{ top: 20, right: 20, bottom: 20, left: 70 }}\n                  id=\"d3-roi-chart-root\"\n                  data={filterDisabled(api.data)}\n                />\n                <p style={{ textAlign: 'center' }}>Templates</p>\n              </React.Fragment>\n            )}\n          </CardBody>\n        </Card>\n      </Main>\n      <Main>\n        <AutomationFormula />\n      </Main>\n    </WrapperLeft>\n  );\n\n  const renderRight = () => (\n    <WrapperRight>\n      <Main style={{ paddingBottom: '0', paddingLeft: '0' }}>\n        <TotalSavings\n          totalSavings={computeTotalSavings(filterDisabled(api.data))}\n        />\n      </Main>\n      <Main\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          flex: '1 1 0',\n          paddingLeft: '0',\n        }}\n      >\n        <CalculationCost\n          costManual={costManual}\n          setCostManual={setCostManual}\n          costAutomation={costAutomation}\n          setCostAutomation={setCostAutomation}\n        />\n        <TopTemplates\n          redirectToJobExplorer={redirectToJobExplorer}\n          data={api.data}\n          setDataRunTime={setDataRunTime}\n          setUnfilteredData={api.data}\n          setEnabled={setEnabled}\n          sortBy={queryParams.sort_by}\n        />\n      </Main>\n    </WrapperRight>\n  );\n\n  if (preflight?.error?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader style={{ flex: '0' }}>\n        <PageHeaderTitle title={'Automation Calculator'} />\n        <FilterableToolbar\n          categories={options.data}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      {preflight.error && (\n        <Main>\n          <EmptyState preflightError={preflight.error} />\n        </Main>\n      )}\n      {preflight.isSuccess && (\n        <React.Fragment>\n          <Wrapper className=\"automation-wrapper\">\n            {renderLeft()}\n            {renderRight()}\n          </Wrapper>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nAutomationCalculator.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default AutomationCalculator;\n","import React from 'react';\n\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst AutomationFormula = () => (\n  <Card style={{ height: '100%' }}>\n    <CardTitle>Automation formula</CardTitle>\n    <CardBody>\n      <p>\n        <b>Manual cost for template x</b> =\n        <em>\n          (time for a manual run on one host in hours * (sum of all hosts across\n          all job runs) ) * cost per hour\n        </em>\n      </p>\n      <p>\n        <b>Automation cost for template x</b> =\n        <em>\n          cost of automation per hour * sum of total elapsed hours for a\n          template\n        </em>\n      </p>\n      <p>\n        <b>Savings</b> =\n        <em>Sum of (manual cost - automation cost) across all templates</em>\n      </p>\n    </CardBody>\n  </Card>\n);\n\nexport default AutomationFormula;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle, Title } from '@patternfly/react-core';\n\nconst floatToStringWithCommas = (total) =>\n  total\n    .toFixed(2)\n    .toString()\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\nconst TotalSavings = ({ totalSavings = 0 }) => (\n  <Card style={{ borderTop: '3px solid #2B9AF3' }}>\n    <CardTitle style={{ paddingBottom: '0' }}>Total savings</CardTitle>\n    <CardBody>\n      <Title\n        headingLevel=\"h3\"\n        size=\"4xl\"\n        style={{ color: 'var(--pf-global--success-color--200)' }}\n      >\n        {floatToStringWithCommas(totalSavings)}\n      </Title>\n    </CardBody>\n  </Card>\n);\n\nTotalSavings.propTypes = {\n  totalSavings: PropTypes.number,\n};\n\nexport default TotalSavings;\n","import styled from 'styled-components';\nimport { CardTitle } from '@patternfly/react-core';\n\nexport const BorderedCardTitle = styled(CardTitle)`\n  border-bottom: 1px solid #d7d7d7;\n  margin-bottom: 10px;\n`;\n","import * as d3 from 'd3';\n\nclass Tooltip {\n  constructor(opts) {\n    this.svg = opts.svg;\n    this.colors = opts.colors;\n    this.draw();\n  }\n\n  draw() {\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 145;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -41)\n      .attr('rx', 2)\n      .attr('height', 110)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.circleSuccess = this.toolTipBase\n      .append('circle')\n      .attr('cx', 26)\n      .attr('cy', 0)\n      .attr('r', 8)\n      .attr('stroke', 'white')\n      .attr('fill', 'white');\n    this.circleFail = this.toolTipBase\n      .append('circle')\n      .attr('cx', 26)\n      .attr('cy', 26)\n      .attr('r', 8)\n      .attr('stroke', 'white')\n      .attr('fill', 'white');\n    this.successText = this.toolTipBase\n      .append('text')\n      .attr('x', 43)\n      .attr('y', 4)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Successful');\n    this.failText = this.toolTipBase\n      .append('text')\n      .attr('x', 43)\n      .attr('y', 28)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Failed');\n    this.successIcon = this.toolTipBase\n      .append('text')\n      .attr('class', 'fas fa-sm')\n      .attr('fill', this.colors(1))\n      .attr('x', 19)\n      .attr('y', 5)\n      .text('\\uf058');\n    this.failedIcon = this.toolTipBase\n      .append('text')\n      .attr('class', 'fas fa-sm')\n      .attr('fill', this.colors(0))\n      .attr('x', 20)\n      .attr('y', 31)\n      .text('\\uf06a');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 137)\n      .attr('y', -21)\n      .attr('font-size', 12)\n      .attr('text-anchor', 'end')\n      .text('No jobs');\n    this.successful = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 122)\n      .attr('y', 4)\n      .text('0');\n    this.failed = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 122)\n      .attr('y', 28)\n      .text('0');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('stroke', 'white')\n      .attr('x', 20)\n      .attr('y', -21)\n      .attr('font-size', 12)\n      .text('Never');\n    this.clickMore = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 20)\n      .attr('y', 55)\n      .attr('font-size', 12)\n      .text('Click for details');\n  }\n\n  handleMouseOver = (d) => {\n    let success = 0;\n    let fail = 0;\n    let total = 0;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    const formatTooltipDate = d3.timeFormat('%m/%d');\n    if (!d) {\n      return;\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n    if (d) {\n      success = d.RAN || 0;\n      fail = d.FAIL || 0;\n      total = d.TOTAL || 0;\n      this.date.text(formatTooltipDate(d.DATE || null));\n    }\n\n    if (d && d.data) {\n      success = d.data.RAN || 0;\n      fail = d.data.FAIL || 0;\n      total = d.data.TOTAL || 0;\n      this.date.text(formatTooltipDate(d.data.DATE || null));\n    }\n\n    this.jobs.text('' + total + ' jobs');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n    this.failed.text('' + fail);\n    this.successful.text('' + success);\n    this.successTextWidth = this.successful.node().getComputedTextLength();\n    this.failTextWidth = this.failed.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 40;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.circleSuccess.attr('cx', -adjustedWidth);\n      this.circleFail.attr('cx', -adjustedWidth);\n      this.failedIcon.attr('x', -adjustedWidth - 7);\n      this.successIcon.attr('x', -adjustedWidth - 7);\n      this.successText.attr('x', -adjustedWidth + 17);\n      this.failText.attr('x', -adjustedWidth + 17);\n      this.successful.attr('x', -this.successTextWidth - 20 - 12);\n      this.failed.attr('x', -this.failTextWidth - 20 - 12);\n      this.date.attr('x', -adjustedWidth - 5);\n      this.jobs.attr('x', -this.jobsWidth / 2 - 7);\n      this.clickMore.attr('x', -adjustedWidth);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.circleSuccess.attr('cx', 26);\n      this.circleFail.attr('cx', 26);\n      this.failedIcon.attr('x', 19);\n      this.successIcon.attr('x', 19);\n      this.successText.attr('x', 43);\n      this.failText.attr('x', 43);\n      this.successful.attr('x', adjustedWidth - this.successTextWidth);\n      this.failed.attr('x', adjustedWidth - this.failTextWidth);\n      this.date.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth);\n      this.clickMore.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nexport default Tooltip;\n","import React, { Component } from 'react';\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { stringify } from 'query-string';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\n\nclass BarChart extends Component {\n  constructor(props) {\n    super(props);\n    this.draw = this.draw.bind(this);\n    this.init = this.init.bind(this);\n    this.resize = this.resize.bind(this);\n    this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n    this.state = {\n      formattedData: [],\n      timeout: null,\n    };\n  }\n\n  redirectToJobExplorer({ data: { DATE: date } }) {\n    const { jobExplorer } = Paths;\n    const formattedDate = formatDate(date);\n    const { orgId, templateId } = this.props;\n    const initialQueryParams = {\n      start_date: formattedDate,\n      end_date: formattedDate,\n      quick_date_range: 'custom',\n      status: ['failed', 'successful'],\n      template_id: templateId,\n      org_id: orgId,\n    };\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    this.props.history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  }\n\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  init() {\n    this.draw();\n  }\n\n  // Methods\n  draw() {\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const parseTime = d3.timeParse('%Y-%m-%d');\n    let { data: unformattedData } = this.props;\n    const data = unformattedData.reduce(\n      (formatted, { created_date, successful_count, failed_count }) => {\n        let DATE = parseTime(created_date) || new Date();\n        let RAN = +successful_count || 0;\n        let FAIL = +failed_count || 0;\n        let TOTAL = +successful_count + failed_count || 0;\n        return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n      },\n      []\n    );\n    const width = this.props.getWidth();\n    const height = this.props.getHeight();\n    const x = d3.scaleBand().rangeRound([0, width]).padding(0.35); // percentage\n    const y = d3.scaleLinear().range([height, 0]);\n\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n    //[fail, success]\n    let colors = d3.scaleOrdinal(['#6EC664', '#A30000']);\n\n    const barTooltip = new Tooltip({\n      svg: '#' + this.props.id,\n      colors,\n    });\n    const status = ['FAIL', 'RAN'];\n\n    // stack our data\n    const stack = d3\n      .stack()\n      .keys(status)\n      .order(d3.stackOrderNone)\n      .offset(d3.stackOffsetNone);\n\n    const layers = stack(data);\n    // Scale the range of the data\n    x.domain(layers[0].map((d) => d.data.DATE));\n    y.domain([0, d3.max(layers[layers.length - 1], (d) => d[1] * 1.15) || 8]);\n    // Add the Y Axis\n    svg\n      .append('g')\n      .attr('class', 'y-axis')\n      .call(d3.axisLeft(y).tickSize(-width, 0, 0))\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.y-axis .tick text').attr('x', -5);\n    // text label for the y axis\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Jobs across all clusters');\n    // Add the X Axis\n    let ticks;\n    const maxTicks = Math.round(data.length / (data.length / 2));\n    ticks = data.map((d) => d.DATE);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n        .filter((item) => item);\n    }\n\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(\n        d3.axisBottom(x).tickValues(ticks).tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n      )\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n    // text label for the x axis\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n\n    const layer = svg\n      .selectAll('layer')\n      .data(layers)\n      .enter()\n      .append('g')\n      .attr('class', 'layer')\n      .style('fill', (_d, i) => colors(i));\n    layer\n      .selectAll('rect')\n      .data((d) => d)\n      .enter()\n      .append('rect')\n      .attr('x', (d) => x(d.data.DATE))\n      .attr('y', (d) => y(d[0]))\n      .attr('height', 0)\n      .attr('width', x.bandwidth() - 1)\n      .transition()\n      .duration(550)\n      .ease(d3.easeCubic)\n      .attr('y', (d) => y(d[1]))\n      .attr('height', (d) => y(d[0]) - y(d[1]));\n    layer\n      .selectAll('rect')\n      .on('mouseover', barTooltip.handleMouseOver)\n      .on('mousemove', barTooltip.handleMouseOver)\n      .on('mouseout', barTooltip.handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n  }\n\n  componentDidMount() {\n    this.init();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      this.init();\n    }\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nBarChart.propTypes = {\n  id: PropTypes.string,\n  templateId: PropTypes.array,\n  orgId: PropTypes.array,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  history: PropTypes.object,\n};\n\nexport default initializeChart(BarChart);\n","import React, { Component } from 'react';\nimport initializeChart from './BaseChart';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\nimport { stringify } from 'query-string';\nimport * as d3 from 'd3';\n\nclass LineChart extends Component {\n  constructor(props) {\n    super(props);\n    this.init = this.init.bind(this);\n    this.draw = this.draw.bind(this);\n    this.resize = this.resize.bind(this);\n    this.updateCluster = this.updateCluster.bind(this);\n    this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n    this.state = {\n      formattedData: [],\n      timeout: null,\n    };\n  }\n\n  redirectToJobExplorer({ DATE: date }) {\n    const { jobExplorer } = Paths;\n    const formattedDate = formatDate(date);\n    const { clusterId, templateId, orgId } = this.props;\n    const initialQueryParams = {\n      start_date: formattedDate,\n      end_date: formattedDate,\n      quick_date_range: 'custom',\n      status: ['failed', 'successful'],\n      cluster_id: clusterId,\n      org_id: orgId,\n      template_id: templateId,\n    };\n\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    this.props.history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  }\n\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  updateCluster() {\n    this.init();\n  }\n  init() {\n    this.draw();\n  }\n  // Methods\n  draw() {\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const width = this.props.getWidth();\n    const height = this.props.getHeight();\n\n    function transition(path) {\n      path.transition().duration(1000).attrTween('stroke-dasharray', tweenDash);\n    }\n\n    function tweenDash() {\n      const l = this.getTotalLength();\n      const i = d3.interpolateString('0,' + l, l + ',' + l);\n      return function (t) {\n        return i(t);\n      };\n    }\n\n    const x = d3.scaleTime().rangeRound([0, width]);\n    const y = d3.scaleLinear().range([height, 0]);\n\n    //[success, fail, total]\n    let colors = d3.scaleOrdinal(['#6EC664', '#A30000', '#06C']);\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n      .attr('z', 100)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n    // Tooltip\n    const tooltip = new Tooltip({\n      svg: '#' + this.props.id,\n      colors,\n    });\n    const { data: unformattedData } = this.props;\n    const parseTime = d3.timeParse('%Y-%m-%d');\n\n    const data = unformattedData.reduce(\n      (formatted, { created_date, successful_count, failed_count }) => {\n        let DATE = parseTime(created_date) || new Date();\n        let RAN = +successful_count || 0;\n        let FAIL = +failed_count || 0;\n        let TOTAL = +successful_count + failed_count || 0;\n        return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n      },\n      []\n    );\n    // Scale the range of the data\n    x.domain(\n      d3.extent(data, function (d) {\n        return d.DATE;\n      })\n    );\n    y.domain([\n      0,\n      d3.max(data, function (d) {\n        return d.TOTAL * 1.15 || 8;\n      }),\n    ]);\n\n    const successLine = d3\n      .line()\n      .curve(d3.curveMonotoneX)\n      .x(function (d) {\n        return x(d.DATE);\n      })\n      .y(function (d) {\n        return y(d.RAN);\n      });\n\n    const failLine = d3\n      .line()\n      .defined((d) => !isNaN(d.FAIL))\n      .curve(d3.curveMonotoneX)\n      .x(function (d) {\n        return x(d.DATE);\n      })\n      .y(function (d) {\n        return y(d.FAIL);\n      });\n    // Add the Y Axis\n    svg\n      .append('g')\n      .attr('class', 'y-axis')\n      .call(d3.axisLeft(y).ticks(10).tickSize(-width))\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.y-axis .tick text').attr('x', -5);\n\n    // text label for the y axis\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Job runs');\n    // Add the X Axis\n    let ticks;\n    const maxTicks = Math.round(data.length / (data.length / 2));\n    ticks = data.map((d) => d.DATE);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n        .filter((item) => item);\n    }\n\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(\n        d3\n          .axisBottom(x)\n          .tickValues(ticks)\n          .tickSize(-height)\n          .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n      ) // \"Jan-01\"\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n    // text label for the x axis\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n    const vertical = svg\n      .append('path')\n      .attr('class', 'mouse-line')\n      .style('stroke', 'black')\n      .style('stroke-width', '3px')\n      .style('stroke-dasharray', '3, 3')\n      .style('opacity', '0');\n\n    const handleMouseOver = function (d) {\n      tooltip.handleMouseOver(d);\n      // show vertical line\n      vertical.transition().style('opacity', '1');\n    };\n\n    const handleMouseMove = function () {\n      let intersectX = this.cx.baseVal.value;\n      vertical.attr('d', function () {\n        let d = 'M' + intersectX + ',' + height;\n        d += ' ' + intersectX + ',' + 0;\n        return d;\n      });\n    };\n\n    const handleMouseOut = function () {\n      // hide tooltip\n      tooltip.handleMouseOut();\n      // hide vertical line\n      vertical.transition().style('opacity', 0);\n    };\n\n    // Add the successLine path.\n    svg\n      .append('path')\n      .data([data])\n      .attr('class', 'line')\n      .style('fill', 'none')\n      .style('stroke', () => colors(1))\n      .attr('stroke-width', 2)\n      .attr('d', successLine)\n      .call(transition);\n\n    // Add the failLine path.\n    svg\n      .append('path')\n      .data([data])\n      .attr('class', 'line')\n      .style('fill', 'none')\n      .style('stroke', () => colors(0))\n      .attr('stroke-width', 2)\n      .attr('d', failLine)\n      .call(transition);\n    svg\n      .selectAll('dot')\n      .data(data)\n      .enter()\n      .append('circle')\n      .attr('r', 3)\n      .style('stroke', () => colors(1))\n      .style('fill', () => colors(1))\n      .attr('cx', function (d) {\n        return x(d.DATE);\n      })\n      .attr('cy', function (d) {\n        return y(d.RAN);\n      })\n\n      .on('mouseover', handleMouseOver)\n      .on('mousemove', handleMouseMove)\n      .on('mouseout', handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n    // create our failLine circles\n    svg\n      .selectAll('dot')\n      .data(data)\n      .enter()\n      .append('circle')\n      .attr('r', 3)\n      .style('stroke', () => colors(0))\n      .style('fill', () => colors(0))\n      .attr('cx', function (d) {\n        return x(d.DATE);\n      })\n      .attr('cy', function (d) {\n        return y(d.FAIL);\n      })\n      .on('mouseover', handleMouseOver)\n      .on('mousemove', handleMouseMove)\n      .on('mouseout', handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n  }\n\n  componentDidMount() {\n    this.updateCluster();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      this.updateCluster();\n    }\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nLineChart.propTypes = {\n  id: PropTypes.string,\n  clusterId: PropTypes.array,\n  templateId: PropTypes.array,\n  orgId: PropTypes.array,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  history: PropTypes.object,\n};\n\nexport default initializeChart(LineChart);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { trimStr } from '../Utilities/helpers';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n  DataList,\n  DataListItem as PFDataListItem,\n  DataListCell as PFDataListCell,\n} from '@patternfly/react-core';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst ModulesList = ({ modules, isLoading }) => (\n  <DataList\n    aria-label=\"Top Modules\"\n    style={{\n      maxHeight: '400px',\n      overflow: 'auto',\n      height: '400px',\n      background: 'white',\n    }}\n  >\n    <DataListItem aria-labelledby=\"top-modules-header\">\n      <DataListCell>\n        <h3>Top modules</h3>\n      </DataListCell>\n      <DataCellEnd>\n        <h3>Usage</h3>\n      </DataCellEnd>\n    </DataListItem>\n    {isLoading && (\n      <PFDataListItem\n        aria-labelledby=\"modules-loading\"\n        key={isLoading}\n        style={{ border: 'none' }}\n      >\n        <PFDataListCell>\n          <LoadingState />\n        </PFDataListCell>\n      </PFDataListItem>\n    )}\n    {!isLoading && modules.length <= 0 && (\n      <PFDataListItem\n        aria-labelledby=\"modules-no-data\"\n        key={isLoading}\n        style={{ border: 'none' }}\n      >\n        <PFDataListCell>\n          <NoData />\n        </PFDataListCell>\n      </PFDataListItem>\n    )}\n    {!isLoading &&\n      modules\n        .filter((module) => module.name !== null)\n        .map(({ name, host_task_count }, index) => (\n          <DataListItem aria-labelledby=\"top-modules-detail\" key={index}>\n            <DataListCell>\n              <span>{trimStr(name)}</span>\n            </DataListCell>\n            <DataCellEnd>{host_task_count}</DataCellEnd>\n          </DataListItem>\n        ))}\n  </DataList>\n);\n\nModulesList.propTypes = {\n  modules: PropTypes.array,\n  isLoading: PropTypes.bool,\n};\n\nexport default ModulesList;\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport { Paths } from '../paths';\nimport { stringify } from 'query-string';\nimport useApi from '../Utilities/useApi';\nimport { formatDateTime, formatSeconds } from '../Utilities/helpers';\nimport { readJobExplorer } from '../Api';\n\nimport {\n  Button,\n  DataList,\n  DataListItem as PFDataListItem,\n  DataListCell as PFDataListCell,\n  Label,\n  Modal,\n} from '@patternfly/react-core';\n\nimport { CircleIcon } from '@patternfly/react-icons';\n\nconst success = (\n  <CircleIcon\n    size=\"sm\"\n    key=\"5\"\n    style={{ color: 'rgb(110, 198, 100)', marginRight: '5px' }}\n  />\n);\nconst fail = (\n  <>\n    <CircleIcon\n      size=\"sm\"\n      key=\"5\"\n      style={{ color: 'rgb(163, 0, 0)', marginRight: '5px' }}\n    />\n    <span id=\"fail-icon\">!</span>\n  </>\n);\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\nconst PFDataListItemNoBorder = styled(PFDataListItem)`\n  border-bottom: none;\n  margin-bottom: -20px;\n`;\nconst DataListItemCompact = styled(DataListItem)`\n  padding: 0;\n  > .pf-c-data-list__cell {\n    font-weight: 600;\n  }\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst DataListCellCompact = styled(DataListCell)`\n  padding: 7px;\n`;\n\nconst DataListFocus = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, auto);\n  grid-gap: 10px;\n  padding: var(--pf-global--spacer--lg);\n  background: #ebebeb;\n  border: 1px solid #ccc;\n  border-top: none;\n  margin-bottom: 20px;\n`;\nconst DataCellEndCompact = styled(DataCellEnd)`\n  padding: 7px !important;\n`;\n\nconst formatTopFailedTask = (data) => {\n  if (!data) {\n    return;\n  }\n\n  if (data && data[0]) {\n    const percentage = Math.ceil(\n      (data[0].failed_count / data[0].total_failed_count) * 100\n    );\n    return `${data[0].task_name} ${percentage}%`;\n  }\n\n  return `Unavailable`;\n};\n\nconst formatTopFailedStep = (data) => {\n  if (!data) {\n    return;\n  }\n\n  if (data && data[0]) {\n    const percentage = Math.ceil(\n      (data[0].failed_count / data[0].total_failed_count) * 100\n    );\n    return `${data[0].template_name} ${percentage}%`;\n  }\n\n  return `Unavailable`;\n};\n\nconst formatSuccessRate = (successCount, totalCount) =>\n  Math.ceil((successCount / totalCount) * 100) + '%';\nconst formatAvgRun = (elapsed, totalCount) =>\n  new Date(Math.ceil(elapsed / totalCount) * 1000).toISOString().substr(11, 8);\nconst formatTotalTime = (elapsed) =>\n  new Date(elapsed * 1000).toISOString().substr(11, 8);\n\nconst ModalContents = ({\n  selectedId,\n  isOpen,\n  handleModal,\n  qp,\n  jobType,\n  handleCloseBtn,\n}) => {\n  const [\n    {\n      data: { items: relatedJobs = [] },\n    },\n    setRelatedJobs,\n  ] = useApi({ items: [] });\n  const [\n    {\n      data: {\n        items: [stats = 0],\n      },\n    },\n    setStats,\n  ] = useApi({ items: [] });\n\n  let history = useHistory();\n\n  const redirectToJobExplorer = () => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      template_id: [selectedId],\n      status: [\n        'successful',\n        'failed',\n        'new',\n        'pending',\n        'waiting',\n        'error',\n        'canceled',\n        'running',\n      ],\n      job_type: [jobType],\n      quick_date_range: 'last_30_days',\n    };\n\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const relatedTemplateJobsParams = {\n    ...qp,\n    template_id: [selectedId],\n    attributes: [\n      'id',\n      'status',\n      'job_type',\n      'started',\n      'finished',\n      'elapsed',\n      'created',\n      'cluster_name',\n      'org_name',\n    ],\n    group_by_time: false,\n    limit: 5,\n    sort_by: 'created:desc',\n    quick_date_range: qp.quick_date_range\n      ? qp.quick_date_range\n      : 'last_30_days',\n    job_type: [jobType],\n  };\n\n  const agreggateTemplateParams = {\n    group_by: 'template',\n    template_id: [selectedId],\n    attributes: [\n      'elapsed',\n      'job_type',\n      'successful_count',\n      'failed_count',\n      'total_count',\n      jobType === 'job' ? 'most_failed_tasks' : 'most_failed_steps',\n    ],\n    status: qp.status,\n    quick_date_range: qp.quick_date_range\n      ? qp.quick_date_range\n      : 'last_30_days',\n    job_type: [jobType],\n  };\n\n  useEffect(() => {\n    if (selectedId) {\n      setStats(readJobExplorer({ params: agreggateTemplateParams }));\n      setRelatedJobs(readJobExplorer({ params: relatedTemplateJobsParams }));\n    }\n  }, [selectedId]);\n\n  return (\n    <Modal\n      aria-label=\"modal\"\n      width={'80%'}\n      title={stats.name ? stats.name : 'no-template-name'}\n      isOpen={isOpen}\n      onClose={() => {\n        handleModal(false);\n        handleCloseBtn(null);\n      }}\n      actions={[\n        <Button\n          key=\"cancel\"\n          variant=\"secondary\"\n          onClick={() => {\n            handleModal(false);\n            handleCloseBtn(null);\n          }}\n        >\n          Close\n        </Button>,\n      ]}\n    >\n      <DataList aria-label=\"Selected Template Details\">\n        <PFDataListItemNoBorder aria-labelledby=\"Selected Template Statistics\">\n          <DataListFocus>\n            <div aria-labelledby=\"job runs\">\n              <b style={{ marginRight: '10px' }}>Number of runs</b>\n              {stats.total_count ? stats.total_count : 'Unavailable'}\n            </div>\n            <div aria-labelledby=\"total time\">\n              <b style={{ marginRight: '10px' }}>Total time</b>\n              {stats.elapsed ? formatTotalTime(stats.elapsed) : 'Unavailable'}\n            </div>\n            <div aria-labelledby=\"Avg Time\">\n              <b style={{ marginRight: '10px' }}>Avg time</b>\n              {stats.elapsed\n                ? formatAvgRun(stats.elapsed, stats.total_count)\n                : 'Unavailable'}\n            </div>\n            <div aria-labelledby=\"success rate\">\n              <b style={{ marginRight: '10px' }}>Success rate</b>\n              {!isNaN(stats.successful_count)\n                ? formatSuccessRate(stats.successful_count, stats.total_count)\n                : 'Unavailable'}\n            </div>\n            {stats.most_failed_tasks && (\n              <div aria-labelledby=\"most failed task\">\n                <b style={{ marginRight: '10px' }}>Most failed task</b>\n                {stats.most_failed_tasks\n                  ? formatTopFailedTask(stats.most_failed_tasks)\n                  : 'Unavailable'}\n              </div>\n            )}\n            {stats.most_failed_steps && (\n              <div aria-labelledby=\"most failed step\">\n                <b style={{ marginRight: '10px' }}>Most failed step</b>\n                {stats.most_failed_steps\n                  ? formatTopFailedStep(stats.most_failed_steps)\n                  : 'Unavailable'}\n              </div>\n            )}\n          </DataListFocus>\n        </PFDataListItemNoBorder>\n        <DataListItemCompact>\n          <DataListCellCompact key=\"last5jobs\">\n            <Label variant=\"outline\">Last 5 jobs</Label>\n          </DataListCellCompact>\n          ,\n          <DataCellEndCompact>\n            <Button\n              component=\"a\"\n              onClick={redirectToJobExplorer}\n              variant=\"link\"\n            >\n              View all jobs\n            </Button>\n          </DataCellEndCompact>\n        </DataListItemCompact>\n        <DataListItemCompact aria-labelledby=\"datalist header\">\n          <PFDataListCell key=\"job heading\">Id/Name</PFDataListCell>\n          <PFDataListCell key=\"cluster heading\">Cluster</PFDataListCell>\n          <PFDataListCell key=\"start time heading\">Start Time</PFDataListCell>\n          <PFDataListCell key=\"total time heading\">Total Time</PFDataListCell>\n        </DataListItemCompact>\n        {relatedJobs.length <= 0 && <LoadingState />}\n        {relatedJobs.length > 0 &&\n          relatedJobs.map((job, index) => (\n            <DataListItem\n              style={{ padding: '10px 0' }}\n              key={`job-details-${index}`}\n              aria-labelledby=\"job details\"\n            >\n              <PFDataListCell key=\"job name\">\n                {job.status === 'successful' ? success : fail} {job.id.id} -{' '}\n                {job.id.template_name}\n              </PFDataListCell>\n              <PFDataListCell key=\"job cluster\">\n                {job.cluster_name}\n              </PFDataListCell>\n              <PFDataListCell key=\"start time\">\n                {formatDateTime(job.started)}\n              </PFDataListCell>\n              <PFDataListCell key=\"total time\">\n                {formatSeconds(job.elapsed)}\n              </PFDataListCell>\n            </DataListItem>\n          ))}\n      </DataList>\n    </Modal>\n  );\n};\n\nModalContents.propTypes = {\n  selectedId: PropTypes.number,\n  qp: PropTypes.object,\n  jobType: PropTypes.string,\n  handleCloseBtn: PropTypes.func,\n  isOpen: PropTypes.bool,\n  handleModal: PropTypes.func,\n};\n\nexport default ModalContents;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n  DataList,\n  DataListItem as PFDataListItem,\n  DataListCell as PFDataListCell,\n} from '@patternfly/react-core';\n\nimport ModalContents from './ModalContents';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst TemplatesList = ({ templates, isLoading, qp, title, jobType }) => {\n  const [selectedId, setSelectedId] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  return (\n    <>\n      <DataList\n        aria-label=\"Top Templates\"\n        style={{\n          maxHeight: '400px',\n          overflow: 'auto',\n          height: '400px',\n          background: 'white',\n        }}\n      >\n        <DataListItem aria-labelledby=\"top-templates-header\">\n          <DataListCell>\n            <h3>{title}</h3>\n          </DataListCell>\n          <DataCellEnd>\n            <h3>Usage</h3>\n          </DataCellEnd>\n        </DataListItem>\n        {isLoading && (\n          <PFDataListItem\n            aria-labelledby=\"templates-loading\"\n            key={isLoading}\n            style={{ border: 'none' }}\n          >\n            <PFDataListCell>\n              <LoadingState />\n            </PFDataListCell>\n          </PFDataListItem>\n        )}\n        {!isLoading && templates.length <= 0 && (\n          <PFDataListItem\n            aria-labelledby=\"templates-no-data\"\n            key={isLoading}\n            style={{ border: 'none' }}\n          >\n            <PFDataListCell>\n              <NoData />\n            </PFDataListCell>\n          </PFDataListItem>\n        )}\n        {!isLoading &&\n          templates.map(({ name, total_count, id }, index) => (\n            <DataListItem aria-labelledby=\"top-templates-detail\" key={index}>\n              <DataListCell>\n                <a\n                  onClick={() => {\n                    setIsModalOpen(true);\n                    setSelectedId(id);\n                  }}\n                >\n                  {name}\n                </a>\n              </DataListCell>\n              <DataCellEnd>{total_count}</DataCellEnd>\n            </DataListItem>\n          ))}\n      </DataList>\n      <ModalContents\n        isOpen={isModalOpen}\n        handleModal={setIsModalOpen}\n        selectedId={selectedId}\n        qp={qp}\n        jobType={jobType}\n        handleCloseBtn={setSelectedId}\n      />\n    </>\n  );\n};\n\nTemplatesList.propTypes = {\n  templates: PropTypes.array,\n  isLoading: PropTypes.bool,\n  queryParams: PropTypes.object,\n  title: PropTypes.string,\n  qp: PropTypes.object,\n  jobType: PropTypes.string,\n};\n\nexport default TemplatesList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport {\n  preflightRequest,\n  readClustersOptions,\n  readJobExplorer,\n  readEventExplorer,\n} from '../../Api';\n\nimport { jobExplorer } from '../../Utilities/constants';\nimport useApi from '../../Utilities/useApi';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle as PFCardTitle,\n} from '@patternfly/react-core';\n\nimport BarChart from '../../Charts/BarChart';\nimport LineChart from '../../Charts/LineChart';\nimport ModulesList from '../../Components/ModulesList';\nimport TemplatesList from '../../Components/TemplatesList';\nimport FilterableToolbar from '../../Components/Toolbar';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport { clusters } from '../../Utilities/constants';\n\nconst initialTopTemplateParams = {\n  group_by: 'template',\n  limit: 10,\n  job_type: ['job'],\n  group_by_time: false,\n  status: ['successful', 'failed'],\n};\n\nconst initialTopWorkflowParams = {\n  group_by: 'template',\n  limit: 10,\n  job_type: ['workflowjob'],\n  group_by_time: false,\n  status: ['successful', 'failed'],\n};\n\nconst initialModuleParams = {\n  group_by: 'module',\n  sort_by: 'host_task_count:desc',\n  limit: 10,\n};\n\nconst Clusters = () => {\n  const [preflightError, setPreFlightError] = useState(null);\n\n  const { queryParams, setFromToolbar } = useQueryParams({\n    ...clusters.defaultParams,\n  });\n\n  const [\n    {\n      isLoading,\n      isSuccess,\n      error,\n      data: { items: chartData = [] },\n    },\n    setData,\n  ] = useApi({ items: [] });\n\n  const [\n    {\n      data: { items: templates = [] },\n    },\n    setTemplates,\n  ] = useApi({ items: [] });\n  const [\n    {\n      data: { items: workflows = [] },\n    },\n    setWorkflows,\n  ] = useApi({ items: [] });\n  const [\n    {\n      data: { items: modules = [] },\n    },\n    setModules,\n  ] = useApi({ items: [] });\n  const [{ data: options = [] }, setOptions] = useApi({});\n\n  const initialOptionsParams = {\n    attributes: jobExplorer.attributes,\n  };\n\n  const { queryParams: optionsQueryParams } =\n    useQueryParams(initialOptionsParams);\n\n  const {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n  } = queryParams;\n\n  const topTemplatesParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialTopTemplateParams,\n  };\n\n  const topWorkflowParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialTopWorkflowParams,\n  };\n\n  const topModuleParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialModuleParams,\n  };\n\n  useEffect(() => {\n    async function initializeWithPreflight() {\n      await preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n      setOptions(readClustersOptions({ params: optionsQueryParams }));\n    }\n\n    initializeWithPreflight();\n  }, []);\n\n  // Get and update the data\n  useEffect(() => {\n    const fetchEndpoints = () => {\n      setData(readJobExplorer({ params: queryParams }));\n      setTemplates(readJobExplorer({ params: topTemplatesParams }));\n      setWorkflows(readJobExplorer({ params: topWorkflowParams }));\n      setModules(readEventExplorer({ params: topModuleParams }));\n    };\n    fetchEndpoints();\n  }, [queryParams]);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Clusters'} />\n        <FilterableToolbar\n          categories={options}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      {(preflightError || error) && (\n        <Main>\n          {preflightError ? (\n            <EmptyState {...preflightError} />\n          ) : (\n            <ApiErrorState message={error.error} />\n          )}\n        </Main>\n      )}\n      {!preflightError && !error && (\n        <Main>\n          <Card>\n            <PFCardTitle>\n              <h2>Job status</h2>\n            </PFCardTitle>\n            <CardBody>\n              {isLoading && <LoadingState />}\n              {queryParams.cluster_id.length <= 0 && isSuccess && (\n                <BarChart\n                  margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                  id=\"d3-bar-chart-root\"\n                  data={chartData}\n                  templateId={queryParams.template_id}\n                  orgId={queryParams.org_id}\n                />\n              )}\n              {queryParams.cluster_id.length > 0 && isSuccess && (\n                <LineChart\n                  margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                  id=\"d3-line-chart-root\"\n                  data={chartData}\n                  clusterId={queryParams.cluster_id}\n                  templateId={queryParams.template_id}\n                  orgId={queryParams.org_id}\n                />\n              )}\n            </CardBody>\n          </Card>\n          <div\n            className=\"dataCard\"\n            style={{ display: 'flex', marginTop: '20px' }}\n          >\n            <TemplatesList\n              qp={queryParams}\n              templates={workflows}\n              isLoading={isLoading}\n              title={'Top workflows'}\n              jobType={'workflowjob'}\n            />\n            <TemplatesList\n              qp={queryParams}\n              templates={templates}\n              isLoading={isLoading}\n              title={'Top templates'}\n              jobType={'job'}\n            />\n            <ModulesList modules={modules} isLoading={isLoading} />\n          </div>\n        </Main>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Clusters;\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst NoResults = () => {\n  return (\n    <EmptyState variant={EmptyStateVariant.full}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title size=\"lg\" headingLevel=\"h4\">\n        No results found\n      </Title>\n      <EmptyStateBody>\n        No results match the filter criteria. Remove all filters or clear all\n        filters to show results.\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n\nexport default NoResults;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ClockIcon,\n  SyncAltIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\n\nconst JobStatus = ({ status }) => {\n  const capitalized = (str) => str.charAt(0).toUpperCase() + str.slice(1);\n\n  const getColor = () => {\n    switch (status) {\n      case 'successful':\n        return 'green';\n      case 'failed':\n      case 'error':\n        return 'red';\n      case 'running':\n      case 'pending':\n        return 'blue';\n      case 'canceled':\n        return 'orange';\n      // case new, waiting\n      default:\n        return 'grey';\n    }\n  };\n\n  const getIcon = () => {\n    switch (status) {\n      case 'successful':\n        return <CheckCircleIcon />;\n      case 'failed':\n      case 'error':\n        return <ExclamationCircleIcon />;\n      case 'running':\n        return <SyncAltIcon />;\n      case 'canceled':\n        return <ExclamationTriangleIcon />;\n      // case new, waiting, pending\n      default:\n        return <ClockIcon />;\n    }\n  };\n\n  return (\n    <Label variant=\"outline\" color={getColor()} icon={getIcon()}>\n      {capitalized(status)}\n    </Label>\n  );\n};\n\nJobStatus.propTypes = {\n  status: PropTypes.oneOf([\n    'successful',\n    'failed',\n    'error',\n    'running',\n    'new',\n    'waiting',\n    'pending',\n    'canceled',\n  ]),\n};\n\nexport default JobStatus;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  DataListCell as PFDataListCell,\n  DataListContent,\n  DataList,\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells as PFDataListItemCells,\n  DataListToggle as PFDataListToggle,\n  Tooltip,\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkIcon } from '@patternfly/react-icons';\n\nimport LoadingState from '../Components/LoadingState';\nimport { formatDateTime, formatJobType } from '../Utilities/helpers';\nimport JobStatus from './JobStatus';\n\nconst headerLabels = ['Id/Name', 'Status', 'Cluster', 'Organization', 'Type'];\n\nconst ExternalLinkIcon = styled(PFExternalLinkIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n`;\n\nconst DataListCell = styled(PFDataListCell)`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  text-align: center;\n`;\n\nconst DataListCellHeader = styled(DataListCell)`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  font-weight: bold;\n`;\n\nconst DataListItemCells = styled(PFDataListItemCells)`\n  align-items: center;\n`;\n\nconst DataListToggle = styled(PFDataListToggle)`\n  align-items: center;\n`;\n\nconst mobileBreakpoint = 765;\n\nconst buildHeader = (labels) => (\n  <DataListItem>\n    <DataListItemRow style={{ paddingLeft: '80px' }}>\n      <DataListItemCells\n        dataListCells={labels.map((label) => (\n          <DataListCellHeader key={label}>\n            {label}\n            {label === 'Id/Name' && <ExternalLinkIcon />}\n          </DataListCellHeader>\n        ))}\n      />\n    </DataListItemRow>\n  </DataListItem>\n);\n\nconst buildListRow = (items, ariaLabel, ariaLabelledBy, windowWidth) => {\n  const [isExpanded, setIsExpanded] = useState([]);\n\n  return (\n    <>\n      {items.map((item, count) => {\n        const toggle = (id) => {\n          const expanded = isExpanded;\n          const idx = expanded.indexOf(id);\n          const newExpanded =\n            idx >= 0\n              ? [\n                  ...expanded.slice(0, idx),\n                  ...expanded.slice(idx + 1, expanded.length),\n                ]\n              : [...expanded, id];\n          setIsExpanded(newExpanded);\n        };\n\n        return (\n          <DataListItem\n            key={item.id.id}\n            aria-labelledby={ariaLabelledBy}\n            isExpanded={isExpanded.includes(`${item.id.id}-toggle`)}\n          >\n            <DataListItemRow key={item.id.id}>\n              <DataListToggle\n                id={`${item.id.id}-toggle`}\n                aria-controls={`${item.id.id}-expand`}\n                onClick={() => toggle(`${item.id.id}-toggle`)}\n                isExpanded={isExpanded.includes(`${item.id.id}-toggle`)}\n              />\n              <DataListItemCells\n                dataListCells={[\n                  <DataListCell key={count++}>\n                    <a\n                      href={item.id.tower_link}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {windowWidth < mobileBreakpoint && (\n                        <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                          Id/Name\n                          <ExternalLinkIcon />:\n                        </span>\n                      )}\n                      &nbsp;\n                      {`${item.id.id} - ${item.id.template_name}`}\n                    </a>\n                  </DataListCell>,\n                  <DataListCell key={count++}>\n                    {windowWidth <= mobileBreakpoint && (\n                      <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Status:\n                      </span>\n                    )}\n                    &nbsp;\n                    <JobStatus status={item.status} />\n                  </DataListCell>,\n                  <Tooltip key={count++} content={<p>{item.cluster_name}</p>}>\n                    <DataListCell>\n                      {windowWidth <= mobileBreakpoint && (\n                        <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                          Cluster:\n                        </span>\n                      )}\n                      &nbsp;\n                      {item.cluster_name}\n                    </DataListCell>\n                  </Tooltip>,\n                  <DataListCell key={count++}>\n                    {windowWidth <= mobileBreakpoint && (\n                      <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Organization:\n                      </span>\n                    )}\n                    &nbsp;\n                    {item.org_name}\n                  </DataListCell>,\n                  <DataListCell key={count++}>\n                    {windowWidth <= mobileBreakpoint && (\n                      <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Type:\n                      </span>\n                    )}\n                    &nbsp;\n                    {formatJobType(item.job_type)}\n                  </DataListCell>,\n                ]}\n              />\n            </DataListItemRow>\n            <DataListContent\n              aria-label={`${item.id.id}-details`}\n              id={'${item.id.id}'}\n              isHidden={!isExpanded.includes(`${item.id.id}-toggle`)}\n            >\n              <DataListItemCells\n                dataListCells={[\n                  <DataListCell key={count++}>\n                    Created: {formatDateTime(item.created)}\n                  </DataListCell>,\n                  <DataListCell key={count++}>\n                    Started: {formatDateTime(item.started)}\n                  </DataListCell>,\n                  <DataListCell key={count++}>\n                    Finished: {formatDateTime(item.finished)}\n                  </DataListCell>,\n                ]}\n              />\n            </DataListContent>\n          </DataListItem>\n        );\n      })}\n    </>\n  );\n};\n\nconst AllJobsTemplate = ({ jobs }) => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  const onResize = () => setWindowWidth(window.innerWidth);\n\n  useEffect(() => {\n    window.addEventListener('resize', onResize);\n    return () => window.removeEventListener('resize', onResize);\n  }, []);\n\n  return buildListRow(jobs, 'All jobs view', 'all-jobs', windowWidth);\n};\n\nconst JobExplorerList = ({ jobs }) => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  const onResize = () => setWindowWidth(window.innerWidth);\n\n  useEffect(() => {\n    window.addEventListener('resize', onResize);\n    return () => window.removeEventListener('resize', onResize);\n  }, []);\n\n  return (\n    <>\n      {jobs.length <= 0 && <LoadingState />}\n      <DataList isCompact>\n        {windowWidth >= mobileBreakpoint && buildHeader(headerLabels)}\n        <AllJobsTemplate jobs={jobs} windowWidth={windowWidth} />\n      </DataList>\n    </>\n  );\n};\n\nJobExplorerList.propTypes = {\n  jobs: PropTypes.array,\n  windowWidth: PropTypes.number,\n};\n\nAllJobsTemplate.propTypes = {\n  jobs: PropTypes.array,\n  windowWidth: PropTypes.number,\n};\n\nexport default JobExplorerList;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { parse, stringify } from 'query-string';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { Paths } from '../../paths';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoResults from '../../Components/NoResults';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport Pagination from '../../Components/Pagination';\n\nimport {\n  preflightRequest,\n  readJobExplorer,\n  readJobExplorerOptions,\n} from '../../Api';\nimport { jobExplorer } from '../../Utilities/constants';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport { Card, CardBody, PaginationVariant } from '@patternfly/react-core';\n\nimport JobExplorerList from '../../Components/JobExplorerList';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\nconst initialQueryParams = {\n  ...jobExplorer.defaultParams,\n  attributes: jobExplorer.attributes,\n};\n\nconst JobExplorer = ({ location: { search }, history }) => {\n  const [preflightError, setPreFlightError] = useState(null);\n  const [\n    {\n      isLoading,\n      isSuccess,\n      error,\n      data: { meta = {}, items: data = [] },\n    },\n    setData,\n  ] = useApi({ meta: {}, items: [] });\n  const [options, setOptions] = useApi({});\n\n  const { queryParams, setFromPagination, setFromToolbar, dispatch } =\n    useQueryParams(initialQueryParams);\n\n  const updateURL = () => {\n    const { jobExplorer } = Paths;\n    const search = stringify(queryParams, { arrayFormat: 'bracket' });\n    history.replace({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'job-explorer', secondaryNav: true });\n\n    preflightRequest().catch((error) => {\n      setPreFlightError({ preflightError: error });\n    });\n\n    const initialSearchParams = parse(search, {\n      arrayFormat: 'bracket',\n      parseBooleans: true,\n      parseNumbers: true,\n    });\n\n    dispatch({\n      type: 'REINITIALIZE',\n      value: {\n        ...initialQueryParams,\n        ...initialSearchParams,\n      },\n    });\n  }, []);\n\n  useEffect(() => {\n    setData(readJobExplorer({ params: queryParams }));\n    setOptions(readJobExplorerOptions({ params: queryParams }));\n    updateURL();\n  }, [queryParams]);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Job Explorer'} />\n      </PageHeader>\n\n      {preflightError && (\n        <Main>\n          <EmptyState {...preflightError} />\n        </Main>\n      )}\n\n      {!preflightError && (\n        <Main>\n          <Card>\n            <CardBody>\n              <FilterableToolbar\n                categories={options.data}\n                filters={queryParams}\n                setFilters={setFromToolbar}\n                pagination={\n                  <Pagination\n                    count={meta?.count}\n                    params={{\n                      limit: queryParams.limit,\n                      offset: queryParams.offset,\n                    }}\n                    setPagination={setFromPagination}\n                    isCompact\n                  />\n                }\n                hasSettings\n              />\n              {error && <ApiErrorState message={error.error} />}\n              {isLoading && <LoadingState />}\n              {isSuccess && data.length <= 0 && <NoResults />}\n              {isSuccess && data.length > 0 && <JobExplorerList jobs={data} />}\n              <Pagination\n                count={meta?.count}\n                params={{\n                  limit: queryParams.limit,\n                  offset: queryParams.offset,\n                }}\n                setPagination={setFromPagination}\n                variant={PaginationVariant.bottom}\n              />\n            </CardBody>\n          </Card>\n        </Main>\n      )}\n    </React.Fragment>\n  );\n};\n\nJobExplorer.propTypes = {\n  location: PropTypes.object,\n  history: PropTypes.object,\n};\n\nexport default JobExplorer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nimport {\n  NotificationDrawerList as PFNotificationDrawerList,\n  NotificationDrawerListItem as PFNotificationDrawerListItem,\n  NotificationDrawerListItemBody,\n  NotificationDrawerListItemHeader,\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkAltIcon } from '@patternfly/react-icons';\nimport LoadingState from '../Components/LoadingState';\nimport { capitalize } from '../Utilities/helpers';\n\nconst ExternalLinkAltIcon = styled(PFExternalLinkAltIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n  font-size: 14px;\n`;\n\nconst NotificationDrawerListItem = styled(PFNotificationDrawerListItem)`\n  border-top: 1px solid var(--pf-global--BorderColor--light-100\n    );\n  border-bottom::nth-child(odd): 1px solid var(--pf-global--BorderColor--light-100\n    );\n  box-shadow: none;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst NotificationDrawerList = styled(PFNotificationDrawerList)`\n  &:last-child {\n    border-bottom: 1px solid var(--pf-global--BorderColor--light-100);\n  }\n`;\n\nconst stringifyDate = (date) => {\n  const day = moment(date);\n  const oneHour = 60 * 60 * 1000;\n  const now = moment().utc();\n\n  if (now.isAfter(day)) {\n    return `${now.diff(day, 'days')} day(s) ago.`;\n  }\n\n  if (day.isSame(now, 'day')) {\n    if (day.valueOf() > oneHour) {\n      return `${day.diff(now, 'hours')} hour(s) ago.`;\n    }\n\n    return `${now.diff(day, 'minutes')} minute(s) ago.`;\n  }\n};\n\nconst AllNotificationTemplate = ({ notifications }) =>\n  notifications.map(\n    ({ date, message, label, notification_id: id, tower_url: url }) => {\n      if (label === '' || label === 'notice') {\n        return (\n          <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"info\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n\n      if (label === 'error') {\n        return (\n          <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"danger\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n\n      if (label === 'warning') {\n        return (\n          <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"warning\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n    }\n  );\n\nconst ErrorNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'error')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"danger\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst NoticeNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'notice')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"info\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst WarningNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'warning')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"warning\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst NotificationsList = ({ filterBy, notifications }) => (\n  <>\n    <NotificationDrawerList>\n      {notifications.length <= 0 && <LoadingState />}\n      {filterBy === '' && (\n        <AllNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'notice' && (\n        <NoticeNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'error' && (\n        <ErrorNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'warning' && (\n        <WarningNotificationTemplate notifications={notifications} />\n      )}\n    </NotificationDrawerList>\n  </>\n);\n\nAllNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nErrorNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nWarningNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nNotificationsList.propTypes = {\n  notifications: PropTypes.array,\n  filterBy: PropTypes.string,\n};\n\nexport default NotificationsList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoData from '../../Components/NoData';\nimport { preflightRequest, readClusters, readNotifications } from '../../Api';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle as PFCardTitle,\n  FormSelect,\n  FormSelectOption,\n  PaginationVariant,\n  NotificationDrawer,\n} from '@patternfly/react-core';\n\nimport NotificationsList from '../../Components/NotificationsList';\nimport Pagination from '../../Components/Pagination';\n\nconst CardTitle = styled(PFCardTitle)`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n`;\n\nconst DropdownGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-end;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n\n  select {\n    margin: 0 10px;\n    width: 150px;\n\n    @media screen and (max-width: 1035px) {\n      margin: 10px 10px 0 0;\n    }\n\n    @media screen and (max-width: 865px) {\n      width: 100%;\n    }\n  }\n`;\n\nconst notificationOptions = [\n  {\n    value: 'please choose',\n    label: 'Select Notification Severity',\n    disabled: true,\n  },\n  { value: 'error', label: 'View Critical', disabled: false },\n  { value: 'warning', label: 'View Warning', disabled: false },\n  { value: 'notice', label: 'View Notice', disabled: false },\n  { value: '', label: 'View All', disabled: false },\n];\n\nfunction formatClusterName(data) {\n  const defaultClusterOptions = [\n    { value: 'please choose', label: 'Select cluster', disabled: true },\n    { value: '', label: 'All Clusters', disabled: false },\n    { value: -1, label: 'Unassociated', disabled: false },\n  ];\n  return data.reduce(\n    (formatted, { label, cluster_id: id, install_uuid: uuid }) => {\n      if (label.length === 0) {\n        formatted.push({ value: id, label: uuid, disabled: false });\n      } else {\n        formatted.push({ value: id, label, disabled: false });\n      }\n\n      return formatted;\n    },\n    defaultClusterOptions\n  );\n}\n\nconst initialQueryParams = {\n  limit: 5,\n  offset: 0,\n};\n\nconst Notifications = () => {\n  const [preflightError, setPreFlightError] = useState(null);\n  const [notificationsData, setNotificationsData] = useState([]);\n  const [clusterOptions, setClusterOptions] = useState([]);\n  const [selectedCluster, setSelectedCluster] = useState('');\n  const [firstRender, setFirstRender] = useState(true);\n  const [isLoading, setIsLoading] = useState(true);\n  const [meta, setMeta] = useState({});\n  const { queryParams, setId, setFromPagination, setSeverity } =\n    useQueryParams(initialQueryParams);\n\n  useEffect(() => {\n    if (firstRender) {\n      return;\n    }\n\n    const getData = () => {\n      return readNotifications({ params: queryParams });\n    };\n\n    const update = () => {\n      setIsLoading(true);\n      getData().then(({ notifications: notificationsData = [], meta }) => {\n        setNotificationsData(notificationsData);\n        setMeta(meta);\n        setIsLoading(false);\n      });\n    };\n\n    update();\n  }, [queryParams]);\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'notifications', secondaryNav: true });\n\n    let ignore = false;\n    const fetchEndpoints = () => {\n      return Promise.all(\n        [readClusters(), readNotifications({ params: queryParams })].map((p) =>\n          p.catch(() => [])\n        )\n      );\n    };\n\n    async function initializeWithPreflight() {\n      setIsLoading(true);\n      await preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n      fetchEndpoints().then(\n        ([\n          { templates: clustersData = [] },\n          { notifications: notificationsData = [], meta },\n        ]) => {\n          if (!ignore) {\n            const clusterOptions = formatClusterName(clustersData);\n            setClusterOptions(clusterOptions);\n            setNotificationsData(notificationsData);\n            setMeta(meta);\n            setFirstRender(false);\n            setIsLoading(false);\n          }\n        }\n      );\n    }\n\n    initializeWithPreflight();\n    return () => (ignore = true);\n  }, []);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Notifications'} />\n      </PageHeader>\n      {preflightError && (\n        <Main>\n          <EmptyState {...preflightError} />\n        </Main>\n      )}\n      {!preflightError && (\n        <>\n          <Main>\n            <Card>\n              <CardTitle>\n                <DropdownGroup>\n                  <FormSelect\n                    name=\"selectedCluster\"\n                    value={selectedCluster}\n                    onChange={(value) => {\n                      setSelectedCluster(value);\n                      setId(value);\n                      setFromPagination(0);\n                    }}\n                    aria-label=\"Select Cluster\"\n                  >\n                    {clusterOptions.map(({ value, label, disabled }, index) => (\n                      <FormSelectOption\n                        isDisabled={disabled}\n                        key={index}\n                        value={value}\n                        label={label}\n                      />\n                    ))}\n                  </FormSelect>\n                  <FormSelect\n                    name=\"selectedNotification\"\n                    value={queryParams.severity || ''}\n                    onChange={(value) => {\n                      setSeverity(value);\n                      setFromPagination(0);\n                    }}\n                    aria-label=\"Select Notification Type\"\n                  >\n                    {notificationOptions.map(\n                      ({ disabled, value, label }, index) => (\n                        <FormSelectOption\n                          isDisabled={disabled}\n                          key={index}\n                          value={value}\n                          label={label}\n                        />\n                      )\n                    )}\n                  </FormSelect>\n                </DropdownGroup>\n                <Pagination\n                  count={meta?.count}\n                  params={{\n                    limit: queryParams.limit,\n                    offset: queryParams.offset,\n                  }}\n                  setPagination={setFromPagination}\n                  isCompact\n                />\n              </CardTitle>\n              <CardBody>\n                {isLoading && <LoadingState />}\n                {!isLoading && notificationsData.length <= 0 && <NoData />}\n                {!isLoading && notificationsData.length > 0 && (\n                  <NotificationDrawer>\n                    <NotificationsList\n                      filterBy={queryParams.severity || ''}\n                      options={notificationOptions}\n                      notifications={notificationsData}\n                    />\n                  </NotificationDrawer>\n                )}\n                <Pagination\n                  count={meta?.count}\n                  params={{\n                    limit: queryParams.limit,\n                    offset: queryParams.offset,\n                  }}\n                  setPagination={setFromPagination}\n                  variant={PaginationVariant.bottom}\n                />\n              </CardBody>\n            </Card>\n          </Main>\n        </>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Notifications;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Switch } from '@patternfly/react-core';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  overflow: auto;\n  width: 100%;\n  height: ${(props) => props.height};\n`;\n\nconst LegendDetail = styled.div`\n  display: flex;\n  padding: 7.5px 15px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  overflow: auto;\n`;\n\nconst Color = styled.div.attrs((props) => ({\n  color: props.color || 'black',\n}))`\n  min-width: 12px;\n  height: 12px;\n  background: ${(props) => props.color};\n  margin-right: 20px;\n`;\n\nconst Title = styled.span`\n  font-size: 15px;\n  display: inline-block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n`;\n\nconst SubTitle = styled.span`\n  font-size: 15px;\n  margin-left: auto;\n  margin-right: 0;\n  padding-right: 10px;\n`;\n\nconst Legend = ({ data, selected, height, onToggle, chartName }) => {\n  return (\n    <Container height={height}>\n      {data.map(({ name, value, id, count }, index) => (\n        <LegendDetail key={index}>\n          <Wrapper>\n            <Color color={value} />\n            <Title>{name}</Title>\n          </Wrapper>\n          {count && <SubTitle>{count}</SubTitle>}\n          {selected && (\n            <Switch\n              isChecked={selected.some((selection) => selection === id)}\n              onChange={() => onToggle(id)}\n              aria-label={`${chartName}-${name}`}\n              value={id}\n              key={index}\n            />\n          )}\n        </LegendDetail>\n      ))}\n    </Container>\n  );\n};\n\nLegend.propTypes = {\n  data: PropTypes.array.isRequired,\n  selected: PropTypes.array.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  height: PropTypes.string.isRequired,\n  chartName: PropTypes.string.isRequired,\n};\n\nexport default Legend;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport styled from 'styled-components';\n\nimport initializeChart from '.././BaseChart';\nimport Legend from '../../Utilities/Legend';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nconst GroupedBarChart = ({\n  onClick = null,\n  TooltipClass,\n  legend,\n  ...props\n}) => {\n  const colors = legend.map(({ id, name }) => {\n    return {\n      name,\n      value: props.colorFunc(id),\n      id,\n    };\n  });\n  const [selectedIds, setSelectedIds] = useState(\n    legend.map(({ id }) => id).slice(0, 8)\n  );\n  let timeout = null;\n\n  const handleToggle = (id) => {\n    if (selectedIds.includes(id)) {\n      setSelectedIds(selectedIds.filter((el) => el !== id));\n    } else {\n      setSelectedIds([...selectedIds, id]);\n    }\n  };\n\n  const draw = () => {\n    // Clear our chart container element first\n    d3.selectAll('#' + props.id + ' > *').remove();\n    let { data: unformattedData } = props;\n    const data = unformattedData.reduce((formatted, { date, items }) => {\n      const selectedOrgs = items.filter(({ id }) => selectedIds.includes(id));\n      return formatted.concat({ date, selectedOrgs });\n    }, []);\n    const width = props.getWidth();\n    const height = props.getHeight();\n    // x scale of entire chart\n    const x0 = d3.scaleBand().range([0, width]).padding(0.35);\n    // x scale of individual grouped bars\n    const x1 = d3.scaleBand();\n    const y = d3.scaleLinear().range([height, 0]);\n    // format our X Axis ticks\n    const maxTicksOneMonth = Math.round(data.length / (data.length / 2));\n    const maxTicksTwoMonths = Math.round(data.length / (data.length / 4));\n    let ticks = data.map((d) => d.date);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) =>\n          i % (data.length > 31 ? maxTicksTwoMonths : maxTicksOneMonth) === 0\n            ? d.date\n            : undefined\n        )\n        .filter((item) => item);\n    }\n\n    const xAxis = d3.axisBottom(x0).tickValues(ticks).tickFormat(formatDate);\n\n    const yAxis = d3.axisLeft(y).ticks(8).tickSize(-width, 0, 0);\n\n    const svg = d3\n      .select('#' + props.id)\n      .append('svg')\n      .attr('width', width + props.margin.left + props.margin.right)\n      .attr('height', height + props.margin.bottom + props.margin.top)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' + props.margin.left + ',' + props.margin.top + ')'\n      );\n\n    const dates = data.map((d) => d.date);\n    const tooltip = new TooltipClass({\n      svg: '#' + props.id,\n    });\n    x0.domain(dates);\n    x1.domain(selectedIds).range([0, x0.bandwidth()]);\n    y.domain([\n      0,\n      d3.max(data, (date) =>\n        d3.max(date.selectedOrgs, (d) => d.value * 1.15)\n      ) || 8,\n    ]);\n\n    // add y axis\n    svg\n      .append('g')\n      .attr('class', 'y axis')\n      .call(yAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7')\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 6)\n      .attr('dy', '.71em')\n      .style('text-anchor', 'end')\n      .style('font-weight', 'bold')\n      .text('Value');\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text(props.yLabel);\n\n    // add x axis\n    svg\n      .append('g')\n      .attr('class', 'x axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' + width / 2 + ' ,' + (height + props.margin.top + 25) + ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n    // add the groups\n    let slice = svg.selectAll('.slice').data(data);\n    slice.exit().remove();\n\n    const enter = slice\n      .enter()\n      .append('g')\n      .attr('class', 'g foo')\n      .attr('transform', (d) => 'translate(' + x0(d.date) + ',0)');\n    slice = slice.merge(enter);\n    // add the individual bars\n    let bars = slice.selectAll('rect').data(function (d) {\n      return d.selectedOrgs;\n    });\n    bars.exit().remove();\n\n    const color = props.colorFunc;\n    const subEnter = bars\n      .enter()\n      .append('rect')\n      .attr('width', x1.bandwidth())\n      .attr('x', function (d) {\n        return x1(d.id);\n      }) // unsorted\n      .style('fill', function (d) {\n        return color(d.id);\n      })\n      .attr('y', function (d) {\n        return y(d.value);\n      })\n      .attr('height', function (d) {\n        return height - y(d.value);\n      })\n      .on('mouseover', function (d) {\n        d3.select(this).style('cursor', onClick ? 'pointer' : 'default');\n        d3.select(this).style('fill', d3.rgb(color(d.id)).darker(1));\n        tooltip.handleMouseOver();\n      })\n      .on('mousemove', tooltip.handleMouseOver)\n      .on('mouseout', function (d) {\n        d3.select(this).style('fill', color(d.id));\n        tooltip.handleMouseOut();\n      })\n      .on('click', onClick);\n    bars = bars.merge(subEnter);\n  };\n\n  const init = () => {\n    draw();\n  };\n\n  const resize = () => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      draw();\n    }, 500);\n  };\n\n  useEffect(() => {\n    init();\n    window.addEventListener('resize', resize);\n\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [props.data, selectedIds]);\n\n  return (\n    <Wrapper>\n      <div id={props.id} />\n      {colors.length > 0 && (\n        <Legend\n          id={`${props.id}-legend`}\n          data={colors}\n          selected={selectedIds}\n          onToggle={handleToggle}\n          height=\"350px\"\n          chartName={`${props.id}-legend`}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nGroupedBarChart.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  legend: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  colorFunc: PropTypes.func,\n  yLabel: PropTypes.string,\n  onClick: PropTypes.func,\n  TooltipClass: PropTypes.any.isRequired,\n};\n\nGroupedBarChart.defaultProps = {\n  legend: [],\n};\n\nexport default initializeChart(GroupedBarChart);\n","import * as d3 from 'd3';\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class OrgsTooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', 68)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 14)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Date');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 72)\n      .attr('y', 14)\n      .text('0 Jobs');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', -1)\n      .attr('font-size', 12)\n      .text('Org');\n    this.clickMore = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 20)\n      .attr('y', 30)\n      .attr('font-size', 12)\n      .text('Click for details');\n  }\n\n  handleMouseOver = (d) => {\n    let date;\n    let orgName;\n    let jobs;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    } else {\n      const maxLength = 16;\n      date = d.date;\n      orgName = d.name;\n      jobs = d.value;\n      if (d.name.length > maxLength) {\n        orgName = d.name.slice(0, maxLength).concat('...');\n      }\n    }\n\n    const formatTooltipDate = formatDate;\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.date.text('' + formatTooltipDate(date));\n    this.orgName.text('' + orgName);\n    this.jobs.text('' + jobs + ' Jobs');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 45;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n      this.orgName.attr('x', -adjustedWidth - 7);\n      this.clickMore.attr('x', -adjustedWidth - 7);\n      this.date.attr('x', -adjustedWidth - 7);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.clickMore.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth / 2);\n      this.date.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import * as d3 from 'd3';\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class HostsTooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', 68)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 14)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Date');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 72)\n      .attr('y', 14)\n      .text('0 Jobs');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', -1)\n      .attr('font-size', 12)\n      .text('Org');\n    this.clickMore = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 20)\n      .attr('y', 30)\n      .attr('font-size', 12)\n      .text('Click for details');\n  }\n\n  handleMouseOver = (d) => {\n    let date;\n    let orgName;\n    let jobs;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    } else {\n      const maxLength = 16;\n      date = d.date;\n      orgName = d.name;\n      jobs = d.value;\n      if (d.name.length > maxLength) {\n        orgName = d.name.slice(0, maxLength).concat('...');\n      }\n    }\n\n    const formatTooltipDate = formatDate;\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.date.text('' + formatTooltipDate(date));\n    this.orgName.text('' + orgName);\n    this.jobs.text('' + jobs + ' Hosts');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 45;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n      this.orgName.attr('x', -adjustedWidth - 7);\n      this.clickMore.attr('x', -adjustedWidth - 7);\n      this.date.attr('x', -adjustedWidth - 7);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.clickMore.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth / 2);\n      this.date.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport { getTotal } from '../Utilities/helpers';\nimport Legend from '../Utilities/Legend';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nclass Tooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    // defer drawing until we know the data shape\n    this.drawn = false;\n    // show the success rate or not\n    this.showSuccess = false;\n  }\n\n  draw(d) {\n    // chart1 has success rate data and chart2 does not ...\n    this.showSuccess = d && d.data && 'success_rate' in d.data ? true : false;\n    const boundingHeight = this.showSuccess ? 70 : 52;\n    const boundingWidth = this.showSuccess ? 120 : 108;\n\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBOx = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', boundingHeight)\n      .attr('width', boundingWidth)\n      .attr('fill', '#393f44');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 0)\n      .text('Organization');\n    this.percentageTotal = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 16)\n      .text('0');\n    this.percentageSuccess = null;\n    if (this.showSuccess) {\n      this.percentageSuccess = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 30)\n        .text('');\n    }\n  }\n\n  handleMouseOver = (d) => {\n    // treat draw() as a singleton to avoid a painted window effect\n    if (this.drawn !== true) {\n      this.draw(d);\n      this.drawn = true;\n    }\n\n    let perc;\n    let percSuccess;\n    let orgName;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    }\n\n    if (d && d.data) {\n      const maxLength = 16;\n      perc = d.data.percent;\n      percSuccess = d.data.success_rate;\n      orgName = d.data.name;\n      if (d.data.name.length > maxLength) {\n        orgName = d.data.name.slice(0, maxLength - 3).concat('...');\n      }\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.percentageTotal.text('' + perc + '%');\n    if (percSuccess && this.percentageSuccess) {\n      this.percentageSuccess.text('(' + percSuccess + '% successful)');\n    }\n\n    this.orgName.text(' ' + orgName);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, -10) rotate(45)');\n      this.boundingBOx.attr('x', -125);\n      this.orgName.attr('x', -112);\n      this.percentageTotal.attr('x', -112);\n      if (this.showSuccess) {\n        this.percentageSuccess.attr('x', -112);\n      }\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, -10) rotate(45)');\n      this.boundingBOx.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.percentageTotal.attr('x', 20);\n      if (this.showSuccess) {\n        this.percentageSuccess.attr('x', 20);\n      }\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nconst PieChart = ({\n  data,\n  id,\n  colorFunc: color,\n  margin,\n  getWidth,\n  getHeight,\n}) => {\n  const colors = data\n    .map(({ id, name, count }) => {\n      return {\n        id,\n        name,\n        value: color(id),\n        count: Math.round(count),\n      };\n    })\n    .sort((a, b) => (a.count > b.count ? 1 : b.count > a.count ? -1 : 0));\n\n  const [selectedIds, setSelectedIds] = useState(\n    data.map(({ id }) => id).slice(0, 8)\n  );\n\n  let timeout = null;\n\n  const handleToggle = (id) => {\n    if (selectedIds.includes(id)) {\n      setSelectedIds(selectedIds.filter((el) => el !== id));\n    } else {\n      setSelectedIds([...selectedIds, id]);\n    }\n  };\n\n  const draw = () => {\n    d3.selectAll('#' + id + ' > *').remove();\n    const width = getWidth();\n    const height = getHeight();\n    const svg = d3\n      .select('#' + id)\n      .append('svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.bottom)\n      .append('g');\n\n    svg.append('g').attr('class', 'slices');\n    svg.append('g').attr('class', 'labels');\n    svg.append('g').attr('class', 'lines');\n    const radius = Math.min(width, height) / 2;\n    const filteredData = data.filter(({ id }) => selectedIds.includes(id));\n    const total = getTotal(filteredData);\n    filteredData.forEach(function (d) {\n      d.count = +d.count;\n      d.percent = +Math.round((d.count / total) * 100);\n    });\n    const donutTooltip = new Tooltip({\n      svg: '#' + id,\n    });\n    const pie = d3\n      .pie()\n      .sort(null)\n      .value((d) => d.count);\n    const arc = d3\n      .arc()\n      .outerRadius(radius - 10) // controls top positioning of chart\n      .innerRadius(0);\n\n    svg.attr(\n      'transform',\n      'translate(' +\n        (width + margin.left + margin.right) / 2 +\n        ',' +\n        (height + margin.top + margin.bottom) / 2 +\n        ')'\n    );\n\n    svg\n      .selectAll('path')\n      .data(pie(filteredData))\n      .enter()\n      .append('path')\n      .attr('d', arc)\n      .attr('fill', (d) => color(d.data.id));\n\n    svg\n      .selectAll('path')\n      .on('mouseover', function (d) {\n        d3.select(this).style('fill', d3.rgb(color(d.data.id)).darker(1));\n        donutTooltip.handleMouseOver(d);\n      })\n      .on('mouseout', function (d) {\n        d3.select(this).style('fill', color(d.data.id));\n        donutTooltip.handleMouseOut();\n      })\n      .on('mousemove', donutTooltip.handleMouseOver);\n\n    svg.append('g').classed('labels', true);\n    svg.append('g').classed('lines', true);\n  };\n\n  const init = () => {\n    draw();\n  };\n\n  const resize = () => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      draw();\n    }, 500);\n  };\n\n  useEffect(() => {\n    init();\n    window.addEventListener('resize', resize);\n\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [data, selectedIds]);\n\n  return (\n    <Wrapper>\n      <div id={id} />\n      {colors.length > 0 && (\n        <Legend\n          id={`${id}-legend`}\n          data={colors}\n          selected={selectedIds}\n          onToggle={handleToggle}\n          height=\"300px\"\n          chartName={`${id}-legend`}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nPieChart.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  colorFunc: PropTypes.func,\n};\n\nexport default initializeChart(PieChart);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { formatDate as dateForJobExplorer } from '../../Utilities/helpers';\n\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport {\n  preflightRequest,\n  readJobExplorer,\n  readHostExplorer,\n  readOrgOptions,\n} from '../../Api';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle as PFCardTitle,\n  Tabs,\n  Tab,\n} from '@patternfly/react-core';\n\nimport {\n  GroupedBarChart,\n  OrgsTooltip,\n  HostsTooltip,\n} from '../../Charts/GroupedBarChart/';\nimport PieChart from '../../Charts/PieChart';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport { organizationStatistics as constants } from '../../Utilities/constants';\n\n// For chart colors\nimport { pfmulti } from '../../Utilities/colors';\nimport { scaleOrdinal } from 'd3';\n\nconst CardTitle = styled(PFCardTitle)`\n  border-bottom: 2px solid #ebebeb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &&& {\n    min-height: 60px;\n    --pf-c-card--first-child--PaddingTop: 10px;\n    --pf-c-card__header--not-last-child--PaddingBottom: 10px;\n\n    h3 {\n      font-size: 0.875em;\n    }\n  }\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  overflow: hidden;\n\n  .pf-c-card {\n    width: 50%;\n    margin-top: 20px;\n    overflow: auto;\n  }\n\n  .pf-c-card:first-of-type {\n    margin-right: 20px;\n  }\n`;\n\nconst TopCard = styled(Card)`\n  min-height: 500px;\n`;\n\nconst colorFunc = scaleOrdinal(pfmulti);\n\nconst orgsChartMapper =\n  (attrName) =>\n  ({ dates: data = [], meta }) => ({\n    data: data.map(({ date, items }) => ({\n      date,\n      items: items.map(({ id, [attrName]: value, name }) => ({\n        id,\n        date,\n        value,\n        name: name || 'No organization',\n      })),\n    })),\n    legend: meta.legend.map((el) => ({\n      ...el,\n      name: el.name || 'No organization',\n    })),\n  });\n\nconst pieChartMapper =\n  (attrName) =>\n  ({ items = [] }) =>\n    items.map(({ id, [attrName]: count, name }) => ({\n      id,\n      count,\n      name: name || 'No organization',\n    }));\n\nconst redirectToJobExplorer =\n  (toJobExplorer, queryParams) =>\n  ({ date, id }) => {\n    if (id === -1) {\n      // disable clicking on \"others\" block\n      return;\n    }\n\n    const { sort_by, ...rest } = queryParams;\n    const formattedDate = dateForJobExplorer(date);\n    const initialQueryParams = {\n      ...rest,\n      quick_date_range: 'custom',\n      start_date: formattedDate,\n      end_date: formattedDate,\n      status: [\n        'successful',\n        'failed',\n        'new',\n        'pending',\n        'waiting',\n        'error',\n        'canceled',\n        'running',\n      ],\n      org_id: [id],\n    };\n\n    toJobExplorer(initialQueryParams);\n  };\n\nconst chartMapper = [\n  {\n    api: readJobExplorer,\n    attr: 'total_count',\n    label: 'Jobs across organizations',\n    onClick: redirectToJobExplorer,\n    tooltip: OrgsTooltip,\n  },\n  {\n    api: readHostExplorer,\n    attr: 'total_unique_host_count',\n    label: 'Hosts across organizations',\n    onClick: () => null,\n    tooltip: HostsTooltip,\n  },\n];\n\nconst OrganizationStatistics = ({ history }) => {\n  const toJobExplorer = useRedirect(history, 'jobExplorer');\n  const [preflight, setPreflight] = useApi(null);\n  const [activeTabKey, setActiveTabKey] = useState(0);\n  const [orgs, setOrgs] = useApi(\n    [],\n    orgsChartMapper(chartMapper[activeTabKey].attr)\n  );\n  const [jobs, setJobs] = useApi([], pieChartMapper('total_count'));\n  const [tasks, setTasks] = useApi([], pieChartMapper('host_task_count'));\n  const [options, setOptions] = useApi({});\n  const { queryParams, setFromToolbar } = useQueryParams(\n    constants.defaultParams\n  );\n\n  const jobEventsByOrgParams = {\n    ...queryParams,\n    attributes: ['host_task_count'],\n    group_by: 'org',\n    include_others: true,\n    sort_by: `host_task_count:desc`,\n  };\n\n  const jobRunsByOrgParams = {\n    ...queryParams,\n    attributes: ['total_count'],\n    group_by: 'org',\n    include_others: true,\n    sort_by: `total_count:desc`,\n  };\n\n  const jobsByDateAndOrgParams = {\n    ...queryParams,\n    attributes: ['total_count'],\n    group_by: 'org',\n    group_by_time: true,\n    sort_by: `total_count:desc`,\n  };\n\n  const hostAcrossOrgParams = {\n    ...queryParams,\n    attributes: ['total_unique_host_count'],\n    group_by: 'org',\n    group_by_time: true,\n    sort_by: `host_task_count:desc`,\n  };\n\n  const handleTabClick = (_, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({\n      id: 'organization-statistics',\n      secondaryNav: true,\n    });\n    setPreflight(preflightRequest());\n    setOptions(readOrgOptions({ params: queryParams }));\n  }, []);\n\n  useEffect(() => {\n    const { api: readJobsOrHosts } = chartMapper[activeTabKey];\n    const params =\n      activeTabKey === 0 ? jobsByDateAndOrgParams : hostAcrossOrgParams;\n    setOrgs(readJobsOrHosts({ params }));\n  }, [queryParams, activeTabKey]);\n\n  useEffect(() => {\n    setJobs(readJobExplorer({ params: jobRunsByOrgParams }));\n    setTasks(readJobExplorer({ params: jobEventsByOrgParams }));\n  }, [queryParams]);\n\n  if (preflight?.error?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Organization Statistics'} />\n        <FilterableToolbar\n          categories={options.data}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      {preflight.error && (\n        <Main>\n          <EmptyState preflightError={preflight.error} />\n        </Main>\n      )}\n      {preflight.isSuccess && (\n        <React.Fragment>\n          <Main>\n            <TopCard>\n              <Tabs activeKey={activeTabKey} onSelect={handleTabClick}>\n                <Tab eventKey={0} title={'Jobs'} />\n                <Tab eventKey={1} title={'Hosts'} />\n              </Tabs>\n              <CardBody>\n                {orgs.isLoading && <LoadingState />}\n                {orgs.error && <ApiErrorState message={orgs.error.error} />}\n                {orgs.isSuccess && orgs.data?.data.length <= 0 && <NoData />}\n                {orgs.isSuccess && orgs.data?.data.length > 0 && (\n                  <GroupedBarChart\n                    margin={{ top: 20, right: 20, bottom: 50, left: 50 }}\n                    id=\"d3-grouped-bar-chart-root\"\n                    data={orgs.data.data}\n                    legend={orgs.data.legend}\n                    history={history}\n                    colorFunc={colorFunc}\n                    yLabel={chartMapper[activeTabKey].label}\n                    onClick={chartMapper[activeTabKey].onClick(\n                      toJobExplorer,\n                      queryParams\n                    )}\n                    TooltipClass={chartMapper[activeTabKey].tooltip}\n                  />\n                )}\n              </CardBody>\n            </TopCard>\n            <CardContainer>\n              <Card>\n                <CardBody style={{ padding: 0 }}>\n                  <CardTitle style={{ padding: 0 }}>\n                    <h2 style={{ marginLeft: '20px' }}>\n                      Job Runs by Organization\n                    </h2>\n                  </CardTitle>\n                  {jobs.isLoading && <LoadingState />}\n                  {jobs.error && <ApiErrorState message={jobs.error.error} />}\n                  {jobs.isSuccess && jobs.data.length <= 0 && <NoData />}\n                  {jobs.isSuccess && jobs.data.length > 0 && (\n                    <PieChart\n                      margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                      id=\"d3-donut-1-chart-root\"\n                      data={jobs.data}\n                      colorFunc={colorFunc}\n                    />\n                  )}\n                </CardBody>\n              </Card>\n              <Card>\n                <CardBody style={{ padding: 0 }}>\n                  <CardTitle style={{ padding: 0 }}>\n                    <h2 style={{ marginLeft: '20px' }}>\n                      Usage by Organization (Tasks)\n                    </h2>\n                  </CardTitle>\n                  {tasks.isLoading && <LoadingState />}\n                  {tasks.error && <ApiErrorState message={tasks.error.error} />}\n                  {tasks.isSuccess && tasks.data.length <= 0 && <NoData />}\n                  {tasks.isSuccess && tasks.data.length > 0 && (\n                    <PieChart\n                      margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                      id=\"d3-donut-2-chart-root\"\n                      data={tasks.data}\n                      colorFunc={colorFunc}\n                    />\n                  )}\n                </CardBody>\n              </Card>\n            </CardContainer>\n          </Main>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nOrganizationStatistics.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default OrganizationStatistics;\n","var pfmulti = [\n    '#06C',\n    '#4CB140',\n    '#009596',\n    '#5752D1',\n    '#F4C145',\n    '#EC7A08',\n    '#8BC1F7',\n    '#23511E',\n    '#A2D9D9',\n    '#2A265F',\n    '#F9E0A2',\n    '#8F4700',\n    '#002F5D'\n];\nexport { pfmulti };\n","import React from 'react';\nimport { node, string } from 'prop-types';\nimport { Popover as PFPopover } from '@patternfly/react-core';\nimport { HelpIcon } from '@patternfly/react-icons';\nimport styled from 'styled-components';\n\nconst PopoverButton = styled.button`\n  padding: var(--pf-global--spacer--xs);\n  margin: -(var(--pf-global--spacer--xs));\n  font-size: var(--pf-global--FontSize--sm);\n`;\n\nfunction Popover({ ariaLabel, content, header, id, maxWidth, ...rest }) {\n  if (!content) {\n    return null;\n  }\n\n  return (\n    <PFPopover\n      bodyContent={content}\n      headerContent={header}\n      hideOnOutsideClick\n      id={id}\n      maxWidth={maxWidth}\n      {...rest}\n    >\n      <PopoverButton\n        aria-label={ariaLabel ?? 'More information'}\n        aria-haspopup=\"true\"\n        className=\"pf-c-form__group-label-help\"\n        onClick={(e) => e.preventDefault()}\n        type=\"button\"\n      >\n        <HelpIcon noVerticalAlign />\n      </PopoverButton>\n    </PFPopover>\n  );\n}\n\nPopover.propTypes = {\n  ariaLabel: string,\n  content: node,\n  header: node,\n  id: string,\n  maxWidth: string,\n};\nPopover.defaultProps = {\n  ariaLabel: null,\n  content: null,\n  header: null,\n  id: '',\n  maxWidth: '',\n};\n\nexport default Popover;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Form,\n  FormGroup,\n  Grid,\n  Select,\n  SelectOption,\n  TextInput,\n} from '@patternfly/react-core';\n\nimport Popover from '../../../Components/Popover';\n\nconst Details = ({ options, formData, setField }) => {\n  const { name, category, description, manual_time, hosts, frequency_period } =\n    formData;\n\n  const [categoryIsOpen, setCategoryIsOpen] = useState(false);\n  const [manualTimeIsOpen, setManualTimeIsOpen] = useState(false);\n  const [frequencyPeriodIsOpen, setFrequencyPeriodIsOpen] = useState(false);\n\n  return (\n    <Form>\n      {options?.data && (\n        <Grid hasGutter md={6}>\n          <FormGroup\n            label=\"What do you want to automate?\"\n            isRequired\n            fieldId=\"name-field\"\n          >\n            <TextInput\n              isRequired\n              placeholder=\"Example: Provision NGINX server\"\n              type=\"text\"\n              id=\"name-field\"\n              name=\"name\"\n              value={name}\n              onChange={(newName) => setField('name', newName)}\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"What type of task is it?\"\n            isRequired\n            fieldId=\"category-field\"\n          >\n            <Select\n              id=\"category-field\"\n              isOpen={categoryIsOpen}\n              variant={'single'}\n              aria-label={'Plan category selector'}\n              onToggle={() => setCategoryIsOpen(!categoryIsOpen)}\n              onSelect={(_event, selection) => {\n                setField('category', selection);\n                setCategoryIsOpen(false);\n              }}\n              selections={category}\n            >\n              {(options.data?.category || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n          <FormGroup label=\"Description\" fieldId=\"description-field\">\n            <TextInput\n              type=\"text\"\n              placeholder=\"Place description here\"\n              id=\"description-field\"\n              name=\"description\"\n              value={description}\n              onChange={(newDescription) =>\n                setField('description', newDescription)\n              }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"How long does it take to do this manually?\"\n            fieldId=\"manual-time-field\"\n            labelIcon={\n              <Popover content=\"Select the option closest to the average amount of time the thing you are trying to automate takes each time it is done.\" />\n            }\n          >\n            <Select\n              id=\"manual-time-field\"\n              isOpen={manualTimeIsOpen}\n              variant={'single'}\n              placeholderText=\"Select amount\"\n              aria-label={'Plan time selector'}\n              onToggle={() => setManualTimeIsOpen(!manualTimeIsOpen)}\n              onSelect={(_event, selection) => {\n                setField('manual_time', selection);\n                setManualTimeIsOpen(false);\n              }}\n              selections={manual_time}\n            >\n              {(options.data?.manual_time || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n          <FormGroup\n            label=\"How many hosts do you plan to run this on?\"\n            fieldId=\"hosts-field\"\n          >\n            <TextInput\n              type=\"number\"\n              placeholder=\"Enter number of hosts\"\n              id=\"hosts-field\"\n              name=\"hosts\"\n              value={hosts}\n              onChange={(newHosts) => setField('hosts', newHosts)}\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"How often do you do this?\"\n            fieldId=\"frequency-period-field\"\n            labelIcon={\n              <Popover content=\"Select the option closest to the average number of times the thing you are trying to automate is done manually.\" />\n            }\n          >\n            <Select\n              id=\"frequency-period-field\"\n              isOpen={frequencyPeriodIsOpen}\n              variant={'single'}\n              placeholderText=\"Select frequency period\"\n              aria-label={'Plan frequency period selector'}\n              onToggle={() => {\n                setFrequencyPeriodIsOpen(!frequencyPeriodIsOpen);\n              }}\n              onSelect={(_event, selection) => {\n                setField('frequency_period', selection);\n                setFrequencyPeriodIsOpen(false);\n              }}\n              selections={frequency_period}\n            >\n              {(options.data?.frequency_period || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n        </Grid>\n      )}\n    </Form>\n  );\n};\n\nDetails.propTypes = {\n  options: PropTypes.object.isRequired,\n  formData: PropTypes.object.isRequired,\n  setField: PropTypes.func.isRequired,\n};\n\nexport default Details;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  DataList,\n  DataListAction,\n  DataListItem,\n  DataListCell,\n  DataListItemRow,\n  DataListControl,\n  DataListDragButton,\n  DataListItemCells,\n  Form,\n  FormGroup,\n  Grid,\n  InputGroup,\n  TextInput,\n  Title,\n} from '@patternfly/react-core';\nimport { PlusIcon, TimesIcon } from '@patternfly/react-icons';\n\nconst TaskSection = styled.div`\n  margin-top: 20px;\n`;\n\nconst TaskTitle = styled(Title)`\n  margin-bottom: 10px;\n`;\n\nconst TaskDeleteButton = styled(Button)`\n  padding: 0 16px;\n`;\n\nconst DeleteTaskActionSection = styled(DataListAction)`\n  padding: 6px 0;\n`;\n\nconst TaskRow = styled(DataListItemRow)`\n  align-items: center;\n`;\n\nconst Tasks = ({ tasks, setField }) => {\n  const setTasks = (val) => {\n    setField('tasks', val);\n  };\n\n  const [taskToAdd, setTaskToAdd] = useState('');\n\n  const [liveText, setLiveText] = useState('');\n  const [id, setId] = useState('');\n\n  const onDragStart = (newId) => {\n    setId(newId);\n    setLiveText(`Dragging started for task ${newId}.`);\n  };\n\n  const onDragMove = (oldIndex, newIndex) => {\n    setLiveText(\n      `Dragging task ${id}.  Task ${oldIndex} is now task ${newIndex}.`\n    );\n  };\n\n  const onDragCancel = () => {\n    setLiveText('Dragging cancelled. Tasks list order is unchanged.');\n  };\n\n  const onDragFinish = (newItemOrder) => {\n    setLiveText('Dragging finsihed');\n    setTasks([...newItemOrder]);\n  };\n\n  const appendTask = () => {\n    setTasks([...tasks, taskToAdd]);\n    setTaskToAdd('');\n  };\n\n  const handleTextKeyDown = (e) => {\n    if (e.key && e.key === 'Enter') {\n      e.preventDefault();\n      appendTask();\n    }\n  };\n\n  const removeTask = (task) => {\n    setTasks(tasks.filter((t) => t !== task));\n  };\n\n  return (\n    <>\n      <Form>\n        <Grid hasGutter md={6}>\n          <FormGroup\n            label=\"What tasks do you need to accomplish this plan?\"\n            fieldId=\"task-field\"\n          >\n            <InputGroup>\n              <TextInput\n                placeholder=\"Enter a description of the task\"\n                type=\"text\"\n                id=\"task-field\"\n                name=\"task\"\n                value={taskToAdd}\n                onChange={(newTaskName) => setTaskToAdd(newTaskName)}\n                onKeyDown={handleTextKeyDown}\n              />\n              <Button\n                onClick={appendTask}\n                variant=\"control\"\n                aria-label=\"Add task\"\n              >\n                <PlusIcon />\n              </Button>\n            </InputGroup>\n          </FormGroup>\n        </Grid>\n      </Form>\n      {tasks.length > 0 && (\n        <TaskSection>\n          <TaskTitle headingLevel=\"h4\" size=\"xl\">\n            Tasks\n          </TaskTitle>\n          <DataList\n            aria-label=\"Draggable list to reorder and remove tasks.\"\n            isCompact\n            onDragFinish={onDragFinish}\n            onDragStart={onDragStart}\n            onDragMove={onDragMove}\n            onDragCancel={onDragCancel}\n            itemOrder={tasks}\n          >\n            {tasks.map((task, index) => (\n              <DataListItem\n                aria-labelledby={`cell-${index + 1}`}\n                id={task}\n                key={index + 1}\n              >\n                <TaskRow>\n                  <DataListControl>\n                    <DataListDragButton\n                      aria-label=\"Reorder\"\n                      aria-labelledby={`cell-${index + 1}`}\n                      aria-describedby=\"Press space or enter to begin dragging, and use the arrow keys to navigate up or down. Press enter to confirm the drag, or any other key to cancel the drag operation.\"\n                      aria-pressed=\"false\"\n                    />\n                  </DataListControl>\n                  <DataListItemCells\n                    dataListCells={[\n                      <DataListCell key={index + 1}>\n                        <span id={`cell-${index + 1}`}>{`${\n                          index + 1\n                        }. ${task}`}</span>\n                      </DataListCell>,\n                    ]}\n                  />\n                  <DeleteTaskActionSection aria-label=\"Actions\">\n                    <TaskDeleteButton\n                      onClick={() => removeTask(task)}\n                      variant=\"plain\"\n                      aria-label=\"Delete\"\n                    >\n                      <TimesIcon />\n                    </TaskDeleteButton>\n                  </DeleteTaskActionSection>\n                </TaskRow>\n              </DataListItem>\n            ))}\n          </DataList>\n        </TaskSection>\n      )}\n      <div className=\"pf-screen-reader\" aria-live=\"assertive\">\n        {liveText}\n      </div>\n    </>\n  );\n};\n\nTasks.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  setField: PropTypes.func.isRequired,\n};\n\nexport default Tasks;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  DataList,\n  DataListItem,\n  DataListCell,\n  DataListItemRow,\n  DataListControl,\n  DataListItemCells,\n  Form,\n  FormGroup,\n  Radio,\n} from '@patternfly/react-core';\n\nconst TemplateRow = styled(DataListItemRow)`\n  align-items: center;\n`;\n\nconst Templates = ({ templates = [], template_id, setField }) => {\n  return (\n    <Form>\n      <>\n        <FormGroup\n          label=\"Link a template to this plan.\"\n          fieldId=\"template-link-field\"\n        >\n          <DataList aria-label=\"draggable data list example\" isCompact>\n            {templates.map(({ key, value }) => (\n              <DataListItem aria-labelledby={`cell-${key}`} id={key} key={key}>\n                <TemplateRow>\n                  <DataListControl>\n                    <Radio\n                      isChecked={template_id === key}\n                      name={`radio-${key}`}\n                      onChange={() => setField('template_id', key)}\n                      aria-label={`Radio selector for template ${key}.`}\n                      id={`radio-${key}`}\n                      value={key}\n                    />\n                  </DataListControl>\n                  <DataListItemCells\n                    dataListCells={[\n                      <DataListCell key={key}>\n                        <span id={`cell-${key}`}>{value}</span>\n                      </DataListCell>,\n                    ]}\n                  />\n                </TemplateRow>\n              </DataListItem>\n            ))}\n          </DataList>\n        </FormGroup>\n      </>\n    </Form>\n  );\n};\n\nTemplates.propTypes = {\n  templates: PropTypes.array,\n  template_id: PropTypes.number.isRequired,\n  setField: PropTypes.func.isRequired,\n};\n\nTemplates.defaultProps = {\n  templates: [],\n};\n\nexport default Templates;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory, useLocation, Redirect } from 'react-router-dom';\n\nimport { Wizard } from '@patternfly/react-core';\n\nimport { Paths } from '../../../paths';\n\nimport useApi from '../../../Utilities/useApi';\nimport useForm from '../../../Utilities/useForm';\n\nimport { createPlan } from '../../../Api';\n\nimport Details from './Details';\nimport Tasks from './Tasks';\nimport Templates from './Templates';\n\nconst Form = ({ title, options }) => {\n  const history = useHistory();\n  const { hash } = useLocation();\n\n  const [startStep, setStartStep] = useState(null);\n\n  useEffect(() => {\n    if (hash) {\n      setStartStep(steps.find((step) => `#${step.id}` === hash).step_number);\n    } else {\n      history.replace({\n        hash: 'details',\n      });\n      setStartStep(1);\n    }\n  }, []);\n\n  const [{ isSuccess }, setData] = useApi({ meta: {}, items: [] });\n  const { formData, setField } = useForm({\n    name: '',\n    category: 'system',\n    description: '',\n    manual_time: 240,\n    hosts: 1,\n    frequency_period: 'weekly',\n    tasks: [],\n    template_id: -2,\n  });\n\n  const onStepChange = (newStep) => {\n    history.replace({\n      hash: newStep.id,\n    });\n  };\n\n  const onSave = () => {\n    if (formData.template_id === -2) {\n      delete formData.template_id;\n    }\n\n    formData.tasks = formData.tasks.map((task, index) => ({\n      task,\n      task_order: index + 1,\n    }));\n\n    setData(\n      createPlan({\n        params: {\n          hourly_rate: 50,\n          frequency_per_period: 1,\n          ...formData,\n        },\n      })\n    );\n  };\n\n  const steps = [\n    {\n      step_number: 1,\n      id: 'details',\n      name: 'Details',\n      component: (\n        <Details options={options} formData={formData} setField={setField} />\n      ),\n    },\n    {\n      step_number: 2,\n      id: 'tasks',\n      name: 'Tasks',\n      component: <Tasks tasks={formData.tasks} setField={setField} />,\n    },\n    {\n      step_number: 3,\n      id: 'link_template',\n      name: 'Link template',\n      component: (\n        <Templates\n          templates={options?.data?.template_id}\n          template_id={formData.template_id}\n          setField={setField}\n        />\n      ),\n      nextButtonText: 'Save',\n    },\n  ];\n\n  return (\n    <>\n      {isSuccess && <Redirect to={Paths.savingsPlanner} />}\n      <Wizard\n        navAriaLabel={`${title} steps`}\n        mainAriaLabel={`${title} content`}\n        steps={steps}\n        onGoToStep={onStepChange}\n        onNext={onStepChange}\n        onBack={onStepChange}\n        onSave={onSave}\n        startAtStep={startStep}\n        height=\"calc(100vh - 285px)\"\n      />\n    </>\n  );\n};\n\nForm.propTypes = {\n  title: PropTypes.string.isRequired,\n  options: PropTypes.object.isRequired,\n};\n\nexport default Form;\n","import { useReducer } from 'react';\n\nconst useForm = (initial) => {\n  const formReducer = (state, { type, value }) => {\n    switch (type) {\n      /* v1 api reducers */\n      case 'SET_FIELD':\n        return { ...state, ...value };\n      default:\n        throw new Error();\n    }\n  };\n\n  const [formData, dispatch] = useReducer(formReducer, {\n    ...initial,\n  });\n\n  return {\n    formData,\n    setField: (field, value) =>\n      dispatch({ type: 'SET_FIELD', value: { [field]: value } }),\n  };\n};\n\nexport default useForm;\n","import React, { useEffect } from 'react';\n\nimport { Card, CardBody } from '@patternfly/react-core';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport Breadcrumbs from '../../../Components/Breadcrumbs';\n\nimport useApi from '../../../Utilities/useApi';\n\nimport { readPlanOptions } from '../../../Api';\n\nimport Form from '../Shared/Form';\n\nconst Add = () => {\n  const [options, setOptions] = useApi({});\n\n  useEffect(() => {\n    setOptions(readPlanOptions());\n  }, []);\n\n  const title = 'Create new plan';\n\n  return (\n    <>\n      <PageHeader>\n        <Breadcrumbs\n          items={[{ title: 'Savings Planner', navigate: '/savings-planner' }]}\n        />\n        <PageHeaderTitle title={title} />\n      </PageHeader>\n      <Main>\n        <Card>\n          <CardBody>\n            {options.isSuccess && <Form title={title} options={options} />}\n          </CardBody>\n        </Card>\n      </Main>\n    </>\n  );\n};\n\nexport default Add;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { shape, string, number, arrayOf, node, oneOfType } from 'prop-types';\nimport { Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst RoutedTabs = ({ tabsArray, defaultTabId }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const getActiveTabId = (defaultTabId) => {\n    return (\n      tabsArray.find((tab) => tab.link === location.pathname)?.id ||\n      defaultTabId\n    );\n  };\n\n  const handleTabSelect = (_, eventKey) => {\n    const match = tabsArray.find((tab) => tab.id === eventKey);\n    if (match) {\n      history.push(match.link);\n    }\n  };\n\n  return (\n    <Tabs activeKey={getActiveTabId(defaultTabId)} onSelect={handleTabSelect}>\n      {tabsArray.map((tab) => (\n        <Tab\n          aria-label={typeof tab.name === 'string' ? tab.name : `${tab.id} tab`}\n          eventKey={tab.id}\n          key={tab.id}\n          link={tab.link}\n          title={<TabTitleText>{tab.name}</TabTitleText>}\n          role=\"tab\"\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nRoutedTabs.propTypes = {\n  defaultTabId: PropTypes.number,\n  tabsArray: arrayOf(\n    shape({\n      id: number.isRequired,\n      link: string.isRequired,\n      name: oneOfType([string.isRequired, node.isRequired]),\n    })\n  ).isRequired,\n};\n\nRoutedTabs.defaultProps = {\n  defaultTabId: 1,\n};\n\nexport default RoutedTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\nimport { Paths } from '../../paths';\nimport { stringify } from 'query-string';\n\nimport { useHistory } from 'react-router-dom';\n\nimport {\n  Card,\n  DescriptionList,\n  DescriptionListTerm,\n  DescriptionListGroup,\n  DescriptionListDescription,\n  Divider,\n  Label,\n  TextContent,\n  List,\n  ListItem,\n} from '@patternfly/react-core';\n\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\nimport { formatDateTime } from '../../Utilities/helpers';\nimport RoutedTabs from '../../Components/RoutedTabs';\n\nconst TopCard = styled(Card)`\n  min-height: 500px;\n`;\n\nconst DetailsTab = ({ tabsArray, plans }) => {\n  let history = useHistory();\n  const {\n    automation_status,\n    category,\n    description,\n    frequency_period,\n    hosts,\n    manual_time,\n    modified,\n    name,\n    tasks,\n    template_details,\n    template_id,\n  } = plans[0];\n\n  const redirectToJobExplorer = (templateId) => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      quick_date_range: 'last_30_days',\n      status: ['failed', 'successful'],\n      template_id: [templateId],\n    };\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const showTemplate = (template_details) => {\n    if (!template_details.id) {\n      return;\n    }\n\n    return (\n      <a onClick={() => redirectToJobExplorer(template_details.id)}>\n        {template_details.name}\n      </a>\n    );\n  };\n\n  const labelsAndValues = {\n    Name: name || undefined,\n    'Automation Type': category || undefined,\n    Description: description || undefined,\n    'Manual Time': manual_time || undefined,\n    'Run on hosts': hosts || undefined,\n    Frequency: frequency_period || undefined,\n    Template: template_id ? showTemplate(template_details) : undefined,\n    'Automation status':\n      automation_status.status === 'successful' ? (\n        <Label variant=\"outline\" color=\"green\" icon={<CheckCircleIcon />}>\n          Running\n        </Label>\n      ) : (\n        <Label variant=\"outline\" color=\"red\" icon={<ExclamationCircleIcon />}>\n          Not Running\n        </Label>\n      ),\n    'Last updated': modified ? <em>{formatDateTime(modified)}</em> : undefined,\n  };\n\n  return (\n    <React.Fragment>\n      {plans && (\n        <TopCard>\n          <RoutedTabs tabsArray={tabsArray} />\n          <div style={{ padding: '1rem' }}>\n            <DescriptionList isHorizontal columnModifier={{ lg: '3Col' }}>\n              {Object.keys(labelsAndValues).map(\n                (key, i) =>\n                  labelsAndValues[key] !== undefined && (\n                    <DescriptionListGroup key={i}>\n                      <DescriptionListTerm>{key}</DescriptionListTerm>\n                      <DescriptionListDescription>\n                        {labelsAndValues[key]}\n                      </DescriptionListDescription>\n                    </DescriptionListGroup>\n                  )\n              )}\n            </DescriptionList>\n            {tasks.length > 0 && (\n              <>\n                <Divider style={{ padding: '1rem' }} component=\"div\" />\n                <DescriptionListTerm>Tasks</DescriptionListTerm>\n                <TextContent>\n                  <List component=\"ol\" type=\"1\">\n                    {tasks.map((task) => (\n                      <ListItem key={task.id}>{task.task}</ListItem>\n                    ))}\n                  </List>\n                </TextContent>\n              </>\n            )}\n          </div>\n        </TopCard>\n      )}\n    </React.Fragment>\n  );\n};\n\nDetailsTab.propTypes = {\n  plans: PropTypes.array,\n  tabsArray: PropTypes.array,\n};\n\nexport default DetailsTab;\n","var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n    return cooked;\n};\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Card, CardBody, ToggleGroup, ToggleGroupItem } from '@patternfly/react-core';\nimport { functions, ChartRenderer, ChartKind, ChartThemeColor, ChartType, ChartTopLevelType, ApiType, } from 'react-data-explorer';\nimport RoutedTabs from '../../Components/RoutedTabs';\nimport AutomationFormula from \"../AutomationCalculator/AutomationFormula\";\nimport TotalSavings from \"../AutomationCalculator/TotalSavings\";\nvar TopCard = styled(Card)(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n  min-height: 500px;\\n\"], [\"\\n  min-height: 500px;\\n\"])));\nvar Wrapper = styled.div(templateObject_2 || (templateObject_2 = __makeTemplateObject([\"\\n  display: grid;\\n  grid-template-columns: 5fr 2fr;\\n  height: 100%;\\n\"], [\"\\n  display: grid;\\n  grid-template-columns: 5fr 2fr;\\n  height: 100%;\\n\"])));\nvar WrapperLeft = styled.div(templateObject_3 || (templateObject_3 = __makeTemplateObject([\"\\n  flex: 5;\\n  display: flex;\\n  flex-direction: column;\\n  overflow: auto;\\n\"], [\"\\n  flex: 5;\\n  display: flex;\\n  flex-direction: column;\\n  overflow: auto;\\n\"])));\nvar WrapperRight = styled.div(templateObject_4 || (templateObject_4 = __makeTemplateObject([\"\\n  flex: 2;\\n  height: 600;\\n  display: flex;\\n  flex-direction: column;\\n\"], [\"\\n  flex: 2;\\n  height: 600;\\n  display: flex;\\n  flex-direction: column;\\n\"])));\nvar LegendGroup = styled.div(templateObject_5 || (templateObject_5 = __makeTemplateObject([\"\\n  display: flex;\\n  align-items: center;\\n\"], [\"\\n  display: flex;\\n  align-items: center;\\n\"])));\nvar LegendIcon = styled.div(templateObject_6 || (templateObject_6 = __makeTemplateObject([\"\\n  height: 10px;\\n  width: 10px;\\n  margin-right: 10px;\\n  background: \", \";\\n\"], [\"\\n  height: 10px;\\n  width: 10px;\\n  margin-right: 10px;\\n  background: \", \";\\n\"])), function (props) { return props.color; });\nvar LegendDescription = styled.div(templateObject_7 || (templateObject_7 = __makeTemplateObject([\"\\n  flex: 1;\\n\"], [\"\\n  flex: 1;\\n\"])));\n;\n;\nvar getChartData = function (data) {\n    var years = ['initial', 'year1', 'year2', 'year3'];\n    var statsData = years.map(function (year) { return ({\n        year: year,\n        total_costs: data.projections.monetary_stats.total_costs[year] * -1,\n        total_benefits: data.projections.monetary_stats.total_benefits[year],\n        cumulative_net_benefits: data.projections.monetary_stats.cumulative_net_benefits[year],\n        total_hours_spent_risk_adjusted: data.projections.time_stats.total_hours_spent_risk_adjusted[year] * -1,\n        total_hours_saved: data.projections.time_stats.total_hours_saved[year],\n        cumulative_time_net_benefits: data.projections.time_stats.cumulative_time_net_benefits[year]\n    }); });\n    return { items: statsData, type: ApiType.nonGrouped, response_type: '' };\n};\nvar StatisticsTab = function (_a) {\n    var tabsArray = _a.tabsArray, data = _a.data;\n    var types = ['Money', 'Time'];\n    var _b = useState(types[0]), chartType = _b[0], setChartType = _b[1];\n    var computeTotalSavings = function (d) {\n        return chartType == 'Money'\n            ? d.projections.monetary_stats.cumulative_net_benefits.year3\n            : d.projections.time_stats.cumulative_time_net_benefits.year3;\n    };\n    var barChartData = {\n        charts: [\n            {\n                id: 1000,\n                kind: ChartKind.wrapper,\n                type: ChartTopLevelType.chart,\n                parent: null,\n                props: {\n                    height: 600,\n                    domainPadding: {\n                        y: 20,\n                        x: 100\n                    },\n                    themeColor: ChartThemeColor.gray,\n                    style: {\n                        parent: {\n                            border: '1px solid gray'\n                        }\n                    },\n                },\n                tooltip: {\n                    cursor: true\n                },\n                xAxis: {\n                    label: 'Time',\n                },\n                yAxis: {\n                    label: chartType == 'Money' ? 'Money Saved' : 'Hours Saved',\n                    style: {\n                        grid: { stroke: '#D2D2D2' },\n                    },\n                },\n            },\n            {\n                id: 1001,\n                kind: ChartKind.stack,\n                parent: 1000,\n                props: {},\n            },\n            {\n                id: 1101,\n                kind: ChartKind.simple,\n                type: ChartType.bar,\n                parent: 1001,\n                props: {\n                    x: 'year',\n                    y: chartType == 'Money' ? 'total_costs' : 'total_hours_spent_risk_adjusted',\n                    barRatio: 0.8,\n                    barWidth: 0,\n                    style: {\n                        data: {\n                            fill: '#8B8D8F',\n                            width: 120,\n                        },\n                    },\n                },\n            },\n            {\n                id: 1102,\n                kind: ChartKind.simple,\n                type: ChartType.bar,\n                parent: 1001,\n                props: {\n                    x: 'year',\n                    y: chartType == 'Money' ? 'total_benefits' : 'total_hours_saved',\n                    barRatio: 0.8,\n                    barWidth: 0,\n                    style: {\n                        data: {\n                            fill: chartType == 'Money' ? '#81C46B' : '#0063CF',\n                            width: 120,\n                        },\n                    },\n                },\n            },\n            {\n                id: 1002,\n                kind: ChartKind.simple,\n                type: ChartType.line,\n                parent: 1000,\n                props: {\n                    x: 'year',\n                    y: chartType === 'Money' ? 'cumulative_net_benefits' : 'cumulative_time_net_benefits',\n                    style: {\n                        data: {\n                            stroke: '#EE7A00',\n                            strokeWidth: 5\n                        },\n                    },\n                },\n            },\n        ],\n        functions: __assign(__assign({}, functions), { fetchFnc: function () { return new Promise(function (resolve) { resolve(getChartData(data)); }); } }),\n    };\n    var toggleButton = function (type) {\n        setChartType(type);\n    };\n    var renderButtons = function () {\n        return (React.createElement(ToggleGroup, { \"aria-label\": \"toggleButton\" }, types.map(function (type) { return (React.createElement(ToggleGroupItem, { key: type, text: type, buttonId: type, isSelected: chartType === type, onChange: function () { return toggleButton(type); } })); })));\n    };\n    var renderLeft = function () { return (React.createElement(WrapperLeft, null,\n        React.createElement(Card, null,\n            React.createElement(\"div\", null,\n                React.createElement(\"div\", { style: { padding: '1rem', 'float': 'left' } }, data.name),\n                React.createElement(\"div\", { style: { padding: '1rem', 'float': 'right' } }, renderButtons())),\n            React.createElement(CardBody, null,\n                React.createElement(ChartRenderer, { data: barChartData }))))); };\n    var renderRight = function () { return (React.createElement(WrapperRight, null,\n        React.createElement(TotalSavings, { totalSavings: computeTotalSavings(data) }),\n        React.createElement(Card, null,\n            React.createElement(CardBody, null,\n                React.createElement(LegendGroup, null,\n                    React.createElement(LegendIcon, { color: chartType == 'Money' ? '#81C46B' : '#0063CF' }),\n                    React.createElement(LegendDescription, null, \"Operation savings efficiency from Ansible template\")),\n                React.createElement(LegendGroup, null,\n                    React.createElement(LegendIcon, { color: \"#EE7A00\" }),\n                    React.createElement(LegendDescription, null, \"Cumulative net benefits\")),\n                React.createElement(LegendGroup, null,\n                    React.createElement(LegendIcon, { color: \"#58595c\" }),\n                    React.createElement(LegendDescription, null, \"Costs\")))),\n        React.createElement(AutomationFormula, null))); };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(TopCard, null,\n            React.createElement(RoutedTabs, { tabsArray: tabsArray }),\n            React.createElement(Wrapper, { className: \"statistics-wrapper\" },\n                renderLeft(),\n                renderRight()))));\n};\nStatisticsTab.propTypes = {\n    tabsArray: PropTypes.arrayOf(PropTypes.exact({\n        id: PropTypes.number,\n        link: PropTypes.string,\n        name: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    })).isRequired,\n    // This is really hard to modell, we can just comment out so we don't get \n    // runtime warnings but TS should make it pretty safe to use as long as it is not\n    // dependent on user input which we sepcify in TS as 'any'\n    // data: PropTypes.object\n};\nexport default StatisticsTab;\nvar templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, Route, Switch } from 'react-router-dom';\nimport { CaretLeftIcon } from '@patternfly/react-icons';\n\nimport DetailsTab from './DetailsTab';\nimport StatisticsTab from './StatisticsTab';\nimport SavingsPlanner from './SavingsPlanner';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport Breadcrumbs from '../../Components/Breadcrumbs';\n\nimport {preflightRequest, readPlan} from '../../Api';\n\nimport useApi from '../../Utilities/useApi';\n\nconst SavingsPlan = () => {\n  let { id } = useParams();\n  const [preflightError, setPreFlightError] = useState(null);\n  const pageTitle =\n    location.pathname.indexOf('/statistics') !== -1 ? 'Statistics' : 'Details';\n  const [selectedId, setSelectedId] = useState(id);\n  const [\n    {\n      isSuccess,\n      error,\n      data: { items: plans = [] },\n    },\n    setData,\n  ] = useApi({ items: [] });\n  const queryParams = { id: [selectedId] };\n\n  useEffect(() => {\n    setSelectedId(id);\n    preflightRequest().catch((error) => {\n      setPreFlightError({ preflightError: error });\n    });\n    const fetchEndpoints = () => {\n      setData(readPlan({ params: queryParams }));\n    };\n\n    fetchEndpoints();\n  }, []);\n\n  const tabsArray = [\n    {\n      id: 0,\n      name: (\n        <>\n          <CaretLeftIcon />\n          {'Back to Plans'}\n        </>\n      ),\n      link: `/savings-planner`,\n    },\n    { id: 1, name: 'Details', link: `/savings-planner/${selectedId}/details` },\n    { id: 2, name: 'Statistics', link: `/savings-planner/${selectedId}/statistics` },\n  ];\n\n  const showCardHeader = !location.pathname.endsWith('edit');\n  const breadcrumbUrl = `/savings-planner/${selectedId}`;\n  const breadcrumbsItems = isSuccess\n    ? [\n        { title: 'Savings Planner', navigate: '/savings-planner' },\n        { title: plans[0].name, navigate: breadcrumbUrl },\n      ]\n    : [];\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n  return (\n    <>\n      {error && (\n        <>\n          <ApiErrorState message={error.error} />\n        </>\n      )}\n      {isSuccess && (\n        <React.Fragment>\n          <PageHeader>\n            <Breadcrumbs items={breadcrumbsItems} />\n            <PageHeaderTitle title={pageTitle} />\n          </PageHeader>\n          {showCardHeader && (\n            <Switch>\n              <Route path=\"/savings-planner/:id/statistics\">\n                <StatisticsTab tabsArray={tabsArray} data={plans[0]} queryParams={queryParams} />\n              </Route>\n              <Route path=\"/savings-planner/:id/details\">\n                <DetailsTab plans={plans} tabsArray={tabsArray} />\n              </Route>\n              <Route path=\"/savings-planner/:id\">\n                <DetailsTab plans={plans} tabsArray={tabsArray} />\n              </Route>\n              <Route exact path=\"/savings-planner\">\n                <SavingsPlanner />\n              </Route>\n            </Switch>\n          )}\n        </React.Fragment>\n      )}\n    </>\n  );\n};\n\nexport default SavingsPlan;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { Paths } from '../../paths';\n\nimport { formatDateTime } from '../../Utilities/helpers';\n\nimport {\n  Card,\n  CardHeader,\n  CardHeaderMain,\n  CardActions,\n  CardTitle,\n  CardBody,\n  CardFooter,\n  Checkbox,\n  Dropdown,\n  DropdownItem,\n  KebabToggle,\n  Label,\n} from '@patternfly/react-core';\n\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\nimport styled from 'styled-components';\nimport { stringify } from 'query-string';\n\nimport { Link, useRouteMatch } from 'react-router-dom';\n\nconst CardLabel = styled.span`\n  margin-right: 5px;\n`;\n\nconst PlanCard = ({\n  name,\n  id = null,\n  description = '',\n  frequency_period = '',\n  template_details = {},\n  automation_status = {},\n  modified = '',\n  category = '',\n  isSuccess,\n}) => {\n  const [isCardKebabOpen, setIsCardKebabOpen] = useState(false);\n\n  const match = useRouteMatch();\n  let history = useHistory();\n\n  const redirectToJobExplorer = (templateId) => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      quick_date_range: 'last_30_days',\n      status: ['failed', 'successful'],\n      template_id: [templateId],\n    };\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const renderTemplateLink = (template) => {\n    return template && isSuccess ? (\n      <a onClick={() => redirectToJobExplorer(template.id)}>{template.name}</a>\n    ) : null;\n  };\n\n  const kebabDropDownItems = [\n    <React.Fragment key={id}>\n      <DropdownItem key=\"edit\" onClick={() => {}} position=\"right\">\n        Edit\n      </DropdownItem>\n      <DropdownItem key=\"link\" onClick={() => {}} position=\"right\">\n        Link template\n      </DropdownItem>\n    </React.Fragment>,\n  ];\n\n  return (\n    <Card isHoverable isCompact>\n      <CardHeader>\n        <CardHeaderMain>\n          <CardTitle>\n            <Link to={`${match.url}/${id}`}>{name}</Link>\n          </CardTitle>\n        </CardHeaderMain>\n        <CardActions>\n          <Dropdown\n            onSelect={() => {}}\n            toggle={\n              <KebabToggle\n                onToggle={() => setIsCardKebabOpen(!isCardKebabOpen)}\n              />\n            }\n            isOpen={isCardKebabOpen}\n            isPlain\n            dropdownItems={kebabDropDownItems}\n            position={'right'}\n          />\n          <Checkbox\n            isChecked={false}\n            onChange={() => {}}\n            aria-label=\"card checkbox\"\n            id=\"check-1\"\n            name=\"check1\"\n          />\n        </CardActions>\n      </CardHeader>\n      <CardBody>\n        {description ? <p>{description}</p> : null}\n        <div>\n          <CardLabel>Frequency</CardLabel>{' '}\n          {frequency_period ? frequency_period : <em>None</em>}\n        </div>\n        <div>\n          <CardLabel>Template</CardLabel>{' '}\n          {template_details ? (\n            renderTemplateLink(template_details)\n          ) : (\n            <em>None</em>\n          )}\n        </div>\n        <div>\n          <CardLabel>Automation status</CardLabel>\n          {automation_status.status === 'successful' ? (\n            <Label variant=\"outline\" color=\"green\" icon={<CheckCircleIcon />}>\n              Running\n            </Label>\n          ) : (\n            <Label\n              variant=\"outline\"\n              color=\"red\"\n              icon={<ExclamationCircleIcon />}\n            >\n              Not Running\n            </Label>\n          )}\n        </div>\n        <div>\n          <CardLabel>Last updated</CardLabel>{' '}\n          <em>{formatDateTime(modified)}</em>\n        </div>\n      </CardBody>\n      <CardFooter>\n        <Label>{category}</Label>\n      </CardFooter>\n    </Card>\n  );\n};\n\nPlanCard.propTypes = {\n  isSuccess: PropTypes.bool.isRequired,\n  name: PropTypes.string.isRequired,\n  id: PropTypes.number,\n  description: PropTypes.string,\n  frequency_period: PropTypes.string,\n  template_details: PropTypes.object,\n  modified: PropTypes.string,\n  category: PropTypes.string,\n  automation_status: PropTypes.object,\n};\n\nexport default PlanCard;\n","import React, { useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { preflightRequest, readPlanOptions, readPlans } from '../../Api';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport Pagination from '../../Components/Pagination';\nimport PlanCard from './PlanCard';\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { savingsPlanner } from '../../Utilities/constants';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nimport { Button, Gallery, PaginationVariant } from '@patternfly/react-core';\n\n// TODO: update to fining this out from API RBAC\nconst canAddPlan = true;\n\nconst SavingsPlanner = () => {\n  const history = useHistory();\n  const { pathname } = useLocation();\n\n  const { queryParams, setFromPagination, setFromToolbar } = useQueryParams(\n    savingsPlanner.defaultParams\n  );\n  const [\n    {\n      isLoading,\n      isSuccess,\n      error,\n      data: { meta = {}, items: data = [] },\n    },\n    setData,\n  ] = useApi({ meta: {}, items: [] });\n  const [options, setOptions] = useApi({});\n  const [preflightError, setPreFlightError] = useState(null);\n\n  const combinedOptions = {\n    ...options.data,\n    name: [{ key: 'name', value: null }],\n  };\n\n  useEffect(() => {\n    const fetchEndpoints = () => {\n      preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n      setData(readPlans({ params: queryParams }));\n      setOptions(readPlanOptions());\n    };\n\n    fetchEndpoints();\n  }, [queryParams]);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Savings Planner'} />\n        <FilterableToolbar\n          categories={combinedOptions}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n          additionalControls={[\n            ...(canAddPlan\n              ? [\n                  <Button\n                    key=\"add-plan-button\"\n                    variant=\"primary\"\n                    aria-label=\"Add plan\"\n                    onClick={() => {\n                      history.push({\n                        pathname: `${pathname}/add`,\n                      });\n                    }}\n                  >\n                    Add plan\n                  </Button>,\n                ]\n              : []),\n          ]}\n          pagination={\n            <Pagination\n              count={meta?.total_count}\n              params={{\n                limit: queryParams.limit,\n                offset: queryParams.offset,\n              }}\n              setPagination={setFromPagination}\n              isCompact\n            />\n          }\n        />\n      </PageHeader>\n      {preflightError && (\n        <Main>\n          <EmptyState {...preflightError} />\n        </Main>\n      )}\n      {error && (\n        <Main style={{ height: '100vh' }}>\n          <ApiErrorState message={error.error} />\n        </Main>\n      )}\n      {isLoading && (\n        <Main style={{ height: '100vh' }}>\n          <LoadingState />\n        </Main>\n      )}\n      {isSuccess && (\n        <Main style={{ height: '100vh' }}>\n          <Gallery hasGutter>\n            {options.isSuccess &&\n              data.map((datum) => (\n                <PlanCard\n                  key={datum.id}\n                  isSuccess={options.isSuccess}\n                  {...datum}\n                />\n              ))}\n          </Gallery>\n        </Main>\n      )}\n      <Pagination\n        count={meta?.total_count}\n        params={{\n          limit: queryParams.limit,\n          offset: queryParams.offset,\n        }}\n        setPagination={setFromPagination}\n        variant={PaginationVariant.bottom}\n        isSticky\n      />\n    </React.Fragment>\n  );\n};\n\nexport default SavingsPlanner;\n","export const jobExplorer = {\n  attributes: [\n    'id',\n    'status',\n    'job_type',\n    'started',\n    'finished',\n    'elapsed',\n    'created',\n    'cluster_name',\n    'org_name',\n    'most_failed_tasks',\n  ],\n  defaultParams: {\n    status: ['successful', 'failed'],\n    quick_date_range: 'last_30_days',\n    job_type: ['workflowjob', 'job'],\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    sort_options: 'created',\n    sort_order: 'desc',\n    only_root_workflows_and_standalone_jobs: false,\n    limit: 5,\n    offset: 0,\n  },\n};\n\nexport const roi = {\n  defaultParams: {\n    status: ['successful'],\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    quick_date_range: 'roi_last_year',\n    job_type: ['job'],\n    sort_options: 'template_productivity_score',\n    sort_order: 'desc',\n    start_date: null,\n    end_date: null,\n    limit: 25,\n    only_root_workflows_and_standalone_jobs: true,\n    attributes: [\n      'successful_hosts_total',\n      'successful_elapsed_total',\n      'total_org_count',\n      'total_cluster_count',\n    ],\n    group_by: 'template',\n    group_by_time: false,\n  },\n};\n\nexport const organizationStatistics = {\n  defaultParams: {\n    status: [],\n    org_id: [],\n    quick_date_range: 'last_30_days',\n    limit: 5,\n    offset: 0,\n    job_type: ['workflowjob', 'job'],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    start_date: null,\n    end_date: null,\n  },\n};\n\nexport const clusters = {\n  defaultParams: {\n    status: ['successful', 'failed'],\n    quick_date_range: 'last_30_days',\n    job_type: ['workflowjob', 'job'],\n    group_by_time: true,\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    only_root_workflows_and_standalone_jobs: false,\n  },\n};\n\nexport const savingsPlanner = {\n  defaultParams: {\n    template_id: [],\n    inventory_id: [],\n    automation_status: [],\n    category: [],\n    frequency_period: [],\n    name: '',\n    limit: 5,\n    offset: 0,\n    sort_options: 'modified',\n    sort_order: 'desc',\n  },\n};\n\nexport const notAuthorizedParams = {\n  title: 'RBAC Access Denied',\n  description:\n    'User does not have privileges to perform this action. Contact your organization adminstrator(s) for more information.',\n};\n","import moment from 'moment';\n\n/*\n * isNumeric - return true if input is a real number\n */\nexport function isNumeric(val) {\n  if (val === 0 || val === '0') {\n    return true;\n  }\n\n  if (parseInt(val)) {\n    return true;\n  }\n\n  if (parseFloat(val)) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function trimStr(str) {\n  return str.toString().replace(/['\"]+/g, '');\n}\n\nexport function formatDateTime(dateTime) {\n  return moment(new Date(dateTime).toISOString()).format('M/D/YYYY h:mm:ssa');\n}\n\nexport function formatDate(date) {\n  return moment(date).format('YYYY-MM-DD');\n}\n\nexport function formatSeconds(seconds) {\n  return moment().startOf('day').seconds(seconds).format('H:mm:ss');\n}\n\nexport function getTotal(data) {\n  if (!data) {\n    return;\n  } else {\n    let total = 0;\n    data.forEach((datum) => {\n      total += parseInt(datum.count);\n    });\n    return total;\n  }\n}\n\nexport function formatPercentage(val) {\n  if (isNaN(val)) {\n    return;\n  }\n\n  return `${val}%`;\n}\n\nexport const capitalize = (s) => {\n  if (typeof s !== 'string') {\n    return '';\n  }\n\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport function calculateDelta(a, b) {\n  if (!isNumeric(a) || !isNumeric(b)) {\n    return 0;\n  }\n\n  // never return less than zero ...\n  if (b - a < 0) {\n    return 0;\n  }\n\n  return b - a;\n}\n\nexport function convertMinsToMs(mins) {\n  if (!parseInt(mins)) {\n    return 0;\n  }\n\n  return mins * 60000;\n}\n\nexport function convertMsToMins(ms) {\n  if (!parseInt(ms)) {\n    return 0;\n  }\n\n  return ms / 60000;\n}\n\nexport function convertSecondsToMins(seconds) {\n  if (!parseInt(seconds)) {\n    return 0;\n  }\n\n  return seconds / 60;\n}\n\nexport function convertMinsToSeconds(mins) {\n  if (!parseInt(mins) || parseInt(mins) < 0) {\n    return 0;\n  }\n\n  return +parseInt(mins) * 60;\n}\n\nexport function convertSecondsToHours(seconds) {\n  if (!parseInt(seconds)) {\n    return 0;\n  }\n\n  return seconds / 3600;\n}\n\nexport function convertWithCommas(arr, key) {\n  const split = arr.reduce((strs, datum) => {\n    strs.push(datum[key]);\n    return strs;\n  }, []);\n  return split.join(', ');\n}\n\nexport function formatJobType(type) {\n  return type === 'job' ? 'Playbook run' : 'Workflow job';\n}\n\nexport function formatJobStatus(status) {\n  return status === 'successful' ? 'Success' : 'Failed';\n}\n\nexport function formatJobDetailsURL(baseURL, jobId) {\n  const subDirectory1 = 'job';\n  const subDirectory2 = 'details';\n  return `${baseURL}/#/${subDirectory1}/${jobId}/${subDirectory2}/`;\n}\n","import { useState, useEffect, useReducer } from 'react';\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return {\n        ...state,\n        isLoading: true,\n        isSuccess: false,\n        error: null,\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isSuccess: true,\n        error: null,\n        data: action.payload,\n      };\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        isSuccess: false,\n        error: action.payload,\n      };\n    case 'UPDATE_DATA':\n      return {\n        ...state,\n        data: action.payload,\n      };\n    default:\n      throw new Error();\n  }\n};\n\nconst useApi = (initialData, postprocess = (d) => d) => {\n  const [request, setRequest] = useState(null);\n\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isSuccess: false,\n    error: null,\n    data: initialData,\n  });\n\n  useEffect(() => {\n    // Prevent fetching nothing\n    if (!request) {\n      return;\n    }\n\n    // Initialize\n    let didCancel = false;\n    dispatch({ type: 'FETCH_INIT' });\n\n    // Fetching\n    request\n      .then((data) => {\n        if (!didCancel) {\n          dispatch({\n            type: 'FETCH_SUCCESS',\n            payload: postprocess(data),\n          });\n        }\n      })\n      .catch((e) => {\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_FAILURE', payload: e });\n        }\n      });\n\n    return () => {\n      didCancel = true;\n    };\n  }, [request]);\n\n  const setData = (data) => {\n    dispatch({ type: 'UPDATE_DATA', payload: data });\n  };\n\n  return [state, setRequest, setData];\n};\n\nexport default useApi;\n","import { useReducer } from 'react';\nimport moment from 'moment';\n\nimport { formatDate } from '../Utilities/helpers';\n\nexport const useQueryParams = (initial) => {\n  const initialWithCalculatedParams = {\n    ...initial,\n    ...(initial.sort_options &&\n      initial.sort_order && {\n        sort_by: `${initial.sort_options}:${initial.sort_order}`,\n      }),\n  };\n\n  const paramsReducer = (state, { type, value }) => {\n    switch (type) {\n      /* v0 api reducers */\n      case 'SET_STARTDATE':\n        return { ...state, startDate: value };\n      case 'SET_ENDDATE':\n        return { ...state, endDate: value };\n      case 'SET_ID':\n        if (!parseInt(value)) {\n          const { id: ignored, ...rest } = state;\n          return rest;\n        }\n\n        return { ...state, id: parseInt(value) };\n      case 'SET_SEVERITY':\n        if (value.severity === '') {\n          const { severity: ignored, ...rest } = state;\n          return rest;\n        }\n\n        return { ...state, ...value };\n\n      /* v1 api reducers */\n      case 'SET_LIMIT':\n        return isNaN(value)\n          ? { ...state, limit: 5 } // Defaults back to 5\n          : { ...state, limit: parseInt(value) };\n      case 'SET_OFFSET':\n        return isNaN(value)\n          ? { ...state, offset: 0 } // Defaults back to 0\n          : { ...state, offset: parseInt(value) };\n      case 'SET_ATTRIBUTES':\n      case 'SET_JOB_TYPE':\n      case 'SET_STATUS':\n      case 'SET_ORG':\n      case 'SET_CLUSTER':\n      case 'SET_TEMPLATE':\n      case 'SET_AUTOMATION_STATUS':\n      case 'SET_CATEGORY':\n      case 'SET_FREQUENCY':\n      case 'SET_NAME':\n      case 'SET_ROOT_WORKFLOWS_AND_JOBS':\n      case 'SET_INVENTORY':\n        return { ...state, ...value };\n      case 'SET_QUICK_DATE_RANGE': {\n        let newState = { ...state };\n        if (value !== 'custom') {\n          newState = { ...newState, start_date: null, end_date: null };\n        }\n\n        newState = { ...newState, ...value };\n        return newState;\n      }\n\n      case 'SET_START_DATE':\n      case 'SET_END_DATE': {\n        let newValues = {};\n        Object.entries(value).forEach(([key, value]) => {\n          newValues[key] = formatDate(value);\n        });\n        return { ...state, ...newValues };\n      }\n\n      case 'SET_SORT_OPTIONS': {\n        return {\n          ...state,\n          sort_options: value.sort_options,\n          ...(state.sort_order && {\n            sort_by: `${value.sort_options}:${state.sort_order}`,\n          }), // Update sort by\n        };\n      }\n\n      case 'SET_SORT_ORDER': {\n        return {\n          ...state,\n          sort_order: value.sort_order,\n          ...(state.sort_options && {\n            sort_by: `${state.sort_options}:${value.sort_order}`,\n          }), // Update sort by\n        };\n      }\n\n      case 'REINITIALIZE':\n        return { ...value };\n      case 'RESET_FILTER':\n        return { ...initialWithCalculatedParams };\n      default:\n        throw new Error(`The query params reducer action (${type}) not found.`);\n    }\n  };\n\n  const [queryParams, dispatch] = useReducer(paramsReducer, {\n    ...initialWithCalculatedParams,\n  });\n\n  const actionMapper = {\n    status: 'SET_STATUS',\n    quick_date_range: 'SET_QUICK_DATE_RANGE',\n    job_type: 'SET_JOB_TYPE',\n    org_id: 'SET_ORG',\n    cluster_id: 'SET_CLUSTER',\n    template_id: 'SET_TEMPLATE',\n    sort_order: 'SET_SORT_ORDER',\n    sort_options: `SET_SORT_OPTIONS`,\n    start_date: 'SET_START_DATE',\n    end_date: 'SET_END_DATE',\n    automation_status: 'SET_AUTOMATION_STATUS',\n    category: 'SET_CATEGORY',\n    frequency_period: 'SET_FREQUENCY',\n    name: 'SET_NAME',\n    only_root_workflows_and_standalone_jobs: 'SET_ROOT_WORKFLOWS_AND_JOBS',\n    inventory_id: 'SET_INVENTORY',\n  };\n\n  return {\n    queryParams,\n    dispatch,\n    setFromToolbar: (varName, value = null) => {\n      if (!varName) {\n        dispatch({ type: 'RESET_FILTER' });\n      } else {\n        dispatch({ type: actionMapper[varName], value: { [varName]: value } });\n      }\n    },\n    setFromPagination: (offset, limit = null) => {\n      dispatch({ type: 'SET_OFFSET', value: offset });\n      if (limit) {\n        dispatch({ type: 'SET_LIMIT', value: limit });\n      }\n    },\n    /* v0 api usage after this line */\n    setSeverity: (severity) =>\n      dispatch({ type: 'SET_SEVERITY', value: { severity } }),\n    setEndDate: () => {\n      const endDate = moment().format('YYYY-MM-DD');\n      dispatch({ type: 'SET_ENDDATE', value: endDate });\n    },\n    setId: (value) => dispatch({ type: 'SET_ID', value }),\n    setStartDate: (days) => {\n      let startDate;\n      if (days === 7) {\n        startDate = moment().subtract(1, 'week').format('YYYY-MM-DD');\n      }\n\n      if (days === 14) {\n        startDate = moment().subtract(2, 'weeks').format('YYYY-MM-DD');\n      }\n\n      if (days === 31) {\n        startDate = moment().subtract(1, 'month').format('YYYY-MM-DD');\n      } else {\n        startDate = moment().subtract(days, 'days').format('YYYY-MM-DD');\n      }\n\n      dispatch({ type: 'SET_STARTDATE', value: startDate });\n    },\n    setStartDateAsString: (value) => dispatch({ type: 'SET_STARTDATE', value }),\n  };\n};\n","import { Paths } from '../paths';\nimport { stringify } from 'query-string';\n\nconst useRedirect = (history, path) => (query) => {\n  const search = stringify(query, { arrayFormat: 'bracket' });\n  history.push({\n    pathname: Paths[path],\n    search,\n  });\n};\n\nexport default useRedirect;\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PFPagination } from '@patternfly/react-core';\nvar perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '15', value: 15 },\n    { title: '20', value: 20 },\n    { title: '25', value: 25 },\n];\n;\nvar Pagination = function (_a) {\n    var _b = _a.count, count = _b === void 0 ? 0 : _b, params = _a.params, setPagination = _a.setPagination, props = __rest(_a, [\"count\", \"params\", \"setPagination\"]);\n    var offset = params.offset, limit = params.limit;\n    var currentPage = Math.floor(offset / limit + 1);\n    var returnOffsetVal = function (page) { return (page - 1) * limit; };\n    return (React.createElement(PFPagination, __assign({ itemCount: count, widgetId: \"aa-pagination\", perPageOptions: perPageOptions, perPage: limit, page: currentPage, onPerPageSelect: function (_event, perPage, page) {\n            setPagination(returnOffsetVal(page), perPage);\n        }, onSetPage: function (_event, page) {\n            setPagination(returnOffsetVal(page));\n        } }, props)));\n};\nPagination.propTypes = {\n    count: PropTypes.number,\n    params: PropTypes.exact({\n        offset: PropTypes.number.isRequired,\n        limit: PropTypes.number.isRequired,\n    }).isRequired,\n    setPagination: PropTypes.func.isRequired,\n};\nexport default Pagination;\n","import Pagination from './Pagination';\nexport default Pagination;\n"],"sourceRoot":""}