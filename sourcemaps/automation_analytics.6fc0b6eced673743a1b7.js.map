{"version":3,"sources":["webpack:///./src/Charts/BaseChart.js","webpack:///./src/Components/AlertModal/AlertModal.js","webpack:///./src/Components/ApiErrorState.js","webpack:///./src/Components/Breadcrumbs.js","webpack:///./src/Components/EmptyState.js","webpack:///./src/Components/ErrorDetail/ErrorDetail.js","webpack:///./src/Components/JobStatus.js","webpack:///./src/Components/LoadingState.js","webpack:///./src/Components/NoData.js","webpack:///./src/Components/NoResults.js","webpack:///./src/Components/Toolbar/constants.js","webpack:///./src/Components/Toolbar/Groups/CategoryDropdown.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/Select.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/helpers.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/Date.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/Text.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/index.js","webpack:///./src/Components/Toolbar/Groups/FiltersCategoriesGroup.js","webpack:///./src/Components/Toolbar/Groups/QuickDateGroup.js","webpack:///./src/Components/Toolbar/Groups/SortByGroup.js","webpack:///./src/Components/Toolbar/Groups/SettingsPanel.js","webpack:///./src/Components/Toolbar/Toolbar.js","webpack:///./src/Components/Toolbar/index.js","webpack:///./src/Charts/ROITopTemplates.js","webpack:///./src/Containers/AutomationCalculator/helpers.js","webpack:///./src/Containers/AutomationCalculator/TotalSavings.js","webpack:///./src/Containers/AutomationCalculator/CalculationCost.js","webpack:///./src/Containers/AutomationCalculator/AutomationFormula.js","webpack:///./src/Containers/AutomationCalculator/TopTemplates.js","webpack:///./src/Containers/AutomationCalculator/AutomationCalculator.js","webpack:///./src/Utilities/Tooltip.js","webpack:///./src/Charts/BarChart.js","webpack:///./src/Charts/LineChart.js","webpack:///./src/Components/ModulesList.js","webpack:///./src/Components/Breakdown.js","webpack:///./src/Components/ModalContents.js","webpack:///./src/Components/TemplatesList.js","webpack:///./src/Containers/Clusters/Clusters.js","webpack:///./src/Components/JobExplorerListRow.js","webpack:///./src/Components/JobExplorerList.js","webpack:///./src/Containers/JobExplorer/JobExplorer.js","webpack:///./src/Components/NotificationsList.js","webpack:///./src/Containers/Notifications/Notifications.js","webpack:///./src/Utilities/Legend.js","webpack:///./src/Charts/GroupedBarChart/GroupedBarChart.js","webpack:///./src/Charts/GroupedBarChart/OrgsTooltip.js","webpack:///./src/Charts/GroupedBarChart/HostsTooltip.js","webpack:///./src/Charts/PieChart.js","webpack:///./src/Containers/OrganizationStatistics/OrganizationStatistics.js","webpack:///./src/Utilities/colors.ts","webpack:///./src/Containers/SavingsPlanner/Add/index.js","webpack:///./src/Components/CardActionsRow.js","webpack:///./src/Components/DeleteButton/DeleteButton.js","webpack:///./src/Components/RoutedTabs.js","webpack:///./src/Containers/SavingsPlanner/Details/DetailsTab/index.js","webpack:///./src/Utilities/hoursFormatter.ts","webpack:///./src/Containers/SavingsPlanner/Details/StatisticsTab/TotalSavings/index.tsx","webpack:///./src/Containers/SavingsPlanner/Details/StatisticsTab/FormulaDescription/index.tsx","webpack:///./src/Containers/SavingsPlanner/Details/StatisticsTab/index.tsx","webpack:///./src/Containers/SavingsPlanner/Edit/index.js","webpack:///./src/Containers/SavingsPlanner/Details/Details.js","webpack:///./src/Components/EmptyList.js","webpack:///./src/Containers/SavingsPlanner/List/ListItem/index.js","webpack:///./src/Components/Toolbar/ToolbarDeleteButton.js","webpack:///./src/Containers/SavingsPlanner/List/List.js","webpack:///./src/Utilities/useSelected.js","webpack:///./src/Containers/SavingsPlanner/Shared/constants.js","webpack:///./src/Containers/SavingsPlanner/Shared/usePlanData.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/Steps/Details/index.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/Steps/Tasks/index.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/Steps/Templates/index.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/index.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Utilities/getRelatedResourceDeleteDetails.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Utilities/qs.js","webpack:///./src/Utilities/useQueryParams.js","webpack:///./src/Utilities/useRedirect.js","webpack:///./src/Utilities/useRequest.js","webpack:///./src/Utilities/useIsMounted.js","webpack:////home/travis/build/RedHatInsights/tower-analytics-frontend/node_modules/moment/locale|sync|/^\\.\\/.*$/","webpack:///./src/Components/Pagination/Pagination.tsx","webpack:///./src/Components/Pagination/index.ts","webpack:///./src/Utilities/currencyFormatter.ts"],"names":["initializeChart","Chart","BaseChart","props","id","margin","history","useHistory","getWidth","parseInt","d3","style","left","right","getHeight","top","bottom","propTypes","PropTypes","ExclamationCircleIcon","styled","PFExclamationCircleIcon","TimesCircleIcon","PFTimesCircleIcon","InfoCircleIcon","PFInfoCircleIcon","CheckCircleIcon","PFCheckCircleIcon","ExclamationTriangleIcon","PFExclamationTriangleIcon","Header","AlertModal","isOpen","title","label","variant","children","variantIcons","danger","size","error","info","success","warning","customHeader","Title","headingLevel","Modal","header","aria-label","aria-labelledby","ApiErrorState","message","EmptyState","EmptyStateVariant","EmptyStateIcon","icon","color","globalDangerColor200","EmptyStateBody","Breadcrumbs","items","current","Breadcrumb","map","navigate","basePathNavigate","getBaseName","BreadcrumbItem","key","to","BreadcrumbHeading","DefaultEmptyState","preflightError","WrenchIcon","status","href","target","rel","Button","onClick","window","location","reload","Card","PFCard","CardBody","PFCardBody","Expandable","PFExpandable","ErrorDetail","useState","isExpanded","setIsExpanded","Array","isArray","length","toggleText","onToggle","m","JobStatus","str","Label","getColor","getIcon","charAt","toUpperCase","slice","CubesIcon","SearchIcon","optionsForCategories","type","isSingle","name","placeholder","hasChips","quick_date_range","start_date","end_date","job_type","org_id","cluster_id","template_id","sort_options","automation_status","frequency_period","category","inventory_id","CategoryDropdown","selected","setSelected","categories","ToolbarItem","Select","onSelect","_event","selection","selections","placeholderText","SelectOption","value","OptionSpan","renderValues","values","description","Tooltip","content","item","comparator","val","categoryKey","selectOptions","isVisible","setValue","expanded","setExpanded","options","ToolbarFilter","data-cy","showToolbarItem","chips","forEach","i","undefined","reduce","acc","Number","isInteger","cmpItem","push","handleCheckboxChips","categoryName","deleteChip","_","valueToDelete","keyToDelete","find","filteredArr","filter","SelectVariant","includes","hasInlineFilter","onFilter","textInput","toLowerCase","maxHeight","isRequired","Date","InputGroup","TextInput","onChange","Text","searchVal","setSearchVal","useEffect","onKeyDown","e","preventDefault","components","select","date","text","ToolbarInput","SelectedInput","FilterCategoriesGroup","filterCategories","filters","handleSearch","setFilters","Object","keys","currentCategory","setCurrentCategory","ToolbarGroup","el","QuickDateGroup","SortByGroup","sort_order","SettingsPanel","settingsExpanded","setSettingsExpanded","isFlat","backgroundColor","CardHeader","CardActions","CardTitle","Switch","labelOff","isChecked","only_root_workflows_and_standalone_jobs","position","FilterableToolbar","qsConfig","pagination","hasSettings","additionalControls","hideQuickDateRange","hideSortOptions","restCategories","obj","params","parseQueryString","search","replaceParams","mergeParams","removeParams","pushHistoryState","pathname","nonNamespacedParams","encodedParams","encodeNonDefaultQueryString","Toolbar","namespace","clearAllFilters","oldParams","oldParamsClone","limit","sort_by","handleRemoveAll","collapseListedFiltersBreakpoint","ToolbarContent","isActive","control","idx","visibility","default","lg","d","savings","manualCost","automationCost","scrollLeftOffset","node","scrollLeft","x","svg","getBoundingClientRect","y","currencyFormatter","delta","automatedCost","toolTipWidth","toolTipBase","width","chartWidth","flipped","nameWidth","getComputedTextLength","savingsWidth","manualCostWidth","automationCostWidth","widestTextElem","adjustedWidth","maxTextPerc","boxWidth","overage","boundingBox","attr","toolTipPoint","interrupt","transition","delay","this","draw","append","textWidthThreshold","TopTemplatesSavings","init","bind","resize","state","timeout","clearTimeout","setState","setTimeout","remove","data","ticks","height","rangeRound","padding","range","formatYAxisValue","xAxis","tickValues","yAxis","tickFormat","replace","tickSize","taskNames","tooltip","domain","call","selectAll","bandwidth","enter","on","darker","handleMouseOver","handleMouseOut","addEventListener","removeEventListener","Component","BorderedCardTitle","TotalSavings","totalSavings","borderTop","paddingBottom","InputAndText","validFloat","floatValue","parseFloat","CalculationCost","costManual","setCostManual","costAutomation","setCostAutomation","InputGroupText","paddingTop","TemplateDetail","TemplateDetailSubTitle","TooltipWrapper","IconGroup","QuestionIconTooltip","details","Popover","bodyContent","k","capitalize","split","join","TopTemplates","sortBy","setDataRunTime","setEnabled","redirectToJobExplorer","component","convertSecondsToMins","avgRunTime","minutes","convertMinsToSeconds","successful_hosts_total","trimmed","sortAttribute","showSortAttr","enabled","deselectedIds","setDeselectedIds","filterDisabled","updateDeltaCost","convertSecondsToHours","successful_elapsed_total","calculateDelta","getQSConfig","roiConst","AutomationCalculator","toJobExplorer","useRedirect","useQueryParams","queryParams","setFromToolbar","useRequest","useCallback","preflightRequest","preflight","preflightIsLoading","isLoading","setPreflight","request","readROIOptions","optionsError","optionsIsLoading","result","setOptions","readROI","response","apiError","apiIsLoading","api","fetchEndpoint","NotAuthorized","notAuthorizedParams","PageHeader","PageHeaderTitle","Main","Grid","hasGutter","className","GridItem","span","Stack","StackItem","LoadingState","NoData","textAlign","isFilled","sum","curr","overflow","templateId","seconds","updatedData","setUnfilteredData","opts","fail","total","formatTooltipDate","RAN","FAIL","TOTAL","DATE","jobs","jobsWidth","failed","successful","successTextWidth","failTextWidth","circleSuccess","circleFail","failedIcon","successIcon","successText","failText","clickMore","colors","BarChart","formattedData","jobExplorer","Paths","formattedDate","formatDate","initialQueryParams","stringify","arrayFormat","parseTime","formatted","created_date","successful_count","failed_count","concat","barTooltip","layers","order","offset","stack","maxTicks","Math","round","layer","_d","duration","ease","prevProps","LineChart","updateCluster","path","attrTween","tweenDash","l","getTotalLength","t","unformattedData","successLine","curve","failLine","defined","isNaN","vertical","handleMouseMove","intersectX","cx","baseVal","DataListCell","PFDataListCell","DataListItem","PFDataListItem","DataCellEnd","ModulesList","modules","DataList","background","border","module","index","host_task_count","trimStr","BarContainer","Bar","LabelsContainer","Square","Breakdown","categoryCount","categoryColor","totalCount","accumulated","currentVal","sortedCategories","sort","barSpacing","remainingSpace","ActionContainer","formatTopFailedTask","percentage","ceil","total_failed_count","task_name","formatSuccessRate","successCount","formatTotalTime","elapsed","toISOString","substr","ModalContents","selectedId","handleModal","qp","jobType","Promise","all","readJobExplorer","agreggateTemplateParams","relatedTemplateJobsParams","stats","relatedJobs","isSuccess","fetchEndpoints","attributes","group_by_time","group_by","cancelled","canceled_count","error_count","new","new_count","pending","pending_count","running","running_count","waiting","waiting_count","global_palette_green_200","global_palette_black_850","global_palette_orange_300","global_palette_red_100","global_palette_cyan_200","global_palette_purple_300","global_palette_blue_300","global_palette_light_green_200","descriptionStats","total_count","formatJobType","most_failed_tasks","cleanup","ModalVariant","onClose","NoResults","DescriptionList","isHorizontal","columnModifier","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","Divider","marginTop","marginBottom","TableComposable","Thead","Tr","heading","Th","Tbody","job","Td","template_name","cluster_name","formatDateTime","finished","TemplatesList","templates","setSelectedId","isModalOpen","setIsModalOpen","displayJobType","initialTopTemplateParams","initialTopWorkflowParams","initialModuleParams","clusters","setPreFlightError","readClustersOptions","optionsQueryParams","fetchOptions","chartData","chartDataError","chartDataIsLoading","chartDataIsSuccess","fetchChartData","readEventExplorer","topModuleParams","modulesError","modulesIsLoading","modulesIsSuccess","fetchModules","topTemplatesParams","templatesError","templatesIsLoading","templatesIsSuccess","fetchTemplates","topWorkflowParams","workflows","workflowsError","workflowsIsLoading","workflowsIsSuccess","fetchWorkflows","initialOptionsParams","initializeWithPreflight","JobExplorerListRow","expandedInfo","created","started","expand","rowIndex","tower_link","org_name","colSpan","ExpandableRowContent","cols","JobExplorerList","head","JobExplorer","setFromPagination","readJobExplorerOptions","meta","dataError","dataIsLoading","dataIsSuccess","initialSearchParams","parse","parseBooleans","parseNumbers","insights","chrome","appNavClick","secondaryNav","updateURL","Pagination","count","setPagination","isCompact","PaginationVariant","ExternalLinkAltIcon","PFExternalLinkAltIcon","NotificationDrawerListItem","PFNotificationDrawerListItem","NotificationDrawerList","PFNotificationDrawerList","stringifyDate","day","moment","now","utc","isAfter","diff","isSame","valueOf","AllNotificationTemplate","notifications","notification_id","url","tower_url","NotificationDrawerListItemHeader","NotificationDrawerListItemBody","timestamp","ErrorNotificationTemplate","notification","NoticeNotificationTemplate","WarningNotificationTemplate","NotificationsList","filterBy","PFCardTitle","DropdownGroup","notificationOptions","disabled","formatClusterName","uuid","install_uuid","notificationsData","setNotificationsData","clusterOptions","setClusterOptions","selectedCluster","setSelectedCluster","firstRender","setFirstRender","setIsLoading","setMeta","setId","setSeverity","readNotifications","then","ignore","readClusters","p","clustersData","FormSelect","FormSelectOption","isDisabled","severity","NotificationDrawer","Container","LegendDetail","Wrapper","Color","SubTitle","Legend","chartName","some","pieces","GroupedBarChart","TooltipClass","legend","colorFunc","selectedIds","setSelectedIds","selectedOrgs","x0","x1","maxTicksOneMonth","maxTicksTwoMonths","dates","yLabel","exit","bars","merge","subEnter","moreDetail","endsWith","defaultProps","OrgsTooltip","orgName","HostsTooltip","perc","percSuccess","drawn","percent","success_rate","maxLength","percentageTotal","percentageSuccess","boundingBOx","showSuccess","boundingHeight","boundingWidth","PieChart","a","b","radius","min","filteredData","getTotal","donutTooltip","pie","arc","outerRadius","innerRadius","classed","scaleOrdinal","orgsChartMapper","attrName","pieChartMapper","chartMapper","rest","dateForJobExplorer","readHostExplorer","constants","OrganizationStatistics","activeTabKey","setActiveTabKey","preflightIsSuccess","jobRunsByOrgParams","jobsError","jobsIsLoading","jobsIsSuccess","setJobs","jobsByDateAndOrgParams","orgs","hostAcrossOrgParams","orgsError","orgsIsLoading","orgsIsSuccess","setOrgs","readOrgOptions","optionsIsSuccess","jobEventsByOrgParams","tasks","tasksError","tasksIsLoading","tasksIsSuccess","setTasks","include_others","Tabs","activeKey","tabIndex","Tab","eventKey","readPlanOptions","fetchPlanOptions","canWrite","rbac","perms","write","Redirect","CardActionsWrapper","CardActionsRow","WarningMessage","Alert","DeleteButton","onConfirm","modalTitle","ouiaId","deleteMessage","deleteDetailsRequests","disabledTooltip","setIsOpen","deleteMessageError","setDeleteMessageError","deleteDetails","setDeleteDetails","toggleModal","getRelatedResourceDeleteCounts","results","detail","spinnerAriaValueText","actions","isInline","entries","Badge","RoutedTabs","tabsArray","defaultTabId","useLocation","tab","link","getActiveTabId","match","TabTitleText","role","arrayOf","shape","number","string","oneOfType","PFDivider","DetailsTab","plans","hosts","manual_time","modified","template_details","renderOptionsBasedValue","labelsAndValues","Name","Description","Frequency","Template","showTemplate","deletePlan","deletePlans","deleteError","relatedResourceDeleteRequests","readPlan","Error","isDeleteDisabled","deleteDetailsError","fetchDeleteDetails","useDismissableError","dismissError","List","task","ListItem","CardFooter","n","toFixed","toLocaleString","_a","_b","_c","isMoney","isPlain","CostsText","CodeBlock","CodeBlockCode","SavingsText","ButtonVariant","__assign","assign","s","arguments","prototype","hasOwnProperty","apply","yearLabels","initial","year1","year2","year3","cost","benefit","net","StatisticsTab","setIsMoney","barChartData","charts","kind","parent","domainPadding","themeColor","cursor","stickToAxis","mouseFollow","legendTooltip","legendData","childName","symbol","fill","titleProperyForLegend","customFnc","datum","grid","stroke","axisLabel","barRatio","barWidth","labelName","strokeWidth","functions","fetchFnc","resolve","year","total_costs","projections","monetary_stats","total_benefits","cumulative_net_benefits","total_hours_spent_risk_adjusted","time_stats","total_hours_saved","cumulative_time_net_benefits","response_type","getChartData","ToggleGroup","ToggleGroupItem","buttonId","isSelected","schema","Edit","useParams","Form","locationState","pageTitle","onEdit","indexOf","plansError","plansIsLoading","plansIsSuccess","breadcrumbUrl","breadcrumbsItems","Route","exact","EmptyList","canAdd","AddCircleOIcon","CardLabel","Small","Checkbox","PFCheckbox","CardDetail","template","plan","handleSelect","projectedSavings","isCardKebabOpen","setIsCardKebabOpen","useRouteMatch","kebabDropDownItems","DropdownItem","CardHeaderMain","Link","Dropdown","toggle","KebabToggle","dropdownItems","row","requiredField","username","image","ToolbarDeleteButton","itemsUnableToDelete","itemsToDelete","pluralizedItemName","onDelete","errorMessage","cannotDelete","Boolean","warningMessage","PageContainer","Footer","FlexMain","savingsPlanner","readPlans","itemsError","itemsIsSuccess","itemsIsLoading","combinedOptions","list","isAllSelected","prevState","useSelected","useDeleteItems","allItemsSelected","fetchItems","deleteLoading","deletionError","deleteItems","clearDeletionError","handleDelete","Gallery","minWidths","sm","md","xl","convertTasks","task_order","Details","formData","dispatch","categoryIsOpen","setCategoryIsOpen","manualTimeIsOpen","setManualTimeIsOpen","frequencyPeriodIsOpen","setFrequencyPeriodIsOpen","FormGroup","fieldId","newName","newDescription","NumberInput","inputAriaLabel","widthChars","event","isPositiveNum","onMinus","onPlus","TaskSection","TaskTitle","TaskDeleteButton","DeleteTaskActionSection","DataListAction","TaskRow","DataListItemRow","Tasks","taskToAdd","setTaskToAdd","liveText","setLiveText","appendTask","trimmedTask","trim","newTaskName","onDragFinish","newItemOrder","onDragStart","newId","onDragMove","oldIndex","newIndex","onDragCancel","itemOrder","DataListControl","DataListDragButton","aria-describedby","aria-pressed","DataListItemCells","dataListCells","removeTask","aria-live","ListFooter","Templates","formDispatch","hash","queryParamsDispatch","templatesIsError","sortParams","direction","onSort","_ev","_idx","dir","data-testid","startStep","setStartStep","requestPayload","updatePlan","createPlan","apiResponse","setData","useReducer","hourly_rate","frequency_per_period","usePlanData","steps","step_number","nextButtonText","CustomFooter","WizardFooter","WizardContextConsumer","activeStep","onNext","onBack","onSave","step","onStepChange","newStep","plan_created","Wizard","navAriaLabel","mainAriaLabel","onGoToStep","footer","startAtStep","defaultParams","roi","organizationStatistics","arrayFields","requests","hasCount","savingsPlan","readRecordApi","isNumeric","test","toString","dateTime","format","mins","integerFields","dateFields","config","queryString","qs","nsKey","rawValue","namespaceMatches","decodeURIComponent","searchParams","URLSearchParams","v","output","getAll","parseValue","mergeParam","stringToObject","addDefaultsToObject","fieldname","startsWith","encodeQueryString","encodeURIComponent","paramsWithoutDefaults","namespaceParams","namespaced","paramsToRemove","updated","removeParam","oldVal","deleteVal","splice","newParams","merged","newVal","arr","deduped","Set","initialParams","initialWithCalculatedParams","startDate","endDate","newState","newValues","actionMapper","varName","setEndDate","setStartDate","days","subtract","setStartDateAsString","query","makeRequest","initialValue","setResult","setError","setIsSuccess","isMounted","useRef","useIsMounted","showError","setShowError","requestError","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","exports","perPageOptions","getOwnPropertySymbols","propertyIsEnumerable","__rest","currentPage","floor","returnOffsetVal","page","itemCount","widgetId","perPage","onPerPageSelect","pageNumber","onSetPage","handleSetPageSize","Intl","NumberFormat","currency"],"mappings":"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","file":"js/automation_analytics.0619f9a501ca41aace3f.js","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nconst initializeChart = (Chart) => {\n  const BaseChart = (props) => {\n    const { id, margin } = props;\n\n    const getWidth = () => {\n      let width;\n      width =\n        parseInt(d3.select('#' + id).style('width')) -\n          margin.left -\n          margin.right || 700;\n      return width;\n    };\n\n    const getHeight = () => {\n      let height;\n      height =\n        parseInt(d3.select('#' + id).style('height')) -\n          margin.top -\n          margin.bottom || 450;\n      return height;\n    };\n\n    let history = useHistory();\n\n    return (\n      <Chart\n        {...props}\n        getWidth={getWidth}\n        getHeight={getHeight}\n        history={history}\n      />\n    );\n  };\n\n  BaseChart.propTypes = {\n    id: PropTypes.string,\n    margin: PropTypes.object,\n  };\n\n  return BaseChart;\n};\n\ninitializeChart.propTypes = {\n  Chart: PropTypes.element,\n};\n\nexport default initializeChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Modal, Title } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon as PFCheckCircleIcon,\n  ExclamationCircleIcon as PFExclamationCircleIcon,\n  ExclamationTriangleIcon as PFExclamationTriangleIcon,\n  InfoCircleIcon as PFInfoCircleIcon,\n  TimesCircleIcon as PFTimesCircleIcon,\n} from '@patternfly/react-icons';\nimport styled from 'styled-components';\n\nconst ExclamationCircleIcon = styled(PFExclamationCircleIcon)`\n  color: var(--pf-global--danger-color--100);\n`;\n\nconst TimesCircleIcon = styled(PFTimesCircleIcon)`\n  color: var(--pf-global--danger-color--100);\n`;\n\nconst InfoCircleIcon = styled(PFInfoCircleIcon)`\n  color: var(--pf-global--info-color--100);\n`;\n\nconst CheckCircleIcon = styled(PFCheckCircleIcon)`\n  color: var(--pf-global--success-color--100);\n`;\n\nconst ExclamationTriangleIcon = styled(PFExclamationTriangleIcon)`\n  color: var(--pf-global--warning-color--100);\n`;\n\nconst Header = styled.div`\n  display: flex;\n  svg {\n    margin-right: 16px;\n  }\n`;\n\nconst AlertModal = ({\n  isOpen,\n  title,\n  label = 'Alert modal',\n  variant = 'warning',\n  children,\n  ...props\n}) => {\n  const variantIcons = {\n    danger: <ExclamationCircleIcon size=\"lg\" />,\n    error: <TimesCircleIcon size=\"lg\" />,\n    info: <InfoCircleIcon size=\"lg\" />,\n    success: <CheckCircleIcon size=\"lg\" />,\n    warning: <ExclamationTriangleIcon size=\"lg\" />,\n  };\n\n  const customHeader = (\n    <Header>\n      {variant ? variantIcons[variant] : null}\n      <Title id=\"alert-modal-header-label\" size=\"2xl\" headingLevel=\"h2\">\n        {title}\n      </Title>\n    </Header>\n  );\n\n  return (\n    <Modal\n      header={customHeader}\n      aria-label={label}\n      aria-labelledby=\"alert-modal-header-label\"\n      isOpen={!!isOpen}\n      variant=\"small\"\n      title={title}\n      {...props}\n    >\n      {children}\n    </Modal>\n  );\n};\n\nAlertModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  variant: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default AlertModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { global_danger_color_200 as globalDangerColor200 } from '@patternfly/react-tokens';\n\nconst ApiErrorState = ({ message }) => (\n  <EmptyState variant={EmptyStateVariant.small}>\n    <EmptyStateIcon\n      icon={ExclamationCircleIcon}\n      color={globalDangerColor200.value}\n    />\n    <Title headingLevel=\"h2\" size=\"lg\">\n      Error\n    </Title>\n    <EmptyStateBody>{message}</EmptyStateBody>\n  </EmptyState>\n);\n\nApiErrorState.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default ApiErrorState;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbHeading,\n} from '@patternfly/react-core';\n\nimport getBaseName from '../Utilities/getBaseName';\n\nconst Breadcrumbs = ({ items = [], current = null }) => {\n  return (\n    <Breadcrumb>\n      {items.map(({ title, navigate }) => {\n        const basePathNavigate = getBaseName() + navigate;\n        return (\n          <BreadcrumbItem key={title} to={basePathNavigate}>\n            {title}\n          </BreadcrumbItem>\n        );\n      })}\n      {current && <BreadcrumbHeading>{current}</BreadcrumbHeading>}\n    </Breadcrumb>\n  );\n};\n\nBreadcrumbs.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      navigate: PropTypes.any,\n      title: PropTypes.node,\n    })\n  ),\n  current: PropTypes.node,\n};\n\nexport default Breadcrumbs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { WrenchIcon } from '@patternfly/react-icons';\n\nconst DefaultEmptyState = ({ preflightError: error }) => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={WrenchIcon} />\n    {error.status === 404 && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          No data found\n        </Title>\n        <EmptyStateBody>\n          Please visit{' '}\n          <a\n            href=\"https://docs.ansible.com/ansible-tower/latest/html/administration/usability_data_collection.html#automation-analytics\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            here\n          </a>{' '}\n          to learn how to enable Automation Analytics.\n        </EmptyStateBody>\n      </>\n    )}\n    {error.status === 401 && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          Not authorized\n        </Title>\n        <EmptyStateBody>\n          You do not have the correct permissions to view this page.\n        </EmptyStateBody>\n      </>\n    )}\n    {!error.status && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          Something went wrong, please try reloading the page\n        </Title>\n        <Button variant=\"primary\" onClick={() => window.location.reload()}>\n          Reload\n        </Button>\n      </>\n    )}\n  </EmptyState>\n);\n\nDefaultEmptyState.propTypes = {\n  preflightError: PropTypes.object,\n};\n\nexport default DefaultEmptyState;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Card as PFCard,\n  CardBody as PFCardBody,\n  ExpandableSection as PFExpandable,\n} from '@patternfly/react-core';\n\nconst Card = styled(PFCard)`\n  background-color: var(--pf-global--BackgroundColor--200);\n  overflow-wrap: break-word;\n`;\n\nconst CardBody = styled(PFCardBody)`\n  max-height: 200px;\n  overflow: scroll;\n`;\n\nconst Expandable = styled(PFExpandable)`\n  text-align: left;\n\n  & .pf-c-expandable__toggle {\n    padding-left: 10px;\n    margin-left: 5px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n`;\n\nfunction ErrorDetail({ error }) {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const handleToggle = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  return (\n    <>\n      {Array.isArray(error) && error.length && (\n        <Expandable\n          toggleText={'Details'}\n          onToggle={handleToggle}\n          isExpanded={isExpanded}\n        >\n          <Card>\n            <CardBody>\n              <ul>\n                {error.map((m) =>\n                  typeof m === 'string' ? <li key={m}>{m}</li> : null\n                )}\n              </ul>\n            </CardBody>\n          </Card>\n        </Expandable>\n      )}\n    </>\n  );\n}\n\nErrorDetail.propTypes = {\n  error: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default ErrorDetail;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ClockIcon,\n  SyncAltIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\n\nconst JobStatus = ({ status }) => {\n  const capitalized = (str) => str.charAt(0).toUpperCase() + str.slice(1);\n\n  const getColor = () => {\n    switch (status) {\n      case 'successful':\n        return 'green';\n      case 'failed':\n      case 'error':\n        return 'red';\n      case 'running':\n      case 'pending':\n        return 'blue';\n      case 'canceled':\n        return 'orange';\n      // case new, waiting\n      default:\n        return 'grey';\n    }\n  };\n\n  const getIcon = () => {\n    switch (status) {\n      case 'successful':\n        return <CheckCircleIcon />;\n      case 'failed':\n      case 'error':\n        return <ExclamationCircleIcon />;\n      case 'running':\n        return <SyncAltIcon />;\n      case 'canceled':\n        return <ExclamationTriangleIcon />;\n      // case new, waiting, pending\n      default:\n        return <ClockIcon />;\n    }\n  };\n\n  return (\n    <Label variant=\"outline\" color={getColor()} icon={getIcon()}>\n      {capitalized(status)}\n    </Label>\n  );\n};\n\nJobStatus.propTypes = {\n  status: PropTypes.oneOf([\n    'successful',\n    'failed',\n    'error',\n    'running',\n    'new',\n    'waiting',\n    'pending',\n    'canceled',\n  ]),\n};\n\nexport default JobStatus;\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst DefaultLoadingState = () => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={CubesIcon} />\n    <Title headingLevel=\"h5\" size=\"lg\">\n      Loading...\n    </Title>\n    <EmptyStateBody>Please wait.</EmptyStateBody>\n  </EmptyState>\n);\n\nexport default DefaultLoadingState;\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst NoData = () => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={CubesIcon} />\n    <Title headingLevel=\"h5\" size=\"lg\">\n      No Data\n    </Title>\n  </EmptyState>\n);\n\nexport default NoData;\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst NoResults = () => {\n  return (\n    <EmptyState variant={EmptyStateVariant.full}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title size=\"lg\" headingLevel=\"h4\">\n        No results found\n      </Title>\n      <EmptyStateBody>\n        No results match the filter criteria. Remove all filters or clear all\n        filters to show results.\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n\nexport default NoResults;\n","export const optionsForCategories = {\n  status: {\n    type: 'select',\n    isSingle: false,\n    name: 'Status',\n    placeholder: 'Filter by job status',\n    hasChips: true,\n  },\n  quick_date_range: {\n    type: 'select',\n    isSingle: true,\n    name: 'Date',\n    placeholder: 'Filter by date',\n    hasChips: false,\n  },\n  start_date: {\n    type: 'date',\n    name: 'Start date',\n    hasChips: false,\n  },\n  end_date: {\n    type: 'date',\n    name: 'End date',\n    hasChips: false,\n  },\n  job_type: {\n    type: 'select',\n    isSingle: false,\n    name: 'Job',\n    placeholder: 'Filter by job type',\n    hasChips: true,\n  },\n  org_id: {\n    type: 'select',\n    isSingle: false,\n    name: 'Organization',\n    placeholder: 'Filter by organization',\n    hasChips: true,\n  },\n  cluster_id: {\n    type: 'select',\n    isSingle: false,\n    name: 'Cluster',\n    placeholder: 'Filter by cluster',\n    hasChips: true,\n  },\n  template_id: {\n    type: 'select',\n    isSingle: false,\n    name: 'Template',\n    placeholder: 'Filter by template',\n    hasChips: true,\n  },\n  sort_options: {\n    type: 'select',\n    isSingle: true,\n    name: 'Sort by',\n    placeholder: 'Sort by attribute',\n    hasChips: false,\n  },\n  automation_status: {\n    type: 'select',\n    isSingle: false,\n    name: 'Automation status',\n    placeholder: 'Filter by automation status',\n    hasChips: true,\n  },\n  frequency_period: {\n    type: 'select',\n    isSingle: false,\n    name: 'Frequency',\n    placeholder: 'Filter by frequency',\n    hasChips: true,\n  },\n  category: {\n    type: 'select',\n    isSingle: false,\n    name: 'Category',\n    placeholder: 'Filter by category',\n    hasChips: true,\n  },\n  inventory_id: {\n    type: 'select',\n    isSingle: false,\n    name: 'Inventory',\n    placeholder: 'Filter by inventory',\n    hasChips: true,\n  },\n  name: {\n    type: 'text',\n    name: 'Search by name',\n    hasChips: true,\n  },\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarItem, Select, SelectOption } from '@patternfly/react-core';\n\nconst CategoryDropdown = ({\n  selected,\n  setSelected = () => {},\n  categories = [],\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <ToolbarItem>\n      <Select\n        isOpen={isExpanded}\n        variant={'single'}\n        aria-label={'Categories'}\n        onToggle={() => setIsExpanded(!isExpanded)}\n        onSelect={(_event, selection) => {\n          setSelected(selection);\n          setIsExpanded(false);\n        }}\n        selections={selected}\n        placeholderText={'Filter by'}\n      >\n        {categories.map(({ key, name }) => (\n          <SelectOption key={key} value={key}>\n            {name}\n          </SelectOption>\n        ))}\n      </Select>\n    </ToolbarItem>\n  );\n};\n\nCategoryDropdown.propTypes = {\n  categories: PropTypes.array,\n  selected: PropTypes.string,\n  setSelected: PropTypes.func,\n};\n\nexport default CategoryDropdown;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Tooltip,\n  ToolbarFilter,\n  Select as PFSelect,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\n\nimport { handleCheckboxChips, handleSingleChips } from './helpers';\nimport { optionsForCategories } from '../../constants';\nimport styled from 'styled-components';\n\nconst OptionSpan = styled('span')`\n  display: block;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n  max-width: 300px;\n`;\n\nconst renderValues = (values) =>\n  values &&\n  values.map(({ key, value, description }) => (\n    <SelectOption key={key} value={key} description={description}>\n      <Tooltip content={<div>{value}</div>}>\n        <OptionSpan>{value}</OptionSpan>\n      </Tooltip>\n    </SelectOption>\n  ));\n\nconst Select = ({\n  categoryKey,\n  value,\n  selectOptions,\n  isVisible = true,\n  setValue,\n}) => {\n  const [expanded, setExpanded] = useState(false);\n  const options = optionsForCategories[categoryKey];\n\n  const onDelete = (_, valueToDelete) => {\n    const single = optionsForCategories[categoryKey].isSingle;\n\n    if (single) {\n      setValue(null);\n    } else {\n      const keyToDelete = selectOptions.find(\n        ({ value }) => value === valueToDelete\n      ).key;\n      const filteredArr = value.filter((value) => value !== keyToDelete);\n      setValue(filteredArr);\n    }\n  };\n\n  const onFilter = (_, textInput) => {\n    if (textInput === '') {\n      return renderValues(selectOptions);\n    } else {\n      return renderValues(\n        selectOptions.filter(({ value }) =>\n          value.toLowerCase().includes(textInput.toLowerCase())\n        )\n      );\n    }\n  };\n\n  const handleChips = () => {\n    if (options.isSingle) {\n      return handleSingleChips(value, selectOptions);\n    } else {\n      return handleCheckboxChips(value, selectOptions);\n    }\n  };\n\n  const onSelect = (_, selection) => {\n    if (options.isSingle) {\n      setValue(selection);\n      setExpanded(false);\n    } else {\n      setValue(\n        !value.includes(selection)\n          ? [...value, selection]\n          : value.filter((value) => value !== selection)\n      );\n    }\n  };\n\n  return (\n    <ToolbarFilter\n      data-cy={categoryKey}\n      key={categoryKey}\n      showToolbarItem={isVisible}\n      chips={options.hasChips ? handleChips() : []}\n      categoryName={options.name}\n      deleteChip={options.hasChips ? onDelete : null}\n    >\n      <PFSelect\n        variant={\n          options.isSingle ? SelectVariant.single : SelectVariant.checkbox\n        }\n        aria-label={options.name}\n        onToggle={() => setExpanded(!expanded)}\n        onSelect={onSelect}\n        selections={value}\n        isOpen={expanded}\n        hasInlineFilter\n        placeholderText={options.placeholder}\n        onFilter={onFilter}\n        maxHeight={'1000%'}\n      >\n        {renderValues(selectOptions)}\n      </PFSelect>\n    </ToolbarFilter>\n  );\n};\n\nSelect.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]).isRequired,\n  selectOptions: PropTypes.array,\n  isVisible: PropTypes.bool,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default Select;\n","/**\n * Get comparator values if their key is in the item list\n */\nexport const handleCheckboxChips = (item, comparator) => {\n  if (item && comparator) {\n    return item.reduce((acc, i) => {\n      Number.isInteger(parseInt(i)) ? (i = parseInt(i)) : i;\n\n      comparator.forEach((cmpItem) => {\n        if (cmpItem.key === i) {\n          acc.push(cmpItem.value);\n        }\n      });\n\n      return acc;\n    }, []);\n  }\n\n  return [];\n};\n\n/**\n * Convert a list of objects to a list of the last value if defined\n */\nexport const handleSingleChips = (item, comparator) => {\n  if (item && typeof item === 'string' && comparator) {\n    let val;\n    comparator.forEach((i) => {\n      if (i.key === item) {\n        val = i.value;\n      }\n    });\n\n    if (val !== undefined) {\n      return [val];\n    }\n  }\n\n  return [];\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, TextInput } from '@patternfly/react-core';\nimport { optionsForCategories } from '../../constants';\n\nconst Date = ({ categoryKey, value = '', setValue = () => {} }) => {\n  const options = optionsForCategories[categoryKey];\n\n  return (\n    <InputGroup>\n      <TextInput\n        type=\"date\"\n        aria-label={options.name}\n        value={value}\n        onChange={setValue}\n      />\n    </InputGroup>\n  );\n};\n\nDate.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default Date;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ToolbarFilter,\n  TextInput,\n  InputGroup,\n  Button,\n} from '@patternfly/react-core';\n\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { optionsForCategories } from '../../constants';\n\nconst Text = ({ categoryKey, isVisible = true, value = '', setValue }) => {\n  const [searchVal, setSearchVal] = useState(value);\n  const options = optionsForCategories[categoryKey];\n\n  const onDelete = () => {\n    setValue('');\n  };\n\n  const handleChips = () => {\n    return value ? [value] : [];\n  };\n\n  useEffect(() => {\n    setSearchVal(value);\n  }, [value]);\n\n  return (\n    <ToolbarFilter\n      data-cy={categoryKey}\n      key={categoryKey}\n      showToolbarItem={isVisible}\n      chips={options.hasChips ? handleChips() : []}\n      categoryName={options.name}\n      deleteChip={options.hasChips ? onDelete : null}\n    >\n      <InputGroup>\n        <TextInput\n          type=\"search\"\n          aria-label={options.name}\n          value={searchVal}\n          onChange={setSearchVal}\n          onKeyDown={(e) => {\n            if (e.key && e.key === 'Enter') {\n              e.preventDefault();\n              setValue(searchVal);\n            }\n          }}\n        />\n        <Button\n          variant=\"control\"\n          aria-label={`Search button for ${options.name}`}\n          onClick={() => {\n            setValue(searchVal);\n          }}\n        >\n          <SearchIcon />\n        </Button>\n      </InputGroup>\n    </ToolbarFilter>\n  );\n};\n\nText.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.any,\n  isVisible: PropTypes.bool,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default Text;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Select from './Select';\nimport Date from './Date';\nimport Text from './Text';\nimport { optionsForCategories } from '../../constants';\n\nconst components = {\n  select: Select,\n  date: Date,\n  text: Text,\n};\n\nconst ToolbarInput = ({\n  categoryKey,\n  value,\n  selectOptions,\n  isVisible = true,\n  setValue,\n}) => {\n  const options = optionsForCategories[categoryKey];\n  const SelectedInput = components[options.type];\n\n  const defaultValue = () => {\n    if (value) {\n      return value;\n    } else if (options.type !== 'select') {\n      return '';\n    } else if (options.isSingle) {\n      return '';\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <SelectedInput\n      categoryKey={categoryKey}\n      value={defaultValue()}\n      selectOptions={selectOptions}\n      isVisible={isVisible}\n      setValue={setValue}\n    />\n  );\n};\n\nToolbarInput.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  selectOptions: PropTypes.array,\n  isVisible: PropTypes.bool,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default ToolbarInput;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarGroup } from '@patternfly/react-core';\n\nimport CategoryDropdown from './CategoryDropdown';\nimport ToolbarInput from './ToolbarInput/';\nimport { optionsForCategories } from '../constants';\n\nconst FilterCategoriesGroup = ({\n  filterCategories,\n  filters,\n  handleSearch,\n  setFilters,\n}) => {\n  const [currentCategory, setCurrentCategory] = useState(\n    Object.keys(filterCategories)[0]\n  );\n\n  return (\n    <ToolbarGroup variant=\"filter-group\">\n      <CategoryDropdown\n        selected={currentCategory}\n        setSelected={setCurrentCategory}\n        categories={Object.keys(filterCategories).map((el) => ({\n          key: el,\n          name: optionsForCategories[el].name,\n        }))}\n      />\n      {Object.keys(filterCategories).map((key) => (\n        <ToolbarInput\n          key={key}\n          categoryKey={key}\n          value={filters[key]}\n          selectOptions={filterCategories[key]}\n          isVisible={currentCategory === key}\n          setValue={(value) => {\n            setFilters(key, value);\n            handleSearch(key, value);\n          }}\n        />\n      ))}\n    </ToolbarGroup>\n  );\n};\n\nFilterCategoriesGroup.propTypes = {\n  filterCategories: PropTypes.object.isRequired,\n  filters: PropTypes.object.isRequired,\n  handleSearch: PropTypes.func.isRequired,\n  setFilters: PropTypes.func.isRequired,\n};\n\nexport default FilterCategoriesGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarGroup } from '@patternfly/react-core';\n\nimport ToolbarInput from './ToolbarInput/';\n\nconst QuickDateGroup = ({ filters, handleSearch, setFilters, values }) => (\n  <ToolbarGroup variant=\"filter-group\">\n    <ToolbarInput\n      categoryKey=\"quick_date_range\"\n      value={filters.quick_date_range}\n      selectOptions={values}\n      setValue={(value) => {\n        setFilters('quick_date_range', value);\n        handleSearch('quick_date_range', value);\n      }}\n    />\n    {filters.quick_date_range && filters.quick_date_range.includes('custom') && (\n      <>\n        <ToolbarInput\n          categoryKey=\"start_date\"\n          value={filters.start_date}\n          setValue={(e) => {\n            setFilters('start_date', e);\n            handleSearch('start_date', e);\n          }}\n        />\n        <ToolbarInput\n          categoryKey=\"end_date\"\n          value={filters.end_date}\n          setValue={(e) => {\n            setFilters('end_date', e);\n            handleSearch('end_date', e);\n          }}\n        />\n      </>\n    )}\n  </ToolbarGroup>\n);\n\nQuickDateGroup.propTypes = {\n  filters: PropTypes.object.isRequired,\n  handleSearch: PropTypes.func.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  values: PropTypes.array.isRequired,\n};\n\nexport default QuickDateGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarGroup, Button } from '@patternfly/react-core';\nimport { SortAmountDownIcon, SortAmountUpIcon } from '@patternfly/react-icons';\n\nimport ToolbarInput from './ToolbarInput';\n\nconst SortByGroup = ({ filters, handleSearch, setFilters, sort_options }) => (\n  <ToolbarGroup variant=\"filter-group\">\n    <ToolbarInput\n      categoryKey=\"sort_options\"\n      value={filters.sort_options}\n      selectOptions={sort_options}\n      setValue={(value) => {\n        setFilters('sort_options', value);\n        handleSearch('sort_options', value);\n      }}\n    />\n    <Button\n      variant=\"control\"\n      onClick={() => {\n        setFilters('sort_order', filters.sort_order === 'asc' ? 'desc' : 'asc');\n        handleSearch(\n          'sort_order',\n          filters.sort_order === 'asc' ? 'desc' : 'asc'\n        );\n      }}\n    >\n      {filters.sort_order === 'asc' && <SortAmountUpIcon />}\n      {filters.sort_order === 'desc' && <SortAmountDownIcon />}\n    </Button>\n  </ToolbarGroup>\n);\n\nSortByGroup.propTypes = {\n  filters: PropTypes.object.isRequired,\n  handleSearch: PropTypes.func.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  sort_options: PropTypes.array.isRequired,\n};\n\nexport default SortByGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, Switch } from '@patternfly/react-core';\nimport {\n  Card,\n  CardTitle,\n  CardBody,\n  CardActions,\n  CardHeader,\n} from '@patternfly/react-core';\nimport { QuestionCircleIcon, TimesIcon } from '@patternfly/react-icons';\n\n/* TODO: For future work: make settings more modular for different pages */\nconst SettingsPanel = ({\n  filters,\n  handleSearch,\n  setFilters,\n  settingsExpanded,\n  setSettingsExpanded,\n}) => (\n  <Card isFlat style={{ backgroundColor: '#EEEEEE' }}>\n    <CardHeader>\n      <CardActions>\n        <Button\n          variant=\"plain\"\n          onClick={() => setSettingsExpanded(!settingsExpanded)}\n        >\n          <TimesIcon />\n        </Button>\n      </CardActions>\n      <CardTitle>Settings</CardTitle>\n    </CardHeader>\n    <CardBody>\n      <Switch\n        id=\"showRootWorkflowJobs\"\n        label=\"Ignore nested workflows and jobs\"\n        labelOff=\"Ignore nested workflows and jobs\"\n        isChecked={filters.only_root_workflows_and_standalone_jobs}\n        onChange={(val) => {\n          setFilters('only_root_workflows_and_standalone_jobs', val);\n          handleSearch('only_root_workflows_and_standalone_jobs', val);\n        }}\n      />\n      <Tooltip\n        position={'top'}\n        content={\n          <div>\n            {' '}\n            If enabled, nested workflows and jobs will not be included in the\n            overall totals. Enable this option to filter out duplicate entries.\n          </div>\n        }\n      >\n        <QuestionCircleIcon />\n      </Tooltip>\n    </CardBody>\n  </Card>\n);\n\nSettingsPanel.propTypes = {\n  filters: PropTypes.object.isRequired,\n  handleSearch: PropTypes.func.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  settingsExpanded: PropTypes.bool.isRequired,\n  setSettingsExpanded: PropTypes.func.isRequired,\n};\n\nexport default SettingsPanel;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  Button,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { FilterIcon, CogIcon } from '@patternfly/react-icons';\n\nimport { optionsForCategories } from './constants';\nimport {\n  FilterCategoriesGroup,\n  QuickDateGroup,\n  SortByGroup,\n  SettingsPanel,\n} from './Groups/';\nimport { useHistory } from 'react-router-dom';\nimport {\n  encodeNonDefaultQueryString,\n  parseQueryString,\n  mergeParams,\n  removeParams,\n  replaceParams,\n} from '../../Utilities/qs';\n\nconst FilterableToolbar = ({\n  categories,\n  filters,\n  qsConfig,\n  setFilters,\n  pagination = null,\n  hasSettings = false,\n  additionalControls = [],\n  hideQuickDateRange = false,\n  hideSortOptions = false,\n}) => {\n  const [settingsExpanded, setSettingsExpanded] = useState(false);\n  const { quick_date_range, sort_options, ...restCategories } = categories;\n  const history = useHistory();\n\n  // Filter out elements which are not in the option object.\n  const filterCategories = Object.keys(restCategories)\n    .filter((key) => Object.keys(optionsForCategories).includes(key))\n    .reduce((obj, key) => {\n      obj[key] = restCategories[key];\n      return obj;\n    }, {});\n\n  const handleSearch = (key, value) => {\n    let params = parseQueryString(qsConfig, history.location.search);\n    params = replaceParams(params, { [key]: value });\n    params = mergeParams(params, { [key]: value });\n    if (value === '' || value.length === 0)\n      params = removeParams(qsConfig, params, { [key]: params[key] });\n    pushHistoryState(params, qsConfig);\n  };\n\n  const handleRemoveAll = (qsConfig) => {\n    // remove everything in oldParams except for page_size and order_by\n    const oldParams = parseQueryString(qsConfig, history.location.search);\n    const oldParamsClone = { ...oldParams };\n    delete oldParamsClone.limit;\n    delete oldParamsClone.sort_by;\n    pushHistoryState(\n      removeParams(qsConfig, oldParams, oldParamsClone),\n      qsConfig\n    );\n  };\n\n  const pushHistoryState = (params, qsConfig) => {\n    const { pathname } = history.location;\n    const nonNamespacedParams = parseQueryString({}, history.location.search);\n    const encodedParams = encodeNonDefaultQueryString(\n      qsConfig,\n      params,\n      nonNamespacedParams\n    );\n    history.push(encodedParams ? `${pathname}?${encodedParams}` : pathname);\n  };\n\n  return (\n    <>\n      <Toolbar\n        id={`${qsConfig.namespace}-filterable-toolbar-with-chip-groups`}\n        clearAllFilters={() => {\n          handleRemoveAll(qsConfig);\n          setFilters(null, null);\n        }}\n        collapseListedFiltersBreakpoint=\"xl\"\n      >\n        <ToolbarContent>\n          <Button variant=\"control\">\n            <FilterIcon />\n          </Button>\n          {Object.keys(filterCategories).length > 0 && (\n            <FilterCategoriesGroup\n              filterCategories={filterCategories}\n              filters={filters}\n              setFilters={setFilters}\n              handleSearch={handleSearch}\n            />\n          )}\n          {!hideQuickDateRange && quick_date_range && (\n            <QuickDateGroup\n              filters={filters}\n              setFilters={setFilters}\n              values={quick_date_range}\n              handleSearch={handleSearch}\n            />\n          )}\n          {!hideSortOptions && sort_options && (\n            <SortByGroup\n              filters={filters}\n              setFilters={setFilters}\n              sort_options={sort_options}\n              handleSearch={handleSearch}\n            />\n          )}\n          {hasSettings && (\n            <ToolbarItem>\n              <Button\n                variant=\"plain\"\n                onClick={() => setSettingsExpanded(!settingsExpanded)}\n                aria-label=\"settings\"\n                isActive={settingsExpanded}\n              >\n                <CogIcon />\n              </Button>\n            </ToolbarItem>\n          )}\n          {additionalControls.length > 0 && (\n            <ToolbarGroup>\n              {additionalControls.map((control, idx) => (\n                <ToolbarItem key={idx}>{control}</ToolbarItem>\n              ))}\n            </ToolbarGroup>\n          )}\n          {pagination && (\n            <ToolbarItem\n              variant=\"pagination\"\n              visibility={{ default: 'hidden', lg: 'visible' }}\n            >\n              {pagination}\n            </ToolbarItem>\n          )}\n        </ToolbarContent>\n        {settingsExpanded && (\n          <SettingsPanel\n            filters={filters}\n            setFilters={setFilters}\n            handleSearch={handleSearch}\n            settingsExpanded={settingsExpanded}\n            setSettingsExpanded={setSettingsExpanded}\n          />\n        )}\n      </Toolbar>\n    </>\n  );\n};\n\nFilterableToolbar.propTypes = {\n  categories: PropTypes.object.isRequired,\n  qsConfig: PropTypes.object.isRequired,\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  pagination: PropTypes.object,\n  hasSettings: PropTypes.bool,\n  additionalControls: PropTypes.array,\n  hideSortOptions: PropTypes.bool,\n  hideQuickDateRange: PropTypes.bool,\n};\n\nexport default FilterableToolbar;\n","import Toolbar from './Toolbar';\nexport default Toolbar;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport currencyFormatter from '../Utilities/currencyFormatter';\n\nclass Tooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip-base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, 0) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', 92)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.name = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', -2)\n      .text('Template name');\n    this.savings = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 52)\n      .attr('font-size', 12)\n      .attr('font-weight', 'bold')\n      .attr('fill', 'white')\n      .text('Total savings $0');\n    this.manualCost = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', 16)\n      .text('Manual cost $0');\n    this.automationCost = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', 34)\n      .text('Automation cost $0');\n  }\n\n  handleMouseOver = (d) => {\n    let name;\n    let savings;\n    let manualCost;\n    let automationCost;\n    const scrollLeftOffset = d3.select('#d3-roi-chart-root').node().scrollLeft;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10 +\n      scrollLeftOffset;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      30;\n    if (!d) {\n      return;\n    } else {\n      savings = currencyFormatter(+d.delta);\n      name = d.name;\n      manualCost = currencyFormatter(+d.manualCost);\n      automationCost = currencyFormatter(+d.automatedCost);\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n    this.name.text('' + name);\n    this.savings.text(`Total savings ${savings}`);\n    this.manualCost.text(`Manual Cost ${manualCost}`);\n    this.automationCost.text(`Automation Cost ${automationCost}`);\n    this.nameWidth = this.name.node().getComputedTextLength();\n    this.savingsWidth = this.savings.node().getComputedTextLength();\n    this.manualCostWidth = this.manualCost.node().getComputedTextLength();\n    this.automationCostWidth = this.automationCost\n      .node()\n      .getComputedTextLength();\n    this.widestTextElem = d3.max([\n      this.nameWidth,\n      this.savingsWidth,\n      this.automationCostWidth,\n      this.manualCostWidth,\n    ]);\n\n    const maxTextPerc = (this.widestTextElem / this.boxWidth) * 100;\n    const threshold = 85;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 15) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.name.attr('x', -(toolTipWidth - 7));\n      this.savings.attr('x', -(toolTipWidth - 7));\n      this.manualCost.attr('x', -(toolTipWidth - 7));\n      this.automationCost.attr('x', -(toolTipWidth - 7));\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 15) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.name.attr('x', 20);\n      this.savings.attr('x', 20);\n      this.manualCost.attr('x', 20);\n      this.automationCost.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass TopTemplatesSavings extends Component {\n  constructor(props) {\n    super(props);\n    this.init = this.init.bind(this);\n    this.draw = this.draw.bind(this);\n    this.resize = this.resize.bind(this);\n    this.state = {\n      timeout: null,\n    };\n  }\n\n  // Methods\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  init() {\n    this.draw();\n  }\n\n  draw() {\n    // Use PF chart color\n    const color = '#0066CC'; //blue\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const { data } = this.props;\n    let width;\n    // adjust chart width to support larger datasets\n    if (data.length >= 15) {\n      const containerWidth = d3.select('.automation-wrapper').node();\n      width =\n        containerWidth.getBoundingClientRect().width -\n        this.props.margin.left -\n        this.props.margin.right;\n    } else {\n      width = this.props.getWidth();\n    }\n\n    const height = this.props.getHeight();\n    const x = d3.scaleBand().rangeRound([0, width]).padding(0.45);\n    const y = d3.scaleLinear().range([height, 0]);\n    // format our X Axis ticks\n    let ticks;\n    ticks = data.map((d) => d.name);\n    const formatYAxisValue = d3.format('.2s');\n    const xAxis = d3.axisBottom(x).tickValues(ticks);\n\n    const yAxis = d3\n      .axisLeft(y)\n      .ticks(8)\n      .tickFormat((d) => formatYAxisValue(d).replace('G', 'B'))\n      .tickSize(-width, 0, 0);\n\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n\n    const taskNames = data.map((d) => d.name);\n    const tooltip = new Tooltip({\n      svg: '#' + this.props.id,\n    });\n    x.domain(taskNames);\n    y.domain([0, d3.max(data, (d) => d.delta * 1.15) || 8]);\n\n    // add y axis\n    svg\n      .append('g')\n      .attr('class', 'y axis')\n      .call(yAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7')\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 6)\n      .attr('dy', '.71em')\n      .style('text-anchor', 'end')\n      .style('font-weight', 'bold')\n      .text('Value');\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Savings per template ($)');\n\n    // add x axis\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n      .selectAll('text')\n      .style('text-anchor', 'start')\n      .attr('dx', '0.75em')\n      .attr('dy', -x.bandwidth() / 1.45 - 8)\n      .attr('transform', 'rotate(-90)');\n\n    svg.selectAll('.x-axis line').attr('stroke', 'transparent');\n\n    svg\n      .selectAll('.bar')\n      .data(data)\n      .enter()\n      .append('rect')\n      .attr('x', (d) => x(d.name))\n      .attr('width', x.bandwidth())\n      .attr('y', (d) => y(d.delta))\n      .style('fill', () => color)\n      .attr('height', (d) => height - y(d.delta))\n      .on('mouseover', function (d) {\n        d3.select(this).style('fill', d3.rgb(color).darker(1));\n        tooltip.handleMouseOver(d);\n      })\n      .on('mousemove', tooltip.handleMouseOver)\n      .on('mouseout', function () {\n        d3.select(this).style('fill', color);\n        tooltip.handleMouseOut();\n      });\n  }\n\n  componentDidMount() {\n    this.init();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate() {\n    this.init();\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nTopTemplatesSavings.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n};\n\nexport default initializeChart(TopTemplatesSavings);\n","import styled from 'styled-components';\nimport { CardTitle } from '@patternfly/react-core';\n\nexport const BorderedCardTitle = styled(CardTitle)`\n  border-bottom: 1px solid #d7d7d7;\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle, Title } from '@patternfly/react-core';\nimport currencyFormatter from '../../Utilities/currencyFormatter';\n\nconst TotalSavings = ({ totalSavings = 0 }) => (\n  <Card style={{ borderTop: '3px solid #2B9AF3' }}>\n    <CardTitle style={{ paddingBottom: '0' }}>Total savings</CardTitle>\n    <CardBody>\n      <Title\n        headingLevel=\"h3\"\n        size=\"4xl\"\n        style={{ color: 'var(--pf-global--success-color--200)' }}\n      >\n        {currencyFormatter(totalSavings)}\n      </Title>\n    </CardBody>\n  </Card>\n);\n\nTotalSavings.propTypes = {\n  totalSavings: PropTypes.number,\n};\n\nexport default TotalSavings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Card,\n  CardBody,\n  InputGroup,\n  InputGroupText,\n  TextInput,\n} from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst validFloat = (value) => {\n  const floatValue = parseFloat(value);\n  return floatValue && floatValue >= 0 ? value : '';\n};\n\nconst CalculationCost = ({\n  costManual = '0',\n  setCostManual = () => {},\n  costAutomation = '0',\n  setCostAutomation = () => {},\n}) => (\n  <Card>\n    <CardTitle>Calculate your automation</CardTitle>\n    <CardBody>\n      <InputAndText>\n        <p>Manual cost of automation</p>\n        <em style={{ color: 'var(--pf-global--Color--dark-200)' }}>\n          (e.g. average salary of mid-level Software Engineer)\n        </em>\n        <InputGroup style={{ width: '50%' }}>\n          <InputGroupText>\n            <DollarSignIcon />\n          </InputGroupText>\n          <TextInput\n            id=\"manual-cost\"\n            type=\"number\"\n            aria-label=\"manual-cost\"\n            value={costManual}\n            onChange={(e) => setCostManual(validFloat(e))}\n          />\n          <InputGroupText>/hr</InputGroupText>\n        </InputGroup>\n      </InputAndText>\n      <InputAndText style={{ paddingTop: '10px' }}>\n        <p>Automated process cost</p>\n        <InputGroup style={{ width: '50%' }}>\n          <InputGroupText>\n            <DollarSignIcon />\n          </InputGroupText>\n          <TextInput\n            id=\"automation-cost\"\n            type=\"number\"\n            aria-label=\"automation-cost\"\n            value={costAutomation}\n            onChange={(e) => setCostAutomation(validFloat(e))}\n          />\n          <InputGroupText>/hr</InputGroupText>\n        </InputGroup>\n      </InputAndText>\n    </CardBody>\n  </Card>\n);\n\nCalculationCost.propTypes = {\n  costManual: PropTypes.string,\n  setCostManual: PropTypes.func,\n  costAutomation: PropTypes.string,\n  setCostAutomation: PropTypes.func,\n};\n\nexport default CalculationCost;\n","import React from 'react';\n\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst AutomationFormula = () => (\n  <Card style={{ height: '100%' }}>\n    <CardTitle>Automation formula</CardTitle>\n    <CardBody>\n      <p>\n        <b>Manual cost for template x</b> =\n        <em>\n          (time for a manual run on one host in hours * (sum of all hosts across\n          all job runs) ) * cost per hour\n        </em>\n      </p>\n      <p>\n        <b>Automation cost for template x</b> =\n        <em>\n          cost of automation per hour * sum of total elapsed hours for a\n          template\n        </em>\n      </p>\n      <p>\n        <b>Savings</b> =\n        <em>Sum of (manual cost - automation cost) across all templates</em>\n      </p>\n    </CardBody>\n  </Card>\n);\n\nexport default AutomationFormula;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  InputGroup,\n  InputGroupText,\n  TextInput,\n  Tooltip,\n  Popover,\n} from '@patternfly/react-core';\nimport {\n  InfoCircleIcon,\n  ToggleOnIcon,\n  ToggleOffIcon,\n} from '@patternfly/react-icons';\n\nimport {\n  convertSecondsToMins,\n  convertMinsToSeconds,\n  capitalize,\n} from '../../Utilities/helpers';\n\nimport currencyFormatter from '../../Utilities/currencyFormatter';\n\nconst TemplateDetail = styled.div`\n  em {\n    display: block;\n    padding: 5px 0;\n  }\n\n  @media (max-width: 1490px) {\n    display: block;\n\n    em {\n      padding: 10px 0;\n      display: block;\n    }\n  }\n`;\n\nconst TemplateDetailSubTitle = styled.em`\n  color: var(--pf-global--Color--dark-200);\n`;\n\nconst TooltipWrapper = styled.div`\n  p {\n    text-align: left;\n  }\n`;\n\nconst IconGroup = styled.div`\n  & svg {\n    fill: var(--pf-global--Color--dark-200);\n\n    :hover {\n      cursor: pointer;\n    }\n\n    :first-of-type {\n      margin-right: 10px;\n      margin-left: 10px;\n\n      @media (max-width: 1350px) {\n        margin-left: 0;\n      }\n    }\n  }\n`;\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst showSortAttr = (details, sortBy) => {\n  const trimmed = sortBy.split(':')[0];\n  const sortAttribute = Object.keys(details).map((k) =>\n    k === trimmed ? `${details[k]}` : null\n  );\n\n  return (\n    <TemplateDetailSubTitle>\n      {capitalize(trimmed.split('_').join(' '))}: {sortAttribute}\n    </TemplateDetailSubTitle>\n  );\n};\n\nconst QuestionIconTooltip = ({ details }) => (\n  <Popover\n    aria-label=\"template detail popover\"\n    position=\"left\"\n    bodyContent={\n      <TooltipWrapper>\n        {Object.keys(details).map((k, i) => (\n          <p key={i}>\n            <b>{capitalize(k.split('_').join(' '))}</b>: {details[k]}\n          </p>\n        ))}\n      </TooltipWrapper>\n    }\n  >\n    <InfoCircleIcon />\n  </Popover>\n);\n\nQuestionIconTooltip.propTypes = {\n  details: PropTypes.object,\n};\n\nconst TopTemplates = ({\n  data = [],\n  sortBy = '',\n  setDataRunTime = () => {},\n  setEnabled = () => {},\n  redirectToJobExplorer = () => {},\n}) => (\n  <Card>\n    <CardBody>\n      <p>Enter the time it takes to run the following templates manually.</p>\n      {data.map((d) => (\n        <div key={d.id}>\n          <Tooltip content={'List of jobs for this template for past 30 days'}>\n            <Button\n              style={{ padding: '15px 0 10px' }}\n              component=\"a\"\n              onClick={() => redirectToJobExplorer(d.id)}\n              variant=\"link\"\n            >\n              {d.name}\n            </Button>\n          </Tooltip>\n          <TemplateDetail>\n            <InputAndText key={d.id}>\n              <InputGroup>\n                <TextInput\n                  id={d.id}\n                  type=\"number\"\n                  aria-label=\"time run manually\"\n                  value={convertSecondsToMins(d.avgRunTime)}\n                  onChange={(minutes) =>\n                    setDataRunTime(convertMinsToSeconds(minutes), d.id)\n                  }\n                />\n                <InputGroupText>min</InputGroupText>\n              </InputGroup>\n            </InputAndText>\n            <TemplateDetailSubTitle>\n              x {d.successful_hosts_total} host runs\n            </TemplateDetailSubTitle>\n            {showSortAttr(d, sortBy)}\n            <IconGroup>\n              <QuestionIconTooltip details={d} />\n              {!d.enabled && (\n                <ToggleOffIcon onClick={() => setEnabled(d.id)(true)} />\n              )}\n              {d.enabled && (\n                <ToggleOnIcon onClick={() => setEnabled(d.id)(false)} />\n              )}\n            </IconGroup>\n          </TemplateDetail>\n          <p style={{ color: '#486B00' }}>{currencyFormatter(+d.delta)}</p>\n        </div>\n      ))}\n    </CardBody>\n  </Card>\n);\n\nTopTemplates.propTypes = {\n  data: PropTypes.array,\n  setDataRunTime: PropTypes.func,\n  redirectToJobExplorer: PropTypes.func,\n  deselectedIds: PropTypes.array,\n  setDeselectedIds: PropTypes.func,\n  setEnabled: PropTypes.func,\n  sortBy: PropTypes.string,\n};\n\nexport default TopTemplates;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport {\n  Card,\n  CardBody,\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n} from '@patternfly/react-core';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\n// Imports from custom components\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\n// Imports from API\nimport { preflightRequest, readROI, readROIOptions } from '../../Api/';\n\n// Imports from utilities\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport { roi as roiConst } from '../../Utilities/constants';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { calculateDelta, convertSecondsToHours } from '../../Utilities/helpers';\n\n// Chart\nimport TopTemplatesSavings from '../../Charts/ROITopTemplates';\n\n// Local imports\nimport { BorderedCardTitle } from './helpers';\nimport TotalSavings from './TotalSavings';\nimport CalculationCost from './CalculationCost';\nimport AutomationFormula from './AutomationFormula';\nimport TopTemplates from './TopTemplates';\nimport useRequest from '../../Utilities/useRequest';\nimport { getQSConfig } from '../../Utilities/qs';\n\nconst mapApi = ({ items = [] }) =>\n  items.map((el) => ({\n    ...el,\n    delta: 0,\n    avgRunTime: 3600,\n    manualCost: 0,\n    automatedCost: 0,\n    enabled: true,\n  }));\n\nconst filterDisabled = (data) => data.filter(({ enabled }) => enabled);\n\nconst updateDeltaCost = (data, costAutomation, costManual) =>\n  data.map((el) => {\n    const manualCost =\n      convertSecondsToHours(el.avgRunTime) *\n      el.successful_hosts_total *\n      parseFloat(costManual);\n    const automatedCost =\n      convertSecondsToHours(el.successful_elapsed_total) *\n      parseFloat(costAutomation);\n    const delta = calculateDelta(automatedCost, manualCost);\n\n    return { ...el, delta, manualCost, automatedCost };\n  });\n\nconst computeTotalSavings = (data) =>\n  data.reduce((sum, curr) => sum + curr.delta, 0);\n\nconst qsConfig = getQSConfig('clusters', { ...roiConst.defaultParams }, [\n  'limit',\n  'offset',\n]);\n\nconst AutomationCalculator = ({ history }) => {\n  const toJobExplorer = useRedirect(history, 'jobExplorer');\n  const [costManual, setCostManual] = useState('50');\n  const [costAutomation, setCostAutomation] = useState('20');\n\n  // params from toolbar/searchbar\n  const { queryParams, setFromToolbar } = useQueryParams(qsConfig);\n\n  const {\n    error: preflightError,\n    isLoading: preflightIsLoading,\n    request: setPreflight,\n  } = useRequest(\n    useCallback(async () => {\n      const preflight = await preflightRequest();\n      return { preflight: preflight };\n    }, []),\n    { preflight: {}, preflightError, preflightIsLoading }\n  );\n\n  const {\n    result: { options },\n    error: optionsError,\n    isLoading: optionsIsLoading,\n    request: setOptions,\n  } = useRequest(\n    useCallback(async () => {\n      const options = await readROIOptions({ params: queryParams });\n      return { options: options };\n    }, [queryParams]),\n    { options: {}, optionsError, optionsIsLoading }\n  );\n\n  const {\n    result: { data: api },\n    error: apiError,\n    isLoading: apiIsLoading,\n    request: fetchEndpoint,\n    setValue,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await readROI({ params: queryParams });\n      return {\n        data: updateDeltaCost(mapApi(response), costAutomation, costManual),\n      };\n    }, [queryParams]),\n    { data: [], apiError, apiIsLoading }\n  );\n\n  /**\n   * Modifies one elements avgRunTime in the unfilteredData\n   * and updates all calculated fields.\n   * Used in top templates.\n   */\n  const setDataRunTime = (seconds, id) => {\n    const updatedData = api.map((el) => {\n      if (el.id === id) {\n        el.avgRunTime = seconds;\n        const updatedDelta = updateDeltaCost(\n          [el],\n          costAutomation,\n          costManual\n        )[0];\n        return updatedDelta;\n      } else {\n        return el;\n      }\n    });\n\n    setValue({ data: updatedData });\n  };\n\n  const setEnabled = (id) => (value) => {\n    setValue({\n      data: api.map((el) => (el.id === id ? { ...el, enabled: value } : el)),\n    });\n  };\n\n  useEffect(() => {\n    setPreflight();\n    setOptions();\n  }, []);\n\n  /**\n   * Recalculates the delta and costs in the data after the cost is changed.\n   */\n  useEffect(() => {\n    setValue({ data: updateDeltaCost(api, costAutomation, costManual) });\n  }, [costAutomation, costManual]);\n\n  /**\n   * Get data from API depending on the queryParam.\n   */\n  useEffect(() => {\n    setOptions();\n    fetchEndpoint();\n  }, [queryParams]);\n\n  /**\n   * Function to redirect to the job explorer page\n   * with the same filters as is used here.\n   */\n  const redirectToJobExplorer = (templateId) => {\n    const initialQueryParams = {\n      quick_date_range: 'last_30_days',\n      template_id: [templateId],\n    };\n    toJobExplorer(initialQueryParams);\n  };\n\n  const renderLeft = () => (\n    <Stack hasGutter>\n      <StackItem>\n        <Card>\n          <BorderedCardTitle>Automation savings</BorderedCardTitle>\n          <CardBody>\n            {apiIsLoading && <LoadingState />}\n            {apiError && <ApiErrorState message={apiError.error} />}\n            {api.length <= 0 && <NoData />}\n            {api.length > 0 && (\n              <React.Fragment>\n                <TopTemplatesSavings\n                  margin={{ top: 20, right: 20, bottom: 20, left: 70 }}\n                  id=\"d3-roi-chart-root\"\n                  data={filterDisabled(api)}\n                />\n                <p style={{ textAlign: 'center' }}>Templates</p>\n              </React.Fragment>\n            )}\n          </CardBody>\n        </Card>\n      </StackItem>\n      <StackItem isFilled>\n        <AutomationFormula />\n      </StackItem>\n    </Stack>\n  );\n\n  const renderRight = () => (\n    <Stack hasGutter>\n      <StackItem>\n        <TotalSavings totalSavings={computeTotalSavings(filterDisabled(api))} />\n      </StackItem>\n      <StackItem>\n        <Stack>\n          <StackItem>\n            <CalculationCost\n              costManual={costManual}\n              setCostManual={setCostManual}\n              costAutomation={costAutomation}\n              setCostAutomation={setCostAutomation}\n            />\n          </StackItem>\n          <StackItem style={{ overflow: 'auto', maxHeight: '48vh' }}>\n            <TopTemplates\n              redirectToJobExplorer={redirectToJobExplorer}\n              data={api}\n              setDataRunTime={setDataRunTime}\n              setUnfilteredData={api}\n              setEnabled={setEnabled}\n              sortBy={queryParams.sort_by}\n            />\n          </StackItem>\n        </Stack>\n      </StackItem>\n    </Stack>\n  );\n\n  if (preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  const renderContents = () => {\n    if (preflightError) return <EmptyState preflightError={preflightError} />;\n    else if (api)\n      return (\n        <Grid hasGutter className=\"automation-wrapper\">\n          <GridItem span={9}>{renderLeft()}</GridItem>\n          <GridItem span={3}>{renderRight()}</GridItem>\n        </Grid>\n      );\n    else return <></>;\n  };\n\n  return (\n    <>\n      <PageHeader>\n        <PageHeaderTitle title={'Automation Calculator'} />\n        <FilterableToolbar\n          categories={options}\n          filters={queryParams}\n          qsConfig={qsConfig}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      <Main>{renderContents()}</Main>\n    </>\n  );\n};\n\nAutomationCalculator.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default AutomationCalculator;\n","import * as d3 from 'd3';\n\nclass Tooltip {\n  constructor(opts) {\n    this.svg = opts.svg;\n    this.colors = opts.colors;\n    this.draw();\n  }\n\n  draw() {\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 145;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -41)\n      .attr('rx', 2)\n      .attr('height', 110)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.circleSuccess = this.toolTipBase\n      .append('circle')\n      .attr('cx', 26)\n      .attr('cy', 0)\n      .attr('r', 8)\n      .attr('stroke', 'white')\n      .attr('fill', 'white');\n    this.circleFail = this.toolTipBase\n      .append('circle')\n      .attr('cx', 26)\n      .attr('cy', 26)\n      .attr('r', 8)\n      .attr('stroke', 'white')\n      .attr('fill', 'white');\n    this.successText = this.toolTipBase\n      .append('text')\n      .attr('x', 43)\n      .attr('y', 4)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Successful');\n    this.failText = this.toolTipBase\n      .append('text')\n      .attr('x', 43)\n      .attr('y', 28)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Failed');\n    this.successIcon = this.toolTipBase\n      .append('text')\n      .attr('class', 'fas fa-sm')\n      .attr('fill', this.colors(1))\n      .attr('x', 19)\n      .attr('y', 5)\n      .text('\\uf058');\n    this.failedIcon = this.toolTipBase\n      .append('text')\n      .attr('class', 'fas fa-sm')\n      .attr('fill', this.colors(0))\n      .attr('x', 20)\n      .attr('y', 31)\n      .text('\\uf06a');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 137)\n      .attr('y', -21)\n      .attr('font-size', 12)\n      .attr('text-anchor', 'end')\n      .text('No jobs');\n    this.successful = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 122)\n      .attr('y', 4)\n      .text('0');\n    this.failed = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 122)\n      .attr('y', 28)\n      .text('0');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('stroke', 'white')\n      .attr('x', 20)\n      .attr('y', -21)\n      .attr('font-size', 12)\n      .text('Never');\n    this.clickMore = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 20)\n      .attr('y', 55)\n      .attr('font-size', 12)\n      .text('Click for details');\n  }\n\n  handleMouseOver = (d) => {\n    let success = 0;\n    let fail = 0;\n    let total = 0;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    const formatTooltipDate = d3.timeFormat('%m/%d');\n    if (!d) {\n      return;\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n    if (d) {\n      success = d.RAN || 0;\n      fail = d.FAIL || 0;\n      total = d.TOTAL || 0;\n      this.date.text(formatTooltipDate(d.DATE || null));\n    }\n\n    if (d && d.data) {\n      success = d.data.RAN || 0;\n      fail = d.data.FAIL || 0;\n      total = d.data.TOTAL || 0;\n      this.date.text(formatTooltipDate(d.data.DATE || null));\n    }\n\n    this.jobs.text('' + total + ' jobs');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n    this.failed.text('' + fail);\n    this.successful.text('' + success);\n    this.successTextWidth = this.successful.node().getComputedTextLength();\n    this.failTextWidth = this.failed.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 40;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.circleSuccess.attr('cx', -adjustedWidth);\n      this.circleFail.attr('cx', -adjustedWidth);\n      this.failedIcon.attr('x', -adjustedWidth - 7);\n      this.successIcon.attr('x', -adjustedWidth - 7);\n      this.successText.attr('x', -adjustedWidth + 17);\n      this.failText.attr('x', -adjustedWidth + 17);\n      this.successful.attr('x', -this.successTextWidth - 20 - 12);\n      this.failed.attr('x', -this.failTextWidth - 20 - 12);\n      this.date.attr('x', -adjustedWidth - 5);\n      this.jobs.attr('x', -this.jobsWidth / 2 - 7);\n      this.clickMore.attr('x', -adjustedWidth);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.circleSuccess.attr('cx', 26);\n      this.circleFail.attr('cx', 26);\n      this.failedIcon.attr('x', 19);\n      this.successIcon.attr('x', 19);\n      this.successText.attr('x', 43);\n      this.failText.attr('x', 43);\n      this.successful.attr('x', adjustedWidth - this.successTextWidth);\n      this.failed.attr('x', adjustedWidth - this.failTextWidth);\n      this.date.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth);\n      this.clickMore.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nexport default Tooltip;\n","import React, { Component } from 'react';\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { stringify } from 'query-string';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\n\nclass BarChart extends Component {\n  constructor(props) {\n    super(props);\n    this.draw = this.draw.bind(this);\n    this.init = this.init.bind(this);\n    this.resize = this.resize.bind(this);\n    this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n    this.state = {\n      formattedData: [],\n      timeout: null,\n    };\n  }\n\n  redirectToJobExplorer({ data: { DATE: date } }) {\n    const { jobExplorer } = Paths;\n    const formattedDate = formatDate(date);\n    const initialQueryParams = {\n      start_date: formattedDate,\n      end_date: formattedDate,\n      quick_date_range: 'custom',\n      status: ['failed', 'successful'],\n      template_id: this.props.queryParams.template_id,\n      org_id: this.props.queryParams.org_id,\n      job_type: this.props.queryParams.job_type,\n    };\n\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    this.props.history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  }\n\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  init() {\n    this.draw();\n  }\n\n  // Methods\n  draw() {\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const parseTime = d3.timeParse('%Y-%m-%d');\n    let { data: unformattedData } = this.props;\n    const data = unformattedData.reduce(\n      (formatted, { created_date, successful_count, failed_count }) => {\n        let DATE = parseTime(created_date) || new Date();\n        let RAN = +successful_count || 0;\n        let FAIL = +failed_count || 0;\n        let TOTAL = +successful_count + failed_count || 0;\n        return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n      },\n      []\n    );\n    const width = this.props.getWidth();\n    const height = this.props.getHeight();\n    const x = d3.scaleBand().rangeRound([0, width]).padding(0.35); // percentage\n    const y = d3.scaleLinear().range([height, 0]);\n\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n    //[fail, success]\n    let colors = d3.scaleOrdinal(['#6EC664', '#A30000']);\n\n    const barTooltip = new Tooltip({\n      svg: '#' + this.props.id,\n      colors,\n    });\n    const status = ['FAIL', 'RAN'];\n\n    // stack our data\n    const stack = d3\n      .stack()\n      .keys(status)\n      .order(d3.stackOrderNone)\n      .offset(d3.stackOffsetNone);\n\n    const layers = stack(data);\n    // Scale the range of the data\n    x.domain(layers[0].map((d) => d.data.DATE));\n    y.domain([0, d3.max(layers[layers.length - 1], (d) => d[1] * 1.15) || 8]);\n    // Add the Y Axis\n    svg\n      .append('g')\n      .attr('class', 'y-axis')\n      .call(d3.axisLeft(y).tickSize(-width, 0, 0))\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.y-axis .tick text').attr('x', -5);\n    // text label for the y axis\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Jobs across all clusters');\n    // Add the X Axis\n    let ticks;\n    const maxTicks = Math.round(data.length / (data.length / 2));\n    ticks = data.map((d) => d.DATE);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n        .filter((item) => item);\n    }\n\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(\n        d3.axisBottom(x).tickValues(ticks).tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n      )\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n    // text label for the x axis\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n\n    const layer = svg\n      .selectAll('layer')\n      .data(layers)\n      .enter()\n      .append('g')\n      .attr('class', 'layer')\n      .style('fill', (_d, i) => colors(i));\n    layer\n      .selectAll('rect')\n      .data((d) => d)\n      .enter()\n      .append('rect')\n      .attr('x', (d) => x(d.data.DATE))\n      .attr('y', (d) => y(d[0]))\n      .attr('height', 0)\n      .attr('width', x.bandwidth() - 1)\n      .transition()\n      .duration(550)\n      .ease(d3.easeCubic)\n      .attr('y', (d) => y(d[1]))\n      .attr('height', (d) => y(d[0]) - y(d[1]));\n    layer\n      .selectAll('rect')\n      .on('mouseover', barTooltip.handleMouseOver)\n      .on('mousemove', barTooltip.handleMouseOver)\n      .on('mouseout', barTooltip.handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n  }\n\n  componentDidMount() {\n    this.init();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      this.init();\n    }\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nBarChart.propTypes = {\n  id: PropTypes.string,\n  queryParams: PropTypes.object,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  history: PropTypes.object,\n};\n\nexport default initializeChart(BarChart);\n","import React, { Component } from 'react';\nimport initializeChart from './BaseChart';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\nimport { stringify } from 'query-string';\nimport * as d3 from 'd3';\n\nclass LineChart extends Component {\n  constructor(props) {\n    super(props);\n    this.init = this.init.bind(this);\n    this.draw = this.draw.bind(this);\n    this.resize = this.resize.bind(this);\n    this.updateCluster = this.updateCluster.bind(this);\n    this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n    this.state = {\n      formattedData: [],\n      timeout: null,\n    };\n  }\n\n  redirectToJobExplorer({ DATE: date }) {\n    const { jobExplorer } = Paths;\n    const formattedDate = formatDate(date);\n    const initialQueryParams = {\n      start_date: formattedDate,\n      end_date: formattedDate,\n      quick_date_range: 'custom',\n      status: ['failed', 'successful'],\n      cluster_id: this.props.queryParams.cluster_id,\n      org_id: this.props.queryParams.org_id,\n      template_id: this.props.queryParams.template_id,\n      job_type: this.props.queryParams.job_type,\n    };\n\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    this.props.history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  }\n\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  updateCluster() {\n    this.init();\n  }\n  init() {\n    this.draw();\n  }\n  // Methods\n  draw() {\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const width = this.props.getWidth();\n    const height = this.props.getHeight();\n\n    function transition(path) {\n      path.transition().duration(1000).attrTween('stroke-dasharray', tweenDash);\n    }\n\n    function tweenDash() {\n      const l = this.getTotalLength();\n      const i = d3.interpolateString('0,' + l, l + ',' + l);\n      return function (t) {\n        return i(t);\n      };\n    }\n\n    const x = d3.scaleTime().rangeRound([0, width]);\n    const y = d3.scaleLinear().range([height, 0]);\n\n    //[success, fail, total]\n    let colors = d3.scaleOrdinal(['#6EC664', '#A30000', '#06C']);\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n      .attr('z', 100)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n    // Tooltip\n    const tooltip = new Tooltip({\n      svg: '#' + this.props.id,\n      colors,\n    });\n    const { data: unformattedData } = this.props;\n    const parseTime = d3.timeParse('%Y-%m-%d');\n\n    const data = unformattedData.reduce(\n      (formatted, { created_date, successful_count, failed_count }) => {\n        let DATE = parseTime(created_date) || new Date();\n        let RAN = +successful_count || 0;\n        let FAIL = +failed_count || 0;\n        let TOTAL = +successful_count + failed_count || 0;\n        return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n      },\n      []\n    );\n    // Scale the range of the data\n    x.domain(\n      d3.extent(data, function (d) {\n        return d.DATE;\n      })\n    );\n    y.domain([\n      0,\n      d3.max(data, function (d) {\n        return d.TOTAL * 1.15 || 8;\n      }),\n    ]);\n\n    const successLine = d3\n      .line()\n      .curve(d3.curveMonotoneX)\n      .x(function (d) {\n        return x(d.DATE);\n      })\n      .y(function (d) {\n        return y(d.RAN);\n      });\n\n    const failLine = d3\n      .line()\n      .defined((d) => !isNaN(d.FAIL))\n      .curve(d3.curveMonotoneX)\n      .x(function (d) {\n        return x(d.DATE);\n      })\n      .y(function (d) {\n        return y(d.FAIL);\n      });\n    // Add the Y Axis\n    svg\n      .append('g')\n      .attr('class', 'y-axis')\n      .call(d3.axisLeft(y).ticks(10).tickSize(-width))\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.y-axis .tick text').attr('x', -5);\n\n    // text label for the y axis\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Job runs');\n    // Add the X Axis\n    let ticks;\n    const maxTicks = Math.round(data.length / (data.length / 2));\n    ticks = data.map((d) => d.DATE);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n        .filter((item) => item);\n    }\n\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(\n        d3\n          .axisBottom(x)\n          .tickValues(ticks)\n          .tickSize(-height)\n          .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n      ) // \"Jan-01\"\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n    // text label for the x axis\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n    const vertical = svg\n      .append('path')\n      .attr('class', 'mouse-line')\n      .style('stroke', 'black')\n      .style('stroke-width', '3px')\n      .style('stroke-dasharray', '3, 3')\n      .style('opacity', '0');\n\n    const handleMouseOver = function (d) {\n      tooltip.handleMouseOver(d);\n      // show vertical line\n      vertical.transition().style('opacity', '1');\n    };\n\n    const handleMouseMove = function () {\n      let intersectX = this.cx.baseVal.value;\n      vertical.attr('d', function () {\n        let d = 'M' + intersectX + ',' + height;\n        d += ' ' + intersectX + ',' + 0;\n        return d;\n      });\n    };\n\n    const handleMouseOut = function () {\n      // hide tooltip\n      tooltip.handleMouseOut();\n      // hide vertical line\n      vertical.transition().style('opacity', 0);\n    };\n\n    // Add the successLine path.\n    svg\n      .append('path')\n      .data([data])\n      .attr('class', 'line')\n      .style('fill', 'none')\n      .style('stroke', () => colors(1))\n      .attr('stroke-width', 2)\n      .attr('d', successLine)\n      .call(transition);\n\n    // Add the failLine path.\n    svg\n      .append('path')\n      .data([data])\n      .attr('class', 'line')\n      .style('fill', 'none')\n      .style('stroke', () => colors(0))\n      .attr('stroke-width', 2)\n      .attr('d', failLine)\n      .call(transition);\n    svg\n      .selectAll('dot')\n      .data(data)\n      .enter()\n      .append('circle')\n      .attr('r', 3)\n      .style('stroke', () => colors(1))\n      .style('fill', () => colors(1))\n      .attr('cx', function (d) {\n        return x(d.DATE);\n      })\n      .attr('cy', function (d) {\n        return y(d.RAN);\n      })\n\n      .on('mouseover', handleMouseOver)\n      .on('mousemove', handleMouseMove)\n      .on('mouseout', handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n    // create our failLine circles\n    svg\n      .selectAll('dot')\n      .data(data)\n      .enter()\n      .append('circle')\n      .attr('r', 3)\n      .style('stroke', () => colors(0))\n      .style('fill', () => colors(0))\n      .attr('cx', function (d) {\n        return x(d.DATE);\n      })\n      .attr('cy', function (d) {\n        return y(d.FAIL);\n      })\n      .on('mouseover', handleMouseOver)\n      .on('mousemove', handleMouseMove)\n      .on('mouseout', handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n  }\n\n  componentDidMount() {\n    this.updateCluster();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      this.updateCluster();\n    }\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nLineChart.propTypes = {\n  id: PropTypes.string,\n  queryParams: PropTypes.object,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  history: PropTypes.object,\n};\n\nexport default initializeChart(LineChart);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { trimStr } from '../Utilities/helpers';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n  DataList,\n  DataListItem as PFDataListItem,\n  DataListCell as PFDataListCell,\n} from '@patternfly/react-core';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst ModulesList = ({ modules, isLoading }) => (\n  <DataList\n    aria-label=\"Top Modules\"\n    style={{\n      maxHeight: '400px',\n      overflow: 'auto',\n      height: '400px',\n      background: 'white',\n    }}\n  >\n    <DataListItem aria-labelledby=\"top-modules-header\">\n      <DataListCell>\n        <h3>Top modules</h3>\n      </DataListCell>\n      <DataCellEnd>\n        <h3>Usage</h3>\n      </DataCellEnd>\n    </DataListItem>\n    {isLoading && (\n      <PFDataListItem\n        aria-labelledby=\"modules-loading\"\n        key={isLoading}\n        style={{ border: 'none' }}\n      >\n        <PFDataListCell>\n          <LoadingState />\n        </PFDataListCell>\n      </PFDataListItem>\n    )}\n    {!isLoading && modules.length <= 0 && (\n      <PFDataListItem\n        aria-labelledby=\"modules-no-data\"\n        key={isLoading}\n        style={{ border: 'none' }}\n      >\n        <PFDataListCell>\n          <NoData />\n        </PFDataListCell>\n      </PFDataListItem>\n    )}\n    {!isLoading &&\n      modules\n        .filter((module) => module.name !== null)\n        .map(({ name, host_task_count }, index) => (\n          <DataListItem aria-labelledby=\"top-modules-detail\" key={index}>\n            <DataListCell>\n              <span>{trimStr(name)}</span>\n            </DataListCell>\n            <DataCellEnd>{host_task_count}</DataCellEnd>\n          </DataListItem>\n        ))}\n  </DataList>\n);\n\nModulesList.propTypes = {\n  modules: PropTypes.array,\n  isLoading: PropTypes.bool,\n};\n\nexport default ModulesList;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst BarContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  width: 100%;\n  max-width: 100%;\n  height: 1rem;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst Bar = styled.div`\n  height: 100%;\n`;\n\nconst LabelsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  margin-bottom: 1rem;\n`;\n\nconst Label = styled.div`\n  padding-left: 2rem;\n  display: flex;\n  align-items: center;\n`;\n\nconst Square = styled.div`\n  width: 0.75rem;\n  height: 0.75rem;\n  margin-right: 0.5rem;\n`;\n\nconst whiteSpace = 0.15; // Currently in percent of total bar width\n\nfunction title(str) {\n  return str[0].toUpperCase() + str.slice(1).toLowerCase();\n}\n\nconst Breakdown = ({ categoryCount = {}, categoryColor }) => {\n  const totalCount = Object.values(categoryCount).reduce(\n    (accumulated, currentVal) => accumulated + currentVal\n  );\n\n  const sortedCategories = Object.keys(categoryCount)\n    .filter((category) => categoryCount[category] > 0)\n    .sort((category) => {\n      if (categoryCount[category] < categoryCount[category]) {\n        return 1; // Normally should be -1, but we want descending order\n      }\n      if (categoryCount[category] > categoryCount[category]) {\n        return -1;\n      }\n      return 0;\n    })\n    .map((category) => {\n      return {\n        name: category,\n        barSpacing: categoryCount[category] / totalCount,\n        color: categoryColor[category],\n      };\n    });\n\n  const remainingSpace = 1 - ((sortedCategories.length - 1) * whiteSpace) / 100;\n\n  return (\n    <>\n      <BarContainer>\n        {sortedCategories.map(({ barSpacing, color }, idx) => {\n          if (idx < sortedCategories.length - 1) {\n            return (\n              <React.Fragment key={idx}>\n                <Bar\n                  style={{\n                    backgroundColor: color,\n                    width: `${barSpacing * 100 * remainingSpace}%`,\n                  }}\n                />\n                <Bar\n                  style={{\n                    backgroundColor: 'transparent',\n                    width: `${whiteSpace}%`,\n                  }}\n                />\n              </React.Fragment>\n            );\n          } else {\n            return (\n              <React.Fragment key={idx}>\n                <Bar\n                  style={{\n                    backgroundColor: color,\n                    width: `${barSpacing * 100 * remainingSpace}%`,\n                  }}\n                />\n              </React.Fragment>\n            );\n          }\n        })}\n      </BarContainer>\n      <LabelsContainer>\n        {sortedCategories.map(({ name, color }) => (\n          <Label key={`label-${name}`}>\n            <Square style={{ backgroundColor: color }} />\n            <p>{title(name)}</p>\n          </Label>\n        ))}\n      </LabelsContainer>\n    </>\n  );\n};\n\nBreakdown.propTypes = {\n  categoryColor: PropTypes.object,\n  categoryCount: PropTypes.object,\n};\n\nexport default Breakdown;\n","import React, { useCallback, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport ApiErrorState from '../Components/ApiErrorState';\nimport NoResults from './NoResults';\nimport Breakdown from '../Components/Breakdown';\nimport JobStatus from '../Components/JobStatus';\nimport { Paths } from '../paths';\nimport { stringify } from 'query-string';\nimport { formatDateTime, formatJobType } from '../Utilities/helpers';\nimport { readJobExplorer } from '../Api/';\n\nimport { Button, Modal, ModalVariant } from '@patternfly/react-core';\nimport {\n  global_palette_blue_300,\n  global_palette_green_200,\n  global_palette_red_100,\n  global_palette_black_850,\n  global_palette_orange_300,\n  global_palette_purple_300,\n  global_palette_cyan_200,\n  global_palette_light_green_200,\n} from '@patternfly/react-tokens';\n\nimport {\n  DescriptionList,\n  DescriptionListTerm,\n  DescriptionListGroup,\n  DescriptionListDescription,\n  Divider,\n} from '@patternfly/react-core';\n\nimport {\n  TableComposable,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n} from '@patternfly/react-table';\nimport useRequest from '../Utilities/useRequest';\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 2rem;\n`;\n\nconst formatTopFailedTask = (data) => {\n  if (!data) {\n    return;\n  }\n\n  if (data && data[0]) {\n    const percentage = Math.ceil(\n      (data[0].failed_count / data[0].total_failed_count) * 100\n    );\n    return `${data[0].task_name} ${percentage}%`;\n  }\n\n  return `Unavailable`;\n};\n\nconst formatSuccessRate = (successCount, totalCount) =>\n  Math.ceil((successCount / totalCount) * 100) + '%';\nconst formatAvgRun = (elapsed, totalCount) =>\n  new Date(Math.ceil(elapsed / totalCount) * 1000).toISOString().substr(11, 8);\nconst formatTotalTime = (elapsed) =>\n  new Date(elapsed * 1000).toISOString().substr(11, 8);\n\nconst ModalContents = ({ selectedId, isOpen, handleModal, qp, jobType }) => {\n  const {\n    result: { relatedJobs, stats },\n    error,\n    isLoading,\n    isSuccess,\n    request: fetchEndpoints,\n  } = useRequest(\n    useCallback(async () => {\n      const [stats, relatedJobs] = await Promise.all([\n        readJobExplorer({ params: agreggateTemplateParams }),\n        readJobExplorer({ params: relatedTemplateJobsParams }),\n      ]);\n      return {\n        relatedJobs: relatedJobs.items,\n        stats: stats.items[0],\n      };\n    }, []),\n    {\n      stats: {},\n      relatedJobs: {},\n    }\n  );\n\n  useEffect(() => {\n    fetchEndpoints();\n  }, [selectedId, fetchEndpoints]);\n\n  let history = useHistory();\n\n  const redirectToJobExplorer = () => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      template_id: [selectedId],\n      status: [\n        'successful',\n        'failed',\n        'new',\n        'pending',\n        'waiting',\n        'error',\n        'canceled',\n        'running',\n      ],\n      job_type: [jobType],\n      quick_date_range: 'last_30_days',\n    };\n\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const relatedTemplateJobsParams = {\n    ...qp,\n    template_id: [selectedId],\n    attributes: [\n      'id',\n      'status',\n      'job_type',\n      'started',\n      'finished',\n      'elapsed',\n      'created',\n      'cluster_name',\n      'org_name',\n    ],\n    group_by_time: false,\n    limit: 5,\n    sort_by: 'created:desc',\n    quick_date_range: qp.quick_date_range\n      ? qp.quick_date_range\n      : 'last_30_days',\n    job_type: [jobType],\n  };\n\n  const agreggateTemplateParams = {\n    group_by: 'template',\n    template_id: [selectedId],\n    attributes: [\n      'elapsed',\n      'job_type',\n      'successful_count',\n      'failed_count',\n      'error_count',\n      'waiting_count',\n      'pending_count',\n      'canceled_count',\n      'new_count',\n      'running_count',\n      'total_count',\n      jobType === 'job' ? 'most_failed_tasks' : 'most_failed_steps',\n    ],\n    status: qp.status,\n    quick_date_range: qp.quick_date_range\n      ? qp.quick_date_range\n      : 'last_30_days',\n    job_type: [jobType],\n  };\n\n  const tableCols = ['Id/Name', 'Status', 'Cluster', 'Finished', 'Total time'];\n\n  const categoryCount = stats\n    ? {\n        success: stats.successful_count,\n        cancelled: stats.canceled_count,\n        error: stats.error_count,\n        failed: stats.failed_count,\n        new: stats.new_count,\n        pending: stats.pending_count,\n        running: stats.running_count,\n        waiting: stats.waiting_count,\n      }\n    : null;\n\n  const categoryColor = {\n    success: global_palette_green_200.value,\n    cancelled: global_palette_black_850.value,\n    error: global_palette_orange_300.value,\n    failed: global_palette_red_100.value,\n    new: global_palette_cyan_200.value,\n    pending: global_palette_purple_300.value,\n    running: global_palette_blue_300.value,\n    waiting: global_palette_light_green_200.value,\n  };\n\n  const descriptionStats = stats && [\n    {\n      label: 'Number of runs',\n      id: 'total-runs',\n      value: stats.total_count ? stats.total_count : 'Unavailable',\n    },\n    {\n      label: 'Total time',\n      id: 'total-time',\n      value: stats.elapsed ? formatTotalTime(stats.elapsed) : 'Unavailable',\n    },\n    {\n      label: 'Average time',\n      id: 'avg-time',\n      value: stats.elapsed\n        ? formatAvgRun(stats.elapsed, stats.total_count)\n        : 'Unavailable',\n    },\n    {\n      label: 'Type',\n      id: 'type',\n      value: jobType ? formatJobType(jobType) : 'Unavailable',\n    },\n    {\n      label: 'Success rate',\n      id: 'success-rate',\n      value: !isNaN(stats.successful_count)\n        ? formatSuccessRate(stats.successful_count, stats.total_count)\n        : 'Unavailable',\n    },\n    {\n      label: 'Most failed task',\n      id: 'most-failed',\n      value: stats.most_failed_tasks\n        ? formatTopFailedTask(stats.most_failed_tasks)\n        : 'Unavailable',\n    },\n  ];\n\n  const cleanup = () => {\n    handleModal(false);\n  };\n\n  return (\n    <Modal\n      aria-label=\"modal\"\n      variant={ModalVariant.medium}\n      title={stats.name ? stats.name : 'No template name'}\n      isOpen={isOpen}\n      onClose={cleanup}\n    >\n      {isLoading && <LoadingState />}\n      {error && <ApiErrorState message={error.error} />}\n      {isSuccess && relatedJobs.length <= 0 && <NoResults />}\n      {isSuccess && relatedJobs.length > 0 && (\n        <>\n          {categoryCount && (\n            <Breakdown\n              categoryCount={categoryCount}\n              categoryColor={categoryColor}\n            />\n          )}\n\n          <DescriptionList isHorizontal columnModifier={{ lg: '3Col' }}>\n            {descriptionStats.map(({ label, id, value }) => (\n              <DescriptionListGroup className={id} key={label}>\n                <DescriptionListTerm>{label}</DescriptionListTerm>\n                <DescriptionListDescription>{value}</DescriptionListDescription>\n              </DescriptionListGroup>\n            ))}\n          </DescriptionList>\n\n          <Divider\n            component=\"div\"\n            style={{ marginTop: '2rem', marginBottom: '1.5rem' }}\n          />\n          <p>\n            <strong>Last 5 jobs</strong>\n          </p>\n\n          <TableComposable\n            aria-label=\"Template information table\"\n            variant=\"compact\"\n          >\n            <Thead>\n              <Tr>\n                {tableCols.map((heading, idx) => (\n                  <Th key={idx}>{heading}</Th>\n                ))}\n              </Tr>\n            </Thead>\n            <Tbody>\n              {relatedJobs.map((job, idx) => (\n                <Tr key={`job-detail-${idx}`}>\n                  <Td>{`${job.id.id} - ${job.id.template_name}`}</Td>\n                  <Td>\n                    <JobStatus status={job.status} />\n                  </Td>\n                  <Td>{job.cluster_name}</Td>\n                  <Td>{formatDateTime(job.finished)}</Td>\n                  <Td>{formatTotalTime(job.elapsed)}</Td>\n                </Tr>\n              ))}\n            </Tbody>\n          </TableComposable>\n        </>\n      )}\n\n      <ActionContainer>\n        <Button\n          key=\"cancel\"\n          variant=\"secondary\"\n          onClick={() => {\n            cleanup();\n          }}\n        >\n          Close\n        </Button>\n\n        <Button component=\"a\" onClick={redirectToJobExplorer} variant=\"link\">\n          View all jobs\n        </Button>\n      </ActionContainer>\n    </Modal>\n  );\n};\n\nModalContents.propTypes = {\n  selectedId: PropTypes.number.isRequired,\n  qp: PropTypes.object.isRequired,\n  jobType: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  handleModal: PropTypes.func.isRequired,\n};\n\nexport default ModalContents;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n  DataList,\n  DataListItem as PFDataListItem,\n  DataListCell as PFDataListCell,\n} from '@patternfly/react-core';\n\nimport ModalContents from './ModalContents';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst TemplatesList = ({ templates, isLoading, qp, title, jobType }) => {\n  const [selectedId, setSelectedId] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const displayJobType = (type) => {\n    return type === 'job' ? 'templates' : 'workflows';\n  };\n\n  return (\n    <>\n      <DataList\n        aria-label={`Top ${displayJobType(jobType)}`}\n        style={{\n          maxHeight: '400px',\n          overflow: 'auto',\n          height: '400px',\n          background: 'white',\n        }}\n      >\n        <DataListItem aria-labelledby={`top-${displayJobType(jobType)}-header`}>\n          <DataListCell>\n            <h3>{title}</h3>\n          </DataListCell>\n          <DataCellEnd>\n            <h3>Usage</h3>\n          </DataCellEnd>\n        </DataListItem>\n        {isLoading && (\n          <PFDataListItem\n            aria-labelledby={`${displayJobType(jobType)}-loading`}\n            key={isLoading}\n            style={{ border: 'none' }}\n          >\n            <PFDataListCell>\n              <LoadingState />\n            </PFDataListCell>\n          </PFDataListItem>\n        )}\n        {!isLoading && templates.length <= 0 && (\n          <PFDataListItem\n            aria-labelledby={`${displayJobType(jobType)}-no-data`}\n            key={isLoading}\n            style={{ border: 'none' }}\n          >\n            <PFDataListCell>\n              <NoData />\n            </PFDataListCell>\n          </PFDataListItem>\n        )}\n        {!isLoading &&\n          templates.map(({ name, total_count, id }, index) => (\n            <DataListItem\n              aria-labelledby={`top-${displayJobType(jobType)}-detail`}\n              key={index}\n            >\n              <DataListCell>\n                <a\n                  onClick={() => {\n                    setIsModalOpen(true);\n                    setSelectedId(id);\n                  }}\n                >\n                  {name}\n                </a>\n              </DataListCell>\n              <DataCellEnd>{total_count}</DataCellEnd>\n            </DataListItem>\n          ))}\n      </DataList>\n      {selectedId && (\n        <ModalContents\n          isOpen={isModalOpen}\n          handleModal={setIsModalOpen}\n          selectedId={selectedId}\n          qp={qp}\n          jobType={jobType}\n        />\n      )}\n    </>\n  );\n};\n\nTemplatesList.propTypes = {\n  templates: PropTypes.array,\n  isLoading: PropTypes.bool,\n  queryParams: PropTypes.object,\n  title: PropTypes.string,\n  qp: PropTypes.object,\n  jobType: PropTypes.string,\n};\n\nexport default TemplatesList;\n","import React, { useState, useEffect, useCallback } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport {\n  preflightRequest,\n  readClustersOptions,\n  readJobExplorer,\n  readEventExplorer,\n} from '../../Api/';\n\nimport { jobExplorer } from '../../Utilities/constants';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  Grid,\n  GridItem,\n} from '@patternfly/react-core';\n\nimport BarChart from '../../Charts/BarChart';\nimport LineChart from '../../Charts/LineChart';\nimport ModulesList from '../../Components/ModulesList';\nimport TemplatesList from '../../Components/TemplatesList';\nimport FilterableToolbar from '../../Components/Toolbar';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport { clusters } from '../../Utilities/constants';\nimport useRequest from '../../Utilities/useRequest';\nimport { getQSConfig } from '../../Utilities/qs';\n\nconst initialTopTemplateParams = {\n  group_by: 'template',\n  limit: 10,\n  job_type: ['job'],\n  group_by_time: false,\n  status: ['successful', 'failed'],\n};\n\nconst initialTopWorkflowParams = {\n  group_by: 'template',\n  limit: 10,\n  job_type: ['workflowjob'],\n  group_by_time: false,\n  status: ['successful', 'failed'],\n};\n\nconst initialModuleParams = {\n  group_by: 'module',\n  sort_by: 'host_task_count:desc',\n  limit: 10,\n};\n\n// takes json and returns\nconst qsConfig = getQSConfig('clusters', { ...clusters.defaultParams }, [\n  'limit',\n  'offset',\n]);\n\nconst Clusters = () => {\n  const [preflightError, setPreFlightError] = useState(null);\n\n  // params from toolbar/searchbar\n  const { queryParams, setFromToolbar } = useQueryParams(qsConfig);\n  const {\n    result: { options },\n    error,\n    request: fetchOptions,\n  } = useRequest(\n    useCallback(async () => {\n      const options = await readClustersOptions({ params: optionsQueryParams });\n      return { options };\n    }, [queryParams]),\n    { options: {} }\n  );\n\n  const {\n    result: { chartData },\n    error: chartDataError,\n    isLoading: chartDataIsLoading,\n    isSuccess: chartDataIsSuccess,\n    request: fetchChartData,\n  } = useRequest(\n    useCallback(async () => {\n      const chartData = await readJobExplorer({ params: queryParams });\n      return { chartData: chartData.items };\n    }, [queryParams]),\n    {\n      chartData: [],\n      chartDataError,\n      chartDataIsLoading,\n      chartDataIsSuccess,\n    }\n  );\n\n  const {\n    result: { modules },\n    error: modulesError,\n    isLoading: modulesIsLoading,\n    isSuccess: modulesIsSuccess,\n    request: fetchModules,\n  } = useRequest(\n    useCallback(async () => {\n      const modules = await readEventExplorer({ params: topModuleParams });\n      return { modules: modules.items };\n    }, [queryParams]),\n    { modules: [], modulesError, modulesIsLoading, modulesIsSuccess }\n  );\n\n  const {\n    result: { templates },\n    error: templatesError,\n    isLoading: templatesIsLoading,\n    isSuccess: templatesIsSuccess,\n    request: fetchTemplates,\n  } = useRequest(\n    useCallback(async () => {\n      const templates = await readJobExplorer({ params: topTemplatesParams });\n      return { templates: templates.items };\n    }, [queryParams]),\n    { templates: [], templatesError, templatesIsLoading, templatesIsSuccess }\n  );\n\n  const {\n    result: { workflows },\n    error: workflowsError,\n    isLoading: workflowsIsLoading,\n    isSuccess: workflowsIsSuccess,\n    request: fetchWorkflows,\n  } = useRequest(\n    useCallback(async () => {\n      const workflows = await readJobExplorer({ params: topWorkflowParams });\n      return { workflows: workflows.items };\n    }, [queryParams]),\n    {\n      workflows: [],\n      workflowsError,\n      workflowsIsLoading,\n      workflowsIsSuccess,\n    }\n  );\n\n  const initialOptionsParams = {\n    attributes: jobExplorer.attributes,\n  };\n\n  const optionsQueryParams = useQueryParams(initialOptionsParams);\n\n  useEffect(() => {\n    fetchOptions();\n    fetchChartData();\n    fetchModules();\n    fetchTemplates();\n    fetchWorkflows();\n  }, [queryParams]);\n\n  const {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n  } = queryParams;\n\n  const topTemplatesParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialTopTemplateParams,\n  };\n\n  const topWorkflowParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialTopWorkflowParams,\n  };\n\n  const topModuleParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialModuleParams,\n  };\n\n  useEffect(() => {\n    async function initializeWithPreflight() {\n      await preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n    }\n\n    initializeWithPreflight();\n  }, []);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  if (preflightError?.preflightError) return <EmptyState {...preflightError} />;\n\n  if (error) return <ApiErrorState message={error.error} />;\n\n  const renderContent = () => {\n    // Warning: we are not checking if ALL the api succeed\n    // this can cause an unsurfaced error when only some of them fails\n    return (\n      <Grid hasGutter>\n        <GridItem span={12}>\n          <Card>\n            <CardTitle>\n              <h2>Job status</h2>\n            </CardTitle>\n            <CardBody>\n              {chartDataIsLoading && <LoadingState />}\n              {(!queryParams.cluster_id ||\n                queryParams.cluster_id?.length <= 0) &&\n                chartDataIsSuccess && (\n                  <BarChart\n                    margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                    id=\"d3-bar-chart-root\"\n                    data={chartData}\n                    queryParams={queryParams}\n                  />\n                )}\n              {queryParams.cluster_id?.length > 0 && chartDataIsSuccess && (\n                <LineChart\n                  margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                  id=\"d3-line-chart-root\"\n                  data={chartData}\n                  queryParams={queryParams}\n                />\n              )}\n            </CardBody>\n          </Card>\n        </GridItem>\n        <GridItem span={4}>\n          <TemplatesList\n            qp={queryParams}\n            templates={workflows}\n            isLoading={workflowsIsLoading}\n            title={'Top workflows'}\n            jobType={'workflowjob'}\n          />\n        </GridItem>\n        <GridItem span={4}>\n          <TemplatesList\n            qp={queryParams}\n            templates={templates}\n            isLoading={templatesIsLoading}\n            title={'Top templates'}\n            jobType={'job'}\n          />\n        </GridItem>\n        <GridItem span={4}>\n          <ModulesList modules={modules} isLoading={modulesIsLoading} />\n        </GridItem>\n      </Grid>\n    );\n  };\n\n  return (\n    <>\n      <PageHeader>\n        <PageHeaderTitle title={'Clusters'} />\n        <FilterableToolbar\n          categories={options}\n          qsConfig={qsConfig}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      <Main>{renderContent()}</Main>\n    </>\n  );\n};\n\nexport default Clusters;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Tr, Td, ExpandableRowContent } from '@patternfly/react-table';\n\nimport { formatDateTime, formatJobType } from '../Utilities/helpers';\nimport JobStatus from './JobStatus';\nimport {\n  DescriptionList,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  DescriptionListDescription,\n} from '@patternfly/react-core';\n\nconst JobExplorerListRow = ({ job }) => {\n  const [expanded, setExpanded] = useState(false);\n  const handleExpansion = () => {\n    setExpanded(!expanded);\n  };\n\n  const expandedInfo = [\n    {\n      label: 'Created',\n      value: job.created ? formatDateTime(job.created) : 'Unavailable',\n    },\n    {\n      label: 'Started',\n      value: job.created ? formatDateTime(job.started) : 'Unavailable',\n    },\n    {\n      label: 'Finished',\n      value: job.created ? formatDateTime(job.finished) : 'Unavailable',\n    },\n  ];\n  return (\n    <>\n      <Tr>\n        <Td\n          expand={{\n            rowIndex: job.id.id,\n            isExpanded: expanded,\n            onToggle: handleExpansion,\n          }}\n        />\n        <Td\n          href={job.id.tower_link}\n        >{`${job.id.id} - ${job.id.template_name}`}</Td>\n        <Td>\n          <JobStatus status={job.status} />\n        </Td>\n        <Td>{job.cluster_name}</Td>\n        <Td>{job.org_name}</Td>\n        <Td>{formatJobType(job.job_type)}</Td>\n      </Tr>\n      <Tr isExpanded={expanded}>\n        <Td colSpan={6}>\n          <ExpandableRowContent>\n            <DescriptionList isHorizontal columnModifier={{ lg: '3Col' }}>\n              {expandedInfo.map(({ label, value }) => (\n                <DescriptionListGroup key={label}>\n                  <DescriptionListTerm>{label}</DescriptionListTerm>\n                  <DescriptionListDescription>\n                    {value}\n                  </DescriptionListDescription>\n                </DescriptionListGroup>\n              ))}\n            </DescriptionList>\n          </ExpandableRowContent>\n        </Td>\n      </Tr>\n    </>\n  );\n};\n\nJobExplorerListRow.propTypes = {\n  job: PropTypes.object.isRequired,\n};\n\nexport default JobExplorerListRow;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TableComposable, Thead, Tbody, Tr, Th } from '@patternfly/react-table';\nimport JobExplorerListRow from './JobExplorerListRow';\n\nconst cols = ['Id/Name', 'Status', 'Cluster', 'Organization', 'Type'];\n\nconst JobExplorerList = ({ jobs }) => {\n  return (\n    <TableComposable aria-label=\"Job Explorer Table\" variant=\"compact\">\n      <Thead>\n        <Tr>\n          <Th />\n          {cols.map((head, idx) => (\n            <Th key={`col-${idx}`}>{head}</Th>\n          ))}\n        </Tr>\n      </Thead>\n      <Tbody>\n        {jobs.map((job) => (\n          <JobExplorerListRow job={job} key={job.id.id} />\n        ))}\n      </Tbody>\n    </TableComposable>\n  );\n};\n\nJobExplorerList.propTypes = {\n  jobs: PropTypes.array.isRequired,\n};\n\nexport default JobExplorerList;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useRequest from '../../Utilities/useRequest';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoResults from '../../Components/NoResults';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport Pagination from '../../Components/Pagination';\nimport { Paths } from '../../paths';\nimport { parse, stringify } from 'query-string';\n\nimport {\n  preflightRequest,\n  readJobExplorer,\n  readJobExplorerOptions,\n} from '../../Api/';\nimport { jobExplorer } from '../../Utilities/constants';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport { Card, CardBody, PaginationVariant } from '@patternfly/react-core';\n\nimport JobExplorerList from '../../Components/JobExplorerList';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport { getQSConfig } from '../../Utilities/qs';\n\nconst initialQueryParams = {\n  ...jobExplorer.defaultParams,\n  attributes: jobExplorer.attributes,\n};\nconst qsConfig = getQSConfig('job-explorer', { ...initialQueryParams }, [\n  'limit',\n  'offset',\n]);\n\nconst JobExplorer = ({ location: { search }, history }) => {\n  const [preflightError, setPreFlightError] = useState(null);\n\n  const { queryParams, setFromPagination, setFromToolbar } =\n    useQueryParams(qsConfig);\n\n  const {\n    result: { options },\n    error,\n    request: fetchOptions,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await readJobExplorerOptions({ params: queryParams });\n      return { options: response };\n    }, [queryParams]),\n    {\n      options: {},\n    }\n  );\n\n  const {\n    result: { data, meta },\n    error: dataError,\n    isLoading: dataIsLoading,\n    isSuccess: dataIsSuccess,\n    request: fetchEndpoints,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await readJobExplorer({ params: queryParams });\n      return {\n        data: response.items,\n        meta: response.meta,\n      };\n    }, [queryParams]),\n    { items: [], dataError, dataIsLoading, dataIsSuccess }\n  );\n\n  const initialSearchParams = parse(search, {\n    arrayFormat: 'bracket',\n    parseBooleans: true,\n    parseNumbers: true,\n  });\n\n  useEffect(() => {\n    history.replace({\n      pathname: jobExplorer,\n      initialSearchParams,\n    });\n  }, []);\n\n  const updateURL = () => {\n    const { jobExplorer } = Paths;\n    const search = stringify(\n      { ...initialQueryParams, ...initialSearchParams },\n      { arrayFormat: 'bracket' }\n    );\n    history.replace({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'job-explorer', secondaryNav: true });\n\n    preflightRequest().catch((error) => {\n      setPreFlightError({ preflightError: error });\n    });\n  }, []);\n\n  useEffect(() => {\n    fetchOptions();\n    fetchEndpoints();\n    updateURL();\n  }, [queryParams]);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n  if (preflightError?.preflightError) return <EmptyState {...preflightError} />;\n  if (error) return <ApiErrorState message={error.error} />;\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Job Explorer'} />\n      </PageHeader>\n\n      {!preflightError && (\n        <Main>\n          <Card>\n            <CardBody>\n              <FilterableToolbar\n                categories={options}\n                filters={queryParams}\n                qsConfig={qsConfig}\n                setFilters={setFromToolbar}\n                pagination={\n                  <Pagination\n                    count={meta?.count}\n                    params={{\n                      limit: parseInt(queryParams.limit),\n                      offset: parseInt(queryParams.offset),\n                    }}\n                    qsConfig={qsConfig}\n                    setPagination={setFromPagination}\n                    isCompact\n                  />\n                }\n                hasSettings\n              />\n              {dataIsLoading && <LoadingState />}\n              {dataIsSuccess && data.length <= 0 && <NoResults />}\n              {dataIsSuccess && data.length > 0 && (\n                <JobExplorerList jobs={data} />\n              )}\n              <Pagination\n                count={meta?.count}\n                params={{\n                  limit: parseInt(queryParams.limit),\n                  offset: parseInt(queryParams.offset),\n                }}\n                qsConfig={qsConfig}\n                setPagination={setFromPagination}\n                variant={PaginationVariant.bottom}\n              />\n            </CardBody>\n          </Card>\n        </Main>\n      )}\n    </React.Fragment>\n  );\n};\n\nJobExplorer.propTypes = {\n  location: PropTypes.object,\n  history: PropTypes.object,\n};\n\nexport default JobExplorer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nimport {\n  NotificationDrawerList as PFNotificationDrawerList,\n  NotificationDrawerListItem as PFNotificationDrawerListItem,\n  NotificationDrawerListItemBody,\n  NotificationDrawerListItemHeader,\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkAltIcon } from '@patternfly/react-icons';\nimport LoadingState from '../Components/LoadingState';\nimport { capitalize } from '../Utilities/helpers';\n\nconst ExternalLinkAltIcon = styled(PFExternalLinkAltIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n  font-size: 14px;\n`;\n\nconst NotificationDrawerListItem = styled(PFNotificationDrawerListItem)`\n  border-top: 1px solid var(--pf-global--BorderColor--light-100\n    );\n  border-bottom::nth-child(odd): 1px solid var(--pf-global--BorderColor--light-100\n    );\n  box-shadow: none;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst NotificationDrawerList = styled(PFNotificationDrawerList)`\n  &:last-child {\n    border-bottom: 1px solid var(--pf-global--BorderColor--light-100);\n  }\n`;\n\nconst stringifyDate = (date) => {\n  const day = moment(date);\n  const oneHour = 60 * 60 * 1000;\n  const now = moment().utc();\n\n  if (now.isAfter(day)) {\n    return `${now.diff(day, 'days')} day(s) ago.`;\n  }\n\n  if (day.isSame(now, 'day')) {\n    if (day.valueOf() > oneHour) {\n      return `${day.diff(now, 'hours')} hour(s) ago.`;\n    }\n\n    return `${now.diff(day, 'minutes')} minute(s) ago.`;\n  }\n};\n\nconst AllNotificationTemplate = ({ notifications }) =>\n  notifications.map(\n    ({ date, message, label, notification_id: id, tower_url: url }) => {\n      if (label === '' || label === 'notice') {\n        return (\n          <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"info\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n\n      if (label === 'error') {\n        return (\n          <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"danger\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n\n      if (label === 'warning') {\n        return (\n          <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"warning\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n    }\n  );\n\nconst ErrorNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'error')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"danger\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst NoticeNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'notice')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"info\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst WarningNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'warning')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"warning\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst NotificationsList = ({ filterBy, notifications }) => (\n  <>\n    <NotificationDrawerList>\n      {notifications.length <= 0 && <LoadingState />}\n      {filterBy === '' && (\n        <AllNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'notice' && (\n        <NoticeNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'error' && (\n        <ErrorNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'warning' && (\n        <WarningNotificationTemplate notifications={notifications} />\n      )}\n    </NotificationDrawerList>\n  </>\n);\n\nAllNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nErrorNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nWarningNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nNotificationsList.propTypes = {\n  notifications: PropTypes.array,\n  filterBy: PropTypes.string,\n};\n\nexport default NotificationsList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoData from '../../Components/NoData';\nimport { preflightRequest, readClusters, readNotifications } from '../../Api/';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle as PFCardTitle,\n  FormSelect,\n  FormSelectOption,\n  PaginationVariant,\n  NotificationDrawer,\n} from '@patternfly/react-core';\n\nimport NotificationsList from '../../Components/NotificationsList';\nimport Pagination from '../../Components/Pagination';\nimport { getQSConfig } from '../../Utilities/qs';\n\nconst CardTitle = styled(PFCardTitle)`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n`;\n\nconst DropdownGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-end;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n\n  select {\n    margin: 0 10px;\n    width: 150px;\n\n    @media screen and (max-width: 1035px) {\n      margin: 10px 10px 0 0;\n    }\n\n    @media screen and (max-width: 865px) {\n      width: 100%;\n    }\n  }\n`;\n\nconst notificationOptions = [\n  {\n    value: 'please choose',\n    label: 'Select Notification Severity',\n    disabled: true,\n  },\n  { value: 'error', label: 'View Critical', disabled: false },\n  { value: 'warning', label: 'View Warning', disabled: false },\n  { value: 'notice', label: 'View Notice', disabled: false },\n  { value: '', label: 'View All', disabled: false },\n];\n\nfunction formatClusterName(data) {\n  const defaultClusterOptions = [\n    { value: 'please choose', label: 'Select cluster', disabled: true },\n    { value: '', label: 'All Clusters', disabled: false },\n    { value: -1, label: 'Unassociated', disabled: false },\n  ];\n  return data.reduce(\n    (formatted, { label, cluster_id: id, install_uuid: uuid }) => {\n      if (label.length === 0) {\n        formatted.push({ value: id, label: uuid, disabled: false });\n      } else {\n        formatted.push({ value: id, label, disabled: false });\n      }\n\n      return formatted;\n    },\n    defaultClusterOptions\n  );\n}\n\nconst initialQueryParams = {\n  defaultParams: {\n    limit: 5,\n    offset: 0,\n  },\n};\n\n// takes json and returns\nconst qsConfig = getQSConfig(\n  'notifications',\n  { ...initialQueryParams.defaultParams },\n  ['limit', 'offset']\n);\n\nconst Notifications = () => {\n  const [preflightError, setPreFlightError] = useState(null);\n  const [notificationsData, setNotificationsData] = useState([]);\n  const [clusterOptions, setClusterOptions] = useState([]);\n  const [selectedCluster, setSelectedCluster] = useState('');\n  const [firstRender, setFirstRender] = useState(true);\n  const [isLoading, setIsLoading] = useState(true);\n  const [meta, setMeta] = useState({});\n\n  // params from toolbar/searchbar\n  const { queryParams, setId, setFromPagination, setSeverity } =\n    useQueryParams(qsConfig);\n\n  useEffect(() => {\n    if (firstRender) {\n      return;\n    }\n\n    const getData = () => {\n      return readNotifications({ params: queryParams });\n    };\n\n    const update = () => {\n      setIsLoading(true);\n      getData().then(({ notifications: notificationsData = [], meta }) => {\n        setNotificationsData(notificationsData);\n        setMeta(meta);\n        setIsLoading(false);\n      });\n    };\n\n    update();\n  }, [queryParams]);\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'notifications', secondaryNav: true });\n\n    let ignore = false;\n    const fetchEndpoints = () => {\n      return Promise.all(\n        [readClusters(), readNotifications({ params: queryParams })].map((p) =>\n          p.catch(() => [])\n        )\n      );\n    };\n\n    async function initializeWithPreflight() {\n      setIsLoading(true);\n      await preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n      fetchEndpoints().then(\n        ([\n          { templates: clustersData = [] },\n          { notifications: notificationsData = [], meta },\n        ]) => {\n          if (!ignore) {\n            const clusterOptions = formatClusterName(clustersData);\n            setClusterOptions(clusterOptions);\n            setNotificationsData(notificationsData);\n            setMeta(meta);\n            setFirstRender(false);\n            setIsLoading(false);\n          }\n        }\n      );\n    }\n\n    initializeWithPreflight();\n    return () => (ignore = true);\n  }, [queryParams]);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Notifications'} />\n      </PageHeader>\n      {preflightError && (\n        <Main>\n          <EmptyState {...preflightError} />\n        </Main>\n      )}\n      {!preflightError && (\n        <>\n          <Main>\n            <Card>\n              <CardTitle>\n                <DropdownGroup>\n                  <FormSelect\n                    name=\"selectedCluster\"\n                    value={selectedCluster}\n                    onChange={(value) => {\n                      setSelectedCluster(value);\n                      setId(value);\n                      setFromPagination(0);\n                    }}\n                    aria-label=\"Select Cluster\"\n                  >\n                    {clusterOptions.map(({ value, label, disabled }, index) => (\n                      <FormSelectOption\n                        isDisabled={disabled}\n                        key={index}\n                        value={value}\n                        label={label}\n                      />\n                    ))}\n                  </FormSelect>\n                  <FormSelect\n                    name=\"selectedNotification\"\n                    value={queryParams.severity || ''}\n                    onChange={(value) => {\n                      setSeverity(value);\n                      setFromPagination(0);\n                    }}\n                    aria-label=\"Select Notification Type\"\n                  >\n                    {notificationOptions.map(\n                      ({ disabled, value, label }, index) => (\n                        <FormSelectOption\n                          isDisabled={disabled}\n                          key={index}\n                          value={value}\n                          label={label}\n                        />\n                      )\n                    )}\n                  </FormSelect>\n                </DropdownGroup>\n                <Pagination\n                  count={meta?.count}\n                  qsConfig={qsConfig}\n                  params={{\n                    limit: queryParams.limit,\n                    offset: queryParams.offset,\n                  }}\n                  setPagination={setFromPagination}\n                  isCompact\n                />\n              </CardTitle>\n              <CardBody>\n                {isLoading && <LoadingState />}\n                {!isLoading && notificationsData.length <= 0 && <NoData />}\n                {!isLoading && notificationsData.length > 0 && (\n                  <NotificationDrawer>\n                    <NotificationsList\n                      filterBy={queryParams.severity || ''}\n                      options={notificationOptions}\n                      notifications={notificationsData}\n                    />\n                  </NotificationDrawer>\n                )}\n                <Pagination\n                  count={meta?.count}\n                  qsConfig={qsConfig}\n                  params={{\n                    limit: queryParams.limit,\n                    offset: queryParams.offset,\n                  }}\n                  setPagination={setFromPagination}\n                  variant={PaginationVariant.bottom}\n                />\n              </CardBody>\n            </Card>\n          </Main>\n        </>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Notifications;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Switch } from '@patternfly/react-core';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  overflow: auto;\n  width: 100%;\n  height: ${(props) => props.height};\n`;\n\nconst LegendDetail = styled.div`\n  display: flex;\n  padding: 7.5px 15px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  overflow: auto;\n`;\n\nconst Color = styled.div.attrs((props) => ({\n  color: props.color || 'black',\n}))`\n  min-width: 12px;\n  height: 12px;\n  background: ${(props) => props.color};\n  margin-right: 20px;\n`;\n\nconst Title = styled.span`\n  font-size: 15px;\n  display: inline-block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n`;\n\nconst SubTitle = styled.span`\n  font-size: 15px;\n  margin-left: auto;\n  margin-right: 0;\n  padding-right: 10px;\n`;\n\nconst Legend = ({ data, selected, height, onToggle, chartName }) => {\n  return (\n    <Container height={height}>\n      {data.map(({ name, value, id, count }, index) => (\n        <LegendDetail key={index}>\n          <Wrapper>\n            <Color color={value} />\n            <Title>{name}</Title>\n          </Wrapper>\n          {count && <SubTitle>{count}</SubTitle>}\n          {selected && (\n            <Switch\n              isChecked={selected.some((selection) => selection === id)}\n              onChange={() => onToggle(id)}\n              aria-label={`${chartName}-${name}`}\n              value={id}\n              key={index}\n            />\n          )}\n        </LegendDetail>\n      ))}\n    </Container>\n  );\n};\n\nLegend.propTypes = {\n  data: PropTypes.array.isRequired,\n  selected: PropTypes.array.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  height: PropTypes.string.isRequired,\n  chartName: PropTypes.string.isRequired,\n};\n\nexport default Legend;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport styled from 'styled-components';\n\nimport initializeChart from '.././BaseChart';\nimport Legend from '../../Utilities/Legend';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nconst GroupedBarChart = ({\n  onClick = null,\n  TooltipClass,\n  legend,\n  ...props\n}) => {\n  const colors = legend.map(({ id, name }) => {\n    return {\n      name,\n      value: props.colorFunc(id),\n      id,\n    };\n  });\n  const [selectedIds, setSelectedIds] = useState(\n    legend.map(({ id }) => id).slice(0, 8)\n  );\n  let timeout = null;\n\n  const handleToggle = (id) => {\n    if (selectedIds.includes(id)) {\n      setSelectedIds(selectedIds.filter((el) => el !== id));\n    } else {\n      setSelectedIds([...selectedIds, id]);\n    }\n  };\n\n  const draw = () => {\n    // Clear our chart container element first\n    d3.selectAll('#' + props.id + ' > *').remove();\n    let { data: unformattedData } = props;\n    const data = unformattedData.reduce((formatted, { date, items }) => {\n      const selectedOrgs = items.filter(({ id }) => selectedIds.includes(id));\n      return formatted.concat({ date, selectedOrgs });\n    }, []);\n    const width = props.getWidth();\n    const height = props.getHeight();\n    // x scale of entire chart\n    const x0 = d3.scaleBand().range([0, width]).padding(0.35);\n    // x scale of individual grouped bars\n    const x1 = d3.scaleBand();\n    const y = d3.scaleLinear().range([height, 0]);\n    // format our X Axis ticks\n    const maxTicksOneMonth = Math.round(data.length / (data.length / 2));\n    const maxTicksTwoMonths = Math.round(data.length / (data.length / 4));\n    let ticks = data.map((d) => d.date);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) =>\n          i % (data.length > 31 ? maxTicksTwoMonths : maxTicksOneMonth) === 0\n            ? d.date\n            : undefined\n        )\n        .filter((item) => item);\n    }\n\n    const xAxis = d3.axisBottom(x0).tickValues(ticks).tickFormat(formatDate);\n\n    const yAxis = d3.axisLeft(y).ticks(8).tickSize(-width, 0, 0);\n\n    const svg = d3\n      .select('#' + props.id)\n      .append('svg')\n      .attr('width', width + props.margin.left + props.margin.right)\n      .attr('height', height + props.margin.bottom + props.margin.top)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' + props.margin.left + ',' + props.margin.top + ')'\n      );\n\n    const dates = data.map((d) => d.date);\n    const tooltip = new TooltipClass({\n      svg: '#' + props.id,\n    });\n    x0.domain(dates);\n    x1.domain(selectedIds).range([0, x0.bandwidth()]);\n    y.domain([\n      0,\n      d3.max(data, (date) =>\n        d3.max(date.selectedOrgs, (d) => d.value * 1.15)\n      ) || 8,\n    ]);\n\n    // add y axis\n    svg\n      .append('g')\n      .attr('class', 'y axis')\n      .call(yAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7')\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 6)\n      .attr('dy', '.71em')\n      .style('text-anchor', 'end')\n      .style('font-weight', 'bold')\n      .text('Value');\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text(props.yLabel);\n\n    // add x axis\n    svg\n      .append('g')\n      .attr('class', 'x axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' + width / 2 + ' ,' + (height + props.margin.top + 25) + ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n    // add the groups\n    let slice = svg.selectAll('.slice').data(data);\n    slice.exit().remove();\n\n    const enter = slice\n      .enter()\n      .append('g')\n      .attr('class', 'g foo')\n      .attr('transform', (d) => 'translate(' + x0(d.date) + ',0)');\n    slice = slice.merge(enter);\n    // add the individual bars\n    let bars = slice.selectAll('rect').data(function (d) {\n      return d.selectedOrgs;\n    });\n    bars.exit().remove();\n\n    const color = props.colorFunc;\n    const subEnter = bars\n      .enter()\n      .append('rect')\n      .attr('width', x1.bandwidth())\n      .attr('x', function (d) {\n        return x1(d.id);\n      }) // unsorted\n      .style('fill', function (d) {\n        return color(d.id);\n      })\n      .attr('y', function (d) {\n        return y(d.value);\n      })\n      .attr('height', function (d) {\n        return height - y(d.value);\n      })\n      .on('mouseover', function (d) {\n        d.moreDetail = !d.name.endsWith('Others');\n        d3.select(this).style(\n          'cursor',\n          onClick && d.moreDetail ? 'pointer' : 'default'\n        );\n        d3.select(this).style('fill', d3.rgb(color(d.id)).darker(1));\n        tooltip.handleMouseOver(d);\n      })\n      .on('mousemove', tooltip.handleMouseOver)\n      .on('mouseout', function (d) {\n        d3.select(this).style('fill', color(d.id));\n        tooltip.handleMouseOut();\n      })\n      .on('click', onClick);\n    bars = bars.merge(subEnter);\n  };\n\n  const init = () => {\n    draw();\n  };\n\n  const resize = () => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      draw();\n    }, 500);\n  };\n\n  useEffect(() => {\n    init();\n    window.addEventListener('resize', resize);\n\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [props.data, selectedIds]);\n\n  return (\n    <Wrapper>\n      <div id={props.id} />\n      {colors.length > 0 && (\n        <Legend\n          id={`${props.id}-legend`}\n          data={colors}\n          selected={selectedIds}\n          onToggle={handleToggle}\n          height=\"350px\"\n          chartName={`${props.id}-legend`}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nGroupedBarChart.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  legend: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  colorFunc: PropTypes.func,\n  yLabel: PropTypes.string,\n  onClick: PropTypes.func,\n  TooltipClass: PropTypes.any.isRequired,\n};\n\nGroupedBarChart.defaultProps = {\n  legend: [],\n};\n\nexport default initializeChart(GroupedBarChart);\n","import * as d3 from 'd3';\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class OrgsTooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -12)\n      .attr('rx', 2)\n      .attr('height', 50)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 25)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Date');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 72)\n      .attr('y', 25)\n      .text('0 Jobs');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 10)\n      .attr('font-size', 12)\n      .text('Org');\n\n    this.clickMore = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 20)\n      .attr('y', 30)\n      .attr('font-size', 12)\n      .text('');\n  }\n\n  handleMouseOver = (d) => {\n    let date;\n    let orgName;\n    let jobs;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    } else {\n      const maxLength = 16;\n      date = d.date;\n      orgName = d.name;\n      jobs = d.value;\n      if (d.name.length > maxLength) {\n        orgName = d.name.slice(0, maxLength).concat('...');\n      }\n    }\n\n    let yAdjust = -11;\n\n    // Include 'Click for details' if more detail is available\n    if (d.moreDetail) {\n      this.boundingBox.attr('height', 68);\n      this.boundingBox.attr('y', -23);\n      this.date.attr('y', 25 + yAdjust);\n      this.jobs.attr('y', 25 + yAdjust);\n      this.orgName.attr('y', 10 + yAdjust);\n      this.clickMore.text('Click for details');\n    } else {\n      this.boundingBox.attr('height', 50);\n      this.boundingBox.attr('y', -12);\n      this.date.attr('y', 25);\n      this.jobs.attr('y', 25);\n      this.orgName.attr('y', 10);\n      this.clickMore.text('');\n    }\n\n    const formatTooltipDate = formatDate;\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.date.text('' + formatTooltipDate(date));\n    this.orgName.text('' + orgName);\n    this.jobs.text('' + jobs + ' Jobs');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 45;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n      this.orgName.attr('x', -adjustedWidth - 7);\n      this.date.attr('x', -adjustedWidth - 7);\n      this.clickMore.attr('x', -adjustedWidth - 7);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth / 2);\n      this.date.attr('x', 20);\n      this.clickMore.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import * as d3 from 'd3';\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class HostsTooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -12)\n      .attr('rx', 2)\n      .attr('height', 50)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 25)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Date');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 72)\n      .attr('y', 25)\n      .text('0 Jobs');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 10)\n      .attr('font-size', 12)\n      .text('Org');\n  }\n\n  handleMouseOver = (d) => {\n    let date;\n    let orgName;\n    let jobs;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    } else {\n      const maxLength = 16;\n      date = d.date;\n      orgName = d.name;\n      jobs = d.value;\n      if (d.name.length > maxLength) {\n        orgName = d.name.slice(0, maxLength).concat('...');\n      }\n    }\n\n    const formatTooltipDate = formatDate;\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.date.text('' + formatTooltipDate(date));\n    this.orgName.text('' + orgName);\n    this.jobs.text('' + jobs + ' Hosts');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 45;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n      this.orgName.attr('x', -adjustedWidth - 7);\n      this.date.attr('x', -adjustedWidth - 7);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth / 2);\n      this.date.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport { getTotal } from '../Utilities/helpers';\nimport Legend from '../Utilities/Legend';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nclass Tooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    // defer drawing until we know the data shape\n    this.drawn = false;\n    // show the success rate or not\n    this.showSuccess = false;\n  }\n\n  draw(d) {\n    // chart1 has success rate data and chart2 does not ...\n    this.showSuccess = d && d.data && 'success_rate' in d.data ? true : false;\n    const boundingHeight = this.showSuccess ? 70 : 52;\n    const boundingWidth = this.showSuccess ? 120 : 108;\n\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBOx = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', boundingHeight)\n      .attr('width', boundingWidth)\n      .attr('fill', '#393f44');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 0)\n      .text('Organization');\n    this.percentageTotal = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 16)\n      .text('0');\n    this.percentageSuccess = null;\n    if (this.showSuccess) {\n      this.percentageSuccess = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 30)\n        .text('');\n    }\n  }\n\n  handleMouseOver = (d) => {\n    // treat draw() as a singleton to avoid a painted window effect\n    if (this.drawn !== true) {\n      this.draw(d);\n      this.drawn = true;\n    }\n\n    let perc;\n    let percSuccess;\n    let orgName;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    }\n\n    if (d && d.data) {\n      const maxLength = 16;\n      perc = d.data.percent;\n      percSuccess = d.data.success_rate;\n      orgName = d.data.name;\n      if (d.data.name.length > maxLength) {\n        orgName = d.data.name.slice(0, maxLength - 3).concat('...');\n      }\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.percentageTotal.text('' + perc + '%');\n    if (percSuccess && this.percentageSuccess) {\n      this.percentageSuccess.text('(' + percSuccess + '% successful)');\n    }\n\n    this.orgName.text(' ' + orgName);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, -10) rotate(45)');\n      this.boundingBOx.attr('x', -125);\n      this.orgName.attr('x', -112);\n      this.percentageTotal.attr('x', -112);\n      if (this.showSuccess) {\n        this.percentageSuccess.attr('x', -112);\n      }\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, -10) rotate(45)');\n      this.boundingBOx.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.percentageTotal.attr('x', 20);\n      if (this.showSuccess) {\n        this.percentageSuccess.attr('x', 20);\n      }\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nconst PieChart = ({\n  data,\n  id,\n  colorFunc: color,\n  margin,\n  getWidth,\n  getHeight,\n}) => {\n  const colors = data\n    .map(({ id, name, count }) => {\n      return {\n        id,\n        name,\n        value: color(id),\n        count: Math.round(count),\n      };\n    })\n    .sort((a, b) => (a.count > b.count ? 1 : b.count > a.count ? -1 : 0));\n\n  const [selectedIds, setSelectedIds] = useState(\n    data.map(({ id }) => id).slice(0, 8)\n  );\n\n  let timeout = null;\n\n  const handleToggle = (id) => {\n    if (selectedIds.includes(id)) {\n      setSelectedIds(selectedIds.filter((el) => el !== id));\n    } else {\n      setSelectedIds([...selectedIds, id]);\n    }\n  };\n\n  const draw = () => {\n    d3.selectAll('#' + id + ' > *').remove();\n    const width = getWidth();\n    const height = getHeight();\n    const svg = d3\n      .select('#' + id)\n      .append('svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.bottom)\n      .append('g');\n\n    svg.append('g').attr('class', 'slices');\n    svg.append('g').attr('class', 'labels');\n    svg.append('g').attr('class', 'lines');\n    const radius = Math.min(width, height) / 2;\n    const filteredData = data.filter(({ id }) => selectedIds.includes(id));\n    const total = getTotal(filteredData);\n    filteredData.forEach(function (d) {\n      d.count = +d.count;\n      d.percent = +Math.round((d.count / total) * 100);\n    });\n    const donutTooltip = new Tooltip({\n      svg: '#' + id,\n    });\n    const pie = d3\n      .pie()\n      .sort(null)\n      .value((d) => d.count);\n    const arc = d3\n      .arc()\n      .outerRadius(radius - 10) // controls top positioning of chart\n      .innerRadius(0);\n\n    svg.attr(\n      'transform',\n      'translate(' +\n        (width + margin.left + margin.right) / 2 +\n        ',' +\n        (height + margin.top + margin.bottom) / 2 +\n        ')'\n    );\n\n    svg\n      .selectAll('path')\n      .data(pie(filteredData))\n      .enter()\n      .append('path')\n      .attr('d', arc)\n      .attr('fill', (d) => color(d.data.id));\n\n    svg\n      .selectAll('path')\n      .on('mouseover', function (d) {\n        d3.select(this).style('fill', d3.rgb(color(d.data.id)).darker(1));\n        donutTooltip.handleMouseOver(d);\n      })\n      .on('mouseout', function (d) {\n        d3.select(this).style('fill', color(d.data.id));\n        donutTooltip.handleMouseOut();\n      })\n      .on('mousemove', donutTooltip.handleMouseOver);\n\n    svg.append('g').classed('labels', true);\n    svg.append('g').classed('lines', true);\n  };\n\n  const init = () => {\n    draw();\n  };\n\n  const resize = () => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      draw();\n    }, 500);\n  };\n\n  useEffect(() => {\n    init();\n    window.addEventListener('resize', resize);\n\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [data, selectedIds]);\n\n  return (\n    <Wrapper>\n      <div id={id} />\n      {colors.length > 0 && (\n        <Legend\n          id={`${id}-legend`}\n          data={colors}\n          selected={selectedIds}\n          onToggle={handleToggle}\n          height=\"300px\"\n          chartName={`${id}-legend`}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nPieChart.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  colorFunc: PropTypes.func,\n};\n\nexport default initializeChart(PieChart);\n","import React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { formatDate as dateForJobExplorer } from '../../Utilities/helpers';\n\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport {\n  preflightRequest,\n  readJobExplorer,\n  readHostExplorer,\n  readOrgOptions,\n} from '../../Api/';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  Tabs,\n  Tab,\n  Grid,\n  GridItem,\n} from '@patternfly/react-core';\n\nimport {\n  GroupedBarChart,\n  OrgsTooltip,\n  HostsTooltip,\n} from '../../Charts/GroupedBarChart/';\nimport PieChart from '../../Charts/PieChart';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport { organizationStatistics as constants } from '../../Utilities/constants';\n\n// For chart colors\nimport { pfmulti } from '../../Utilities/colors';\nimport { scaleOrdinal } from 'd3';\nimport useRequest from '../../Utilities/useRequest';\nimport { getQSConfig } from '../../Utilities/qs';\n\nconst Divider = styled('hr')`\n  border: 1px solid #ebebeb;\n`;\n\nconst colorFunc = scaleOrdinal(pfmulti);\n\nconst orgsChartMapper = (data = [], meta, attrName) => {\n  const dates = data.map(({ date, items }) => ({\n    date,\n    items: items.map(({ id, [attrName]: value, name }) => ({\n      id,\n      date,\n      value,\n      name: name || 'No organization',\n    })),\n  }));\n  meta.legend.map((el) => ({\n    ...el,\n    name: el.name || 'No organization',\n  }));\n  return dates;\n};\n\nconst pieChartMapper = (items = [], attrName) => {\n  const data = items.map(({ id, [attrName]: count, name }) => ({\n    id,\n    count,\n    name: name || 'No organization',\n  }));\n  return data;\n};\n\nconst redirectToJobExplorer =\n  (toJobExplorer, queryParams) =>\n  ({ date, id }) => {\n    if (id === -1) {\n      // disable clicking on \"others\" block\n      return;\n    }\n\n    const { sort_by, ...rest } = queryParams;\n    const formattedDate = dateForJobExplorer(date);\n    const initialQueryParams = {\n      ...rest,\n      quick_date_range: 'custom',\n      start_date: formattedDate,\n      end_date: formattedDate,\n      status: [\n        'successful',\n        'failed',\n        'new',\n        'pending',\n        'waiting',\n        'error',\n        'canceled',\n        'running',\n      ],\n      org_id: [id],\n    };\n\n    toJobExplorer(initialQueryParams);\n  };\n\nconst chartMapper = [\n  {\n    api: readJobExplorer,\n    attr: 'total_count',\n    label: 'Jobs across organizations',\n    onClick: redirectToJobExplorer,\n    tooltip: OrgsTooltip,\n  },\n  {\n    api: readHostExplorer,\n    attr: 'total_unique_host_count',\n    label: 'Hosts across organizations',\n    onClick: () => null,\n    tooltip: HostsTooltip,\n  },\n];\nconst qsConfig = getQSConfig(\n  'organization-statistics',\n  { ...constants.defaultParams },\n  ['limit', 'offset']\n);\n\nconst OrganizationStatistics = ({ history }) => {\n  const toJobExplorer = useRedirect(history, 'jobExplorer');\n  const [activeTabKey, setActiveTabKey] = useState(0);\n\n  // params from toolbar/searchbar\n  const { queryParams, setFromToolbar } = useQueryParams(qsConfig);\n\n  const {\n    error: preflightError,\n    isLoading: preflightIsLoading,\n    isSuccess: preflightIsSuccess,\n    request: setPreflight,\n  } = useRequest(\n    useCallback(async () => {\n      const preflight = await preflightRequest();\n      return { preflight: preflight };\n    }, []),\n    { preflight: {}, preflightError, preflightIsLoading, preflightIsSuccess }\n  );\n\n  const {\n    result: { jobs },\n    error: jobsError,\n    isLoading: jobsIsLoading,\n    isSuccess: jobsIsSuccess,\n    request: setJobs,\n  } = useRequest(\n    useCallback(async () => {\n      const jobs = await readJobExplorer({ params: jobRunsByOrgParams });\n      return { jobs: jobs };\n    }, [queryParams]),\n    { jobs: [], jobsError, jobsIsLoading, jobsIsSuccess }\n  );\n\n  const {\n    result: { orgs },\n    error: orgsError,\n    isLoading: orgsIsLoading,\n    isSuccess: orgsIsSuccess,\n    request: setOrgs,\n  } = useRequest(\n    useCallback(\n      async (tabIndex = 0) => {\n        let orgs;\n        if (tabIndex === 0) {\n          orgs = await readJobExplorer({ params: jobsByDateAndOrgParams });\n        } else {\n          orgs = await readHostExplorer({ params: hostAcrossOrgParams });\n        }\n        return { orgs: orgs };\n      },\n      [queryParams]\n    ),\n    { orgs: [], orgsError, orgsIsLoading, orgsIsSuccess }\n  );\n\n  const {\n    result: { options },\n    error: optionsError,\n    isLoading: optionsIsLoading,\n    isSuccess: optionsIsSuccess,\n    request: setOptions,\n  } = useRequest(\n    useCallback(async () => {\n      const options = await readOrgOptions({ params: queryParams });\n      return { options: options };\n    }, [queryParams]),\n    { options: {}, optionsError, optionsIsLoading, optionsIsSuccess }\n  );\n\n  const {\n    result: { tasks },\n    error: tasksError,\n    isLoading: tasksIsLoading,\n    isSuccess: tasksIsSuccess,\n    request: setTasks,\n  } = useRequest(\n    useCallback(async () => {\n      const tasks = await readJobExplorer({ params: jobEventsByOrgParams });\n      return {\n        tasks: tasks,\n      };\n    }, [queryParams]),\n    { tasks: [], tasksError, tasksIsLoading, tasksIsSuccess }\n  );\n\n  useEffect(() => {\n    setOrgs(activeTabKey);\n  }, [activeTabKey]);\n\n  useEffect(() => {\n    setOrgs();\n    setTasks();\n    setOptions();\n    setJobs();\n  }, [queryParams]);\n\n  const jobEventsByOrgParams = {\n    ...queryParams,\n    attributes: ['host_task_count'],\n    group_by: 'org',\n    include_others: true,\n    sort_by: `host_task_count:desc`,\n  };\n\n  const jobRunsByOrgParams = {\n    ...queryParams,\n    attributes: ['total_count'],\n    group_by: 'org',\n    include_others: true,\n    sort_by: `total_count:desc`,\n  };\n\n  const jobsByDateAndOrgParams = {\n    ...queryParams,\n    attributes: ['total_count'],\n    group_by: 'org',\n    group_by_time: true,\n    sort_by: `total_count:desc`,\n  };\n\n  const hostAcrossOrgParams = {\n    ...queryParams,\n    attributes: ['total_unique_host_count'],\n    group_by: 'org',\n    group_by_time: true,\n    sort_by: `host_task_count:desc`,\n  };\n\n  const handleTabClick = (_, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({\n      id: 'organization-statistics',\n      secondaryNav: true,\n    });\n    setPreflight();\n  }, []);\n\n  if (preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  const renderContent = () => {\n    if (preflightError) return <EmptyState preflightError={preflightError} />;\n\n    if (!preflightError)\n      return (\n        <Grid hasGutter>\n          <GridItem span={12}>\n            <Card>\n              <Tabs activeKey={activeTabKey} onSelect={handleTabClick}>\n                <Tab eventKey={0} title={'Jobs'} />\n                <Tab eventKey={1} title={'Hosts'} />\n              </Tabs>\n              <CardBody>\n                {orgsIsLoading && <LoadingState />}\n                {orgsError && <ApiErrorState message={orgsError.error} />}\n                {orgsIsSuccess && orgs.dates?.length <= 0 && <NoData />}\n                {orgsIsSuccess && orgs.dates?.length > 0 && (\n                  <GroupedBarChart\n                    margin={{ top: 20, right: 20, bottom: 50, left: 50 }}\n                    id=\"d3-grouped-bar-chart-root\"\n                    data={orgsChartMapper(\n                      orgs.dates,\n                      orgs.meta,\n                      chartMapper[activeTabKey].attr\n                    )}\n                    legend={orgs.meta.legend}\n                    history={history}\n                    colorFunc={colorFunc}\n                    yLabel={chartMapper[activeTabKey].label}\n                    onClick={chartMapper[activeTabKey].onClick(\n                      toJobExplorer,\n                      queryParams\n                    )}\n                    TooltipClass={chartMapper[activeTabKey].tooltip}\n                  />\n                )}\n              </CardBody>\n            </Card>\n          </GridItem>\n          <GridItem span={6}>\n            <Card>\n              <CardTitle>\n                <h2>Job Runs by Organization</h2>\n              </CardTitle>\n              <Divider />\n              <CardBody>\n                {jobsIsLoading && <LoadingState />}\n                {jobsError && <ApiErrorState message={jobsError.error} />}\n                {jobsIsSuccess && jobs.items?.length <= 0 && <NoData />}\n                {jobsIsSuccess && jobs.items?.length > 0 && (\n                  <PieChart\n                    margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                    id=\"d3-donut-1-chart-root\"\n                    data={pieChartMapper(jobs.items, 'total_count')}\n                    colorFunc={colorFunc}\n                  />\n                )}\n              </CardBody>\n            </Card>\n          </GridItem>\n          <GridItem span={6}>\n            <Card>\n              <CardTitle>\n                <h2>Usage by Organization (Tasks)</h2>\n              </CardTitle>\n              <Divider />\n              <CardBody>\n                {tasksIsLoading && <LoadingState />}\n                {tasksError && <ApiErrorState message={tasksError.error} />}\n                {tasksIsSuccess && tasks.items?.length <= 0 && <NoData />}\n                {tasksIsSuccess && tasks.items?.length > 0 && (\n                  <PieChart\n                    margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                    id=\"d3-donut-2-chart-root\"\n                    data={pieChartMapper(tasks.items, 'host_task_count')}\n                    colorFunc={colorFunc}\n                  />\n                )}\n              </CardBody>\n            </Card>\n          </GridItem>\n        </Grid>\n      );\n\n    return '';\n  };\n\n  return (\n    <>\n      <PageHeader>\n        <PageHeaderTitle title={'Organization Statistics'} />\n        <FilterableToolbar\n          categories={options}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n          qsConfig={qsConfig}\n        />\n      </PageHeader>\n      <Main>{renderContent()}</Main>\n    </>\n  );\n};\n\nOrganizationStatistics.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default OrganizationStatistics;\n","var pfmulti = [\n    '#06C',\n    '#4CB140',\n    '#009596',\n    '#5752D1',\n    '#F4C145',\n    '#EC7A08',\n    '#8BC1F7',\n    '#23511E',\n    '#A2D9D9',\n    '#2A265F',\n    '#F9E0A2',\n    '#8F4700',\n    '#002F5D',\n];\nexport { pfmulti };\n","import React, { useCallback, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { Card, CardBody } from '@patternfly/react-core';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport Breadcrumbs from '../../../Components/Breadcrumbs';\n\nimport { readPlanOptions } from '../../../Api/';\n\nimport Form from '../Shared/Form';\n\nimport { Paths } from '../../../paths';\nimport useRequest from '../../../Utilities/useRequest';\n\nconst Add = () => {\n  const {\n    result: options,\n    isSuccess,\n    request: fetchPlanOptions,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await readPlanOptions();\n      return {\n        data: response,\n      };\n    }, []),\n    {\n      options: {},\n    }\n  );\n\n  useEffect(() => {\n    fetchPlanOptions();\n  }, [fetchPlanOptions]);\n\n  const canWrite =\n    isSuccess &&\n    (options.data?.meta?.rbac?.perms?.write === true ||\n      options.data?.meta?.rbac?.perms?.all === true);\n  const title = 'Create new plan';\n\n  const showAdd = () => (\n    <>\n      <PageHeader>\n        <Breadcrumbs\n          items={[{ title: 'Savings Planner', navigate: '/savings-planner' }]}\n        />\n        <PageHeaderTitle title={title} />\n      </PageHeader>\n      <Main>\n        <Card>\n          <CardBody>\n            <Form title={title} options={options} />\n          </CardBody>\n        </Card>\n      </Main>\n    </>\n  );\n  if (isSuccess) {\n    return canWrite ? showAdd() : <Redirect to={Paths.savingsPlanner} />;\n  }\n  return null;\n};\n\nexport default Add;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { CardActions } from '@patternfly/react-core';\nimport styled from 'styled-components';\n\nconst CardActionsWrapper = styled.div`\n  margin-top: 20px;\n  --pf-c-card__actions--PaddingLeft: 0;\n`;\n\nconst CardActionsRow = ({ children }) => {\n  return (\n    <CardActionsWrapper>\n      <CardActions>{children}</CardActions>\n    </CardActionsWrapper>\n  );\n};\n\nCardActionsRow.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default CardActionsRow;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\nimport { Button, Badge, Alert, Tooltip } from '@patternfly/react-core';\nimport AlertModal from '../AlertModal';\nimport { getRelatedResourceDeleteCounts } from '../../Utilities/getRelatedResourceDeleteDetails';\nimport ErrorDetail from '../ErrorDetail';\n\nconst WarningMessage = styled(Alert)`\n  margin-top: 10px;\n`;\n\nconst Label = styled.span`\n  && {\n    margin-right: 10px;\n  }\n`;\n\nconst DeleteButton = ({\n  onConfirm,\n  modalTitle = 'Delete',\n  name = '',\n  variant = 'secondary',\n  isDisabled = false,\n  ouiaId = null,\n  deleteMessage = 'Delete?',\n  deleteDetailsRequests = [],\n  disabledTooltip = 'This item cannot be deleted',\n  children,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [deleteMessageError, setDeleteMessageError] = useState();\n  const [deleteDetails, setDeleteDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const toggleModal = async (isModalOpen) => {\n    setIsLoading(true);\n    if (deleteDetailsRequests.length > 0 && isModalOpen) {\n      const { results, error } = await getRelatedResourceDeleteCounts(\n        deleteDetailsRequests\n      );\n      if (error) {\n        setDeleteMessageError(error);\n      } else {\n        setDeleteDetails(results);\n      }\n    }\n    setIsLoading(false);\n    setIsOpen(isModalOpen);\n  };\n\n  if (deleteMessageError) {\n    return (\n      <AlertModal\n        isOpen={!!deleteMessageError}\n        variant={'error'}\n        title={'Error!'}\n        onClose={() => {\n          toggleModal(false);\n          setDeleteMessageError();\n        }}\n      >\n        <ErrorDetail error={deleteMessageError.detail} />\n      </AlertModal>\n    );\n  }\n\n  return (\n    <>\n      {disabledTooltip ? (\n        <Tooltip content={disabledTooltip} position=\"top\">\n          <div>\n            <Button\n              spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n              variant={variant || 'secondary'}\n              aria-label={'Delete'}\n              isDisabled={isDisabled}\n              onClick={() => toggleModal(true)}\n              ouiaId={ouiaId}\n            >\n              {children || 'Delete'}\n            </Button>\n          </div>\n        </Tooltip>\n      ) : (\n        <Button\n          ouiaId={ouiaId}\n          spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n          variant={variant || 'secondary'}\n          aria-label={'Delete'}\n          isDisabled={isDisabled}\n          onClick={() => toggleModal(true)}\n        >\n          {children || 'Delete'}\n        </Button>\n      )}\n      <AlertModal\n        isOpen={isOpen}\n        title={modalTitle}\n        variant=\"danger\"\n        onClose={() => toggleModal(false)}\n        actions={[\n          <Button\n            ouiaId=\"delete-modal-confirm\"\n            key=\"delete\"\n            variant=\"danger\"\n            aria-label={'Confirm Delete'}\n            isDisabled={isDisabled}\n            onClick={() => {\n              onConfirm();\n              toggleModal(false);\n            }}\n          >\n            {'Delete'}\n          </Button>,\n          <Button\n            ouiaId=\"delete-modal-cancel\"\n            key=\"cancel\"\n            variant=\"link\"\n            aria-label={'Cancel'}\n            onClick={() => toggleModal(false)}\n          >\n            {'Cancel'}\n          </Button>,\n        ]}\n      >\n        {'Are you sure you want to delete:'}\n        <br />\n        <strong>{name}</strong>\n        {Object.values(deleteDetails).length > 0 && (\n          <WarningMessage\n            variant=\"warning\"\n            isInline\n            title={\n              <div>\n                <div aria-label={deleteMessage}>{deleteMessage}</div>\n                <br />\n                {Object.entries(deleteDetails).map(([key, value]) => (\n                  <div aria-label={`${key}: ${value}`} key={key}>\n                    <Label>{key}</Label> <Badge>{value}</Badge>\n                  </div>\n                ))}\n              </div>\n            }\n          />\n        )}\n      </AlertModal>\n    </>\n  );\n};\n\nDeleteButton.propTypes = {\n  onConfirm: PropTypes.func.isRequired,\n  modalTitle: PropTypes.string,\n  name: PropTypes.string,\n  variant: PropTypes.object,\n  isDisabled: PropTypes.bool,\n  ouiaId: PropTypes.string,\n  deleteMessage: PropTypes.string,\n  deleteDetailsRequests: PropTypes.array,\n  disabledTooltip: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nexport default DeleteButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { shape, string, number, arrayOf, node, oneOfType } from 'prop-types';\nimport { Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst RoutedTabs = ({ tabsArray, defaultTabId }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const getActiveTabId = (defaultTabId) => {\n    return (\n      tabsArray.find((tab) => tab.link === location.pathname)?.id ||\n      defaultTabId\n    );\n  };\n\n  const handleTabSelect = (_, eventKey) => {\n    const match = tabsArray.find((tab) => tab.id === eventKey);\n    if (match) {\n      history.push(match.link);\n    }\n  };\n\n  return (\n    <Tabs activeKey={getActiveTabId(defaultTabId)} onSelect={handleTabSelect}>\n      {tabsArray.map((tab) => (\n        <Tab\n          aria-label={typeof tab.name === 'string' ? tab.name : `${tab.id} tab`}\n          eventKey={tab.id}\n          key={tab.id}\n          link={tab.link}\n          title={<TabTitleText>{tab.name}</TabTitleText>}\n          role=\"tab\"\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nRoutedTabs.propTypes = {\n  defaultTabId: PropTypes.number,\n  tabsArray: arrayOf(\n    shape({\n      id: number.isRequired,\n      link: string.isRequired,\n      name: oneOfType([string.isRequired, node.isRequired]),\n    })\n  ).isRequired,\n};\n\nRoutedTabs.defaultProps = {\n  defaultTabId: 1,\n};\n\nexport default RoutedTabs;\n","import React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\nimport { Paths } from '../../../../paths';\nimport { stringify } from 'query-string';\n\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { Button } from '@patternfly/react-core';\n\nimport {\n  CardBody as PFCardBody,\n  CardFooter,\n  DescriptionList,\n  DescriptionListTerm,\n  DescriptionListGroup,\n  DescriptionListDescription,\n  Divider as PFDivider,\n  Label,\n  List,\n  ListItem,\n} from '@patternfly/react-core';\nimport CardActionsRow from '../../../../Components/CardActionsRow';\nimport {\n  relatedResourceDeleteRequests,\n  getRelatedResourceDeleteCounts,\n} from '../../../../Utilities/getRelatedResourceDeleteDetails';\nimport { deletePlan, readPlan } from '../../../../Api/';\nimport useRequest, {\n  useDismissableError,\n} from '../../../../Utilities/useRequest';\nimport DeleteButton from '../../../../Components/DeleteButton/DeleteButton';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { formatDateTime } from '../../../../Utilities/helpers';\nimport RoutedTabs from '../../../../Components/RoutedTabs';\nimport AlertModal from '../../../../Components/AlertModal/AlertModal';\nimport ErrorDetail from '../../../../Components/ErrorDetail/ErrorDetail';\nimport JobStatus from '../../../../Components/JobStatus';\n\nconst CardBody = styled(PFCardBody)`\n  min-height: 500px;\n  padding: 0;\n  padding-bottom: 20px;\n\n  &:first-child {\n    padding-top: 0;\n  }\n`;\n\nconst Divider = styled(PFDivider)`\n  padding-top: 24px;\n`;\n\nconst DetailsTab = ({ tabsArray, plans, canWrite, options }) => {\n  const { pathname } = useLocation();\n  const history = useHistory();\n  const {\n    id,\n    automation_status,\n    category,\n    description,\n    frequency_period,\n    hosts,\n    manual_time,\n    modified,\n    name,\n    tasks,\n    template_details,\n    template_id,\n  } = plans[0];\n\n  const redirectToJobExplorer = (templateId) => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      quick_date_range: 'last_30_days',\n      status: ['failed', 'successful'],\n      template_id: [templateId],\n    };\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const showTemplate = (template_details) => {\n    if (!template_details.id) {\n      return;\n    }\n\n    return (\n      <a onClick={() => redirectToJobExplorer(template_details.id)}>\n        {template_details.name}\n      </a>\n    );\n  };\n\n  const renderOptionsBasedValue = (key, val) => {\n    const fromOptionsValue = (options[key] || []).find(\n      ({ key: apiValue }) => apiValue === val\n    );\n    return (fromOptionsValue || {}).value;\n  };\n\n  const labelsAndValues = {\n    Name: name || undefined,\n    'Automation type': category\n      ? renderOptionsBasedValue('category', category)\n      : undefined,\n    Description: description || undefined,\n    'Manual time': manual_time\n      ? renderOptionsBasedValue('manual_time', manual_time)\n      : undefined,\n    'Run on hosts': hosts || undefined,\n    Frequency: frequency_period\n      ? renderOptionsBasedValue('frequency_period', frequency_period)\n      : undefined,\n    Template: template_id ? showTemplate(template_details) : undefined,\n    'Last job status':\n      automation_status.status && automation_status.status !== 'None' ? (\n        <JobStatus status={automation_status.status} />\n      ) : (\n        <Label variant=\"outline\" color=\"red\" icon={<ExclamationCircleIcon />}>\n          Not Running\n        </Label>\n      ),\n    'Last updated': modified ? (\n      <span>{formatDateTime(modified)}</span>\n    ) : undefined,\n  };\n\n  const { request: deletePlans, error: deleteError } = useRequest(\n    useCallback(async () => {\n      await deletePlan({ id });\n      history.push(`/savings-planner`);\n    }, [id, history])\n  );\n\n  const {\n    result: { isDeleteDisabled },\n    error: deleteDetailsError,\n    request: fetchDeleteDetails,\n  } = useRequest(\n    useCallback(async () => {\n      const { results: deleteDetails, error } =\n        await getRelatedResourceDeleteCounts(\n          relatedResourceDeleteRequests.savingsPlan(plans[0], readPlan)\n        );\n      if (error) {\n        throw new Error(error);\n      }\n      if (deleteDetails) {\n        return { isDeleteDisabled: true };\n      }\n      return { isDeleteDisabled: false };\n    }, [plans[0]]),\n    { isDeleteDisabled: false }\n  );\n\n  useEffect(() => {\n    fetchDeleteDetails();\n  }, [fetchDeleteDetails]);\n  const { error, dismissError } = useDismissableError(\n    deleteError || deleteDetailsError\n  );\n\n  return (\n    <>\n      {plans && (\n        <>\n          <CardBody>\n            <RoutedTabs tabsArray={tabsArray} />\n            <div style={{ padding: '1rem' }}>\n              <DescriptionList isHorizontal columnModifier={{ lg: '3Col' }}>\n                {Object.keys(labelsAndValues).map(\n                  (key, i) =>\n                    labelsAndValues[key] !== undefined && (\n                      <DescriptionListGroup key={i}>\n                        <DescriptionListTerm>{key}</DescriptionListTerm>\n                        <DescriptionListDescription>\n                          {labelsAndValues[key]}\n                        </DescriptionListDescription>\n                      </DescriptionListGroup>\n                    )\n                )}\n              </DescriptionList>\n              {tasks.length > 0 && (\n                <DescriptionList>\n                  <Divider component=\"div\" />\n                  <DescriptionListGroup key={tasks}>\n                    <DescriptionListTerm>Tasks</DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <List component=\"ol\" type=\"1\">\n                        {tasks.map(({ id, task }) => (\n                          <ListItem key={id}>{task}</ListItem>\n                        ))}\n                      </List>\n                    </DescriptionListDescription>\n                  </DescriptionListGroup>\n                </DescriptionList>\n              )}\n            </div>\n          </CardBody>\n          {canWrite && (\n            <CardFooter>\n              <CardActionsRow>\n                <Button\n                  key=\"edit-plan-button\"\n                  variant=\"primary\"\n                  aria-label=\"Edit plan\"\n                  onClick={() => {\n                    history.push({\n                      pathname: `${pathname.split('/details')[0]}/edit`,\n                    });\n                  }}\n                >\n                  Edit\n                </Button>\n                <DeleteButton\n                  key={'delete-plan-button'}\n                  name={name}\n                  modalTitle={'Delete Plan'}\n                  onConfirm={deletePlans}\n                  disabledTooltip={\n                    isDeleteDisabled && 'This plan cannot be deleted'\n                  }\n                >\n                  {'Delete'}\n                </DeleteButton>\n              </CardActionsRow>\n              {error && (\n                <AlertModal\n                  isOpen={!!error}\n                  onClose={dismissError}\n                  title={'Error'}\n                  variant=\"error\"\n                >\n                  <ErrorDetail error={error.detail} />\n                </AlertModal>\n              )}\n            </CardFooter>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nDetailsTab.propTypes = {\n  plans: PropTypes.array,\n  tabsArray: PropTypes.array,\n  canWrite: PropTypes.bool.isRequired,\n  options: PropTypes.object.isRequired,\n};\n\nexport default DetailsTab;\n","var hoursFormatter = function (n) {\n    return (+n.toFixed(0)).toLocaleString() + \" hours\";\n}; /* 2,500 hours */\nexport default hoursFormatter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle, Title } from '@patternfly/react-core';\nimport currencyFormatter from '../../../../../Utilities/currencyFormatter';\nimport hoursFormatter from '../../../../../Utilities/hoursFormatter';\nvar TotalSavings = function (_a) {\n    var _b = _a.value, value = _b === void 0 ? 0 : _b, _c = _a.isMoney, isMoney = _c === void 0 ? true : _c;\n    return (React.createElement(Card, { isPlain: true },\n        React.createElement(CardTitle, { style: { paddingBottom: '0' } }, \"Total savings\"),\n        React.createElement(CardBody, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"4xl\", style: { color: isMoney ? '#81C46B' : '#0063CF' } }, isMoney ? \"\" + currencyFormatter(value) : \"\" + hoursFormatter(value)))));\n};\nTotalSavings.propTypes = {\n    value: PropTypes.number,\n    isMoney: PropTypes.bool,\n};\nexport default TotalSavings;\n","import React, { useState } from 'react';\nimport { Button, ButtonVariant, CodeBlock, CodeBlockCode, Modal, ModalVariant, } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nvar CostsText = function () { return (React.createElement(React.Fragment, null,\n    React.createElement(\"p\", null,\n        React.createElement(\"strong\", null, \"Cost\")),\n    React.createElement(\"p\", null, \"The cost includes the hours spent in implementation, deployment, training and other expenditures for creating, maintaining and running the automation. These hours (cost of investment) are usually higher at the onset, and will be greatly reduced once the automation has been created and only maintenance is required.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"For the initial period and the first year, we assume approximately 10 hours spent on each host, as well as some buffer time and a 40% risk adjustment to account for unforeseen situations.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"For the next two years after the first year, we assume 4 hours spent on each host, as well as a 40% risk adjustment to account for unforeseen situations.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate cost for the initial period and year 1:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"C1 = (time for a manual run on one host in hours * 10) + buffer time\\nC2 = C1 * 40% risk adjustment\\ninitial cost = (C1 + C2) * (cost per hour in USD if applicable, based on display)\\nyear 1 cost = (C1 + C2) * (cost per hour in USD if applicable, based on display)\")),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate cost for years 2 and 3:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"C1 = (time for a manual run on one host in hours * 4)\\nC2 = C1 * 40% risk adjustment\\nyear 2 cost = (C1 + C2) * (cost per hour in USD if applicable, based on display)\\nyear 3 cost = (C1 + C2) * (cost per hour in USD if applicable, based on display)\")))); };\nvar SavingsText = function () { return (React.createElement(React.Fragment, null,\n    React.createElement(\"p\", null,\n        React.createElement(\"strong\", null, \"Savings\")),\n    React.createElement(\"p\", null, \"The savings indicates the time and money saved as a result of automating the plan.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"We assume 50% productivity recapture to account for the productivity that is usually gained by repeated manual implementation of a task over a period of time. We also add a -5% risk adjustment for unforeseen situations that might arise and need to be handled. We also assume a 15% year over year growth in savings.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"Money savings for the initial period is 0, so there is no formula necessary.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate savings for year 0:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"initial period savings = 0 - initial cost\")),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used for savings for year 1:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"S1 = (number of hosts * (manual time in minutes / 60) * yearly frequency of automation)\\nS2 = S1 * 50% productivity recapture\\nS3 = S2 * 5% risk adjustment * (cost per hour in USD if applicable, based on display)\\nyear 1 savings = S2 - S3 - year 1 cost\")),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate savings for year 2:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"S1 = year 1 savings * 15% growth\\nyear 2 savings = year 1 savings + S1 - year 2 cost\")),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate savings for year 3:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"S2 = year 2 savings * 15% growth\\nyear 3 savings = year 2 savings + S2 - year 3 cost\")))); };\nvar FormulaDescription = function () {\n    var _a = useState(false), isOpen = _a[0], setIsOpen = _a[1];\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Button, { variant: \"link\", onClick: function () { return setIsOpen(true); }, icon: React.createElement(InfoCircleIcon, null) }, \"Automation formula\"),\n        React.createElement(Modal, { title: \"Automation formula\", isOpen: isOpen, onClose: function () { return setIsOpen(false); }, variant: ModalVariant.medium, actions: [\n                React.createElement(Button, { key: \"cancel\", variant: ButtonVariant.primary, onClick: function () { return setIsOpen(false); } }, \"Close\"),\n            ] },\n            React.createElement(\"p\", null, \"We use risk-adjusted factors to create the 3-year projection of cost and savings related to automation. While we aim to provide as accurate an account of the cost and savings as possible, actual values may differ in practice. The following information breaks down where we get the data, the risk-adjustment factors we use, the assumptions we make, and the formula used to compute the values as displayed in the chart.\"),\n            React.createElement(\"br\", null),\n            React.createElement(CostsText, null),\n            React.createElement(\"br\", null),\n            React.createElement(SavingsText, null))));\n};\nexport default FormulaDescription;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardActions, CardBody, CardHeader, CardTitle, Grid, GridItem, List, ListItem, ToggleGroup, ToggleGroupItem, } from '@patternfly/react-core';\nimport { SquareFullIcon } from '@patternfly/react-icons';\nimport ChartRenderer, { functions, ChartKind, ChartThemeColor, ChartType, ChartTopLevelType, ApiType, } from 'react-json-chart-builder';\nimport RoutedTabs from '../../../../Components/RoutedTabs';\nimport TotalSavings from './TotalSavings';\nimport FormulaDescription from './FormulaDescription';\nimport currencyFormatter from '../../../../Utilities/currencyFormatter';\nimport hoursFormatter from '../../../../Utilities/hoursFormatter';\nvar yearLabels = {\n    initial: 'Initial',\n    year1: 'Year 1',\n    year2: 'Year 2',\n    year3: 'Year 3',\n};\nvar getChartData = function (data) {\n    var statsData = Object.keys(yearLabels).map(function (year) { return ({\n        year: yearLabels[year],\n        total_costs: +data.projections.monetary_stats.total_costs[year] * -1,\n        total_benefits: +data.projections.monetary_stats.total_benefits[year],\n        cumulative_net_benefits: +data.projections.monetary_stats.cumulative_net_benefits[year],\n        total_hours_spent_risk_adjusted: +data.projections.time_stats.total_hours_spent_risk_adjusted[year] * -1,\n        total_hours_saved: +data.projections.time_stats.total_hours_saved[year],\n        cumulative_time_net_benefits: +data.projections.time_stats.cumulative_time_net_benefits[year],\n    }); });\n    return { items: statsData, type: ApiType.nonGrouped, response_type: '' };\n};\nvar constants = function (isMoney) { return ({\n    cost: {\n        key: isMoney ? 'total_costs' : 'total_hours_spent_risk_adjusted',\n        color: '#8B8D8F',\n    },\n    benefit: {\n        key: isMoney ? 'total_benefits' : 'total_hours_saved',\n        color: isMoney ? '#81C46B' : '#0063CF',\n    },\n    net: {\n        key: isMoney ? 'cumulative_net_benefits' : 'cumulative_time_net_benefits',\n        color: '#EE7A00',\n    },\n}); };\nvar StatisticsTab = function (_a) {\n    var tabsArray = _a.tabsArray, data = _a.data;\n    var _b = useState(true), isMoney = _b[0], setIsMoney = _b[1];\n    var customTooltipFormatting = function (datum) {\n        return isMoney ? currencyFormatter(+datum.y) : hoursFormatter(+datum.y);\n    };\n    var computeTotalSavings = function (d) {\n        return isMoney\n            ? d.projections.monetary_stats.cumulative_net_benefits.year3\n            : d.projections.time_stats.cumulative_time_net_benefits.year3;\n    };\n    var barChartData = {\n        charts: [\n            {\n                id: 1000,\n                kind: ChartKind.wrapper,\n                type: ChartTopLevelType.chart,\n                parent: null,\n                props: {\n                    height: 600,\n                    domainPadding: {\n                        x: 100,\n                    },\n                    padding: {\n                        bottom: 60,\n                        left: 80,\n                    },\n                    themeColor: ChartThemeColor.gray,\n                },\n                tooltip: {\n                    cursor: true,\n                    stickToAxis: 'x',\n                    mouseFollow: true,\n                    legendTooltip: {\n                        legendData: [\n                            {\n                                childName: constants(isMoney).benefit.key,\n                                name: 'Savings',\n                                symbol: {\n                                    fill: constants(isMoney).benefit.color,\n                                },\n                            },\n                            {\n                                childName: constants(isMoney).cost.key,\n                                name: 'Costs',\n                                symbol: {\n                                    fill: constants(isMoney).cost.color,\n                                },\n                            },\n                            {\n                                childName: constants(isMoney).net.key,\n                                name: 'Cumulative savings',\n                                symbol: {\n                                    fill: constants(isMoney).net.color,\n                                },\n                            },\n                        ],\n                        titleProperyForLegend: 'year',\n                    },\n                    customFnc: customTooltipFormatting,\n                },\n                xAxis: {\n                    label: 'Time',\n                },\n                yAxis: {\n                    label: isMoney ? 'Money Saved' : 'Hours Saved',\n                    tickFormat: 'formatNumberAsK',\n                    style: {\n                        grid: { stroke: '#D2D2D2' },\n                        axisLabel: { padding: 60 },\n                    },\n                },\n            },\n            {\n                id: 1001,\n                kind: ChartKind.stack,\n                parent: 1000,\n                props: {},\n            },\n            {\n                id: 1102,\n                kind: ChartKind.simple,\n                type: ChartType.bar,\n                name: constants(isMoney).benefit.key,\n                parent: 1001,\n                props: {\n                    x: 'year',\n                    y: constants(isMoney).benefit.key,\n                    barRatio: 0.8,\n                    barWidth: 0,\n                    style: {\n                        data: {\n                            fill: constants(isMoney).benefit.color,\n                            width: 120,\n                        },\n                    },\n                },\n                tooltip: {\n                    labelName: '',\n                },\n            },\n            {\n                id: 1101,\n                kind: ChartKind.simple,\n                type: ChartType.bar,\n                name: constants(isMoney).cost.key,\n                parent: 1001,\n                props: {\n                    x: 'year',\n                    y: constants(isMoney).cost.key,\n                    barRatio: 0.8,\n                    barWidth: 0,\n                    style: {\n                        data: {\n                            fill: constants(isMoney).cost.color,\n                            width: 120,\n                        },\n                    },\n                },\n                tooltip: {\n                    labelName: '',\n                },\n            },\n            {\n                id: 1002,\n                kind: ChartKind.simple,\n                type: ChartType.line,\n                name: constants(isMoney).net.key,\n                parent: 1000,\n                props: {\n                    x: 'year',\n                    y: constants(isMoney).net.key,\n                    style: {\n                        data: {\n                            stroke: constants(isMoney).net.color,\n                            strokeWidth: 5,\n                        },\n                    },\n                },\n                tooltip: {\n                    labelName: '',\n                },\n            },\n        ],\n        functions: __assign(__assign({}, functions), { fetchFnc: function () {\n                return new Promise(function (resolve) {\n                    resolve(getChartData(data));\n                });\n            } }),\n    };\n    var renderLeft = function () { return (React.createElement(Card, { isPlain: true },\n        React.createElement(CardHeader, null,\n            React.createElement(CardActions, null,\n                React.createElement(ToggleGroup, { \"aria-label\": \"toggleButton\" },\n                    React.createElement(ToggleGroupItem, { text: \"Money\", buttonId: \"money\", isSelected: isMoney, onChange: function () { return setIsMoney(true); } }),\n                    React.createElement(ToggleGroupItem, { text: \"Time\", buttonId: \"time\", isSelected: !isMoney, onChange: function () { return setIsMoney(false); } }))),\n            React.createElement(CardTitle, null, data.name)),\n        React.createElement(CardBody, null,\n            React.createElement(ChartRenderer, { schema: barChartData.charts, functions: barChartData.functions })))); };\n    var renderRight = function () { return (React.createElement(React.Fragment, null,\n        React.createElement(TotalSavings, { value: computeTotalSavings(data), isMoney: isMoney }),\n        React.createElement(Card, { isPlain: true },\n            React.createElement(CardBody, null,\n                React.createElement(List, { isPlain: true },\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).benefit.color }) }, \"Savings from automating this plan\"),\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).cost.color }) }, \"Costs from creating, maintaining and running the automation\"),\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).net.color }) }, \"Cumulative savings over time\")))),\n        React.createElement(FormulaDescription, null))); };\n    return (React.createElement(Card, null,\n        React.createElement(RoutedTabs, { tabsArray: tabsArray }),\n        React.createElement(Grid, null,\n            React.createElement(GridItem, { span: 9 }, renderLeft()),\n            React.createElement(GridItem, { span: 3 }, renderRight()))));\n};\nStatisticsTab.propTypes = {\n    /* eslint-disable-next-line */\n    /* @ts-ignore: Validation error */\n    data: PropTypes.object.isRequired,\n    tabsArray: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        link: PropTypes.string.isRequired,\n        name: PropTypes.node.isRequired,\n    }).isRequired).isRequired,\n};\nexport default StatisticsTab;\n","import React, { useCallback, useEffect } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { readPlanOptions } from '../../../Api/';\nimport { Paths } from '../../../paths';\n\nimport Form from '../Shared/Form';\nimport useRequest from '../../../Utilities/useRequest';\n\nconst Edit = ({ data }) => {\n  const { id } = useParams();\n\n  const {\n    result: options,\n    isSuccess,\n    request: fetchPlanOptions,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await readPlanOptions();\n      return {\n        data: response,\n      };\n    }, []),\n    {\n      options: {},\n    }\n  );\n\n  useEffect(() => {\n    fetchPlanOptions();\n  }, [fetchPlanOptions]);\n\n  const canWrite =\n    isSuccess &&\n    (options.data?.meta?.rbac?.perms?.write === true ||\n      options.data?.meta?.rbac?.perms?.all === true);\n\n  const showEdit = () => (\n    <>\n      <Form title=\"Edit plan\" options={options} data={data} />\n    </>\n  );\n\n  if (isSuccess) {\n    return canWrite ? (\n      showEdit()\n    ) : (\n      <Redirect to={`${Paths.savingsPlanner}/${id}`} />\n    );\n  }\n  return null;\n};\n\nEdit.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default Edit;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useLocation, Route, Switch } from 'react-router-dom';\nimport { CaretLeftIcon } from '@patternfly/react-icons';\nimport { Card } from '@patternfly/react-core';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\n\nimport DetailsTab from './DetailsTab';\nimport StatisticsTab from './StatisticsTab';\nimport SavingsPlanner from '../List';\nimport ApiErrorState from '../../../Components/ApiErrorState';\nimport { notAuthorizedParams } from '../../../Utilities/constants';\n\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nimport Breadcrumbs from '../../../Components/Breadcrumbs';\n\nimport { preflightRequest, readPlan, readPlanOptions } from '../../../Api/';\n\nimport SavingsPlanEdit from '../Edit';\nimport useRequest from '../../../Utilities/useRequest';\n\nconst Details = () => {\n  const { id } = useParams();\n  const { state: locationState } = useLocation();\n  const [preflightError, setPreFlightError] = useState(null);\n  let pageTitle = 'Details';\n  let onEdit = false;\n  if (locationState?.reload) {\n    onEdit = true;\n  }\n  if (location.pathname.indexOf('/statistics') !== -1) {\n    pageTitle = 'Statistics';\n  } else if (location.pathname.indexOf('/edit') !== -1) {\n    pageTitle = 'Edit plan';\n  }\n  const [selectedId, setSelectedId] = useState(id);\n  const queryParams = { id: [selectedId] };\n\n  const {\n    result: { options },\n    error,\n    isSuccess,\n    request: fetchOptions,\n  } = useRequest(\n    useCallback(async () => {\n      setSelectedId(id);\n      await preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n\n      const response = await readPlanOptions();\n      return { options: response };\n    }, []),\n    { options: {} }\n  );\n\n  const {\n    result: { rbac, plans },\n    error: plansError,\n    isLoading: plansIsLoading,\n    isSuccess: plansIsSuccess,\n    request: fetchEndpoints,\n  } = useRequest(\n    useCallback(async () => {\n      setSelectedId(id);\n      await preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n      const response = await readPlan({ params: queryParams });\n      return {\n        plans: response.items,\n        rbac: response.rbac,\n      };\n    }, []),\n    { plans: [], rbac: [], plansError, plansIsLoading, plansIsSuccess }\n  );\n\n  useEffect(() => {\n    fetchOptions();\n    fetchEndpoints();\n  }, [queryParams]);\n\n  const canWrite =\n    isSuccess && (rbac.perms?.write === true || rbac.perms?.all === true);\n  const tabsArray = [\n    {\n      id: 0,\n      name: (\n        <>\n          <CaretLeftIcon />\n          {'Back to Plans'}\n        </>\n      ),\n      link: `/savings-planner`,\n    },\n    { id: 1, name: 'Details', link: `/savings-planner/${selectedId}/details` },\n    {\n      id: 2,\n      name: 'Statistics',\n      link: `/savings-planner/${selectedId}/statistics`,\n    },\n  ];\n\n  const breadcrumbUrl = `/savings-planner/${selectedId}`;\n  const breadcrumbsItems = plansIsSuccess\n    ? [\n        { title: 'Savings Planner', navigate: '/savings-planner' },\n        { title: plans[0].name, navigate: breadcrumbUrl },\n      ]\n    : [];\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n  return (\n    <>\n      {error && (\n        <>\n          <ApiErrorState message={error.error} />\n        </>\n      )}\n      {plansIsSuccess && (\n        <>\n          <PageHeader>\n            <Breadcrumbs items={breadcrumbsItems} />\n            <PageHeaderTitle title={pageTitle} />\n          </PageHeader>\n          <Main>\n            <Card>\n              <Switch>\n                <Route path=\"/savings-planner/:id/statistics\">\n                  <StatisticsTab\n                    tabsArray={tabsArray}\n                    data={plans[0]}\n                    queryParams={queryParams}\n                  />\n                </Route>\n                {!onEdit && (\n                  <Route path=\"/savings-planner/:id/details\">\n                    <DetailsTab\n                      plans={plans}\n                      tabsArray={tabsArray}\n                      canWrite={canWrite}\n                      options={options}\n                    />\n                  </Route>\n                )}\n                <Route path=\"/savings-planner/:id/edit\">\n                  <SavingsPlanEdit data={plans[0]} />\n                </Route>\n                <Route path=\"/savings-planner/:id\">\n                  <DetailsTab\n                    plans={plans}\n                    tabsArray={tabsArray}\n                    canWrite={canWrite}\n                    options={options}\n                  />\n                </Route>\n                <Route exact path=\"/savings-planner\">\n                  <SavingsPlanner />\n                </Route>\n              </Switch>\n            </Card>\n          </Main>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Details;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Title,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Button,\n} from '@patternfly/react-core';\nimport { AddCircleOIcon, SearchIcon } from '@patternfly/react-icons';\nimport { useHistory } from 'react-router-dom';\n\nconst EmptyList = ({\n  label = '',\n  title = 'No items found.',\n  message = '',\n  canAdd = false,\n  path,\n}) => {\n  const history = useHistory();\n\n  return (\n    <EmptyState variant=\"full\">\n      <EmptyStateIcon icon={canAdd ? AddCircleOIcon : SearchIcon} />\n      <Title size=\"lg\" headingLevel=\"h3\">\n        {title}\n      </Title>\n      <EmptyStateBody>{message}</EmptyStateBody>\n      {canAdd && (\n        <Button\n          key=\"add-item-button\"\n          variant=\"primary\"\n          aria-label={label}\n          onClick={() => {\n            history.push({\n              pathname: path,\n            });\n          }}\n        >\n          {label}\n        </Button>\n      )}\n    </EmptyState>\n  );\n};\n\nEmptyList.propTypes = {\n  canAdd: PropTypes.bool,\n  label: PropTypes.string,\n  message: PropTypes.string,\n  title: PropTypes.string,\n  path: PropTypes.string.isRequired,\n};\n\nexport default EmptyList;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {\n  Card,\n  CardHeader,\n  CardHeaderMain,\n  CardActions,\n  CardTitle as PFCardTitle,\n  CardBody,\n  CardFooter,\n  Checkbox as PFCheckbox,\n  Dropdown,\n  DropdownItem,\n  KebabToggle,\n  Label,\n} from '@patternfly/react-core';\n\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport styled from 'styled-components';\nimport { stringify } from 'query-string';\n\nimport { Link, useRouteMatch } from 'react-router-dom';\n\nimport { Paths } from '../../../../paths';\n\nimport currencyFormatter from '../../../../Utilities/currencyFormatter';\nimport { formatDateTime } from '../../../../Utilities/helpers';\n\nimport JobStatus from '../../../../Components/JobStatus';\n\nconst CardTitle = styled(PFCardTitle)`\n  word-break: break-word;\n`;\n\nconst CardLabel = styled.span`\n  margin-right: 5px;\n  font-weight: bold;\n`;\n\nconst Small = styled.small`\n  display: block;\n  margin-bottom: 10px;\n  color: #6a6e73;\n`;\n\nconst Checkbox = styled(PFCheckbox)`\n  &.pf-c-check.pf-m-standalone {\n    margin-top: -3px;\n  }\n`;\n\nconst CardDetail = styled.div`\n  display: flex;\n  min-height: 30px;\n  align-items: center;\n`;\n\nconst ListItem = ({\n  isSuccess,\n  plan,\n  selected = [],\n  handleSelect = () => {},\n  canWrite,\n  options,\n}) => {\n  const {\n    id,\n    automation_status,\n    category,\n    description,\n    frequency_period,\n    modified,\n    name,\n    template_details,\n    projections,\n  } = plan;\n\n  const projectedSavings =\n    projections?.monetary_stats?.cumulative_net_benefits?.year3;\n\n  const [isCardKebabOpen, setIsCardKebabOpen] = useState(false);\n  const match = useRouteMatch();\n  let history = useHistory();\n\n  const redirectToJobExplorer = (templateId) => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      quick_date_range: 'last_30_days',\n      status: ['failed', 'successful'],\n      template_id: [templateId],\n    };\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const renderTemplateLink = (template) => {\n    return template && isSuccess ? (\n      <a onClick={() => redirectToJobExplorer(template.id)}>{template.name}</a>\n    ) : null;\n  };\n\n  const renderOptionsBasedValue = (key, val) => {\n    return options[key].find(({ key: apiValue }) => apiValue === val).value;\n  };\n\n  const kebabDropDownItems = [\n    <React.Fragment key={id}>\n      <DropdownItem\n        key=\"edit\"\n        onClick={() => history.push(`${match.url}/${id}/edit`)}\n        position=\"right\"\n      >\n        Edit\n      </DropdownItem>\n      <DropdownItem\n        key=\"link\"\n        onClick={() => history.push(`${match.url}/${id}/edit#tasks`)}\n        position=\"right\"\n      >\n        Manage tasks\n      </DropdownItem>\n      <DropdownItem\n        key=\"link\"\n        onClick={() => history.push(`${match.url}/${id}/edit#link_template`)}\n        position=\"right\"\n      >\n        Link template\n      </DropdownItem>\n    </React.Fragment>,\n  ];\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardHeaderMain>\n          <CardTitle>\n            <Link to={`${match.url}/${id}`}>{name}</Link>\n          </CardTitle>\n        </CardHeaderMain>\n        {canWrite && (\n          <CardActions>\n            <Dropdown\n              onSelect={() => {}}\n              toggle={\n                <KebabToggle\n                  onToggle={() => setIsCardKebabOpen(!isCardKebabOpen)}\n                />\n              }\n              isOpen={isCardKebabOpen}\n              isPlain\n              dropdownItems={kebabDropDownItems}\n              position={'right'}\n            />\n            <Checkbox\n              onChange={() => handleSelect(plan)}\n              isChecked={selected.some((row) => row.id === plan.id)}\n              aria-label=\"card checkbox\"\n              id=\"check-1\"\n              name=\"check1\"\n            />\n          </CardActions>\n        )}\n      </CardHeader>\n      <CardBody>\n        {description ? <Small>{description}</Small> : null}\n        <CardDetail>\n          <CardLabel>Frequency</CardLabel>{' '}\n          {frequency_period ? (\n            renderOptionsBasedValue('frequency_period', frequency_period)\n          ) : (\n            <span>None</span>\n          )}\n        </CardDetail>\n        <CardDetail>\n          <CardLabel>Template</CardLabel>{' '}\n          {Object.keys(template_details || {}).length !== 0 ? (\n            renderTemplateLink(template_details)\n          ) : (\n            <span>\n              None -{' '}\n              <a\n                onClick={() =>\n                  history.push(`${match.url}/${id}/edit#link_template`)\n                }\n              >\n                Link template\n              </a>\n            </span>\n          )}\n        </CardDetail>\n        <CardDetail>\n          <CardLabel>Last job status</CardLabel>\n          {automation_status.status !== 'None' ? (\n            <JobStatus status={automation_status.status} />\n          ) : (\n            <Label\n              variant=\"outline\"\n              color=\"red\"\n              icon={<ExclamationCircleIcon />}\n            >\n              Not Running\n            </Label>\n          )}\n        </CardDetail>\n        {projectedSavings && (\n          <CardDetail>\n            <CardLabel>Projected savings</CardLabel>\n            <a onClick={() => history.push(`${match.url}/${id}/statistics`)}>\n              {currencyFormatter(+projectedSavings)}\n            </a>\n          </CardDetail>\n        )}\n        <CardDetail>\n          <CardLabel>Last updated</CardLabel>{' '}\n          <span>{formatDateTime(modified)}</span>\n        </CardDetail>\n      </CardBody>\n      <CardFooter>\n        <Label>{renderOptionsBasedValue('category', category)}</Label>\n      </CardFooter>\n    </Card>\n  );\n};\n\nListItem.propTypes = {\n  isSuccess: PropTypes.bool.isRequired,\n  canWrite: PropTypes.bool.isRequired,\n  selected: PropTypes.array,\n  handleSelect: PropTypes.func,\n  plan: PropTypes.object,\n  options: PropTypes.object,\n};\n\nexport default ListItem;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport AlertModal from '../AlertModal';\n\nimport { getRelatedResourceDeleteCounts } from '../../Utilities/getRelatedResourceDeleteDetails';\n\nimport ErrorDetail from '../ErrorDetail';\n\nconst requiredField = (props) => {\n  const { name, username, image } = props;\n  if (!name && !username && !image) {\n    return new Error(\n      `One of 'name', 'username' or 'image' is required by ItemToDelete component.`\n    );\n  }\n  if (name) {\n    PropTypes.checkPropTypes(\n      {\n        name: PropTypes.string,\n      },\n      { name: props.name },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  if (username) {\n    PropTypes.checkPropTypes(\n      {\n        username: PropTypes.string,\n      },\n      { username: props.username },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  if (image) {\n    PropTypes.checkPropTypes(\n      {\n        image: PropTypes.string,\n      },\n      { image: props.image },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  return null;\n};\n\nconst ToolbarDeleteButton = ({\n  itemsToDelete,\n  pluralizedItemName = 'Items',\n  onDelete,\n  errorMessage = 'Error while deleting',\n  deleteDetailsRequests = [],\n  cannotDelete = (item) => !item,\n}) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [deleteDetails, setDeleteDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [deleteMessageError, setDeleteMessageError] = useState('');\n  const handleDelete = () => {\n    onDelete();\n    toggleModal();\n  };\n\n  const toggleModal = async (isOpen) => {\n    setIsLoading(true);\n    setDeleteDetails(null);\n    if (\n      isOpen &&\n      itemsToDelete.length === 1 &&\n      deleteDetailsRequests?.length > 0\n    ) {\n      const { results, error } = await getRelatedResourceDeleteCounts(\n        deleteDetailsRequests\n      );\n\n      if (error) {\n        setDeleteMessageError(error);\n      } else {\n        setDeleteDetails(results);\n      }\n    }\n    setIsLoading(false);\n    setIsModalOpen(isOpen);\n  };\n\n  const renderTooltip = () => {\n    const itemsUnableToDelete = itemsToDelete\n      .filter(cannotDelete)\n      .map((item) => item.name || item.username)\n      .join(', ');\n\n    if (itemsToDelete.some(cannotDelete)) {\n      return (\n        <div>\n          {errorMessage ? (\n            <>\n              <span>{errorMessage}</span>\n              <span>{`: ${itemsUnableToDelete}`}</span>\n            </>\n          ) : (\n            `You do not have permission to delete ${pluralizedItemName}: ${itemsUnableToDelete}`\n          )}\n        </div>\n      );\n    }\n    if (itemsToDelete.length) {\n      return 'Delete';\n    }\n    return 'Select a plan to delete';\n  };\n\n  const modalTitle = `Delete ${pluralizedItemName}?`;\n\n  const isDisabled =\n    itemsToDelete.length === 0 || itemsToDelete.some(cannotDelete);\n\n  if (deleteMessageError) {\n    return (\n      <AlertModal\n        isOpen={!!deleteMessageError}\n        title={'Error!'}\n        onClose={() => {\n          toggleModal(false);\n          setDeleteMessageError();\n        }}\n      >\n        <ErrorDetail error={deleteMessageError.detail} />\n      </AlertModal>\n    );\n  }\n\n  return (\n    <>\n      <Tooltip content={renderTooltip()} position=\"top\">\n        <div>\n          <Button\n            variant=\"secondary\"\n            ouiaId=\"delete-button\"\n            spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n            aria-label={'Delete'}\n            onClick={() => toggleModal(true)}\n            isDisabled={isDisabled}\n          >\n            {'Delete'}\n          </Button>\n        </div>\n      </Tooltip>\n\n      {isModalOpen && (\n        <AlertModal\n          variant=\"danger\"\n          title={modalTitle}\n          isOpen={isModalOpen}\n          onClose={() => toggleModal(false)}\n          actions={[\n            <Button\n              ouiaId=\"delete-modal-confirm\"\n              key=\"delete\"\n              variant=\"danger\"\n              aria-label={'confirm delete'}\n              isDisabled={Boolean(deleteDetails)}\n              onClick={handleDelete}\n            >\n              {'Delete'}\n            </Button>,\n            <Button\n              key=\"cancel\"\n              variant=\"link\"\n              aria-label={'cancel delete'}\n              onClick={() => toggleModal(false)}\n            >\n              {'Cancel'}\n            </Button>,\n          ]}\n        >\n          <div>{'This action will delete the following:'}</div>\n          {itemsToDelete.map((item) => (\n            <span key={item.id}>\n              <strong>{item.name || item.username || item.image}</strong>\n              <br />\n            </span>\n          ))}\n        </AlertModal>\n      )}\n    </>\n  );\n};\n\nToolbarDeleteButton.propTypes = {\n  itemsToDelete: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: requiredField,\n      username: requiredField,\n      image: requiredField,\n    })\n  ).isRequired,\n  pluralizedItemName: PropTypes.string,\n  onDelete: PropTypes.func.isRequired,\n  errorMessage: PropTypes.string,\n  warningMessage: PropTypes.node,\n  deleteDetailsRequests: PropTypes.array,\n  cannotDelete: PropTypes.func,\n  deleteMessage: PropTypes.string,\n};\n\nexport default ToolbarDeleteButton;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport { Button, Gallery, PaginationVariant } from '@patternfly/react-core';\n\nimport {\n  deletePlan,\n  preflightRequest,\n  readPlanOptions,\n  readPlans,\n} from '../../../Api/';\nimport FilterableToolbar from '../../../Components/Toolbar';\nimport ApiErrorState from '../../../Components/ApiErrorState';\nimport LoadingState from '../../../Components/LoadingState';\nimport EmptyState from '../../../Components/EmptyState';\nimport EmptyList from '../../../Components/EmptyList';\nimport Pagination from '../../../Components/Pagination';\nimport PlanCard from './ListItem';\nimport { useQueryParams } from '../../../Utilities/useQueryParams';\nimport { savingsPlanner } from '../../../Utilities/constants';\nimport { notAuthorizedParams } from '../../../Utilities/constants';\n\nimport ToolbarDeleteButton from '../../../Components/Toolbar/ToolbarDeleteButton';\nimport useSelected from '../../../Utilities/useSelected';\nimport useRequest, { useDeleteItems } from '../../../Utilities/useRequest';\nimport ErrorDetail from '../../../Components/ErrorDetail';\nimport AlertModal from '../../../Components/AlertModal';\nimport { getQSConfig } from '../../../Utilities/qs';\n\nconst PageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 76px);\n`;\n\nconst Footer = styled.div`\n  flex-shrink: 0;\n`;\n\nconst FlexMain = styled(Main)`\n  flex-grow: 1;\n`;\nconst qsConfig = getQSConfig(\n  'savings-planner',\n  { ...savingsPlanner.defaultParams },\n  ['limit', 'offset']\n);\n\nconst List = () => {\n  const history = useHistory();\n  const { pathname } = useLocation();\n\n  // params from toolbar/searchbar\n  const { queryParams, setFromPagination, setFromToolbar } =\n    useQueryParams(qsConfig);\n\n  const [preflightError, setPreFlightError] = useState(null);\n\n  const {\n    result: { options },\n    error,\n    isSuccess,\n    request: fetchOptions,\n  } = useRequest(\n    useCallback(async () => {\n      await preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n      const response = await readPlanOptions();\n      return { options: response };\n    }, [queryParams]),\n    { options: {} }\n  );\n\n  const {\n    result: { data, rbac, total_count },\n    error: itemsError,\n    isLoading: itemsIsLoading,\n    isSuccess: itemsIsSuccess,\n    request: fetchEndpoints,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await readPlans({ params: queryParams });\n      return {\n        data: response.items,\n        rbac: response.rbac,\n        total_count: response.meta.total_count,\n      };\n    }, [queryParams]),\n    {\n      data: [],\n      itemsError,\n      itemsIsSuccess,\n      itemsIsLoading,\n    }\n  );\n\n  const combinedOptions = {\n    ...options,\n    name: [{ key: 'name', value: null }],\n  };\n\n  useEffect(() => {\n    fetchOptions();\n    fetchEndpoints();\n  }, [queryParams]);\n\n  const canWrite =\n    itemsIsSuccess &&\n    (rbac?.perms?.write === true || rbac?.perms?.all === true);\n\n  const { selected, isAllSelected, handleSelect, setSelected } =\n    useSelected(data);\n\n  const {\n    isLoading: deleteLoading,\n    deletionError,\n    deleteItems: deleteItems,\n    clearDeletionError,\n  } = useDeleteItems(\n    useCallback(async () => {\n      return Promise.all(selected.map((plan) => deletePlan({ id: plan.id })));\n    }, [selected]),\n    {\n      qsConfig: queryParams,\n      allItemsSelected: isAllSelected,\n      fetchItems: fetchEndpoints,\n    }\n  );\n\n  const handleDelete = async () => {\n    await deleteItems();\n    setSelected([]);\n  };\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  const renderContent = () => {\n    if (preflightError) return <EmptyState {...preflightError} />;\n\n    if (error) return <ApiErrorState message={error.error} />;\n\n    if (itemsIsLoading || deleteLoading) return <LoadingState />;\n\n    if (\n      itemsIsSuccess &&\n      data.length === 0 &&\n      !(itemsIsLoading || deleteLoading)\n    )\n      return (\n        <EmptyList\n          label={'Add plan'}\n          title={'No plans found'}\n          message={\n            canWrite\n              ? 'Update the applied filters or add a new plan.'\n              : 'Update the applied filters.'\n          }\n          canAdd={canWrite}\n          path={`${pathname}/add`}\n        />\n      );\n\n    if (itemsIsSuccess && !(itemsIsLoading || deleteLoading))\n      return (\n        <Gallery\n          hasGutter\n          minWidths={{\n            sm: '307px',\n            md: '307px',\n            lg: '307px',\n            xl: '307px',\n            '2xl': '307px',\n          }}\n        >\n          {isSuccess &&\n            itemsIsSuccess &&\n            data.map((datum) => (\n              <PlanCard\n                key={datum.id}\n                isSuccess={itemsIsSuccess}\n                selected={selected}\n                plan={datum}\n                handleSelect={handleSelect}\n                canWrite={canWrite}\n                options={options}\n              />\n            ))}\n        </Gallery>\n      );\n\n    return <></>;\n  };\n\n  return (\n    <PageContainer>\n      <PageHeader>\n        <PageHeaderTitle title={'Savings Planner'} />\n        <FilterableToolbar\n          categories={combinedOptions}\n          filters={queryParams}\n          qsConfig={qsConfig}\n          setFilters={setFromToolbar}\n          additionalControls={[\n            ...(canWrite\n              ? [\n                  <Button\n                    key=\"add-plan-button\"\n                    variant=\"primary\"\n                    aria-label=\"Add plan\"\n                    onClick={() => {\n                      history.push({\n                        pathname: `${pathname}/add`,\n                      });\n                    }}\n                  >\n                    Add plan\n                  </Button>,\n                ]\n              : []),\n            canWrite && isSuccess && data.length > 0 && (\n              <ToolbarDeleteButton\n                key=\"delete-plan-button\"\n                onDelete={handleDelete}\n                itemsToDelete={selected}\n                pluralizedItemName={'Savings plan'}\n              />\n            ),\n          ]}\n          pagination={\n            itemsIsSuccess && data.length > 0 ? (\n              <Pagination\n                count={total_count}\n                params={{\n                  limit: parseInt(queryParams.limit),\n                  offset: parseInt(queryParams.offset),\n                }}\n                qsConfig={qsConfig}\n                setPagination={setFromPagination}\n                isCompact\n              />\n            ) : (\n              <div></div>\n            )\n          }\n        />\n      </PageHeader>\n      <FlexMain>{renderContent()}</FlexMain>\n      {data.length > 0 && !(itemsIsLoading || deleteLoading) && (\n        <Footer>\n          <Pagination\n            count={total_count}\n            params={{\n              limit: parseInt(queryParams.limit),\n              offset: parseInt(queryParams.offset),\n            }}\n            qsConfig={qsConfig}\n            setPagination={setFromPagination}\n            variant={PaginationVariant.bottom}\n          />\n        </Footer>\n      )}\n      {deletionError && (\n        <AlertModal\n          aria-label={'Deletion error'}\n          isOpen={deletionError}\n          onClose={clearDeletionError}\n          title={'Error'}\n          variant=\"error\"\n        >\n          {'Failed to delete one or more plans.'}\n          <ErrorDetail error={deletionError.detail} />\n        </AlertModal>\n      )}\n    </PageContainer>\n  );\n};\n\nexport default List;\n","import { useState } from 'react';\n\n/**\n * useSelected hook provides a way to read and update a selected list\n * Param: array of list items\n * Returns: {\n *  selected: array of selected list items\n *  isAllSelected: boolean that indicates if all items are selected\n *  handleSelect: function that adds and removes items from selected list\n *  setSelected: setter function\n * }\n */\n\nexport default function useSelected(list = []) {\n  const [selected, setSelected] = useState([]);\n  const isAllSelected = selected.length > 0 && selected.length === list.length;\n\n  const handleSelect = (row) => {\n    if (selected.some((s) => s.id === row.id)) {\n      setSelected((prevState) => [...prevState.filter((i) => i.id !== row.id)]);\n    } else {\n      setSelected((prevState) => [...prevState, row]);\n    }\n  };\n  return { selected, isAllSelected, handleSelect, setSelected };\n}\n","export const actions = {\n  SET_NAME: 'SET_NAME',\n  SET_CATEGORY: 'SET_CATEGORY',\n  SET_DESCRIPTION: 'SET_DESCRIPTION',\n  SET_MANUAL_TIME: 'SET_MANUAL_TIME',\n  SET_HOSTS: 'SET_HOSTS',\n  SET_FREQUENCY_PERIOD: 'SET_FREQUENCY_PERIOD',\n  SET_TASKS: 'SET_TASKS',\n  SET_TEMPLATE_ID: 'SET_TEMPLATE_ID',\n};\n","import { useReducer } from 'react';\n\nimport { actions } from './constants';\n\nconst formatPayload = (data) => {\n  data.tasks = data.tasks.map((task, index) => ({\n    task,\n    task_order: index + 1,\n  }));\n\n  if (!data.hosts || data.hosts === '') {\n    data.hosts = 1;\n  }\n\n  // these two are fields the api expects but we don't\n  // have form elements for in the MVP.\n  data.hourly_rate = 50;\n  data.frequency_per_period = 1;\n\n  return data;\n};\n\nconst convertTasks = (tasks = []) => {\n  if (tasks?.length) {\n    return tasks\n      .sort((a, b) => a.task_order - b.task_order)\n      .map(({ task }) => task);\n  }\n  return undefined;\n};\n\nconst usePlanData = (initial) => {\n  const formReducer = (state, { type, value }) => {\n    switch (type) {\n      /* v1 api reducers */\n      case actions.SET_NAME:\n        return {\n          ...state,\n          name: value,\n        };\n      case actions.SET_CATEGORY:\n        return {\n          ...state,\n          category: value,\n        };\n      case actions.SET_DESCRIPTION:\n        return {\n          ...state,\n          description: value,\n        };\n      case actions.SET_MANUAL_TIME:\n        return {\n          ...state,\n          manual_time: value,\n        };\n\n      case actions.SET_HOSTS:\n        return {\n          ...state,\n          hosts: value,\n        };\n      case actions.SET_FREQUENCY_PERIOD:\n        return {\n          ...state,\n          frequency_period: value,\n        };\n      case actions.SET_TASKS:\n        return {\n          ...state,\n          tasks: value,\n        };\n      case actions.SET_TEMPLATE_ID:\n        return {\n          ...state,\n          template_id: value,\n        };\n      default:\n        throw new Error(\n          `usePlanData reducer action type ${type} was not found.`\n        );\n    }\n  };\n\n  const [formData, dispatch] = useReducer(formReducer, {\n    name: initial?.name || '',\n    category: initial?.category || 'system',\n    description: initial?.description || '',\n    manual_time: initial?.manual_time || 240,\n    hosts: initial?.hosts || 1,\n    frequency_period: initial?.frequency_period || 'weekly',\n    tasks: convertTasks(initial?.tasks) || [],\n    template_id: initial?.template_id || -2,\n  });\n\n  return {\n    formData,\n    requestPayload: formatPayload({ ...formData }),\n    dispatch,\n  };\n};\n\nexport default usePlanData;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Form,\n  FormGroup,\n  Grid,\n  Select,\n  SelectOption,\n  TextInput,\n  NumberInput,\n} from '@patternfly/react-core';\n\nimport { actions } from '../../../constants';\n\nimport { isPositiveNum } from '../../../../../../Utilities/helpers';\n\nconst Details = ({ options, formData, dispatch }) => {\n  const { name, category, description, manual_time, hosts, frequency_period } =\n    formData;\n\n  const [categoryIsOpen, setCategoryIsOpen] = useState(false);\n  const [manualTimeIsOpen, setManualTimeIsOpen] = useState(false);\n  const [frequencyPeriodIsOpen, setFrequencyPeriodIsOpen] = useState(false);\n\n  return (\n    <Form>\n      {options?.data && (\n        <Grid hasGutter md={6}>\n          <FormGroup\n            label=\"What do you want to automate?\"\n            isRequired\n            fieldId=\"name-field\"\n          >\n            <TextInput\n              isRequired\n              placeholder=\"Example: Provision NGINX server\"\n              type=\"text\"\n              id=\"name-field\"\n              name=\"name\"\n              value={name}\n              onChange={(newName) =>\n                dispatch({\n                  type: actions.SET_NAME,\n                  value: newName,\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup label=\"What type of task is it?\" fieldId=\"category-field\">\n            <Select\n              id=\"category-field\"\n              isOpen={categoryIsOpen}\n              variant={'single'}\n              aria-label={'Plan category selector'}\n              maxHeight={390}\n              onToggle={() => setCategoryIsOpen(!categoryIsOpen)}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_CATEGORY,\n                  value: selection,\n                });\n                setCategoryIsOpen(false);\n              }}\n              selections={category}\n            >\n              {(options.data?.category || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n          <FormGroup\n            label=\"Enter a description of your automation plan\"\n            fieldId=\"description-field\"\n          >\n            <TextInput\n              type=\"text\"\n              placeholder=\"Place description here\"\n              id=\"description-field\"\n              name=\"description\"\n              value={description}\n              onChange={(newDescription) =>\n                dispatch({\n                  type: actions.SET_DESCRIPTION,\n                  value: newDescription,\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"How long does it take to do this manually?\"\n            fieldId=\"manual-time-field\"\n          >\n            <Select\n              id=\"manual-time-field\"\n              isOpen={manualTimeIsOpen}\n              variant={'single'}\n              placeholderText=\"Select amount\"\n              aria-label={'Plan time selector'}\n              onToggle={() => setManualTimeIsOpen(!manualTimeIsOpen)}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_MANUAL_TIME,\n                  value: selection,\n                });\n                setManualTimeIsOpen(false);\n              }}\n              selections={manual_time}\n            >\n              {(options.data?.manual_time || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n          <FormGroup\n            label=\"How many hosts do you plan to run this on?\"\n            fieldId=\"hosts-field\"\n          >\n            <NumberInput\n              inputAriaLabel=\"Number of hosts\"\n              widthChars={8}\n              onChange={(event) => {\n                if (\n                  isPositiveNum(event.target.value) ||\n                  event.target.value.length === 0\n                ) {\n                  dispatch({\n                    type: actions.SET_HOSTS,\n                    value: parseInt(event.target.value),\n                  });\n                }\n              }}\n              onMinus={() =>\n                dispatch({\n                  type: actions.SET_HOSTS,\n                  value: isPositiveNum(hosts) ? hosts - 1 : 0,\n                })\n              }\n              onPlus={() =>\n                dispatch({\n                  type: actions.SET_HOSTS,\n                  value: isPositiveNum(hosts) ? hosts + 1 : 1,\n                })\n              }\n              id=\"hosts-field\"\n              name=\"hosts\"\n              value={hosts}\n              min={0}\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"How often do you do this?\"\n            fieldId=\"frequency-period-field\"\n          >\n            <Select\n              id=\"frequency-period-field\"\n              isOpen={frequencyPeriodIsOpen}\n              variant={'single'}\n              placeholderText=\"Select frequency period\"\n              aria-label={'Plan frequency period selector'}\n              onToggle={() => {\n                setFrequencyPeriodIsOpen(!frequencyPeriodIsOpen);\n              }}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_FREQUENCY_PERIOD,\n                  value: selection,\n                });\n                setFrequencyPeriodIsOpen(false);\n              }}\n              selections={frequency_period}\n            >\n              {(options.data?.frequency_period || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n        </Grid>\n      )}\n    </Form>\n  );\n};\n\nDetails.propTypes = {\n  options: PropTypes.object.isRequired,\n  formData: PropTypes.object.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Details;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  DataList,\n  DataListAction,\n  DataListItem,\n  DataListCell,\n  DataListItemRow,\n  DataListControl,\n  DataListDragButton,\n  DataListItemCells,\n  Form,\n  FormGroup,\n  Grid,\n  InputGroup,\n  TextInput,\n  Title,\n} from '@patternfly/react-core';\nimport { PlusIcon, TimesIcon } from '@patternfly/react-icons';\n\nimport { actions } from '../../../constants';\n\nconst TaskSection = styled.div`\n  margin-top: 20px;\n`;\n\nconst TaskTitle = styled(Title)`\n  margin-bottom: 10px;\n`;\n\nconst TaskDeleteButton = styled(Button)`\n  padding: 0 16px;\n`;\n\nconst DeleteTaskActionSection = styled(DataListAction)`\n  padding: 6px 0;\n`;\n\nconst TaskRow = styled(DataListItemRow)`\n  align-items: center;\n`;\n\nconst Tasks = ({ tasks, dispatch }) => {\n  const setTasks = (val) => {\n    dispatch({ type: actions.SET_TASKS, value: val });\n  };\n\n  const [taskToAdd, setTaskToAdd] = useState('');\n\n  const [liveText, setLiveText] = useState('');\n  const [id, setId] = useState('');\n\n  const onDragStart = (newId) => {\n    setId(newId);\n    setLiveText(`Dragging started for task ${newId}.`);\n  };\n\n  const onDragMove = (oldIndex, newIndex) => {\n    setLiveText(\n      `Dragging task ${id}.  Task ${oldIndex} is now task ${newIndex}.`\n    );\n  };\n\n  const onDragCancel = () => {\n    setLiveText('Dragging cancelled. Tasks list order is unchanged.');\n  };\n\n  const onDragFinish = (newItemOrder) => {\n    setLiveText('Dragging finished');\n    setTasks(newItemOrder.map((val) => val.split('-').slice(0, -1).join('-')));\n  };\n\n  const appendTask = () => {\n    const trimmedTask = taskToAdd.trim();\n    if (trimmedTask !== '') {\n      setTasks([...tasks, trimmedTask]);\n      setTaskToAdd('');\n    }\n  };\n\n  const handleTextKeyDown = (e) => {\n    if (e.key && e.key === 'Enter') {\n      e.preventDefault();\n      appendTask();\n    }\n  };\n\n  const removeTask = (index) => {\n    setTasks(tasks.filter((t, idx) => idx !== index));\n  };\n\n  return (\n    <>\n      <Form>\n        <Grid hasGutter md={6}>\n          <FormGroup\n            label=\"What tasks do you need to accomplish this plan?\"\n            fieldId=\"task-field\"\n          >\n            <InputGroup>\n              <TextInput\n                placeholder=\"Enter a description of each task\"\n                type=\"text\"\n                id=\"task-field\"\n                name=\"task\"\n                value={taskToAdd}\n                onChange={(newTaskName) => setTaskToAdd(newTaskName)}\n                onKeyDown={handleTextKeyDown}\n              />\n              <Button\n                onClick={appendTask}\n                isDisabled={taskToAdd.trim() === ''}\n                variant=\"control\"\n                aria-label=\"Add task\"\n              >\n                <PlusIcon />\n              </Button>\n            </InputGroup>\n          </FormGroup>\n        </Grid>\n      </Form>\n      {tasks.length > 0 && (\n        <TaskSection>\n          <TaskTitle headingLevel=\"h4\" size=\"xl\">\n            Tasks\n          </TaskTitle>\n          <DataList\n            aria-label=\"Draggable list to reorder and remove tasks.\"\n            isCompact\n            onDragFinish={onDragFinish}\n            onDragStart={onDragStart}\n            onDragMove={onDragMove}\n            onDragCancel={onDragCancel}\n            itemOrder={tasks.map((val, idx) => `${val}-${idx}`)}\n          >\n            {tasks.map((task, index) => (\n              <DataListItem\n                aria-labelledby={`cell-${index + 1}`}\n                id={`${task}-${index}`}\n                key={index + 1}\n              >\n                <TaskRow>\n                  <DataListControl>\n                    <DataListDragButton\n                      aria-label=\"Reorder\"\n                      aria-labelledby={`cell-${index + 1}`}\n                      aria-describedby=\"Press space or enter to begin dragging, and use the arrow keys to navigate up or down. Press enter to confirm the drag, or any other key to cancel the drag operation.\"\n                      aria-pressed=\"false\"\n                    />\n                  </DataListControl>\n                  <DataListItemCells\n                    dataListCells={[\n                      <DataListCell key={index + 1}>\n                        <span id={`cell-${index + 1}`}>{`${\n                          index + 1\n                        }. ${task}`}</span>\n                      </DataListCell>,\n                    ]}\n                  />\n                  <DeleteTaskActionSection aria-label=\"Actions\">\n                    <TaskDeleteButton\n                      onClick={() => removeTask(index)}\n                      variant=\"plain\"\n                      aria-label=\"Delete\"\n                    >\n                      <TimesIcon />\n                    </TaskDeleteButton>\n                  </DeleteTaskActionSection>\n                </TaskRow>\n              </DataListItem>\n            ))}\n          </DataList>\n        </TaskSection>\n      )}\n      <div className=\"pf-screen-reader\" aria-live=\"assertive\">\n        {liveText}\n      </div>\n    </>\n  );\n};\n\nTasks.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Tasks;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { parse, stringify } from 'query-string';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport {\n  Button,\n  Form,\n  FormGroup,\n  PaginationVariant,\n} from '@patternfly/react-core';\nimport {\n  TableComposable,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n} from '@patternfly/react-table';\n\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nimport LoadingState from '../../../../../../Components/LoadingState';\nimport EmptyState from '../../../../../../Components/EmptyState';\nimport NoResults from '../../../../../../Components/NoResults';\nimport ApiErrorState from '../../../../../../Components/ApiErrorState';\nimport Pagination from '../../../../../../Components/Pagination';\n\nimport { notAuthorizedParams } from '../../../../../../Utilities/constants';\nimport { useQueryParams } from '../../../../../../Utilities/useQueryParams';\nimport { getQSConfig } from '../../../../../../Utilities/qs';\n\nimport {\n  preflightRequest,\n  readJobExplorer,\n  readJobExplorerOptions,\n} from '../../../../../../Api/';\n\nimport FilterableToolbar from '../../../../../../Components/Toolbar/';\n\nimport { actions } from '../../../constants';\nimport useRequest from '../../../../../../Utilities/useRequest';\n\nconst ListFooter = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst initialQueryParams = {\n  group_by: 'template',\n  limit: 10,\n  group_by_time: false,\n  offset: 0,\n  sort_options: 'name',\n  sort_order: 'asc',\n  sort_by: 'name:asc',\n};\nconst qsConfig = getQSConfig('job-explorer', { ...initialQueryParams }, [\n  'limit',\n  'offset',\n]);\n\nconst Templates = ({ template_id, dispatch: formDispatch }) => {\n  const { pathname, hash, search } = useLocation();\n  const history = useHistory();\n  const {\n    queryParams,\n    setFromPagination,\n    setFromToolbar,\n    dispatch: queryParamsDispatch,\n  } = useQueryParams(qsConfig);\n\n  const [preflightError, setPreFlightError] = useState(null);\n\n  const {\n    result: { options },\n    error,\n    isSuccess,\n    request: fetchOptions,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await readJobExplorerOptions({ params: queryParams });\n      return { options: response };\n    }, [queryParams]),\n    { options: {} }\n  );\n\n  const {\n    result: { templates, count },\n    error: templatesIsError,\n    isLoading: templatesIsLoading,\n    isSuccess: templatesIsSuccess,\n    request: fetchEndpoints,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await readJobExplorer({ params: queryParams });\n      return {\n        templates: response.items,\n        count: response.meta.count,\n      };\n    }, [queryParams]),\n    {\n      templates: [],\n      count: 0,\n      templatesIsError,\n      templatesIsLoading,\n      templatesIsSuccess,\n    }\n  );\n\n  const onSort = (_ev, _idx, dir) => {\n    queryParamsDispatch({\n      type: 'SET_SORT_ORDER',\n      value: { sort_order: dir },\n    });\n  };\n\n  const sortParams = {\n    sort: {\n      sortBy: {\n        direction: queryParams.sort_order,\n      },\n      onSort,\n    },\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'savings-planner', secondaryNav: true });\n\n    preflightRequest().catch((error) => {\n      setPreFlightError({ preflightError: error });\n    });\n  }, []);\n\n  const initialSearchParams = parse(search, {\n    arrayFormat: 'bracket',\n    parseBooleans: true,\n    parseNumbers: true,\n  });\n\n  useEffect(() => {\n    history.replace({\n      pathname,\n      hash,\n      search: stringify(\n        { ...initialQueryParams, ...initialSearchParams },\n        { arrayFormat: 'bracket' }\n      ),\n    });\n  }, []);\n\n  useEffect(() => {\n    fetchOptions();\n    fetchEndpoints();\n  }, [queryParams]);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n  return (\n    <>\n      {preflightError && <EmptyState {...preflightError} />}\n\n      {isSuccess && (\n        <Form>\n          <FormGroup\n            label=\"Link a template to this plan:\"\n            fieldId=\"template-link-field\"\n          >\n            <FilterableToolbar\n              hideQuickDateRange\n              hideSortOptions\n              categories={options}\n              filters={queryParams}\n              qsConfig={qsConfig}\n              setFilters={setFromToolbar}\n              pagination={\n                <Pagination\n                  count={count}\n                  params={{\n                    limit: queryParams.limit,\n                    offset: queryParams.offset,\n                  }}\n                  qsConfig={qsConfig}\n                  setPagination={setFromPagination}\n                  isCompact\n                />\n              }\n            />\n            {error && <ApiErrorState message={error.error} />}\n            {templatesIsLoading && <LoadingState />}\n            {templatesIsSuccess && templates.length <= 0 && <NoResults />}\n            {templatesIsSuccess && templates.length > 0 && (\n              <TableComposable\n                aria-label=\"Template link table\"\n                variant=\"compact\"\n              >\n                <Thead>\n                  <Tr>\n                    <Th />\n                    <Th {...sortParams}>Name</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {templates.map(({ id, name }) => (\n                    <Tr key={`template-detail-${id}`}>\n                      <Td\n                        data-testid={`radio-${id}`}\n                        key={`template-detail-${id}-radio-td`}\n                        select={{\n                          rowIndex: id,\n                          onSelect: (event, isSelected, value) =>\n                            formDispatch({\n                              type: actions.SET_TEMPLATE_ID,\n                              value,\n                            }),\n                          isSelected: template_id === id,\n                          variant: 'radio',\n                        }}\n                      />\n                      <Td>{name}</Td>\n                    </Tr>\n                  ))}\n                </Tbody>\n              </TableComposable>\n            )}\n            <ListFooter>\n              <div>\n                {template_id !== -2 && (\n                  <Button\n                    key=\"clear-selection-button\"\n                    variant=\"link\"\n                    aria-label=\"Clear selection\"\n                    onClick={() => {\n                      formDispatch({\n                        type: actions.SET_TEMPLATE_ID,\n                        value: -2,\n                      });\n                    }}\n                  >\n                    Clear selection\n                  </Button>\n                )}\n              </div>\n              <Pagination\n                count={count}\n                params={{\n                  limit: queryParams.limit,\n                  offset: queryParams.offset,\n                }}\n                qsConfig={qsConfig}\n                setPagination={setFromPagination}\n                variant={PaginationVariant.bottom}\n              />\n            </ListFooter>\n          </FormGroup>\n        </Form>\n      )}\n    </>\n  );\n};\n\nTemplates.propTypes = {\n  template_id: PropTypes.number.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Templates;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory, useLocation, Redirect } from 'react-router-dom';\n\nimport {\n  Button,\n  Tooltip,\n  Wizard,\n  WizardFooter,\n  WizardContextConsumer,\n} from '@patternfly/react-core';\n\nimport { Paths } from '../../../../paths';\nimport useRequest from '../../../../Utilities/useRequest';\nimport usePlanData from '../usePlanData';\n\nimport { createPlan, updatePlan } from '../../../../Api/';\n\nimport AlertModal from '../../../../Components/AlertModal/AlertModal';\nimport ErrorDetail from '../../../../Components/ErrorDetail/ErrorDetail';\n\nimport Details from './Steps/Details';\nimport Tasks from './Steps/Tasks';\nimport Templates from './Steps/Templates';\n\nconst Form = ({ title, options, data = {} }) => {\n  const history = useHistory();\n  const { hash, pathname } = useLocation();\n  const [startStep, setStartStep] = useState(null);\n\n  const {\n    result: { data: apiResponse },\n    error,\n    request: setData,\n  } = useRequest(\n    useCallback(async (requestPayload, id) => {\n      if (typeof requestPayload !== 'undefined') {\n        if (id) {\n          data = await updatePlan({\n            id: id,\n            params: requestPayload,\n          });\n        } else {\n          data = await createPlan({\n            params: requestPayload,\n          });\n        }\n      }\n      return {\n        data,\n      };\n    }, []),\n    {\n      apiResponse: data,\n    }\n  );\n\n  const { formData, requestPayload, dispatch } = usePlanData(data);\n\n  const steps = [\n    {\n      step_number: 1,\n      id: 'details',\n      name: 'Details',\n      component: (\n        <Details options={options} formData={formData} dispatch={dispatch} />\n      ),\n    },\n    {\n      step_number: 2,\n      id: 'tasks',\n      name: 'Tasks',\n      component: <Tasks tasks={formData.tasks} dispatch={dispatch} />,\n    },\n    {\n      step_number: 3,\n      id: 'link_template',\n      name: 'Link template',\n      component: (\n        <Templates template_id={formData.template_id} dispatch={dispatch} />\n      ),\n      nextButtonText: 'Save',\n    },\n  ];\n\n  const CustomFooter = (\n    <WizardFooter>\n      <WizardContextConsumer>\n        {({ activeStep, onNext, onBack, onClose }) => {\n          if (activeStep.step_number !== 3) {\n            return (\n              <>\n                <Button variant=\"primary\" type=\"submit\" onClick={onNext}>\n                  Next\n                </Button>\n                {activeStep.step_number !== 1 && (\n                  <Button variant=\"secondary\" onClick={onBack}>\n                    Back\n                  </Button>\n                )}\n                <Button variant=\"link\" onClick={onClose}>\n                  Cancel\n                </Button>\n              </>\n            );\n          }\n          // Final step buttons\n          return (\n            <>\n              <Tooltip\n                content={\n                  !formData.name || !formData.name === ''\n                    ? 'In order to save this plan, you must enter a name in the details step'\n                    : 'Save this plan'\n                }\n                position=\"top\"\n              >\n                <div>\n                  <Button\n                    variant=\"primary\"\n                    type=\"submit\"\n                    onClick={onSave}\n                    isDisabled={!formData.name || !formData.name === ''}\n                  >\n                    Save\n                  </Button>\n                </div>\n              </Tooltip>\n              <Button variant=\"secondary\" onClick={onBack}>\n                Back\n              </Button>\n              <Button variant=\"link\" onClick={onClose}>\n                Cancel\n              </Button>\n            </>\n          );\n        }}\n      </WizardContextConsumer>\n    </WizardFooter>\n  );\n\n  useEffect(() => {\n    if (pathname.indexOf('/add') === -1 && hash) {\n      setStartStep(steps.find((step) => `#${step.id}` === hash).step_number);\n    } else {\n      history.replace({\n        hash: 'details',\n      });\n      setStartStep(1);\n    }\n  }, []);\n\n  const onStepChange = (newStep) => {\n    history.replace({\n      hash: newStep.id,\n    });\n  };\n\n  const onSave = () => {\n    setData(requestPayload, data?.id);\n  };\n\n  const onClose = () => {\n    if (location.pathname.indexOf('/edit') !== -1) {\n      history.push({\n        pathname: `${Paths.savingsPlanner}/${data?.id}`,\n      });\n    } else {\n      history.push({\n        pathname: Paths.savingsPlanner,\n      });\n    }\n  };\n\n  const reset = () => {\n    setData();\n  };\n\n  return (\n    <>\n      {!error && apiResponse?.plan_created && (\n        <Redirect\n          to={{\n            pathname: `${Paths.savingsPlanner}/${\n              apiResponse.id || apiResponse.plan_created.id\n            }`,\n            state: { reload: true },\n          }}\n        />\n      )}\n      {startStep && (\n        <Wizard\n          navAriaLabel={`${title} steps`}\n          mainAriaLabel={`${title} content`}\n          steps={steps}\n          onGoToStep={onStepChange}\n          onNext={onStepChange}\n          onBack={onStepChange}\n          onSave={onSave}\n          onClose={onClose}\n          footer={CustomFooter}\n          startAtStep={startStep}\n          height=\"calc(100vh - 240px)\"\n        />\n      )}\n      {error && (\n        <AlertModal\n          isOpen={!!error}\n          onClose={() => reset()}\n          title={'Error'}\n          variant=\"error\"\n        >\n          {'There was an error saving the plan.'}\n          <ErrorDetail error={error.detail} />\n        </AlertModal>\n      )}\n    </>\n  );\n};\n\nForm.propTypes = {\n  title: PropTypes.string.isRequired,\n  options: PropTypes.object.isRequired,\n  data: PropTypes.object,\n};\n\nForm.defaultProps = {\n  data: {},\n};\n\nexport default Form;\n","export const jobExplorer = {\n  attributes: [\n    'id',\n    'status',\n    'job_type',\n    'started',\n    'finished',\n    'elapsed',\n    'created',\n    'cluster_name',\n    'org_name',\n    'most_failed_tasks',\n  ],\n  defaultParams: {\n    status: ['successful', 'failed'],\n    quick_date_range: 'last_30_days',\n    job_type: ['workflowjob', 'job'],\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    sort_by: 'created:desc',\n    sort_options: 'created',\n    sort_order: 'desc',\n    only_root_workflows_and_standalone_jobs: false,\n    limit: 5,\n    offset: 0,\n  },\n};\n\nexport const roi = {\n  defaultParams: {\n    status: ['successful'],\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    quick_date_range: 'roi_last_year',\n    job_type: ['job'],\n    sort_options: 'template_productivity_score',\n    sort_order: 'desc',\n    start_date: null,\n    end_date: null,\n    limit: 25,\n    only_root_workflows_and_standalone_jobs: true,\n    attributes: [\n      'successful_hosts_total',\n      'successful_elapsed_total',\n      'total_org_count',\n      'total_cluster_count',\n    ],\n    group_by: 'template',\n    group_by_time: false,\n  },\n};\n\nexport const organizationStatistics = {\n  defaultParams: {\n    status: [],\n    org_id: [],\n    quick_date_range: 'last_30_days',\n    limit: 5,\n    offset: 0,\n    job_type: ['workflowjob', 'job'],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    start_date: null,\n    end_date: null,\n  },\n};\n\nexport const clusters = {\n  defaultParams: {\n    status: ['successful', 'failed'],\n    quick_date_range: 'last_30_days',\n    job_type: ['workflowjob', 'job'],\n    group_by_time: true,\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    only_root_workflows_and_standalone_jobs: false,\n  },\n};\n\nexport const savingsPlanner = {\n  defaultParams: {\n    template_id: [],\n    inventory_id: [],\n    automation_status: [],\n    category: [],\n    frequency_period: [],\n    name: '',\n    limit: 10,\n    offset: 0,\n    sort_options: 'modified',\n    sort_order: 'desc',\n    sort_by: 'modified:desc',\n  },\n};\n\nexport const notAuthorizedParams = {\n  title: 'RBAC Access Denied',\n  description:\n    'User does not have privileges to perform this action. Contact your organization adminstrator(s) for more information.',\n};\n\nexport const arrayFields = [\n  'automation_status',\n  'attributes',\n  'cluster_id',\n  'category',\n  'frequency_period',\n  'host_id',\n  'host_status',\n  'inventory_id',\n  'job_type',\n  'status',\n  'org_id',\n  'template_id',\n];\n","export async function getRelatedResourceDeleteCounts(requests) {\n  const results = {};\n  let error = null;\n  let hasCount = false;\n\n  try {\n    await Promise.all(\n      requests.map(async ({ request, label }) => {\n        const {\n          items: { count },\n        } = await request();\n        if (count > 0) {\n          results[label] = count;\n          hasCount = true;\n        }\n      })\n    );\n  } catch (err) {\n    error = err;\n  }\n\n  return {\n    results: hasCount && results,\n    error,\n  };\n}\n\nexport const relatedResourceDeleteRequests = {\n  savingsPlan: (selected, readRecordApi) => [\n    {\n      request: async () =>\n        readRecordApi({\n          params: { id: [selected.id] },\n        }),\n      label: 'Plan',\n    },\n  ],\n};\n","import moment from 'moment';\n\n/*\n * isNumeric - return true if input is a real number\n */\nexport function isNumeric(val) {\n  if (val === 0 || val === '0') {\n    return true;\n  }\n\n  if (parseInt(val)) {\n    return true;\n  }\n\n  if (parseFloat(val)) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function isPositiveNum(val) {\n  return /^\\d+$/.test(val);\n}\n\nexport function trimStr(str) {\n  return str.toString().replace(/['\"]+/g, '');\n}\n\nexport function formatDateTime(dateTime) {\n  return moment(new Date(dateTime).toISOString()).format('M/D/YYYY h:mm:ssa');\n}\n\nexport function formatDate(date) {\n  return moment(date).format('YYYY-MM-DD');\n}\n\nexport function formatSeconds(seconds) {\n  return moment().startOf('day').seconds(seconds).format('H:mm:ss');\n}\n\nexport function getTotal(data) {\n  if (!data) {\n    return;\n  } else {\n    let total = 0;\n    data.forEach((datum) => {\n      total += parseInt(datum.count);\n    });\n    return total;\n  }\n}\n\nexport function formatPercentage(val) {\n  if (isNaN(val)) {\n    return;\n  }\n\n  return `${val}%`;\n}\n\nexport const capitalize = (s) => {\n  if (typeof s !== 'string') {\n    return '';\n  }\n\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport function calculateDelta(a, b) {\n  if (!isNumeric(a) || !isNumeric(b)) {\n    return 0;\n  }\n\n  // never return less than zero ...\n  if (b - a < 0) {\n    return 0;\n  }\n\n  return b - a;\n}\n\nexport function convertMinsToMs(mins) {\n  if (!parseInt(mins)) {\n    return 0;\n  }\n\n  return mins * 60000;\n}\n\nexport function convertMsToMins(ms) {\n  if (!parseInt(ms)) {\n    return 0;\n  }\n\n  return ms / 60000;\n}\n\nexport function convertSecondsToMins(seconds) {\n  if (!parseInt(seconds)) {\n    return 0;\n  }\n\n  return seconds / 60;\n}\n\nexport function convertMinsToSeconds(mins) {\n  if (!parseInt(mins) || parseInt(mins) < 0) {\n    return 0;\n  }\n\n  return +parseInt(mins) * 60;\n}\n\nexport function convertSecondsToHours(seconds) {\n  if (!parseInt(seconds)) {\n    return 0;\n  }\n\n  return seconds / 3600;\n}\n\nexport function convertWithCommas(arr, key) {\n  const split = arr.reduce((strs, datum) => {\n    strs.push(datum[key]);\n    return strs;\n  }, []);\n  return split.join(', ');\n}\n\nexport function formatJobType(type) {\n  return type === 'job' ? 'Playbook run' : 'Workflow job';\n}\n\nexport function formatJobStatus(status) {\n  return status === 'successful' ? 'Success' : 'Failed';\n}\n\nexport function formatJobDetailsURL(baseURL, jobId) {\n  const subDirectory1 = 'job';\n  const subDirectory2 = 'details';\n  return `${baseURL}/#/${subDirectory1}/${jobId}/${subDirectory2}/`;\n}\n","/**\n * Returns queryset config with defaults, if needed\n * @param {string} namespace for appending to url querystring\n * @param {object} default params that are not handled with search (offset, limit and order_by)\n * @param {array} params that are number fields\n * @return {object} query param object\n */\nimport { arrayFields } from './constants';\n\nexport function getQSConfig(\n  namespace,\n  defaultParams = { offset: 1, limit: 5, sort_by: 'name' },\n  integerFields = ['offset', 'limit'],\n  dateFields = ['modified', 'created']\n) {\n  if (!namespace) {\n    throw new Error('a QS namespace is required');\n  }\n  // if order_by isn't passed, default to name\n  // if (!defaultParams.sort_by) {\n  //   defaultParams.sort_by = 'name:desc';\n  // }\n  return {\n    namespace,\n    defaultParams,\n    integerFields,\n    dateFields,\n  };\n}\n\n/**\n * Convert url query string to query param object\n * @param {object} qs config object (used for getting defaults, current query params etc.)\n * @param {string} url query string\n * @return {object} query param object\n */\nexport function parseQueryString(config, queryString) {\n  if (!queryString) {\n    return config.defaultParams || {};\n  }\n  const params = stringToObject(config, queryString);\n  return addDefaultsToObject(config, params);\n}\n\nfunction stringToObject(config, qs) {\n  const params = {};\n  qs.replace(/^\\?/, '')\n    .split('&')\n    .map((s) => s.split('='))\n    .forEach(([nsKey, rawValue]) => {\n      if (!nsKey || !namespaceMatches(config.namespace, nsKey)) {\n        return;\n      }\n      const key = config.namespace\n        ? decodeURIComponent(nsKey.substr(config.namespace.length + 1))\n        : decodeURIComponent(nsKey);\n      const value = parseValue(config, key, rawValue, qs);\n      params[key] = mergeParam(params[key], value);\n    });\n  return params;\n}\nexport { stringToObject as _stringToObject };\n\n/**\n * helper function to check the namespace of a param is what you expect\n * @param {string} namespace to append to params\n * @param {object} params object to append namespace to\n * @return {object} params object with namespaced keys\n */\nconst namespaceMatches = (namespace, fieldname) => {\n  if (!namespace) return !fieldname.includes('.');\n\n  return fieldname.startsWith(`${namespace}.`);\n};\n\nfunction parseValue(config, key, rawValue, qs) {\n  const searchParams = new URLSearchParams(qs);\n  if (config.integerFields && config.integerFields.some((v) => v === key)) {\n    return parseInt(rawValue, 10);\n  } else if (arrayFields && arrayFields.some((v) => v === key)) {\n    const nsKey = `${config.namespace}.${key}`;\n    const output = searchParams\n      .getAll(nsKey)\n      .filter((x, i, a) => a.indexOf(x) === i);\n    searchParams.delete[nsKey];\n    return output;\n  }\n  // TODO: parse dateFields into date format?\n  return decodeURIComponent(rawValue);\n}\n\nfunction addDefaultsToObject(config, params) {\n  return {\n    ...config.defaultParams,\n    ...params,\n  };\n}\nexport { addDefaultsToObject as _addDefaultsToObject };\n\n/**\n * Convert query param object to url query string\n * Used to encode params for interacting with the api\n * @param {object} query param object\n * @return {string} url query string\n */\nexport const encodeQueryString = (params) => {\n  if (!params) return '';\n\n  return Object.keys(params)\n    .sort()\n    .filter((key) => params[key] !== null)\n    .map((key) => [key, params[key]])\n    .map(([key, value]) => encodeValue(key, value))\n    .join('&');\n};\n\nfunction encodeValue(key, value) {\n  if (Array.isArray(value)) {\n    return value\n      .map((val) => `${encodeURIComponent(key)}=${encodeURIComponent(val)}`)\n      .join('&');\n  }\n  return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n}\n\n/**\n * Convert query param object to url query string, adding namespace and\n * removing defaults. Used to put into url bar after ui route\n * @param {object} qs config object for namespacing params, filtering defaults\n * @param {object} query param object\n * @param {object} any non-namespaced params to append\n * @return {string} url query string\n */\nexport const encodeNonDefaultQueryString = (\n  config,\n  params,\n  nonNamespacedParams = {}\n) => {\n  if (!params) return '';\n  const paramsWithoutDefaults = removeParams({}, params, config.defaultParams);\n  return encodeQueryString({\n    ...namespaceParams(config.namespace, paramsWithoutDefaults),\n    ...nonNamespacedParams,\n  });\n};\n\n/**\n * helper function to namespace params object\n * @param {string} namespace to append to params\n * @param {object} params object to append namespace to\n * @return {object} params object with namespaced keys\n */\nconst namespaceParams = (namespace, params) => {\n  if (!namespace) return params;\n\n  const namespaced = {};\n  Object.keys(params).forEach((key) => {\n    namespaced[`${namespace}.${key}`] = params[key];\n  });\n\n  return namespaced;\n};\n\n/**\n * Removes params from the search string and returns the updated list of params\n * @param {object} qs config object (used for getting defaults, current query params etc.)\n * @param {object} object with params from existing search\n * @param {object} object with new params to remove\n * @return {object} query param object\n */\nexport function removeParams(config, oldParams, paramsToRemove) {\n  const updated = {\n    ...config.defaultParams,\n  };\n  Object.keys(oldParams).forEach((key) => {\n    const value = removeParam(oldParams[key], paramsToRemove[key]);\n    if (value !== null) {\n      updated[key] = value;\n    }\n  });\n  return updated;\n}\n\nfunction removeParam(oldVal, deleteVal) {\n  if (oldVal === deleteVal) {\n    return null;\n  }\n  if (Array.isArray(deleteVal)) {\n    return deleteVal.reduce(removeParam, oldVal);\n  }\n  if (Array.isArray(oldVal)) {\n    const index = oldVal.indexOf(deleteVal);\n    if (index > -1) {\n      oldVal.splice(index, 1);\n    }\n    if (oldVal.length === 1) {\n      return oldVal[0];\n    }\n  }\n  return oldVal;\n}\n\n/**\n * Merge old and new params together, joining values into arrays where necessary\n * @param {object} namespaced params object of old params\n * @param {object} namespaced params object of new params\n * @return {object} merged namespaced params object\n */\nexport function mergeParams(oldParams, newParams) {\n  const merged = {};\n  Object.keys(oldParams).forEach((key) => {\n    merged[key] = mergeParam(oldParams[key], newParams[key]);\n  });\n  Object.keys(newParams).forEach((key) => {\n    if (!merged[key]) {\n      merged[key] = newParams[key];\n    }\n  });\n  return merged;\n}\n\nfunction mergeParam(oldVal, newVal) {\n  if (!newVal && newVal !== '') {\n    return oldVal;\n  }\n  if (!oldVal && oldVal !== '') {\n    return newVal;\n  }\n  let merged;\n  if (Array.isArray(oldVal)) {\n    merged = oldVal.concat(newVal);\n  } else {\n    merged = [oldVal].concat(newVal);\n  }\n  return dedupeArray(merged);\n}\n\nfunction dedupeArray(arr) {\n  const deduped = [...new Set(arr)];\n  if (deduped.length === 1) {\n    return deduped[0];\n  }\n  return deduped;\n}\n\n/**\n * Join old and new params together, replacing old values with new ones where\n * necessary\n * @param {object} namespaced params object of old params\n * @param {object} namespaced params object of new params\n * @return {object} joined namespaced params object\n */\nexport function replaceParams(oldParams, newParams) {\n  return {\n    ...oldParams,\n    ...newParams,\n  };\n}\n","import { useReducer } from 'react';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\n\nimport { formatDate } from '../Utilities/helpers';\nimport { parseQueryString } from './qs';\n\nexport const useQueryParams = (initial) => {\n  const history = useHistory();\n\n  const initialParams = {\n    ...initial,\n    ...(initial.sort_options &&\n      initial.sort_order && {\n        sort_by: `${initial.sort_options}:${initial.sort_order}`,\n      }),\n  };\n\n  const initialWithCalculatedParams =\n    history !== 'undefined' && history?.location\n      ? parseQueryString(initialParams, history.location.search)\n      : initialParams;\n  const paramsReducer = (state, { type, value }) => {\n    switch (type) {\n      /* v0 api reducers */\n      case 'SET_STARTDATE':\n        return { ...state, startDate: value };\n      case 'SET_ENDDATE':\n        return { ...state, endDate: value };\n      case 'SET_ID':\n        if (!parseInt(value)) {\n          const { id: ignored, ...rest } = state;\n          return rest;\n        }\n\n        return { ...state, id: parseInt(value) };\n      case 'SET_SEVERITY':\n        if (value.severity === '') {\n          const { severity: ignored, ...rest } = state;\n          return rest;\n        }\n\n        return { ...state, ...value };\n\n      /* v1 api reducers */\n      case 'SET_LIMIT':\n        return isNaN(value)\n          ? { ...state, limit: 5 } // Defaults back to 5\n          : { ...state, limit: parseInt(value) };\n      case 'SET_OFFSET':\n        return isNaN(value)\n          ? { ...state, offset: 0 } // Defaults back to 0\n          : { ...state, offset: parseInt(value) };\n      case 'SET_ATTRIBUTES':\n      case 'SET_JOB_TYPE':\n      case 'SET_STATUS':\n      case 'SET_ORG':\n      case 'SET_CLUSTER':\n      case 'SET_TEMPLATE':\n      case 'SET_AUTOMATION_STATUS':\n      case 'SET_CATEGORY':\n      case 'SET_FREQUENCY':\n      case 'SET_NAME':\n      case 'SET_ROOT_WORKFLOWS_AND_JOBS':\n      case 'SET_INVENTORY':\n        return { ...state, ...value };\n      case 'SET_QUICK_DATE_RANGE': {\n        let newState = { ...state };\n        if (value !== 'custom') {\n          newState = { ...newState, start_date: null, end_date: null };\n        }\n\n        newState = { ...newState, ...value };\n        return newState;\n      }\n\n      case 'SET_START_DATE':\n      case 'SET_END_DATE': {\n        let newValues = {};\n        Object.entries(value).forEach(([key, value]) => {\n          newValues[key] = formatDate(value);\n        });\n        return { ...state, ...newValues };\n      }\n\n      case 'SET_SORT_OPTIONS': {\n        return {\n          ...state,\n          sort_options: value.sort_options,\n          ...(state.sort_order && {\n            sort_by: `${value.sort_options}:${state.sort_order}`,\n          }), // Update sort by\n        };\n      }\n\n      case 'SET_SORT_ORDER': {\n        return {\n          ...state,\n          sort_order: value.sort_order,\n          ...(state.sort_options && {\n            sort_by: `${state.sort_options}:${value.sort_order}`,\n          }), // Update sort by\n        };\n      }\n\n      case 'REINITIALIZE':\n        return { ...value };\n      case 'RESET_FILTER':\n        return { ...initialWithCalculatedParams };\n      default:\n        throw new Error(`The query params reducer action (${type}) not found.`);\n    }\n  };\n\n  const [queryParams, dispatch] = useReducer(paramsReducer, {\n    ...initialWithCalculatedParams,\n  });\n\n  const actionMapper = {\n    status: 'SET_STATUS',\n    quick_date_range: 'SET_QUICK_DATE_RANGE',\n    job_type: 'SET_JOB_TYPE',\n    org_id: 'SET_ORG',\n    cluster_id: 'SET_CLUSTER',\n    template_id: 'SET_TEMPLATE',\n    sort_order: 'SET_SORT_ORDER',\n    sort_options: `SET_SORT_OPTIONS`,\n    start_date: 'SET_START_DATE',\n    end_date: 'SET_END_DATE',\n    automation_status: 'SET_AUTOMATION_STATUS',\n    category: 'SET_CATEGORY',\n    frequency_period: 'SET_FREQUENCY',\n    name: 'SET_NAME',\n    only_root_workflows_and_standalone_jobs: 'SET_ROOT_WORKFLOWS_AND_JOBS',\n    inventory_id: 'SET_INVENTORY',\n  };\n\n  return {\n    queryParams,\n    dispatch,\n    setFromToolbar: (varName, value = null) => {\n      if (!varName) {\n        dispatch({ type: 'RESET_FILTER' });\n      } else {\n        dispatch({ type: actionMapper[varName], value: { [varName]: value } });\n      }\n    },\n    setFromPagination: (offset, limit = null) => {\n      dispatch({ type: 'SET_OFFSET', value: offset });\n      if (limit) {\n        dispatch({ type: 'SET_LIMIT', value: limit });\n      }\n    },\n    /* v0 api usage after this line */\n    setSeverity: (severity) =>\n      dispatch({ type: 'SET_SEVERITY', value: { severity } }),\n    setEndDate: () => {\n      const endDate = moment().format('YYYY-MM-DD');\n      dispatch({ type: 'SET_ENDDATE', value: endDate });\n    },\n    setId: (value) => dispatch({ type: 'SET_ID', value }),\n    setStartDate: (days) => {\n      let startDate;\n      if (days === 7) {\n        startDate = moment().subtract(1, 'week').format('YYYY-MM-DD');\n      }\n\n      if (days === 14) {\n        startDate = moment().subtract(2, 'weeks').format('YYYY-MM-DD');\n      }\n\n      if (days === 31) {\n        startDate = moment().subtract(1, 'month').format('YYYY-MM-DD');\n      } else {\n        startDate = moment().subtract(days, 'days').format('YYYY-MM-DD');\n      }\n\n      dispatch({ type: 'SET_STARTDATE', value: startDate });\n    },\n    setStartDateAsString: (value) => dispatch({ type: 'SET_STARTDATE', value }),\n  };\n};\n","import { Paths } from '../paths';\nimport { stringify } from 'query-string';\n\nconst useRedirect = (history, path) => (query) => {\n  const search = stringify(query, { arrayFormat: 'bracket' });\n  history.push({\n    pathname: Paths[path],\n    search,\n  });\n};\n\nexport default useRedirect;\n","import { useEffect, useState, useCallback } from 'react';\nimport useIsMounted from './useIsMounted';\n\n/*\n * The useRequest hook accepts a request function and returns an object with\n * five values:\n *   request: a function to call to invoke the request\n *   result: the value returned from the request function (once invoked)\n *   isLoading: boolean state indicating whether the request is in active/in flight\n *   error: any caught error resulting from the request\n *   success: once request is completed and there were no errors\n *   setValue: setter to explicitly set the result value\n *\n * The hook also accepts an optional second parameter which is a default\n * value to set as result before the first time the request is made.\n */\nexport const useRequest = (makeRequest, initialValue) => {\n  const [result, setResult] = useState(initialValue);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const isMounted = useIsMounted();\n\n  return {\n    result,\n    error,\n    isLoading,\n    isSuccess,\n    request: useCallback(\n      async (...args) => {\n        setIsLoading(true);\n        try {\n          const response = await makeRequest(...args);\n          if (isMounted.current) {\n            setResult(response);\n            setError(null);\n            setIsSuccess(true);\n          }\n        } catch (err) {\n          if (isMounted.current) {\n            setError(err);\n            setResult(initialValue);\n          }\n        } finally {\n          if (isMounted.current) {\n            setIsLoading(false);\n          }\n        }\n      },\n      [makeRequest]\n    ),\n    setValue: setResult,\n  };\n};\n\n/*\n * Provides controls for \"dismissing\" an error message\n *\n * Params: an error object\n * Returns: { error, dismissError }\n *   The returned error object is the same object passed in via the paremeter,\n *   until the dismissError function is called, at which point the returned\n *   error will be set to null on the subsequent render.\n */\nexport const useDismissableError = (error) => {\n  const [showError, setShowError] = useState(false);\n\n  useEffect(() => {\n    if (error) {\n      setShowError(true);\n    }\n  }, [error]);\n\n  return {\n    error: showError ? error : null,\n    dismissError: () => {\n      setShowError(false);\n    },\n  };\n};\n\n/*\n * Hook to assist with deletion of items from a paginated item list. The page\n * url will be navigated back one page on a paginated list if needed to prevent\n * the UI from re-loading an empty set and displaying a \"No items found\"\n * message.\n *\n * Params: a callback function that will be invoked in order to delete items,\n *   and an object with structure { qsConfig, allItemsSelected, fetchItems }\n * Returns: { isLoading, deleteItems, deletionError, clearDeletionError }\n */\nexport const useDeleteItems = (\n  makeRequest,\n  { qsConfig = null, fetchItems = null } = {}\n) => {\n  const {\n    error: requestError,\n    isLoading,\n    request,\n  } = useRequest(makeRequest, null);\n  const { error, dismissError } = useDismissableError(requestError);\n  const deleteItems = async () => {\n    await request();\n    if (!qsConfig) {\n      return;\n    }\n    fetchItems();\n  };\n\n  return {\n    isLoading,\n    deleteItems,\n    deletionError: error,\n    clearDeletionError: dismissError,\n  };\n};\n\nexport default useRequest;\n","import { useEffect, useRef } from 'react';\n\nexport default function useIsMounted() {\n  const isMounted = useRef(null);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  });\n  return isMounted;\n}\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PFPagination } from '@patternfly/react-core';\nimport { encodeNonDefaultQueryString, parseQueryString, } from '../../Utilities/qs';\nimport { useHistory } from 'react-router-dom';\nvar perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '15', value: 15 },\n    { title: '20', value: 20 },\n    { title: '25', value: 25 },\n];\nvar Pagination = function (_a) {\n    var _b = _a.count, count = _b === void 0 ? 0 : _b, qsConfig = _a.qsConfig, params = _a.params, setPagination = _a.setPagination, props = __rest(_a, [\"count\", \"qsConfig\", \"params\", \"setPagination\"]);\n    var offset = params.offset, limit = params.limit;\n    var currentPage = Math.floor(offset / limit + 1);\n    var returnOffsetVal = function (page) { return (page - 1) * limit; };\n    var history = useHistory();\n    var pushHistoryState = function (params) {\n        if (params === void 0) { params = {}; }\n        var _a = history.location, pathname = _a.pathname, search = _a.search;\n        var nonNamespacedParams = parseQueryString({}, search);\n        var encodedParams = encodeNonDefaultQueryString(qsConfig, params, nonNamespacedParams);\n        history.push(encodedParams ? pathname + \"?\" + encodedParams : pathname);\n    };\n    var handleSetPage = function (_event, pageNumber) {\n        var oldParams = parseQueryString(qsConfig, history.location.search);\n        pushHistoryState(__assign(__assign({}, oldParams), { limit: pageNumber }));\n    };\n    var handleSetPageSize = function (_event, page) {\n        var oldParams = parseQueryString(qsConfig, history.location.search);\n        pushHistoryState(__assign(__assign({}, oldParams), { offset: page }));\n    };\n    return (React.createElement(PFPagination, __assign({ itemCount: count, widgetId: \"aa-pagination\", perPageOptions: perPageOptions, perPage: limit, page: currentPage, onPerPageSelect: function (event, perPage, page) {\n            setPagination(returnOffsetVal(page), perPage);\n            handleSetPage(event, perPage);\n        }, onSetPage: function (event, page) {\n            setPagination(returnOffsetVal(page));\n            handleSetPageSize(event, returnOffsetVal(page));\n        } }, props)));\n};\nPagination.propTypes = {\n    count: PropTypes.number,\n    qsConfig: PropTypes.any,\n    params: PropTypes.exact({\n        offset: PropTypes.number.isRequired,\n        limit: PropTypes.number.isRequired,\n    }).isRequired,\n    setPagination: PropTypes.func.isRequired,\n};\nexport default Pagination;\n","import Pagination from './Pagination';\nexport default Pagination;\n","var currencyFormatter = function (n) {\n    var formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n    });\n    return formatter.format(n); /* $2,500.00 */\n};\nexport default currencyFormatter;\n"],"sourceRoot":""}