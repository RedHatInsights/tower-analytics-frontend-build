{"version":3,"sources":["webpack:///./src/Charts/BaseChart.js","webpack:///./src/Components/AlertModal/AlertModal.js","webpack:///./src/Components/ApiErrorState.js","webpack:///./src/Components/Breadcrumbs.js","webpack:///./src/Components/EmptyState.js","webpack:///./src/Components/ErrorDetail/ErrorDetail.js","webpack:///./src/Components/JobStatus.js","webpack:///./src/Components/LoadingState.js","webpack:///./src/Components/NoData.js","webpack:///./src/Components/NoResults.js","webpack:///./src/Components/Toolbar/constants.ts","webpack:///./src/Components/Toolbar/Groups/CategoryDropdown.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/Select.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/helpers.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/Date.tsx","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/Text.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/index.js","webpack:///./src/Components/Toolbar/Groups/FiltersCategoriesGroup.js","webpack:///./src/Components/Toolbar/Groups/QuickDateGroup.js","webpack:///./src/Components/Toolbar/Groups/SortByGroup.js","webpack:///./src/Components/Toolbar/Groups/SettingsPanel.js","webpack:///./src/Components/Toolbar/Toolbar.js","webpack:///./src/Components/Toolbar/index.js","webpack:///./src/Charts/ROITopTemplates.js","webpack:///./src/Containers/AutomationCalculator/helpers.js","webpack:///./src/Containers/AutomationCalculator/TotalSavings.js","webpack:///./src/Containers/AutomationCalculator/CalculationCost.js","webpack:///./src/Containers/AutomationCalculator/AutomationFormula.js","webpack:///./src/Containers/AutomationCalculator/TopTemplates.js","webpack:///./src/Containers/AutomationCalculator/AutomationCalculator.js","webpack:///./src/Utilities/Tooltip.js","webpack:///./src/Charts/BarChart.js","webpack:///./src/Charts/LineChart.js","webpack:///./src/Components/ModulesList.js","webpack:///./src/Components/Breakdown.js","webpack:///./src/Components/ModalContents.js","webpack:///./src/Components/TemplatesList.js","webpack:///./src/Containers/Clusters/Clusters.js","webpack:///./src/Components/JobExplorerListRow.js","webpack:///./src/Components/JobExplorerList.js","webpack:///./src/Containers/JobExplorer/JobExplorer.js","webpack:///./src/Components/NotificationsList.js","webpack:///./src/Containers/Notifications/Notifications.js","webpack:///./src/Utilities/Legend.js","webpack:///./src/Charts/GroupedBarChart/GroupedBarChart.js","webpack:///./src/Charts/GroupedBarChart/OrgsTooltip.js","webpack:///./src/Charts/GroupedBarChart/HostsTooltip.js","webpack:///./src/Charts/PieChart.js","webpack:///./src/Containers/OrganizationStatistics/OrganizationStatistics.js","webpack:///./src/Utilities/colors.ts","webpack:///./src/Containers/SavingsPlanner/Add/index.js","webpack:///./src/Components/CardActionsRow.js","webpack:///./src/Components/DeleteButton/DeleteButton.js","webpack:///./src/Components/RoutedTabs.js","webpack:///./src/Containers/SavingsPlanner/Details/DetailsTab/index.js","webpack:///./src/Utilities/hoursFormatter.ts","webpack:///./src/Containers/SavingsPlanner/Details/StatisticsTab/TotalSavings/index.tsx","webpack:///./src/Containers/SavingsPlanner/Details/StatisticsTab/FormulaDescription/index.tsx","webpack:///./src/Containers/SavingsPlanner/Details/StatisticsTab/index.tsx","webpack:///./src/Containers/SavingsPlanner/Edit/index.js","webpack:///./src/Containers/SavingsPlanner/Details/Details.js","webpack:///./src/Components/EmptyList.js","webpack:///./src/Containers/SavingsPlanner/List/ListItem/index.js","webpack:///./src/Components/Toolbar/ToolbarDeleteButton.js","webpack:///./src/Containers/SavingsPlanner/List/List.js","webpack:///./src/Utilities/useSelected.js","webpack:///./src/Containers/SavingsPlanner/Shared/constants.js","webpack:///./src/Containers/SavingsPlanner/Shared/usePlanData.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/Steps/Details/index.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/Steps/Tasks/index.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/Steps/Templates/index.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form/index.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Utilities/getRelatedResourceDeleteDetails.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Utilities/qs.js","webpack:///./src/Utilities/useQueryParams.js","webpack:///./src/Utilities/useRedirect.js","webpack:///./src/Utilities/useRequest.js","webpack:///./src/Utilities/useIsMounted.js","webpack:////home/travis/build/RedHatInsights/tower-analytics-frontend/node_modules/moment/locale|sync|/^\\.\\/.*$/","webpack:///./src/Components/Pagination/Pagination.tsx","webpack:///./src/Components/Pagination/index.ts","webpack:///./src/Utilities/currencyFormatter.ts"],"names":["initializeChart","Chart","BaseChart","props","id","margin","history","useHistory","getWidth","parseInt","d3","style","left","right","getHeight","top","bottom","propTypes","PropTypes","ExclamationCircleIcon","styled","PFExclamationCircleIcon","TimesCircleIcon","PFTimesCircleIcon","InfoCircleIcon","PFInfoCircleIcon","CheckCircleIcon","PFCheckCircleIcon","ExclamationTriangleIcon","PFExclamationTriangleIcon","Header","AlertModal","isOpen","title","label","variant","children","variantIcons","danger","size","error","info","success","warning","customHeader","Title","headingLevel","Modal","header","aria-label","aria-labelledby","ApiErrorState","message","EmptyState","EmptyStateVariant","EmptyStateIcon","icon","color","globalDangerColor200","EmptyStateBody","Breadcrumbs","items","current","Breadcrumb","map","navigate","basePathNavigate","getBaseName","BreadcrumbItem","key","to","BreadcrumbHeading","DefaultEmptyState","preflightError","WrenchIcon","status","href","target","rel","Button","onClick","window","location","reload","Card","PFCard","CardBody","PFCardBody","Expandable","PFExpandable","ErrorDetail","useState","isExpanded","setIsExpanded","Array","isArray","length","toggleText","onToggle","m","JobStatus","str","Label","getColor","getIcon","charAt","toUpperCase","slice","CubesIcon","SearchIcon","optionsForCategories","type","isSingle","name","placeholder","hasChips","quick_date_range","start_date","end_date","job_type","org_id","cluster_id","template_id","sort_options","automation_status","frequency_period","category","inventory_id","CategoryDropdown","selected","setSelected","categories","ToolbarItem","Select","onSelect","_event","selection","selections","placeholderText","SelectOption","value","OptionSpan","renderValues","values","description","Tooltip","content","item","comparator","val","categoryKey","selectOptions","isVisible","setValue","expanded","setExpanded","options","ToolbarFilter","data-cy","showToolbarItem","chips","forEach","i","undefined","reduce","acc","Number","isInteger","cmpItem","push","handleCheckboxChips","categoryName","deleteChip","_","valueToDelete","keyToDelete","find","filteredArr","filter","SelectVariant","includes","hasInlineFilter","onFilter","textInput","toLowerCase","maxHeight","isRequired","__assign","Object","assign","t","s","n","arguments","p","prototype","hasOwnProperty","call","apply","this","DateInput","_a","_b","_c","_d","otherProps","DatePicker","onChange","inputProps","isReadOnly","Text","searchVal","setSearchVal","useEffect","InputGroup","TextInput","onKeyDown","e","preventDefault","components","select","date","text","ToolbarInput","SelectedInput","FilterCategoriesGroup","filterCategories","filters","handleSearch","setFilters","keys","currentCategory","setCurrentCategory","ToolbarGroup","el","getDateByDays","days","format","today","toISOString","split","strToDate","nums","Date","QuickDateGroup","endDate","startDate","Split","hasGutter","SplitItem","validators","paddingTop","SortByGroup","sort_order","SettingsPanel","settingsExpanded","setSettingsExpanded","isFlat","backgroundColor","CardHeader","CardActions","CardTitle","Switch","labelOff","isChecked","only_root_workflows_and_standalone_jobs","position","FilterableToolbar","qsConfig","pagination","hasSettings","additionalControls","hideQuickDateRange","hideSortOptions","restCategories","obj","params","parseQueryString","search","replaceParams","mergeParams","removeParams","pushHistoryState","pathname","nonNamespacedParams","encodedParams","encodeNonDefaultQueryString","Toolbar","namespace","clearAllFilters","oldParams","oldParamsClone","limit","sort_by","handleRemoveAll","collapseListedFiltersBreakpoint","ToolbarContent","isActive","control","idx","visibility","default","lg","d","savings","manualCost","automationCost","scrollLeftOffset","node","scrollLeft","x","svg","getBoundingClientRect","y","currencyFormatter","delta","automatedCost","toolTipWidth","toolTipBase","width","chartWidth","flipped","nameWidth","getComputedTextLength","savingsWidth","manualCostWidth","automationCostWidth","widestTextElem","adjustedWidth","maxTextPerc","boxWidth","overage","boundingBox","attr","toolTipPoint","interrupt","transition","delay","draw","append","textWidthThreshold","TopTemplatesSavings","init","bind","resize","state","timeout","clearTimeout","setState","setTimeout","remove","data","ticks","height","rangeRound","padding","range","formatYAxisValue","xAxis","tickValues","yAxis","tickFormat","replace","tickSize","taskNames","tooltip","domain","selectAll","bandwidth","enter","on","darker","handleMouseOver","handleMouseOut","addEventListener","removeEventListener","Component","BorderedCardTitle","TotalSavings","totalSavings","borderTop","paddingBottom","InputAndText","validFloat","floatValue","parseFloat","CalculationCost","costManual","setCostManual","costAutomation","setCostAutomation","InputGroupText","TemplateDetail","TemplateDetailSubTitle","TooltipWrapper","IconGroup","QuestionIconTooltip","details","Popover","bodyContent","k","capitalize","join","TopTemplates","sortBy","setDataRunTime","setEnabled","redirectToJobExplorer","component","convertSecondsToMins","avgRunTime","minutes","convertMinsToSeconds","successful_hosts_total","trimmed","sortAttribute","showSortAttr","enabled","deselectedIds","setDeselectedIds","filterDisabled","updateDeltaCost","convertSecondsToHours","successful_elapsed_total","calculateDelta","getQSConfig","roiConst","AutomationCalculator","toJobExplorer","useRedirect","useQueryParams","queryParams","setFromToolbar","useRequest","useCallback","preflightRequest","preflight","preflightIsLoading","isLoading","setPreflight","request","readROIOptions","optionsError","optionsIsLoading","result","setOptions","readROI","response","apiError","apiIsLoading","api","fetchEndpoint","NotAuthorized","notAuthorizedParams","PageHeader","PageHeaderTitle","Main","Grid","className","GridItem","span","Stack","StackItem","LoadingState","NoData","textAlign","isFilled","sum","curr","overflow","templateId","seconds","updatedData","setUnfilteredData","opts","fail","total","formatTooltipDate","RAN","FAIL","TOTAL","DATE","jobs","jobsWidth","failed","successful","successTextWidth","failTextWidth","circleSuccess","circleFail","failedIcon","successIcon","successText","failText","clickMore","colors","BarChart","formattedData","jobExplorer","Paths","formattedDate","formatDate","initialQueryParams","stringify","arrayFormat","parseTime","formatted","created_date","successful_count","failed_count","concat","barTooltip","layers","order","offset","stack","maxTicks","Math","round","layer","duration","ease","prevProps","LineChart","updateCluster","path","attrTween","tweenDash","l","getTotalLength","unformattedData","successLine","curve","failLine","defined","isNaN","vertical","handleMouseMove","intersectX","cx","baseVal","DataListCell","PFDataListCell","DataListItem","PFDataListItem","DataCellEnd","ModulesList","modules","DataList","background","border","module","index","host_task_count","trimStr","BarContainer","Bar","LabelsContainer","Square","Breakdown","categoryCount","categoryColor","totalCount","accumulated","currentVal","sortedCategories","sort","barSpacing","remainingSpace","ActionContainer","formatTopFailedTask","percentage","ceil","total_failed_count","task_name","formatSuccessRate","successCount","formatTotalTime","elapsed","substr","ModalContents","selectedId","handleModal","qp","jobType","readJobExplorer","agreggateTemplateParams","stats","fetchStats","statsApi","relatedTemplateJobsParams","relatedJobs","fetchJobs","jobsApi","attributes","group_by_time","group_by","statsData","isSuccess","cancelled","canceled_count","error_count","new","new_count","pending","pending_count","running","running_count","waiting","waiting_count","global_palette_green_200","global_palette_black_850","global_palette_orange_300","global_palette_red_100","global_palette_cyan_200","global_palette_purple_300","global_palette_blue_300","global_palette_light_green_200","descriptionStats","total_count","formatJobType","most_failed_tasks","cleanup","ModalVariant","onClose","NoResults","DescriptionList","isHorizontal","columnModifier","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","Divider","marginTop","marginBottom","TableComposable","Thead","Tr","heading","Th","Tbody","job","Td","template_name","cluster_name","formatDateTime","finished","TemplatesList","templates","setSelectedId","isModalOpen","setIsModalOpen","displayJobType","initialTopTemplateParams","initialTopWorkflowParams","initialModuleParams","clusters","setPreFlightError","readClustersOptions","optionsQueryParams","fetchOptions","chartData","chartDataError","chartDataIsLoading","chartDataIsSuccess","fetchChartData","readEventExplorer","topModuleParams","modulesError","modulesIsLoading","modulesIsSuccess","fetchModules","topTemplatesParams","templatesError","templatesIsLoading","templatesIsSuccess","fetchTemplates","topWorkflowParams","workflows","workflowsError","workflowsIsLoading","workflowsIsSuccess","fetchWorkflows","initialOptionsParams","initializeWithPreflight","JobExplorerListRow","expandedInfo","created","started","expand","rowIndex","tower_link","org_name","colSpan","ExpandableRowContent","cols","sortableCols","sortMap","0","1","4","reverseSortMap","JobExplorerList","queryParamsDispatch","sortIdx","setSortIdx","sortDir","setSortDir","onSort","dir","head","direction","columnIndex","JobExplorer","setFromPagination","dispatch","readJobExplorerOptions","meta","dataError","dataIsLoading","dataIsSuccess","fetchEndpoints","initialSearchParams","parse","parseBooleans","parseNumbers","insights","chrome","appNavClick","secondaryNav","updateURL","Pagination","count","setPagination","isCompact","PaginationVariant","ExternalLinkAltIcon","PFExternalLinkAltIcon","NotificationDrawerListItem","PFNotificationDrawerListItem","NotificationDrawerList","PFNotificationDrawerList","stringifyDate","day","moment","now","utc","isAfter","diff","isSame","valueOf","AllNotificationTemplate","notifications","notification_id","url","tower_url","NotificationDrawerListItemHeader","NotificationDrawerListItemBody","timestamp","ErrorNotificationTemplate","notification","NoticeNotificationTemplate","WarningNotificationTemplate","NotificationsList","filterBy","PFCardTitle","DropdownGroup","notificationOptions","disabled","formatClusterName","uuid","install_uuid","notificationsData","setNotificationsData","clusterOptions","setClusterOptions","selectedCluster","setSelectedCluster","firstRender","setFirstRender","setIsLoading","setMeta","setId","setSeverity","readNotifications","then","ignore","Promise","all","readClusters","clustersData","FormSelect","FormSelectOption","isDisabled","severity","NotificationDrawer","Container","LegendDetail","Wrapper","Color","SubTitle","Legend","chartName","some","pieces","GroupedBarChart","TooltipClass","legend","colorFunc","selectedIds","setSelectedIds","selectedOrgs","x0","x1","maxTicksOneMonth","maxTicksTwoMonths","dates","yLabel","exit","bars","merge","subEnter","moreDetail","endsWith","defaultProps","OrgsTooltip","orgName","HostsTooltip","perc","percSuccess","drawn","percent","success_rate","maxLength","percentageTotal","percentageSuccess","boundingBOx","showSuccess","boundingHeight","boundingWidth","PieChart","a","b","radius","min","filteredData","getTotal","donutTooltip","pie","arc","outerRadius","innerRadius","classed","scaleOrdinal","orgsChartMapper","attrName","pieChartMapper","chartMapper","rest","dateForJobExplorer","readHostExplorer","constants","OrganizationStatistics","activeTabKey","setActiveTabKey","preflightIsSuccess","jobRunsByOrgParams","jobsError","jobsIsLoading","jobsIsSuccess","setJobs","jobsByDateAndOrgParams","orgs","hostAcrossOrgParams","orgsError","orgsIsLoading","orgsIsSuccess","setOrgs","readOrgOptions","optionsIsSuccess","jobEventsByOrgParams","tasks","tasksError","tasksIsLoading","tasksIsSuccess","setTasks","include_others","Tabs","activeKey","tabIndex","Tab","eventKey","readPlanOptions","fetchPlanOptions","canWrite","rbac","perms","write","Redirect","CardActionsWrapper","CardActionsRow","WarningMessage","Alert","DeleteButton","onConfirm","modalTitle","ouiaId","deleteMessage","deleteDetailsRequests","disabledTooltip","setIsOpen","deleteMessageError","setDeleteMessageError","deleteDetails","setDeleteDetails","toggleModal","getRelatedResourceDeleteCounts","results","detail","spinnerAriaValueText","actions","isInline","entries","Badge","RoutedTabs","tabsArray","defaultTabId","useLocation","tab","link","getActiveTabId","match","TabTitleText","role","arrayOf","shape","number","string","oneOfType","PFDivider","DetailsTab","plans","hosts","manual_time","modified","template_details","renderOptionsBasedValue","labelsAndValues","Name","Description","Frequency","Template","showTemplate","deletePlan","deletePlans","deleteError","relatedResourceDeleteRequests","readPlan","Error","isDeleteDisabled","deleteDetailsError","fetchDeleteDetails","useDismissableError","dismissError","List","task","ListItem","CardFooter","toFixed","toLocaleString","isMoney","isPlain","CostsText","CodeBlock","CodeBlockCode","SavingsText","ButtonVariant","yearLabels","initial","year1","year2","year3","cost","benefit","net","StatisticsTab","setIsMoney","barChartData","charts","kind","parent","domainPadding","themeColor","cursor","stickToAxis","mouseFollow","legendTooltip","legendData","childName","symbol","fill","titleProperyForLegend","customFnc","datum","grid","stroke","axisLabel","barRatio","barWidth","labelName","strokeWidth","functions","fetchFnc","resolve","year","total_costs","projections","monetary_stats","total_benefits","cumulative_net_benefits","total_hours_spent_risk_adjusted","time_stats","total_hours_saved","cumulative_time_net_benefits","response_type","getChartData","ToggleGroup","ToggleGroupItem","buttonId","isSelected","schema","Edit","useParams","Form","locationState","pageTitle","onEdit","indexOf","plansError","plansIsLoading","plansIsSuccess","breadcrumbUrl","breadcrumbsItems","Route","exact","EmptyList","canAdd","AddCircleOIcon","CardLabel","Small","Checkbox","PFCheckbox","CardDetail","template","plan","handleSelect","projectedSavings","isCardKebabOpen","setIsCardKebabOpen","useRouteMatch","kebabDropDownItems","DropdownItem","CardHeaderMain","Link","Dropdown","toggle","KebabToggle","dropdownItems","row","requiredField","username","image","ToolbarDeleteButton","itemsUnableToDelete","itemsToDelete","pluralizedItemName","onDelete","errorMessage","cannotDelete","Boolean","warningMessage","PageContainer","Footer","FlexMain","savingsPlanner","readPlans","itemsError","itemsIsSuccess","itemsIsLoading","combinedOptions","list","isAllSelected","prevState","useSelected","useDeleteItems","allItemsSelected","fetchItems","deleteLoading","deletionError","deleteItems","clearDeletionError","handleDelete","Gallery","minWidths","sm","md","xl","convertTasks","task_order","Details","formData","categoryIsOpen","setCategoryIsOpen","manualTimeIsOpen","setManualTimeIsOpen","frequencyPeriodIsOpen","setFrequencyPeriodIsOpen","FormGroup","fieldId","newName","newDescription","NumberInput","inputAriaLabel","widthChars","event","isPositiveNum","onMinus","onPlus","TaskSection","TaskTitle","TaskDeleteButton","DeleteTaskActionSection","DataListAction","TaskRow","DataListItemRow","Tasks","taskToAdd","setTaskToAdd","liveText","setLiveText","appendTask","trimmedTask","trim","newTaskName","onDragFinish","newItemOrder","onDragStart","newId","onDragMove","oldIndex","newIndex","onDragCancel","itemOrder","DataListControl","DataListDragButton","aria-describedby","aria-pressed","DataListItemCells","dataListCells","removeTask","aria-live","ListFooter","Templates","formDispatch","hash","templatesIsError","sortParams","_ev","_idx","data-testid","startStep","setStartStep","requestPayload","updatePlan","createPlan","apiResponse","setData","useReducer","hourly_rate","frequency_per_period","usePlanData","steps","step_number","nextButtonText","CustomFooter","WizardFooter","WizardContextConsumer","activeStep","onNext","onBack","onSave","step","onStepChange","newStep","plan_created","Wizard","navAriaLabel","mainAriaLabel","onGoToStep","footer","startAtStep","defaultParams","roi","organizationStatistics","arrayFields","requests","hasCount","savingsPlan","readRecordApi","isNumeric","test","toString","dateTime","setDate","getDate","setHours","mins","integerFields","dateFields","config","queryString","qs","nsKey","rawValue","namespaceMatches","decodeURIComponent","searchParams","URLSearchParams","v","output","getAll","parseValue","mergeParam","stringToObject","addDefaultsToObject","fieldname","startsWith","encodeQueryString","encodeURIComponent","paramsWithoutDefaults","namespaceParams","namespaced","paramsToRemove","updated","removeParam","oldVal","deleteVal","splice","newParams","merged","newVal","arr","deduped","Set","initialParams","initialWithCalculatedParams","newState","newValues","actionMapper","varName","setEndDate","setStartDate","subtract","setStartDateAsString","query","makeRequest","initialValue","setResult","setError","setIsSuccess","isMounted","useRef","useIsMounted","showError","setShowError","requestError","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","exports","perPageOptions","getOwnPropertySymbols","propertyIsEnumerable","__rest","currentPage","floor","returnOffsetVal","page","itemCount","widgetId","perPage","onPerPageSelect","pageNumber","onSetPage","handleSetPageSize","Intl","NumberFormat","currency"],"mappings":"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","file":"js/automation_analytics.bae1c0e94c9391739ae4.js","sourcesContent":["import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nconst initializeChart = (Chart) => {\n  const BaseChart = (props) => {\n    const { id, margin } = props;\n\n    const getWidth = () => {\n      let width;\n      width =\n        parseInt(d3.select('#' + id).style('width')) -\n          margin.left -\n          margin.right || 700;\n      return width;\n    };\n\n    const getHeight = () => {\n      let height;\n      height =\n        parseInt(d3.select('#' + id).style('height')) -\n          margin.top -\n          margin.bottom || 450;\n      return height;\n    };\n\n    let history = useHistory();\n\n    return (\n      <Chart\n        {...props}\n        getWidth={getWidth}\n        getHeight={getHeight}\n        history={history}\n      />\n    );\n  };\n\n  BaseChart.propTypes = {\n    id: PropTypes.string,\n    margin: PropTypes.object,\n  };\n\n  return BaseChart;\n};\n\ninitializeChart.propTypes = {\n  Chart: PropTypes.element,\n};\n\nexport default initializeChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Modal, Title } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon as PFCheckCircleIcon,\n  ExclamationCircleIcon as PFExclamationCircleIcon,\n  ExclamationTriangleIcon as PFExclamationTriangleIcon,\n  InfoCircleIcon as PFInfoCircleIcon,\n  TimesCircleIcon as PFTimesCircleIcon,\n} from '@patternfly/react-icons';\nimport styled from 'styled-components';\n\nconst ExclamationCircleIcon = styled(PFExclamationCircleIcon)`\n  color: var(--pf-global--danger-color--100);\n`;\n\nconst TimesCircleIcon = styled(PFTimesCircleIcon)`\n  color: var(--pf-global--danger-color--100);\n`;\n\nconst InfoCircleIcon = styled(PFInfoCircleIcon)`\n  color: var(--pf-global--info-color--100);\n`;\n\nconst CheckCircleIcon = styled(PFCheckCircleIcon)`\n  color: var(--pf-global--success-color--100);\n`;\n\nconst ExclamationTriangleIcon = styled(PFExclamationTriangleIcon)`\n  color: var(--pf-global--warning-color--100);\n`;\n\nconst Header = styled.div`\n  display: flex;\n  svg {\n    margin-right: 16px;\n  }\n`;\n\nconst AlertModal = ({\n  isOpen,\n  title,\n  label = 'Alert modal',\n  variant = 'warning',\n  children,\n  ...props\n}) => {\n  const variantIcons = {\n    danger: <ExclamationCircleIcon size=\"lg\" />,\n    error: <TimesCircleIcon size=\"lg\" />,\n    info: <InfoCircleIcon size=\"lg\" />,\n    success: <CheckCircleIcon size=\"lg\" />,\n    warning: <ExclamationTriangleIcon size=\"lg\" />,\n  };\n\n  const customHeader = (\n    <Header>\n      {variant ? variantIcons[variant] : null}\n      <Title id=\"alert-modal-header-label\" size=\"2xl\" headingLevel=\"h2\">\n        {title}\n      </Title>\n    </Header>\n  );\n\n  return (\n    <Modal\n      header={customHeader}\n      aria-label={label}\n      aria-labelledby=\"alert-modal-header-label\"\n      isOpen={!!isOpen}\n      variant=\"small\"\n      title={title}\n      {...props}\n    >\n      {children}\n    </Modal>\n  );\n};\n\nAlertModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  variant: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default AlertModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { global_danger_color_200 as globalDangerColor200 } from '@patternfly/react-tokens';\n\nconst ApiErrorState = ({ message }) => (\n  <EmptyState variant={EmptyStateVariant.small}>\n    <EmptyStateIcon\n      icon={ExclamationCircleIcon}\n      color={globalDangerColor200.value}\n    />\n    <Title headingLevel=\"h2\" size=\"lg\">\n      Error\n    </Title>\n    <EmptyStateBody>{message}</EmptyStateBody>\n  </EmptyState>\n);\n\nApiErrorState.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default ApiErrorState;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbHeading,\n} from '@patternfly/react-core';\n\nimport getBaseName from '../Utilities/getBaseName';\n\nconst Breadcrumbs = ({ items = [], current = null }) => {\n  return (\n    <Breadcrumb>\n      {items.map(({ title, navigate }) => {\n        const basePathNavigate = getBaseName() + navigate;\n        return (\n          <BreadcrumbItem key={title} to={basePathNavigate}>\n            {title}\n          </BreadcrumbItem>\n        );\n      })}\n      {current && <BreadcrumbHeading>{current}</BreadcrumbHeading>}\n    </Breadcrumb>\n  );\n};\n\nBreadcrumbs.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      navigate: PropTypes.any,\n      title: PropTypes.node,\n    })\n  ),\n  current: PropTypes.node,\n};\n\nexport default Breadcrumbs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { WrenchIcon } from '@patternfly/react-icons';\n\nconst DefaultEmptyState = ({ preflightError: error }) => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={WrenchIcon} />\n    {error.status === 404 && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          No data found\n        </Title>\n        <EmptyStateBody>\n          Please visit{' '}\n          <a\n            href=\"https://docs.ansible.com/ansible-tower/latest/html/administration/usability_data_collection.html#automation-analytics\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            here\n          </a>{' '}\n          to learn how to enable Automation Analytics.\n        </EmptyStateBody>\n      </>\n    )}\n    {error.status === 401 && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          Not authorized\n        </Title>\n        <EmptyStateBody>\n          You do not have the correct permissions to view this page.\n        </EmptyStateBody>\n      </>\n    )}\n    {!error.status && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          Something went wrong, please try reloading the page\n        </Title>\n        <Button variant=\"primary\" onClick={() => window.location.reload()}>\n          Reload\n        </Button>\n      </>\n    )}\n  </EmptyState>\n);\n\nDefaultEmptyState.propTypes = {\n  preflightError: PropTypes.object,\n};\n\nexport default DefaultEmptyState;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Card as PFCard,\n  CardBody as PFCardBody,\n  ExpandableSection as PFExpandable,\n} from '@patternfly/react-core';\n\nconst Card = styled(PFCard)`\n  background-color: var(--pf-global--BackgroundColor--200);\n  overflow-wrap: break-word;\n`;\n\nconst CardBody = styled(PFCardBody)`\n  max-height: 200px;\n  overflow: scroll;\n`;\n\nconst Expandable = styled(PFExpandable)`\n  text-align: left;\n\n  & .pf-c-expandable__toggle {\n    padding-left: 10px;\n    margin-left: 5px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n`;\n\nfunction ErrorDetail({ error }) {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const handleToggle = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  return (\n    <>\n      {Array.isArray(error) && error.length && (\n        <Expandable\n          toggleText={'Details'}\n          onToggle={handleToggle}\n          isExpanded={isExpanded}\n        >\n          <Card>\n            <CardBody>\n              <ul>\n                {error.map((m) =>\n                  typeof m === 'string' ? <li key={m}>{m}</li> : null\n                )}\n              </ul>\n            </CardBody>\n          </Card>\n        </Expandable>\n      )}\n    </>\n  );\n}\n\nErrorDetail.propTypes = {\n  error: PropTypes.arrayOf(PropTypes.string),\n};\n\nexport default ErrorDetail;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ClockIcon,\n  SyncAltIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\n\nconst JobStatus = ({ status }) => {\n  const capitalized = (str) => str.charAt(0).toUpperCase() + str.slice(1);\n\n  const getColor = () => {\n    switch (status) {\n      case 'successful':\n        return 'green';\n      case 'failed':\n      case 'error':\n        return 'red';\n      case 'running':\n      case 'pending':\n        return 'blue';\n      case 'canceled':\n        return 'orange';\n      // case new, waiting\n      default:\n        return 'grey';\n    }\n  };\n\n  const getIcon = () => {\n    switch (status) {\n      case 'successful':\n        return <CheckCircleIcon />;\n      case 'failed':\n      case 'error':\n        return <ExclamationCircleIcon />;\n      case 'running':\n        return <SyncAltIcon />;\n      case 'canceled':\n        return <ExclamationTriangleIcon />;\n      // case new, waiting, pending\n      default:\n        return <ClockIcon />;\n    }\n  };\n\n  return (\n    <Label variant=\"outline\" color={getColor()} icon={getIcon()}>\n      {capitalized(status)}\n    </Label>\n  );\n};\n\nJobStatus.propTypes = {\n  status: PropTypes.oneOf([\n    'successful',\n    'failed',\n    'error',\n    'running',\n    'new',\n    'waiting',\n    'pending',\n    'canceled',\n  ]),\n};\n\nexport default JobStatus;\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst DefaultLoadingState = () => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={CubesIcon} />\n    <Title headingLevel=\"h5\" size=\"lg\">\n      Loading...\n    </Title>\n    <EmptyStateBody>Please wait.</EmptyStateBody>\n  </EmptyState>\n);\n\nexport default DefaultLoadingState;\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst NoData = () => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={CubesIcon} />\n    <Title headingLevel=\"h5\" size=\"lg\">\n      No Data\n    </Title>\n  </EmptyState>\n);\n\nexport default NoData;\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst NoResults = () => {\n  return (\n    <EmptyState variant={EmptyStateVariant.full}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title size=\"lg\" headingLevel=\"h4\">\n        No results found\n      </Title>\n      <EmptyStateBody>\n        No results match the filter criteria. Remove all filters or clear all\n        filters to show results.\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n\nexport default NoResults;\n","export var optionsForCategories = {\n    status: {\n        type: 'select',\n        isSingle: false,\n        name: 'Status',\n        placeholder: 'Filter by job status',\n        hasChips: true,\n    },\n    quick_date_range: {\n        type: 'select',\n        isSingle: true,\n        name: 'Date',\n        placeholder: 'Filter by date',\n        hasChips: false,\n    },\n    start_date: {\n        type: 'date',\n        name: 'Start date',\n        hasChips: false,\n    },\n    end_date: {\n        type: 'date',\n        name: 'End date',\n        hasChips: false,\n    },\n    job_type: {\n        type: 'select',\n        isSingle: false,\n        name: 'Job',\n        placeholder: 'Filter by job type',\n        hasChips: true,\n    },\n    org_id: {\n        type: 'select',\n        isSingle: false,\n        name: 'Organization',\n        placeholder: 'Filter by organization',\n        hasChips: true,\n    },\n    cluster_id: {\n        type: 'select',\n        isSingle: false,\n        name: 'Cluster',\n        placeholder: 'Filter by cluster',\n        hasChips: true,\n    },\n    template_id: {\n        type: 'select',\n        isSingle: false,\n        name: 'Template',\n        placeholder: 'Filter by template',\n        hasChips: true,\n    },\n    sort_options: {\n        type: 'select',\n        isSingle: true,\n        name: 'Sort by',\n        placeholder: 'Sort by attribute',\n        hasChips: false,\n    },\n    automation_status: {\n        type: 'select',\n        isSingle: false,\n        name: 'Automation status',\n        placeholder: 'Filter by automation status',\n        hasChips: true,\n    },\n    frequency_period: {\n        type: 'select',\n        isSingle: false,\n        name: 'Frequency',\n        placeholder: 'Filter by frequency',\n        hasChips: true,\n    },\n    category: {\n        type: 'select',\n        isSingle: false,\n        name: 'Category',\n        placeholder: 'Filter by category',\n        hasChips: true,\n    },\n    inventory_id: {\n        type: 'select',\n        isSingle: false,\n        name: 'Inventory',\n        placeholder: 'Filter by inventory',\n        hasChips: true,\n    },\n    name: {\n        type: 'text',\n        name: 'Search by name',\n        hasChips: true,\n    },\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarItem, Select, SelectOption } from '@patternfly/react-core';\n\nconst CategoryDropdown = ({\n  selected,\n  setSelected = () => {},\n  categories = [],\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <ToolbarItem>\n      <Select\n        isOpen={isExpanded}\n        variant={'single'}\n        aria-label={'Categories'}\n        onToggle={() => setIsExpanded(!isExpanded)}\n        onSelect={(_event, selection) => {\n          setSelected(selection);\n          setIsExpanded(false);\n        }}\n        selections={selected}\n        placeholderText={'Filter by'}\n      >\n        {categories.map(({ key, name }) => (\n          <SelectOption key={key} value={key}>\n            {name}\n          </SelectOption>\n        ))}\n      </Select>\n    </ToolbarItem>\n  );\n};\n\nCategoryDropdown.propTypes = {\n  categories: PropTypes.array,\n  selected: PropTypes.string,\n  setSelected: PropTypes.func,\n};\n\nexport default CategoryDropdown;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Tooltip,\n  ToolbarFilter,\n  Select as PFSelect,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\n\nimport { handleCheckboxChips, handleSingleChips } from './helpers';\nimport { optionsForCategories } from '../../constants';\nimport styled from 'styled-components';\n\nconst OptionSpan = styled('span')`\n  display: block;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n  max-width: 300px;\n`;\n\nconst renderValues = (values) =>\n  values &&\n  values.map(({ key, value, description }) => (\n    <SelectOption key={key} value={key} description={description}>\n      <Tooltip content={<div>{value}</div>}>\n        <OptionSpan>{value}</OptionSpan>\n      </Tooltip>\n    </SelectOption>\n  ));\n\nconst Select = ({\n  categoryKey,\n  value,\n  selectOptions,\n  isVisible = true,\n  setValue,\n}) => {\n  const [expanded, setExpanded] = useState(false);\n  const options = optionsForCategories[categoryKey];\n\n  const onDelete = (_, valueToDelete) => {\n    const single = optionsForCategories[categoryKey].isSingle;\n\n    if (single) {\n      setValue(null);\n    } else {\n      const keyToDelete = selectOptions.find(\n        ({ value }) => value === valueToDelete\n      ).key;\n      const filteredArr = value.filter((value) => value !== keyToDelete);\n      setValue(filteredArr);\n    }\n  };\n\n  const onFilter = (_, textInput) => {\n    if (textInput === '') {\n      return renderValues(selectOptions);\n    } else {\n      return renderValues(\n        selectOptions.filter(({ value }) =>\n          value.toLowerCase().includes(textInput.toLowerCase())\n        )\n      );\n    }\n  };\n\n  const handleChips = () => {\n    if (options.isSingle) {\n      return handleSingleChips(value, selectOptions);\n    } else {\n      return handleCheckboxChips(value, selectOptions);\n    }\n  };\n\n  const onSelect = (_, selection) => {\n    if (options.isSingle) {\n      setValue(selection);\n      setExpanded(false);\n    } else {\n      setValue(\n        !value.includes(selection)\n          ? [...value, selection]\n          : value.filter((value) => value !== selection)\n      );\n    }\n  };\n\n  return (\n    <ToolbarFilter\n      data-cy={categoryKey}\n      key={categoryKey}\n      showToolbarItem={isVisible}\n      chips={options.hasChips ? handleChips() : []}\n      categoryName={options.name}\n      deleteChip={options.hasChips ? onDelete : null}\n    >\n      <PFSelect\n        variant={\n          options.isSingle ? SelectVariant.single : SelectVariant.checkbox\n        }\n        aria-label={options.name}\n        onToggle={() => setExpanded(!expanded)}\n        onSelect={onSelect}\n        selections={value}\n        isOpen={expanded}\n        hasInlineFilter\n        placeholderText={options.placeholder}\n        onFilter={onFilter}\n        maxHeight={'1000%'}\n      >\n        {renderValues(selectOptions)}\n      </PFSelect>\n    </ToolbarFilter>\n  );\n};\n\nSelect.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]).isRequired,\n  selectOptions: PropTypes.array,\n  isVisible: PropTypes.bool,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default Select;\n","/**\n * Get comparator values if their key is in the item list\n */\nexport const handleCheckboxChips = (item, comparator) => {\n  if (item && comparator) {\n    return item.reduce((acc, i) => {\n      Number.isInteger(parseInt(i)) ? (i = parseInt(i)) : i;\n\n      comparator.forEach((cmpItem) => {\n        if (cmpItem.key === i) {\n          acc.push(cmpItem.value);\n        }\n      });\n\n      return acc;\n    }, []);\n  }\n\n  return [];\n};\n\n/**\n * Convert a list of objects to a list of the last value if defined\n */\nexport const handleSingleChips = (item, comparator) => {\n  if (item && typeof item === 'string' && comparator) {\n    let val;\n    comparator.forEach((i) => {\n      if (i.key === item) {\n        val = i.value;\n      }\n    });\n\n    if (val !== undefined) {\n      return [val];\n    }\n  }\n\n  return [];\n};\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DatePicker } from '@patternfly/react-core';\nimport { optionsForCategories } from '../../constants';\nvar DateInput = function (_a) {\n    var categoryKey = _a.categoryKey, _b = _a.value, value = _b === void 0 ? '' : _b, _c = _a.setValue, setValue = _c === void 0 ? function () { return ({}); } : _c, _d = _a.otherProps, otherProps = _d === void 0 ? {} : _d;\n    var options = optionsForCategories[categoryKey];\n    return (React.createElement(DatePicker, __assign({ \"aria-label\": options.name, value: value, onChange: setValue, inputProps: {\n            isReadOnly: true,\n        } }, otherProps)));\n};\nDateInput.propTypes = {\n    categoryKey: PropTypes.string.isRequired,\n    value: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    otherProps: PropTypes.any,\n};\nexport default DateInput;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ToolbarFilter,\n  TextInput,\n  InputGroup,\n  Button,\n} from '@patternfly/react-core';\n\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { optionsForCategories } from '../../constants';\n\nconst Text = ({ categoryKey, isVisible = true, value = '', setValue }) => {\n  const [searchVal, setSearchVal] = useState(value);\n  const options = optionsForCategories[categoryKey];\n\n  const onDelete = () => {\n    setValue('');\n  };\n\n  const handleChips = () => {\n    return value ? [value] : [];\n  };\n\n  useEffect(() => {\n    setSearchVal(value);\n  }, [value]);\n\n  return (\n    <ToolbarFilter\n      data-cy={categoryKey}\n      key={categoryKey}\n      showToolbarItem={isVisible}\n      chips={options.hasChips ? handleChips() : []}\n      categoryName={options.name}\n      deleteChip={options.hasChips ? onDelete : null}\n    >\n      <InputGroup>\n        <TextInput\n          type=\"search\"\n          aria-label={options.name}\n          value={searchVal}\n          onChange={setSearchVal}\n          onKeyDown={(e) => {\n            if (e.key && e.key === 'Enter') {\n              e.preventDefault();\n              setValue(searchVal);\n            }\n          }}\n        />\n        <Button\n          variant=\"control\"\n          aria-label={`Search button for ${options.name}`}\n          onClick={() => {\n            setValue(searchVal);\n          }}\n        >\n          <SearchIcon />\n        </Button>\n      </InputGroup>\n    </ToolbarFilter>\n  );\n};\n\nText.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.any,\n  isVisible: PropTypes.bool,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default Text;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Select from './Select';\nimport DateInput from './Date';\nimport Text from './Text';\nimport { optionsForCategories } from '../../constants';\n\nconst components = {\n  select: Select,\n  date: DateInput,\n  text: Text,\n};\n\nconst ToolbarInput = ({\n  categoryKey,\n  value,\n  selectOptions,\n  isVisible = true,\n  setValue,\n  ...otherProps\n}) => {\n  const options = optionsForCategories[categoryKey];\n  const SelectedInput = components[options.type];\n\n  const defaultValue = () => {\n    if (value) {\n      return value;\n    } else if (options.type !== 'select') {\n      return '';\n    } else if (options.isSingle) {\n      return '';\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <SelectedInput\n      categoryKey={categoryKey}\n      value={defaultValue()}\n      selectOptions={selectOptions}\n      isVisible={isVisible}\n      setValue={setValue}\n      otherProps={otherProps}\n    />\n  );\n};\n\nToolbarInput.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  selectOptions: PropTypes.array,\n  isVisible: PropTypes.bool,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default ToolbarInput;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarGroup } from '@patternfly/react-core';\n\nimport CategoryDropdown from './CategoryDropdown';\nimport ToolbarInput from './ToolbarInput/';\nimport { optionsForCategories } from '../constants';\n\nconst FilterCategoriesGroup = ({\n  filterCategories,\n  filters,\n  handleSearch,\n  setFilters,\n}) => {\n  const [currentCategory, setCurrentCategory] = useState(\n    Object.keys(filterCategories)[0]\n  );\n\n  return (\n    <ToolbarGroup variant=\"filter-group\">\n      <CategoryDropdown\n        selected={currentCategory}\n        setSelected={setCurrentCategory}\n        categories={Object.keys(filterCategories).map((el) => ({\n          key: el,\n          name: optionsForCategories[el].name,\n        }))}\n      />\n      {Object.keys(filterCategories).map((key) => (\n        <ToolbarInput\n          key={key}\n          categoryKey={key}\n          value={filters[key]}\n          selectOptions={filterCategories[key]}\n          isVisible={currentCategory === key}\n          setValue={(value) => {\n            setFilters(key, value);\n            handleSearch(key, value);\n          }}\n        />\n      ))}\n    </ToolbarGroup>\n  );\n};\n\nFilterCategoriesGroup.propTypes = {\n  filterCategories: PropTypes.object.isRequired,\n  filters: PropTypes.object.isRequired,\n  handleSearch: PropTypes.func.isRequired,\n  setFilters: PropTypes.func.isRequired,\n};\n\nexport default FilterCategoriesGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { SplitItem, ToolbarGroup, Split } from '@patternfly/react-core';\n\nimport ToolbarInput from './ToolbarInput/';\n\nimport { today } from '../../../Utilities/helpers';\n\nconst getDateByDays = (days, format = true) => {\n  const date = today(days);\n  return format ? date.toISOString().split(/T/)[0] : date;\n};\n\nconst strToDate = (date) => {\n  const nums = date.split('-');\n  return new Date(nums[0], nums[1] - 1, nums[2]);\n};\n\nconst QuickDateGroup = ({ filters, handleSearch, setFilters, values }) => {\n  const endDate = filters.end_date || getDateByDays(0, true);\n  const startDate = filters.start_date || getDateByDays(-30, true);\n\n  return (\n    <ToolbarGroup variant=\"filter-group\">\n      <ToolbarInput\n        categoryKey=\"quick_date_range\"\n        value={filters.quick_date_range}\n        selectOptions={values}\n        setValue={(value) => setFilters('quick_date_range', value)}\n      />\n      {filters.quick_date_range && filters.quick_date_range.includes('custom') && (\n        <Split hasGutter>\n          <SplitItem>\n            <ToolbarInput\n              categoryKey=\"start_date\"\n              value={startDate}\n              setValue={(e) => {\n                setFilters('start_date', e);\n                handleSearch('start_date', e);\n              }}\n              validators={[\n                (date) =>\n                  typeof endDate === 'string' && date > strToDate(endDate)\n                    ? 'Must not be after end date'\n                    : '',\n              ]}\n            />\n          </SplitItem>\n          <SplitItem style={{ paddingTop: '6px' }}>to</SplitItem>\n          <SplitItem>\n            <ToolbarInput\n              categoryKey=\"end_date\"\n              value={endDate}\n              setValue={(e) => {\n                setFilters('end_date', e);\n                handleSearch('end_date', e);\n              }}\n              validators={[\n                (date) => {\n                  if (\n                    typeof startDate === 'string' &&\n                    date < strToDate(startDate)\n                  ) {\n                    return 'Must not be before start date';\n                  }\n\n                  if (date > today()) {\n                    return 'Must not be after today';\n                  }\n\n                  return '';\n                },\n              ]}\n            />\n          </SplitItem>\n        </Split>\n      )}\n    </ToolbarGroup>\n  );\n};\n\nQuickDateGroup.propTypes = {\n  filters: PropTypes.object.isRequired,\n  handleSearch: PropTypes.func.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  values: PropTypes.array.isRequired,\n};\n\nexport default QuickDateGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarGroup, Button } from '@patternfly/react-core';\nimport { SortAmountDownIcon, SortAmountUpIcon } from '@patternfly/react-icons';\n\nimport ToolbarInput from './ToolbarInput';\n\nconst SortByGroup = ({ filters, handleSearch, setFilters, sort_options }) => (\n  <ToolbarGroup variant=\"filter-group\">\n    <ToolbarInput\n      categoryKey=\"sort_options\"\n      value={filters.sort_options}\n      selectOptions={sort_options}\n      setValue={(value) => {\n        setFilters('sort_options', value);\n        handleSearch('sort_options', value);\n      }}\n    />\n    <Button\n      variant=\"control\"\n      onClick={() => {\n        setFilters('sort_order', filters.sort_order === 'asc' ? 'desc' : 'asc');\n        handleSearch(\n          'sort_order',\n          filters.sort_order === 'asc' ? 'desc' : 'asc'\n        );\n      }}\n    >\n      {filters.sort_order === 'asc' && <SortAmountUpIcon />}\n      {filters.sort_order === 'desc' && <SortAmountDownIcon />}\n    </Button>\n  </ToolbarGroup>\n);\n\nSortByGroup.propTypes = {\n  filters: PropTypes.object.isRequired,\n  handleSearch: PropTypes.func.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  sort_options: PropTypes.array.isRequired,\n};\n\nexport default SortByGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, Switch } from '@patternfly/react-core';\nimport {\n  Card,\n  CardTitle,\n  CardBody,\n  CardActions,\n  CardHeader,\n} from '@patternfly/react-core';\nimport { QuestionCircleIcon, TimesIcon } from '@patternfly/react-icons';\n\n/* TODO: For future work: make settings more modular for different pages */\nconst SettingsPanel = ({\n  filters,\n  handleSearch,\n  setFilters,\n  settingsExpanded,\n  setSettingsExpanded,\n}) => (\n  <Card isFlat style={{ backgroundColor: '#EEEEEE' }}>\n    <CardHeader>\n      <CardActions>\n        <Button\n          variant=\"plain\"\n          onClick={() => setSettingsExpanded(!settingsExpanded)}\n        >\n          <TimesIcon />\n        </Button>\n      </CardActions>\n      <CardTitle>Settings</CardTitle>\n    </CardHeader>\n    <CardBody>\n      <Switch\n        id=\"showRootWorkflowJobs\"\n        label=\"Ignore nested workflows and jobs\"\n        labelOff=\"Ignore nested workflows and jobs\"\n        isChecked={filters.only_root_workflows_and_standalone_jobs}\n        onChange={(val) => {\n          setFilters('only_root_workflows_and_standalone_jobs', val);\n          handleSearch('only_root_workflows_and_standalone_jobs', val);\n        }}\n      />\n      <Tooltip\n        position={'top'}\n        content={\n          <div>\n            {' '}\n            If enabled, nested workflows and jobs will not be included in the\n            overall totals. Enable this option to filter out duplicate entries.\n          </div>\n        }\n      >\n        <QuestionCircleIcon />\n      </Tooltip>\n    </CardBody>\n  </Card>\n);\n\nSettingsPanel.propTypes = {\n  filters: PropTypes.object.isRequired,\n  handleSearch: PropTypes.func.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  settingsExpanded: PropTypes.bool.isRequired,\n  setSettingsExpanded: PropTypes.func.isRequired,\n};\n\nexport default SettingsPanel;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  Button,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { FilterIcon, CogIcon } from '@patternfly/react-icons';\n\nimport { optionsForCategories } from './constants';\nimport {\n  FilterCategoriesGroup,\n  QuickDateGroup,\n  SortByGroup,\n  SettingsPanel,\n} from './Groups/';\nimport { useHistory } from 'react-router-dom';\nimport {\n  encodeNonDefaultQueryString,\n  parseQueryString,\n  mergeParams,\n  removeParams,\n  replaceParams,\n} from '../../Utilities/qs';\n\nconst FilterableToolbar = ({\n  categories,\n  filters,\n  qsConfig,\n  setFilters,\n  pagination = null,\n  hasSettings = false,\n  additionalControls = [],\n  hideQuickDateRange = false,\n  hideSortOptions = false,\n}) => {\n  const [settingsExpanded, setSettingsExpanded] = useState(false);\n  const { quick_date_range, sort_options, ...restCategories } = categories;\n  const history = useHistory();\n\n  // Filter out elements which are not in the option object.\n  const filterCategories = Object.keys(restCategories)\n    .filter((key) => Object.keys(optionsForCategories).includes(key))\n    .reduce((obj, key) => {\n      obj[key] = restCategories[key];\n      return obj;\n    }, {});\n\n  const handleSearch = (key, value) => {\n    let params = parseQueryString(qsConfig, history.location.search);\n    params = replaceParams(params, { [key]: value });\n    params = mergeParams(params, { [key]: value });\n    if (value === '' || value.length === 0)\n      params = removeParams(qsConfig, params, { [key]: params[key] });\n    pushHistoryState(params, qsConfig);\n  };\n\n  const handleRemoveAll = (qsConfig) => {\n    // remove everything in oldParams except for page_size and order_by\n    const oldParams = parseQueryString(qsConfig, history.location.search);\n    const oldParamsClone = { ...oldParams };\n    delete oldParamsClone.limit;\n    delete oldParamsClone.sort_by;\n    pushHistoryState(\n      removeParams(qsConfig, oldParams, oldParamsClone),\n      qsConfig\n    );\n  };\n\n  const pushHistoryState = (params, qsConfig) => {\n    const { pathname } = history.location;\n    const nonNamespacedParams = parseQueryString({}, history.location.search);\n    const encodedParams = encodeNonDefaultQueryString(\n      qsConfig,\n      params,\n      nonNamespacedParams\n    );\n    history.push(encodedParams ? `${pathname}?${encodedParams}` : pathname);\n  };\n\n  return (\n    <>\n      <Toolbar\n        id={`${qsConfig.namespace}-filterable-toolbar-with-chip-groups`}\n        clearAllFilters={() => {\n          handleRemoveAll(qsConfig);\n          setFilters(null, null);\n        }}\n        collapseListedFiltersBreakpoint=\"xl\"\n      >\n        <ToolbarContent>\n          <Button variant=\"control\">\n            <FilterIcon />\n          </Button>\n          {Object.keys(filterCategories).length > 0 && (\n            <FilterCategoriesGroup\n              filterCategories={filterCategories}\n              filters={filters}\n              setFilters={setFilters}\n              handleSearch={handleSearch}\n            />\n          )}\n          {!hideQuickDateRange && quick_date_range && (\n            <QuickDateGroup\n              filters={filters}\n              setFilters={setFilters}\n              values={quick_date_range}\n              handleSearch={handleSearch}\n            />\n          )}\n          {!hideSortOptions && sort_options && (\n            <SortByGroup\n              filters={filters}\n              setFilters={setFilters}\n              sort_options={sort_options}\n              handleSearch={handleSearch}\n            />\n          )}\n          {hasSettings && (\n            <ToolbarItem>\n              <Button\n                variant=\"plain\"\n                onClick={() => setSettingsExpanded(!settingsExpanded)}\n                aria-label=\"settings\"\n                isActive={settingsExpanded}\n              >\n                <CogIcon />\n              </Button>\n            </ToolbarItem>\n          )}\n          {additionalControls.length > 0 && (\n            <ToolbarGroup>\n              {additionalControls.map((control, idx) => (\n                <ToolbarItem key={idx}>{control}</ToolbarItem>\n              ))}\n            </ToolbarGroup>\n          )}\n          {pagination && (\n            <ToolbarItem\n              variant=\"pagination\"\n              visibility={{ default: 'hidden', lg: 'visible' }}\n            >\n              {pagination}\n            </ToolbarItem>\n          )}\n        </ToolbarContent>\n        {settingsExpanded && (\n          <SettingsPanel\n            filters={filters}\n            setFilters={setFilters}\n            handleSearch={handleSearch}\n            settingsExpanded={settingsExpanded}\n            setSettingsExpanded={setSettingsExpanded}\n          />\n        )}\n      </Toolbar>\n    </>\n  );\n};\n\nFilterableToolbar.propTypes = {\n  categories: PropTypes.object.isRequired,\n  qsConfig: PropTypes.object.isRequired,\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  pagination: PropTypes.object,\n  hasSettings: PropTypes.bool,\n  additionalControls: PropTypes.array,\n  hideSortOptions: PropTypes.bool,\n  hideQuickDateRange: PropTypes.bool,\n};\n\nexport default FilterableToolbar;\n","import Toolbar from './Toolbar';\nexport default Toolbar;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport currencyFormatter from '../Utilities/currencyFormatter';\n\nclass Tooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip-base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, 0) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', 92)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.name = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', -2)\n      .text('Template name');\n    this.savings = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 52)\n      .attr('font-size', 12)\n      .attr('font-weight', 'bold')\n      .attr('fill', 'white')\n      .text('Total savings $0');\n    this.manualCost = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', 16)\n      .text('Manual cost $0');\n    this.automationCost = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', 34)\n      .text('Automation cost $0');\n  }\n\n  handleMouseOver = (d) => {\n    let name;\n    let savings;\n    let manualCost;\n    let automationCost;\n    const scrollLeftOffset = d3.select('#d3-roi-chart-root').node().scrollLeft;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10 +\n      scrollLeftOffset;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      30;\n    if (!d) {\n      return;\n    } else {\n      savings = currencyFormatter(+d.delta);\n      name = d.name;\n      manualCost = currencyFormatter(+d.manualCost);\n      automationCost = currencyFormatter(+d.automatedCost);\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n    this.name.text('' + name);\n    this.savings.text(`Total savings ${savings}`);\n    this.manualCost.text(`Manual Cost ${manualCost}`);\n    this.automationCost.text(`Automation Cost ${automationCost}`);\n    this.nameWidth = this.name.node().getComputedTextLength();\n    this.savingsWidth = this.savings.node().getComputedTextLength();\n    this.manualCostWidth = this.manualCost.node().getComputedTextLength();\n    this.automationCostWidth = this.automationCost\n      .node()\n      .getComputedTextLength();\n    this.widestTextElem = d3.max([\n      this.nameWidth,\n      this.savingsWidth,\n      this.automationCostWidth,\n      this.manualCostWidth,\n    ]);\n\n    const maxTextPerc = (this.widestTextElem / this.boxWidth) * 100;\n    const threshold = 85;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 15) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.name.attr('x', -(toolTipWidth - 7));\n      this.savings.attr('x', -(toolTipWidth - 7));\n      this.manualCost.attr('x', -(toolTipWidth - 7));\n      this.automationCost.attr('x', -(toolTipWidth - 7));\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 15) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.name.attr('x', 20);\n      this.savings.attr('x', 20);\n      this.manualCost.attr('x', 20);\n      this.automationCost.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass TopTemplatesSavings extends Component {\n  constructor(props) {\n    super(props);\n    this.init = this.init.bind(this);\n    this.draw = this.draw.bind(this);\n    this.resize = this.resize.bind(this);\n    this.state = {\n      timeout: null,\n    };\n  }\n\n  // Methods\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  init() {\n    this.draw();\n  }\n\n  draw() {\n    // Use PF chart color\n    const color = '#0066CC'; //blue\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const { data } = this.props;\n    let width;\n    // adjust chart width to support larger datasets\n    if (data.length >= 15) {\n      const containerWidth = d3.select('.automation-wrapper').node();\n      width =\n        containerWidth.getBoundingClientRect().width -\n        this.props.margin.left -\n        this.props.margin.right;\n    } else {\n      width = this.props.getWidth();\n    }\n\n    const height = this.props.getHeight();\n    const x = d3.scaleBand().rangeRound([0, width]).padding(0.45);\n    const y = d3.scaleLinear().range([height, 0]);\n    // format our X Axis ticks\n    let ticks;\n    ticks = data.map((d) => d.name);\n    const formatYAxisValue = d3.format('.2s');\n    const xAxis = d3.axisBottom(x).tickValues(ticks);\n\n    const yAxis = d3\n      .axisLeft(y)\n      .ticks(8)\n      .tickFormat((d) => formatYAxisValue(d).replace('G', 'B'))\n      .tickSize(-width, 0, 0);\n\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n\n    const taskNames = data.map((d) => d.name);\n    const tooltip = new Tooltip({\n      svg: '#' + this.props.id,\n    });\n    x.domain(taskNames);\n    y.domain([0, d3.max(data, (d) => d.delta * 1.15) || 8]);\n\n    // add y axis\n    svg\n      .append('g')\n      .attr('class', 'y axis')\n      .call(yAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7')\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 6)\n      .attr('dy', '.71em')\n      .style('text-anchor', 'end')\n      .style('font-weight', 'bold')\n      .text('Value');\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Savings per template ($)');\n\n    // add x axis\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n      .selectAll('text')\n      .style('text-anchor', 'start')\n      .attr('dx', '0.75em')\n      .attr('dy', -x.bandwidth() / 1.45 - 8)\n      .attr('transform', 'rotate(-90)');\n\n    svg.selectAll('.x-axis line').attr('stroke', 'transparent');\n\n    svg\n      .selectAll('.bar')\n      .data(data)\n      .enter()\n      .append('rect')\n      .attr('x', (d) => x(d.name))\n      .attr('width', x.bandwidth())\n      .attr('y', (d) => y(d.delta))\n      .style('fill', () => color)\n      .attr('height', (d) => height - y(d.delta))\n      .on('mouseover', function (d) {\n        d3.select(this).style('fill', d3.rgb(color).darker(1));\n        tooltip.handleMouseOver(d);\n      })\n      .on('mousemove', tooltip.handleMouseOver)\n      .on('mouseout', function () {\n        d3.select(this).style('fill', color);\n        tooltip.handleMouseOut();\n      });\n  }\n\n  componentDidMount() {\n    this.init();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate() {\n    this.init();\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nTopTemplatesSavings.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n};\n\nexport default initializeChart(TopTemplatesSavings);\n","import styled from 'styled-components';\nimport { CardTitle } from '@patternfly/react-core';\n\nexport const BorderedCardTitle = styled(CardTitle)`\n  border-bottom: 1px solid #d7d7d7;\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle, Title } from '@patternfly/react-core';\nimport currencyFormatter from '../../Utilities/currencyFormatter';\n\nconst TotalSavings = ({ totalSavings = 0 }) => (\n  <Card style={{ borderTop: '3px solid #2B9AF3' }}>\n    <CardTitle style={{ paddingBottom: '0' }}>Total savings</CardTitle>\n    <CardBody>\n      <Title\n        headingLevel=\"h3\"\n        size=\"4xl\"\n        style={{ color: 'var(--pf-global--success-color--200)' }}\n      >\n        {currencyFormatter(totalSavings)}\n      </Title>\n    </CardBody>\n  </Card>\n);\n\nTotalSavings.propTypes = {\n  totalSavings: PropTypes.number,\n};\n\nexport default TotalSavings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Card,\n  CardBody,\n  InputGroup,\n  InputGroupText,\n  TextInput,\n} from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst validFloat = (value) => {\n  const floatValue = parseFloat(value);\n  return floatValue && floatValue >= 0 ? value : '';\n};\n\nconst CalculationCost = ({\n  costManual = '0',\n  setCostManual = () => {},\n  costAutomation = '0',\n  setCostAutomation = () => {},\n}) => (\n  <Card>\n    <CardTitle>Calculate your automation</CardTitle>\n    <CardBody>\n      <InputAndText>\n        <p>Manual cost of automation</p>\n        <em style={{ color: 'var(--pf-global--Color--dark-200)' }}>\n          (e.g. average salary of mid-level Software Engineer)\n        </em>\n        <InputGroup style={{ width: '50%' }}>\n          <InputGroupText>\n            <DollarSignIcon />\n          </InputGroupText>\n          <TextInput\n            id=\"manual-cost\"\n            type=\"number\"\n            aria-label=\"manual-cost\"\n            value={costManual}\n            onChange={(e) => setCostManual(validFloat(e))}\n          />\n          <InputGroupText>/hr</InputGroupText>\n        </InputGroup>\n      </InputAndText>\n      <InputAndText style={{ paddingTop: '10px' }}>\n        <p>Automated process cost</p>\n        <InputGroup style={{ width: '50%' }}>\n          <InputGroupText>\n            <DollarSignIcon />\n          </InputGroupText>\n          <TextInput\n            id=\"automation-cost\"\n            type=\"number\"\n            aria-label=\"automation-cost\"\n            value={costAutomation}\n            onChange={(e) => setCostAutomation(validFloat(e))}\n          />\n          <InputGroupText>/hr</InputGroupText>\n        </InputGroup>\n      </InputAndText>\n    </CardBody>\n  </Card>\n);\n\nCalculationCost.propTypes = {\n  costManual: PropTypes.string,\n  setCostManual: PropTypes.func,\n  costAutomation: PropTypes.string,\n  setCostAutomation: PropTypes.func,\n};\n\nexport default CalculationCost;\n","import React from 'react';\n\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst AutomationFormula = () => (\n  <Card style={{ height: '100%' }}>\n    <CardTitle>Automation formula</CardTitle>\n    <CardBody>\n      <p>\n        <b>Manual cost for template x</b> =\n        <em>\n          (time for a manual run on one host in hours * (sum of all hosts across\n          all job runs) ) * cost per hour\n        </em>\n      </p>\n      <p>\n        <b>Automation cost for template x</b> =\n        <em>\n          cost of automation per hour * sum of total elapsed hours for a\n          template\n        </em>\n      </p>\n      <p>\n        <b>Savings</b> =\n        <em>Sum of (manual cost - automation cost) across all templates</em>\n      </p>\n    </CardBody>\n  </Card>\n);\n\nexport default AutomationFormula;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  InputGroup,\n  InputGroupText,\n  TextInput,\n  Tooltip,\n  Popover,\n} from '@patternfly/react-core';\nimport {\n  InfoCircleIcon,\n  ToggleOnIcon,\n  ToggleOffIcon,\n} from '@patternfly/react-icons';\n\nimport {\n  convertSecondsToMins,\n  convertMinsToSeconds,\n  capitalize,\n} from '../../Utilities/helpers';\n\nimport currencyFormatter from '../../Utilities/currencyFormatter';\n\nconst TemplateDetail = styled.div`\n  em {\n    display: block;\n    padding: 5px 0;\n  }\n\n  @media (max-width: 1490px) {\n    display: block;\n\n    em {\n      padding: 10px 0;\n      display: block;\n    }\n  }\n`;\n\nconst TemplateDetailSubTitle = styled.em`\n  color: var(--pf-global--Color--dark-200);\n`;\n\nconst TooltipWrapper = styled.div`\n  p {\n    text-align: left;\n  }\n`;\n\nconst IconGroup = styled.div`\n  & svg {\n    fill: var(--pf-global--Color--dark-200);\n\n    :hover {\n      cursor: pointer;\n    }\n\n    :first-of-type {\n      margin-right: 10px;\n      margin-left: 10px;\n\n      @media (max-width: 1350px) {\n        margin-left: 0;\n      }\n    }\n  }\n`;\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst showSortAttr = (details, sortBy) => {\n  const trimmed = sortBy.split(':')[0];\n  const sortAttribute = Object.keys(details).map((k) =>\n    k === trimmed ? `${details[k]}` : null\n  );\n\n  return (\n    <TemplateDetailSubTitle>\n      {capitalize(trimmed.split('_').join(' '))}: {sortAttribute}\n    </TemplateDetailSubTitle>\n  );\n};\n\nconst QuestionIconTooltip = ({ details }) => (\n  <Popover\n    aria-label=\"template detail popover\"\n    position=\"left\"\n    bodyContent={\n      <TooltipWrapper>\n        {Object.keys(details).map((k, i) => (\n          <p key={i}>\n            <b>{capitalize(k.split('_').join(' '))}</b>: {details[k]}\n          </p>\n        ))}\n      </TooltipWrapper>\n    }\n  >\n    <InfoCircleIcon />\n  </Popover>\n);\n\nQuestionIconTooltip.propTypes = {\n  details: PropTypes.object,\n};\n\nconst TopTemplates = ({\n  data = [],\n  sortBy = '',\n  setDataRunTime = () => {},\n  setEnabled = () => {},\n  redirectToJobExplorer = () => {},\n}) => (\n  <Card>\n    <CardBody>\n      <p>Enter the time it takes to run the following templates manually.</p>\n      {data.map((d) => (\n        <div key={d.id}>\n          <Tooltip content={'List of jobs for this template for past 30 days'}>\n            <Button\n              style={{ padding: '15px 0 10px' }}\n              component=\"a\"\n              onClick={() => redirectToJobExplorer(d.id)}\n              variant=\"link\"\n            >\n              {d.name}\n            </Button>\n          </Tooltip>\n          <TemplateDetail>\n            <InputAndText key={d.id}>\n              <InputGroup>\n                <TextInput\n                  id={d.id}\n                  type=\"number\"\n                  aria-label=\"time run manually\"\n                  value={convertSecondsToMins(d.avgRunTime)}\n                  onChange={(minutes) =>\n                    setDataRunTime(convertMinsToSeconds(minutes), d.id)\n                  }\n                />\n                <InputGroupText>min</InputGroupText>\n              </InputGroup>\n            </InputAndText>\n            <TemplateDetailSubTitle>\n              x {d.successful_hosts_total} host runs\n            </TemplateDetailSubTitle>\n            {showSortAttr(d, sortBy)}\n            <IconGroup>\n              <QuestionIconTooltip details={d} />\n              {!d.enabled && (\n                <ToggleOffIcon onClick={() => setEnabled(d.id)(true)} />\n              )}\n              {d.enabled && (\n                <ToggleOnIcon onClick={() => setEnabled(d.id)(false)} />\n              )}\n            </IconGroup>\n          </TemplateDetail>\n          <p style={{ color: '#486B00' }}>{currencyFormatter(+d.delta)}</p>\n        </div>\n      ))}\n    </CardBody>\n  </Card>\n);\n\nTopTemplates.propTypes = {\n  data: PropTypes.array,\n  setDataRunTime: PropTypes.func,\n  redirectToJobExplorer: PropTypes.func,\n  deselectedIds: PropTypes.array,\n  setDeselectedIds: PropTypes.func,\n  setEnabled: PropTypes.func,\n  sortBy: PropTypes.string,\n};\n\nexport default TopTemplates;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport {\n  Card,\n  CardBody,\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n} from '@patternfly/react-core';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\n// Imports from custom components\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\n// Imports from API\nimport { preflightRequest, readROI, readROIOptions } from '../../Api/';\n\n// Imports from utilities\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport { roi as roiConst } from '../../Utilities/constants';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { calculateDelta, convertSecondsToHours } from '../../Utilities/helpers';\n\n// Chart\nimport TopTemplatesSavings from '../../Charts/ROITopTemplates';\n\n// Local imports\nimport { BorderedCardTitle } from './helpers';\nimport TotalSavings from './TotalSavings';\nimport CalculationCost from './CalculationCost';\nimport AutomationFormula from './AutomationFormula';\nimport TopTemplates from './TopTemplates';\nimport useRequest from '../../Utilities/useRequest';\nimport { getQSConfig } from '../../Utilities/qs';\n\nconst mapApi = ({ items = [] }) =>\n  items.map((el) => ({\n    ...el,\n    delta: 0,\n    avgRunTime: 3600,\n    manualCost: 0,\n    automatedCost: 0,\n    enabled: true,\n  }));\n\nconst filterDisabled = (data) => data.filter(({ enabled }) => enabled);\n\nconst updateDeltaCost = (data, costAutomation, costManual) =>\n  data.map((el) => {\n    const manualCost =\n      convertSecondsToHours(el.avgRunTime) *\n      el.successful_hosts_total *\n      parseFloat(costManual);\n    const automatedCost =\n      convertSecondsToHours(el.successful_elapsed_total) *\n      parseFloat(costAutomation);\n    const delta = calculateDelta(automatedCost, manualCost);\n\n    return { ...el, delta, manualCost, automatedCost };\n  });\n\nconst computeTotalSavings = (data) =>\n  data.reduce((sum, curr) => sum + curr.delta, 0);\n\nconst qsConfig = getQSConfig('clusters', { ...roiConst.defaultParams }, [\n  'limit',\n  'offset',\n]);\n\nconst AutomationCalculator = ({ history }) => {\n  const toJobExplorer = useRedirect(history, 'jobExplorer');\n  const [costManual, setCostManual] = useState('50');\n  const [costAutomation, setCostAutomation] = useState('20');\n\n  // params from toolbar/searchbar\n  const { queryParams, setFromToolbar } = useQueryParams(qsConfig);\n\n  const {\n    error: preflightError,\n    isLoading: preflightIsLoading,\n    request: setPreflight,\n  } = useRequest(\n    useCallback(async () => {\n      const preflight = await preflightRequest();\n      return { preflight: preflight };\n    }, []),\n    { preflight: {}, preflightError, preflightIsLoading }\n  );\n\n  const {\n    result: { options },\n    error: optionsError,\n    isLoading: optionsIsLoading,\n    request: setOptions,\n  } = useRequest(\n    useCallback(async () => {\n      const options = await readROIOptions({ params: queryParams });\n      return { options: options };\n    }, [queryParams]),\n    { options: {}, optionsError, optionsIsLoading }\n  );\n\n  const {\n    result: { data: api },\n    error: apiError,\n    isLoading: apiIsLoading,\n    request: fetchEndpoint,\n    setValue,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await readROI({ params: queryParams });\n      return {\n        data: updateDeltaCost(mapApi(response), costAutomation, costManual),\n      };\n    }, [queryParams]),\n    { data: [], apiError, apiIsLoading }\n  );\n\n  /**\n   * Modifies one elements avgRunTime in the unfilteredData\n   * and updates all calculated fields.\n   * Used in top templates.\n   */\n  const setDataRunTime = (seconds, id) => {\n    const updatedData = api.map((el) => {\n      if (el.id === id) {\n        el.avgRunTime = seconds;\n        const updatedDelta = updateDeltaCost(\n          [el],\n          costAutomation,\n          costManual\n        )[0];\n        return updatedDelta;\n      } else {\n        return el;\n      }\n    });\n\n    setValue({ data: updatedData });\n  };\n\n  const setEnabled = (id) => (value) => {\n    setValue({\n      data: api.map((el) => (el.id === id ? { ...el, enabled: value } : el)),\n    });\n  };\n\n  useEffect(() => {\n    setPreflight();\n    setOptions();\n  }, []);\n\n  /**\n   * Recalculates the delta and costs in the data after the cost is changed.\n   */\n  useEffect(() => {\n    setValue({ data: updateDeltaCost(api, costAutomation, costManual) });\n  }, [costAutomation, costManual]);\n\n  /**\n   * Get data from API depending on the queryParam.\n   */\n  useEffect(() => {\n    setOptions();\n    fetchEndpoint();\n  }, [queryParams]);\n\n  /**\n   * Function to redirect to the job explorer page\n   * with the same filters as is used here.\n   */\n  const redirectToJobExplorer = (templateId) => {\n    const initialQueryParams = {\n      quick_date_range: 'last_30_days',\n      template_id: [templateId],\n    };\n    toJobExplorer(initialQueryParams);\n  };\n\n  const renderLeft = () => (\n    <Stack hasGutter>\n      <StackItem>\n        <Card>\n          <BorderedCardTitle>Automation savings</BorderedCardTitle>\n          <CardBody>\n            {apiIsLoading && <LoadingState />}\n            {apiError && <ApiErrorState message={apiError.error} />}\n            {api.length <= 0 && <NoData />}\n            {api.length > 0 && (\n              <React.Fragment>\n                <TopTemplatesSavings\n                  margin={{ top: 20, right: 20, bottom: 20, left: 70 }}\n                  id=\"d3-roi-chart-root\"\n                  data={filterDisabled(api)}\n                />\n                <p style={{ textAlign: 'center' }}>Templates</p>\n              </React.Fragment>\n            )}\n          </CardBody>\n        </Card>\n      </StackItem>\n      <StackItem isFilled>\n        <AutomationFormula />\n      </StackItem>\n    </Stack>\n  );\n\n  const renderRight = () => (\n    <Stack hasGutter>\n      <StackItem>\n        <TotalSavings totalSavings={computeTotalSavings(filterDisabled(api))} />\n      </StackItem>\n      <StackItem>\n        <Stack>\n          <StackItem>\n            <CalculationCost\n              costManual={costManual}\n              setCostManual={setCostManual}\n              costAutomation={costAutomation}\n              setCostAutomation={setCostAutomation}\n            />\n          </StackItem>\n          <StackItem style={{ overflow: 'auto', maxHeight: '48vh' }}>\n            <TopTemplates\n              redirectToJobExplorer={redirectToJobExplorer}\n              data={api}\n              setDataRunTime={setDataRunTime}\n              setUnfilteredData={api}\n              setEnabled={setEnabled}\n              sortBy={queryParams.sort_by}\n            />\n          </StackItem>\n        </Stack>\n      </StackItem>\n    </Stack>\n  );\n\n  if (preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  const renderContents = () => {\n    if (preflightError) return <EmptyState preflightError={preflightError} />;\n    else if (api)\n      return (\n        <Grid hasGutter className=\"automation-wrapper\">\n          <GridItem span={9}>{renderLeft()}</GridItem>\n          <GridItem span={3}>{renderRight()}</GridItem>\n        </Grid>\n      );\n    else return <></>;\n  };\n\n  return (\n    <>\n      <PageHeader>\n        <PageHeaderTitle title={'Automation Calculator'} />\n        <FilterableToolbar\n          categories={options}\n          filters={queryParams}\n          qsConfig={qsConfig}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      <Main>{renderContents()}</Main>\n    </>\n  );\n};\n\nAutomationCalculator.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default AutomationCalculator;\n","import * as d3 from 'd3';\n\nclass Tooltip {\n  constructor(opts) {\n    this.svg = opts.svg;\n    this.colors = opts.colors;\n    this.draw();\n  }\n\n  draw() {\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 145;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -41)\n      .attr('rx', 2)\n      .attr('height', 110)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.circleSuccess = this.toolTipBase\n      .append('circle')\n      .attr('cx', 26)\n      .attr('cy', 0)\n      .attr('r', 8)\n      .attr('stroke', 'white')\n      .attr('fill', 'white');\n    this.circleFail = this.toolTipBase\n      .append('circle')\n      .attr('cx', 26)\n      .attr('cy', 26)\n      .attr('r', 8)\n      .attr('stroke', 'white')\n      .attr('fill', 'white');\n    this.successText = this.toolTipBase\n      .append('text')\n      .attr('x', 43)\n      .attr('y', 4)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Successful');\n    this.failText = this.toolTipBase\n      .append('text')\n      .attr('x', 43)\n      .attr('y', 28)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Failed');\n    this.successIcon = this.toolTipBase\n      .append('text')\n      .attr('class', 'fas fa-sm')\n      .attr('fill', this.colors(1))\n      .attr('x', 19)\n      .attr('y', 5)\n      .text('\\uf058');\n    this.failedIcon = this.toolTipBase\n      .append('text')\n      .attr('class', 'fas fa-sm')\n      .attr('fill', this.colors(0))\n      .attr('x', 20)\n      .attr('y', 31)\n      .text('\\uf06a');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 137)\n      .attr('y', -21)\n      .attr('font-size', 12)\n      .attr('text-anchor', 'end')\n      .text('No jobs');\n    this.successful = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 122)\n      .attr('y', 4)\n      .text('0');\n    this.failed = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 122)\n      .attr('y', 28)\n      .text('0');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('stroke', 'white')\n      .attr('x', 20)\n      .attr('y', -21)\n      .attr('font-size', 12)\n      .text('Never');\n    this.clickMore = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 20)\n      .attr('y', 55)\n      .attr('font-size', 12)\n      .text('Click for details');\n  }\n\n  handleMouseOver = (d) => {\n    let success = 0;\n    let fail = 0;\n    let total = 0;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    const formatTooltipDate = d3.timeFormat('%m/%d');\n    if (!d) {\n      return;\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n    if (d) {\n      success = d.RAN || 0;\n      fail = d.FAIL || 0;\n      total = d.TOTAL || 0;\n      this.date.text(formatTooltipDate(d.DATE || null));\n    }\n\n    if (d && d.data) {\n      success = d.data.RAN || 0;\n      fail = d.data.FAIL || 0;\n      total = d.data.TOTAL || 0;\n      this.date.text(formatTooltipDate(d.data.DATE || null));\n    }\n\n    this.jobs.text('' + total + ' jobs');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n    this.failed.text('' + fail);\n    this.successful.text('' + success);\n    this.successTextWidth = this.successful.node().getComputedTextLength();\n    this.failTextWidth = this.failed.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 40;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.circleSuccess.attr('cx', -adjustedWidth);\n      this.circleFail.attr('cx', -adjustedWidth);\n      this.failedIcon.attr('x', -adjustedWidth - 7);\n      this.successIcon.attr('x', -adjustedWidth - 7);\n      this.successText.attr('x', -adjustedWidth + 17);\n      this.failText.attr('x', -adjustedWidth + 17);\n      this.successful.attr('x', -this.successTextWidth - 20 - 12);\n      this.failed.attr('x', -this.failTextWidth - 20 - 12);\n      this.date.attr('x', -adjustedWidth - 5);\n      this.jobs.attr('x', -this.jobsWidth / 2 - 7);\n      this.clickMore.attr('x', -adjustedWidth);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.circleSuccess.attr('cx', 26);\n      this.circleFail.attr('cx', 26);\n      this.failedIcon.attr('x', 19);\n      this.successIcon.attr('x', 19);\n      this.successText.attr('x', 43);\n      this.failText.attr('x', 43);\n      this.successful.attr('x', adjustedWidth - this.successTextWidth);\n      this.failed.attr('x', adjustedWidth - this.failTextWidth);\n      this.date.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth);\n      this.clickMore.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nexport default Tooltip;\n","import React, { Component } from 'react';\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { stringify } from 'query-string';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\n\nclass BarChart extends Component {\n  constructor(props) {\n    super(props);\n    this.draw = this.draw.bind(this);\n    this.init = this.init.bind(this);\n    this.resize = this.resize.bind(this);\n    this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n    this.state = {\n      formattedData: [],\n      timeout: null,\n    };\n  }\n\n  redirectToJobExplorer({ data: { DATE: date } }) {\n    const { jobExplorer } = Paths;\n    const formattedDate = formatDate(date);\n    const initialQueryParams = {\n      start_date: formattedDate,\n      end_date: formattedDate,\n      quick_date_range: 'custom',\n      status: ['failed', 'successful'],\n      template_id: this.props.queryParams.template_id,\n      org_id: this.props.queryParams.org_id,\n      job_type: this.props.queryParams.job_type,\n    };\n\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    this.props.history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  }\n\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  init() {\n    this.draw();\n  }\n\n  // Methods\n  draw() {\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const parseTime = d3.timeParse('%Y-%m-%d');\n    let { data: unformattedData } = this.props;\n    const data = unformattedData.reduce(\n      (formatted, { created_date, successful_count, failed_count }) => {\n        let DATE = parseTime(created_date) || new Date();\n        let RAN = +successful_count || 0;\n        let FAIL = +failed_count || 0;\n        let TOTAL = +successful_count + failed_count || 0;\n        return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n      },\n      []\n    );\n    const width = this.props.getWidth();\n    const height = this.props.getHeight();\n    const x = d3.scaleBand().rangeRound([0, width]).padding(0.35); // percentage\n    const y = d3.scaleLinear().range([height, 0]);\n\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n    //[fail, success]\n    let colors = d3.scaleOrdinal(['#6EC664', '#A30000']);\n\n    const barTooltip = new Tooltip({\n      svg: '#' + this.props.id,\n      colors,\n    });\n    const status = ['FAIL', 'RAN'];\n\n    // stack our data\n    const stack = d3\n      .stack()\n      .keys(status)\n      .order(d3.stackOrderNone)\n      .offset(d3.stackOffsetNone);\n\n    const layers = stack(data);\n    // Scale the range of the data\n    x.domain(layers[0].map((d) => d.data.DATE));\n    y.domain([0, d3.max(layers[layers.length - 1], (d) => d[1] * 1.15) || 8]);\n    // Add the Y Axis\n    svg\n      .append('g')\n      .attr('class', 'y-axis')\n      .call(d3.axisLeft(y).tickSize(-width, 0, 0))\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.y-axis .tick text').attr('x', -5);\n    // text label for the y axis\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Jobs across all clusters');\n    // Add the X Axis\n    let ticks;\n    const maxTicks = Math.round(data.length / (data.length / 2));\n    ticks = data.map((d) => d.DATE);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n        .filter((item) => item);\n    }\n\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(\n        d3.axisBottom(x).tickValues(ticks).tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n      )\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n    // text label for the x axis\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n\n    const layer = svg\n      .selectAll('layer')\n      .data(layers)\n      .enter()\n      .append('g')\n      .attr('class', 'layer')\n      .style('fill', (_d, i) => colors(i));\n    layer\n      .selectAll('rect')\n      .data((d) => d)\n      .enter()\n      .append('rect')\n      .attr('x', (d) => x(d.data.DATE))\n      .attr('y', (d) => y(d[0]))\n      .attr('height', 0)\n      .attr('width', x.bandwidth() - 1)\n      .transition()\n      .duration(550)\n      .ease(d3.easeCubic)\n      .attr('y', (d) => y(d[1]))\n      .attr('height', (d) => y(d[0]) - y(d[1]));\n    layer\n      .selectAll('rect')\n      .on('mouseover', barTooltip.handleMouseOver)\n      .on('mousemove', barTooltip.handleMouseOver)\n      .on('mouseout', barTooltip.handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n  }\n\n  componentDidMount() {\n    this.init();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      this.init();\n    }\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nBarChart.propTypes = {\n  id: PropTypes.string,\n  queryParams: PropTypes.object,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  history: PropTypes.object,\n};\n\nexport default initializeChart(BarChart);\n","import React, { Component } from 'react';\nimport initializeChart from './BaseChart';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\nimport { stringify } from 'query-string';\nimport * as d3 from 'd3';\n\nclass LineChart extends Component {\n  constructor(props) {\n    super(props);\n    this.init = this.init.bind(this);\n    this.draw = this.draw.bind(this);\n    this.resize = this.resize.bind(this);\n    this.updateCluster = this.updateCluster.bind(this);\n    this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n    this.state = {\n      formattedData: [],\n      timeout: null,\n    };\n  }\n\n  redirectToJobExplorer({ DATE: date }) {\n    const { jobExplorer } = Paths;\n    const formattedDate = formatDate(date);\n    const initialQueryParams = {\n      start_date: formattedDate,\n      end_date: formattedDate,\n      quick_date_range: 'custom',\n      status: ['failed', 'successful'],\n      cluster_id: this.props.queryParams.cluster_id,\n      org_id: this.props.queryParams.org_id,\n      template_id: this.props.queryParams.template_id,\n      job_type: this.props.queryParams.job_type,\n    };\n\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    this.props.history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  }\n\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  updateCluster() {\n    this.init();\n  }\n  init() {\n    this.draw();\n  }\n  // Methods\n  draw() {\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const width = this.props.getWidth();\n    const height = this.props.getHeight();\n\n    function transition(path) {\n      path.transition().duration(1000).attrTween('stroke-dasharray', tweenDash);\n    }\n\n    function tweenDash() {\n      const l = this.getTotalLength();\n      const i = d3.interpolateString('0,' + l, l + ',' + l);\n      return function (t) {\n        return i(t);\n      };\n    }\n\n    const x = d3.scaleTime().rangeRound([0, width]);\n    const y = d3.scaleLinear().range([height, 0]);\n\n    //[success, fail, total]\n    let colors = d3.scaleOrdinal(['#6EC664', '#A30000', '#06C']);\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n      .attr('z', 100)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n    // Tooltip\n    const tooltip = new Tooltip({\n      svg: '#' + this.props.id,\n      colors,\n    });\n    const { data: unformattedData } = this.props;\n    const parseTime = d3.timeParse('%Y-%m-%d');\n\n    const data = unformattedData.reduce(\n      (formatted, { created_date, successful_count, failed_count }) => {\n        let DATE = parseTime(created_date) || new Date();\n        let RAN = +successful_count || 0;\n        let FAIL = +failed_count || 0;\n        let TOTAL = +successful_count + failed_count || 0;\n        return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n      },\n      []\n    );\n    // Scale the range of the data\n    x.domain(\n      d3.extent(data, function (d) {\n        return d.DATE;\n      })\n    );\n    y.domain([\n      0,\n      d3.max(data, function (d) {\n        return d.TOTAL * 1.15 || 8;\n      }),\n    ]);\n\n    const successLine = d3\n      .line()\n      .curve(d3.curveMonotoneX)\n      .x(function (d) {\n        return x(d.DATE);\n      })\n      .y(function (d) {\n        return y(d.RAN);\n      });\n\n    const failLine = d3\n      .line()\n      .defined((d) => !isNaN(d.FAIL))\n      .curve(d3.curveMonotoneX)\n      .x(function (d) {\n        return x(d.DATE);\n      })\n      .y(function (d) {\n        return y(d.FAIL);\n      });\n    // Add the Y Axis\n    svg\n      .append('g')\n      .attr('class', 'y-axis')\n      .call(d3.axisLeft(y).ticks(10).tickSize(-width))\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.y-axis .tick text').attr('x', -5);\n\n    // text label for the y axis\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Job runs');\n    // Add the X Axis\n    let ticks;\n    const maxTicks = Math.round(data.length / (data.length / 2));\n    ticks = data.map((d) => d.DATE);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n        .filter((item) => item);\n    }\n\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(\n        d3\n          .axisBottom(x)\n          .tickValues(ticks)\n          .tickSize(-height)\n          .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n      ) // \"Jan-01\"\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n    // text label for the x axis\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n    const vertical = svg\n      .append('path')\n      .attr('class', 'mouse-line')\n      .style('stroke', 'black')\n      .style('stroke-width', '3px')\n      .style('stroke-dasharray', '3, 3')\n      .style('opacity', '0');\n\n    const handleMouseOver = function (d) {\n      tooltip.handleMouseOver(d);\n      // show vertical line\n      vertical.transition().style('opacity', '1');\n    };\n\n    const handleMouseMove = function () {\n      let intersectX = this.cx.baseVal.value;\n      vertical.attr('d', function () {\n        let d = 'M' + intersectX + ',' + height;\n        d += ' ' + intersectX + ',' + 0;\n        return d;\n      });\n    };\n\n    const handleMouseOut = function () {\n      // hide tooltip\n      tooltip.handleMouseOut();\n      // hide vertical line\n      vertical.transition().style('opacity', 0);\n    };\n\n    // Add the successLine path.\n    svg\n      .append('path')\n      .data([data])\n      .attr('class', 'line')\n      .style('fill', 'none')\n      .style('stroke', () => colors(1))\n      .attr('stroke-width', 2)\n      .attr('d', successLine)\n      .call(transition);\n\n    // Add the failLine path.\n    svg\n      .append('path')\n      .data([data])\n      .attr('class', 'line')\n      .style('fill', 'none')\n      .style('stroke', () => colors(0))\n      .attr('stroke-width', 2)\n      .attr('d', failLine)\n      .call(transition);\n    svg\n      .selectAll('dot')\n      .data(data)\n      .enter()\n      .append('circle')\n      .attr('r', 3)\n      .style('stroke', () => colors(1))\n      .style('fill', () => colors(1))\n      .attr('cx', function (d) {\n        return x(d.DATE);\n      })\n      .attr('cy', function (d) {\n        return y(d.RAN);\n      })\n\n      .on('mouseover', handleMouseOver)\n      .on('mousemove', handleMouseMove)\n      .on('mouseout', handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n    // create our failLine circles\n    svg\n      .selectAll('dot')\n      .data(data)\n      .enter()\n      .append('circle')\n      .attr('r', 3)\n      .style('stroke', () => colors(0))\n      .style('fill', () => colors(0))\n      .attr('cx', function (d) {\n        return x(d.DATE);\n      })\n      .attr('cy', function (d) {\n        return y(d.FAIL);\n      })\n      .on('mouseover', handleMouseOver)\n      .on('mousemove', handleMouseMove)\n      .on('mouseout', handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n  }\n\n  componentDidMount() {\n    this.updateCluster();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      this.updateCluster();\n    }\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nLineChart.propTypes = {\n  id: PropTypes.string,\n  queryParams: PropTypes.object,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  history: PropTypes.object,\n};\n\nexport default initializeChart(LineChart);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { trimStr } from '../Utilities/helpers';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n  DataList,\n  DataListItem as PFDataListItem,\n  DataListCell as PFDataListCell,\n} from '@patternfly/react-core';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst ModulesList = ({ modules, isLoading }) => (\n  <DataList\n    aria-label=\"Top Modules\"\n    style={{\n      maxHeight: '400px',\n      overflow: 'auto',\n      height: '400px',\n      background: 'white',\n    }}\n  >\n    <DataListItem aria-labelledby=\"top-modules-header\">\n      <DataListCell>\n        <h3>Top modules</h3>\n      </DataListCell>\n      <DataCellEnd>\n        <h3>Usage</h3>\n      </DataCellEnd>\n    </DataListItem>\n    {isLoading && (\n      <PFDataListItem\n        aria-labelledby=\"modules-loading\"\n        key={isLoading}\n        style={{ border: 'none' }}\n      >\n        <PFDataListCell>\n          <LoadingState />\n        </PFDataListCell>\n      </PFDataListItem>\n    )}\n    {!isLoading && modules.length <= 0 && (\n      <PFDataListItem\n        aria-labelledby=\"modules-no-data\"\n        key={isLoading}\n        style={{ border: 'none' }}\n      >\n        <PFDataListCell>\n          <NoData />\n        </PFDataListCell>\n      </PFDataListItem>\n    )}\n    {!isLoading &&\n      modules\n        .filter((module) => module.name !== null)\n        .map(({ name, host_task_count }, index) => (\n          <DataListItem aria-labelledby=\"top-modules-detail\" key={index}>\n            <DataListCell>\n              <span>{trimStr(name)}</span>\n            </DataListCell>\n            <DataCellEnd>{host_task_count}</DataCellEnd>\n          </DataListItem>\n        ))}\n  </DataList>\n);\n\nModulesList.propTypes = {\n  modules: PropTypes.array,\n  isLoading: PropTypes.bool,\n};\n\nexport default ModulesList;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst BarContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  width: 100%;\n  max-width: 100%;\n  height: 1rem;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst Bar = styled.div`\n  height: 100%;\n`;\n\nconst LabelsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  margin-bottom: 1rem;\n`;\n\nconst Label = styled.div`\n  padding-left: 2rem;\n  display: flex;\n  align-items: center;\n`;\n\nconst Square = styled.div`\n  width: 0.75rem;\n  height: 0.75rem;\n  margin-right: 0.5rem;\n`;\n\nconst whiteSpace = 0.15; // Currently in percent of total bar width\n\nfunction title(str) {\n  return str[0].toUpperCase() + str.slice(1).toLowerCase();\n}\n\nconst Breakdown = ({ categoryCount = {}, categoryColor }) => {\n  const totalCount = Object.values(categoryCount).reduce(\n    (accumulated, currentVal) => accumulated + currentVal\n  );\n\n  const sortedCategories = Object.keys(categoryCount)\n    .filter((category) => categoryCount[category] > 0)\n    .sort((category) => {\n      if (categoryCount[category] < categoryCount[category]) {\n        return 1; // Normally should be -1, but we want descending order\n      }\n      if (categoryCount[category] > categoryCount[category]) {\n        return -1;\n      }\n      return 0;\n    })\n    .map((category) => {\n      return {\n        name: category,\n        barSpacing: categoryCount[category] / totalCount,\n        color: categoryColor[category],\n      };\n    });\n\n  const remainingSpace = 1 - ((sortedCategories.length - 1) * whiteSpace) / 100;\n\n  return (\n    <>\n      <BarContainer>\n        {sortedCategories.map(({ barSpacing, color }, idx) => {\n          if (idx < sortedCategories.length - 1) {\n            return (\n              <React.Fragment key={idx}>\n                <Bar\n                  style={{\n                    backgroundColor: color,\n                    width: `${barSpacing * 100 * remainingSpace}%`,\n                  }}\n                />\n                <Bar\n                  style={{\n                    backgroundColor: 'transparent',\n                    width: `${whiteSpace}%`,\n                  }}\n                />\n              </React.Fragment>\n            );\n          } else {\n            return (\n              <React.Fragment key={idx}>\n                <Bar\n                  style={{\n                    backgroundColor: color,\n                    width: `${barSpacing * 100 * remainingSpace}%`,\n                  }}\n                />\n              </React.Fragment>\n            );\n          }\n        })}\n      </BarContainer>\n      <LabelsContainer>\n        {sortedCategories.map(({ name, color }) => (\n          <Label key={`label-${name}`}>\n            <Square style={{ backgroundColor: color }} />\n            <p>{title(name)}</p>\n          </Label>\n        ))}\n      </LabelsContainer>\n    </>\n  );\n};\n\nBreakdown.propTypes = {\n  categoryColor: PropTypes.object,\n  categoryCount: PropTypes.object,\n};\n\nexport default Breakdown;\n","import React, { useCallback, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport ApiErrorState from '../Components/ApiErrorState';\nimport NoResults from './NoResults';\nimport Breakdown from '../Components/Breakdown';\nimport JobStatus from '../Components/JobStatus';\nimport { Paths } from '../paths';\nimport { stringify } from 'query-string';\nimport { formatDateTime, formatJobType } from '../Utilities/helpers';\nimport { readJobExplorer } from '../Api/';\n\nimport { Button, Modal, ModalVariant } from '@patternfly/react-core';\nimport {\n  global_palette_blue_300,\n  global_palette_green_200,\n  global_palette_red_100,\n  global_palette_black_850,\n  global_palette_orange_300,\n  global_palette_purple_300,\n  global_palette_cyan_200,\n  global_palette_light_green_200,\n} from '@patternfly/react-tokens';\n\nimport {\n  DescriptionList,\n  DescriptionListTerm,\n  DescriptionListGroup,\n  DescriptionListDescription,\n  Divider,\n} from '@patternfly/react-core';\n\nimport {\n  TableComposable,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n} from '@patternfly/react-table';\nimport useRequest from '../Utilities/useRequest';\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 2rem;\n`;\n\nconst formatTopFailedTask = (data) => {\n  if (!data) {\n    return;\n  }\n\n  if (data && data[0]) {\n    const percentage = Math.ceil(\n      (data[0].failed_count / data[0].total_failed_count) * 100\n    );\n    return `${data[0].task_name} ${percentage}%`;\n  }\n\n  return `Unavailable`;\n};\n\nconst formatSuccessRate = (successCount, totalCount) =>\n  Math.ceil((successCount / totalCount) * 100) + '%';\nconst formatAvgRun = (elapsed, totalCount) =>\n  new Date(Math.ceil(elapsed / totalCount) * 1000).toISOString().substr(11, 8);\nconst formatTotalTime = (elapsed) =>\n  new Date(elapsed * 1000).toISOString().substr(11, 8);\n\nconst ModalContents = ({ selectedId, isOpen, handleModal, qp, jobType }) => {\n  const {\n    result: stats,\n    request: fetchStats,\n    ...statsApi\n  } = useRequest(\n    useCallback(\n      () => readJobExplorer({ params: agreggateTemplateParams }),\n      [selectedId]\n    ),\n    {}\n  );\n\n  const {\n    result: relatedJobs,\n    request: fetchJobs,\n    ...jobsApi\n  } = useRequest(\n    useCallback(\n      () => readJobExplorer({ params: relatedTemplateJobsParams }),\n      [selectedId]\n    ),\n    {}\n  );\n  let history = useHistory();\n\n  const redirectToJobExplorer = () => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      template_id: [selectedId],\n      status: [\n        'successful',\n        'failed',\n        'new',\n        'pending',\n        'waiting',\n        'error',\n        'canceled',\n        'running',\n      ],\n      job_type: [jobType],\n      quick_date_range: 'last_30_days',\n    };\n\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const relatedTemplateJobsParams = {\n    ...qp,\n    template_id: [selectedId],\n    attributes: [\n      'id',\n      'status',\n      'job_type',\n      'started',\n      'finished',\n      'elapsed',\n      'created',\n      'cluster_name',\n      'org_name',\n    ],\n    group_by_time: false,\n    limit: 5,\n    sort_by: 'created:desc',\n    quick_date_range: qp.quick_date_range\n      ? qp.quick_date_range\n      : 'last_30_days',\n    job_type: [jobType],\n  };\n\n  const agreggateTemplateParams = {\n    group_by: 'template',\n    template_id: [selectedId],\n    attributes: [\n      'elapsed',\n      'job_type',\n      'successful_count',\n      'failed_count',\n      'error_count',\n      'waiting_count',\n      'pending_count',\n      'canceled_count',\n      'new_count',\n      'running_count',\n      'total_count',\n      jobType === 'job' ? 'most_failed_tasks' : 'most_failed_steps',\n    ],\n    status: qp.status,\n    quick_date_range: qp.quick_date_range\n      ? qp.quick_date_range\n      : 'last_30_days',\n    job_type: [jobType],\n  };\n\n  useEffect(() => {\n    fetchJobs();\n    fetchStats();\n  }, [selectedId]);\n\n  const tableCols = ['Id/Name', 'Status', 'Cluster', 'Finished', 'Total time'];\n  const statsData = (statsApi.isSuccess && stats?.items[0]) ?? null;\n  const categoryCount = statsData\n    ? {\n        success: statsData.successful_count,\n        cancelled: statsData.canceled_count,\n        error: statsData.error_count,\n        failed: statsData.failed_count,\n        new: statsData.new_count,\n        pending: statsData.pending_count,\n        running: statsData.running_count,\n        waiting: statsData.waiting_count,\n      }\n    : null;\n\n  const categoryColor = {\n    success: global_palette_green_200.value,\n    cancelled: global_palette_black_850.value,\n    error: global_palette_orange_300.value,\n    failed: global_palette_red_100.value,\n    new: global_palette_cyan_200.value,\n    pending: global_palette_purple_300.value,\n    running: global_palette_blue_300.value,\n    waiting: global_palette_light_green_200.value,\n  };\n\n  const descriptionStats = statsData && [\n    {\n      label: 'Number of runs',\n      id: 'total-runs',\n      value: statsData.total_count ?? 'Unavailable',\n    },\n    {\n      label: 'Total time',\n      id: 'total-time',\n      value: statsData.elapsed\n        ? formatTotalTime(statsData.elapsed)\n        : 'Unavailable',\n    },\n    {\n      label: 'Average time',\n      id: 'avg-time',\n      value: statsData.elapsed\n        ? formatAvgRun(statsData.elapsed, statsData.total_count)\n        : 'Unavailable',\n    },\n    {\n      label: 'Type',\n      id: 'type',\n      value: jobType ? formatJobType(jobType) : 'Unavailable',\n    },\n    {\n      label: 'Success rate',\n      id: 'success-rate',\n      value: !isNaN(statsData.successful_count)\n        ? formatSuccessRate(statsData.successful_count, statsData.total_count)\n        : 'Unavailable',\n    },\n    {\n      label: 'Most failed task',\n      id: 'most-failed',\n      value: statsData.most_failed_tasks\n        ? formatTopFailedTask(statsData.most_failed_tasks)\n        : 'Unavailable',\n    },\n  ];\n\n  const cleanup = () => {\n    handleModal(false);\n  };\n\n  return (\n    <Modal\n      aria-label=\"modal\"\n      variant={ModalVariant.medium}\n      title={\n        jobsApi.isSuccess &&\n        statsApi.isSuccess &&\n        stats?.items?.length > 0 &&\n        (stats?.items[0]?.name ?? 'No template name')\n      }\n      isOpen={isOpen}\n      onClose={cleanup}\n    >\n      {(statsApi.isLoading || jobsApi.isLoading) && <LoadingState />}\n      {(statsApi.error || jobsApi.error) && (\n        <ApiErrorState message={jobsApi.error.error} />\n      )}\n      {statsApi.isSuccess &&\n        jobsApi.isSuccess &&\n        relatedJobs?.items?.length <= 0 && <NoResults />}\n      {statsApi.isSuccess &&\n        jobsApi.isSuccess &&\n        relatedJobs?.items?.length > 0 && (\n          <>\n            {categoryCount && (\n              <Breakdown\n                categoryCount={categoryCount}\n                categoryColor={categoryColor}\n              />\n            )}\n\n            <DescriptionList isHorizontal columnModifier={{ lg: '3Col' }}>\n              {descriptionStats.map(({ label, id, value }) => (\n                <DescriptionListGroup className={id} key={label}>\n                  <DescriptionListTerm>{label}</DescriptionListTerm>\n                  <DescriptionListDescription>\n                    {value}\n                  </DescriptionListDescription>\n                </DescriptionListGroup>\n              ))}\n            </DescriptionList>\n\n            <Divider\n              component=\"div\"\n              style={{ marginTop: '2rem', marginBottom: '1.5rem' }}\n            />\n            <p>\n              <strong>Last 5 jobs</strong>\n            </p>\n\n            <TableComposable\n              aria-label=\"Template information table\"\n              variant=\"compact\"\n            >\n              <Thead>\n                <Tr>\n                  {tableCols.map((heading, idx) => (\n                    <Th key={idx}>{heading}</Th>\n                  ))}\n                </Tr>\n              </Thead>\n              <Tbody>\n                {relatedJobs.items.map((job, idx) => (\n                  <Tr key={`job-detail-${idx}`}>\n                    <Td>{`${job.id.id} - ${job.id.template_name}`}</Td>\n                    <Td>\n                      <JobStatus status={job.status} />\n                    </Td>\n                    <Td>{job.cluster_name}</Td>\n                    <Td>{formatDateTime(job.finished)}</Td>\n                    <Td>{formatTotalTime(job.elapsed)}</Td>\n                  </Tr>\n                ))}\n              </Tbody>\n            </TableComposable>\n          </>\n        )}\n\n      <ActionContainer>\n        <Button\n          key=\"cancel\"\n          variant=\"secondary\"\n          onClick={() => {\n            cleanup();\n          }}\n        >\n          Close\n        </Button>\n\n        <Button component=\"a\" onClick={redirectToJobExplorer} variant=\"link\">\n          View all jobs\n        </Button>\n      </ActionContainer>\n    </Modal>\n  );\n};\n\nModalContents.propTypes = {\n  selectedId: PropTypes.number.isRequired,\n  qp: PropTypes.object.isRequired,\n  jobType: PropTypes.string.isRequired,\n  isOpen: PropTypes.bool.isRequired,\n  handleModal: PropTypes.func.isRequired,\n};\n\nexport default ModalContents;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n  DataList,\n  DataListItem as PFDataListItem,\n  DataListCell as PFDataListCell,\n} from '@patternfly/react-core';\n\nimport ModalContents from './ModalContents';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst TemplatesList = ({ templates, isLoading, qp, title, jobType }) => {\n  const [selectedId, setSelectedId] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const displayJobType = (type) => {\n    return type === 'job' ? 'templates' : 'workflows';\n  };\n\n  return (\n    <>\n      <DataList\n        aria-label={`Top ${displayJobType(jobType)}`}\n        style={{\n          maxHeight: '400px',\n          overflow: 'auto',\n          height: '400px',\n          background: 'white',\n        }}\n      >\n        <DataListItem aria-labelledby={`top-${displayJobType(jobType)}-header`}>\n          <DataListCell>\n            <h3>{title}</h3>\n          </DataListCell>\n          <DataCellEnd>\n            <h3>Usage</h3>\n          </DataCellEnd>\n        </DataListItem>\n        {isLoading && (\n          <PFDataListItem\n            aria-labelledby={`${displayJobType(jobType)}-loading`}\n            key={isLoading}\n            style={{ border: 'none' }}\n          >\n            <PFDataListCell>\n              <LoadingState />\n            </PFDataListCell>\n          </PFDataListItem>\n        )}\n        {!isLoading && templates.length <= 0 && (\n          <PFDataListItem\n            aria-labelledby={`${displayJobType(jobType)}-no-data`}\n            key={isLoading}\n            style={{ border: 'none' }}\n          >\n            <PFDataListCell>\n              <NoData />\n            </PFDataListCell>\n          </PFDataListItem>\n        )}\n        {!isLoading &&\n          templates.map(({ name, total_count, id }, index) => (\n            <DataListItem\n              aria-labelledby={`top-${displayJobType(jobType)}-detail`}\n              key={index}\n            >\n              <DataListCell>\n                <a\n                  onClick={() => {\n                    setIsModalOpen(true);\n                    setSelectedId(id);\n                  }}\n                >\n                  {name}\n                </a>\n              </DataListCell>\n              <DataCellEnd>{total_count}</DataCellEnd>\n            </DataListItem>\n          ))}\n      </DataList>\n      {selectedId && (\n        <ModalContents\n          isOpen={isModalOpen}\n          handleModal={setIsModalOpen}\n          selectedId={selectedId}\n          qp={qp}\n          jobType={jobType}\n        />\n      )}\n    </>\n  );\n};\n\nTemplatesList.propTypes = {\n  templates: PropTypes.array,\n  isLoading: PropTypes.bool,\n  queryParams: PropTypes.object,\n  title: PropTypes.string,\n  qp: PropTypes.object,\n  jobType: PropTypes.string,\n};\n\nexport default TemplatesList;\n","import React, { useState, useEffect, useCallback } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport {\n  preflightRequest,\n  readClustersOptions,\n  readJobExplorer,\n  readEventExplorer,\n} from '../../Api/';\n\nimport { jobExplorer } from '../../Utilities/constants';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  Grid,\n  GridItem,\n} from '@patternfly/react-core';\n\nimport BarChart from '../../Charts/BarChart';\nimport LineChart from '../../Charts/LineChart';\nimport ModulesList from '../../Components/ModulesList';\nimport TemplatesList from '../../Components/TemplatesList';\nimport FilterableToolbar from '../../Components/Toolbar';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport { clusters } from '../../Utilities/constants';\nimport useRequest from '../../Utilities/useRequest';\nimport { getQSConfig } from '../../Utilities/qs';\n\nconst initialTopTemplateParams = {\n  group_by: 'template',\n  limit: 10,\n  job_type: ['job'],\n  group_by_time: false,\n  status: ['successful', 'failed'],\n};\n\nconst initialTopWorkflowParams = {\n  group_by: 'template',\n  limit: 10,\n  job_type: ['workflowjob'],\n  group_by_time: false,\n  status: ['successful', 'failed'],\n};\n\nconst initialModuleParams = {\n  group_by: 'module',\n  sort_by: 'host_task_count:desc',\n  limit: 10,\n};\n\n// takes json and returns\nconst qsConfig = getQSConfig('clusters', { ...clusters.defaultParams }, [\n  'limit',\n  'offset',\n]);\n\nconst Clusters = () => {\n  const [preflightError, setPreFlightError] = useState(null);\n\n  // params from toolbar/searchbar\n  const { queryParams, setFromToolbar } = useQueryParams(qsConfig);\n  const {\n    result: { options },\n    error,\n    request: fetchOptions,\n  } = useRequest(\n    useCallback(async () => {\n      const options = await readClustersOptions({ params: optionsQueryParams });\n      return { options };\n    }, [queryParams]),\n    { options: {} }\n  );\n\n  const {\n    result: { chartData },\n    error: chartDataError,\n    isLoading: chartDataIsLoading,\n    isSuccess: chartDataIsSuccess,\n    request: fetchChartData,\n  } = useRequest(\n    useCallback(async () => {\n      const chartData = await readJobExplorer({ params: queryParams });\n      return { chartData: chartData.items };\n    }, [queryParams]),\n    {\n      chartData: [],\n      chartDataError,\n      chartDataIsLoading,\n      chartDataIsSuccess,\n    }\n  );\n\n  const {\n    result: { modules },\n    error: modulesError,\n    isLoading: modulesIsLoading,\n    isSuccess: modulesIsSuccess,\n    request: fetchModules,\n  } = useRequest(\n    useCallback(async () => {\n      const modules = await readEventExplorer({ params: topModuleParams });\n      return { modules: modules.items };\n    }, [queryParams]),\n    { modules: [], modulesError, modulesIsLoading, modulesIsSuccess }\n  );\n\n  const {\n    result: { templates },\n    error: templatesError,\n    isLoading: templatesIsLoading,\n    isSuccess: templatesIsSuccess,\n    request: fetchTemplates,\n  } = useRequest(\n    useCallback(async () => {\n      const templates = await readJobExplorer({ params: topTemplatesParams });\n      return { templates: templates.items };\n    }, [queryParams]),\n    { templates: [], templatesError, templatesIsLoading, templatesIsSuccess }\n  );\n\n  const {\n    result: { workflows },\n    error: workflowsError,\n    isLoading: workflowsIsLoading,\n    isSuccess: workflowsIsSuccess,\n    request: fetchWorkflows,\n  } = useRequest(\n    useCallback(async () => {\n      const workflows = await readJobExplorer({ params: topWorkflowParams });\n      return { workflows: workflows.items };\n    }, [queryParams]),\n    {\n      workflows: [],\n      workflowsError,\n      workflowsIsLoading,\n      workflowsIsSuccess,\n    }\n  );\n\n  const initialOptionsParams = {\n    attributes: jobExplorer.attributes,\n  };\n\n  const optionsQueryParams = useQueryParams(initialOptionsParams);\n\n  useEffect(() => {\n    fetchOptions();\n    fetchChartData();\n    fetchModules();\n    fetchTemplates();\n    fetchWorkflows();\n  }, [queryParams]);\n\n  const {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n  } = queryParams;\n\n  const topTemplatesParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialTopTemplateParams,\n  };\n\n  const topWorkflowParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialTopWorkflowParams,\n  };\n\n  const topModuleParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialModuleParams,\n  };\n\n  useEffect(() => {\n    async function initializeWithPreflight() {\n      await preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n    }\n\n    initializeWithPreflight();\n  }, []);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  if (preflightError?.preflightError) return <EmptyState {...preflightError} />;\n\n  if (error) return <ApiErrorState message={error.error} />;\n\n  const renderContent = () => {\n    // Warning: we are not checking if ALL the api succeed\n    // this can cause an unsurfaced error when only some of them fails\n    return (\n      <Grid hasGutter>\n        <GridItem span={12}>\n          <Card>\n            <CardTitle>\n              <h2>Job status</h2>\n            </CardTitle>\n            <CardBody>\n              {chartDataIsLoading && <LoadingState />}\n              {(!queryParams.cluster_id ||\n                queryParams.cluster_id?.length <= 0) &&\n                chartDataIsSuccess && (\n                  <BarChart\n                    margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                    id=\"d3-bar-chart-root\"\n                    data={chartData}\n                    queryParams={queryParams}\n                  />\n                )}\n              {queryParams.cluster_id?.length > 0 && chartDataIsSuccess && (\n                <LineChart\n                  margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                  id=\"d3-line-chart-root\"\n                  data={chartData}\n                  queryParams={queryParams}\n                />\n              )}\n            </CardBody>\n          </Card>\n        </GridItem>\n        <GridItem span={4}>\n          <TemplatesList\n            qp={queryParams}\n            templates={workflows}\n            isLoading={workflowsIsLoading}\n            title={'Top workflows'}\n            jobType={'workflowjob'}\n          />\n        </GridItem>\n        <GridItem span={4}>\n          <TemplatesList\n            qp={queryParams}\n            templates={templates}\n            isLoading={templatesIsLoading}\n            title={'Top templates'}\n            jobType={'job'}\n          />\n        </GridItem>\n        <GridItem span={4}>\n          <ModulesList modules={modules} isLoading={modulesIsLoading} />\n        </GridItem>\n      </Grid>\n    );\n  };\n\n  return (\n    <>\n      <PageHeader>\n        <PageHeaderTitle title={'Clusters'} />\n        <FilterableToolbar\n          categories={options}\n          qsConfig={qsConfig}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      <Main>{renderContent()}</Main>\n    </>\n  );\n};\n\nexport default Clusters;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Tr, Td, ExpandableRowContent } from '@patternfly/react-table';\n\nimport { formatDateTime, formatJobType } from '../Utilities/helpers';\nimport JobStatus from './JobStatus';\nimport {\n  DescriptionList,\n  DescriptionListGroup,\n  DescriptionListTerm,\n  DescriptionListDescription,\n} from '@patternfly/react-core';\n\nconst JobExplorerListRow = ({ job }) => {\n  const [expanded, setExpanded] = useState(false);\n  const handleExpansion = () => {\n    setExpanded(!expanded);\n  };\n\n  const expandedInfo = [\n    {\n      label: 'Created',\n      value: job.created ? formatDateTime(job.created) : 'Unavailable',\n    },\n    {\n      label: 'Started',\n      value: job.created ? formatDateTime(job.started) : 'Unavailable',\n    },\n    {\n      label: 'Finished',\n      value: job.created ? formatDateTime(job.finished) : 'Unavailable',\n    },\n  ];\n  return (\n    <>\n      <Tr>\n        <Td\n          expand={{\n            rowIndex: job.id.id,\n            isExpanded: expanded,\n            onToggle: handleExpansion,\n          }}\n        />\n        <Td\n          href={job.id.tower_link}\n        >{`${job.id.id} - ${job.id.template_name}`}</Td>\n        <Td>\n          <JobStatus status={job.status} />\n        </Td>\n        <Td>{job.cluster_name}</Td>\n        <Td>{job.org_name}</Td>\n        <Td>{formatJobType(job.job_type)}</Td>\n      </Tr>\n      <Tr isExpanded={expanded}>\n        <Td colSpan={6}>\n          <ExpandableRowContent>\n            <DescriptionList isHorizontal columnModifier={{ lg: '3Col' }}>\n              {expandedInfo.map(({ label, value }) => (\n                <DescriptionListGroup key={label}>\n                  <DescriptionListTerm>{label}</DescriptionListTerm>\n                  <DescriptionListDescription>\n                    {value}\n                  </DescriptionListDescription>\n                </DescriptionListGroup>\n              ))}\n            </DescriptionList>\n          </ExpandableRowContent>\n        </Td>\n      </Tr>\n    </>\n  );\n};\n\nJobExplorerListRow.propTypes = {\n  job: PropTypes.object.isRequired,\n};\n\nexport default JobExplorerListRow;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { TableComposable, Thead, Tbody, Tr, Th } from '@patternfly/react-table';\nimport JobExplorerListRow from './JobExplorerListRow';\n\nconst cols = ['Id/Name', 'Status', 'Cluster', 'Organization', 'Type'];\nconst sortableCols = ['Id/Name', 'Status', 'Type'];\n\nconst sortMap = {\n  0: 'id',\n  1: 'status',\n  4: 'job_type',\n};\n\nconst reverseSortMap = {\n  id: 0,\n  status: 1,\n  job_type: 4,\n};\n\nconst JobExplorerList = ({ jobs, queryParams, queryParamsDispatch }) => {\n  const [sortIdx, setSortIdx] = useState(-1);\n  const [sortDir, setSortDir] = useState('none');\n\n  useEffect(() => {\n    if (queryParams?.sort_options in reverseSortMap) {\n      setSortIdx(reverseSortMap[queryParams.sort_options]);\n      setSortDir(\n        queryParams?.sort_order &&\n          (queryParams.sort_order === 'desc' ||\n            queryParams.sort_order === 'asc')\n          ? queryParams.sort_order\n          : 'desc'\n      );\n    } else {\n      setSortIdx(-1);\n      setSortDir('none');\n    }\n  }, [queryParams]);\n\n  const onSort = (_event, idx, dir) => {\n    if (idx !== sortIdx) {\n      setSortIdx(idx);\n      queryParamsDispatch({\n        type: 'SET_SORT_OPTIONS',\n        value: { sort_options: sortMap[idx] },\n      });\n    }\n\n    if (dir !== sortDir) {\n      setSortDir(dir);\n      queryParamsDispatch({\n        type: 'SET_SORT_ORDER',\n        value: { sort_order: dir },\n      });\n    }\n  };\n\n  return (\n    <TableComposable aria-label=\"Job Explorer Table\" variant=\"compact\">\n      <Thead>\n        <Tr>\n          <Th />\n          {cols.map((head, idx) => {\n            const params = sortableCols.includes(head)\n              ? {\n                  sort: {\n                    sortBy: {\n                      index: sortIdx,\n                      direction: sortDir,\n                    },\n                    onSort,\n                    columnIndex: idx,\n                  },\n                }\n              : {};\n            return (\n              <Th key={`col-${idx}`} {...params}>\n                {head}\n              </Th>\n            );\n          })}\n        </Tr>\n      </Thead>\n      <Tbody>\n        {jobs.map((job) => (\n          <JobExplorerListRow job={job} key={job.id.id} />\n        ))}\n      </Tbody>\n    </TableComposable>\n  );\n};\n\nJobExplorerList.propTypes = {\n  jobs: PropTypes.array.isRequired,\n  queryParams: PropTypes.object.isRequired,\n  queryParamsDispatch: PropTypes.func.isRequired,\n};\n\nexport default JobExplorerList;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useRequest from '../../Utilities/useRequest';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoResults from '../../Components/NoResults';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport Pagination from '../../Components/Pagination';\nimport { Paths } from '../../paths';\nimport { parse, stringify } from 'query-string';\n\nimport {\n  preflightRequest,\n  readJobExplorer,\n  readJobExplorerOptions,\n} from '../../Api/';\nimport { jobExplorer } from '../../Utilities/constants';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport { Card, CardBody, PaginationVariant } from '@patternfly/react-core';\n\nimport JobExplorerList from '../../Components/JobExplorerList';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport { getQSConfig } from '../../Utilities/qs';\n\nconst initialQueryParams = {\n  ...jobExplorer.defaultParams,\n  attributes: jobExplorer.attributes,\n};\nconst qsConfig = getQSConfig('job-explorer', { ...initialQueryParams }, [\n  'limit',\n  'offset',\n]);\n\nconst JobExplorer = ({ location: { search }, history }) => {\n  const [preflightError, setPreFlightError] = useState(null);\n\n  const {\n    queryParams,\n    setFromPagination,\n    setFromToolbar,\n    dispatch: queryParamsDispatch,\n  } = useQueryParams(qsConfig);\n\n  const {\n    result: { options },\n    error,\n    request: fetchOptions,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await readJobExplorerOptions({ params: queryParams });\n      return { options: response };\n    }, [queryParams]),\n    {\n      options: {},\n    }\n  );\n\n  const {\n    result: { data, meta },\n    error: dataError,\n    isLoading: dataIsLoading,\n    isSuccess: dataIsSuccess,\n    request: fetchEndpoints,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await readJobExplorer({ params: queryParams });\n      return {\n        data: response.items,\n        meta: response.meta,\n      };\n    }, [queryParams]),\n    { items: [], dataError, dataIsLoading, dataIsSuccess }\n  );\n\n  const initialSearchParams = parse(search, {\n    arrayFormat: 'bracket',\n    parseBooleans: true,\n    parseNumbers: true,\n  });\n\n  useEffect(() => {\n    history.replace({\n      pathname: jobExplorer,\n      initialSearchParams,\n    });\n  }, []);\n\n  const updateURL = () => {\n    const { jobExplorer } = Paths;\n    const search = stringify(\n      { ...initialQueryParams, ...initialSearchParams },\n      { arrayFormat: 'bracket' }\n    );\n    history.replace({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'job-explorer', secondaryNav: true });\n\n    preflightRequest().catch((error) => {\n      setPreFlightError({ preflightError: error });\n    });\n  }, []);\n\n  useEffect(() => {\n    fetchOptions();\n    fetchEndpoints();\n    updateURL();\n  }, [queryParams]);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n  if (preflightError?.preflightError) return <EmptyState {...preflightError} />;\n  if (error) return <ApiErrorState message={error.error} />;\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Job Explorer'} />\n      </PageHeader>\n\n      {!preflightError && (\n        <Main>\n          <Card>\n            <CardBody>\n              <FilterableToolbar\n                categories={options}\n                filters={queryParams}\n                qsConfig={qsConfig}\n                setFilters={setFromToolbar}\n                pagination={\n                  <Pagination\n                    count={meta?.count}\n                    params={{\n                      limit: parseInt(queryParams.limit),\n                      offset: parseInt(queryParams.offset),\n                    }}\n                    qsConfig={qsConfig}\n                    setPagination={setFromPagination}\n                    isCompact\n                  />\n                }\n                hasSettings\n              />\n              {dataIsLoading && <LoadingState />}\n              {dataIsSuccess && data.length <= 0 && <NoResults />}\n              {dataIsSuccess && data.length > 0 && (\n                <JobExplorerList\n                  jobs={data}\n                  queryParams={queryParams}\n                  queryParamsDispatch={queryParamsDispatch}\n                />\n              )}\n              <Pagination\n                count={meta?.count}\n                params={{\n                  limit: parseInt(queryParams.limit),\n                  offset: parseInt(queryParams.offset),\n                }}\n                qsConfig={qsConfig}\n                setPagination={setFromPagination}\n                variant={PaginationVariant.bottom}\n              />\n            </CardBody>\n          </Card>\n        </Main>\n      )}\n    </React.Fragment>\n  );\n};\n\nJobExplorer.propTypes = {\n  location: PropTypes.object,\n  history: PropTypes.object,\n};\n\nexport default JobExplorer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nimport {\n  NotificationDrawerList as PFNotificationDrawerList,\n  NotificationDrawerListItem as PFNotificationDrawerListItem,\n  NotificationDrawerListItemBody,\n  NotificationDrawerListItemHeader,\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkAltIcon } from '@patternfly/react-icons';\nimport LoadingState from '../Components/LoadingState';\nimport { capitalize } from '../Utilities/helpers';\n\nconst ExternalLinkAltIcon = styled(PFExternalLinkAltIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n  font-size: 14px;\n`;\n\nconst NotificationDrawerListItem = styled(PFNotificationDrawerListItem)`\n  border-top: 1px solid var(--pf-global--BorderColor--light-100\n    );\n  border-bottom::nth-child(odd): 1px solid var(--pf-global--BorderColor--light-100\n    );\n  box-shadow: none;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst NotificationDrawerList = styled(PFNotificationDrawerList)`\n  &:last-child {\n    border-bottom: 1px solid var(--pf-global--BorderColor--light-100);\n  }\n`;\n\nconst stringifyDate = (date) => {\n  const day = moment(date);\n  const oneHour = 60 * 60 * 1000;\n  const now = moment().utc();\n\n  if (now.isAfter(day)) {\n    return `${now.diff(day, 'days')} day(s) ago.`;\n  }\n\n  if (day.isSame(now, 'day')) {\n    if (day.valueOf() > oneHour) {\n      return `${day.diff(now, 'hours')} hour(s) ago.`;\n    }\n\n    return `${now.diff(day, 'minutes')} minute(s) ago.`;\n  }\n};\n\nconst AllNotificationTemplate = ({ notifications }) =>\n  notifications.map(\n    ({ date, message, label, notification_id: id, tower_url: url }) => {\n      if (label === '' || label === 'notice') {\n        return (\n          <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"info\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n\n      if (label === 'error') {\n        return (\n          <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"danger\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n\n      if (label === 'warning') {\n        return (\n          <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"warning\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n    }\n  );\n\nconst ErrorNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'error')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"danger\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst NoticeNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'notice')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"info\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst WarningNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'warning')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"warning\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst NotificationsList = ({ filterBy, notifications }) => (\n  <>\n    <NotificationDrawerList>\n      {notifications.length <= 0 && <LoadingState />}\n      {filterBy === '' && (\n        <AllNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'notice' && (\n        <NoticeNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'error' && (\n        <ErrorNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'warning' && (\n        <WarningNotificationTemplate notifications={notifications} />\n      )}\n    </NotificationDrawerList>\n  </>\n);\n\nAllNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nErrorNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nWarningNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nNotificationsList.propTypes = {\n  notifications: PropTypes.array,\n  filterBy: PropTypes.string,\n};\n\nexport default NotificationsList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoData from '../../Components/NoData';\nimport { preflightRequest, readClusters, readNotifications } from '../../Api/';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle as PFCardTitle,\n  FormSelect,\n  FormSelectOption,\n  PaginationVariant,\n  NotificationDrawer,\n} from '@patternfly/react-core';\n\nimport NotificationsList from '../../Components/NotificationsList';\nimport Pagination from '../../Components/Pagination';\nimport { getQSConfig } from '../../Utilities/qs';\n\nconst CardTitle = styled(PFCardTitle)`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n`;\n\nconst DropdownGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-end;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n\n  select {\n    margin: 0 10px;\n    width: 150px;\n\n    @media screen and (max-width: 1035px) {\n      margin: 10px 10px 0 0;\n    }\n\n    @media screen and (max-width: 865px) {\n      width: 100%;\n    }\n  }\n`;\n\nconst notificationOptions = [\n  {\n    value: 'please choose',\n    label: 'Select Notification Severity',\n    disabled: true,\n  },\n  { value: 'error', label: 'View Critical', disabled: false },\n  { value: 'warning', label: 'View Warning', disabled: false },\n  { value: 'notice', label: 'View Notice', disabled: false },\n  { value: '', label: 'View All', disabled: false },\n];\n\nfunction formatClusterName(data) {\n  const defaultClusterOptions = [\n    { value: 'please choose', label: 'Select cluster', disabled: true },\n    { value: '', label: 'All Clusters', disabled: false },\n    { value: -1, label: 'Unassociated', disabled: false },\n  ];\n  return data.reduce(\n    (formatted, { label, cluster_id: id, install_uuid: uuid }) => {\n      if (label.length === 0) {\n        formatted.push({ value: id, label: uuid, disabled: false });\n      } else {\n        formatted.push({ value: id, label, disabled: false });\n      }\n\n      return formatted;\n    },\n    defaultClusterOptions\n  );\n}\n\nconst initialQueryParams = {\n  defaultParams: {\n    limit: 5,\n    offset: 0,\n  },\n};\n\n// takes json and returns\nconst qsConfig = getQSConfig(\n  'notifications',\n  { ...initialQueryParams.defaultParams },\n  ['limit', 'offset']\n);\n\nconst Notifications = () => {\n  const [preflightError, setPreFlightError] = useState(null);\n  const [notificationsData, setNotificationsData] = useState([]);\n  const [clusterOptions, setClusterOptions] = useState([]);\n  const [selectedCluster, setSelectedCluster] = useState('');\n  const [firstRender, setFirstRender] = useState(true);\n  const [isLoading, setIsLoading] = useState(true);\n  const [meta, setMeta] = useState({});\n\n  // params from toolbar/searchbar\n  const { queryParams, setId, setFromPagination, setSeverity } =\n    useQueryParams(qsConfig);\n\n  useEffect(() => {\n    if (firstRender) {\n      return;\n    }\n\n    const getData = () => {\n      return readNotifications({ params: queryParams });\n    };\n\n    const update = () => {\n      setIsLoading(true);\n      getData().then(({ notifications: notificationsData = [], meta }) => {\n        setNotificationsData(notificationsData);\n        setMeta(meta);\n        setIsLoading(false);\n      });\n    };\n\n    update();\n  }, [queryParams]);\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'notifications', secondaryNav: true });\n\n    let ignore = false;\n    const fetchEndpoints = () => {\n      return Promise.all(\n        [readClusters(), readNotifications({ params: queryParams })].map((p) =>\n          p.catch(() => [])\n        )\n      );\n    };\n\n    async function initializeWithPreflight() {\n      setIsLoading(true);\n      await preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n      fetchEndpoints().then(\n        ([\n          { templates: clustersData = [] },\n          { notifications: notificationsData = [], meta },\n        ]) => {\n          if (!ignore) {\n            const clusterOptions = formatClusterName(clustersData);\n            setClusterOptions(clusterOptions);\n            setNotificationsData(notificationsData);\n            setMeta(meta);\n            setFirstRender(false);\n            setIsLoading(false);\n          }\n        }\n      );\n    }\n\n    initializeWithPreflight();\n    return () => (ignore = true);\n  }, [queryParams]);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Notifications'} />\n      </PageHeader>\n      {preflightError && (\n        <Main>\n          <EmptyState {...preflightError} />\n        </Main>\n      )}\n      {!preflightError && (\n        <>\n          <Main>\n            <Card>\n              <CardTitle>\n                <DropdownGroup>\n                  <FormSelect\n                    name=\"selectedCluster\"\n                    value={selectedCluster}\n                    onChange={(value) => {\n                      setSelectedCluster(value);\n                      setId(value);\n                      setFromPagination(0);\n                    }}\n                    aria-label=\"Select Cluster\"\n                  >\n                    {clusterOptions.map(({ value, label, disabled }, index) => (\n                      <FormSelectOption\n                        isDisabled={disabled}\n                        key={index}\n                        value={value}\n                        label={label}\n                      />\n                    ))}\n                  </FormSelect>\n                  <FormSelect\n                    name=\"selectedNotification\"\n                    value={queryParams.severity || ''}\n                    onChange={(value) => {\n                      setSeverity(value);\n                      setFromPagination(0);\n                    }}\n                    aria-label=\"Select Notification Type\"\n                  >\n                    {notificationOptions.map(\n                      ({ disabled, value, label }, index) => (\n                        <FormSelectOption\n                          isDisabled={disabled}\n                          key={index}\n                          value={value}\n                          label={label}\n                        />\n                      )\n                    )}\n                  </FormSelect>\n                </DropdownGroup>\n                <Pagination\n                  count={meta?.count}\n                  qsConfig={qsConfig}\n                  params={{\n                    limit: queryParams.limit,\n                    offset: queryParams.offset,\n                  }}\n                  setPagination={setFromPagination}\n                  isCompact\n                />\n              </CardTitle>\n              <CardBody>\n                {isLoading && <LoadingState />}\n                {!isLoading && notificationsData.length <= 0 && <NoData />}\n                {!isLoading && notificationsData.length > 0 && (\n                  <NotificationDrawer>\n                    <NotificationsList\n                      filterBy={queryParams.severity || ''}\n                      options={notificationOptions}\n                      notifications={notificationsData}\n                    />\n                  </NotificationDrawer>\n                )}\n                <Pagination\n                  count={meta?.count}\n                  qsConfig={qsConfig}\n                  params={{\n                    limit: queryParams.limit,\n                    offset: queryParams.offset,\n                  }}\n                  setPagination={setFromPagination}\n                  variant={PaginationVariant.bottom}\n                />\n              </CardBody>\n            </Card>\n          </Main>\n        </>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Notifications;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Switch } from '@patternfly/react-core';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  overflow: auto;\n  width: 100%;\n  height: ${(props) => props.height};\n`;\n\nconst LegendDetail = styled.div`\n  display: flex;\n  padding: 7.5px 15px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  overflow: auto;\n`;\n\nconst Color = styled.div.attrs((props) => ({\n  color: props.color || 'black',\n}))`\n  min-width: 12px;\n  height: 12px;\n  background: ${(props) => props.color};\n  margin-right: 20px;\n`;\n\nconst Title = styled.span`\n  font-size: 15px;\n  display: inline-block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n`;\n\nconst SubTitle = styled.span`\n  font-size: 15px;\n  margin-left: auto;\n  margin-right: 0;\n  padding-right: 10px;\n`;\n\nconst Legend = ({ data, selected, height, onToggle, chartName }) => {\n  return (\n    <Container height={height}>\n      {data.map(({ name, value, id, count }, index) => (\n        <LegendDetail key={index}>\n          <Wrapper>\n            <Color color={value} />\n            <Title>{name}</Title>\n          </Wrapper>\n          {count && <SubTitle>{count}</SubTitle>}\n          {selected && (\n            <Switch\n              isChecked={selected.some((selection) => selection === id)}\n              onChange={() => onToggle(id)}\n              aria-label={`${chartName}-${name}`}\n              value={id}\n              key={index}\n            />\n          )}\n        </LegendDetail>\n      ))}\n    </Container>\n  );\n};\n\nLegend.propTypes = {\n  data: PropTypes.array.isRequired,\n  selected: PropTypes.array.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  height: PropTypes.string.isRequired,\n  chartName: PropTypes.string.isRequired,\n};\n\nexport default Legend;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport styled from 'styled-components';\n\nimport initializeChart from '.././BaseChart';\nimport Legend from '../../Utilities/Legend';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nconst GroupedBarChart = ({\n  onClick = null,\n  TooltipClass,\n  legend,\n  ...props\n}) => {\n  const colors = legend.map(({ id, name }) => {\n    return {\n      name,\n      value: props.colorFunc(id),\n      id,\n    };\n  });\n  const [selectedIds, setSelectedIds] = useState(\n    legend.map(({ id }) => id).slice(0, 8)\n  );\n  let timeout = null;\n\n  const handleToggle = (id) => {\n    if (selectedIds.includes(id)) {\n      setSelectedIds(selectedIds.filter((el) => el !== id));\n    } else {\n      setSelectedIds([...selectedIds, id]);\n    }\n  };\n\n  const draw = () => {\n    // Clear our chart container element first\n    d3.selectAll('#' + props.id + ' > *').remove();\n    let { data: unformattedData } = props;\n    const data = unformattedData.reduce((formatted, { date, items }) => {\n      const selectedOrgs = items.filter(({ id }) => selectedIds.includes(id));\n      return formatted.concat({ date, selectedOrgs });\n    }, []);\n    const width = props.getWidth();\n    const height = props.getHeight();\n    // x scale of entire chart\n    const x0 = d3.scaleBand().range([0, width]).padding(0.35);\n    // x scale of individual grouped bars\n    const x1 = d3.scaleBand();\n    const y = d3.scaleLinear().range([height, 0]);\n    // format our X Axis ticks\n    const maxTicksOneMonth = Math.round(data.length / (data.length / 2));\n    const maxTicksTwoMonths = Math.round(data.length / (data.length / 4));\n    let ticks = data.map((d) => d.date);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) =>\n          i % (data.length > 31 ? maxTicksTwoMonths : maxTicksOneMonth) === 0\n            ? d.date\n            : undefined\n        )\n        .filter((item) => item);\n    }\n\n    const xAxis = d3.axisBottom(x0).tickValues(ticks).tickFormat(formatDate);\n\n    const yAxis = d3.axisLeft(y).ticks(8).tickSize(-width, 0, 0);\n\n    const svg = d3\n      .select('#' + props.id)\n      .append('svg')\n      .attr('width', width + props.margin.left + props.margin.right)\n      .attr('height', height + props.margin.bottom + props.margin.top)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' + props.margin.left + ',' + props.margin.top + ')'\n      );\n\n    const dates = data.map((d) => d.date);\n    const tooltip = new TooltipClass({\n      svg: '#' + props.id,\n    });\n    x0.domain(dates);\n    x1.domain(selectedIds).range([0, x0.bandwidth()]);\n    y.domain([\n      0,\n      d3.max(data, (date) =>\n        d3.max(date.selectedOrgs, (d) => d.value * 1.15)\n      ) || 8,\n    ]);\n\n    // add y axis\n    svg\n      .append('g')\n      .attr('class', 'y axis')\n      .call(yAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7')\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 6)\n      .attr('dy', '.71em')\n      .style('text-anchor', 'end')\n      .style('font-weight', 'bold')\n      .text('Value');\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text(props.yLabel);\n\n    // add x axis\n    svg\n      .append('g')\n      .attr('class', 'x axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' + width / 2 + ' ,' + (height + props.margin.top + 25) + ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n    // add the groups\n    let slice = svg.selectAll('.slice').data(data);\n    slice.exit().remove();\n\n    const enter = slice\n      .enter()\n      .append('g')\n      .attr('class', 'g foo')\n      .attr('transform', (d) => 'translate(' + x0(d.date) + ',0)');\n    slice = slice.merge(enter);\n    // add the individual bars\n    let bars = slice.selectAll('rect').data(function (d) {\n      return d.selectedOrgs;\n    });\n    bars.exit().remove();\n\n    const color = props.colorFunc;\n    const subEnter = bars\n      .enter()\n      .append('rect')\n      .attr('width', x1.bandwidth())\n      .attr('x', function (d) {\n        return x1(d.id);\n      }) // unsorted\n      .style('fill', function (d) {\n        return color(d.id);\n      })\n      .attr('y', function (d) {\n        return y(d.value);\n      })\n      .attr('height', function (d) {\n        return height - y(d.value);\n      })\n      .on('mouseover', function (d) {\n        d.moreDetail = !d.name.endsWith('Others');\n        d3.select(this).style(\n          'cursor',\n          onClick && d.moreDetail ? 'pointer' : 'default'\n        );\n        d3.select(this).style('fill', d3.rgb(color(d.id)).darker(1));\n        tooltip.handleMouseOver(d);\n      })\n      .on('mousemove', tooltip.handleMouseOver)\n      .on('mouseout', function (d) {\n        d3.select(this).style('fill', color(d.id));\n        tooltip.handleMouseOut();\n      })\n      .on('click', onClick);\n    bars = bars.merge(subEnter);\n  };\n\n  const init = () => {\n    draw();\n  };\n\n  const resize = () => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      draw();\n    }, 500);\n  };\n\n  useEffect(() => {\n    init();\n    window.addEventListener('resize', resize);\n\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [props.data, selectedIds]);\n\n  return (\n    <Wrapper>\n      <div id={props.id} />\n      {colors.length > 0 && (\n        <Legend\n          id={`${props.id}-legend`}\n          data={colors}\n          selected={selectedIds}\n          onToggle={handleToggle}\n          height=\"350px\"\n          chartName={`${props.id}-legend`}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nGroupedBarChart.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  legend: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  colorFunc: PropTypes.func,\n  yLabel: PropTypes.string,\n  onClick: PropTypes.func,\n  TooltipClass: PropTypes.any.isRequired,\n};\n\nGroupedBarChart.defaultProps = {\n  legend: [],\n};\n\nexport default initializeChart(GroupedBarChart);\n","import * as d3 from 'd3';\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class OrgsTooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -12)\n      .attr('rx', 2)\n      .attr('height', 50)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 25)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Date');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 72)\n      .attr('y', 25)\n      .text('0 Jobs');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 10)\n      .attr('font-size', 12)\n      .text('Org');\n\n    this.clickMore = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 20)\n      .attr('y', 30)\n      .attr('font-size', 12)\n      .text('');\n  }\n\n  handleMouseOver = (d) => {\n    let date;\n    let orgName;\n    let jobs;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    } else {\n      const maxLength = 16;\n      date = d.date;\n      orgName = d.name;\n      jobs = d.value;\n      if (d.name.length > maxLength) {\n        orgName = d.name.slice(0, maxLength).concat('...');\n      }\n    }\n\n    let yAdjust = -11;\n\n    // Include 'Click for details' if more detail is available\n    if (d.moreDetail) {\n      this.boundingBox.attr('height', 68);\n      this.boundingBox.attr('y', -23);\n      this.date.attr('y', 25 + yAdjust);\n      this.jobs.attr('y', 25 + yAdjust);\n      this.orgName.attr('y', 10 + yAdjust);\n      this.clickMore.text('Click for details');\n    } else {\n      this.boundingBox.attr('height', 50);\n      this.boundingBox.attr('y', -12);\n      this.date.attr('y', 25);\n      this.jobs.attr('y', 25);\n      this.orgName.attr('y', 10);\n      this.clickMore.text('');\n    }\n\n    const formatTooltipDate = formatDate;\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.date.text('' + formatTooltipDate(date));\n    this.orgName.text('' + orgName);\n    this.jobs.text('' + jobs + ' Jobs');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 45;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n      this.orgName.attr('x', -adjustedWidth - 7);\n      this.date.attr('x', -adjustedWidth - 7);\n      this.clickMore.attr('x', -adjustedWidth - 7);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth / 2);\n      this.date.attr('x', 20);\n      this.clickMore.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import * as d3 from 'd3';\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class HostsTooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -12)\n      .attr('rx', 2)\n      .attr('height', 50)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 25)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Date');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 72)\n      .attr('y', 25)\n      .text('0 Jobs');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 10)\n      .attr('font-size', 12)\n      .text('Org');\n  }\n\n  handleMouseOver = (d) => {\n    let date;\n    let orgName;\n    let jobs;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    } else {\n      const maxLength = 16;\n      date = d.date;\n      orgName = d.name;\n      jobs = d.value;\n      if (d.name.length > maxLength) {\n        orgName = d.name.slice(0, maxLength).concat('...');\n      }\n    }\n\n    const formatTooltipDate = formatDate;\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.date.text('' + formatTooltipDate(date));\n    this.orgName.text('' + orgName);\n    this.jobs.text('' + jobs + ' Hosts');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 45;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n      this.orgName.attr('x', -adjustedWidth - 7);\n      this.date.attr('x', -adjustedWidth - 7);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth / 2);\n      this.date.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport { getTotal } from '../Utilities/helpers';\nimport Legend from '../Utilities/Legend';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nclass Tooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    // defer drawing until we know the data shape\n    this.drawn = false;\n    // show the success rate or not\n    this.showSuccess = false;\n  }\n\n  draw(d) {\n    // chart1 has success rate data and chart2 does not ...\n    this.showSuccess = d && d.data && 'success_rate' in d.data ? true : false;\n    const boundingHeight = this.showSuccess ? 70 : 52;\n    const boundingWidth = this.showSuccess ? 120 : 108;\n\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBOx = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', boundingHeight)\n      .attr('width', boundingWidth)\n      .attr('fill', '#393f44');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 0)\n      .text('Organization');\n    this.percentageTotal = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 16)\n      .text('0');\n    this.percentageSuccess = null;\n    if (this.showSuccess) {\n      this.percentageSuccess = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 30)\n        .text('');\n    }\n  }\n\n  handleMouseOver = (d) => {\n    // treat draw() as a singleton to avoid a painted window effect\n    if (this.drawn !== true) {\n      this.draw(d);\n      this.drawn = true;\n    }\n\n    let perc;\n    let percSuccess;\n    let orgName;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    }\n\n    if (d && d.data) {\n      const maxLength = 16;\n      perc = d.data.percent;\n      percSuccess = d.data.success_rate;\n      orgName = d.data.name;\n      if (d.data.name.length > maxLength) {\n        orgName = d.data.name.slice(0, maxLength - 3).concat('...');\n      }\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.percentageTotal.text('' + perc + '%');\n    if (percSuccess && this.percentageSuccess) {\n      this.percentageSuccess.text('(' + percSuccess + '% successful)');\n    }\n\n    this.orgName.text(' ' + orgName);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, -10) rotate(45)');\n      this.boundingBOx.attr('x', -125);\n      this.orgName.attr('x', -112);\n      this.percentageTotal.attr('x', -112);\n      if (this.showSuccess) {\n        this.percentageSuccess.attr('x', -112);\n      }\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, -10) rotate(45)');\n      this.boundingBOx.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.percentageTotal.attr('x', 20);\n      if (this.showSuccess) {\n        this.percentageSuccess.attr('x', 20);\n      }\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nconst PieChart = ({\n  data,\n  id,\n  colorFunc: color,\n  margin,\n  getWidth,\n  getHeight,\n}) => {\n  const colors = data\n    .map(({ id, name, count }) => {\n      return {\n        id,\n        name,\n        value: color(id),\n        count: Math.round(count),\n      };\n    })\n    .sort((a, b) => (a.count > b.count ? 1 : b.count > a.count ? -1 : 0));\n\n  const [selectedIds, setSelectedIds] = useState(\n    data.map(({ id }) => id).slice(0, 8)\n  );\n\n  let timeout = null;\n\n  const handleToggle = (id) => {\n    if (selectedIds.includes(id)) {\n      setSelectedIds(selectedIds.filter((el) => el !== id));\n    } else {\n      setSelectedIds([...selectedIds, id]);\n    }\n  };\n\n  const draw = () => {\n    d3.selectAll('#' + id + ' > *').remove();\n    const width = getWidth();\n    const height = getHeight();\n    const svg = d3\n      .select('#' + id)\n      .append('svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.bottom)\n      .append('g');\n\n    svg.append('g').attr('class', 'slices');\n    svg.append('g').attr('class', 'labels');\n    svg.append('g').attr('class', 'lines');\n    const radius = Math.min(width, height) / 2;\n    const filteredData = data.filter(({ id }) => selectedIds.includes(id));\n    const total = getTotal(filteredData);\n    filteredData.forEach(function (d) {\n      d.count = +d.count;\n      d.percent = +Math.round((d.count / total) * 100);\n    });\n    const donutTooltip = new Tooltip({\n      svg: '#' + id,\n    });\n    const pie = d3\n      .pie()\n      .sort(null)\n      .value((d) => d.count);\n    const arc = d3\n      .arc()\n      .outerRadius(radius - 10) // controls top positioning of chart\n      .innerRadius(0);\n\n    svg.attr(\n      'transform',\n      'translate(' +\n        (width + margin.left + margin.right) / 2 +\n        ',' +\n        (height + margin.top + margin.bottom) / 2 +\n        ')'\n    );\n\n    svg\n      .selectAll('path')\n      .data(pie(filteredData))\n      .enter()\n      .append('path')\n      .attr('d', arc)\n      .attr('fill', (d) => color(d.data.id));\n\n    svg\n      .selectAll('path')\n      .on('mouseover', function (d) {\n        d3.select(this).style('fill', d3.rgb(color(d.data.id)).darker(1));\n        donutTooltip.handleMouseOver(d);\n      })\n      .on('mouseout', function (d) {\n        d3.select(this).style('fill', color(d.data.id));\n        donutTooltip.handleMouseOut();\n      })\n      .on('mousemove', donutTooltip.handleMouseOver);\n\n    svg.append('g').classed('labels', true);\n    svg.append('g').classed('lines', true);\n  };\n\n  const init = () => {\n    draw();\n  };\n\n  const resize = () => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      draw();\n    }, 500);\n  };\n\n  useEffect(() => {\n    init();\n    window.addEventListener('resize', resize);\n\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [data, selectedIds]);\n\n  return (\n    <Wrapper>\n      <div id={id} />\n      {colors.length > 0 && (\n        <Legend\n          id={`${id}-legend`}\n          data={colors}\n          selected={selectedIds}\n          onToggle={handleToggle}\n          height=\"300px\"\n          chartName={`${id}-legend`}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nPieChart.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  colorFunc: PropTypes.func,\n};\n\nexport default initializeChart(PieChart);\n","import React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { formatDate as dateForJobExplorer } from '../../Utilities/helpers';\n\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport {\n  preflightRequest,\n  readJobExplorer,\n  readHostExplorer,\n  readOrgOptions,\n} from '../../Api/';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle,\n  Tabs,\n  Tab,\n  Grid,\n  GridItem,\n} from '@patternfly/react-core';\n\nimport {\n  GroupedBarChart,\n  OrgsTooltip,\n  HostsTooltip,\n} from '../../Charts/GroupedBarChart/';\nimport PieChart from '../../Charts/PieChart';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport { organizationStatistics as constants } from '../../Utilities/constants';\n\n// For chart colors\nimport { pfmulti } from '../../Utilities/colors';\nimport { scaleOrdinal } from 'd3';\nimport useRequest from '../../Utilities/useRequest';\nimport { getQSConfig } from '../../Utilities/qs';\n\nconst Divider = styled('hr')`\n  border: 1px solid #ebebeb;\n`;\n\nconst colorFunc = scaleOrdinal(pfmulti);\n\nconst orgsChartMapper = (data = [], meta, attrName) => {\n  const dates = data.map(({ date, items }) => ({\n    date,\n    items: items.map(({ id, [attrName]: value, name }) => ({\n      id,\n      date,\n      value,\n      name: name || 'No organization',\n    })),\n  }));\n  meta.legend.map((el) => ({\n    ...el,\n    name: el.name || 'No organization',\n  }));\n  return dates;\n};\n\nconst pieChartMapper = (items = [], attrName) => {\n  const data = items.map(({ id, [attrName]: count, name }) => ({\n    id,\n    count,\n    name: name || 'No organization',\n  }));\n  return data;\n};\n\nconst redirectToJobExplorer =\n  (toJobExplorer, queryParams) =>\n  ({ date, id }) => {\n    if (id === -1) {\n      // disable clicking on \"others\" block\n      return;\n    }\n\n    const { sort_by, ...rest } = queryParams;\n    const formattedDate = dateForJobExplorer(date);\n    const initialQueryParams = {\n      ...rest,\n      quick_date_range: 'custom',\n      start_date: formattedDate,\n      end_date: formattedDate,\n      status: [\n        'successful',\n        'failed',\n        'new',\n        'pending',\n        'waiting',\n        'error',\n        'canceled',\n        'running',\n      ],\n      org_id: [id],\n    };\n\n    toJobExplorer(initialQueryParams);\n  };\n\nconst chartMapper = [\n  {\n    api: readJobExplorer,\n    attr: 'total_count',\n    label: 'Jobs across organizations',\n    onClick: redirectToJobExplorer,\n    tooltip: OrgsTooltip,\n  },\n  {\n    api: readHostExplorer,\n    attr: 'total_unique_host_count',\n    label: 'Hosts across organizations',\n    onClick: () => null,\n    tooltip: HostsTooltip,\n  },\n];\nconst qsConfig = getQSConfig(\n  'organization-statistics',\n  { ...constants.defaultParams },\n  ['limit', 'offset']\n);\n\nconst OrganizationStatistics = ({ history }) => {\n  const toJobExplorer = useRedirect(history, 'jobExplorer');\n  const [activeTabKey, setActiveTabKey] = useState(0);\n\n  // params from toolbar/searchbar\n  const { queryParams, setFromToolbar } = useQueryParams(qsConfig);\n\n  const {\n    error: preflightError,\n    isLoading: preflightIsLoading,\n    isSuccess: preflightIsSuccess,\n    request: setPreflight,\n  } = useRequest(\n    useCallback(async () => {\n      const preflight = await preflightRequest();\n      return { preflight: preflight };\n    }, []),\n    { preflight: {}, preflightError, preflightIsLoading, preflightIsSuccess }\n  );\n\n  const {\n    result: { jobs },\n    error: jobsError,\n    isLoading: jobsIsLoading,\n    isSuccess: jobsIsSuccess,\n    request: setJobs,\n  } = useRequest(\n    useCallback(async () => {\n      const jobs = await readJobExplorer({ params: jobRunsByOrgParams });\n      return { jobs: jobs };\n    }, [queryParams]),\n    { jobs: [], jobsError, jobsIsLoading, jobsIsSuccess }\n  );\n\n  const {\n    result: { orgs },\n    error: orgsError,\n    isLoading: orgsIsLoading,\n    isSuccess: orgsIsSuccess,\n    request: setOrgs,\n  } = useRequest(\n    useCallback(\n      async (tabIndex = 0) => {\n        let orgs;\n        if (tabIndex === 0) {\n          orgs = await readJobExplorer({ params: jobsByDateAndOrgParams });\n        } else {\n          orgs = await readHostExplorer({ params: hostAcrossOrgParams });\n        }\n        return { orgs: orgs };\n      },\n      [queryParams]\n    ),\n    { orgs: [], orgsError, orgsIsLoading, orgsIsSuccess }\n  );\n\n  const {\n    result: { options },\n    error: optionsError,\n    isLoading: optionsIsLoading,\n    isSuccess: optionsIsSuccess,\n    request: setOptions,\n  } = useRequest(\n    useCallback(async () => {\n      const options = await readOrgOptions({ params: queryParams });\n      return { options: options };\n    }, [queryParams]),\n    { options: {}, optionsError, optionsIsLoading, optionsIsSuccess }\n  );\n\n  const {\n    result: { tasks },\n    error: tasksError,\n    isLoading: tasksIsLoading,\n    isSuccess: tasksIsSuccess,\n    request: setTasks,\n  } = useRequest(\n    useCallback(async () => {\n      const tasks = await readJobExplorer({ params: jobEventsByOrgParams });\n      return {\n        tasks: tasks,\n      };\n    }, [queryParams]),\n    { tasks: [], tasksError, tasksIsLoading, tasksIsSuccess }\n  );\n\n  useEffect(() => {\n    setOrgs(activeTabKey);\n  }, [activeTabKey]);\n\n  useEffect(() => {\n    setOrgs();\n    setTasks();\n    setOptions();\n    setJobs();\n  }, [queryParams]);\n\n  const jobEventsByOrgParams = {\n    ...queryParams,\n    attributes: ['host_task_count'],\n    group_by: 'org',\n    include_others: true,\n    sort_by: `host_task_count:desc`,\n  };\n\n  const jobRunsByOrgParams = {\n    ...queryParams,\n    attributes: ['total_count'],\n    group_by: 'org',\n    include_others: true,\n    sort_by: `total_count:desc`,\n  };\n\n  const jobsByDateAndOrgParams = {\n    ...queryParams,\n    attributes: ['total_count'],\n    group_by: 'org',\n    group_by_time: true,\n    sort_by: `total_count:desc`,\n  };\n\n  const hostAcrossOrgParams = {\n    ...queryParams,\n    attributes: ['total_unique_host_count'],\n    group_by: 'org',\n    group_by_time: true,\n    sort_by: `host_task_count:desc`,\n  };\n\n  const handleTabClick = (_, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({\n      id: 'organization-statistics',\n      secondaryNav: true,\n    });\n    setPreflight();\n  }, []);\n\n  if (preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  const renderContent = () => {\n    if (preflightError) return <EmptyState preflightError={preflightError} />;\n\n    if (!preflightError)\n      return (\n        <Grid hasGutter>\n          <GridItem span={12}>\n            <Card>\n              <Tabs activeKey={activeTabKey} onSelect={handleTabClick}>\n                <Tab eventKey={0} title={'Jobs'} />\n                <Tab eventKey={1} title={'Hosts'} />\n              </Tabs>\n              <CardBody>\n                {orgsIsLoading && <LoadingState />}\n                {orgsError && <ApiErrorState message={orgsError.error} />}\n                {orgsIsSuccess && orgs.dates?.length <= 0 && <NoData />}\n                {orgsIsSuccess && orgs.dates?.length > 0 && (\n                  <GroupedBarChart\n                    margin={{ top: 20, right: 20, bottom: 50, left: 50 }}\n                    id=\"d3-grouped-bar-chart-root\"\n                    data={orgsChartMapper(\n                      orgs.dates,\n                      orgs.meta,\n                      chartMapper[activeTabKey].attr\n                    )}\n                    legend={orgs.meta.legend}\n                    history={history}\n                    colorFunc={colorFunc}\n                    yLabel={chartMapper[activeTabKey].label}\n                    onClick={chartMapper[activeTabKey].onClick(\n                      toJobExplorer,\n                      queryParams\n                    )}\n                    TooltipClass={chartMapper[activeTabKey].tooltip}\n                  />\n                )}\n              </CardBody>\n            </Card>\n          </GridItem>\n          <GridItem span={6}>\n            <Card>\n              <CardTitle>\n                <h2>Job Runs by Organization</h2>\n              </CardTitle>\n              <Divider />\n              <CardBody>\n                {jobsIsLoading && <LoadingState />}\n                {jobsError && <ApiErrorState message={jobsError.error} />}\n                {jobsIsSuccess && jobs.items?.length <= 0 && <NoData />}\n                {jobsIsSuccess && jobs.items?.length > 0 && (\n                  <PieChart\n                    margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                    id=\"d3-donut-1-chart-root\"\n                    data={pieChartMapper(jobs.items, 'total_count')}\n                    colorFunc={colorFunc}\n                  />\n                )}\n              </CardBody>\n            </Card>\n          </GridItem>\n          <GridItem span={6}>\n            <Card>\n              <CardTitle>\n                <h2>Usage by Organization (Tasks)</h2>\n              </CardTitle>\n              <Divider />\n              <CardBody>\n                {tasksIsLoading && <LoadingState />}\n                {tasksError && <ApiErrorState message={tasksError.error} />}\n                {tasksIsSuccess && tasks.items?.length <= 0 && <NoData />}\n                {tasksIsSuccess && tasks.items?.length > 0 && (\n                  <PieChart\n                    margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                    id=\"d3-donut-2-chart-root\"\n                    data={pieChartMapper(tasks.items, 'host_task_count')}\n                    colorFunc={colorFunc}\n                  />\n                )}\n              </CardBody>\n            </Card>\n          </GridItem>\n        </Grid>\n      );\n\n    return '';\n  };\n\n  return (\n    <>\n      <PageHeader>\n        <PageHeaderTitle title={'Organization Statistics'} />\n        <FilterableToolbar\n          categories={options}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n          qsConfig={qsConfig}\n        />\n      </PageHeader>\n      <Main>{renderContent()}</Main>\n    </>\n  );\n};\n\nOrganizationStatistics.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default OrganizationStatistics;\n","var pfmulti = [\n    '#06C',\n    '#4CB140',\n    '#009596',\n    '#5752D1',\n    '#F4C145',\n    '#EC7A08',\n    '#8BC1F7',\n    '#23511E',\n    '#A2D9D9',\n    '#2A265F',\n    '#F9E0A2',\n    '#8F4700',\n    '#002F5D',\n];\nexport { pfmulti };\n","import React, { useCallback, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { Card, CardBody } from '@patternfly/react-core';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport Breadcrumbs from '../../../Components/Breadcrumbs';\n\nimport { readPlanOptions } from '../../../Api/';\n\nimport Form from '../Shared/Form';\n\nimport { Paths } from '../../../paths';\nimport useRequest from '../../../Utilities/useRequest';\n\nconst Add = () => {\n  const {\n    result: options,\n    isSuccess,\n    request: fetchPlanOptions,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await readPlanOptions();\n      return {\n        data: response,\n      };\n    }, []),\n    {\n      options: {},\n    }\n  );\n\n  useEffect(() => {\n    fetchPlanOptions();\n  }, [fetchPlanOptions]);\n\n  const canWrite =\n    isSuccess &&\n    (options.data?.meta?.rbac?.perms?.write === true ||\n      options.data?.meta?.rbac?.perms?.all === true);\n  const title = 'Create new plan';\n\n  const showAdd = () => (\n    <>\n      <PageHeader>\n        <Breadcrumbs\n          items={[{ title: 'Savings Planner', navigate: '/savings-planner' }]}\n        />\n        <PageHeaderTitle title={title} />\n      </PageHeader>\n      <Main>\n        <Card>\n          <CardBody>\n            <Form title={title} options={options} />\n          </CardBody>\n        </Card>\n      </Main>\n    </>\n  );\n  if (isSuccess) {\n    return canWrite ? showAdd() : <Redirect to={Paths.savingsPlanner} />;\n  }\n  return null;\n};\n\nexport default Add;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { CardActions } from '@patternfly/react-core';\nimport styled from 'styled-components';\n\nconst CardActionsWrapper = styled.div`\n  margin-top: 20px;\n  --pf-c-card__actions--PaddingLeft: 0;\n`;\n\nconst CardActionsRow = ({ children }) => {\n  return (\n    <CardActionsWrapper>\n      <CardActions>{children}</CardActions>\n    </CardActionsWrapper>\n  );\n};\n\nCardActionsRow.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default CardActionsRow;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\nimport { Button, Badge, Alert, Tooltip } from '@patternfly/react-core';\nimport AlertModal from '../AlertModal';\nimport { getRelatedResourceDeleteCounts } from '../../Utilities/getRelatedResourceDeleteDetails';\nimport ErrorDetail from '../ErrorDetail';\n\nconst WarningMessage = styled(Alert)`\n  margin-top: 10px;\n`;\n\nconst Label = styled.span`\n  && {\n    margin-right: 10px;\n  }\n`;\n\nconst DeleteButton = ({\n  onConfirm,\n  modalTitle = 'Delete',\n  name = '',\n  variant = 'secondary',\n  isDisabled = false,\n  ouiaId = null,\n  deleteMessage = 'Delete?',\n  deleteDetailsRequests = [],\n  disabledTooltip = 'This item cannot be deleted',\n  children,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [deleteMessageError, setDeleteMessageError] = useState();\n  const [deleteDetails, setDeleteDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const toggleModal = async (isModalOpen) => {\n    setIsLoading(true);\n    if (deleteDetailsRequests.length > 0 && isModalOpen) {\n      const { results, error } = await getRelatedResourceDeleteCounts(\n        deleteDetailsRequests\n      );\n      if (error) {\n        setDeleteMessageError(error);\n      } else {\n        setDeleteDetails(results);\n      }\n    }\n    setIsLoading(false);\n    setIsOpen(isModalOpen);\n  };\n\n  if (deleteMessageError) {\n    return (\n      <AlertModal\n        isOpen={!!deleteMessageError}\n        variant={'error'}\n        title={'Error!'}\n        onClose={() => {\n          toggleModal(false);\n          setDeleteMessageError();\n        }}\n      >\n        <ErrorDetail error={deleteMessageError.detail} />\n      </AlertModal>\n    );\n  }\n\n  return (\n    <>\n      {disabledTooltip ? (\n        <Tooltip content={disabledTooltip} position=\"top\">\n          <div>\n            <Button\n              spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n              variant={variant || 'secondary'}\n              aria-label={'Delete'}\n              isDisabled={isDisabled}\n              onClick={() => toggleModal(true)}\n              ouiaId={ouiaId}\n            >\n              {children || 'Delete'}\n            </Button>\n          </div>\n        </Tooltip>\n      ) : (\n        <Button\n          ouiaId={ouiaId}\n          spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n          variant={variant || 'secondary'}\n          aria-label={'Delete'}\n          isDisabled={isDisabled}\n          onClick={() => toggleModal(true)}\n        >\n          {children || 'Delete'}\n        </Button>\n      )}\n      <AlertModal\n        isOpen={isOpen}\n        title={modalTitle}\n        variant=\"danger\"\n        onClose={() => toggleModal(false)}\n        actions={[\n          <Button\n            ouiaId=\"delete-modal-confirm\"\n            key=\"delete\"\n            variant=\"danger\"\n            aria-label={'Confirm Delete'}\n            isDisabled={isDisabled}\n            onClick={() => {\n              onConfirm();\n              toggleModal(false);\n            }}\n          >\n            {'Delete'}\n          </Button>,\n          <Button\n            ouiaId=\"delete-modal-cancel\"\n            key=\"cancel\"\n            variant=\"link\"\n            aria-label={'Cancel'}\n            onClick={() => toggleModal(false)}\n          >\n            {'Cancel'}\n          </Button>,\n        ]}\n      >\n        {'Are you sure you want to delete:'}\n        <br />\n        <strong>{name}</strong>\n        {Object.values(deleteDetails).length > 0 && (\n          <WarningMessage\n            variant=\"warning\"\n            isInline\n            title={\n              <div>\n                <div aria-label={deleteMessage}>{deleteMessage}</div>\n                <br />\n                {Object.entries(deleteDetails).map(([key, value]) => (\n                  <div aria-label={`${key}: ${value}`} key={key}>\n                    <Label>{key}</Label> <Badge>{value}</Badge>\n                  </div>\n                ))}\n              </div>\n            }\n          />\n        )}\n      </AlertModal>\n    </>\n  );\n};\n\nDeleteButton.propTypes = {\n  onConfirm: PropTypes.func.isRequired,\n  modalTitle: PropTypes.string,\n  name: PropTypes.string,\n  variant: PropTypes.object,\n  isDisabled: PropTypes.bool,\n  ouiaId: PropTypes.string,\n  deleteMessage: PropTypes.string,\n  deleteDetailsRequests: PropTypes.array,\n  disabledTooltip: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nexport default DeleteButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { shape, string, number, arrayOf, node, oneOfType } from 'prop-types';\nimport { Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst RoutedTabs = ({ tabsArray, defaultTabId }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const getActiveTabId = (defaultTabId) => {\n    return (\n      tabsArray.find((tab) => tab.link === location.pathname)?.id ||\n      defaultTabId\n    );\n  };\n\n  const handleTabSelect = (_, eventKey) => {\n    const match = tabsArray.find((tab) => tab.id === eventKey);\n    if (match) {\n      history.push(match.link);\n    }\n  };\n\n  return (\n    <Tabs activeKey={getActiveTabId(defaultTabId)} onSelect={handleTabSelect}>\n      {tabsArray.map((tab) => (\n        <Tab\n          aria-label={typeof tab.name === 'string' ? tab.name : `${tab.id} tab`}\n          eventKey={tab.id}\n          key={tab.id}\n          link={tab.link}\n          title={<TabTitleText>{tab.name}</TabTitleText>}\n          role=\"tab\"\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nRoutedTabs.propTypes = {\n  defaultTabId: PropTypes.number,\n  tabsArray: arrayOf(\n    shape({\n      id: number.isRequired,\n      link: string.isRequired,\n      name: oneOfType([string.isRequired, node.isRequired]),\n    })\n  ).isRequired,\n};\n\nRoutedTabs.defaultProps = {\n  defaultTabId: 1,\n};\n\nexport default RoutedTabs;\n","import React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\nimport { Paths } from '../../../../paths';\nimport { stringify } from 'query-string';\n\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { Button } from '@patternfly/react-core';\n\nimport {\n  CardBody as PFCardBody,\n  CardFooter,\n  DescriptionList,\n  DescriptionListTerm,\n  DescriptionListGroup,\n  DescriptionListDescription,\n  Divider as PFDivider,\n  Label,\n  List,\n  ListItem,\n} from '@patternfly/react-core';\nimport CardActionsRow from '../../../../Components/CardActionsRow';\nimport {\n  relatedResourceDeleteRequests,\n  getRelatedResourceDeleteCounts,\n} from '../../../../Utilities/getRelatedResourceDeleteDetails';\nimport { deletePlan, readPlan } from '../../../../Api/';\nimport useRequest, {\n  useDismissableError,\n} from '../../../../Utilities/useRequest';\nimport DeleteButton from '../../../../Components/DeleteButton/DeleteButton';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { formatDateTime } from '../../../../Utilities/helpers';\nimport RoutedTabs from '../../../../Components/RoutedTabs';\nimport AlertModal from '../../../../Components/AlertModal/AlertModal';\nimport ErrorDetail from '../../../../Components/ErrorDetail/ErrorDetail';\nimport JobStatus from '../../../../Components/JobStatus';\n\nconst CardBody = styled(PFCardBody)`\n  min-height: 500px;\n  padding: 0;\n  padding-bottom: 20px;\n\n  &:first-child {\n    padding-top: 0;\n  }\n`;\n\nconst Divider = styled(PFDivider)`\n  padding-top: 24px;\n`;\n\nconst DetailsTab = ({ tabsArray, plans, canWrite, options }) => {\n  const { pathname } = useLocation();\n  const history = useHistory();\n  const {\n    id,\n    automation_status,\n    category,\n    description,\n    frequency_period,\n    hosts,\n    manual_time,\n    modified,\n    name,\n    tasks,\n    template_details,\n    template_id,\n  } = plans[0];\n\n  const redirectToJobExplorer = (templateId) => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      quick_date_range: 'last_30_days',\n      status: ['failed', 'successful'],\n      template_id: [templateId],\n    };\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const showTemplate = (template_details) => {\n    if (!template_details.id) {\n      return;\n    }\n\n    return (\n      <a onClick={() => redirectToJobExplorer(template_details.id)}>\n        {template_details.name}\n      </a>\n    );\n  };\n\n  const renderOptionsBasedValue = (key, val) => {\n    const fromOptionsValue = (options[key] || []).find(\n      ({ key: apiValue }) => apiValue === val\n    );\n    return (fromOptionsValue || {}).value;\n  };\n\n  const labelsAndValues = {\n    Name: name || undefined,\n    'Automation type': category\n      ? renderOptionsBasedValue('category', category)\n      : undefined,\n    Description: description || undefined,\n    'Manual time': manual_time\n      ? renderOptionsBasedValue('manual_time', manual_time)\n      : undefined,\n    'Run on hosts': hosts || undefined,\n    Frequency: frequency_period\n      ? renderOptionsBasedValue('frequency_period', frequency_period)\n      : undefined,\n    Template: template_id ? showTemplate(template_details) : undefined,\n    'Last job status':\n      automation_status.status && automation_status.status !== 'None' ? (\n        <JobStatus status={automation_status.status} />\n      ) : (\n        <Label variant=\"outline\" color=\"red\" icon={<ExclamationCircleIcon />}>\n          Not Running\n        </Label>\n      ),\n    'Last updated': modified ? (\n      <span>{formatDateTime(modified)}</span>\n    ) : undefined,\n  };\n\n  const { request: deletePlans, error: deleteError } = useRequest(\n    useCallback(async () => {\n      await deletePlan({ id });\n      history.push(`/savings-planner`);\n    }, [id, history])\n  );\n\n  const {\n    result: { isDeleteDisabled },\n    error: deleteDetailsError,\n    request: fetchDeleteDetails,\n  } = useRequest(\n    useCallback(async () => {\n      const { results: deleteDetails, error } =\n        await getRelatedResourceDeleteCounts(\n          relatedResourceDeleteRequests.savingsPlan(plans[0], readPlan)\n        );\n      if (error) {\n        throw new Error(error);\n      }\n      if (deleteDetails) {\n        return { isDeleteDisabled: true };\n      }\n      return { isDeleteDisabled: false };\n    }, [plans[0]]),\n    { isDeleteDisabled: false }\n  );\n\n  useEffect(() => {\n    fetchDeleteDetails();\n  }, [fetchDeleteDetails]);\n  const { error, dismissError } = useDismissableError(\n    deleteError || deleteDetailsError\n  );\n\n  return (\n    <>\n      {plans && (\n        <>\n          <CardBody>\n            <RoutedTabs tabsArray={tabsArray} />\n            <div style={{ padding: '1rem' }}>\n              <DescriptionList isHorizontal columnModifier={{ lg: '3Col' }}>\n                {Object.keys(labelsAndValues).map(\n                  (key, i) =>\n                    labelsAndValues[key] !== undefined && (\n                      <DescriptionListGroup key={i}>\n                        <DescriptionListTerm>{key}</DescriptionListTerm>\n                        <DescriptionListDescription>\n                          {labelsAndValues[key]}\n                        </DescriptionListDescription>\n                      </DescriptionListGroup>\n                    )\n                )}\n              </DescriptionList>\n              {tasks.length > 0 && (\n                <DescriptionList>\n                  <Divider component=\"div\" />\n                  <DescriptionListGroup key={tasks}>\n                    <DescriptionListTerm>Tasks</DescriptionListTerm>\n                    <DescriptionListDescription>\n                      <List component=\"ol\" type=\"1\">\n                        {tasks.map(({ id, task }) => (\n                          <ListItem key={id}>{task}</ListItem>\n                        ))}\n                      </List>\n                    </DescriptionListDescription>\n                  </DescriptionListGroup>\n                </DescriptionList>\n              )}\n            </div>\n          </CardBody>\n          {canWrite && (\n            <CardFooter>\n              <CardActionsRow>\n                <Button\n                  key=\"edit-plan-button\"\n                  variant=\"primary\"\n                  aria-label=\"Edit plan\"\n                  onClick={() => {\n                    history.push({\n                      pathname: `${pathname.split('/details')[0]}/edit`,\n                    });\n                  }}\n                >\n                  Edit\n                </Button>\n                <DeleteButton\n                  key={'delete-plan-button'}\n                  name={name}\n                  modalTitle={'Delete Plan'}\n                  onConfirm={deletePlans}\n                  disabledTooltip={\n                    isDeleteDisabled && 'This plan cannot be deleted'\n                  }\n                >\n                  {'Delete'}\n                </DeleteButton>\n              </CardActionsRow>\n              {error && (\n                <AlertModal\n                  isOpen={!!error}\n                  onClose={dismissError}\n                  title={'Error'}\n                  variant=\"error\"\n                >\n                  <ErrorDetail error={error.detail} />\n                </AlertModal>\n              )}\n            </CardFooter>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nDetailsTab.propTypes = {\n  plans: PropTypes.array,\n  tabsArray: PropTypes.array,\n  canWrite: PropTypes.bool.isRequired,\n  options: PropTypes.object.isRequired,\n};\n\nexport default DetailsTab;\n","var hoursFormatter = function (n) {\n    return (+n.toFixed(0)).toLocaleString() + \" hours\";\n}; /* 2,500 hours */\nexport default hoursFormatter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle, Title } from '@patternfly/react-core';\nimport currencyFormatter from '../../../../../Utilities/currencyFormatter';\nimport hoursFormatter from '../../../../../Utilities/hoursFormatter';\nvar TotalSavings = function (_a) {\n    var _b = _a.value, value = _b === void 0 ? 0 : _b, _c = _a.isMoney, isMoney = _c === void 0 ? true : _c;\n    return (React.createElement(Card, { isPlain: true },\n        React.createElement(CardTitle, { style: { paddingBottom: '0' } }, \"Total savings\"),\n        React.createElement(CardBody, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"4xl\", style: { color: isMoney ? '#81C46B' : '#0063CF' } }, isMoney ? \"\" + currencyFormatter(value) : \"\" + hoursFormatter(value)))));\n};\nTotalSavings.propTypes = {\n    value: PropTypes.number,\n    isMoney: PropTypes.bool,\n};\nexport default TotalSavings;\n","import React, { useState } from 'react';\nimport { Button, ButtonVariant, CodeBlock, CodeBlockCode, Modal, ModalVariant, } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons';\nvar CostsText = function () { return (React.createElement(React.Fragment, null,\n    React.createElement(\"p\", null,\n        React.createElement(\"strong\", null, \"Cost\")),\n    React.createElement(\"p\", null, \"The cost includes the hours spent in implementation, deployment, training and other expenditures for creating, maintaining and running the automation. These hours (cost of investment) are usually higher at the onset, and will be greatly reduced once the automation has been created and only maintenance is required.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"For the initial period and the first year, we assume approximately 10 hours spent on each host, as well as some buffer time and a 40% risk adjustment to account for unforeseen situations.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"For the next two years after the first year, we assume 4 hours spent on each host, as well as a 40% risk adjustment to account for unforeseen situations.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate cost for the initial period and year 1:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"C1 = (time for a manual run on one host in hours * 10) + buffer time\\nC2 = C1 * 40% risk adjustment\\ninitial cost = (C1 + C2) * (cost per hour in USD if applicable, based on display)\\nyear 1 cost = (C1 + C2) * (cost per hour in USD if applicable, based on display)\")),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate cost for years 2 and 3:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"C1 = (time for a manual run on one host in hours * 4)\\nC2 = C1 * 40% risk adjustment\\nyear 2 cost = (C1 + C2) * (cost per hour in USD if applicable, based on display)\\nyear 3 cost = (C1 + C2) * (cost per hour in USD if applicable, based on display)\")))); };\nvar SavingsText = function () { return (React.createElement(React.Fragment, null,\n    React.createElement(\"p\", null,\n        React.createElement(\"strong\", null, \"Savings\")),\n    React.createElement(\"p\", null, \"The savings indicates the time and money saved as a result of automating the plan.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"We assume 50% productivity recapture to account for the productivity that is usually gained by repeated manual implementation of a task over a period of time. We also add a -5% risk adjustment for unforeseen situations that might arise and need to be handled. We also assume a 15% year over year growth in savings.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"Money savings for the initial period is 0, so there is no formula necessary.\"),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate savings for year 0:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"initial period savings = 0 - initial cost\")),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used for savings for year 1:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"S1 = (number of hosts * (manual time in minutes / 60) * yearly frequency of automation)\\nS2 = S1 * 50% productivity recapture\\nS3 = S2 * 5% risk adjustment * (cost per hour in USD if applicable, based on display)\\nyear 1 savings = S2 - S3 - year 1 cost\")),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate savings for year 2:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"S1 = year 1 savings * 15% growth\\nyear 2 savings = year 1 savings + S1 - year 2 cost\")),\n    React.createElement(\"br\", null),\n    React.createElement(\"p\", null, \"The formula used to calculate savings for year 3:\"),\n    React.createElement(CodeBlock, null,\n        React.createElement(CodeBlockCode, null, \"S2 = year 2 savings * 15% growth\\nyear 3 savings = year 2 savings + S2 - year 3 cost\")))); };\nvar FormulaDescription = function () {\n    var _a = useState(false), isOpen = _a[0], setIsOpen = _a[1];\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Button, { variant: \"link\", onClick: function () { return setIsOpen(true); }, icon: React.createElement(InfoCircleIcon, null) }, \"Automation formula\"),\n        React.createElement(Modal, { title: \"Automation formula\", isOpen: isOpen, onClose: function () { return setIsOpen(false); }, variant: ModalVariant.medium, actions: [\n                React.createElement(Button, { key: \"cancel\", variant: ButtonVariant.primary, onClick: function () { return setIsOpen(false); } }, \"Close\"),\n            ] },\n            React.createElement(\"p\", null, \"We use risk-adjusted factors to create the 3-year projection of cost and savings related to automation. While we aim to provide as accurate an account of the cost and savings as possible, actual values may differ in practice. The following information breaks down where we get the data, the risk-adjustment factors we use, the assumptions we make, and the formula used to compute the values as displayed in the chart.\"),\n            React.createElement(\"br\", null),\n            React.createElement(CostsText, null),\n            React.createElement(\"br\", null),\n            React.createElement(SavingsText, null))));\n};\nexport default FormulaDescription;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardActions, CardBody, CardHeader, CardTitle, Grid, GridItem, List, ListItem, ToggleGroup, ToggleGroupItem, } from '@patternfly/react-core';\nimport { SquareFullIcon } from '@patternfly/react-icons';\nimport ChartRenderer, { functions, ChartKind, ChartThemeColor, ChartType, ChartTopLevelType, ApiType, } from 'react-json-chart-builder';\nimport RoutedTabs from '../../../../Components/RoutedTabs';\nimport TotalSavings from './TotalSavings';\nimport FormulaDescription from './FormulaDescription';\nimport currencyFormatter from '../../../../Utilities/currencyFormatter';\nimport hoursFormatter from '../../../../Utilities/hoursFormatter';\nvar yearLabels = {\n    initial: 'Initial',\n    year1: 'Year 1',\n    year2: 'Year 2',\n    year3: 'Year 3',\n};\nvar getChartData = function (data) {\n    var statsData = Object.keys(yearLabels).map(function (year) { return ({\n        year: yearLabels[year],\n        total_costs: +data.projections.monetary_stats.total_costs[year] * -1,\n        total_benefits: +data.projections.monetary_stats.total_benefits[year],\n        cumulative_net_benefits: +data.projections.monetary_stats.cumulative_net_benefits[year],\n        total_hours_spent_risk_adjusted: +data.projections.time_stats.total_hours_spent_risk_adjusted[year] * -1,\n        total_hours_saved: +data.projections.time_stats.total_hours_saved[year],\n        cumulative_time_net_benefits: +data.projections.time_stats.cumulative_time_net_benefits[year],\n    }); });\n    return { items: statsData, type: ApiType.nonGrouped, response_type: '' };\n};\nvar constants = function (isMoney) { return ({\n    cost: {\n        key: isMoney ? 'total_costs' : 'total_hours_spent_risk_adjusted',\n        color: '#8B8D8F',\n    },\n    benefit: {\n        key: isMoney ? 'total_benefits' : 'total_hours_saved',\n        color: isMoney ? '#81C46B' : '#0063CF',\n    },\n    net: {\n        key: isMoney ? 'cumulative_net_benefits' : 'cumulative_time_net_benefits',\n        color: '#EE7A00',\n    },\n}); };\nvar StatisticsTab = function (_a) {\n    var tabsArray = _a.tabsArray, data = _a.data;\n    var _b = useState(true), isMoney = _b[0], setIsMoney = _b[1];\n    var customTooltipFormatting = function (datum) {\n        return isMoney ? currencyFormatter(+datum.y) : hoursFormatter(+datum.y);\n    };\n    var computeTotalSavings = function (d) {\n        return isMoney\n            ? d.projections.monetary_stats.cumulative_net_benefits.year3\n            : d.projections.time_stats.cumulative_time_net_benefits.year3;\n    };\n    var barChartData = {\n        charts: [\n            {\n                id: 1000,\n                kind: ChartKind.wrapper,\n                type: ChartTopLevelType.chart,\n                parent: null,\n                props: {\n                    height: 600,\n                    domainPadding: {\n                        x: 100,\n                    },\n                    padding: {\n                        bottom: 60,\n                        left: 80,\n                    },\n                    themeColor: ChartThemeColor.gray,\n                },\n                tooltip: {\n                    cursor: true,\n                    stickToAxis: 'x',\n                    mouseFollow: true,\n                    legendTooltip: {\n                        legendData: [\n                            {\n                                childName: constants(isMoney).benefit.key,\n                                name: 'Savings',\n                                symbol: {\n                                    fill: constants(isMoney).benefit.color,\n                                },\n                            },\n                            {\n                                childName: constants(isMoney).cost.key,\n                                name: 'Costs',\n                                symbol: {\n                                    fill: constants(isMoney).cost.color,\n                                },\n                            },\n                            {\n                                childName: constants(isMoney).net.key,\n                                name: 'Cumulative savings',\n                                symbol: {\n                                    fill: constants(isMoney).net.color,\n                                },\n                            },\n                        ],\n                        titleProperyForLegend: 'year',\n                    },\n                    customFnc: customTooltipFormatting,\n                },\n                xAxis: {\n                    label: 'Time',\n                },\n                yAxis: {\n                    label: isMoney ? 'Money Saved' : 'Hours Saved',\n                    tickFormat: 'formatNumberAsK',\n                    style: {\n                        grid: { stroke: '#D2D2D2' },\n                        axisLabel: { padding: 60 },\n                    },\n                },\n            },\n            {\n                id: 1001,\n                kind: ChartKind.stack,\n                parent: 1000,\n                props: {},\n            },\n            {\n                id: 1102,\n                kind: ChartKind.simple,\n                type: ChartType.bar,\n                name: constants(isMoney).benefit.key,\n                parent: 1001,\n                props: {\n                    x: 'year',\n                    y: constants(isMoney).benefit.key,\n                    barRatio: 0.8,\n                    barWidth: 0,\n                    style: {\n                        data: {\n                            fill: constants(isMoney).benefit.color,\n                            width: 120,\n                        },\n                    },\n                },\n                tooltip: {\n                    labelName: '',\n                },\n            },\n            {\n                id: 1101,\n                kind: ChartKind.simple,\n                type: ChartType.bar,\n                name: constants(isMoney).cost.key,\n                parent: 1001,\n                props: {\n                    x: 'year',\n                    y: constants(isMoney).cost.key,\n                    barRatio: 0.8,\n                    barWidth: 0,\n                    style: {\n                        data: {\n                            fill: constants(isMoney).cost.color,\n                            width: 120,\n                        },\n                    },\n                },\n                tooltip: {\n                    labelName: '',\n                },\n            },\n            {\n                id: 1002,\n                kind: ChartKind.simple,\n                type: ChartType.line,\n                name: constants(isMoney).net.key,\n                parent: 1000,\n                props: {\n                    x: 'year',\n                    y: constants(isMoney).net.key,\n                    style: {\n                        data: {\n                            stroke: constants(isMoney).net.color,\n                            strokeWidth: 5,\n                        },\n                    },\n                },\n                tooltip: {\n                    labelName: '',\n                },\n            },\n        ],\n        functions: __assign(__assign({}, functions), { fetchFnc: function () {\n                return new Promise(function (resolve) {\n                    resolve(getChartData(data));\n                });\n            } }),\n    };\n    var renderLeft = function () { return (React.createElement(Card, { isPlain: true },\n        React.createElement(CardHeader, null,\n            React.createElement(CardActions, null,\n                React.createElement(ToggleGroup, { \"aria-label\": \"toggleButton\" },\n                    React.createElement(ToggleGroupItem, { text: \"Money\", buttonId: \"money\", isSelected: isMoney, onChange: function () { return setIsMoney(true); } }),\n                    React.createElement(ToggleGroupItem, { text: \"Time\", buttonId: \"time\", isSelected: !isMoney, onChange: function () { return setIsMoney(false); } }))),\n            React.createElement(CardTitle, null, data.name)),\n        React.createElement(CardBody, null,\n            React.createElement(ChartRenderer, { schema: barChartData.charts, functions: barChartData.functions })))); };\n    var renderRight = function () { return (React.createElement(React.Fragment, null,\n        React.createElement(TotalSavings, { value: computeTotalSavings(data), isMoney: isMoney }),\n        React.createElement(Card, { isPlain: true },\n            React.createElement(CardBody, null,\n                React.createElement(List, { isPlain: true },\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).benefit.color }) }, \"Savings from automating this plan\"),\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).cost.color }) }, \"Costs from creating, maintaining and running the automation\"),\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).net.color }) }, \"Cumulative savings over time\")))),\n        React.createElement(FormulaDescription, null))); };\n    return (React.createElement(Card, null,\n        React.createElement(RoutedTabs, { tabsArray: tabsArray }),\n        React.createElement(Grid, null,\n            React.createElement(GridItem, { span: 9 }, renderLeft()),\n            React.createElement(GridItem, { span: 3 }, renderRight()))));\n};\nStatisticsTab.propTypes = {\n    /* eslint-disable-next-line */\n    /* @ts-ignore: Validation error */\n    data: PropTypes.object.isRequired,\n    tabsArray: PropTypes.arrayOf(PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        link: PropTypes.string.isRequired,\n        name: PropTypes.node.isRequired,\n    }).isRequired).isRequired,\n};\nexport default StatisticsTab;\n","import React, { useCallback, useEffect } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { readPlanOptions } from '../../../Api/';\nimport { Paths } from '../../../paths';\n\nimport Form from '../Shared/Form';\nimport useRequest from '../../../Utilities/useRequest';\n\nconst Edit = ({ data }) => {\n  const { id } = useParams();\n\n  const {\n    result: options,\n    isSuccess,\n    request: fetchPlanOptions,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await readPlanOptions();\n      return {\n        data: response,\n      };\n    }, []),\n    {\n      options: {},\n    }\n  );\n\n  useEffect(() => {\n    fetchPlanOptions();\n  }, [fetchPlanOptions]);\n\n  const canWrite =\n    isSuccess &&\n    (options.data?.meta?.rbac?.perms?.write === true ||\n      options.data?.meta?.rbac?.perms?.all === true);\n\n  const showEdit = () => (\n    <>\n      <Form title=\"Edit plan\" options={options} data={data} />\n    </>\n  );\n\n  if (isSuccess) {\n    return canWrite ? (\n      showEdit()\n    ) : (\n      <Redirect to={`${Paths.savingsPlanner}/${id}`} />\n    );\n  }\n  return null;\n};\n\nEdit.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default Edit;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useParams, useLocation, Route, Switch } from 'react-router-dom';\nimport { CaretLeftIcon } from '@patternfly/react-icons';\nimport { Card } from '@patternfly/react-core';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\n\nimport DetailsTab from './DetailsTab';\nimport StatisticsTab from './StatisticsTab';\nimport SavingsPlanner from '../List';\nimport ApiErrorState from '../../../Components/ApiErrorState';\nimport { notAuthorizedParams } from '../../../Utilities/constants';\n\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nimport Breadcrumbs from '../../../Components/Breadcrumbs';\n\nimport { preflightRequest, readPlan, readPlanOptions } from '../../../Api/';\n\nimport SavingsPlanEdit from '../Edit';\nimport useRequest from '../../../Utilities/useRequest';\n\nconst Details = () => {\n  const { id } = useParams();\n  const { state: locationState } = useLocation();\n  const [preflightError, setPreFlightError] = useState(null);\n  let pageTitle = 'Details';\n  let onEdit = false;\n  if (locationState?.reload) {\n    onEdit = true;\n  }\n  if (location.pathname.indexOf('/statistics') !== -1) {\n    pageTitle = 'Statistics';\n  } else if (location.pathname.indexOf('/edit') !== -1) {\n    pageTitle = 'Edit plan';\n  }\n  const [selectedId, setSelectedId] = useState(id);\n  const queryParams = { id: [selectedId] };\n\n  const {\n    result: { options },\n    error,\n    isSuccess,\n    request: fetchOptions,\n  } = useRequest(\n    useCallback(async () => {\n      setSelectedId(id);\n      await preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n\n      const response = await readPlanOptions();\n      return { options: response };\n    }, []),\n    { options: {} }\n  );\n\n  const {\n    result: { rbac, plans },\n    error: plansError,\n    isLoading: plansIsLoading,\n    isSuccess: plansIsSuccess,\n    request: fetchEndpoints,\n  } = useRequest(\n    useCallback(async () => {\n      setSelectedId(id);\n      await preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n      const response = await readPlan({ params: queryParams });\n      return {\n        plans: response.items,\n        rbac: response.rbac,\n      };\n    }, []),\n    { plans: [], rbac: [], plansError, plansIsLoading, plansIsSuccess }\n  );\n\n  useEffect(() => {\n    fetchOptions();\n    fetchEndpoints();\n  }, [queryParams]);\n\n  const canWrite =\n    isSuccess && (rbac.perms?.write === true || rbac.perms?.all === true);\n  const tabsArray = [\n    {\n      id: 0,\n      name: (\n        <>\n          <CaretLeftIcon />\n          {'Back to Plans'}\n        </>\n      ),\n      link: `/savings-planner`,\n    },\n    { id: 1, name: 'Details', link: `/savings-planner/${selectedId}/details` },\n    {\n      id: 2,\n      name: 'Statistics',\n      link: `/savings-planner/${selectedId}/statistics`,\n    },\n  ];\n\n  const breadcrumbUrl = `/savings-planner/${selectedId}`;\n  const breadcrumbsItems = plansIsSuccess\n    ? [\n        { title: 'Savings Planner', navigate: '/savings-planner' },\n        { title: plans[0].name, navigate: breadcrumbUrl },\n      ]\n    : [];\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n  return (\n    <>\n      {error && (\n        <>\n          <ApiErrorState message={error.error} />\n        </>\n      )}\n      {plansIsSuccess && (\n        <>\n          <PageHeader>\n            <Breadcrumbs items={breadcrumbsItems} />\n            <PageHeaderTitle title={pageTitle} />\n          </PageHeader>\n          <Main>\n            <Card>\n              <Switch>\n                <Route path=\"/savings-planner/:id/statistics\">\n                  <StatisticsTab\n                    tabsArray={tabsArray}\n                    data={plans[0]}\n                    queryParams={queryParams}\n                  />\n                </Route>\n                {!onEdit && (\n                  <Route path=\"/savings-planner/:id/details\">\n                    <DetailsTab\n                      plans={plans}\n                      tabsArray={tabsArray}\n                      canWrite={canWrite}\n                      options={options}\n                    />\n                  </Route>\n                )}\n                <Route path=\"/savings-planner/:id/edit\">\n                  <SavingsPlanEdit data={plans[0]} />\n                </Route>\n                <Route path=\"/savings-planner/:id\">\n                  <DetailsTab\n                    plans={plans}\n                    tabsArray={tabsArray}\n                    canWrite={canWrite}\n                    options={options}\n                  />\n                </Route>\n                <Route exact path=\"/savings-planner\">\n                  <SavingsPlanner />\n                </Route>\n              </Switch>\n            </Card>\n          </Main>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Details;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Title,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Button,\n} from '@patternfly/react-core';\nimport { AddCircleOIcon, SearchIcon } from '@patternfly/react-icons';\nimport { useHistory } from 'react-router-dom';\n\nconst EmptyList = ({\n  label = '',\n  title = 'No items found.',\n  message = '',\n  canAdd = false,\n  path,\n}) => {\n  const history = useHistory();\n\n  return (\n    <EmptyState variant=\"full\">\n      <EmptyStateIcon icon={canAdd ? AddCircleOIcon : SearchIcon} />\n      <Title size=\"lg\" headingLevel=\"h3\">\n        {title}\n      </Title>\n      <EmptyStateBody>{message}</EmptyStateBody>\n      {canAdd && (\n        <Button\n          key=\"add-item-button\"\n          variant=\"primary\"\n          aria-label={label}\n          onClick={() => {\n            history.push({\n              pathname: path,\n            });\n          }}\n        >\n          {label}\n        </Button>\n      )}\n    </EmptyState>\n  );\n};\n\nEmptyList.propTypes = {\n  canAdd: PropTypes.bool,\n  label: PropTypes.string,\n  message: PropTypes.string,\n  title: PropTypes.string,\n  path: PropTypes.string.isRequired,\n};\n\nexport default EmptyList;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {\n  Card,\n  CardHeader,\n  CardHeaderMain,\n  CardActions,\n  CardTitle as PFCardTitle,\n  CardBody,\n  CardFooter,\n  Checkbox as PFCheckbox,\n  Dropdown,\n  DropdownItem,\n  KebabToggle,\n  Label,\n} from '@patternfly/react-core';\n\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport styled from 'styled-components';\nimport { stringify } from 'query-string';\n\nimport { Link, useRouteMatch } from 'react-router-dom';\n\nimport { Paths } from '../../../../paths';\n\nimport currencyFormatter from '../../../../Utilities/currencyFormatter';\nimport { formatDateTime } from '../../../../Utilities/helpers';\n\nimport JobStatus from '../../../../Components/JobStatus';\n\nconst CardTitle = styled(PFCardTitle)`\n  word-break: break-word;\n`;\n\nconst CardLabel = styled.span`\n  margin-right: 5px;\n  font-weight: bold;\n`;\n\nconst Small = styled.small`\n  display: block;\n  margin-bottom: 10px;\n  color: #6a6e73;\n`;\n\nconst Checkbox = styled(PFCheckbox)`\n  &.pf-c-check.pf-m-standalone {\n    margin-top: -3px;\n  }\n`;\n\nconst CardDetail = styled.div`\n  display: flex;\n  min-height: 30px;\n  align-items: center;\n`;\n\nconst ListItem = ({\n  isSuccess,\n  plan,\n  selected = [],\n  handleSelect = () => {},\n  canWrite,\n  options,\n}) => {\n  const {\n    id,\n    automation_status,\n    category,\n    description,\n    frequency_period,\n    modified,\n    name,\n    template_details,\n    projections,\n  } = plan;\n\n  const projectedSavings =\n    projections?.monetary_stats?.cumulative_net_benefits?.year3;\n\n  const [isCardKebabOpen, setIsCardKebabOpen] = useState(false);\n  const match = useRouteMatch();\n  let history = useHistory();\n\n  const redirectToJobExplorer = (templateId) => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      quick_date_range: 'last_30_days',\n      status: ['failed', 'successful'],\n      template_id: [templateId],\n    };\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const renderTemplateLink = (template) => {\n    return template && isSuccess ? (\n      <a onClick={() => redirectToJobExplorer(template.id)}>{template.name}</a>\n    ) : null;\n  };\n\n  const renderOptionsBasedValue = (key, val) => {\n    return options[key].find(({ key: apiValue }) => apiValue === val).value;\n  };\n\n  const kebabDropDownItems = [\n    <React.Fragment key={id}>\n      <DropdownItem\n        key=\"edit\"\n        onClick={() => history.push(`${match.url}/${id}/edit`)}\n        position=\"right\"\n      >\n        Edit\n      </DropdownItem>\n      <DropdownItem\n        key=\"link\"\n        onClick={() => history.push(`${match.url}/${id}/edit#tasks`)}\n        position=\"right\"\n      >\n        Manage tasks\n      </DropdownItem>\n      <DropdownItem\n        key=\"link\"\n        onClick={() => history.push(`${match.url}/${id}/edit#link_template`)}\n        position=\"right\"\n      >\n        Link template\n      </DropdownItem>\n    </React.Fragment>,\n  ];\n\n  return (\n    <Card>\n      <CardHeader>\n        <CardHeaderMain>\n          <CardTitle>\n            <Link to={`${match.url}/${id}`}>{name}</Link>\n          </CardTitle>\n        </CardHeaderMain>\n        {canWrite && (\n          <CardActions>\n            <Dropdown\n              onSelect={() => {}}\n              toggle={\n                <KebabToggle\n                  onToggle={() => setIsCardKebabOpen(!isCardKebabOpen)}\n                />\n              }\n              isOpen={isCardKebabOpen}\n              isPlain\n              dropdownItems={kebabDropDownItems}\n              position={'right'}\n            />\n            <Checkbox\n              onChange={() => handleSelect(plan)}\n              isChecked={selected.some((row) => row.id === plan.id)}\n              aria-label=\"card checkbox\"\n              id=\"check-1\"\n              name=\"check1\"\n            />\n          </CardActions>\n        )}\n      </CardHeader>\n      <CardBody>\n        {description ? <Small>{description}</Small> : null}\n        <CardDetail>\n          <CardLabel>Frequency</CardLabel>{' '}\n          {frequency_period ? (\n            renderOptionsBasedValue('frequency_period', frequency_period)\n          ) : (\n            <span>None</span>\n          )}\n        </CardDetail>\n        <CardDetail>\n          <CardLabel>Template</CardLabel>{' '}\n          {Object.keys(template_details || {}).length !== 0 ? (\n            renderTemplateLink(template_details)\n          ) : (\n            <span>\n              None -{' '}\n              <a\n                onClick={() =>\n                  history.push(`${match.url}/${id}/edit#link_template`)\n                }\n              >\n                Link template\n              </a>\n            </span>\n          )}\n        </CardDetail>\n        <CardDetail>\n          <CardLabel>Last job status</CardLabel>\n          {automation_status.status !== 'None' ? (\n            <JobStatus status={automation_status.status} />\n          ) : (\n            <Label\n              variant=\"outline\"\n              color=\"red\"\n              icon={<ExclamationCircleIcon />}\n            >\n              Not Running\n            </Label>\n          )}\n        </CardDetail>\n        {projectedSavings && (\n          <CardDetail>\n            <CardLabel>Projected savings</CardLabel>\n            <a onClick={() => history.push(`${match.url}/${id}/statistics`)}>\n              {currencyFormatter(+projectedSavings)}\n            </a>\n          </CardDetail>\n        )}\n        <CardDetail>\n          <CardLabel>Last updated</CardLabel>{' '}\n          <span>{formatDateTime(modified)}</span>\n        </CardDetail>\n      </CardBody>\n      <CardFooter>\n        <Label>{renderOptionsBasedValue('category', category)}</Label>\n      </CardFooter>\n    </Card>\n  );\n};\n\nListItem.propTypes = {\n  isSuccess: PropTypes.bool.isRequired,\n  canWrite: PropTypes.bool.isRequired,\n  selected: PropTypes.array,\n  handleSelect: PropTypes.func,\n  plan: PropTypes.object,\n  options: PropTypes.object,\n};\n\nexport default ListItem;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip } from '@patternfly/react-core';\nimport AlertModal from '../AlertModal';\n\nimport { getRelatedResourceDeleteCounts } from '../../Utilities/getRelatedResourceDeleteDetails';\n\nimport ErrorDetail from '../ErrorDetail';\n\nconst requiredField = (props) => {\n  const { name, username, image } = props;\n  if (!name && !username && !image) {\n    return new Error(\n      `One of 'name', 'username' or 'image' is required by ItemToDelete component.`\n    );\n  }\n  if (name) {\n    PropTypes.checkPropTypes(\n      {\n        name: PropTypes.string,\n      },\n      { name: props.name },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  if (username) {\n    PropTypes.checkPropTypes(\n      {\n        username: PropTypes.string,\n      },\n      { username: props.username },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  if (image) {\n    PropTypes.checkPropTypes(\n      {\n        image: PropTypes.string,\n      },\n      { image: props.image },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  return null;\n};\n\nconst ToolbarDeleteButton = ({\n  itemsToDelete,\n  pluralizedItemName = 'Items',\n  onDelete,\n  errorMessage = 'Error while deleting',\n  deleteDetailsRequests = [],\n  cannotDelete = (item) => !item,\n}) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [deleteDetails, setDeleteDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [deleteMessageError, setDeleteMessageError] = useState('');\n  const handleDelete = () => {\n    onDelete();\n    toggleModal();\n  };\n\n  const toggleModal = async (isOpen) => {\n    setIsLoading(true);\n    setDeleteDetails(null);\n    if (\n      isOpen &&\n      itemsToDelete.length === 1 &&\n      deleteDetailsRequests?.length > 0\n    ) {\n      const { results, error } = await getRelatedResourceDeleteCounts(\n        deleteDetailsRequests\n      );\n\n      if (error) {\n        setDeleteMessageError(error);\n      } else {\n        setDeleteDetails(results);\n      }\n    }\n    setIsLoading(false);\n    setIsModalOpen(isOpen);\n  };\n\n  const renderTooltip = () => {\n    const itemsUnableToDelete = itemsToDelete\n      .filter(cannotDelete)\n      .map((item) => item.name || item.username)\n      .join(', ');\n\n    if (itemsToDelete.some(cannotDelete)) {\n      return (\n        <div>\n          {errorMessage ? (\n            <>\n              <span>{errorMessage}</span>\n              <span>{`: ${itemsUnableToDelete}`}</span>\n            </>\n          ) : (\n            `You do not have permission to delete ${pluralizedItemName}: ${itemsUnableToDelete}`\n          )}\n        </div>\n      );\n    }\n    if (itemsToDelete.length) {\n      return 'Delete';\n    }\n    return 'Select a plan to delete';\n  };\n\n  const modalTitle = `Delete ${pluralizedItemName}?`;\n\n  const isDisabled =\n    itemsToDelete.length === 0 || itemsToDelete.some(cannotDelete);\n\n  if (deleteMessageError) {\n    return (\n      <AlertModal\n        isOpen={!!deleteMessageError}\n        title={'Error!'}\n        onClose={() => {\n          toggleModal(false);\n          setDeleteMessageError();\n        }}\n      >\n        <ErrorDetail error={deleteMessageError.detail} />\n      </AlertModal>\n    );\n  }\n\n  return (\n    <>\n      <Tooltip content={renderTooltip()} position=\"top\">\n        <div>\n          <Button\n            variant=\"secondary\"\n            ouiaId=\"delete-button\"\n            spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n            aria-label={'Delete'}\n            onClick={() => toggleModal(true)}\n            isDisabled={isDisabled}\n          >\n            {'Delete'}\n          </Button>\n        </div>\n      </Tooltip>\n\n      {isModalOpen && (\n        <AlertModal\n          variant=\"danger\"\n          title={modalTitle}\n          isOpen={isModalOpen}\n          onClose={() => toggleModal(false)}\n          actions={[\n            <Button\n              ouiaId=\"delete-modal-confirm\"\n              key=\"delete\"\n              variant=\"danger\"\n              aria-label={'confirm delete'}\n              isDisabled={Boolean(deleteDetails)}\n              onClick={handleDelete}\n            >\n              {'Delete'}\n            </Button>,\n            <Button\n              key=\"cancel\"\n              variant=\"link\"\n              aria-label={'cancel delete'}\n              onClick={() => toggleModal(false)}\n            >\n              {'Cancel'}\n            </Button>,\n          ]}\n        >\n          <div>{'This action will delete the following:'}</div>\n          {itemsToDelete.map((item) => (\n            <span key={item.id}>\n              <strong>{item.name || item.username || item.image}</strong>\n              <br />\n            </span>\n          ))}\n        </AlertModal>\n      )}\n    </>\n  );\n};\n\nToolbarDeleteButton.propTypes = {\n  itemsToDelete: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: requiredField,\n      username: requiredField,\n      image: requiredField,\n    })\n  ).isRequired,\n  pluralizedItemName: PropTypes.string,\n  onDelete: PropTypes.func.isRequired,\n  errorMessage: PropTypes.string,\n  warningMessage: PropTypes.node,\n  deleteDetailsRequests: PropTypes.array,\n  cannotDelete: PropTypes.func,\n  deleteMessage: PropTypes.string,\n};\n\nexport default ToolbarDeleteButton;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport { Button, Gallery, PaginationVariant } from '@patternfly/react-core';\n\nimport {\n  deletePlan,\n  preflightRequest,\n  readPlanOptions,\n  readPlans,\n} from '../../../Api/';\nimport FilterableToolbar from '../../../Components/Toolbar';\nimport ApiErrorState from '../../../Components/ApiErrorState';\nimport LoadingState from '../../../Components/LoadingState';\nimport EmptyState from '../../../Components/EmptyState';\nimport EmptyList from '../../../Components/EmptyList';\nimport Pagination from '../../../Components/Pagination';\nimport PlanCard from './ListItem';\nimport { useQueryParams } from '../../../Utilities/useQueryParams';\nimport { savingsPlanner } from '../../../Utilities/constants';\nimport { notAuthorizedParams } from '../../../Utilities/constants';\n\nimport ToolbarDeleteButton from '../../../Components/Toolbar/ToolbarDeleteButton';\nimport useSelected from '../../../Utilities/useSelected';\nimport useRequest, { useDeleteItems } from '../../../Utilities/useRequest';\nimport ErrorDetail from '../../../Components/ErrorDetail';\nimport AlertModal from '../../../Components/AlertModal';\nimport { getQSConfig } from '../../../Utilities/qs';\n\nconst PageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: calc(100vh - 76px);\n`;\n\nconst Footer = styled.div`\n  flex-shrink: 0;\n`;\n\nconst FlexMain = styled(Main)`\n  flex-grow: 1;\n`;\nconst qsConfig = getQSConfig(\n  'savings-planner',\n  { ...savingsPlanner.defaultParams },\n  ['limit', 'offset']\n);\n\nconst List = () => {\n  const history = useHistory();\n  const { pathname } = useLocation();\n\n  // params from toolbar/searchbar\n  const { queryParams, setFromPagination, setFromToolbar } =\n    useQueryParams(qsConfig);\n\n  const [preflightError, setPreFlightError] = useState(null);\n\n  const {\n    result: { options },\n    error,\n    isSuccess,\n    request: fetchOptions,\n  } = useRequest(\n    useCallback(async () => {\n      await preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n      const response = await readPlanOptions();\n      return { options: response };\n    }, [queryParams]),\n    { options: {} }\n  );\n\n  const {\n    result: { data, rbac, total_count },\n    error: itemsError,\n    isLoading: itemsIsLoading,\n    isSuccess: itemsIsSuccess,\n    request: fetchEndpoints,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await readPlans({ params: queryParams });\n      return {\n        data: response.items,\n        rbac: response.rbac,\n        total_count: response.meta.total_count,\n      };\n    }, [queryParams]),\n    {\n      data: [],\n      itemsError,\n      itemsIsSuccess,\n      itemsIsLoading,\n    }\n  );\n\n  const combinedOptions = {\n    ...options,\n    name: [{ key: 'name', value: null }],\n  };\n\n  useEffect(() => {\n    fetchOptions();\n    fetchEndpoints();\n  }, [queryParams]);\n\n  const canWrite =\n    itemsIsSuccess &&\n    (rbac?.perms?.write === true || rbac?.perms?.all === true);\n\n  const { selected, isAllSelected, handleSelect, setSelected } =\n    useSelected(data);\n\n  const {\n    isLoading: deleteLoading,\n    deletionError,\n    deleteItems: deleteItems,\n    clearDeletionError,\n  } = useDeleteItems(\n    useCallback(async () => {\n      return Promise.all(selected.map((plan) => deletePlan({ id: plan.id })));\n    }, [selected]),\n    {\n      qsConfig: queryParams,\n      allItemsSelected: isAllSelected,\n      fetchItems: fetchEndpoints,\n    }\n  );\n\n  const handleDelete = async () => {\n    await deleteItems();\n    setSelected([]);\n  };\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  const renderContent = () => {\n    if (preflightError) return <EmptyState {...preflightError} />;\n\n    if (error) return <ApiErrorState message={error.error} />;\n\n    if (itemsIsLoading || deleteLoading) return <LoadingState />;\n\n    if (\n      itemsIsSuccess &&\n      data.length === 0 &&\n      !(itemsIsLoading || deleteLoading)\n    )\n      return (\n        <EmptyList\n          label={'Add plan'}\n          title={'No plans found'}\n          message={\n            canWrite\n              ? 'Update the applied filters or add a new plan.'\n              : 'Update the applied filters.'\n          }\n          canAdd={canWrite}\n          path={`${pathname}/add`}\n        />\n      );\n\n    if (itemsIsSuccess && !(itemsIsLoading || deleteLoading))\n      return (\n        <Gallery\n          hasGutter\n          minWidths={{\n            sm: '307px',\n            md: '307px',\n            lg: '307px',\n            xl: '307px',\n            '2xl': '307px',\n          }}\n        >\n          {isSuccess &&\n            itemsIsSuccess &&\n            data.map((datum) => (\n              <PlanCard\n                key={datum.id}\n                isSuccess={itemsIsSuccess}\n                selected={selected}\n                plan={datum}\n                handleSelect={handleSelect}\n                canWrite={canWrite}\n                options={options}\n              />\n            ))}\n        </Gallery>\n      );\n\n    return <></>;\n  };\n\n  return (\n    <PageContainer>\n      <PageHeader>\n        <PageHeaderTitle title={'Savings Planner'} />\n        <FilterableToolbar\n          categories={combinedOptions}\n          filters={queryParams}\n          qsConfig={qsConfig}\n          setFilters={setFromToolbar}\n          additionalControls={[\n            ...(canWrite\n              ? [\n                  <Button\n                    key=\"add-plan-button\"\n                    variant=\"primary\"\n                    aria-label=\"Add plan\"\n                    onClick={() => {\n                      history.push({\n                        pathname: `${pathname}/add`,\n                      });\n                    }}\n                  >\n                    Add plan\n                  </Button>,\n                ]\n              : []),\n            canWrite && isSuccess && data.length > 0 && (\n              <ToolbarDeleteButton\n                key=\"delete-plan-button\"\n                onDelete={handleDelete}\n                itemsToDelete={selected}\n                pluralizedItemName={'Savings plan'}\n              />\n            ),\n          ]}\n          pagination={\n            itemsIsSuccess && data.length > 0 ? (\n              <Pagination\n                count={total_count}\n                params={{\n                  limit: parseInt(queryParams.limit),\n                  offset: parseInt(queryParams.offset),\n                }}\n                qsConfig={qsConfig}\n                setPagination={setFromPagination}\n                isCompact\n              />\n            ) : (\n              <div></div>\n            )\n          }\n        />\n      </PageHeader>\n      <FlexMain>{renderContent()}</FlexMain>\n      {data.length > 0 && !(itemsIsLoading || deleteLoading) && (\n        <Footer>\n          <Pagination\n            count={total_count}\n            params={{\n              limit: parseInt(queryParams.limit),\n              offset: parseInt(queryParams.offset),\n            }}\n            qsConfig={qsConfig}\n            setPagination={setFromPagination}\n            variant={PaginationVariant.bottom}\n          />\n        </Footer>\n      )}\n      {deletionError && (\n        <AlertModal\n          aria-label={'Deletion error'}\n          isOpen={deletionError}\n          onClose={clearDeletionError}\n          title={'Error'}\n          variant=\"error\"\n        >\n          {'Failed to delete one or more plans.'}\n          <ErrorDetail error={deletionError.detail} />\n        </AlertModal>\n      )}\n    </PageContainer>\n  );\n};\n\nexport default List;\n","import { useState } from 'react';\n\n/**\n * useSelected hook provides a way to read and update a selected list\n * Param: array of list items\n * Returns: {\n *  selected: array of selected list items\n *  isAllSelected: boolean that indicates if all items are selected\n *  handleSelect: function that adds and removes items from selected list\n *  setSelected: setter function\n * }\n */\n\nexport default function useSelected(list = []) {\n  const [selected, setSelected] = useState([]);\n  const isAllSelected = selected.length > 0 && selected.length === list.length;\n\n  const handleSelect = (row) => {\n    if (selected.some((s) => s.id === row.id)) {\n      setSelected((prevState) => [...prevState.filter((i) => i.id !== row.id)]);\n    } else {\n      setSelected((prevState) => [...prevState, row]);\n    }\n  };\n  return { selected, isAllSelected, handleSelect, setSelected };\n}\n","export const actions = {\n  SET_NAME: 'SET_NAME',\n  SET_CATEGORY: 'SET_CATEGORY',\n  SET_DESCRIPTION: 'SET_DESCRIPTION',\n  SET_MANUAL_TIME: 'SET_MANUAL_TIME',\n  SET_HOSTS: 'SET_HOSTS',\n  SET_FREQUENCY_PERIOD: 'SET_FREQUENCY_PERIOD',\n  SET_TASKS: 'SET_TASKS',\n  SET_TEMPLATE_ID: 'SET_TEMPLATE_ID',\n};\n","import { useReducer } from 'react';\n\nimport { actions } from './constants';\n\nconst formatPayload = (data) => {\n  data.tasks = data.tasks.map((task, index) => ({\n    task,\n    task_order: index + 1,\n  }));\n\n  if (!data.hosts || data.hosts === '') {\n    data.hosts = 1;\n  }\n\n  // these two are fields the api expects but we don't\n  // have form elements for in the MVP.\n  data.hourly_rate = 50;\n  data.frequency_per_period = 1;\n\n  return data;\n};\n\nconst convertTasks = (tasks = []) => {\n  if (tasks?.length) {\n    return tasks\n      .sort((a, b) => a.task_order - b.task_order)\n      .map(({ task }) => task);\n  }\n  return undefined;\n};\n\nconst usePlanData = (initial) => {\n  const formReducer = (state, { type, value }) => {\n    switch (type) {\n      /* v1 api reducers */\n      case actions.SET_NAME:\n        return {\n          ...state,\n          name: value,\n        };\n      case actions.SET_CATEGORY:\n        return {\n          ...state,\n          category: value,\n        };\n      case actions.SET_DESCRIPTION:\n        return {\n          ...state,\n          description: value,\n        };\n      case actions.SET_MANUAL_TIME:\n        return {\n          ...state,\n          manual_time: value,\n        };\n\n      case actions.SET_HOSTS:\n        return {\n          ...state,\n          hosts: value,\n        };\n      case actions.SET_FREQUENCY_PERIOD:\n        return {\n          ...state,\n          frequency_period: value,\n        };\n      case actions.SET_TASKS:\n        return {\n          ...state,\n          tasks: value,\n        };\n      case actions.SET_TEMPLATE_ID:\n        return {\n          ...state,\n          template_id: value,\n        };\n      default:\n        throw new Error(\n          `usePlanData reducer action type ${type} was not found.`\n        );\n    }\n  };\n\n  const [formData, dispatch] = useReducer(formReducer, {\n    name: initial?.name || '',\n    category: initial?.category || 'system',\n    description: initial?.description || '',\n    manual_time: initial?.manual_time || 240,\n    hosts: initial?.hosts || 1,\n    frequency_period: initial?.frequency_period || 'weekly',\n    tasks: convertTasks(initial?.tasks) || [],\n    template_id: initial?.template_id || -2,\n  });\n\n  return {\n    formData,\n    requestPayload: formatPayload({ ...formData }),\n    dispatch,\n  };\n};\n\nexport default usePlanData;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Form,\n  FormGroup,\n  Grid,\n  Select,\n  SelectOption,\n  TextInput,\n  NumberInput,\n} from '@patternfly/react-core';\n\nimport { actions } from '../../../constants';\n\nimport { isPositiveNum } from '../../../../../../Utilities/helpers';\n\nconst Details = ({ options, formData, dispatch }) => {\n  const { name, category, description, manual_time, hosts, frequency_period } =\n    formData;\n\n  const [categoryIsOpen, setCategoryIsOpen] = useState(false);\n  const [manualTimeIsOpen, setManualTimeIsOpen] = useState(false);\n  const [frequencyPeriodIsOpen, setFrequencyPeriodIsOpen] = useState(false);\n\n  return (\n    <Form>\n      {options?.data && (\n        <Grid hasGutter md={6}>\n          <FormGroup\n            label=\"What do you want to automate?\"\n            isRequired\n            fieldId=\"name-field\"\n          >\n            <TextInput\n              isRequired\n              placeholder=\"Example: Provision NGINX server\"\n              type=\"text\"\n              id=\"name-field\"\n              name=\"name\"\n              value={name}\n              onChange={(newName) =>\n                dispatch({\n                  type: actions.SET_NAME,\n                  value: newName,\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup label=\"What type of task is it?\" fieldId=\"category-field\">\n            <Select\n              id=\"category-field\"\n              isOpen={categoryIsOpen}\n              variant={'single'}\n              aria-label={'Plan category selector'}\n              maxHeight={390}\n              onToggle={() => setCategoryIsOpen(!categoryIsOpen)}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_CATEGORY,\n                  value: selection,\n                });\n                setCategoryIsOpen(false);\n              }}\n              selections={category}\n            >\n              {(options.data?.category || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n          <FormGroup\n            label=\"Enter a description of your automation plan\"\n            fieldId=\"description-field\"\n          >\n            <TextInput\n              type=\"text\"\n              placeholder=\"Place description here\"\n              id=\"description-field\"\n              name=\"description\"\n              value={description}\n              onChange={(newDescription) =>\n                dispatch({\n                  type: actions.SET_DESCRIPTION,\n                  value: newDescription,\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"How long does it take to do this manually?\"\n            fieldId=\"manual-time-field\"\n          >\n            <Select\n              id=\"manual-time-field\"\n              isOpen={manualTimeIsOpen}\n              variant={'single'}\n              placeholderText=\"Select amount\"\n              aria-label={'Plan time selector'}\n              onToggle={() => setManualTimeIsOpen(!manualTimeIsOpen)}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_MANUAL_TIME,\n                  value: selection,\n                });\n                setManualTimeIsOpen(false);\n              }}\n              selections={manual_time}\n            >\n              {(options.data?.manual_time || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n          <FormGroup\n            label=\"How many hosts do you plan to run this on?\"\n            fieldId=\"hosts-field\"\n          >\n            <NumberInput\n              inputAriaLabel=\"Number of hosts\"\n              widthChars={8}\n              onChange={(event) => {\n                if (\n                  isPositiveNum(event.target.value) ||\n                  event.target.value.length === 0\n                ) {\n                  dispatch({\n                    type: actions.SET_HOSTS,\n                    value: parseInt(event.target.value),\n                  });\n                }\n              }}\n              onMinus={() =>\n                dispatch({\n                  type: actions.SET_HOSTS,\n                  value: isPositiveNum(hosts) ? hosts - 1 : 0,\n                })\n              }\n              onPlus={() =>\n                dispatch({\n                  type: actions.SET_HOSTS,\n                  value: isPositiveNum(hosts) ? hosts + 1 : 1,\n                })\n              }\n              id=\"hosts-field\"\n              name=\"hosts\"\n              value={hosts}\n              min={0}\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"How often do you do this?\"\n            fieldId=\"frequency-period-field\"\n          >\n            <Select\n              id=\"frequency-period-field\"\n              isOpen={frequencyPeriodIsOpen}\n              variant={'single'}\n              placeholderText=\"Select frequency period\"\n              aria-label={'Plan frequency period selector'}\n              onToggle={() => {\n                setFrequencyPeriodIsOpen(!frequencyPeriodIsOpen);\n              }}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_FREQUENCY_PERIOD,\n                  value: selection,\n                });\n                setFrequencyPeriodIsOpen(false);\n              }}\n              selections={frequency_period}\n            >\n              {(options.data?.frequency_period || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n        </Grid>\n      )}\n    </Form>\n  );\n};\n\nDetails.propTypes = {\n  options: PropTypes.object.isRequired,\n  formData: PropTypes.object.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Details;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  DataList,\n  DataListAction,\n  DataListItem,\n  DataListCell,\n  DataListItemRow,\n  DataListControl,\n  DataListDragButton,\n  DataListItemCells,\n  Form,\n  FormGroup,\n  Grid,\n  InputGroup,\n  TextInput,\n  Title,\n} from '@patternfly/react-core';\nimport { PlusIcon, TimesIcon } from '@patternfly/react-icons';\n\nimport { actions } from '../../../constants';\n\nconst TaskSection = styled.div`\n  margin-top: 20px;\n`;\n\nconst TaskTitle = styled(Title)`\n  margin-bottom: 10px;\n`;\n\nconst TaskDeleteButton = styled(Button)`\n  padding: 0 16px;\n`;\n\nconst DeleteTaskActionSection = styled(DataListAction)`\n  padding: 6px 0;\n`;\n\nconst TaskRow = styled(DataListItemRow)`\n  align-items: center;\n`;\n\nconst Tasks = ({ tasks, dispatch }) => {\n  const setTasks = (val) => {\n    dispatch({ type: actions.SET_TASKS, value: val });\n  };\n\n  const [taskToAdd, setTaskToAdd] = useState('');\n\n  const [liveText, setLiveText] = useState('');\n  const [id, setId] = useState('');\n\n  const onDragStart = (newId) => {\n    setId(newId);\n    setLiveText(`Dragging started for task ${newId}.`);\n  };\n\n  const onDragMove = (oldIndex, newIndex) => {\n    setLiveText(\n      `Dragging task ${id}.  Task ${oldIndex} is now task ${newIndex}.`\n    );\n  };\n\n  const onDragCancel = () => {\n    setLiveText('Dragging cancelled. Tasks list order is unchanged.');\n  };\n\n  const onDragFinish = (newItemOrder) => {\n    setLiveText('Dragging finished');\n    setTasks(newItemOrder.map((val) => val.split('-').slice(0, -1).join('-')));\n  };\n\n  const appendTask = () => {\n    const trimmedTask = taskToAdd.trim();\n    if (trimmedTask !== '') {\n      setTasks([...tasks, trimmedTask]);\n      setTaskToAdd('');\n    }\n  };\n\n  const handleTextKeyDown = (e) => {\n    if (e.key && e.key === 'Enter') {\n      e.preventDefault();\n      appendTask();\n    }\n  };\n\n  const removeTask = (index) => {\n    setTasks(tasks.filter((t, idx) => idx !== index));\n  };\n\n  return (\n    <>\n      <Form>\n        <Grid hasGutter md={6}>\n          <FormGroup\n            label=\"What tasks do you need to accomplish this plan?\"\n            fieldId=\"task-field\"\n          >\n            <InputGroup>\n              <TextInput\n                placeholder=\"Enter a description of each task\"\n                type=\"text\"\n                id=\"task-field\"\n                name=\"task\"\n                value={taskToAdd}\n                onChange={(newTaskName) => setTaskToAdd(newTaskName)}\n                onKeyDown={handleTextKeyDown}\n              />\n              <Button\n                onClick={appendTask}\n                isDisabled={taskToAdd.trim() === ''}\n                variant=\"control\"\n                aria-label=\"Add task\"\n              >\n                <PlusIcon />\n              </Button>\n            </InputGroup>\n          </FormGroup>\n        </Grid>\n      </Form>\n      {tasks.length > 0 && (\n        <TaskSection>\n          <TaskTitle headingLevel=\"h4\" size=\"xl\">\n            Tasks\n          </TaskTitle>\n          <DataList\n            aria-label=\"Draggable list to reorder and remove tasks.\"\n            isCompact\n            onDragFinish={onDragFinish}\n            onDragStart={onDragStart}\n            onDragMove={onDragMove}\n            onDragCancel={onDragCancel}\n            itemOrder={tasks.map((val, idx) => `${val}-${idx}`)}\n          >\n            {tasks.map((task, index) => (\n              <DataListItem\n                aria-labelledby={`cell-${index + 1}`}\n                id={`${task}-${index}`}\n                key={index + 1}\n              >\n                <TaskRow>\n                  <DataListControl>\n                    <DataListDragButton\n                      aria-label=\"Reorder\"\n                      aria-labelledby={`cell-${index + 1}`}\n                      aria-describedby=\"Press space or enter to begin dragging, and use the arrow keys to navigate up or down. Press enter to confirm the drag, or any other key to cancel the drag operation.\"\n                      aria-pressed=\"false\"\n                    />\n                  </DataListControl>\n                  <DataListItemCells\n                    dataListCells={[\n                      <DataListCell key={index + 1}>\n                        <span id={`cell-${index + 1}`}>{`${\n                          index + 1\n                        }. ${task}`}</span>\n                      </DataListCell>,\n                    ]}\n                  />\n                  <DeleteTaskActionSection aria-label=\"Actions\">\n                    <TaskDeleteButton\n                      onClick={() => removeTask(index)}\n                      variant=\"plain\"\n                      aria-label=\"Delete\"\n                    >\n                      <TimesIcon />\n                    </TaskDeleteButton>\n                  </DeleteTaskActionSection>\n                </TaskRow>\n              </DataListItem>\n            ))}\n          </DataList>\n        </TaskSection>\n      )}\n      <div className=\"pf-screen-reader\" aria-live=\"assertive\">\n        {liveText}\n      </div>\n    </>\n  );\n};\n\nTasks.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Tasks;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { parse, stringify } from 'query-string';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport {\n  Button,\n  Form,\n  FormGroup,\n  PaginationVariant,\n} from '@patternfly/react-core';\nimport {\n  TableComposable,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n} from '@patternfly/react-table';\n\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nimport LoadingState from '../../../../../../Components/LoadingState';\nimport EmptyState from '../../../../../../Components/EmptyState';\nimport NoResults from '../../../../../../Components/NoResults';\nimport ApiErrorState from '../../../../../../Components/ApiErrorState';\nimport Pagination from '../../../../../../Components/Pagination';\n\nimport { notAuthorizedParams } from '../../../../../../Utilities/constants';\nimport { useQueryParams } from '../../../../../../Utilities/useQueryParams';\nimport { getQSConfig } from '../../../../../../Utilities/qs';\n\nimport {\n  preflightRequest,\n  readJobExplorer,\n  readJobExplorerOptions,\n} from '../../../../../../Api/';\n\nimport FilterableToolbar from '../../../../../../Components/Toolbar/';\n\nimport { actions } from '../../../constants';\nimport useRequest from '../../../../../../Utilities/useRequest';\n\nconst ListFooter = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst initialQueryParams = {\n  group_by: 'template',\n  limit: 10,\n  group_by_time: false,\n  offset: 0,\n  sort_options: 'name',\n  sort_order: 'asc',\n  sort_by: 'name:asc',\n};\nconst qsConfig = getQSConfig('job-explorer', { ...initialQueryParams }, [\n  'limit',\n  'offset',\n]);\n\nconst Templates = ({ template_id, dispatch: formDispatch }) => {\n  const { pathname, hash, search } = useLocation();\n  const history = useHistory();\n  const {\n    queryParams,\n    setFromPagination,\n    setFromToolbar,\n    dispatch: queryParamsDispatch,\n  } = useQueryParams(qsConfig);\n\n  const [preflightError, setPreFlightError] = useState(null);\n\n  const {\n    result: { options },\n    error,\n    isSuccess,\n    request: fetchOptions,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await readJobExplorerOptions({ params: queryParams });\n      return { options: response };\n    }, [queryParams]),\n    { options: {} }\n  );\n\n  const {\n    result: { templates, count },\n    error: templatesIsError,\n    isLoading: templatesIsLoading,\n    isSuccess: templatesIsSuccess,\n    request: fetchEndpoints,\n  } = useRequest(\n    useCallback(async () => {\n      const response = await readJobExplorer({ params: queryParams });\n      return {\n        templates: response.items,\n        count: response.meta.count,\n      };\n    }, [queryParams]),\n    {\n      templates: [],\n      count: 0,\n      templatesIsError,\n      templatesIsLoading,\n      templatesIsSuccess,\n    }\n  );\n\n  const onSort = (_ev, _idx, dir) => {\n    queryParamsDispatch({\n      type: 'SET_SORT_ORDER',\n      value: { sort_order: dir },\n    });\n  };\n\n  const sortParams = {\n    sort: {\n      sortBy: {\n        direction: queryParams.sort_order,\n      },\n      onSort,\n    },\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'savings-planner', secondaryNav: true });\n\n    preflightRequest().catch((error) => {\n      setPreFlightError({ preflightError: error });\n    });\n  }, []);\n\n  const initialSearchParams = parse(search, {\n    arrayFormat: 'bracket',\n    parseBooleans: true,\n    parseNumbers: true,\n  });\n\n  useEffect(() => {\n    history.replace({\n      pathname,\n      hash,\n      search: stringify(\n        { ...initialQueryParams, ...initialSearchParams },\n        { arrayFormat: 'bracket' }\n      ),\n    });\n  }, []);\n\n  useEffect(() => {\n    fetchOptions();\n    fetchEndpoints();\n  }, [queryParams]);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n  return (\n    <>\n      {preflightError && <EmptyState {...preflightError} />}\n\n      {isSuccess && (\n        <Form>\n          <FormGroup\n            label=\"Link a template to this plan:\"\n            fieldId=\"template-link-field\"\n          >\n            <FilterableToolbar\n              hideQuickDateRange\n              hideSortOptions\n              categories={options}\n              filters={queryParams}\n              qsConfig={qsConfig}\n              setFilters={setFromToolbar}\n              pagination={\n                <Pagination\n                  count={count}\n                  params={{\n                    limit: queryParams.limit,\n                    offset: queryParams.offset,\n                  }}\n                  qsConfig={qsConfig}\n                  setPagination={setFromPagination}\n                  isCompact\n                />\n              }\n            />\n            {error && <ApiErrorState message={error.error} />}\n            {templatesIsLoading && <LoadingState />}\n            {templatesIsSuccess && templates.length <= 0 && <NoResults />}\n            {templatesIsSuccess && templates.length > 0 && (\n              <TableComposable\n                aria-label=\"Template link table\"\n                variant=\"compact\"\n              >\n                <Thead>\n                  <Tr>\n                    <Th />\n                    <Th {...sortParams}>Name</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {templates.map(({ id, name }) => (\n                    <Tr key={`template-detail-${id}`}>\n                      <Td\n                        data-testid={`radio-${id}`}\n                        key={`template-detail-${id}-radio-td`}\n                        select={{\n                          rowIndex: id,\n                          onSelect: (event, isSelected, value) =>\n                            formDispatch({\n                              type: actions.SET_TEMPLATE_ID,\n                              value,\n                            }),\n                          isSelected: template_id === id,\n                          variant: 'radio',\n                        }}\n                      />\n                      <Td>{name}</Td>\n                    </Tr>\n                  ))}\n                </Tbody>\n              </TableComposable>\n            )}\n            <ListFooter>\n              <div>\n                {template_id !== -2 && (\n                  <Button\n                    key=\"clear-selection-button\"\n                    variant=\"link\"\n                    aria-label=\"Clear selection\"\n                    onClick={() => {\n                      formDispatch({\n                        type: actions.SET_TEMPLATE_ID,\n                        value: -2,\n                      });\n                    }}\n                  >\n                    Clear selection\n                  </Button>\n                )}\n              </div>\n              <Pagination\n                count={count}\n                params={{\n                  limit: queryParams.limit,\n                  offset: queryParams.offset,\n                }}\n                qsConfig={qsConfig}\n                setPagination={setFromPagination}\n                variant={PaginationVariant.bottom}\n              />\n            </ListFooter>\n          </FormGroup>\n        </Form>\n      )}\n    </>\n  );\n};\n\nTemplates.propTypes = {\n  template_id: PropTypes.number.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Templates;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory, useLocation, Redirect } from 'react-router-dom';\n\nimport {\n  Button,\n  Tooltip,\n  Wizard,\n  WizardFooter,\n  WizardContextConsumer,\n} from '@patternfly/react-core';\n\nimport { Paths } from '../../../../paths';\nimport useRequest from '../../../../Utilities/useRequest';\nimport usePlanData from '../usePlanData';\n\nimport { createPlan, updatePlan } from '../../../../Api/';\n\nimport AlertModal from '../../../../Components/AlertModal/AlertModal';\nimport ErrorDetail from '../../../../Components/ErrorDetail/ErrorDetail';\n\nimport Details from './Steps/Details';\nimport Tasks from './Steps/Tasks';\nimport Templates from './Steps/Templates';\n\nconst Form = ({ title, options, data = {} }) => {\n  const history = useHistory();\n  const { hash, pathname } = useLocation();\n  const [startStep, setStartStep] = useState(null);\n\n  const {\n    result: { data: apiResponse },\n    error,\n    request: setData,\n  } = useRequest(\n    useCallback(async (requestPayload, id) => {\n      if (typeof requestPayload !== 'undefined') {\n        if (id) {\n          data = await updatePlan({\n            id: id,\n            params: requestPayload,\n          });\n        } else {\n          data = await createPlan({\n            params: requestPayload,\n          });\n        }\n      }\n      return {\n        data,\n      };\n    }, []),\n    {\n      apiResponse: data,\n    }\n  );\n\n  const { formData, requestPayload, dispatch } = usePlanData(data);\n\n  const steps = [\n    {\n      step_number: 1,\n      id: 'details',\n      name: 'Details',\n      component: (\n        <Details options={options} formData={formData} dispatch={dispatch} />\n      ),\n    },\n    {\n      step_number: 2,\n      id: 'tasks',\n      name: 'Tasks',\n      component: <Tasks tasks={formData.tasks} dispatch={dispatch} />,\n    },\n    {\n      step_number: 3,\n      id: 'link_template',\n      name: 'Link template',\n      component: (\n        <Templates template_id={formData.template_id} dispatch={dispatch} />\n      ),\n      nextButtonText: 'Save',\n    },\n  ];\n\n  const CustomFooter = (\n    <WizardFooter>\n      <WizardContextConsumer>\n        {({ activeStep, onNext, onBack, onClose }) => {\n          if (activeStep.step_number !== 3) {\n            return (\n              <>\n                <Button variant=\"primary\" type=\"submit\" onClick={onNext}>\n                  Next\n                </Button>\n                {activeStep.step_number !== 1 && (\n                  <Button variant=\"secondary\" onClick={onBack}>\n                    Back\n                  </Button>\n                )}\n                <Button variant=\"link\" onClick={onClose}>\n                  Cancel\n                </Button>\n              </>\n            );\n          }\n          // Final step buttons\n          return (\n            <>\n              <Tooltip\n                content={\n                  !formData.name || !formData.name === ''\n                    ? 'In order to save this plan, you must enter a name in the details step'\n                    : 'Save this plan'\n                }\n                position=\"top\"\n              >\n                <div>\n                  <Button\n                    variant=\"primary\"\n                    type=\"submit\"\n                    onClick={onSave}\n                    isDisabled={!formData.name || !formData.name === ''}\n                  >\n                    Save\n                  </Button>\n                </div>\n              </Tooltip>\n              <Button variant=\"secondary\" onClick={onBack}>\n                Back\n              </Button>\n              <Button variant=\"link\" onClick={onClose}>\n                Cancel\n              </Button>\n            </>\n          );\n        }}\n      </WizardContextConsumer>\n    </WizardFooter>\n  );\n\n  useEffect(() => {\n    if (pathname.indexOf('/add') === -1 && hash) {\n      setStartStep(steps.find((step) => `#${step.id}` === hash).step_number);\n    } else {\n      history.replace({\n        hash: 'details',\n      });\n      setStartStep(1);\n    }\n  }, []);\n\n  const onStepChange = (newStep) => {\n    history.replace({\n      hash: newStep.id,\n    });\n  };\n\n  const onSave = () => {\n    setData(requestPayload, data?.id);\n  };\n\n  const onClose = () => {\n    if (location.pathname.indexOf('/edit') !== -1) {\n      history.push({\n        pathname: `${Paths.savingsPlanner}/${data?.id}`,\n      });\n    } else {\n      history.push({\n        pathname: Paths.savingsPlanner,\n      });\n    }\n  };\n\n  const reset = () => {\n    setData();\n  };\n\n  return (\n    <>\n      {!error && apiResponse?.plan_created && (\n        <Redirect\n          to={{\n            pathname: `${Paths.savingsPlanner}/${\n              apiResponse.id || apiResponse.plan_created.id\n            }`,\n            state: { reload: true },\n          }}\n        />\n      )}\n      {startStep && (\n        <Wizard\n          navAriaLabel={`${title} steps`}\n          mainAriaLabel={`${title} content`}\n          steps={steps}\n          onGoToStep={onStepChange}\n          onNext={onStepChange}\n          onBack={onStepChange}\n          onSave={onSave}\n          onClose={onClose}\n          footer={CustomFooter}\n          startAtStep={startStep}\n          height=\"calc(100vh - 240px)\"\n        />\n      )}\n      {error && (\n        <AlertModal\n          isOpen={!!error}\n          onClose={() => reset()}\n          title={'Error'}\n          variant=\"error\"\n        >\n          {'There was an error saving the plan.'}\n          <ErrorDetail error={error.detail} />\n        </AlertModal>\n      )}\n    </>\n  );\n};\n\nForm.propTypes = {\n  title: PropTypes.string.isRequired,\n  options: PropTypes.object.isRequired,\n  data: PropTypes.object,\n};\n\nForm.defaultProps = {\n  data: {},\n};\n\nexport default Form;\n","export const jobExplorer = {\n  attributes: [\n    'id',\n    'status',\n    'job_type',\n    'started',\n    'finished',\n    'elapsed',\n    'created',\n    'cluster_name',\n    'org_name',\n    'most_failed_tasks',\n  ],\n  defaultParams: {\n    status: ['successful', 'failed'],\n    quick_date_range: 'last_30_days',\n    job_type: ['workflowjob', 'job'],\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    sort_by: 'created:desc',\n    sort_options: 'created',\n    sort_order: 'desc',\n    only_root_workflows_and_standalone_jobs: false,\n    limit: 5,\n    offset: 0,\n  },\n};\n\nexport const roi = {\n  defaultParams: {\n    status: ['successful'],\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    quick_date_range: 'roi_last_year',\n    job_type: ['job'],\n    sort_options: 'template_productivity_score',\n    sort_order: 'desc',\n    start_date: null,\n    end_date: null,\n    limit: 25,\n    only_root_workflows_and_standalone_jobs: true,\n    attributes: [\n      'successful_hosts_total',\n      'successful_elapsed_total',\n      'total_org_count',\n      'total_cluster_count',\n    ],\n    group_by: 'template',\n    group_by_time: false,\n  },\n};\n\nexport const organizationStatistics = {\n  defaultParams: {\n    status: [],\n    org_id: [],\n    quick_date_range: 'last_30_days',\n    limit: 5,\n    offset: 0,\n    job_type: ['workflowjob', 'job'],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    start_date: null,\n    end_date: null,\n  },\n};\n\nexport const clusters = {\n  defaultParams: {\n    status: ['successful', 'failed'],\n    quick_date_range: 'last_30_days',\n    job_type: ['workflowjob', 'job'],\n    group_by_time: true,\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    only_root_workflows_and_standalone_jobs: false,\n  },\n};\n\nexport const savingsPlanner = {\n  defaultParams: {\n    template_id: [],\n    inventory_id: [],\n    automation_status: [],\n    category: [],\n    frequency_period: [],\n    name: '',\n    limit: 10,\n    offset: 0,\n    sort_options: 'modified',\n    sort_order: 'desc',\n    sort_by: 'modified:desc',\n  },\n};\n\nexport const notAuthorizedParams = {\n  title: 'RBAC Access Denied',\n  description:\n    'User does not have privileges to perform this action. Contact your organization adminstrator(s) for more information.',\n};\n\nexport const arrayFields = [\n  'automation_status',\n  'attributes',\n  'cluster_id',\n  'category',\n  'frequency_period',\n  'host_id',\n  'host_status',\n  'inventory_id',\n  'job_type',\n  'status',\n  'org_id',\n  'template_id',\n];\n","export async function getRelatedResourceDeleteCounts(requests) {\n  const results = {};\n  let error = null;\n  let hasCount = false;\n\n  try {\n    await Promise.all(\n      requests.map(async ({ request, label }) => {\n        const {\n          items: { count },\n        } = await request();\n        if (count > 0) {\n          results[label] = count;\n          hasCount = true;\n        }\n      })\n    );\n  } catch (err) {\n    error = err;\n  }\n\n  return {\n    results: hasCount && results,\n    error,\n  };\n}\n\nexport const relatedResourceDeleteRequests = {\n  savingsPlan: (selected, readRecordApi) => [\n    {\n      request: async () =>\n        readRecordApi({\n          params: { id: [selected.id] },\n        }),\n      label: 'Plan',\n    },\n  ],\n};\n","import moment from 'moment';\n\n/*\n * isNumeric - return true if input is a real number\n */\nexport function isNumeric(val) {\n  if (val === 0 || val === '0') {\n    return true;\n  }\n\n  if (parseInt(val)) {\n    return true;\n  }\n\n  if (parseFloat(val)) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function isPositiveNum(val) {\n  return /^\\d+$/.test(val);\n}\n\nexport function trimStr(str) {\n  return str.toString().replace(/['\"]+/g, '');\n}\n\nexport function formatDateTime(dateTime) {\n  return moment(new Date(dateTime).toISOString()).format('M/D/YYYY h:mm:ssa');\n}\n\nexport function formatDate(date) {\n  return moment(date).format('YYYY-MM-DD');\n}\n\nexport function formatSeconds(seconds) {\n  return moment().startOf('day').seconds(seconds).format('H:mm:ss');\n}\n\nexport function getTotal(data) {\n  if (!data) {\n    return;\n  } else {\n    let total = 0;\n    data.forEach((datum) => {\n      total += parseInt(datum.count);\n    });\n    return total;\n  }\n}\n\nexport function formatPercentage(val) {\n  if (isNaN(val)) {\n    return;\n  }\n\n  return `${val}%`;\n}\n\nexport const capitalize = (s) => {\n  if (typeof s !== 'string') {\n    return '';\n  }\n\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport function calculateDelta(a, b) {\n  if (!isNumeric(a) || !isNumeric(b)) {\n    return 0;\n  }\n\n  // never return less than zero ...\n  if (b - a < 0) {\n    return 0;\n  }\n\n  return b - a;\n}\n\nexport function today(days = 0) {\n  const date = new Date();\n  date.setDate(date.getDate() + days);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n\nexport function convertMinsToMs(mins) {\n  if (!parseInt(mins)) {\n    return 0;\n  }\n\n  return mins * 60000;\n}\n\nexport function convertMsToMins(ms) {\n  if (!parseInt(ms)) {\n    return 0;\n  }\n\n  return ms / 60000;\n}\n\nexport function convertSecondsToMins(seconds) {\n  if (!parseInt(seconds)) {\n    return 0;\n  }\n\n  return seconds / 60;\n}\n\nexport function convertMinsToSeconds(mins) {\n  if (!parseInt(mins) || parseInt(mins) < 0) {\n    return 0;\n  }\n\n  return +parseInt(mins) * 60;\n}\n\nexport function convertSecondsToHours(seconds) {\n  if (!parseInt(seconds)) {\n    return 0;\n  }\n\n  return seconds / 3600;\n}\n\nexport function convertWithCommas(arr, key) {\n  const split = arr.reduce((strs, datum) => {\n    strs.push(datum[key]);\n    return strs;\n  }, []);\n  return split.join(', ');\n}\n\nexport function formatJobType(type) {\n  return type === 'job' ? 'Playbook run' : 'Workflow job';\n}\n\nexport function formatJobStatus(status) {\n  return status === 'successful' ? 'Success' : 'Failed';\n}\n\nexport function formatJobDetailsURL(baseURL, jobId) {\n  const subDirectory1 = 'job';\n  const subDirectory2 = 'details';\n  return `${baseURL}/#/${subDirectory1}/${jobId}/${subDirectory2}/`;\n}\n","/**\n * Returns queryset config with defaults, if needed\n * @param {string} namespace for appending to url querystring\n * @param {object} default params that are not handled with search (offset, limit and order_by)\n * @param {array} params that are number fields\n * @return {object} query param object\n */\nimport { arrayFields } from './constants';\n\nexport function getQSConfig(\n  namespace,\n  defaultParams = { offset: 1, limit: 5, sort_by: 'name' },\n  integerFields = ['offset', 'limit'],\n  dateFields = ['modified', 'created']\n) {\n  if (!namespace) {\n    throw new Error('a QS namespace is required');\n  }\n  // if order_by isn't passed, default to name\n  // if (!defaultParams.sort_by) {\n  //   defaultParams.sort_by = 'name:desc';\n  // }\n  return {\n    namespace,\n    defaultParams,\n    integerFields,\n    dateFields,\n  };\n}\n\n/**\n * Convert url query string to query param object\n * @param {object} qs config object (used for getting defaults, current query params etc.)\n * @param {string} url query string\n * @return {object} query param object\n */\nexport function parseQueryString(config, queryString) {\n  if (!queryString) {\n    return config.defaultParams || {};\n  }\n  const params = stringToObject(config, queryString);\n  return addDefaultsToObject(config, params);\n}\n\nfunction stringToObject(config, qs) {\n  const params = {};\n  qs.replace(/^\\?/, '')\n    .split('&')\n    .map((s) => s.split('='))\n    .forEach(([nsKey, rawValue]) => {\n      if (!nsKey || !namespaceMatches(config.namespace, nsKey)) {\n        return;\n      }\n      const key = config.namespace\n        ? decodeURIComponent(nsKey.substr(config.namespace.length + 1))\n        : decodeURIComponent(nsKey);\n      const value = parseValue(config, key, rawValue, qs);\n      params[key] = mergeParam(params[key], value);\n    });\n  return params;\n}\nexport { stringToObject as _stringToObject };\n\n/**\n * helper function to check the namespace of a param is what you expect\n * @param {string} namespace to append to params\n * @param {object} params object to append namespace to\n * @return {object} params object with namespaced keys\n */\nconst namespaceMatches = (namespace, fieldname) => {\n  if (!namespace) return !fieldname.includes('.');\n\n  return fieldname.startsWith(`${namespace}.`);\n};\n\nfunction parseValue(config, key, rawValue, qs) {\n  const searchParams = new URLSearchParams(qs);\n  if (config.integerFields && config.integerFields.some((v) => v === key)) {\n    return parseInt(rawValue, 10);\n  } else if (arrayFields && arrayFields.some((v) => v === key)) {\n    const nsKey = `${config.namespace}.${key}`;\n    const output = searchParams\n      .getAll(nsKey)\n      .filter((x, i, a) => a.indexOf(x) === i);\n    searchParams.delete[nsKey];\n    return output;\n  }\n  // TODO: parse dateFields into date format?\n  return decodeURIComponent(rawValue);\n}\n\nfunction addDefaultsToObject(config, params) {\n  return {\n    ...config.defaultParams,\n    ...params,\n  };\n}\nexport { addDefaultsToObject as _addDefaultsToObject };\n\n/**\n * Convert query param object to url query string\n * Used to encode params for interacting with the api\n * @param {object} query param object\n * @return {string} url query string\n */\nexport const encodeQueryString = (params) => {\n  if (!params) return '';\n\n  return Object.keys(params)\n    .sort()\n    .filter((key) => params[key] !== null)\n    .map((key) => [key, params[key]])\n    .map(([key, value]) => encodeValue(key, value))\n    .join('&');\n};\n\nfunction encodeValue(key, value) {\n  if (Array.isArray(value)) {\n    return value\n      .map((val) => `${encodeURIComponent(key)}=${encodeURIComponent(val)}`)\n      .join('&');\n  }\n  return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n}\n\n/**\n * Convert query param object to url query string, adding namespace and\n * removing defaults. Used to put into url bar after ui route\n * @param {object} qs config object for namespacing params, filtering defaults\n * @param {object} query param object\n * @param {object} any non-namespaced params to append\n * @return {string} url query string\n */\nexport const encodeNonDefaultQueryString = (\n  config,\n  params,\n  nonNamespacedParams = {}\n) => {\n  if (!params) return '';\n  const paramsWithoutDefaults = removeParams({}, params, config.defaultParams);\n  return encodeQueryString({\n    ...namespaceParams(config.namespace, paramsWithoutDefaults),\n    ...nonNamespacedParams,\n  });\n};\n\n/**\n * helper function to namespace params object\n * @param {string} namespace to append to params\n * @param {object} params object to append namespace to\n * @return {object} params object with namespaced keys\n */\nconst namespaceParams = (namespace, params) => {\n  if (!namespace) return params;\n\n  const namespaced = {};\n  Object.keys(params).forEach((key) => {\n    namespaced[`${namespace}.${key}`] = params[key];\n  });\n\n  return namespaced;\n};\n\n/**\n * Removes params from the search string and returns the updated list of params\n * @param {object} qs config object (used for getting defaults, current query params etc.)\n * @param {object} object with params from existing search\n * @param {object} object with new params to remove\n * @return {object} query param object\n */\nexport function removeParams(config, oldParams, paramsToRemove) {\n  const updated = {\n    ...config.defaultParams,\n  };\n  Object.keys(oldParams).forEach((key) => {\n    const value = removeParam(oldParams[key], paramsToRemove[key]);\n    if (value !== null) {\n      updated[key] = value;\n    }\n  });\n  return updated;\n}\n\nfunction removeParam(oldVal, deleteVal) {\n  if (oldVal === deleteVal) {\n    return null;\n  }\n  if (Array.isArray(deleteVal)) {\n    return deleteVal.reduce(removeParam, oldVal);\n  }\n  if (Array.isArray(oldVal)) {\n    const index = oldVal.indexOf(deleteVal);\n    if (index > -1) {\n      oldVal.splice(index, 1);\n    }\n    if (oldVal.length === 1) {\n      return oldVal[0];\n    }\n  }\n  return oldVal;\n}\n\n/**\n * Merge old and new params together, joining values into arrays where necessary\n * @param {object} namespaced params object of old params\n * @param {object} namespaced params object of new params\n * @return {object} merged namespaced params object\n */\nexport function mergeParams(oldParams, newParams) {\n  const merged = {};\n  Object.keys(oldParams).forEach((key) => {\n    merged[key] = mergeParam(oldParams[key], newParams[key]);\n  });\n  Object.keys(newParams).forEach((key) => {\n    if (!merged[key]) {\n      merged[key] = newParams[key];\n    }\n  });\n  return merged;\n}\n\nfunction mergeParam(oldVal, newVal) {\n  if (!newVal && newVal !== '') {\n    return oldVal;\n  }\n  if (!oldVal && oldVal !== '') {\n    return newVal;\n  }\n  let merged;\n  if (Array.isArray(oldVal)) {\n    merged = oldVal.concat(newVal);\n  } else {\n    merged = [oldVal].concat(newVal);\n  }\n  return dedupeArray(merged);\n}\n\nfunction dedupeArray(arr) {\n  const deduped = [...new Set(arr)];\n  if (deduped.length === 1) {\n    return deduped[0];\n  }\n  return deduped;\n}\n\n/**\n * Join old and new params together, replacing old values with new ones where\n * necessary\n * @param {object} namespaced params object of old params\n * @param {object} namespaced params object of new params\n * @return {object} joined namespaced params object\n */\nexport function replaceParams(oldParams, newParams) {\n  return {\n    ...oldParams,\n    ...newParams,\n  };\n}\n","import { useReducer } from 'react';\nimport moment from 'moment';\nimport { useHistory } from 'react-router-dom';\n\nimport { formatDate } from '../Utilities/helpers';\nimport { parseQueryString } from './qs';\n\nexport const useQueryParams = (initial) => {\n  const history = useHistory();\n\n  const initialParams = {\n    ...initial,\n    ...(initial.sort_options &&\n      initial.sort_order && {\n        sort_by: `${initial.sort_options}:${initial.sort_order}`,\n      }),\n  };\n\n  const initialWithCalculatedParams =\n    history !== 'undefined' && history?.location\n      ? parseQueryString(initialParams, history.location.search)\n      : initialParams;\n  const paramsReducer = (state, { type, value }) => {\n    switch (type) {\n      /* v0 api reducers */\n      case 'SET_STARTDATE':\n        return { ...state, startDate: value };\n      case 'SET_ENDDATE':\n        return { ...state, endDate: value };\n      case 'SET_ID':\n        if (!parseInt(value)) {\n          const { id: ignored, ...rest } = state;\n          return rest;\n        }\n\n        return { ...state, id: parseInt(value) };\n      case 'SET_SEVERITY':\n        if (value.severity === '') {\n          const { severity: ignored, ...rest } = state;\n          return rest;\n        }\n\n        return { ...state, ...value };\n\n      /* v1 api reducers */\n      case 'SET_LIMIT':\n        return isNaN(value)\n          ? { ...state, limit: 5 } // Defaults back to 5\n          : { ...state, limit: parseInt(value) };\n      case 'SET_OFFSET':\n        return isNaN(value)\n          ? { ...state, offset: 0 } // Defaults back to 0\n          : { ...state, offset: parseInt(value) };\n      case 'SET_ATTRIBUTES':\n      case 'SET_JOB_TYPE':\n      case 'SET_STATUS':\n      case 'SET_ORG':\n      case 'SET_CLUSTER':\n      case 'SET_TEMPLATE':\n      case 'SET_AUTOMATION_STATUS':\n      case 'SET_CATEGORY':\n      case 'SET_FREQUENCY':\n      case 'SET_NAME':\n      case 'SET_ROOT_WORKFLOWS_AND_JOBS':\n      case 'SET_INVENTORY':\n        return { ...state, ...value };\n      case 'SET_QUICK_DATE_RANGE': {\n        let newState = { ...state };\n        if (value !== 'custom') {\n          newState = { ...newState, start_date: null, end_date: null };\n        }\n\n        newState = { ...newState, ...value };\n        return newState;\n      }\n\n      case 'SET_START_DATE':\n      case 'SET_END_DATE': {\n        let newValues = {};\n        Object.entries(value).forEach(([key, value]) => {\n          newValues[key] = formatDate(value);\n        });\n        return { ...state, ...newValues };\n      }\n\n      case 'SET_SORT_OPTIONS': {\n        return {\n          ...state,\n          sort_options: value.sort_options,\n          ...(state.sort_order && {\n            sort_by: `${value.sort_options}:${state.sort_order}`,\n          }), // Update sort by\n        };\n      }\n\n      case 'SET_SORT_ORDER': {\n        return {\n          ...state,\n          sort_order: value.sort_order,\n          ...(state.sort_options && {\n            sort_by: `${state.sort_options}:${value.sort_order}`,\n          }), // Update sort by\n        };\n      }\n\n      case 'REINITIALIZE':\n        return { ...value };\n      case 'RESET_FILTER':\n        return { ...initialWithCalculatedParams };\n      default:\n        throw new Error(`The query params reducer action (${type}) not found.`);\n    }\n  };\n\n  const [queryParams, dispatch] = useReducer(paramsReducer, {\n    ...initialWithCalculatedParams,\n  });\n\n  const actionMapper = {\n    status: 'SET_STATUS',\n    quick_date_range: 'SET_QUICK_DATE_RANGE',\n    job_type: 'SET_JOB_TYPE',\n    org_id: 'SET_ORG',\n    cluster_id: 'SET_CLUSTER',\n    template_id: 'SET_TEMPLATE',\n    sort_order: 'SET_SORT_ORDER',\n    sort_options: `SET_SORT_OPTIONS`,\n    start_date: 'SET_START_DATE',\n    end_date: 'SET_END_DATE',\n    automation_status: 'SET_AUTOMATION_STATUS',\n    category: 'SET_CATEGORY',\n    frequency_period: 'SET_FREQUENCY',\n    name: 'SET_NAME',\n    only_root_workflows_and_standalone_jobs: 'SET_ROOT_WORKFLOWS_AND_JOBS',\n    inventory_id: 'SET_INVENTORY',\n  };\n\n  return {\n    queryParams,\n    dispatch,\n    setFromToolbar: (varName, value = null) => {\n      if (!varName) {\n        dispatch({ type: 'RESET_FILTER' });\n      } else {\n        dispatch({ type: actionMapper[varName], value: { [varName]: value } });\n      }\n    },\n    setFromPagination: (offset, limit = null) => {\n      dispatch({ type: 'SET_OFFSET', value: offset });\n      if (limit) {\n        dispatch({ type: 'SET_LIMIT', value: limit });\n      }\n    },\n    /* v0 api usage after this line */\n    setSeverity: (severity) =>\n      dispatch({ type: 'SET_SEVERITY', value: { severity } }),\n    setEndDate: () => {\n      const endDate = moment().format('YYYY-MM-DD');\n      dispatch({ type: 'SET_ENDDATE', value: endDate });\n    },\n    setId: (value) => dispatch({ type: 'SET_ID', value }),\n    setStartDate: (days) => {\n      let startDate;\n      if (days === 7) {\n        startDate = moment().subtract(1, 'week').format('YYYY-MM-DD');\n      }\n\n      if (days === 14) {\n        startDate = moment().subtract(2, 'weeks').format('YYYY-MM-DD');\n      }\n\n      if (days === 31) {\n        startDate = moment().subtract(1, 'month').format('YYYY-MM-DD');\n      } else {\n        startDate = moment().subtract(days, 'days').format('YYYY-MM-DD');\n      }\n\n      dispatch({ type: 'SET_STARTDATE', value: startDate });\n    },\n    setStartDateAsString: (value) => dispatch({ type: 'SET_STARTDATE', value }),\n  };\n};\n","import { Paths } from '../paths';\nimport { stringify } from 'query-string';\n\nconst useRedirect = (history, path) => (query) => {\n  const search = stringify(query, { arrayFormat: 'bracket' });\n  history.push({\n    pathname: Paths[path],\n    search,\n  });\n};\n\nexport default useRedirect;\n","import { useEffect, useState, useCallback } from 'react';\nimport useIsMounted from './useIsMounted';\n\n/*\n * The useRequest hook accepts a request function and returns an object with\n * five values:\n *   request: a function to call to invoke the request\n *   result: the value returned from the request function (once invoked)\n *   isLoading: boolean state indicating whether the request is in active/in flight\n *   error: any caught error resulting from the request\n *   success: once request is completed and there were no errors\n *   setValue: setter to explicitly set the result value\n *\n * The hook also accepts an optional second parameter which is a default\n * value to set as result before the first time the request is made.\n */\nexport const useRequest = (makeRequest, initialValue) => {\n  const [result, setResult] = useState(initialValue);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSuccess, setIsSuccess] = useState(false);\n  const isMounted = useIsMounted();\n\n  return {\n    result,\n    error,\n    isLoading,\n    isSuccess,\n    request: useCallback(\n      async (...args) => {\n        setIsSuccess(false);\n        setIsLoading(true);\n        try {\n          const response = await makeRequest(...args);\n          if (isMounted.current) {\n            setResult(response);\n            setError(null);\n            setIsSuccess(true);\n          }\n        } catch (err) {\n          if (isMounted.current) {\n            setError(err);\n            setResult(initialValue);\n          }\n        } finally {\n          if (isMounted.current) {\n            setIsLoading(false);\n          }\n        }\n      },\n      [makeRequest]\n    ),\n    setValue: setResult,\n  };\n};\n\n/*\n * Provides controls for \"dismissing\" an error message\n *\n * Params: an error object\n * Returns: { error, dismissError }\n *   The returned error object is the same object passed in via the paremeter,\n *   until the dismissError function is called, at which point the returned\n *   error will be set to null on the subsequent render.\n */\nexport const useDismissableError = (error) => {\n  const [showError, setShowError] = useState(false);\n\n  useEffect(() => {\n    if (error) {\n      setShowError(true);\n    }\n  }, [error]);\n\n  return {\n    error: showError ? error : null,\n    dismissError: () => {\n      setShowError(false);\n    },\n  };\n};\n\n/*\n * Hook to assist with deletion of items from a paginated item list. The page\n * url will be navigated back one page on a paginated list if needed to prevent\n * the UI from re-loading an empty set and displaying a \"No items found\"\n * message.\n *\n * Params: a callback function that will be invoked in order to delete items,\n *   and an object with structure { qsConfig, allItemsSelected, fetchItems }\n * Returns: { isLoading, deleteItems, deletionError, clearDeletionError }\n */\nexport const useDeleteItems = (\n  makeRequest,\n  { qsConfig = null, fetchItems = null } = {}\n) => {\n  const {\n    error: requestError,\n    isLoading,\n    request,\n  } = useRequest(makeRequest, null);\n  const { error, dismissError } = useDismissableError(requestError);\n  const deleteItems = async () => {\n    await request();\n    if (!qsConfig) {\n      return;\n    }\n    fetchItems();\n  };\n\n  return {\n    isLoading,\n    deleteItems,\n    deletionError: error,\n    clearDeletionError: dismissError,\n  };\n};\n\nexport default useRequest;\n","import { useEffect, useRef } from 'react';\n\nexport default function useIsMounted() {\n  const isMounted = useRef(null);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  });\n  return isMounted;\n}\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PFPagination } from '@patternfly/react-core';\nimport { encodeNonDefaultQueryString, parseQueryString, } from '../../Utilities/qs';\nimport { useHistory } from 'react-router-dom';\nvar perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '15', value: 15 },\n    { title: '20', value: 20 },\n    { title: '25', value: 25 },\n];\nvar Pagination = function (_a) {\n    var _b = _a.count, count = _b === void 0 ? 0 : _b, qsConfig = _a.qsConfig, params = _a.params, setPagination = _a.setPagination, props = __rest(_a, [\"count\", \"qsConfig\", \"params\", \"setPagination\"]);\n    var offset = params.offset, limit = params.limit;\n    var currentPage = Math.floor(offset / limit + 1);\n    var returnOffsetVal = function (page) { return (page - 1) * limit; };\n    var history = useHistory();\n    var pushHistoryState = function (params) {\n        if (params === void 0) { params = {}; }\n        var _a = history.location, pathname = _a.pathname, search = _a.search;\n        var nonNamespacedParams = parseQueryString({}, search);\n        var encodedParams = encodeNonDefaultQueryString(qsConfig, params, nonNamespacedParams);\n        history.push(encodedParams ? pathname + \"?\" + encodedParams : pathname);\n    };\n    var handleSetPage = function (_event, pageNumber) {\n        var oldParams = parseQueryString(qsConfig, history.location.search);\n        pushHistoryState(__assign(__assign({}, oldParams), { limit: pageNumber }));\n    };\n    var handleSetPageSize = function (_event, page) {\n        var oldParams = parseQueryString(qsConfig, history.location.search);\n        pushHistoryState(__assign(__assign({}, oldParams), { offset: page }));\n    };\n    return (React.createElement(PFPagination, __assign({ itemCount: count, widgetId: \"aa-pagination\", perPageOptions: perPageOptions, perPage: limit, page: currentPage, onPerPageSelect: function (event, perPage, page) {\n            setPagination(returnOffsetVal(page), perPage);\n            handleSetPage(event, perPage);\n        }, onSetPage: function (event, page) {\n            setPagination(returnOffsetVal(page));\n            handleSetPageSize(event, returnOffsetVal(page));\n        } }, props)));\n};\nPagination.propTypes = {\n    count: PropTypes.number,\n    qsConfig: PropTypes.any,\n    params: PropTypes.exact({\n        offset: PropTypes.number.isRequired,\n        limit: PropTypes.number.isRequired,\n    }).isRequired,\n    setPagination: PropTypes.func.isRequired,\n};\nexport default Pagination;\n","import Pagination from './Pagination';\nexport default Pagination;\n","var currencyFormatter = function (n) {\n    var formatter = new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD',\n    });\n    return formatter.format(n); /* $2,500.00 */\n};\nexport default currencyFormatter;\n"],"sourceRoot":""}