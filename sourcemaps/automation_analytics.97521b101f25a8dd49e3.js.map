{"version":3,"sources":["webpack:///./src/Api.js","webpack:///./src/Charts/BaseChart.js","webpack:///./src/Components/AlertModal/AlertModal.js","webpack:///./src/Components/ApiErrorState.js","webpack:///./src/Components/Breadcrumbs.js","webpack:///./src/Components/EmptyState.js","webpack:///./src/Components/ErrorDetail/ErrorDetail.js","webpack:///./src/Components/ErrorDetail/getErrorMessage.js","webpack:///./src/Components/JobStatus.js","webpack:///./src/Components/LoadingState.js","webpack:///./src/Components/NoData.js","webpack:///./src/Components/NoResults.js","webpack:///./src/Components/Toolbar/constants.js","webpack:///./src/Components/Toolbar/Groups/CategoryDropdown.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/Select.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/helpers.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/Date.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/Text.js","webpack:///./src/Components/Toolbar/Groups/ToolbarInput/index.js","webpack:///./src/Components/Toolbar/Groups/FiltersCategoriesGroup.js","webpack:///./src/Components/Toolbar/Groups/QuickDateGroup.js","webpack:///./src/Components/Toolbar/Groups/SortByGroup.js","webpack:///./src/Components/Toolbar/Groups/SettingsPanel.js","webpack:///./src/Components/Toolbar/Toolbar.js","webpack:///./src/Components/Toolbar/index.js","webpack:///./src/Charts/ROITopTemplates.js","webpack:///./src/Containers/AutomationCalculator/helpers.js","webpack:///./src/Containers/AutomationCalculator/TotalSavings.js","webpack:///./src/Containers/AutomationCalculator/CalculationCost.js","webpack:///./src/Containers/AutomationCalculator/AutomationFormula.js","webpack:///./src/Containers/AutomationCalculator/TopTemplates.js","webpack:///./src/Containers/AutomationCalculator/AutomationCalculator.js","webpack:///./src/Utilities/Tooltip.js","webpack:///./src/Charts/BarChart.js","webpack:///./src/Charts/LineChart.js","webpack:///./src/Components/ModulesList.js","webpack:///./src/Components/Breakdown.js","webpack:///./src/Components/ModalContents.js","webpack:///./src/Components/TemplatesList.js","webpack:///./src/Containers/Clusters/Clusters.js","webpack:///./src/Components/JobExplorerList.js","webpack:///./src/Containers/JobExplorer/JobExplorer.js","webpack:///./src/Components/NotificationsList.js","webpack:///./src/Containers/Notifications/Notifications.js","webpack:///./src/Utilities/Legend.js","webpack:///./src/Charts/GroupedBarChart/GroupedBarChart.js","webpack:///./src/Charts/GroupedBarChart/OrgsTooltip.js","webpack:///./src/Charts/GroupedBarChart/HostsTooltip.js","webpack:///./src/Charts/PieChart.js","webpack:///./src/Containers/OrganizationStatistics/OrganizationStatistics.js","webpack:///./src/Utilities/colors.ts","webpack:///./src/Containers/SavingsPlanner/Add/index.js","webpack:///./src/Components/CardActionsRow.js","webpack:///./src/Components/DeleteButton/DeleteButton.js","webpack:///./src/Components/RoutedTabs.js","webpack:///./src/Containers/SavingsPlanner/DetailsTab.js","webpack:///./src/Containers/SavingsPlanner/TotalSavings.tsx","webpack:///./src/Containers/SavingsPlanner/FormulaDescription.tsx","webpack:///./src/Containers/SavingsPlanner/StatisticsTab.tsx","webpack:///./src/Containers/SavingsPlanner/Edit/index.js","webpack:///./src/Containers/SavingsPlanner/SavingsPlan.js","webpack:///./src/Components/EmptyList.js","webpack:///./src/Containers/SavingsPlanner/PlanCard.js","webpack:///./src/Components/Toolbar/ToolbarDeleteButton.js","webpack:///./src/Containers/SavingsPlanner/SavingsPlanner.js","webpack:///./src/Utilities/useSelected.js","webpack:///./src/Containers/SavingsPlanner/Shared/constants.js","webpack:///./src/Containers/SavingsPlanner/Shared/usePlanData.js","webpack:///./src/Containers/SavingsPlanner/Shared/Details.js","webpack:///./src/Containers/SavingsPlanner/Shared/Tasks.js","webpack:///./src/Containers/SavingsPlanner/Shared/Templates.js","webpack:///./src/Containers/SavingsPlanner/Shared/Form.js","webpack:///./src/Utilities/constants.js","webpack:///./src/Utilities/getRelatedResourceDeleteDetails.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Utilities/useApi.js","webpack:///./src/Utilities/useQueryParams.js","webpack:///./src/Utilities/useRedirect.js","webpack:///./src/Utilities/useRequest.js","webpack:///./src/Utilities/useIsMounted.js","webpack:////home/travis/build/RedHatInsights/tower-analytics-frontend/node_modules/moment/locale|sync|/^\\.\\/.*$/","webpack:///./src/Components/Pagination/Pagination.tsx","webpack:///./src/Components/Pagination/index.ts"],"names":["plansEndpoint","planEndpoint","handleResponse","response","json","then","ok","status","Promise","reject","message","error","authenticatedFetch","endpoint","options","window","insights","chrome","auth","getUser","fetch","preflightRequest","readJobExplorer","params","paginationParams","limit","offset","sort_by","qs","stringify","url","URL","location","origin","search","method","body","JSON","readEventExplorer","readROI","readHostExplorer","readPlans","createPlan","deletePlan","id","updatePlan","readPlan","readClustersOptions","readOrgOptions","readROIOptions","readPlanOptions","readClusters","readNotifications","Object","keys","forEach","key","searchParams","append","readJobExplorerOptions","initializeChart","Chart","BaseChart","props","margin","history","useHistory","getWidth","parseInt","d3","style","left","right","getHeight","top","bottom","propTypes","PropTypes","Header","styled","AlertModal","isOpen","title","label","variant","children","variantIcons","danger","size","css","info","success","warning","customHeader","Title","headingLevel","Modal","header","aria-label","aria-labelledby","ApiErrorState","EmptyState","EmptyStateVariant","EmptyStateIcon","icon","ExclamationCircleIcon","color","globalDangerColor200","EmptyStateBody","Breadcrumbs","items","current","Breadcrumb","map","navigate","basePathNavigate","getBaseName","BreadcrumbItem","to","BreadcrumbHeading","DefaultEmptyState","preflightError","WrenchIcon","href","target","rel","Button","onClick","reload","Card","PFCard","CardBody","PFCardBody","Expandable","PFExpandable","ErrorDetail","useState","isExpanded","setIsExpanded","toggleText","onToggle","prototype","hasOwnProperty","call","data","detail","values","reduce","acc","currentValue","concat","getErrorMessage","Fragment","config","toUpperCase","Array","isArray","m","stack","Error","isRequired","JobStatus","str","Label","getColor","getIcon","charAt","slice","CubesIcon","SearchIcon","optionsForCategories","type","isSingle","name","placeholder","hasChips","quick_date_range","start_date","end_date","job_type","org_id","cluster_id","template_id","sort_options","automation_status","frequency_period","category","inventory_id","CategoryDropdown","selected","setSelected","categories","ToolbarItem","Select","onSelect","_event","selection","selections","placeholderText","SelectOption","value","OptionSpan","renderValues","description","item","comparator","val","categoryKey","selectOptions","isVisible","setValue","expanded","setExpanded","ToolbarFilter","data-cy","showToolbarItem","chips","i","undefined","Number","isInteger","cmpItem","push","handleCheckboxChips","categoryName","deleteChip","_","valueToDelete","keyToDelete","find","filteredArr","filter","SelectVariant","includes","hasInlineFilter","onFilter","textInput","toLowerCase","maxHeight","Date","InputGroup","TextInput","onChange","Text","searchVal","setSearchVal","useEffect","components","select","date","text","ToolbarInput","SelectedInput","FilterCategoriesGroup","filterCategories","filters","setFilters","currentCategory","setCurrentCategory","ToolbarGroup","el","QuickDateGroup","e","SortByGroup","sort_order","SettingsPanel","settingsExpanded","setSettingsExpanded","isFlat","backgroundColor","CardHeader","CardActions","CardTitle","Switch","labelOff","isChecked","only_root_workflows_and_standalone_jobs","Tooltip","position","content","FilterableToolbar","pagination","hasSettings","additionalControls","hideQuickDateRange","hideSortOptions","restCategories","obj","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarContent","length","isActive","control","idx","visibility","default","lg","d","savings","manualCost","automationCost","scrollLeftOffset","node","scrollLeft","x","svg","getBoundingClientRect","y","formatDollars","delta","automatedCost","toolTipWidth","toolTipBase","width","chartWidth","flipped","nameWidth","getComputedTextLength","savingsWidth","manualCostWidth","automationCostWidth","widestTextElem","adjustedWidth","maxTextPerc","boxWidth","overage","boundingBox","attr","toolTipPoint","interrupt","transition","delay","this","draw","amount","parseFloat","toFixed","toString","replace","textWidthThreshold","TopTemplatesSavings","init","bind","resize","state","timeout","clearTimeout","setState","setTimeout","remove","ticks","height","rangeRound","padding","range","formatYAxisValue","xAxis","tickValues","yAxis","tickFormat","tickSize","taskNames","tooltip","domain","selectAll","bandwidth","enter","on","darker","handleMouseOver","handleMouseOut","addEventListener","removeEventListener","Component","BorderedCardTitle","TotalSavings","totalSavings","borderTop","paddingBottom","InputAndText","validFloat","floatValue","CalculationCost","costManual","setCostManual","costAutomation","setCostAutomation","InputGroupText","paddingTop","TemplateDetail","TemplateDetailSubTitle","TooltipWrapper","IconGroup","QuestionIconTooltip","details","Popover","bodyContent","k","capitalize","split","join","TopTemplates","sortBy","setDataRunTime","setEnabled","redirectToJobExplorer","overflow","flex","className","component","convertSecondsToMins","avgRunTime","minutes","convertMinsToSeconds","successful_hosts_total","trimmed","sortAttribute","showSortAttr","enabled","deselectedIds","setDeselectedIds","Wrapper","WrapperLeft","WrapperRight","filterDisabled","updateDeltaCost","convertSecondsToHours","successful_elapsed_total","calculateDelta","AutomationCalculator","toJobExplorer","useRedirect","useApi","preflight","setPreflight","setOptions","api","fetchApi","setDataInApi","useQueryParams","roiConst","queryParams","setFromToolbar","NotAuthorized","notAuthorizedParams","PageHeader","PageHeaderTitle","Main","isSuccess","isLoading","LoadingState","NoData","textAlign","paddingLeft","sum","curr","display","flexDirection","templateId","seconds","updatedData","setUnfilteredData","opts","fail","total","formatTooltipDate","RAN","FAIL","TOTAL","DATE","jobs","jobsWidth","failed","successful","successTextWidth","failTextWidth","circleSuccess","circleFail","failedIcon","successIcon","successText","failText","clickMore","colors","BarChart","formattedData","jobExplorer","Paths","formattedDate","formatDate","initialQueryParams","arrayFormat","pathname","parseTime","formatted","created_date","successful_count","failed_count","barTooltip","layers","order","maxTicks","Math","round","layer","_d","duration","ease","prevProps","LineChart","updateCluster","path","attrTween","tweenDash","l","getTotalLength","t","unformattedData","successLine","curve","failLine","defined","isNaN","vertical","handleMouseMove","intersectX","cx","baseVal","DataListCell","PFDataListCell","DataListItem","PFDataListItem","DataCellEnd","ModulesList","modules","DataList","background","border","module","index","host_task_count","trimStr","BarContainer","Bar","LabelsContainer","Square","Breakdown","categoryCount","categoryColor","totalCount","accumulated","currentVal","sortedCategories","sort","barSpacing","remainingSpace","ActionContainer","formatTopFailedTask","percentage","ceil","total_failed_count","task_name","formatSuccessRate","successCount","formatTotalTime","elapsed","toISOString","substr","ModalContents","selectedId","handleModal","qp","jobType","handleCloseBtn","relatedJobs","setRelatedJobs","stats","setStats","relatedTemplateJobsParams","attributes","group_by_time","agreggateTemplateParams","group_by","cancelled","canceled_count","error_count","new","new_count","pending","pending_count","running","running_count","waiting","waiting_count","global_palette_green_200","global_palette_black_850","global_palette_orange_300","global_palette_red_100","global_palette_cyan_200","global_palette_purple_300","global_palette_blue_300","global_palette_light_green_200","descriptionStats","total_count","formatJobType","most_failed_tasks","onClose","DescriptionList","isHorizontal","columnModifier","DescriptionListGroup","DescriptionListTerm","DescriptionListDescription","Divider","marginTop","marginBottom","TableComposable","Thead","Tr","heading","Th","Tbody","job","Td","template_name","cluster_name","formatDateTime","finished","TemplatesList","templates","setSelectedId","isModalOpen","setIsModalOpen","displayJobType","initialTopTemplateParams","initialTopWorkflowParams","initialModuleParams","setPreFlightError","clusters","chartData","setData","setTemplates","workflows","setWorkflows","setModules","initialOptionsParams","optionsQueryParams","topTemplatesParams","topWorkflowParams","topModuleParams","initializeWithPreflight","headerLabels","ExternalLinkIcon","PFExternalLinkIcon","DataListCellHeader","DataListItemCells","PFDataListItemCells","DataListToggle","PFDataListToggle","mobileBreakpoint","AllJobsTemplate","innerWidth","windowWidth","setWindowWidth","onResize","ariaLabel","ariaLabelledBy","count","DataListItemRow","aria-controls","newExpanded","indexOf","dataListCells","tower_link","fontWeight","org_name","DataListContent","isHidden","created","started","buildListRow","JobExplorerList","labels","isCompact","JobExplorer","meta","setFromPagination","dispatch","appNavClick","secondaryNav","initialSearchParams","parse","parseBooleans","parseNumbers","updateURL","Pagination","setPagination","NoResults","PaginationVariant","ExternalLinkAltIcon","PFExternalLinkAltIcon","NotificationDrawerListItem","PFNotificationDrawerListItem","NotificationDrawerList","PFNotificationDrawerList","stringifyDate","day","moment","now","utc","isAfter","diff","isSame","valueOf","AllNotificationTemplate","notifications","notification_id","tower_url","NotificationDrawerListItemHeader","NotificationDrawerListItemBody","timestamp","ErrorNotificationTemplate","notification","NoticeNotificationTemplate","WarningNotificationTemplate","NotificationsList","filterBy","PFCardTitle","DropdownGroup","notificationOptions","disabled","formatClusterName","uuid","install_uuid","notificationsData","setNotificationsData","clusterOptions","setClusterOptions","selectedCluster","setSelectedCluster","firstRender","setFirstRender","setIsLoading","setMeta","setId","setSeverity","ignore","fetchEndpoints","all","p","clustersData","FormSelect","FormSelectOption","isDisabled","severity","NotificationDrawer","Container","LegendDetail","Color","SubTitle","Legend","chartName","some","pieces","GroupedBarChart","TooltipClass","legend","colorFunc","selectedIds","setSelectedIds","selectedOrgs","x0","x1","maxTicksOneMonth","maxTicksTwoMonths","dates","yLabel","exit","bars","merge","subEnter","moreDetail","endsWith","defaultProps","OrgsTooltip","orgName","HostsTooltip","perc","percSuccess","drawn","percent","success_rate","maxLength","percentageTotal","percentageSuccess","boundingBOx","showSuccess","boundingHeight","boundingWidth","PieChart","a","b","radius","min","filteredData","getTotal","donutTooltip","pie","arc","outerRadius","innerRadius","classed","CardContainer","TopCard","scaleOrdinal","pieChartMapper","attrName","chartMapper","rest","dateForJobExplorer","OrganizationStatistics","activeTabKey","setActiveTabKey","orgs","setOrgs","setJobs","tasks","setTasks","constants","jobEventsByOrgParams","include_others","jobRunsByOrgParams","jobsByDateAndOrgParams","hostAcrossOrgParams","readJobsOrHosts","Tabs","activeKey","tabIndex","Tab","eventKey","marginLeft","canWrite","rbac","perms","write","Redirect","CardActionsWrapper","CardActionsRow","WarningMessage","Alert","DeleteButton","onConfirm","modalTitle","ouiaId","deleteMessage","deleteDetailsRequests","disabledTooltip","setIsOpen","deleteMessageError","setDeleteMessageError","deleteDetails","setDeleteDetails","toggleModal","getRelatedResourceDeleteCounts","results","spinnerAriaValueText","actions","isInline","entries","Badge","RoutedTabs","tabsArray","defaultTabId","useLocation","tab","link","getActiveTabId","match","TabTitleText","role","arrayOf","shape","number","string","oneOfType","DetailsTab","plans","hosts","manual_time","modified","template_details","labelsAndValues","Name","Description","Frequency","Template","showTemplate","useRequest","useCallback","deletePlans","request","deleteError","relatedResourceDeleteRequests","isDeleteDisabled","result","deleteDetailsError","fetchDeleteDetails","useDismissableError","dismissError","TextContent","List","task","ListItem","CardFooter","_a","_b","_c","isMoney","isPlain","FormulaDescription","__assign","assign","s","n","arguments","apply","yearLabels","initial","year1","year2","year3","cost","benefit","net","setIsMoney","barChartData","charts","kind","parent","domainPadding","themeColor","cursor","stickToAxis","grid","stroke","axisLabel","barRatio","barWidth","fill","labelName","strokeWidth","functions","fetchFnc","resolve","year","total_costs","projections","monetary_stats","total_benefits","cumulative_net_benefits","total_hours_spent_risk_adjusted","time_stats","total_hours_saved","cumulative_time_net_benefits","response_type","getChartData","Grid","GridItem","span","ToggleGroup","ToggleGroupItem","buttonId","isSelected","schema","Edit","useParams","Form","pageTitle","breadcrumbUrl","breadcrumbsItems","Route","exact","SavingsPlanner","EmptyList","canAdd","AddCircleOIcon","CardLabel","PlanCard","template","plan","handleSelect","isCardKebabOpen","setIsCardKebabOpen","useRouteMatch","kebabDropDownItems","DropdownItem","isHoverable","CardHeaderMain","Link","Dropdown","toggle","KebabToggle","dropdownItems","Checkbox","row","requiredField","username","image","ToolbarDeleteButton","deleteMessages","itemsUnableToDelete","itemsToDelete","pluralizedItemName","onDelete","errorMessage","warningMessage","cannotDelete","shouldShowDeleteWarning","Boolean","savingsPlanner","combinedOptions","list","isAllSelected","prevState","useSelected","useDeleteItems","qsConfig","allItemsSelected","fetchItems","deleteLoading","deletionError","deleteItems","clearDeletionError","handleDelete","hasGutter","Gallery","datum","convertTasks","task_order","Details","formData","categoryIsOpen","setCategoryIsOpen","manualTimeIsOpen","setManualTimeIsOpen","frequencyPeriodIsOpen","setFrequencyPeriodIsOpen","md","FormGroup","fieldId","newName","newDescription","newHosts","TaskSection","TaskTitle","TaskDeleteButton","DeleteTaskActionSection","DataListAction","TaskRow","Tasks","taskToAdd","setTaskToAdd","liveText","setLiveText","appendTask","newTaskName","onKeyDown","preventDefault","onDragFinish","newItemOrder","onDragStart","newId","onDragMove","oldIndex","newIndex","onDragCancel","itemOrder","DataListControl","DataListDragButton","aria-describedby","aria-pressed","removeTask","aria-live","ListFooter","Templates","formDispatch","hash","queryParamsDispatch","rowIndex","event","startStep","setStartStep","useReducer","requestPayload","hourly_rate","frequency_per_period","usePlanData","steps","step_number","nextButtonText","step","onStepChange","newStep","Wizard","navAriaLabel","mainAriaLabel","onGoToStep","onNext","onBack","onSave","startAtStep","defaultParams","roi","organizationStatistics","requests","hasCount","savingsPlan","readRecordApi","isNumeric","dateTime","format","mins","dataFetchReducer","action","payload","initialData","postprocess","setRequest","didCancel","initialWithCalculatedParams","startDate","endDate","newState","newValues","actionMapper","varName","setEndDate","setStartDate","days","subtract","setStartDateAsString","query","makeRequest","initialValue","setResult","setError","isMounted","useRef","useIsMounted","showError","setShowError","requestError","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","exports","perPageOptions","getOwnPropertySymbols","propertyIsEnumerable","__rest","currentPage","floor","returnOffsetVal","page","itemCount","widgetId","perPage","onPerPageSelect","onSetPage"],"mappings":"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","file":"js/automation_analytics.84645a7c3eb1f40b8f89.js","sourcesContent":["import { stringify } from 'query-string';\n/* v0 endpoints */\nconst clustersEndpoint = `/api/tower-analytics/v0/clusters/`;\nconst notificationsEndpoint = `/api/tower-analytics/v0/notifications/`;\nconst preflightEndpoint = `/api/tower-analytics/v0/authorized/`;\n\n/* v1 endpoints */\nconst jobExplorerEndpoint = '/api/tower-analytics/v1/job_explorer/';\nconst hostExplorerEndpoint = '/api/tower-analytics/v1/host_explorer/';\nconst eventExplorerEndpoint = '/api/tower-analytics/v1/event_explorer/';\nconst ROIEndpoint = '/api/tower-analytics/v1/roi_templates/';\nconst plansEndpoint = '/api/tower-analytics/v1/plans/';\nconst planEndpoint = '/api/tower-analytics/v1/plan/';\n\n/* page options endpoints */\nconst jobExplorerOptionsEndpoint =\n  '/api/tower-analytics/v1/job_explorer_options/';\nconst ROITemplatesOptionsEndpoint =\n  '/api/tower-analytics/v1/roi_templates_options/';\nconst orgOptionsEndpoint =\n  '/api/tower-analytics/v1/dashboard_organization_statistics_options/';\nconst clustersOptionsEndpoint =\n  '/api/tower-analytics/v1/dashboard_clusters_options/';\nconst planOptionsEndpoint = '/api/tower-analytics/v1/plan_options/';\n\nfunction handleResponse(response) {\n  return response.json().then((json) => {\n    if (response.ok) {\n      return json;\n    }\n\n    if (response.status === 404 || response.status === 401) {\n      return Promise.reject({\n        status: response.status,\n        message: json,\n      });\n    } else if (response.status === 403) {\n      return Promise.reject({\n        status: response.status,\n        error: 'RBAC access denied',\n      });\n    } else {\n      return Promise.reject(json);\n    }\n  });\n}\n\nfunction authenticatedFetch(endpoint, options) {\n  return window.insights.chrome.auth\n    .getUser()\n    .then(() => fetch(endpoint, options));\n}\n\nexport const preflightRequest = () => {\n  return authenticatedFetch(preflightEndpoint).then(handleResponse);\n};\n\nexport const readJobExplorer = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(jobExplorerEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readEventExplorer = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(eventExplorerEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readROI = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(ROIEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readHostExplorer = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(hostExplorerEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readPlans = ({ params = {} }) => {\n  const { limit, offset, sort_by } = params;\n  const paginationParams = {\n    limit,\n    offset,\n    sort_by,\n  };\n  const qs = stringify(paginationParams);\n  let url = new URL(plansEndpoint, window.location.origin);\n  url.search = qs;\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const createPlan = ({ params = {} }) => {\n  let url = new URL(planEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const deletePlan = ({ params = {} }) => {\n  let url = new URL(`${planEndpoint}${params.id}`, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'DELETE',\n  }).then(handleResponse);\n};\n\nexport const updatePlan = ({ id, params = {} }) => {\n  let url = new URL(`${planEndpoint}${id}`, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'PUT',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readPlan = ({ params = {} }) => {\n  let url = new URL(plansEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readClustersOptions = ({ params = {} }) => {\n  let url = new URL(clustersOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readOrgOptions = ({ params = {} }) => {\n  let url = new URL(orgOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readROIOptions = ({ params = {} }) => {\n  let url = new URL(ROITemplatesOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n\nexport const readPlanOptions = () => {\n  let url = new URL(planOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'GET',\n  }).then(handleResponse);\n};\n\n// v0 endpoints used in Notifications.js\nexport const readClusters = () => {\n  return authenticatedFetch(clustersEndpoint).then(handleResponse);\n};\n\nexport const readNotifications = ({ params = {} }) => {\n  let url = new URL(notificationsEndpoint, window.location.origin);\n  Object.keys(params).forEach((key) =>\n    url.searchParams.append(key, params[key])\n  );\n  return authenticatedFetch(url).then(handleResponse);\n};\n\nexport const readJobExplorerOptions = ({ params = {} }) => {\n  let url = new URL(jobExplorerOptionsEndpoint, window.location.origin);\n  return authenticatedFetch(url, {\n    method: 'POST',\n    body: JSON.stringify(params),\n  }).then(handleResponse);\n};\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\n\nconst initializeChart = (Chart) => {\n  const BaseChart = (props) => {\n    const { id, margin } = props;\n\n    const getWidth = () => {\n      let width;\n      width =\n        parseInt(d3.select('#' + id).style('width')) -\n          margin.left -\n          margin.right || 700;\n      return width;\n    };\n\n    const getHeight = () => {\n      let height;\n      height =\n        parseInt(d3.select('#' + id).style('height')) -\n          margin.top -\n          margin.bottom || 450;\n      return height;\n    };\n\n    let history = useHistory();\n\n    return (\n      <Chart\n        {...props}\n        getWidth={getWidth}\n        getHeight={getHeight}\n        history={history}\n      />\n    );\n  };\n\n  BaseChart.propTypes = {\n    id: PropTypes.string,\n    margin: PropTypes.object,\n  };\n\n  return BaseChart;\n};\n\ninitializeChart.propTypes = {\n  Chart: PropTypes.element,\n};\n\nexport default initializeChart;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Modal, Title } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n  InfoCircleIcon,\n  TimesCircleIcon,\n} from '@patternfly/react-icons';\nimport styled from 'styled-components';\n\nconst Header = styled.div`\n  display: flex;\n  svg {\n    margin-right: 16px;\n  }\n`;\n\nconst AlertModal = ({\n  isOpen,\n  title,\n  label = 'Alert modal',\n  variant = 'warning',\n  children,\n  ...props\n}) => {\n  const variantIcons = {\n    danger: (\n      <ExclamationCircleIcon\n        size=\"lg\"\n        css=\"color: var(--pf-global--danger-color--100)\"\n      />\n    ),\n    error: (\n      <TimesCircleIcon\n        size=\"lg\"\n        css=\"color: var(--pf-global--danger-color--100)\"\n      />\n    ),\n    info: (\n      <InfoCircleIcon\n        size=\"lg\"\n        css=\"color: var(--pf-global--info-color--100)\"\n      />\n    ),\n    success: (\n      <CheckCircleIcon\n        size=\"lg\"\n        css=\"color: var(--pf-global--success-color--100)\"\n      />\n    ),\n    warning: (\n      <ExclamationTriangleIcon\n        size=\"lg\"\n        css=\"color: var(--pf-global--warning-color--100)\"\n      />\n    ),\n  };\n\n  const customHeader = (\n    <Header>\n      {variant ? variantIcons[variant] : null}\n      <Title id=\"alert-modal-header-label\" size=\"2xl\" headingLevel=\"h2\">\n        {title}\n      </Title>\n    </Header>\n  );\n\n  return (\n    <Modal\n      header={customHeader}\n      aria-label={label}\n      aria-labelledby=\"alert-modal-header-label\"\n      isOpen={!!isOpen}\n      variant=\"small\"\n      title={title}\n      {...props}\n    >\n      {children}\n    </Modal>\n  );\n};\n\nAlertModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  label: PropTypes.string,\n  variant: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default AlertModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport { global_danger_color_200 as globalDangerColor200 } from '@patternfly/react-tokens';\n\nconst ApiErrorState = ({ message }) => (\n  <EmptyState variant={EmptyStateVariant.small}>\n    <EmptyStateIcon\n      icon={ExclamationCircleIcon}\n      color={globalDangerColor200.value}\n    />\n    <Title headingLevel=\"h2\" size=\"lg\">\n      Error\n    </Title>\n    <EmptyStateBody>{message}</EmptyStateBody>\n  </EmptyState>\n);\n\nApiErrorState.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default ApiErrorState;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  BreadcrumbHeading,\n} from '@patternfly/react-core';\n\nimport getBaseName from '../Utilities/getBaseName';\n\nconst Breadcrumbs = ({ items = [], current = null }) => {\n  return (\n    <Breadcrumb>\n      {items.map(({ title, navigate }) => {\n        const basePathNavigate = getBaseName() + navigate;\n        return (\n          <BreadcrumbItem key={title} to={basePathNavigate}>\n            {title}\n          </BreadcrumbItem>\n        );\n      })}\n      {current && <BreadcrumbHeading>{current}</BreadcrumbHeading>}\n    </Breadcrumb>\n  );\n};\n\nBreadcrumbs.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      navigate: PropTypes.any,\n      title: PropTypes.node,\n    })\n  ),\n  current: PropTypes.node,\n};\n\nexport default Breadcrumbs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { WrenchIcon } from '@patternfly/react-icons';\n\nconst DefaultEmptyState = ({ preflightError: error }) => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={WrenchIcon} />\n    {error.status === 404 && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          No data found\n        </Title>\n        <EmptyStateBody>\n          Please visit{' '}\n          <a\n            href=\"https://docs.ansible.com/ansible-tower/latest/html/administration/usability_data_collection.html#automation-analytics\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            here\n          </a>{' '}\n          to learn how to enable Automation Analytics.\n        </EmptyStateBody>\n      </>\n    )}\n    {error.status === 401 && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          Not authorized\n        </Title>\n        <EmptyStateBody>\n          You do not have the correct permissions to view this page.\n        </EmptyStateBody>\n      </>\n    )}\n    {!error.status && (\n      <>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          Something went wrong, please try reloading the page\n        </Title>\n        <Button variant=\"primary\" onClick={() => window.location.reload()}>\n          Reload\n        </Button>\n      </>\n    )}\n  </EmptyState>\n);\n\nDefaultEmptyState.propTypes = {\n  preflightError: PropTypes.object,\n};\n\nexport default DefaultEmptyState;\n","import React, { useState, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Card as PFCard,\n  CardBody as PFCardBody,\n  ExpandableSection as PFExpandable,\n} from '@patternfly/react-core';\nimport getErrorMessage from './getErrorMessage';\n\nconst Card = styled(PFCard)`\n  background-color: var(--pf-global--BackgroundColor--200);\n  overflow-wrap: break-word;\n`;\n\nconst CardBody = styled(PFCardBody)`\n  max-height: 200px;\n  overflow: scroll;\n`;\n\nconst Expandable = styled(PFExpandable)`\n  text-align: left;\n\n  & .pf-c-expandable__toggle {\n    padding-left: 10px;\n    margin-left: 5px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n`;\n\nfunction ErrorDetail({ error }) {\n  const { response } = error;\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  const handleToggle = () => {\n    setIsExpanded(!isExpanded);\n  };\n\n  const renderNetworkError = () => {\n    const message = getErrorMessage(response);\n\n    return (\n      <Fragment>\n        <CardBody>\n          {response?.config?.method.toUpperCase()} {response?.config?.url}{' '}\n          <strong>{response?.status}</strong>\n        </CardBody>\n        <CardBody>\n          {Array.isArray(message) ? (\n            <ul>\n              {message.map((m) =>\n                typeof m === 'string' ? <li key={m}>{m}</li> : null\n              )}\n            </ul>\n          ) : (\n            message\n          )}\n        </CardBody>\n      </Fragment>\n    );\n  };\n\n  const renderStack = () => {\n    return <CardBody>{error.stack}</CardBody>;\n  };\n\n  return (\n    <Expandable\n      toggleText={'Details'}\n      onToggle={handleToggle}\n      isExpanded={isExpanded}\n    >\n      <Card>\n        {Object.prototype.hasOwnProperty.call(error, 'response')\n          ? renderNetworkError()\n          : renderStack()}\n      </Card>\n    </Expandable>\n  );\n}\n\nErrorDetail.propTypes = {\n  error: PropTypes.instanceOf(Error).isRequired,\n};\n\nexport default ErrorDetail;\n","export default function getErrorMessage(response) {\n  if (!response?.data) {\n    return null;\n  }\n  if (typeof response.data === 'string') {\n    return response.data;\n  }\n  if (response.data.detail) {\n    return response.data.detail;\n  }\n  return Object.values(response.data).reduce(\n    (acc, currentValue) => acc.concat(currentValue),\n    []\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ClockIcon,\n  SyncAltIcon,\n  ExclamationTriangleIcon,\n} from '@patternfly/react-icons';\n\nconst JobStatus = ({ status }) => {\n  const capitalized = (str) => str.charAt(0).toUpperCase() + str.slice(1);\n\n  const getColor = () => {\n    switch (status) {\n      case 'successful':\n        return 'green';\n      case 'failed':\n      case 'error':\n        return 'red';\n      case 'running':\n      case 'pending':\n        return 'blue';\n      case 'canceled':\n        return 'orange';\n      // case new, waiting\n      default:\n        return 'grey';\n    }\n  };\n\n  const getIcon = () => {\n    switch (status) {\n      case 'successful':\n        return <CheckCircleIcon />;\n      case 'failed':\n      case 'error':\n        return <ExclamationCircleIcon />;\n      case 'running':\n        return <SyncAltIcon />;\n      case 'canceled':\n        return <ExclamationTriangleIcon />;\n      // case new, waiting, pending\n      default:\n        return <ClockIcon />;\n    }\n  };\n\n  return (\n    <Label variant=\"outline\" color={getColor()} icon={getIcon()}>\n      {capitalized(status)}\n    </Label>\n  );\n};\n\nJobStatus.propTypes = {\n  status: PropTypes.oneOf([\n    'successful',\n    'failed',\n    'error',\n    'running',\n    'new',\n    'waiting',\n    'pending',\n    'canceled',\n  ]),\n};\n\nexport default JobStatus;\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst DefaultLoadingState = () => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={CubesIcon} />\n    <Title headingLevel=\"h5\" size=\"lg\">\n      Loading...\n    </Title>\n    <EmptyStateBody>Please wait.</EmptyStateBody>\n  </EmptyState>\n);\n\nexport default DefaultLoadingState;\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n} from '@patternfly/react-core';\nimport { CubesIcon } from '@patternfly/react-icons';\n\nconst NoData = () => (\n  <EmptyState variant={EmptyStateVariant.full}>\n    <EmptyStateIcon icon={CubesIcon} />\n    <Title headingLevel=\"h5\" size=\"lg\">\n      No Data\n    </Title>\n  </EmptyState>\n);\n\nexport default NoData;\n","import React from 'react';\nimport {\n  Title,\n  EmptyState,\n  EmptyStateVariant,\n  EmptyStateIcon,\n  EmptyStateBody,\n} from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons';\n\nconst NoResults = () => {\n  return (\n    <EmptyState variant={EmptyStateVariant.full}>\n      <EmptyStateIcon icon={SearchIcon} />\n      <Title size=\"lg\" headingLevel=\"h4\">\n        No results found\n      </Title>\n      <EmptyStateBody>\n        No results match the filter criteria. Remove all filters or clear all\n        filters to show results.\n      </EmptyStateBody>\n    </EmptyState>\n  );\n};\n\nexport default NoResults;\n","export const optionsForCategories = {\n  status: {\n    type: 'select',\n    isSingle: false,\n    name: 'Status',\n    placeholder: 'Filter by job status',\n    hasChips: true,\n  },\n  quick_date_range: {\n    type: 'select',\n    isSingle: true,\n    name: 'Date',\n    placeholder: 'Filter by date',\n    hasChips: false,\n  },\n  start_date: {\n    type: 'date',\n    name: 'Start date',\n    hasChips: false,\n  },\n  end_date: {\n    type: 'date',\n    name: 'End date',\n    hasChips: false,\n  },\n  job_type: {\n    type: 'select',\n    isSingle: false,\n    name: 'Job',\n    placeholder: 'Filter by job type',\n    hasChips: true,\n  },\n  org_id: {\n    type: 'select',\n    isSingle: false,\n    name: 'Organization',\n    placeholder: 'Filter by organization',\n    hasChips: true,\n  },\n  cluster_id: {\n    type: 'select',\n    isSingle: false,\n    name: 'Cluster',\n    placeholder: 'Filter by cluster',\n    hasChips: true,\n  },\n  template_id: {\n    type: 'select',\n    isSingle: false,\n    name: 'Template',\n    placeholder: 'Filter by template',\n    hasChips: true,\n  },\n  sort_options: {\n    type: 'select',\n    isSingle: true,\n    name: 'Sort by',\n    placeholder: 'Sort by attribute',\n    hasChips: false,\n  },\n  automation_status: {\n    type: 'select',\n    isSingle: false,\n    name: 'Automation status',\n    placeholder: 'Filter by automation status',\n    hasChips: true,\n  },\n  frequency_period: {\n    type: 'select',\n    isSingle: false,\n    name: 'Frequency',\n    placeholder: 'Filter by frequency',\n    hasChips: true,\n  },\n  category: {\n    type: 'select',\n    isSingle: false,\n    name: 'Category',\n    placeholder: 'Filter by category',\n    hasChips: true,\n  },\n  inventory_id: {\n    type: 'select',\n    isSingle: false,\n    name: 'Inventory',\n    placeholder: 'Filter by inventory',\n    hasChips: true,\n  },\n  name: {\n    type: 'text',\n    name: 'Search by name',\n    hasChips: true,\n  },\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarItem, Select, SelectOption } from '@patternfly/react-core';\n\nconst CategoryDropdown = ({\n  selected,\n  setSelected = () => {},\n  categories = [],\n}) => {\n  const [isExpanded, setIsExpanded] = useState(false);\n\n  return (\n    <ToolbarItem>\n      <Select\n        isOpen={isExpanded}\n        variant={'single'}\n        aria-label={'Categories'}\n        onToggle={() => setIsExpanded(!isExpanded)}\n        onSelect={(_event, selection) => {\n          setSelected(selection);\n          setIsExpanded(false);\n        }}\n        selections={selected}\n        placeholderText={'Filter by'}\n      >\n        {categories.map(({ key, name }) => (\n          <SelectOption key={key} value={key}>\n            {name}\n          </SelectOption>\n        ))}\n      </Select>\n    </ToolbarItem>\n  );\n};\n\nCategoryDropdown.propTypes = {\n  categories: PropTypes.array,\n  selected: PropTypes.string,\n  setSelected: PropTypes.func,\n};\n\nexport default CategoryDropdown;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ToolbarFilter,\n  Select as PFSelect,\n  SelectOption,\n  SelectVariant,\n} from '@patternfly/react-core';\n\nimport { handleCheckboxChips, handleSingleChips } from './helpers';\nimport { optionsForCategories } from '../../constants';\nimport styled from 'styled-components';\n\nconst OptionSpan = styled('span')`\n  display: block;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n  max-width: 300px;\n`;\n\nconst renderValues = (values) =>\n  values &&\n  values.map(({ key, value, description }) => (\n    <SelectOption key={key} value={key} description={description}>\n      <OptionSpan>{value}</OptionSpan>\n    </SelectOption>\n  ));\n\nconst Select = ({\n  categoryKey,\n  value,\n  selectOptions,\n  isVisible = true,\n  setValue,\n}) => {\n  const [expanded, setExpanded] = useState(false);\n  const options = optionsForCategories[categoryKey];\n\n  const onDelete = (_, valueToDelete) => {\n    const single = optionsForCategories[categoryKey].isSingle;\n\n    if (single) {\n      setValue(null);\n    } else {\n      const keyToDelete = selectOptions.find(\n        ({ value }) => value === valueToDelete\n      ).key;\n      const filteredArr = value.filter((value) => value !== keyToDelete);\n      setValue(filteredArr);\n    }\n  };\n\n  const onFilter = (_, textInput) => {\n    if (textInput === '') {\n      return renderValues(selectOptions);\n    } else {\n      return renderValues(\n        selectOptions.filter(({ value }) =>\n          value.toLowerCase().includes(textInput.toLowerCase())\n        )\n      );\n    }\n  };\n\n  const handleChips = () => {\n    if (options.isSingle) {\n      return handleSingleChips(value, selectOptions);\n    } else {\n      return handleCheckboxChips(value, selectOptions);\n    }\n  };\n\n  const onSelect = (_, selection) => {\n    if (options.isSingle) {\n      setValue(selection);\n      setExpanded(false);\n    } else {\n      setValue(\n        !value.includes(selection)\n          ? [...value, selection]\n          : value.filter((value) => value !== selection)\n      );\n    }\n  };\n\n  return (\n    <ToolbarFilter\n      data-cy={categoryKey}\n      key={categoryKey}\n      showToolbarItem={isVisible}\n      chips={options.hasChips ? handleChips() : []}\n      categoryName={options.name}\n      deleteChip={options.hasChips ? onDelete : null}\n    >\n      <PFSelect\n        variant={\n          options.isSingle ? SelectVariant.single : SelectVariant.checkbox\n        }\n        aria-label={options.name}\n        onToggle={() => setExpanded(!expanded)}\n        onSelect={onSelect}\n        selections={value}\n        isOpen={expanded}\n        hasInlineFilter\n        placeholderText={options.placeholder}\n        onFilter={onFilter}\n        maxHeight={'1000%'}\n      >\n        {renderValues(selectOptions)}\n      </PFSelect>\n    </ToolbarFilter>\n  );\n};\n\nSelect.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]).isRequired,\n  selectOptions: PropTypes.array,\n  isVisible: PropTypes.bool,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default Select;\n","/**\n * Get comparator values if their key is in the item list\n */\nexport const handleCheckboxChips = (item, comparator) => {\n  if (item && comparator) {\n    return item.reduce((acc, i) => {\n      Number.isInteger(parseInt(i)) ? (i = parseInt(i)) : i;\n\n      comparator.forEach((cmpItem) => {\n        if (cmpItem.key === i) {\n          acc.push(cmpItem.value);\n        }\n      });\n\n      return acc;\n    }, []);\n  }\n\n  return [];\n};\n\n/**\n * Convert a list of objects to a list of the last value if defined\n */\nexport const handleSingleChips = (item, comparator) => {\n  if (item && typeof item === 'string' && comparator) {\n    let val;\n    comparator.forEach((i) => {\n      if (i.key === item) {\n        val = i.value;\n      }\n    });\n\n    if (val !== undefined) {\n      return [val];\n    }\n  }\n\n  return [];\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputGroup, TextInput } from '@patternfly/react-core';\nimport { optionsForCategories } from '../../constants';\n\nconst Date = ({ categoryKey, value = '', setValue = () => {} }) => {\n  const options = optionsForCategories[categoryKey];\n\n  return (\n    <InputGroup>\n      <TextInput\n        type=\"date\"\n        aria-label={options.name}\n        value={value}\n        onChange={setValue}\n      />\n    </InputGroup>\n  );\n};\n\nDate.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default Date;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ToolbarFilter,\n  TextInput,\n  InputGroup,\n  Button,\n} from '@patternfly/react-core';\n\nimport { SearchIcon } from '@patternfly/react-icons';\nimport { optionsForCategories } from '../../constants';\n\nconst Text = ({ categoryKey, isVisible = true, value = '', setValue }) => {\n  const [searchVal, setSearchVal] = useState(value);\n  const options = optionsForCategories[categoryKey];\n\n  const onDelete = () => {\n    setValue('');\n  };\n\n  const handleChips = () => {\n    return value ? [value] : [];\n  };\n\n  useEffect(() => {\n    setSearchVal(value);\n  }, [value]);\n\n  return (\n    <ToolbarFilter\n      data-cy={categoryKey}\n      key={categoryKey}\n      showToolbarItem={isVisible}\n      chips={options.hasChips ? handleChips() : []}\n      categoryName={options.name}\n      deleteChip={options.hasChips ? onDelete : null}\n    >\n      <InputGroup>\n        <TextInput\n          type=\"search\"\n          aria-label={options.name}\n          value={searchVal}\n          onChange={setSearchVal}\n        />\n        <Button\n          variant=\"control\"\n          aria-label={`Search button for ${options.name}`}\n          onClick={() => {\n            setValue(searchVal);\n          }}\n        >\n          <SearchIcon />\n        </Button>\n      </InputGroup>\n    </ToolbarFilter>\n  );\n};\n\nText.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.any,\n  isVisible: PropTypes.bool,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default Text;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Select from './Select';\nimport Date from './Date';\nimport Text from './Text';\nimport { optionsForCategories } from '../../constants';\n\nconst components = {\n  select: Select,\n  date: Date,\n  text: Text,\n};\n\nconst ToolbarInput = ({\n  categoryKey,\n  value,\n  selectOptions,\n  isVisible = true,\n  setValue,\n}) => {\n  const options = optionsForCategories[categoryKey];\n  const SelectedInput = components[options.type];\n\n  const defaultValue = () => {\n    if (value) {\n      return value;\n    } else if (options.type !== 'select') {\n      return '';\n    } else if (options.isSingle) {\n      return '';\n    } else {\n      return [];\n    }\n  };\n\n  return (\n    <SelectedInput\n      categoryKey={categoryKey}\n      value={defaultValue()}\n      selectOptions={selectOptions}\n      isVisible={isVisible}\n      setValue={setValue}\n    />\n  );\n};\n\nToolbarInput.propTypes = {\n  categoryKey: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([\n    PropTypes.number,\n    PropTypes.string,\n    PropTypes.arrayOf(\n      PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n    ),\n  ]),\n  selectOptions: PropTypes.array,\n  isVisible: PropTypes.bool,\n  setValue: PropTypes.func.isRequired,\n};\n\nexport default ToolbarInput;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarGroup } from '@patternfly/react-core';\n\nimport CategoryDropdown from './CategoryDropdown';\nimport ToolbarInput from './ToolbarInput/';\nimport { optionsForCategories } from '../constants';\n\nconst FilterCategoriesGroup = ({ filterCategories, filters, setFilters }) => {\n  const [currentCategory, setCurrentCategory] = useState(\n    Object.keys(filterCategories)[0]\n  );\n\n  return (\n    <ToolbarGroup variant=\"filter-group\">\n      <CategoryDropdown\n        selected={currentCategory}\n        setSelected={setCurrentCategory}\n        categories={Object.keys(filterCategories).map((el) => ({\n          key: el,\n          name: optionsForCategories[el].name,\n        }))}\n      />\n      {Object.keys(filterCategories).map((key) => (\n        <ToolbarInput\n          key={key}\n          categoryKey={key}\n          value={filters[key]}\n          selectOptions={filterCategories[key]}\n          isVisible={currentCategory === key}\n          setValue={(value) => setFilters(key, value)}\n        />\n      ))}\n    </ToolbarGroup>\n  );\n};\n\nFilterCategoriesGroup.propTypes = {\n  filterCategories: PropTypes.object.isRequired,\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n};\n\nexport default FilterCategoriesGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarGroup } from '@patternfly/react-core';\n\nimport ToolbarInput from './ToolbarInput/';\n\nconst QuickDateGroup = ({ filters, setFilters, values }) => (\n  <ToolbarGroup variant=\"filter-group\">\n    <ToolbarInput\n      categoryKey=\"quick_date_range\"\n      value={filters.quick_date_range}\n      selectOptions={values}\n      setValue={(value) => setFilters('quick_date_range', value)}\n    />\n    {filters.quick_date_range && filters.quick_date_range.includes('custom') && (\n      <>\n        <ToolbarInput\n          categoryKey=\"start_date\"\n          value={filters.start_date}\n          setValue={(e) => setFilters('start_date', e)}\n        />\n        <ToolbarInput\n          categoryKey=\"end_date\"\n          value={filters.end_date}\n          setValue={(e) => setFilters('end_date', e)}\n        />\n      </>\n    )}\n  </ToolbarGroup>\n);\n\nQuickDateGroup.propTypes = {\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  values: PropTypes.array.isRequired,\n};\n\nexport default QuickDateGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ToolbarGroup, Button } from '@patternfly/react-core';\nimport { SortAmountDownIcon, SortAmountUpIcon } from '@patternfly/react-icons';\n\nimport ToolbarInput from './ToolbarInput';\n\nconst SortByGroup = ({ filters, setFilters, sort_options }) => (\n  <ToolbarGroup variant=\"filter-group\">\n    <ToolbarInput\n      categoryKey=\"sort_options\"\n      value={filters.sort_options}\n      selectOptions={sort_options}\n      setValue={(value) => setFilters('sort_options', value)}\n    />\n    <Button\n      variant=\"control\"\n      onClick={() =>\n        setFilters('sort_order', filters.sort_order === 'asc' ? 'desc' : 'asc')\n      }\n    >\n      {filters.sort_order === 'asc' && <SortAmountUpIcon />}\n      {filters.sort_order === 'desc' && <SortAmountDownIcon />}\n    </Button>\n  </ToolbarGroup>\n);\n\nSortByGroup.propTypes = {\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  sort_options: PropTypes.array.isRequired,\n};\n\nexport default SortByGroup;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Tooltip, Switch } from '@patternfly/react-core';\nimport {\n  Card,\n  CardTitle,\n  CardBody,\n  CardActions,\n  CardHeader,\n} from '@patternfly/react-core';\nimport { QuestionCircleIcon, TimesIcon } from '@patternfly/react-icons';\n\n/* TODO: For future work: make settings more modular for different pages */\nconst SettingsPanel = ({\n  filters,\n  setFilters,\n  settingsExpanded,\n  setSettingsExpanded,\n}) => (\n  <Card isFlat style={{ backgroundColor: '#EEEEEE' }}>\n    <CardHeader>\n      <CardActions>\n        <Button\n          variant=\"plain\"\n          onClick={() => setSettingsExpanded(!settingsExpanded)}\n        >\n          <TimesIcon />\n        </Button>\n      </CardActions>\n      <CardTitle>Settings</CardTitle>\n    </CardHeader>\n    <CardBody>\n      <Switch\n        id=\"showRootWorkflowJobs\"\n        label=\"Ignore nested workflows and jobs\"\n        labelOff=\"Ignore nested workflows and jobs\"\n        isChecked={filters.only_root_workflows_and_standalone_jobs}\n        onChange={(val) => {\n          setFilters('only_root_workflows_and_standalone_jobs', val);\n        }}\n      />\n      <Tooltip\n        position={'top'}\n        content={\n          <div>\n            {' '}\n            If enabled, nested workflows and jobs will not be included in the\n            overall totals. Enable this option to filter out duplicate entries.\n          </div>\n        }\n      >\n        <QuestionCircleIcon />\n      </Tooltip>\n    </CardBody>\n  </Card>\n);\n\nSettingsPanel.propTypes = {\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  settingsExpanded: PropTypes.bool.isRequired,\n  setSettingsExpanded: PropTypes.func.isRequired,\n};\n\nexport default SettingsPanel;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Toolbar,\n  ToolbarContent,\n  ToolbarGroup,\n  Button,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport { FilterIcon, CogIcon } from '@patternfly/react-icons';\n\nimport { optionsForCategories } from './constants';\nimport {\n  FilterCategoriesGroup,\n  QuickDateGroup,\n  SortByGroup,\n  SettingsPanel,\n} from './Groups/';\n\nconst FilterableToolbar = ({\n  categories,\n  filters,\n  setFilters,\n  pagination = null,\n  hasSettings = false,\n  additionalControls = [],\n  hideQuickDateRange = false,\n  hideSortOptions = false,\n}) => {\n  const [settingsExpanded, setSettingsExpanded] = useState(false);\n  const { quick_date_range, sort_options, ...restCategories } = categories;\n\n  // Filter out elements which are not in the option object.\n  const filterCategories = Object.keys(restCategories)\n    .filter((key) => Object.keys(optionsForCategories).includes(key))\n    .reduce((obj, key) => {\n      obj[key] = restCategories[key];\n      return obj;\n    }, {});\n\n  return (\n    <>\n      <Toolbar\n        id=\"filterable-toolbar-with-chip-groups\"\n        clearAllFilters={() => {\n          setFilters(null, null);\n        }}\n        collapseListedFiltersBreakpoint=\"xl\"\n      >\n        <ToolbarContent>\n          <Button variant=\"control\">\n            <FilterIcon />\n          </Button>\n          {Object.keys(filterCategories).length > 0 && (\n            <FilterCategoriesGroup\n              filterCategories={filterCategories}\n              filters={filters}\n              setFilters={setFilters}\n            />\n          )}\n          {!hideQuickDateRange && quick_date_range && (\n            <QuickDateGroup\n              filters={filters}\n              setFilters={setFilters}\n              values={quick_date_range}\n            />\n          )}\n          {!hideSortOptions && sort_options && (\n            <SortByGroup\n              filters={filters}\n              setFilters={setFilters}\n              sort_options={sort_options}\n            />\n          )}\n          {hasSettings && (\n            <ToolbarItem>\n              <Button\n                variant=\"plain\"\n                onClick={() => setSettingsExpanded(!settingsExpanded)}\n                aria-label=\"settings\"\n                isActive={settingsExpanded}\n              >\n                <CogIcon />\n              </Button>\n            </ToolbarItem>\n          )}\n          {additionalControls.length > 0 && (\n            <ToolbarGroup>\n              {additionalControls.map((control, idx) => (\n                <ToolbarItem key={idx}>{control}</ToolbarItem>\n              ))}\n            </ToolbarGroup>\n          )}\n          {pagination && (\n            <ToolbarItem\n              variant=\"pagination\"\n              visibility={{ default: 'hidden', lg: 'visible' }}\n            >\n              {pagination}\n            </ToolbarItem>\n          )}\n        </ToolbarContent>\n        {settingsExpanded && (\n          <SettingsPanel\n            filters={filters}\n            setFilters={setFilters}\n            settingsExpanded={settingsExpanded}\n            setSettingsExpanded={setSettingsExpanded}\n          />\n        )}\n      </Toolbar>\n    </>\n  );\n};\n\nFilterableToolbar.propTypes = {\n  categories: PropTypes.object.isRequired,\n  filters: PropTypes.object.isRequired,\n  setFilters: PropTypes.func.isRequired,\n  pagination: PropTypes.object,\n  hasSettings: PropTypes.bool,\n  additionalControls: PropTypes.array,\n  hideSortOptions: PropTypes.bool,\n  hideQuickDateRange: PropTypes.bool,\n};\n\nexport default FilterableToolbar;\n","import Toolbar from './Toolbar';\nexport default Toolbar;\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\n\nclass Tooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  formatDollars(amount) {\n    return parseFloat(amount)\n      .toFixed(2)\n      .toString()\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip-base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, 0) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', 92)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.name = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', -2)\n      .text('Template name');\n    this.savings = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 52)\n      .attr('font-size', 12)\n      .attr('font-weight', 'bold')\n      .attr('fill', 'white')\n      .text('Total savings $0');\n    this.manualCost = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', 16)\n      .text('Manual cost $0');\n    this.automationCost = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 20)\n      .attr('y', 34)\n      .text('Automation cost $0');\n  }\n\n  handleMouseOver = (d) => {\n    let name;\n    let savings;\n    let manualCost;\n    let automationCost;\n    const scrollLeftOffset = d3.select('#d3-roi-chart-root').node().scrollLeft;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10 +\n      scrollLeftOffset;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      30;\n    if (!d) {\n      return;\n    } else {\n      savings = this.formatDollars(d.delta);\n      name = d.name;\n      manualCost = this.formatDollars(d.manualCost);\n      automationCost = this.formatDollars(d.automatedCost);\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n    this.name.text('' + name);\n    this.savings.text('Total savings $' + savings);\n    this.manualCost.text('Manual Cost $' + manualCost);\n    this.automationCost.text('Automation Cost $' + automationCost);\n    this.nameWidth = this.name.node().getComputedTextLength();\n    this.savingsWidth = this.savings.node().getComputedTextLength();\n    this.manualCostWidth = this.manualCost.node().getComputedTextLength();\n    this.automationCostWidth = this.automationCost\n      .node()\n      .getComputedTextLength();\n    this.widestTextElem = d3.max([\n      this.nameWidth,\n      this.savingsWidth,\n      this.automationCostWidth,\n      this.manualCostWidth,\n    ]);\n\n    const maxTextPerc = (this.widestTextElem / this.boxWidth) * 100;\n    const threshold = 85;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 15) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.name.attr('x', -(toolTipWidth - 7));\n      this.savings.attr('x', -(toolTipWidth - 7));\n      this.manualCost.attr('x', -(toolTipWidth - 7));\n      this.automationCost.attr('x', -(toolTipWidth - 7));\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 15) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.name.attr('x', 20);\n      this.savings.attr('x', 20);\n      this.manualCost.attr('x', 20);\n      this.automationCost.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nclass TopTemplatesSavings extends Component {\n  constructor(props) {\n    super(props);\n    this.init = this.init.bind(this);\n    this.draw = this.draw.bind(this);\n    this.resize = this.resize.bind(this);\n    this.state = {\n      timeout: null,\n    };\n  }\n\n  // Methods\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  init() {\n    this.draw();\n  }\n\n  draw() {\n    // Use PF chart color\n    const color = '#0066CC'; //blue\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const { data } = this.props;\n    let width;\n    // adjust chart width to support larger datasets\n    if (data.length >= 15) {\n      const containerWidth = d3.select('.automation-wrapper').node();\n      width =\n        containerWidth.getBoundingClientRect().width -\n        this.props.margin.left -\n        this.props.margin.right;\n    } else {\n      width = this.props.getWidth();\n    }\n\n    const height = this.props.getHeight();\n    const x = d3.scaleBand().rangeRound([0, width]).padding(0.45);\n    const y = d3.scaleLinear().range([height, 0]);\n    // format our X Axis ticks\n    let ticks;\n    ticks = data.map((d) => d.name);\n    const formatYAxisValue = d3.format('.2s');\n    const xAxis = d3.axisBottom(x).tickValues(ticks);\n\n    const yAxis = d3\n      .axisLeft(y)\n      .ticks(8)\n      .tickFormat((d) => formatYAxisValue(d).replace('G', 'B'))\n      .tickSize(-width, 0, 0);\n\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.bottom + this.props.margin.top)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n\n    const taskNames = data.map((d) => d.name);\n    const tooltip = new Tooltip({\n      svg: '#' + this.props.id,\n    });\n    x.domain(taskNames);\n    y.domain([0, d3.max(data, (d) => d.delta * 1.15) || 8]);\n\n    // add y axis\n    svg\n      .append('g')\n      .attr('class', 'y axis')\n      .call(yAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7')\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 6)\n      .attr('dy', '.71em')\n      .style('text-anchor', 'end')\n      .style('font-weight', 'bold')\n      .text('Value');\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Savings per template ($)');\n\n    // add x axis\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n      .selectAll('text')\n      .style('text-anchor', 'start')\n      .attr('dx', '0.75em')\n      .attr('dy', -x.bandwidth() / 1.45 - 8)\n      .attr('transform', 'rotate(-90)');\n\n    svg.selectAll('.x-axis line').attr('stroke', 'transparent');\n\n    svg\n      .selectAll('.bar')\n      .data(data)\n      .enter()\n      .append('rect')\n      .attr('x', (d) => x(d.name))\n      .attr('width', x.bandwidth())\n      .attr('y', (d) => y(d.delta))\n      .style('fill', () => color)\n      .attr('height', (d) => height - y(d.delta))\n      .on('mouseover', function (d) {\n        d3.select(this).style('fill', d3.rgb(color).darker(1));\n        tooltip.handleMouseOver(d);\n      })\n      .on('mousemove', tooltip.handleMouseOver)\n      .on('mouseout', function () {\n        d3.select(this).style('fill', color);\n        tooltip.handleMouseOut();\n      });\n  }\n\n  componentDidMount() {\n    this.init();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate() {\n    this.init();\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nTopTemplatesSavings.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n};\n\nexport default initializeChart(TopTemplatesSavings);\n","import styled from 'styled-components';\nimport { CardTitle } from '@patternfly/react-core';\n\nexport const BorderedCardTitle = styled(CardTitle)`\n  border-bottom: 1px solid #d7d7d7;\n  margin-bottom: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle, Title } from '@patternfly/react-core';\n\nconst floatToStringWithCommas = (total) =>\n  total\n    .toFixed(2)\n    .toString()\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n\nconst TotalSavings = ({ totalSavings = 0 }) => (\n  <Card style={{ borderTop: '3px solid #2B9AF3' }}>\n    <CardTitle style={{ paddingBottom: '0' }}>Total savings</CardTitle>\n    <CardBody>\n      <Title\n        headingLevel=\"h3\"\n        size=\"4xl\"\n        style={{ color: 'var(--pf-global--success-color--200)' }}\n      >\n        {floatToStringWithCommas(totalSavings)}\n      </Title>\n    </CardBody>\n  </Card>\n);\n\nTotalSavings.propTypes = {\n  totalSavings: PropTypes.number,\n};\n\nexport default TotalSavings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Card,\n  CardBody,\n  InputGroup,\n  InputGroupText,\n  TextInput,\n} from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst validFloat = (value) => {\n  const floatValue = parseFloat(value);\n  return floatValue && floatValue >= 0 ? value : '';\n};\n\nconst CalculationCost = ({\n  costManual = '0',\n  setCostManual = () => {},\n  costAutomation = '0',\n  setCostAutomation = () => {},\n}) => (\n  <Card>\n    <CardTitle>Calculate your automation</CardTitle>\n    <CardBody>\n      <InputAndText>\n        <p>Manual cost of automation</p>\n        <em style={{ color: 'var(--pf-global--Color--dark-200)' }}>\n          (e.g. average salary of mid-level Software Engineer)\n        </em>\n        <InputGroup style={{ width: '50%' }}>\n          <InputGroupText>\n            <DollarSignIcon />\n          </InputGroupText>\n          <TextInput\n            id=\"manual-cost\"\n            type=\"number\"\n            aria-label=\"manual-cost\"\n            value={costManual}\n            onChange={(e) => setCostManual(validFloat(e))}\n          />\n          <InputGroupText>/hr</InputGroupText>\n        </InputGroup>\n      </InputAndText>\n      <InputAndText style={{ paddingTop: '10px' }}>\n        <p>Automated process cost</p>\n        <InputGroup style={{ width: '50%' }}>\n          <InputGroupText>\n            <DollarSignIcon />\n          </InputGroupText>\n          <TextInput\n            id=\"automation-cost\"\n            type=\"number\"\n            aria-label=\"automation-cost\"\n            value={costAutomation}\n            onChange={(e) => setCostAutomation(validFloat(e))}\n          />\n          <InputGroupText>/hr</InputGroupText>\n        </InputGroup>\n      </InputAndText>\n    </CardBody>\n  </Card>\n);\n\nCalculationCost.propTypes = {\n  costManual: PropTypes.string,\n  setCostManual: PropTypes.func,\n  costAutomation: PropTypes.string,\n  setCostAutomation: PropTypes.func,\n};\n\nexport default CalculationCost;\n","import React from 'react';\n\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { BorderedCardTitle as CardTitle } from './helpers';\n\nconst AutomationFormula = () => (\n  <Card style={{ height: '100%' }}>\n    <CardTitle>Automation formula</CardTitle>\n    <CardBody>\n      <p>\n        <b>Manual cost for template x</b> =\n        <em>\n          (time for a manual run on one host in hours * (sum of all hosts across\n          all job runs) ) * cost per hour\n        </em>\n      </p>\n      <p>\n        <b>Automation cost for template x</b> =\n        <em>\n          cost of automation per hour * sum of total elapsed hours for a\n          template\n        </em>\n      </p>\n      <p>\n        <b>Savings</b> =\n        <em>Sum of (manual cost - automation cost) across all templates</em>\n      </p>\n    </CardBody>\n  </Card>\n);\n\nexport default AutomationFormula;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  InputGroup,\n  InputGroupText,\n  TextInput,\n  Tooltip,\n  Popover,\n} from '@patternfly/react-core';\nimport {\n  InfoCircleIcon,\n  ToggleOnIcon,\n  ToggleOffIcon,\n} from '@patternfly/react-icons';\n\nimport {\n  convertSecondsToMins,\n  convertMinsToSeconds,\n  capitalize,\n} from '../../Utilities/helpers';\n\nconst TemplateDetail = styled.div`\n  em {\n    display: block;\n    padding: 5px 0;\n  }\n\n  @media (max-width: 1490px) {\n    display: block;\n\n    em {\n      padding: 10px 0;\n      display: block;\n    }\n  }\n`;\n\nconst TemplateDetailSubTitle = styled.em`\n  color: var(--pf-global--Color--dark-200);\n`;\n\nconst TooltipWrapper = styled.div`\n  p {\n    text-align: left;\n  }\n`;\n\nconst IconGroup = styled.div`\n  & svg {\n    fill: var(--pf-global--Color--dark-200);\n\n    :hover {\n      cursor: pointer;\n    }\n\n    :first-of-type {\n      margin-right: 10px;\n      margin-left: 10px;\n\n      @media (max-width: 1350px) {\n        margin-left: 0;\n      }\n    }\n  }\n`;\n\nconst InputAndText = styled.div`\n  flex: 1;\n`;\n\nconst showSortAttr = (details, sortBy) => {\n  const trimmed = sortBy.split(':')[0];\n  const sortAttribute = Object.keys(details).map((k) =>\n    k === trimmed ? `${details[k]}` : null\n  );\n\n  return (\n    <TemplateDetailSubTitle>\n      {capitalize(trimmed.split('_').join(' '))}: {sortAttribute}\n    </TemplateDetailSubTitle>\n  );\n};\n\nconst QuestionIconTooltip = ({ details }) => (\n  <Popover\n    aria-label=\"template detail popover\"\n    position=\"left\"\n    bodyContent={\n      <TooltipWrapper>\n        {Object.keys(details).map((k, i) => (\n          <p key={i}>\n            <b>{capitalize(k.split('_').join(' '))}</b>: {details[k]}\n          </p>\n        ))}\n      </TooltipWrapper>\n    }\n  >\n    <InfoCircleIcon />\n  </Popover>\n);\n\nQuestionIconTooltip.propTypes = {\n  details: PropTypes.object,\n};\n\nconst TopTemplates = ({\n  data = [],\n  sortBy = '',\n  setDataRunTime = () => {},\n  setEnabled = () => {},\n  redirectToJobExplorer = () => {},\n}) => (\n  <Card style={{ overflow: 'auto', flex: '1 1 0' }} className=\"top-templates\">\n    <CardBody>\n      <p>Enter the time it takes to run the following templates manually.</p>\n      {data.map((d) => (\n        <div key={d.id}>\n          <Tooltip content={'List of jobs for this template for past 30 days'}>\n            <Button\n              style={{ padding: '15px 0 10px' }}\n              component=\"a\"\n              onClick={() => redirectToJobExplorer(d.id)}\n              variant=\"link\"\n            >\n              {d.name}\n            </Button>\n          </Tooltip>\n          <TemplateDetail>\n            <InputAndText key={d.id}>\n              <InputGroup>\n                <TextInput\n                  id={d.id}\n                  type=\"number\"\n                  aria-label=\"time run manually\"\n                  value={convertSecondsToMins(d.avgRunTime)}\n                  onChange={(minutes) =>\n                    setDataRunTime(convertMinsToSeconds(minutes), d.id)\n                  }\n                />\n                <InputGroupText>min</InputGroupText>\n              </InputGroup>\n            </InputAndText>\n            <TemplateDetailSubTitle>\n              x {d.successful_hosts_total} host runs\n            </TemplateDetailSubTitle>\n            {showSortAttr(d, sortBy)}\n            <IconGroup>\n              <QuestionIconTooltip details={d} />\n              {!d.enabled && (\n                <ToggleOffIcon onClick={() => setEnabled(d.id)(true)} />\n              )}\n              {d.enabled && (\n                <ToggleOnIcon onClick={() => setEnabled(d.id)(false)} />\n              )}\n            </IconGroup>\n          </TemplateDetail>\n          <p style={{ color: '#486B00' }}>${d.delta.toFixed(2)}</p>\n        </div>\n      ))}\n    </CardBody>\n  </Card>\n);\n\nTopTemplates.propTypes = {\n  data: PropTypes.array,\n  setDataRunTime: PropTypes.func,\n  redirectToJobExplorer: PropTypes.func,\n  deselectedIds: PropTypes.array,\n  setDeselectedIds: PropTypes.func,\n  setEnabled: PropTypes.func,\n  sortBy: PropTypes.string,\n};\n\nexport default TopTemplates;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\n// Imports from custom components\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\n// Imports from API\nimport { preflightRequest, readROI, readROIOptions } from '../../Api';\n\n// Imports from utilities\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { roi as roiConst } from '../../Utilities/constants';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { calculateDelta, convertSecondsToHours } from '../../Utilities/helpers';\n\n// Chart\nimport TopTemplatesSavings from '../../Charts/ROITopTemplates';\n\n// Local imports\nimport { BorderedCardTitle } from './helpers';\nimport TotalSavings from './TotalSavings';\nimport CalculationCost from './CalculationCost';\nimport AutomationFormula from './AutomationFormula';\nimport TopTemplates from './TopTemplates';\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 5fr 2fr;\n  height: 100%;\n`;\n\nconst WrapperLeft = styled.div`\n  flex: 5;\n  display: flex;\n  flex-direction: column;\n  overflow: auto;\n`;\n\nconst WrapperRight = styled.div`\n  flex: 2;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst mapApi = ({ items = [] }) =>\n  items.map((el) => ({\n    ...el,\n    delta: 0,\n    avgRunTime: 3600,\n    manualCost: 0,\n    automatedCost: 0,\n    enabled: true,\n  }));\n\nconst filterDisabled = (data) => data.filter(({ enabled }) => enabled);\n\nconst updateDeltaCost = (data, costAutomation, costManual) =>\n  data.map((el) => {\n    const manualCost =\n      convertSecondsToHours(el.avgRunTime) *\n      el.successful_hosts_total *\n      parseFloat(costManual);\n    const automatedCost =\n      convertSecondsToHours(el.successful_elapsed_total) *\n      parseFloat(costAutomation);\n    const delta = calculateDelta(automatedCost, manualCost);\n\n    return { ...el, delta, manualCost, automatedCost };\n  });\n\nconst computeTotalSavings = (data) =>\n  data.reduce((sum, curr) => sum + curr.delta, 0);\n\nconst AutomationCalculator = ({ history }) => {\n  const toJobExplorer = useRedirect(history, 'jobExplorer');\n  const [costManual, setCostManual] = useState('50');\n  const [costAutomation, setCostAutomation] = useState('20');\n\n  const [preflight, setPreflight] = useApi(null);\n  const [options, setOptions] = useApi({});\n  const [api, fetchApi, setDataInApi] = useApi([], (data) =>\n    updateDeltaCost(mapApi(data), costAutomation, costManual)\n  );\n\n  const { queryParams, setFromToolbar } = useQueryParams(\n    roiConst.defaultParams\n  );\n\n  /**\n   * Modifies one elements avgRunTime in the unfilteredData\n   * and updates all calculated fields.\n   * Used in top templates.\n   */\n  const setDataRunTime = (seconds, id) => {\n    const updatedData = api.data.map((el) => {\n      if (el.id === id) {\n        el.avgRunTime = seconds;\n        const updatedDelta = updateDeltaCost(\n          [el],\n          costAutomation,\n          costManual\n        )[0];\n        return updatedDelta;\n      } else {\n        return el;\n      }\n    });\n\n    setDataInApi(updatedData);\n  };\n\n  const setEnabled = (id) => (value) => {\n    setDataInApi(\n      api.data.map((el) => (el.id === id ? { ...el, enabled: value } : el))\n    );\n  };\n\n  useEffect(() => {\n    setPreflight(preflightRequest());\n    setOptions(readROIOptions({ params: queryParams }));\n  }, []);\n\n  /**\n   * Recalculates the delta and costs in the data after the cost is changed.\n   */\n  useEffect(() => {\n    setDataInApi(updateDeltaCost(api.data, costAutomation, costManual));\n  }, [costAutomation, costManual]);\n\n  /**\n   * Get data from API depending on the queryParam.\n   */\n  useEffect(() => {\n    fetchApi(readROI({ params: queryParams }));\n  }, [queryParams]);\n\n  /**\n   * Function to redirect to the job explorer page\n   * with the same filters as is used here.\n   */\n  const redirectToJobExplorer = (templateId) => {\n    const initialQueryParams = {\n      quick_date_range: 'last_30_days',\n      template_id: [templateId],\n    };\n    toJobExplorer(initialQueryParams);\n  };\n\n  const renderLeft = () => (\n    <WrapperLeft>\n      <Main style={{ paddingBottom: '0' }}>\n        <Card>\n          <BorderedCardTitle>Automation savings</BorderedCardTitle>\n          <CardBody>\n            {api.isLoading && <LoadingState />}\n            {api.error && <ApiErrorState message={api.error.error} />}\n            {api.isSuccess && api.data.length <= 0 && <NoData />}\n            {api.isSuccess && api.data.length > 0 && (\n              <React.Fragment>\n                <TopTemplatesSavings\n                  margin={{ top: 20, right: 20, bottom: 20, left: 70 }}\n                  id=\"d3-roi-chart-root\"\n                  data={filterDisabled(api.data)}\n                />\n                <p style={{ textAlign: 'center' }}>Templates</p>\n              </React.Fragment>\n            )}\n          </CardBody>\n        </Card>\n      </Main>\n      <Main>\n        <AutomationFormula />\n      </Main>\n    </WrapperLeft>\n  );\n\n  const renderRight = () => (\n    <WrapperRight>\n      <Main style={{ paddingBottom: '0', paddingLeft: '0' }}>\n        <TotalSavings\n          totalSavings={computeTotalSavings(filterDisabled(api.data))}\n        />\n      </Main>\n      <Main\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          flex: '1 1 0',\n          paddingLeft: '0',\n        }}\n      >\n        <CalculationCost\n          costManual={costManual}\n          setCostManual={setCostManual}\n          costAutomation={costAutomation}\n          setCostAutomation={setCostAutomation}\n        />\n        <TopTemplates\n          redirectToJobExplorer={redirectToJobExplorer}\n          data={api.data}\n          setDataRunTime={setDataRunTime}\n          setUnfilteredData={api.data}\n          setEnabled={setEnabled}\n          sortBy={queryParams.sort_by}\n        />\n      </Main>\n    </WrapperRight>\n  );\n\n  if (preflight?.error?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader style={{ flex: '0' }}>\n        <PageHeaderTitle title={'Automation Calculator'} />\n        <FilterableToolbar\n          categories={options.data}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      {preflight.error && (\n        <Main>\n          <EmptyState preflightError={preflight.error} />\n        </Main>\n      )}\n      {preflight.isSuccess && (\n        <React.Fragment>\n          <Wrapper className=\"automation-wrapper\">\n            {renderLeft()}\n            {renderRight()}\n          </Wrapper>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nAutomationCalculator.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default AutomationCalculator;\n","import * as d3 from 'd3';\n\nclass Tooltip {\n  constructor(opts) {\n    this.svg = opts.svg;\n    this.colors = opts.colors;\n    this.draw();\n  }\n\n  draw() {\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 145;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -41)\n      .attr('rx', 2)\n      .attr('height', 110)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.circleSuccess = this.toolTipBase\n      .append('circle')\n      .attr('cx', 26)\n      .attr('cy', 0)\n      .attr('r', 8)\n      .attr('stroke', 'white')\n      .attr('fill', 'white');\n    this.circleFail = this.toolTipBase\n      .append('circle')\n      .attr('cx', 26)\n      .attr('cy', 26)\n      .attr('r', 8)\n      .attr('stroke', 'white')\n      .attr('fill', 'white');\n    this.successText = this.toolTipBase\n      .append('text')\n      .attr('x', 43)\n      .attr('y', 4)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Successful');\n    this.failText = this.toolTipBase\n      .append('text')\n      .attr('x', 43)\n      .attr('y', 28)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Failed');\n    this.successIcon = this.toolTipBase\n      .append('text')\n      .attr('class', 'fas fa-sm')\n      .attr('fill', this.colors(1))\n      .attr('x', 19)\n      .attr('y', 5)\n      .text('\\uf058');\n    this.failedIcon = this.toolTipBase\n      .append('text')\n      .attr('class', 'fas fa-sm')\n      .attr('fill', this.colors(0))\n      .attr('x', 20)\n      .attr('y', 31)\n      .text('\\uf06a');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 137)\n      .attr('y', -21)\n      .attr('font-size', 12)\n      .attr('text-anchor', 'end')\n      .text('No jobs');\n    this.successful = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 122)\n      .attr('y', 4)\n      .text('0');\n    this.failed = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 122)\n      .attr('y', 28)\n      .text('0');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('stroke', 'white')\n      .attr('x', 20)\n      .attr('y', -21)\n      .attr('font-size', 12)\n      .text('Never');\n    this.clickMore = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 20)\n      .attr('y', 55)\n      .attr('font-size', 12)\n      .text('Click for details');\n  }\n\n  handleMouseOver = (d) => {\n    let success = 0;\n    let fail = 0;\n    let total = 0;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    const formatTooltipDate = d3.timeFormat('%m/%d');\n    if (!d) {\n      return;\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n    if (d) {\n      success = d.RAN || 0;\n      fail = d.FAIL || 0;\n      total = d.TOTAL || 0;\n      this.date.text(formatTooltipDate(d.DATE || null));\n    }\n\n    if (d && d.data) {\n      success = d.data.RAN || 0;\n      fail = d.data.FAIL || 0;\n      total = d.data.TOTAL || 0;\n      this.date.text(formatTooltipDate(d.data.DATE || null));\n    }\n\n    this.jobs.text('' + total + ' jobs');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n    this.failed.text('' + fail);\n    this.successful.text('' + success);\n    this.successTextWidth = this.successful.node().getComputedTextLength();\n    this.failTextWidth = this.failed.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 40;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.circleSuccess.attr('cx', -adjustedWidth);\n      this.circleFail.attr('cx', -adjustedWidth);\n      this.failedIcon.attr('x', -adjustedWidth - 7);\n      this.successIcon.attr('x', -adjustedWidth - 7);\n      this.successText.attr('x', -adjustedWidth + 17);\n      this.failText.attr('x', -adjustedWidth + 17);\n      this.successful.attr('x', -this.successTextWidth - 20 - 12);\n      this.failed.attr('x', -this.failTextWidth - 20 - 12);\n      this.date.attr('x', -adjustedWidth - 5);\n      this.jobs.attr('x', -this.jobsWidth / 2 - 7);\n      this.clickMore.attr('x', -adjustedWidth);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.circleSuccess.attr('cx', 26);\n      this.circleFail.attr('cx', 26);\n      this.failedIcon.attr('x', 19);\n      this.successIcon.attr('x', 19);\n      this.successText.attr('x', 43);\n      this.failText.attr('x', 43);\n      this.successful.attr('x', adjustedWidth - this.successTextWidth);\n      this.failed.attr('x', adjustedWidth - this.failTextWidth);\n      this.date.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth);\n      this.clickMore.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nexport default Tooltip;\n","import React, { Component } from 'react';\nimport initializeChart from './BaseChart';\nimport * as d3 from 'd3';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { stringify } from 'query-string';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\n\nclass BarChart extends Component {\n  constructor(props) {\n    super(props);\n    this.draw = this.draw.bind(this);\n    this.init = this.init.bind(this);\n    this.resize = this.resize.bind(this);\n    this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n    this.state = {\n      formattedData: [],\n      timeout: null,\n    };\n  }\n\n  redirectToJobExplorer({ data: { DATE: date } }) {\n    const { jobExplorer } = Paths;\n    const formattedDate = formatDate(date);\n    const initialQueryParams = {\n      start_date: formattedDate,\n      end_date: formattedDate,\n      quick_date_range: 'custom',\n      status: ['failed', 'successful'],\n      template_id: this.props.queryParams.template_id,\n      org_id: this.props.queryParams.org_id,\n      job_type: this.props.queryParams.job_type,\n    };\n\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    this.props.history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  }\n\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  init() {\n    this.draw();\n  }\n\n  // Methods\n  draw() {\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const parseTime = d3.timeParse('%Y-%m-%d');\n    let { data: unformattedData } = this.props;\n    const data = unformattedData.reduce(\n      (formatted, { created_date, successful_count, failed_count }) => {\n        let DATE = parseTime(created_date) || new Date();\n        let RAN = +successful_count || 0;\n        let FAIL = +failed_count || 0;\n        let TOTAL = +successful_count + failed_count || 0;\n        return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n      },\n      []\n    );\n    const width = this.props.getWidth();\n    const height = this.props.getHeight();\n    const x = d3.scaleBand().rangeRound([0, width]).padding(0.35); // percentage\n    const y = d3.scaleLinear().range([height, 0]);\n\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n    //[fail, success]\n    let colors = d3.scaleOrdinal(['#6EC664', '#A30000']);\n\n    const barTooltip = new Tooltip({\n      svg: '#' + this.props.id,\n      colors,\n    });\n    const status = ['FAIL', 'RAN'];\n\n    // stack our data\n    const stack = d3\n      .stack()\n      .keys(status)\n      .order(d3.stackOrderNone)\n      .offset(d3.stackOffsetNone);\n\n    const layers = stack(data);\n    // Scale the range of the data\n    x.domain(layers[0].map((d) => d.data.DATE));\n    y.domain([0, d3.max(layers[layers.length - 1], (d) => d[1] * 1.15) || 8]);\n    // Add the Y Axis\n    svg\n      .append('g')\n      .attr('class', 'y-axis')\n      .call(d3.axisLeft(y).tickSize(-width, 0, 0))\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.y-axis .tick text').attr('x', -5);\n    // text label for the y axis\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Jobs across all clusters');\n    // Add the X Axis\n    let ticks;\n    const maxTicks = Math.round(data.length / (data.length / 2));\n    ticks = data.map((d) => d.DATE);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n        .filter((item) => item);\n    }\n\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(\n        d3.axisBottom(x).tickValues(ticks).tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n      )\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n    // text label for the x axis\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n\n    const layer = svg\n      .selectAll('layer')\n      .data(layers)\n      .enter()\n      .append('g')\n      .attr('class', 'layer')\n      .style('fill', (_d, i) => colors(i));\n    layer\n      .selectAll('rect')\n      .data((d) => d)\n      .enter()\n      .append('rect')\n      .attr('x', (d) => x(d.data.DATE))\n      .attr('y', (d) => y(d[0]))\n      .attr('height', 0)\n      .attr('width', x.bandwidth() - 1)\n      .transition()\n      .duration(550)\n      .ease(d3.easeCubic)\n      .attr('y', (d) => y(d[1]))\n      .attr('height', (d) => y(d[0]) - y(d[1]));\n    layer\n      .selectAll('rect')\n      .on('mouseover', barTooltip.handleMouseOver)\n      .on('mousemove', barTooltip.handleMouseOver)\n      .on('mouseout', barTooltip.handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n  }\n\n  componentDidMount() {\n    this.init();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      this.init();\n    }\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nBarChart.propTypes = {\n  id: PropTypes.string,\n  queryParams: PropTypes.object,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  history: PropTypes.object,\n};\n\nexport default initializeChart(BarChart);\n","import React, { Component } from 'react';\nimport initializeChart from './BaseChart';\nimport PropTypes from 'prop-types';\nimport Tooltip from '../Utilities/Tooltip';\nimport { Paths } from '../paths';\nimport { formatDate } from '../Utilities/helpers';\nimport { stringify } from 'query-string';\nimport * as d3 from 'd3';\n\nclass LineChart extends Component {\n  constructor(props) {\n    super(props);\n    this.init = this.init.bind(this);\n    this.draw = this.draw.bind(this);\n    this.resize = this.resize.bind(this);\n    this.updateCluster = this.updateCluster.bind(this);\n    this.redirectToJobExplorer = this.redirectToJobExplorer.bind(this);\n    this.state = {\n      formattedData: [],\n      timeout: null,\n    };\n  }\n\n  redirectToJobExplorer({ DATE: date }) {\n    const { jobExplorer } = Paths;\n    const formattedDate = formatDate(date);\n    const initialQueryParams = {\n      start_date: formattedDate,\n      end_date: formattedDate,\n      quick_date_range: 'custom',\n      status: ['failed', 'successful'],\n      cluster_id: this.props.queryParams.cluster_id,\n      org_id: this.props.queryParams.org_id,\n      template_id: this.props.queryParams.template_id,\n      job_type: this.props.queryParams.job_type,\n    };\n\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    this.props.history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  }\n\n  resize() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    this.setState({\n      timeout: setTimeout(() => {\n        this.init();\n      }, 500),\n    });\n  }\n\n  updateCluster() {\n    this.init();\n  }\n  init() {\n    this.draw();\n  }\n  // Methods\n  draw() {\n    // Clear our chart container element first\n    d3.selectAll('#' + this.props.id + ' > *').remove();\n    const width = this.props.getWidth();\n    const height = this.props.getHeight();\n\n    function transition(path) {\n      path.transition().duration(1000).attrTween('stroke-dasharray', tweenDash);\n    }\n\n    function tweenDash() {\n      const l = this.getTotalLength();\n      const i = d3.interpolateString('0,' + l, l + ',' + l);\n      return function (t) {\n        return i(t);\n      };\n    }\n\n    const x = d3.scaleTime().rangeRound([0, width]);\n    const y = d3.scaleLinear().range([height, 0]);\n\n    //[success, fail, total]\n    let colors = d3.scaleOrdinal(['#6EC664', '#A30000', '#06C']);\n    const svg = d3\n      .select('#' + this.props.id)\n      .append('svg')\n      .attr('width', width + this.props.margin.left + this.props.margin.right)\n      .attr('height', height + this.props.margin.top + this.props.margin.bottom)\n      .attr('z', 100)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' +\n          this.props.margin.left +\n          ',' +\n          this.props.margin.top +\n          ')'\n      );\n    // Tooltip\n    const tooltip = new Tooltip({\n      svg: '#' + this.props.id,\n      colors,\n    });\n    const { data: unformattedData } = this.props;\n    const parseTime = d3.timeParse('%Y-%m-%d');\n\n    const data = unformattedData.reduce(\n      (formatted, { created_date, successful_count, failed_count }) => {\n        let DATE = parseTime(created_date) || new Date();\n        let RAN = +successful_count || 0;\n        let FAIL = +failed_count || 0;\n        let TOTAL = +successful_count + failed_count || 0;\n        return formatted.concat({ DATE, RAN, FAIL, TOTAL });\n      },\n      []\n    );\n    // Scale the range of the data\n    x.domain(\n      d3.extent(data, function (d) {\n        return d.DATE;\n      })\n    );\n    y.domain([\n      0,\n      d3.max(data, function (d) {\n        return d.TOTAL * 1.15 || 8;\n      }),\n    ]);\n\n    const successLine = d3\n      .line()\n      .curve(d3.curveMonotoneX)\n      .x(function (d) {\n        return x(d.DATE);\n      })\n      .y(function (d) {\n        return y(d.RAN);\n      });\n\n    const failLine = d3\n      .line()\n      .defined((d) => !isNaN(d.FAIL))\n      .curve(d3.curveMonotoneX)\n      .x(function (d) {\n        return x(d.DATE);\n      })\n      .y(function (d) {\n        return y(d.FAIL);\n      });\n    // Add the Y Axis\n    svg\n      .append('g')\n      .attr('class', 'y-axis')\n      .call(d3.axisLeft(y).ticks(10).tickSize(-width))\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.y-axis .tick text').attr('x', -5);\n\n    // text label for the y axis\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - this.props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text('Job runs');\n    // Add the X Axis\n    let ticks;\n    const maxTicks = Math.round(data.length / (data.length / 2));\n    ticks = data.map((d) => d.DATE);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) => (i % maxTicks === 0 ? d.DATE : undefined))\n        .filter((item) => item);\n    }\n\n    svg\n      .append('g')\n      .attr('class', 'x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(\n        d3\n          .axisBottom(x)\n          .tickValues(ticks)\n          .tickSize(-height)\n          .tickFormat(d3.timeFormat('%-m/%-d')) // \"1/19\"\n      ) // \"Jan-01\"\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg.selectAll('.x-axis .tick text').attr('y', 10);\n\n    // text label for the x axis\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' +\n          width / 2 +\n          ' ,' +\n          (height + this.props.margin.top + 20) +\n          ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n    const vertical = svg\n      .append('path')\n      .attr('class', 'mouse-line')\n      .style('stroke', 'black')\n      .style('stroke-width', '3px')\n      .style('stroke-dasharray', '3, 3')\n      .style('opacity', '0');\n\n    const handleMouseOver = function (d) {\n      tooltip.handleMouseOver(d);\n      // show vertical line\n      vertical.transition().style('opacity', '1');\n    };\n\n    const handleMouseMove = function () {\n      let intersectX = this.cx.baseVal.value;\n      vertical.attr('d', function () {\n        let d = 'M' + intersectX + ',' + height;\n        d += ' ' + intersectX + ',' + 0;\n        return d;\n      });\n    };\n\n    const handleMouseOut = function () {\n      // hide tooltip\n      tooltip.handleMouseOut();\n      // hide vertical line\n      vertical.transition().style('opacity', 0);\n    };\n\n    // Add the successLine path.\n    svg\n      .append('path')\n      .data([data])\n      .attr('class', 'line')\n      .style('fill', 'none')\n      .style('stroke', () => colors(1))\n      .attr('stroke-width', 2)\n      .attr('d', successLine)\n      .call(transition);\n\n    // Add the failLine path.\n    svg\n      .append('path')\n      .data([data])\n      .attr('class', 'line')\n      .style('fill', 'none')\n      .style('stroke', () => colors(0))\n      .attr('stroke-width', 2)\n      .attr('d', failLine)\n      .call(transition);\n    svg\n      .selectAll('dot')\n      .data(data)\n      .enter()\n      .append('circle')\n      .attr('r', 3)\n      .style('stroke', () => colors(1))\n      .style('fill', () => colors(1))\n      .attr('cx', function (d) {\n        return x(d.DATE);\n      })\n      .attr('cy', function (d) {\n        return y(d.RAN);\n      })\n\n      .on('mouseover', handleMouseOver)\n      .on('mousemove', handleMouseMove)\n      .on('mouseout', handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n    // create our failLine circles\n    svg\n      .selectAll('dot')\n      .data(data)\n      .enter()\n      .append('circle')\n      .attr('r', 3)\n      .style('stroke', () => colors(0))\n      .style('fill', () => colors(0))\n      .attr('cx', function (d) {\n        return x(d.DATE);\n      })\n      .attr('cy', function (d) {\n        return y(d.FAIL);\n      })\n      .on('mouseover', handleMouseOver)\n      .on('mousemove', handleMouseMove)\n      .on('mouseout', handleMouseOut)\n      .on('click', this.redirectToJobExplorer);\n  }\n\n  componentDidMount() {\n    this.updateCluster();\n    // Call the resize function whenever a resize event occurs\n    window.addEventListener('resize', this.resize);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.data !== this.props.data) {\n      this.updateCluster();\n    }\n  }\n\n  componentWillUnmount() {\n    const { timeout } = this.state;\n    clearTimeout(timeout);\n    window.removeEventListener('resize', this.resize);\n  }\n\n  render() {\n    return <div id={this.props.id} />;\n  }\n}\n\nLineChart.propTypes = {\n  id: PropTypes.string,\n  queryParams: PropTypes.object,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  history: PropTypes.object,\n};\n\nexport default initializeChart(LineChart);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { trimStr } from '../Utilities/helpers';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n  DataList,\n  DataListItem as PFDataListItem,\n  DataListCell as PFDataListCell,\n} from '@patternfly/react-core';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst ModulesList = ({ modules, isLoading }) => (\n  <DataList\n    aria-label=\"Top Modules\"\n    style={{\n      maxHeight: '400px',\n      overflow: 'auto',\n      height: '400px',\n      background: 'white',\n    }}\n  >\n    <DataListItem aria-labelledby=\"top-modules-header\">\n      <DataListCell>\n        <h3>Top modules</h3>\n      </DataListCell>\n      <DataCellEnd>\n        <h3>Usage</h3>\n      </DataCellEnd>\n    </DataListItem>\n    {isLoading && (\n      <PFDataListItem\n        aria-labelledby=\"modules-loading\"\n        key={isLoading}\n        style={{ border: 'none' }}\n      >\n        <PFDataListCell>\n          <LoadingState />\n        </PFDataListCell>\n      </PFDataListItem>\n    )}\n    {!isLoading && modules.length <= 0 && (\n      <PFDataListItem\n        aria-labelledby=\"modules-no-data\"\n        key={isLoading}\n        style={{ border: 'none' }}\n      >\n        <PFDataListCell>\n          <NoData />\n        </PFDataListCell>\n      </PFDataListItem>\n    )}\n    {!isLoading &&\n      modules\n        .filter((module) => module.name !== null)\n        .map(({ name, host_task_count }, index) => (\n          <DataListItem aria-labelledby=\"top-modules-detail\" key={index}>\n            <DataListCell>\n              <span>{trimStr(name)}</span>\n            </DataListCell>\n            <DataCellEnd>{host_task_count}</DataCellEnd>\n          </DataListItem>\n        ))}\n  </DataList>\n);\n\nModulesList.propTypes = {\n  modules: PropTypes.array,\n  isLoading: PropTypes.bool,\n};\n\nexport default ModulesList;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst BarContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: nowrap;\n  width: 100%;\n  max-width: 100%;\n  height: 1rem;\n  margin-top: 1rem;\n  margin-bottom: 1rem;\n`;\n\nconst Bar = styled.div`\n  height: 100%;\n`;\n\nconst LabelsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-end;\n  margin-bottom: 1rem;\n`;\n\nconst Label = styled.div`\n  padding-left: 2rem;\n  display: flex;\n  align-items: center;\n`;\n\nconst Square = styled.div`\n  width: 0.75rem;\n  height: 0.75rem;\n  margin-right: 0.5rem;\n`;\n\nconst whiteSpace = 0.15; // Currently in percent of total bar width\n\nfunction title(str) {\n  return str[0].toUpperCase() + str.slice(1).toLowerCase();\n}\n\nconst Breakdown = ({ categoryCount = {}, categoryColor }) => {\n  const totalCount = Object.values(categoryCount).reduce(\n    (accumulated, currentVal) => accumulated + currentVal\n  );\n\n  const sortedCategories = Object.keys(categoryCount)\n    .filter((category) => categoryCount[category] > 0)\n    .sort((category) => {\n      if (categoryCount[category] < categoryCount[category]) {\n        return 1; // Normally should be -1, but we want descending order\n      }\n      if (categoryCount[category] > categoryCount[category]) {\n        return -1;\n      }\n      return 0;\n    })\n    .map((category) => {\n      return {\n        name: category,\n        barSpacing: categoryCount[category] / totalCount,\n        color: categoryColor[category],\n      };\n    });\n\n  const remainingSpace = 1 - ((sortedCategories.length - 1) * whiteSpace) / 100;\n\n  return (\n    <>\n      <BarContainer>\n        {sortedCategories.map(({ barSpacing, color }, idx) => {\n          if (idx < sortedCategories.length - 1) {\n            return (\n              <React.Fragment key={idx}>\n                <Bar\n                  style={{\n                    backgroundColor: color,\n                    width: `${barSpacing * 100 * remainingSpace}%`,\n                  }}\n                />\n                <Bar\n                  style={{\n                    backgroundColor: 'transparent',\n                    width: `${whiteSpace}%`,\n                  }}\n                />\n              </React.Fragment>\n            );\n          } else {\n            return (\n              <React.Fragment key={idx}>\n                <Bar\n                  style={{\n                    backgroundColor: color,\n                    width: `${barSpacing * 100 * remainingSpace}%`,\n                  }}\n                />\n              </React.Fragment>\n            );\n          }\n        })}\n      </BarContainer>\n      <LabelsContainer>\n        {sortedCategories.map(({ name, color }) => (\n          <Label key={`label-${name}`}>\n            <Square style={{ backgroundColor: color }} />\n            <p>{title(name)}</p>\n          </Label>\n        ))}\n      </LabelsContainer>\n    </>\n  );\n};\n\nBreakdown.propTypes = {\n  categoryColor: PropTypes.object,\n  categoryCount: PropTypes.object,\n};\n\nexport default Breakdown;\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport Breakdown from '../Components/Breakdown';\nimport JobStatus from '../Components/JobStatus';\nimport { Paths } from '../paths';\nimport { stringify } from 'query-string';\nimport useApi from '../Utilities/useApi';\nimport { formatDateTime, formatJobType } from '../Utilities/helpers';\nimport { readJobExplorer } from '../Api';\n\nimport { Button, Modal } from '@patternfly/react-core';\nimport {\n  global_palette_blue_300,\n  global_palette_green_200,\n  global_palette_red_100,\n  global_palette_black_850,\n  global_palette_orange_300,\n  global_palette_purple_300,\n  global_palette_cyan_200,\n  global_palette_light_green_200,\n} from '@patternfly/react-tokens';\n\nimport {\n  DescriptionList,\n  DescriptionListTerm,\n  DescriptionListGroup,\n  DescriptionListDescription,\n  Divider,\n} from '@patternfly/react-core';\n\nimport {\n  TableComposable,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n} from '@patternfly/react-table';\n\nconst ActionContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 2rem;\n`;\n\nconst formatTopFailedTask = (data) => {\n  if (!data) {\n    return;\n  }\n\n  if (data && data[0]) {\n    const percentage = Math.ceil(\n      (data[0].failed_count / data[0].total_failed_count) * 100\n    );\n    return `${data[0].task_name} ${percentage}%`;\n  }\n\n  return `Unavailable`;\n};\n\n// const formatTopFailedStep = (data) => {\n//   if (!data) {\n//     return;\n//   }\n\n//   if (data && data[0]) {\n//     const percentage = Math.ceil(\n//       (data[0].failed_count / data[0].total_failed_count) * 100\n//     );\n//     return `${data[0].template_name} ${percentage}%`;\n//   }\n\n//   return `Unavailable`;\n// };\n\nconst formatSuccessRate = (successCount, totalCount) =>\n  Math.ceil((successCount / totalCount) * 100) + '%';\nconst formatAvgRun = (elapsed, totalCount) =>\n  new Date(Math.ceil(elapsed / totalCount) * 1000).toISOString().substr(11, 8);\nconst formatTotalTime = (elapsed) =>\n  new Date(elapsed * 1000).toISOString().substr(11, 8);\n\nconst ModalContents = ({\n  selectedId,\n  isOpen,\n  handleModal,\n  qp,\n  jobType,\n  handleCloseBtn,\n}) => {\n  const [\n    {\n      data: { items: relatedJobs = [] },\n    },\n    setRelatedJobs,\n  ] = useApi({ items: [] });\n  const [\n    {\n      data: {\n        items: [stats = 0],\n      },\n    },\n    setStats,\n  ] = useApi({ items: [] });\n\n  let history = useHistory();\n\n  const redirectToJobExplorer = () => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      template_id: [selectedId],\n      status: [\n        'successful',\n        'failed',\n        'new',\n        'pending',\n        'waiting',\n        'error',\n        'canceled',\n        'running',\n      ],\n      job_type: [jobType],\n      quick_date_range: 'last_30_days',\n    };\n\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const relatedTemplateJobsParams = {\n    ...qp,\n    template_id: [selectedId],\n    attributes: [\n      'id',\n      'status',\n      'job_type',\n      'started',\n      'finished',\n      'elapsed',\n      'created',\n      'cluster_name',\n      'org_name',\n    ],\n    group_by_time: false,\n    limit: 5,\n    sort_by: 'created:desc',\n    quick_date_range: qp.quick_date_range\n      ? qp.quick_date_range\n      : 'last_30_days',\n    job_type: [jobType],\n  };\n\n  const agreggateTemplateParams = {\n    group_by: 'template',\n    template_id: [selectedId],\n    attributes: [\n      'elapsed',\n      'job_type',\n      'successful_count',\n      'failed_count',\n      'error_count',\n      'waiting_count',\n      'pending_count',\n      'canceled_count',\n      'new_count',\n      'running_count',\n      'total_count',\n      jobType === 'job' ? 'most_failed_tasks' : 'most_failed_steps',\n    ],\n    status: qp.status,\n    quick_date_range: qp.quick_date_range\n      ? qp.quick_date_range\n      : 'last_30_days',\n    job_type: [jobType],\n  };\n\n  useEffect(() => {\n    if (selectedId) {\n      setStats(readJobExplorer({ params: agreggateTemplateParams }));\n      setRelatedJobs(readJobExplorer({ params: relatedTemplateJobsParams }));\n    }\n  }, [selectedId]);\n\n  const tableCols = ['Id/Name', 'Status', 'Cluster', 'Finished', 'Total time'];\n\n  const categoryCount = stats\n    ? {\n        success: stats.successful_count,\n        cancelled: stats.canceled_count,\n        error: stats.error_count,\n        failed: stats.failed_count,\n        new: stats.new_count,\n        pending: stats.pending_count,\n        running: stats.running_count,\n        waiting: stats.waiting_count,\n      }\n    : null;\n\n  const categoryColor = {\n    success: global_palette_green_200.value,\n    cancelled: global_palette_black_850.value,\n    error: global_palette_orange_300.value,\n    failed: global_palette_red_100.value,\n    new: global_palette_cyan_200.value,\n    pending: global_palette_purple_300.value,\n    running: global_palette_blue_300.value,\n    waiting: global_palette_light_green_200.value,\n  };\n\n  const descriptionStats = [\n    {\n      label: 'Number of runs',\n      id: 'total-runs',\n      value: stats.total_count ? stats.total_count : 'Unavailable',\n    },\n    {\n      label: 'Total time',\n      id: 'total-time',\n      value: stats.elapsed ? formatTotalTime(stats.elapsed) : 'Unavailable',\n    },\n    {\n      label: 'Average time',\n      id: 'avg-time',\n      value: stats.elapsed\n        ? formatAvgRun(stats.elapsed, stats.total_count)\n        : 'Unavailable',\n    },\n    {\n      label: 'Type',\n      id: 'type',\n      value: jobType ? formatJobType(jobType) : 'Unavailable',\n    },\n    {\n      label: 'Success rate',\n      id: 'success-rate',\n      value: !isNaN(stats.successful_count)\n        ? formatSuccessRate(stats.successful_count, stats.total_count)\n        : 'Unavailable',\n    },\n    {\n      label: 'Most failed task',\n      id: 'most-failed',\n      value: stats.most_failed_tasks\n        ? formatTopFailedTask(stats.most_failed_tasks)\n        : 'Unavailable',\n    },\n  ];\n\n  return (\n    <Modal\n      aria-label=\"modal\"\n      width={'80%'}\n      title={stats.name ? stats.name : 'no-template-name'}\n      isOpen={isOpen}\n      onClose={() => {\n        handleModal(false);\n        handleCloseBtn(null);\n      }}\n    >\n      {categoryCount && (\n        <Breakdown\n          categoryCount={categoryCount}\n          categoryColor={categoryColor}\n        />\n      )}\n\n      <DescriptionList isHorizontal columnModifier={{ lg: '3Col' }}>\n        {descriptionStats.map(({ label, id, value }) => (\n          <DescriptionListGroup className={id} key={label}>\n            <DescriptionListTerm>{label}</DescriptionListTerm>\n            <DescriptionListDescription>{value}</DescriptionListDescription>\n          </DescriptionListGroup>\n        ))}\n      </DescriptionList>\n\n      <Divider\n        component=\"div\"\n        style={{ marginTop: '2rem', marginBottom: '1.5rem' }}\n      />\n      <p>\n        <strong>Last 5 jobs</strong>\n      </p>\n\n      {relatedJobs.length <= 0 && <LoadingState />}\n      {relatedJobs.length > 0 && (\n        <TableComposable\n          aria-label=\"Template information table\"\n          variant=\"compact\"\n        >\n          <Thead>\n            <Tr>\n              {tableCols.map((heading, idx) => (\n                <Th key={idx}>{heading}</Th>\n              ))}\n            </Tr>\n          </Thead>\n          <Tbody>\n            {relatedJobs.map((job, idx) => (\n              <Tr key={`job-detail-${idx}`}>\n                <Td>{`${job.id.id} - ${job.id.template_name}`}</Td>\n                <Td>\n                  <JobStatus status={job.status} />\n                </Td>\n                <Td>{job.cluster_name}</Td>\n                <Td>{formatDateTime(job.finished)}</Td>\n                <Td>{formatTotalTime(job.elapsed)}</Td>\n              </Tr>\n            ))}\n          </Tbody>\n        </TableComposable>\n      )}\n      <ActionContainer>\n        <Button\n          key=\"cancel\"\n          variant=\"secondary\"\n          onClick={() => {\n            handleModal(false);\n            handleCloseBtn(null);\n          }}\n        >\n          Close\n        </Button>\n\n        <Button component=\"a\" onClick={redirectToJobExplorer} variant=\"link\">\n          View all jobs\n        </Button>\n      </ActionContainer>\n    </Modal>\n  );\n};\n\nModalContents.propTypes = {\n  selectedId: PropTypes.number,\n  qp: PropTypes.object,\n  jobType: PropTypes.string,\n  handleCloseBtn: PropTypes.func,\n  isOpen: PropTypes.bool,\n  handleModal: PropTypes.func,\n};\n\nexport default ModalContents;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport LoadingState from '../Components/LoadingState';\nimport NoData from '../Components/NoData';\n\nimport {\n  DataList,\n  DataListItem as PFDataListItem,\n  DataListCell as PFDataListCell,\n} from '@patternfly/react-core';\n\nimport ModalContents from './ModalContents';\n\nconst DataListCell = styled(PFDataListCell)`\n  --pf-c-data-list__cell-cell--MarginRight: 0;\n`;\n\nconst DataListItem = styled(PFDataListItem)`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  padding: 0 15px 10px 15px;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst DataCellEnd = styled(DataListCell)`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nconst TemplatesList = ({ templates, isLoading, qp, title, jobType }) => {\n  const [selectedId, setSelectedId] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const displayJobType = (type) => {\n    return type === 'job' ? 'templates' : 'workflows';\n  };\n\n  return (\n    <>\n      <DataList\n        aria-label={`Top ${displayJobType(jobType)}`}\n        style={{\n          maxHeight: '400px',\n          overflow: 'auto',\n          height: '400px',\n          background: 'white',\n        }}\n      >\n        <DataListItem aria-labelledby={`top-${displayJobType(jobType)}-header`}>\n          <DataListCell>\n            <h3>{title}</h3>\n          </DataListCell>\n          <DataCellEnd>\n            <h3>Usage</h3>\n          </DataCellEnd>\n        </DataListItem>\n        {isLoading && (\n          <PFDataListItem\n            aria-labelledby={`${displayJobType(jobType)}-loading`}\n            key={isLoading}\n            style={{ border: 'none' }}\n          >\n            <PFDataListCell>\n              <LoadingState />\n            </PFDataListCell>\n          </PFDataListItem>\n        )}\n        {!isLoading && templates.length <= 0 && (\n          <PFDataListItem\n            aria-labelledby={`${displayJobType(jobType)}-no-data`}\n            key={isLoading}\n            style={{ border: 'none' }}\n          >\n            <PFDataListCell>\n              <NoData />\n            </PFDataListCell>\n          </PFDataListItem>\n        )}\n        {!isLoading &&\n          templates.map(({ name, total_count, id }, index) => (\n            <DataListItem\n              aria-labelledby={`top-${displayJobType(jobType)}-detail`}\n              key={index}\n            >\n              <DataListCell>\n                <a\n                  onClick={() => {\n                    setIsModalOpen(true);\n                    setSelectedId(id);\n                  }}\n                >\n                  {name}\n                </a>\n              </DataListCell>\n              <DataCellEnd>{total_count}</DataCellEnd>\n            </DataListItem>\n          ))}\n      </DataList>\n      <ModalContents\n        isOpen={isModalOpen}\n        handleModal={setIsModalOpen}\n        selectedId={selectedId}\n        qp={qp}\n        jobType={jobType}\n        handleCloseBtn={setSelectedId}\n      />\n    </>\n  );\n};\n\nTemplatesList.propTypes = {\n  templates: PropTypes.array,\n  isLoading: PropTypes.bool,\n  queryParams: PropTypes.object,\n  title: PropTypes.string,\n  qp: PropTypes.object,\n  jobType: PropTypes.string,\n};\n\nexport default TemplatesList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport {\n  preflightRequest,\n  readClustersOptions,\n  readJobExplorer,\n  readEventExplorer,\n} from '../../Api';\n\nimport { jobExplorer } from '../../Utilities/constants';\nimport useApi from '../../Utilities/useApi';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle as PFCardTitle,\n} from '@patternfly/react-core';\n\nimport BarChart from '../../Charts/BarChart';\nimport LineChart from '../../Charts/LineChart';\nimport ModulesList from '../../Components/ModulesList';\nimport TemplatesList from '../../Components/TemplatesList';\nimport FilterableToolbar from '../../Components/Toolbar';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport { clusters } from '../../Utilities/constants';\n\nconst initialTopTemplateParams = {\n  group_by: 'template',\n  limit: 10,\n  job_type: ['job'],\n  group_by_time: false,\n  status: ['successful', 'failed'],\n};\n\nconst initialTopWorkflowParams = {\n  group_by: 'template',\n  limit: 10,\n  job_type: ['workflowjob'],\n  group_by_time: false,\n  status: ['successful', 'failed'],\n};\n\nconst initialModuleParams = {\n  group_by: 'module',\n  sort_by: 'host_task_count:desc',\n  limit: 10,\n};\n\nconst Clusters = () => {\n  const [preflightError, setPreFlightError] = useState(null);\n\n  const { queryParams, setFromToolbar } = useQueryParams({\n    ...clusters.defaultParams,\n  });\n\n  const [\n    {\n      isLoading,\n      isSuccess,\n      error,\n      data: { items: chartData = [] },\n    },\n    setData,\n  ] = useApi({ items: [] });\n\n  const [\n    {\n      data: { items: templates = [] },\n    },\n    setTemplates,\n  ] = useApi({ items: [] });\n  const [\n    {\n      data: { items: workflows = [] },\n    },\n    setWorkflows,\n  ] = useApi({ items: [] });\n  const [\n    {\n      data: { items: modules = [] },\n    },\n    setModules,\n  ] = useApi({ items: [] });\n  const [{ data: options = [] }, setOptions] = useApi({});\n\n  const initialOptionsParams = {\n    attributes: jobExplorer.attributes,\n  };\n\n  const { queryParams: optionsQueryParams } =\n    useQueryParams(initialOptionsParams);\n\n  const {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n  } = queryParams;\n\n  const topTemplatesParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialTopTemplateParams,\n  };\n\n  const topWorkflowParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialTopWorkflowParams,\n  };\n\n  const topModuleParams = {\n    cluster_id,\n    org_id,\n    template_id,\n    quick_date_range,\n    start_date,\n    end_date,\n    ...initialModuleParams,\n  };\n\n  useEffect(() => {\n    async function initializeWithPreflight() {\n      await preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n      setOptions(readClustersOptions({ params: optionsQueryParams }));\n    }\n\n    initializeWithPreflight();\n  }, []);\n\n  // Get and update the data\n  useEffect(() => {\n    const fetchEndpoints = () => {\n      setData(readJobExplorer({ params: queryParams }));\n      setTemplates(readJobExplorer({ params: topTemplatesParams }));\n      setWorkflows(readJobExplorer({ params: topWorkflowParams }));\n      setModules(readEventExplorer({ params: topModuleParams }));\n    };\n    fetchEndpoints();\n  }, [queryParams]);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Clusters'} />\n        <FilterableToolbar\n          categories={options}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      {(preflightError || error) && (\n        <Main>\n          {preflightError ? (\n            <EmptyState {...preflightError} />\n          ) : (\n            <ApiErrorState message={error.error} />\n          )}\n        </Main>\n      )}\n      {!preflightError && !error && (\n        <Main>\n          <Card>\n            <PFCardTitle>\n              <h2>Job status</h2>\n            </PFCardTitle>\n            <CardBody>\n              {isLoading && <LoadingState />}\n              {queryParams.cluster_id.length <= 0 && isSuccess && (\n                <BarChart\n                  margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                  id=\"d3-bar-chart-root\"\n                  data={chartData}\n                  queryParams={queryParams}\n                />\n              )}\n              {queryParams.cluster_id.length > 0 && isSuccess && (\n                <LineChart\n                  margin={{ top: 20, right: 20, bottom: 50, left: 70 }}\n                  id=\"d3-line-chart-root\"\n                  data={chartData}\n                  queryParams={queryParams}\n                />\n              )}\n            </CardBody>\n          </Card>\n          <div\n            className=\"dataCard\"\n            style={{ display: 'flex', marginTop: '20px' }}\n          >\n            <TemplatesList\n              qp={queryParams}\n              templates={workflows}\n              isLoading={isLoading}\n              title={'Top workflows'}\n              jobType={'workflowjob'}\n            />\n            <TemplatesList\n              qp={queryParams}\n              templates={templates}\n              isLoading={isLoading}\n              title={'Top templates'}\n              jobType={'job'}\n            />\n            <ModulesList modules={modules} isLoading={isLoading} />\n          </div>\n        </Main>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Clusters;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  DataListCell as PFDataListCell,\n  DataListContent,\n  DataList,\n  DataListItem,\n  DataListItemRow,\n  DataListItemCells as PFDataListItemCells,\n  DataListToggle as PFDataListToggle,\n  Tooltip,\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkIcon } from '@patternfly/react-icons';\n\nimport LoadingState from '../Components/LoadingState';\nimport { formatDateTime, formatJobType } from '../Utilities/helpers';\nimport JobStatus from './JobStatus';\n\nconst headerLabels = ['Id/Name', 'Status', 'Cluster', 'Organization', 'Type'];\n\nconst ExternalLinkIcon = styled(PFExternalLinkIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n`;\n\nconst DataListCell = styled(PFDataListCell)`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  text-align: center;\n`;\n\nconst DataListCellHeader = styled(DataListCell)`\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  font-weight: bold;\n`;\n\nconst DataListItemCells = styled(PFDataListItemCells)`\n  align-items: center;\n`;\n\nconst DataListToggle = styled(PFDataListToggle)`\n  align-items: center;\n`;\n\nconst mobileBreakpoint = 765;\n\nconst buildHeader = (labels) => (\n  <DataListItem>\n    <DataListItemRow style={{ paddingLeft: '80px' }}>\n      <DataListItemCells\n        dataListCells={labels.map((label) => (\n          <DataListCellHeader key={label}>\n            {label}\n            {label === 'Id/Name' && <ExternalLinkIcon />}\n          </DataListCellHeader>\n        ))}\n      />\n    </DataListItemRow>\n  </DataListItem>\n);\n\nconst buildListRow = (items, ariaLabel, ariaLabelledBy, windowWidth) => {\n  const [isExpanded, setIsExpanded] = useState([]);\n\n  return (\n    <>\n      {items.map((item, count) => {\n        const toggle = (id) => {\n          const expanded = isExpanded;\n          const idx = expanded.indexOf(id);\n          const newExpanded =\n            idx >= 0\n              ? [\n                  ...expanded.slice(0, idx),\n                  ...expanded.slice(idx + 1, expanded.length),\n                ]\n              : [...expanded, id];\n          setIsExpanded(newExpanded);\n        };\n\n        return (\n          <DataListItem\n            key={item.id.id}\n            aria-labelledby={ariaLabelledBy}\n            isExpanded={isExpanded.includes(`${item.id.id}-toggle`)}\n          >\n            <DataListItemRow key={item.id.id}>\n              <DataListToggle\n                id={`${item.id.id}-toggle`}\n                aria-controls={`${item.id.id}-expand`}\n                onClick={() => toggle(`${item.id.id}-toggle`)}\n                isExpanded={isExpanded.includes(`${item.id.id}-toggle`)}\n              />\n              <DataListItemCells\n                dataListCells={[\n                  <DataListCell key={count++}>\n                    <a\n                      href={item.id.tower_link}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      {windowWidth < mobileBreakpoint && (\n                        <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                          Id/Name\n                          <ExternalLinkIcon />:\n                        </span>\n                      )}\n                      &nbsp;\n                      {`${item.id.id} - ${item.id.template_name}`}\n                    </a>\n                  </DataListCell>,\n                  <DataListCell key={count++}>\n                    {windowWidth <= mobileBreakpoint && (\n                      <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Status:\n                      </span>\n                    )}\n                    &nbsp;\n                    <JobStatus status={item.status} />\n                  </DataListCell>,\n                  <Tooltip key={count++} content={<p>{item.cluster_name}</p>}>\n                    <DataListCell>\n                      {windowWidth <= mobileBreakpoint && (\n                        <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                          Cluster:\n                        </span>\n                      )}\n                      &nbsp;\n                      {item.cluster_name}\n                    </DataListCell>\n                  </Tooltip>,\n                  <DataListCell key={count++}>\n                    {windowWidth <= mobileBreakpoint && (\n                      <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Organization:\n                      </span>\n                    )}\n                    &nbsp;\n                    {item.org_name}\n                  </DataListCell>,\n                  <DataListCell key={count++}>\n                    {windowWidth <= mobileBreakpoint && (\n                      <span style={{ color: 'initial', fontWeight: 'bold' }}>\n                        Type:\n                      </span>\n                    )}\n                    &nbsp;\n                    {formatJobType(item.job_type)}\n                  </DataListCell>,\n                ]}\n              />\n            </DataListItemRow>\n            <DataListContent\n              aria-label={`${item.id.id}-details`}\n              id={'${item.id.id}'}\n              isHidden={!isExpanded.includes(`${item.id.id}-toggle`)}\n            >\n              <DataListItemCells\n                dataListCells={[\n                  <DataListCell key={count++}>\n                    Created: {formatDateTime(item.created)}\n                  </DataListCell>,\n                  <DataListCell key={count++}>\n                    Started: {formatDateTime(item.started)}\n                  </DataListCell>,\n                  <DataListCell key={count++}>\n                    Finished: {formatDateTime(item.finished)}\n                  </DataListCell>,\n                ]}\n              />\n            </DataListContent>\n          </DataListItem>\n        );\n      })}\n    </>\n  );\n};\n\nconst AllJobsTemplate = ({ jobs }) => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  const onResize = () => setWindowWidth(window.innerWidth);\n\n  useEffect(() => {\n    window.addEventListener('resize', onResize);\n    return () => window.removeEventListener('resize', onResize);\n  }, []);\n\n  return buildListRow(jobs, 'All jobs view', 'all-jobs', windowWidth);\n};\n\nconst JobExplorerList = ({ jobs }) => {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n  const onResize = () => setWindowWidth(window.innerWidth);\n\n  useEffect(() => {\n    window.addEventListener('resize', onResize);\n    return () => window.removeEventListener('resize', onResize);\n  }, []);\n\n  return (\n    <>\n      {jobs.length <= 0 && <LoadingState />}\n      <DataList isCompact>\n        {windowWidth >= mobileBreakpoint && buildHeader(headerLabels)}\n        <AllJobsTemplate jobs={jobs} windowWidth={windowWidth} />\n      </DataList>\n    </>\n  );\n};\n\nJobExplorerList.propTypes = {\n  jobs: PropTypes.array,\n  windowWidth: PropTypes.number,\n};\n\nAllJobsTemplate.propTypes = {\n  jobs: PropTypes.array,\n  windowWidth: PropTypes.number,\n};\n\nexport default JobExplorerList;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { parse, stringify } from 'query-string';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { Paths } from '../../paths';\n\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoResults from '../../Components/NoResults';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport Pagination from '../../Components/Pagination';\n\nimport {\n  preflightRequest,\n  readJobExplorer,\n  readJobExplorerOptions,\n} from '../../Api';\nimport { jobExplorer } from '../../Utilities/constants';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport { Card, CardBody, PaginationVariant } from '@patternfly/react-core';\n\nimport JobExplorerList from '../../Components/JobExplorerList';\nimport FilterableToolbar from '../../Components/Toolbar/';\n\nconst initialQueryParams = {\n  ...jobExplorer.defaultParams,\n  attributes: jobExplorer.attributes,\n};\n\nconst JobExplorer = ({ location: { search }, history }) => {\n  const [preflightError, setPreFlightError] = useState(null);\n  const [\n    {\n      isLoading,\n      isSuccess,\n      error,\n      data: { meta = {}, items: data = [] },\n    },\n    setData,\n  ] = useApi({ meta: {}, items: [] });\n  const [options, setOptions] = useApi({});\n\n  const { queryParams, setFromPagination, setFromToolbar, dispatch } =\n    useQueryParams(initialQueryParams);\n\n  const updateURL = () => {\n    const { jobExplorer } = Paths;\n    const search = stringify(queryParams, { arrayFormat: 'bracket' });\n    history.replace({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'job-explorer', secondaryNav: true });\n\n    preflightRequest().catch((error) => {\n      setPreFlightError({ preflightError: error });\n    });\n\n    const initialSearchParams = parse(search, {\n      arrayFormat: 'bracket',\n      parseBooleans: true,\n      parseNumbers: true,\n    });\n\n    dispatch({\n      type: 'REINITIALIZE',\n      value: {\n        ...initialQueryParams,\n        ...initialSearchParams,\n      },\n    });\n  }, []);\n\n  useEffect(() => {\n    setData(readJobExplorer({ params: queryParams }));\n    setOptions(readJobExplorerOptions({ params: queryParams }));\n    updateURL();\n  }, [queryParams]);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Job Explorer'} />\n      </PageHeader>\n\n      {preflightError && (\n        <Main>\n          <EmptyState {...preflightError} />\n        </Main>\n      )}\n\n      {!preflightError && (\n        <Main>\n          <Card>\n            <CardBody>\n              <FilterableToolbar\n                categories={options.data}\n                filters={queryParams}\n                setFilters={setFromToolbar}\n                pagination={\n                  <Pagination\n                    count={meta?.count}\n                    params={{\n                      limit: queryParams.limit,\n                      offset: queryParams.offset,\n                    }}\n                    setPagination={setFromPagination}\n                    isCompact\n                  />\n                }\n                hasSettings\n              />\n              {error && <ApiErrorState message={error.error} />}\n              {isLoading && <LoadingState />}\n              {isSuccess && data.length <= 0 && <NoResults />}\n              {isSuccess && data.length > 0 && <JobExplorerList jobs={data} />}\n              <Pagination\n                count={meta?.count}\n                params={{\n                  limit: queryParams.limit,\n                  offset: queryParams.offset,\n                }}\n                setPagination={setFromPagination}\n                variant={PaginationVariant.bottom}\n              />\n            </CardBody>\n          </Card>\n        </Main>\n      )}\n    </React.Fragment>\n  );\n};\n\nJobExplorer.propTypes = {\n  location: PropTypes.object,\n  history: PropTypes.object,\n};\n\nexport default JobExplorer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport moment from 'moment';\n\nimport {\n  NotificationDrawerList as PFNotificationDrawerList,\n  NotificationDrawerListItem as PFNotificationDrawerListItem,\n  NotificationDrawerListItemBody,\n  NotificationDrawerListItemHeader,\n} from '@patternfly/react-core';\n\nimport { ExternalLinkAltIcon as PFExternalLinkAltIcon } from '@patternfly/react-icons';\nimport LoadingState from '../Components/LoadingState';\nimport { capitalize } from '../Utilities/helpers';\n\nconst ExternalLinkAltIcon = styled(PFExternalLinkAltIcon)`\n  margin-left: 7px;\n  color: var(--pf-global--Color--400);\n  font-size: 14px;\n`;\n\nconst NotificationDrawerListItem = styled(PFNotificationDrawerListItem)`\n  border-top: 1px solid var(--pf-global--BorderColor--light-100\n    );\n  border-bottom::nth-child(odd): 1px solid var(--pf-global--BorderColor--light-100\n    );\n  box-shadow: none;\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst NotificationDrawerList = styled(PFNotificationDrawerList)`\n  &:last-child {\n    border-bottom: 1px solid var(--pf-global--BorderColor--light-100);\n  }\n`;\n\nconst stringifyDate = (date) => {\n  const day = moment(date);\n  const oneHour = 60 * 60 * 1000;\n  const now = moment().utc();\n\n  if (now.isAfter(day)) {\n    return `${now.diff(day, 'days')} day(s) ago.`;\n  }\n\n  if (day.isSame(now, 'day')) {\n    if (day.valueOf() > oneHour) {\n      return `${day.diff(now, 'hours')} hour(s) ago.`;\n    }\n\n    return `${now.diff(day, 'minutes')} minute(s) ago.`;\n  }\n};\n\nconst AllNotificationTemplate = ({ notifications }) =>\n  notifications.map(\n    ({ date, message, label, notification_id: id, tower_url: url }) => {\n      if (label === '' || label === 'notice') {\n        return (\n          <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"info\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n\n      if (label === 'error') {\n        return (\n          <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"danger\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n\n      if (label === 'warning') {\n        return (\n          <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n            <NotificationDrawerListItemHeader\n              variant=\"warning\"\n              title={\n                <>\n                  {url ? (\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                      {capitalize(label)}\n                      <ExternalLinkAltIcon />\n                    </a>\n                  ) : (\n                    capitalize(label)\n                  )}\n                </>\n              }\n            />\n            <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n              {message}{' '}\n            </NotificationDrawerListItemBody>\n          </NotificationDrawerListItem>\n        );\n      }\n    }\n  );\n\nconst ErrorNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'error')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"danger\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"danger\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst NoticeNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'notice')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"info\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"info\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst WarningNotificationTemplate = ({ notifications }) =>\n  notifications\n    .filter((notification) => notification.label === 'warning')\n    .map(({ message, date, label, notification_id: id, tower_url: url }) => (\n      <NotificationDrawerListItem variant=\"warning\" key={date + '-' + id}>\n        <NotificationDrawerListItemHeader\n          variant=\"warning\"\n          title={\n            <>\n              {url ? (\n                <a target=\"_blank\" rel=\"noopener noreferrer\" href={url}>\n                  {capitalize(label)}\n                  <ExternalLinkAltIcon />\n                </a>\n              ) : (\n                capitalize(label)\n              )}\n            </>\n          }\n        />\n        <NotificationDrawerListItemBody timestamp={stringifyDate(date)}>\n          {message}{' '}\n        </NotificationDrawerListItemBody>\n      </NotificationDrawerListItem>\n    ));\n\nconst NotificationsList = ({ filterBy, notifications }) => (\n  <>\n    <NotificationDrawerList>\n      {notifications.length <= 0 && <LoadingState />}\n      {filterBy === '' && (\n        <AllNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'notice' && (\n        <NoticeNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'error' && (\n        <ErrorNotificationTemplate notifications={notifications} />\n      )}\n      {filterBy === 'warning' && (\n        <WarningNotificationTemplate notifications={notifications} />\n      )}\n    </NotificationDrawerList>\n  </>\n);\n\nAllNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nErrorNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nWarningNotificationTemplate.propTypes = {\n  notifications: PropTypes.array,\n};\n\nNotificationsList.propTypes = {\n  notifications: PropTypes.array,\n  filterBy: PropTypes.string,\n};\n\nexport default NotificationsList;\n","import React, { useState, useEffect } from 'react';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\n\nimport styled from 'styled-components';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport NoData from '../../Components/NoData';\nimport { preflightRequest, readClusters, readNotifications } from '../../Api';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle as PFCardTitle,\n  FormSelect,\n  FormSelectOption,\n  PaginationVariant,\n  NotificationDrawer,\n} from '@patternfly/react-core';\n\nimport NotificationsList from '../../Components/NotificationsList';\nimport Pagination from '../../Components/Pagination';\n\nconst CardTitle = styled(PFCardTitle)`\n  display: flex;\n  justify-content: space-between;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n`;\n\nconst DropdownGroup = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-end;\n\n  @media screen and (max-width: 1035px) {\n    display: block;\n  }\n\n  select {\n    margin: 0 10px;\n    width: 150px;\n\n    @media screen and (max-width: 1035px) {\n      margin: 10px 10px 0 0;\n    }\n\n    @media screen and (max-width: 865px) {\n      width: 100%;\n    }\n  }\n`;\n\nconst notificationOptions = [\n  {\n    value: 'please choose',\n    label: 'Select Notification Severity',\n    disabled: true,\n  },\n  { value: 'error', label: 'View Critical', disabled: false },\n  { value: 'warning', label: 'View Warning', disabled: false },\n  { value: 'notice', label: 'View Notice', disabled: false },\n  { value: '', label: 'View All', disabled: false },\n];\n\nfunction formatClusterName(data) {\n  const defaultClusterOptions = [\n    { value: 'please choose', label: 'Select cluster', disabled: true },\n    { value: '', label: 'All Clusters', disabled: false },\n    { value: -1, label: 'Unassociated', disabled: false },\n  ];\n  return data.reduce(\n    (formatted, { label, cluster_id: id, install_uuid: uuid }) => {\n      if (label.length === 0) {\n        formatted.push({ value: id, label: uuid, disabled: false });\n      } else {\n        formatted.push({ value: id, label, disabled: false });\n      }\n\n      return formatted;\n    },\n    defaultClusterOptions\n  );\n}\n\nconst initialQueryParams = {\n  limit: 5,\n  offset: 0,\n};\n\nconst Notifications = () => {\n  const [preflightError, setPreFlightError] = useState(null);\n  const [notificationsData, setNotificationsData] = useState([]);\n  const [clusterOptions, setClusterOptions] = useState([]);\n  const [selectedCluster, setSelectedCluster] = useState('');\n  const [firstRender, setFirstRender] = useState(true);\n  const [isLoading, setIsLoading] = useState(true);\n  const [meta, setMeta] = useState({});\n  const { queryParams, setId, setFromPagination, setSeverity } =\n    useQueryParams(initialQueryParams);\n\n  useEffect(() => {\n    if (firstRender) {\n      return;\n    }\n\n    const getData = () => {\n      return readNotifications({ params: queryParams });\n    };\n\n    const update = () => {\n      setIsLoading(true);\n      getData().then(({ notifications: notificationsData = [], meta }) => {\n        setNotificationsData(notificationsData);\n        setMeta(meta);\n        setIsLoading(false);\n      });\n    };\n\n    update();\n  }, [queryParams]);\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'notifications', secondaryNav: true });\n\n    let ignore = false;\n    const fetchEndpoints = () => {\n      return Promise.all(\n        [readClusters(), readNotifications({ params: queryParams })].map((p) =>\n          p.catch(() => [])\n        )\n      );\n    };\n\n    async function initializeWithPreflight() {\n      setIsLoading(true);\n      await preflightRequest().catch((error) => {\n        setPreFlightError({ preflightError: error });\n      });\n      fetchEndpoints().then(\n        ([\n          { templates: clustersData = [] },\n          { notifications: notificationsData = [], meta },\n        ]) => {\n          if (!ignore) {\n            const clusterOptions = formatClusterName(clustersData);\n            setClusterOptions(clusterOptions);\n            setNotificationsData(notificationsData);\n            setMeta(meta);\n            setFirstRender(false);\n            setIsLoading(false);\n          }\n        }\n      );\n    }\n\n    initializeWithPreflight();\n    return () => (ignore = true);\n  }, []);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Notifications'} />\n      </PageHeader>\n      {preflightError && (\n        <Main>\n          <EmptyState {...preflightError} />\n        </Main>\n      )}\n      {!preflightError && (\n        <>\n          <Main>\n            <Card>\n              <CardTitle>\n                <DropdownGroup>\n                  <FormSelect\n                    name=\"selectedCluster\"\n                    value={selectedCluster}\n                    onChange={(value) => {\n                      setSelectedCluster(value);\n                      setId(value);\n                      setFromPagination(0);\n                    }}\n                    aria-label=\"Select Cluster\"\n                  >\n                    {clusterOptions.map(({ value, label, disabled }, index) => (\n                      <FormSelectOption\n                        isDisabled={disabled}\n                        key={index}\n                        value={value}\n                        label={label}\n                      />\n                    ))}\n                  </FormSelect>\n                  <FormSelect\n                    name=\"selectedNotification\"\n                    value={queryParams.severity || ''}\n                    onChange={(value) => {\n                      setSeverity(value);\n                      setFromPagination(0);\n                    }}\n                    aria-label=\"Select Notification Type\"\n                  >\n                    {notificationOptions.map(\n                      ({ disabled, value, label }, index) => (\n                        <FormSelectOption\n                          isDisabled={disabled}\n                          key={index}\n                          value={value}\n                          label={label}\n                        />\n                      )\n                    )}\n                  </FormSelect>\n                </DropdownGroup>\n                <Pagination\n                  count={meta?.count}\n                  params={{\n                    limit: queryParams.limit,\n                    offset: queryParams.offset,\n                  }}\n                  setPagination={setFromPagination}\n                  isCompact\n                />\n              </CardTitle>\n              <CardBody>\n                {isLoading && <LoadingState />}\n                {!isLoading && notificationsData.length <= 0 && <NoData />}\n                {!isLoading && notificationsData.length > 0 && (\n                  <NotificationDrawer>\n                    <NotificationsList\n                      filterBy={queryParams.severity || ''}\n                      options={notificationOptions}\n                      notifications={notificationsData}\n                    />\n                  </NotificationDrawer>\n                )}\n                <Pagination\n                  count={meta?.count}\n                  params={{\n                    limit: queryParams.limit,\n                    offset: queryParams.offset,\n                  }}\n                  setPagination={setFromPagination}\n                  variant={PaginationVariant.bottom}\n                />\n              </CardBody>\n            </Card>\n          </Main>\n        </>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default Notifications;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Switch } from '@patternfly/react-core';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  overflow: auto;\n  width: 100%;\n  height: ${(props) => props.height};\n`;\n\nconst LegendDetail = styled.div`\n  display: flex;\n  padding: 7.5px 15px;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  overflow: auto;\n`;\n\nconst Color = styled.div.attrs((props) => ({\n  color: props.color || 'black',\n}))`\n  min-width: 12px;\n  height: 12px;\n  background: ${(props) => props.color};\n  margin-right: 20px;\n`;\n\nconst Title = styled.span`\n  font-size: 15px;\n  display: inline-block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  text-align: left;\n`;\n\nconst SubTitle = styled.span`\n  font-size: 15px;\n  margin-left: auto;\n  margin-right: 0;\n  padding-right: 10px;\n`;\n\nconst Legend = ({ data, selected, height, onToggle, chartName }) => {\n  return (\n    <Container height={height}>\n      {data.map(({ name, value, id, count }, index) => (\n        <LegendDetail key={index}>\n          <Wrapper>\n            <Color color={value} />\n            <Title>{name}</Title>\n          </Wrapper>\n          {count && <SubTitle>{count}</SubTitle>}\n          {selected && (\n            <Switch\n              isChecked={selected.some((selection) => selection === id)}\n              onChange={() => onToggle(id)}\n              aria-label={`${chartName}-${name}`}\n              value={id}\n              key={index}\n            />\n          )}\n        </LegendDetail>\n      ))}\n    </Container>\n  );\n};\n\nLegend.propTypes = {\n  data: PropTypes.array.isRequired,\n  selected: PropTypes.array.isRequired,\n  onToggle: PropTypes.func.isRequired,\n  height: PropTypes.string.isRequired,\n  chartName: PropTypes.string.isRequired,\n};\n\nexport default Legend;\n","import PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport styled from 'styled-components';\n\nimport initializeChart from '.././BaseChart';\nimport Legend from '../../Utilities/Legend';\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nconst GroupedBarChart = ({\n  onClick = null,\n  TooltipClass,\n  legend,\n  ...props\n}) => {\n  const colors = legend.map(({ id, name }) => {\n    return {\n      name,\n      value: props.colorFunc(id),\n      id,\n    };\n  });\n  const [selectedIds, setSelectedIds] = useState(\n    legend.map(({ id }) => id).slice(0, 8)\n  );\n  let timeout = null;\n\n  const handleToggle = (id) => {\n    if (selectedIds.includes(id)) {\n      setSelectedIds(selectedIds.filter((el) => el !== id));\n    } else {\n      setSelectedIds([...selectedIds, id]);\n    }\n  };\n\n  const draw = () => {\n    // Clear our chart container element first\n    d3.selectAll('#' + props.id + ' > *').remove();\n    let { data: unformattedData } = props;\n    const data = unformattedData.reduce((formatted, { date, items }) => {\n      const selectedOrgs = items.filter(({ id }) => selectedIds.includes(id));\n      return formatted.concat({ date, selectedOrgs });\n    }, []);\n    const width = props.getWidth();\n    const height = props.getHeight();\n    // x scale of entire chart\n    const x0 = d3.scaleBand().range([0, width]).padding(0.35);\n    // x scale of individual grouped bars\n    const x1 = d3.scaleBand();\n    const y = d3.scaleLinear().range([height, 0]);\n    // format our X Axis ticks\n    const maxTicksOneMonth = Math.round(data.length / (data.length / 2));\n    const maxTicksTwoMonths = Math.round(data.length / (data.length / 4));\n    let ticks = data.map((d) => d.date);\n    if (data.length > 14) {\n      ticks = data\n        .map((d, i) =>\n          i % (data.length > 31 ? maxTicksTwoMonths : maxTicksOneMonth) === 0\n            ? d.date\n            : undefined\n        )\n        .filter((item) => item);\n    }\n\n    const xAxis = d3.axisBottom(x0).tickValues(ticks).tickFormat(formatDate);\n\n    const yAxis = d3.axisLeft(y).ticks(8).tickSize(-width, 0, 0);\n\n    const svg = d3\n      .select('#' + props.id)\n      .append('svg')\n      .attr('width', width + props.margin.left + props.margin.right)\n      .attr('height', height + props.margin.bottom + props.margin.top)\n      .append('g')\n      .attr(\n        'transform',\n        'translate(' + props.margin.left + ',' + props.margin.top + ')'\n      );\n\n    const dates = data.map((d) => d.date);\n    const tooltip = new TooltipClass({\n      svg: '#' + props.id,\n    });\n    x0.domain(dates);\n    x1.domain(selectedIds).range([0, x0.bandwidth()]);\n    y.domain([\n      0,\n      d3.max(data, (date) =>\n        d3.max(date.selectedOrgs, (d) => d.value * 1.15)\n      ) || 8,\n    ]);\n\n    // add y axis\n    svg\n      .append('g')\n      .attr('class', 'y axis')\n      .call(yAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7')\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 6)\n      .attr('dy', '.71em')\n      .style('text-anchor', 'end')\n      .style('font-weight', 'bold')\n      .text('Value');\n    svg\n      .append('text')\n      .attr('transform', 'rotate(-90)')\n      .attr('y', 0 - props.margin.left)\n      .attr('x', 0 - height / 2)\n      .attr('dy', '1em')\n      .style('text-anchor', 'middle')\n      .text(props.yLabel);\n\n    // add x axis\n    svg\n      .append('g')\n      .attr('class', 'x axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n      .selectAll('line')\n      .attr('stroke', '#d7d7d7');\n    svg\n      .append('text')\n      .attr(\n        'transform',\n        'translate(' + width / 2 + ' ,' + (height + props.margin.top + 25) + ')'\n      )\n      .style('text-anchor', 'middle')\n      .text('Date');\n    // add the groups\n    let slice = svg.selectAll('.slice').data(data);\n    slice.exit().remove();\n\n    const enter = slice\n      .enter()\n      .append('g')\n      .attr('class', 'g foo')\n      .attr('transform', (d) => 'translate(' + x0(d.date) + ',0)');\n    slice = slice.merge(enter);\n    // add the individual bars\n    let bars = slice.selectAll('rect').data(function (d) {\n      return d.selectedOrgs;\n    });\n    bars.exit().remove();\n\n    const color = props.colorFunc;\n    const subEnter = bars\n      .enter()\n      .append('rect')\n      .attr('width', x1.bandwidth())\n      .attr('x', function (d) {\n        return x1(d.id);\n      }) // unsorted\n      .style('fill', function (d) {\n        return color(d.id);\n      })\n      .attr('y', function (d) {\n        return y(d.value);\n      })\n      .attr('height', function (d) {\n        return height - y(d.value);\n      })\n      .on('mouseover', function (d) {\n        d.moreDetail = !d.name.endsWith('Others');\n        d3.select(this).style(\n          'cursor',\n          onClick && d.moreDetail ? 'pointer' : 'default'\n        );\n        d3.select(this).style('fill', d3.rgb(color(d.id)).darker(1));\n        tooltip.handleMouseOver(d);\n      })\n      .on('mousemove', tooltip.handleMouseOver)\n      .on('mouseout', function (d) {\n        d3.select(this).style('fill', color(d.id));\n        tooltip.handleMouseOut();\n      })\n      .on('click', onClick);\n    bars = bars.merge(subEnter);\n  };\n\n  const init = () => {\n    draw();\n  };\n\n  const resize = () => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      draw();\n    }, 500);\n  };\n\n  useEffect(() => {\n    init();\n    window.addEventListener('resize', resize);\n\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [props.data, selectedIds]);\n\n  return (\n    <Wrapper>\n      <div id={props.id} />\n      {colors.length > 0 && (\n        <Legend\n          id={`${props.id}-legend`}\n          data={colors}\n          selected={selectedIds}\n          onToggle={handleToggle}\n          height=\"350px\"\n          chartName={`${props.id}-legend`}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nGroupedBarChart.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  legend: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  colorFunc: PropTypes.func,\n  yLabel: PropTypes.string,\n  onClick: PropTypes.func,\n  TooltipClass: PropTypes.any.isRequired,\n};\n\nGroupedBarChart.defaultProps = {\n  legend: [],\n};\n\nexport default initializeChart(GroupedBarChart);\n","import * as d3 from 'd3';\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class OrgsTooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -12)\n      .attr('rx', 2)\n      .attr('height', 50)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 25)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Date');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 72)\n      .attr('y', 25)\n      .text('0 Jobs');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 10)\n      .attr('font-size', 12)\n      .text('Org');\n\n    this.clickMore = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('x', 20)\n      .attr('y', 30)\n      .attr('font-size', 12)\n      .text('');\n  }\n\n  handleMouseOver = (d) => {\n    let date;\n    let orgName;\n    let jobs;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    } else {\n      const maxLength = 16;\n      date = d.date;\n      orgName = d.name;\n      jobs = d.value;\n      if (d.name.length > maxLength) {\n        orgName = d.name.slice(0, maxLength).concat('...');\n      }\n    }\n\n    let yAdjust = -11;\n\n    // Include 'Click for details' if more detail is available\n    if (d.moreDetail) {\n      this.boundingBox.attr('height', 68);\n      this.boundingBox.attr('y', -23);\n      this.date.attr('y', 25 + yAdjust);\n      this.jobs.attr('y', 25 + yAdjust);\n      this.orgName.attr('y', 10 + yAdjust);\n      this.clickMore.text('Click for details');\n    } else {\n      this.boundingBox.attr('height', 50);\n      this.boundingBox.attr('y', -12);\n      this.date.attr('y', 25);\n      this.jobs.attr('y', 25);\n      this.orgName.attr('y', 10);\n      this.clickMore.text('');\n    }\n\n    const formatTooltipDate = formatDate;\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.date.text('' + formatTooltipDate(date));\n    this.orgName.text('' + orgName);\n    this.jobs.text('' + jobs + ' Jobs');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 45;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n      this.orgName.attr('x', -adjustedWidth - 7);\n      this.date.attr('x', -adjustedWidth - 7);\n      this.clickMore.attr('x', -adjustedWidth - 7);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth / 2);\n      this.date.attr('x', 20);\n      this.clickMore.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import * as d3 from 'd3';\n\nconst formatDate = (date) => {\n  const pieces = date.split('-');\n  return `${pieces[1]}/${pieces[2]}`;\n};\n\nexport default class HostsTooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    this.draw();\n  }\n\n  draw() {\n    this.width = 125;\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n    this.boxWidth = 125;\n    this.textWidthThreshold = 20;\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBox = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -12)\n      .attr('rx', 2)\n      .attr('height', 50)\n      .attr('width', this.boxWidth)\n      .attr('fill', '#393f44');\n    this.date = this.toolTipBase\n      .append('text')\n      .attr('x', 20)\n      .attr('y', 25)\n      .attr('font-size', 12)\n      .attr('fill', 'white')\n      .text('Date');\n    this.jobs = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('x', 72)\n      .attr('y', 25)\n      .text('0 Jobs');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 10)\n      .attr('font-size', 12)\n      .text('Org');\n  }\n\n  handleMouseOver = (d) => {\n    let date;\n    let orgName;\n    let jobs;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    } else {\n      const maxLength = 16;\n      date = d.date;\n      orgName = d.name;\n      jobs = d.value;\n      if (d.name.length > maxLength) {\n        orgName = d.name.slice(0, maxLength).concat('...');\n      }\n    }\n\n    const formatTooltipDate = formatDate;\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.date.text('' + formatTooltipDate(date));\n    this.orgName.text('' + orgName);\n    this.jobs.text('' + jobs + ' Hosts');\n    this.jobsWidth = this.jobs.node().getComputedTextLength();\n\n    const maxTextPerc = (this.jobsWidth / this.boxWidth) * 100;\n    const threshold = 45;\n    const overage = maxTextPerc / threshold;\n    let adjustedWidth;\n    if (maxTextPerc > threshold) {\n      adjustedWidth = this.boxWidth * overage;\n    } else {\n      adjustedWidth = this.boxWidth;\n    }\n\n    this.boundingBox.attr('width', adjustedWidth);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, 0) rotate(45)');\n      this.boundingBox.attr('x', -adjustedWidth - 20);\n      this.jobs.attr('x', -this.jobsWidth - 20 - 7);\n      this.orgName.attr('x', -adjustedWidth - 7);\n      this.date.attr('x', -adjustedWidth - 7);\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, 0) rotate(45)');\n      this.boundingBox.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.jobs.attr('x', adjustedWidth / 2);\n      this.date.attr('x', 20);\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3 from 'd3';\nimport initializeChart from './BaseChart';\nimport { getTotal } from '../Utilities/helpers';\nimport Legend from '../Utilities/Legend';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  flex-shrink: 0;\n`;\n\nclass Tooltip {\n  constructor(props) {\n    this.svg = props.svg;\n    // defer drawing until we know the data shape\n    this.drawn = false;\n    // show the success rate or not\n    this.showSuccess = false;\n  }\n\n  draw(d) {\n    // chart1 has success rate data and chart2 does not ...\n    this.showSuccess = d && d.data && 'success_rate' in d.data ? true : false;\n    const boundingHeight = this.showSuccess ? 70 : 52;\n    const boundingWidth = this.showSuccess ? 120 : 108;\n\n    this.toolTipBase = d3.select(this.svg + '> svg').append('g');\n    this.toolTipBase.attr('id', 'svg-chart-Tooltip.base-' + this.svg.slice(1));\n    this.toolTipBase.attr('overflow', 'visible');\n    this.toolTipBase.style('opacity', 0);\n    this.toolTipBase.style('pointer-events', 'none');\n    this.toolTipBase.attr('transform', 'translate(100, 100)');\n\n    this.toolTipPoint = this.toolTipBase\n      .append('rect')\n      .attr('transform', 'translate(10, -10) rotate(45)')\n      .attr('x', 0)\n      .attr('y', 0)\n      .attr('height', 20)\n      .attr('width', 20)\n      .attr('fill', '#393f44');\n    this.boundingBOx = this.toolTipBase\n      .append('rect')\n      .attr('x', 10)\n      .attr('y', -23)\n      .attr('rx', 2)\n      .attr('height', boundingHeight)\n      .attr('width', boundingWidth)\n      .attr('fill', '#393f44');\n    this.orgName = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 0)\n      .text('Organization');\n    this.percentageTotal = this.toolTipBase\n      .append('text')\n      .attr('fill', 'white')\n      .attr('font-size', 12)\n      .attr('font-weight', 800)\n      .attr('x', 20)\n      .attr('y', 16)\n      .text('0');\n    this.percentageSuccess = null;\n    if (this.showSuccess) {\n      this.percentageSuccess = this.toolTipBase\n        .append('text')\n        .attr('fill', 'white')\n        .attr('font-size', 12)\n        .attr('font-weight', 800)\n        .attr('x', 20)\n        .attr('y', 30)\n        .text('');\n    }\n  }\n\n  handleMouseOver = (d) => {\n    // treat draw() as a singleton to avoid a painted window effect\n    if (this.drawn !== true) {\n      this.draw(d);\n      this.drawn = true;\n    }\n\n    let perc;\n    let percSuccess;\n    let orgName;\n    const x =\n      d3.event.pageX -\n      d3.select(this.svg).node().getBoundingClientRect().x +\n      10;\n    const y =\n      d3.event.pageY -\n      d3.select(this.svg).node().getBoundingClientRect().y -\n      10;\n    if (!d) {\n      return;\n    }\n\n    if (d && d.data) {\n      const maxLength = 16;\n      perc = d.data.percent;\n      percSuccess = d.data.success_rate;\n      orgName = d.data.name;\n      if (d.data.name.length > maxLength) {\n        orgName = d.data.name.slice(0, maxLength - 3).concat('...');\n      }\n    }\n\n    const toolTipWidth = this.toolTipBase.node().getBoundingClientRect().width;\n    const chartWidth = d3\n      .select(this.svg + '> svg')\n      .node()\n      .getBoundingClientRect().width;\n    const overflow = 100 - (toolTipWidth / chartWidth) * 100;\n    const flipped = overflow < (x / chartWidth) * 100;\n\n    this.percentageTotal.text('' + perc + '%');\n    if (percSuccess && this.percentageSuccess) {\n      this.percentageSuccess.text('(' + percSuccess + '% successful)');\n    }\n\n    this.orgName.text(' ' + orgName);\n    this.toolTipBase.attr('transform', 'translate(' + x + ',' + y + ')');\n    if (flipped) {\n      this.toolTipPoint.attr('transform', 'translate(-20, -10) rotate(45)');\n      this.boundingBOx.attr('x', -125);\n      this.orgName.attr('x', -112);\n      this.percentageTotal.attr('x', -112);\n      if (this.showSuccess) {\n        this.percentageSuccess.attr('x', -112);\n      }\n    } else {\n      this.toolTipPoint.attr('transform', 'translate(10, -10) rotate(45)');\n      this.boundingBOx.attr('x', 10);\n      this.orgName.attr('x', 20);\n      this.percentageTotal.attr('x', 20);\n      if (this.showSuccess) {\n        this.percentageSuccess.attr('x', 20);\n      }\n    }\n\n    this.toolTipBase.style('opacity', 1);\n    this.toolTipBase.interrupt();\n  };\n\n  handleMouseOut = () => {\n    this.toolTipBase\n      .transition()\n      .delay(15)\n      .style('opacity', 0)\n      .style('pointer-events', 'none');\n  };\n}\n\nconst PieChart = ({\n  data,\n  id,\n  colorFunc: color,\n  margin,\n  getWidth,\n  getHeight,\n}) => {\n  const colors = data\n    .map(({ id, name, count }) => {\n      return {\n        id,\n        name,\n        value: color(id),\n        count: Math.round(count),\n      };\n    })\n    .sort((a, b) => (a.count > b.count ? 1 : b.count > a.count ? -1 : 0));\n\n  const [selectedIds, setSelectedIds] = useState(\n    data.map(({ id }) => id).slice(0, 8)\n  );\n\n  let timeout = null;\n\n  const handleToggle = (id) => {\n    if (selectedIds.includes(id)) {\n      setSelectedIds(selectedIds.filter((el) => el !== id));\n    } else {\n      setSelectedIds([...selectedIds, id]);\n    }\n  };\n\n  const draw = () => {\n    d3.selectAll('#' + id + ' > *').remove();\n    const width = getWidth();\n    const height = getHeight();\n    const svg = d3\n      .select('#' + id)\n      .append('svg')\n      .attr('width', width + margin.left + margin.right)\n      .attr('height', height + margin.bottom)\n      .append('g');\n\n    svg.append('g').attr('class', 'slices');\n    svg.append('g').attr('class', 'labels');\n    svg.append('g').attr('class', 'lines');\n    const radius = Math.min(width, height) / 2;\n    const filteredData = data.filter(({ id }) => selectedIds.includes(id));\n    const total = getTotal(filteredData);\n    filteredData.forEach(function (d) {\n      d.count = +d.count;\n      d.percent = +Math.round((d.count / total) * 100);\n    });\n    const donutTooltip = new Tooltip({\n      svg: '#' + id,\n    });\n    const pie = d3\n      .pie()\n      .sort(null)\n      .value((d) => d.count);\n    const arc = d3\n      .arc()\n      .outerRadius(radius - 10) // controls top positioning of chart\n      .innerRadius(0);\n\n    svg.attr(\n      'transform',\n      'translate(' +\n        (width + margin.left + margin.right) / 2 +\n        ',' +\n        (height + margin.top + margin.bottom) / 2 +\n        ')'\n    );\n\n    svg\n      .selectAll('path')\n      .data(pie(filteredData))\n      .enter()\n      .append('path')\n      .attr('d', arc)\n      .attr('fill', (d) => color(d.data.id));\n\n    svg\n      .selectAll('path')\n      .on('mouseover', function (d) {\n        d3.select(this).style('fill', d3.rgb(color(d.data.id)).darker(1));\n        donutTooltip.handleMouseOver(d);\n      })\n      .on('mouseout', function (d) {\n        d3.select(this).style('fill', color(d.data.id));\n        donutTooltip.handleMouseOut();\n      })\n      .on('mousemove', donutTooltip.handleMouseOver);\n\n    svg.append('g').classed('labels', true);\n    svg.append('g').classed('lines', true);\n  };\n\n  const init = () => {\n    draw();\n  };\n\n  const resize = () => {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      draw();\n    }, 500);\n  };\n\n  useEffect(() => {\n    init();\n    window.addEventListener('resize', resize);\n\n    return () => {\n      clearTimeout(timeout);\n      window.removeEventListener('resize', resize);\n    };\n  }, []);\n\n  useEffect(() => {\n    draw();\n  }, [data, selectedIds]);\n\n  return (\n    <Wrapper>\n      <div id={id} />\n      {colors.length > 0 && (\n        <Legend\n          id={`${id}-legend`}\n          data={colors}\n          selected={selectedIds}\n          onToggle={handleToggle}\n          height=\"300px\"\n          chartName={`${id}-legend`}\n        />\n      )}\n    </Wrapper>\n  );\n};\n\nPieChart.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.array,\n  margin: PropTypes.object,\n  getHeight: PropTypes.func,\n  getWidth: PropTypes.func,\n  colorFunc: PropTypes.func,\n};\n\nexport default initializeChart(PieChart);\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport useRedirect from '../../Utilities/useRedirect';\nimport { formatDate as dateForJobExplorer } from '../../Utilities/helpers';\n\nimport LoadingState from '../../Components/LoadingState';\nimport NoData from '../../Components/NoData';\nimport EmptyState from '../../Components/EmptyState';\nimport ApiErrorState from '../../Components/ApiErrorState';\n\nimport {\n  preflightRequest,\n  readJobExplorer,\n  readHostExplorer,\n  readOrgOptions,\n} from '../../Api';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  Card,\n  CardBody,\n  CardTitle as PFCardTitle,\n  Tabs,\n  Tab,\n} from '@patternfly/react-core';\n\nimport {\n  GroupedBarChart,\n  OrgsTooltip,\n  HostsTooltip,\n} from '../../Charts/GroupedBarChart/';\nimport PieChart from '../../Charts/PieChart';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport { organizationStatistics as constants } from '../../Utilities/constants';\n\n// For chart colors\nimport { pfmulti } from '../../Utilities/colors';\nimport { scaleOrdinal } from 'd3';\n\nconst CardTitle = styled(PFCardTitle)`\n  border-bottom: 2px solid #ebebeb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  &&& {\n    min-height: 60px;\n    --pf-c-card--first-child--PaddingTop: 10px;\n    --pf-c-card__header--not-last-child--PaddingBottom: 10px;\n\n    h3 {\n      font-size: 0.875em;\n    }\n  }\n`;\n\nconst CardContainer = styled.div`\n  display: flex;\n  overflow: hidden;\n\n  .pf-c-card {\n    width: 50%;\n    margin-top: 20px;\n    overflow: auto;\n  }\n\n  .pf-c-card:first-of-type {\n    margin-right: 20px;\n  }\n`;\n\nconst TopCard = styled(Card)`\n  min-height: 500px;\n`;\n\nconst colorFunc = scaleOrdinal(pfmulti);\n\nconst orgsChartMapper =\n  (attrName) =>\n  ({ dates: data = [], meta }) => ({\n    data: data.map(({ date, items }) => ({\n      date,\n      items: items.map(({ id, [attrName]: value, name }) => ({\n        id,\n        date,\n        value,\n        name: name || 'No organization',\n      })),\n    })),\n    legend: meta.legend.map((el) => ({\n      ...el,\n      name: el.name || 'No organization',\n    })),\n  });\n\nconst pieChartMapper =\n  (attrName) =>\n  ({ items = [] }) =>\n    items.map(({ id, [attrName]: count, name }) => ({\n      id,\n      count,\n      name: name || 'No organization',\n    }));\n\nconst redirectToJobExplorer =\n  (toJobExplorer, queryParams) =>\n  ({ date, id }) => {\n    if (id === -1) {\n      // disable clicking on \"others\" block\n      return;\n    }\n\n    const { sort_by, ...rest } = queryParams;\n    const formattedDate = dateForJobExplorer(date);\n    const initialQueryParams = {\n      ...rest,\n      quick_date_range: 'custom',\n      start_date: formattedDate,\n      end_date: formattedDate,\n      status: [\n        'successful',\n        'failed',\n        'new',\n        'pending',\n        'waiting',\n        'error',\n        'canceled',\n        'running',\n      ],\n      org_id: [id],\n    };\n\n    toJobExplorer(initialQueryParams);\n  };\n\nconst chartMapper = [\n  {\n    api: readJobExplorer,\n    attr: 'total_count',\n    label: 'Jobs across organizations',\n    onClick: redirectToJobExplorer,\n    tooltip: OrgsTooltip,\n  },\n  {\n    api: readHostExplorer,\n    attr: 'total_unique_host_count',\n    label: 'Hosts across organizations',\n    onClick: () => null,\n    tooltip: HostsTooltip,\n  },\n];\n\nconst OrganizationStatistics = ({ history }) => {\n  const toJobExplorer = useRedirect(history, 'jobExplorer');\n  const [preflight, setPreflight] = useApi(null);\n  const [activeTabKey, setActiveTabKey] = useState(0);\n  const [orgs, setOrgs] = useApi(\n    [],\n    orgsChartMapper(chartMapper[activeTabKey].attr)\n  );\n  const [jobs, setJobs] = useApi([], pieChartMapper('total_count'));\n  const [tasks, setTasks] = useApi([], pieChartMapper('host_task_count'));\n  const [options, setOptions] = useApi({});\n  const { queryParams, setFromToolbar } = useQueryParams(\n    constants.defaultParams\n  );\n\n  const jobEventsByOrgParams = {\n    ...queryParams,\n    attributes: ['host_task_count'],\n    group_by: 'org',\n    include_others: true,\n    sort_by: `host_task_count:desc`,\n  };\n\n  const jobRunsByOrgParams = {\n    ...queryParams,\n    attributes: ['total_count'],\n    group_by: 'org',\n    include_others: true,\n    sort_by: `total_count:desc`,\n  };\n\n  const jobsByDateAndOrgParams = {\n    ...queryParams,\n    attributes: ['total_count'],\n    group_by: 'org',\n    group_by_time: true,\n    sort_by: `total_count:desc`,\n  };\n\n  const hostAcrossOrgParams = {\n    ...queryParams,\n    attributes: ['total_unique_host_count'],\n    group_by: 'org',\n    group_by_time: true,\n    sort_by: `host_task_count:desc`,\n  };\n\n  const handleTabClick = (_, tabIndex) => {\n    setActiveTabKey(tabIndex);\n  };\n\n  useEffect(() => {\n    insights.chrome.appNavClick({\n      id: 'organization-statistics',\n      secondaryNav: true,\n    });\n    setPreflight(preflightRequest());\n    setOptions(readOrgOptions({ params: queryParams }));\n  }, []);\n\n  useEffect(() => {\n    const { api: readJobsOrHosts } = chartMapper[activeTabKey];\n    const params =\n      activeTabKey === 0 ? jobsByDateAndOrgParams : hostAcrossOrgParams;\n    setOrgs(readJobsOrHosts({ params }));\n  }, [queryParams, activeTabKey]);\n\n  useEffect(() => {\n    setJobs(readJobExplorer({ params: jobRunsByOrgParams }));\n    setTasks(readJobExplorer({ params: jobEventsByOrgParams }));\n  }, [queryParams]);\n\n  if (preflight?.error?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Organization Statistics'} />\n        <FilterableToolbar\n          categories={options.data}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n        />\n      </PageHeader>\n      {preflight.error && (\n        <Main>\n          <EmptyState preflightError={preflight.error} />\n        </Main>\n      )}\n      {preflight.isSuccess && (\n        <React.Fragment>\n          <Main>\n            <TopCard>\n              <Tabs activeKey={activeTabKey} onSelect={handleTabClick}>\n                <Tab eventKey={0} title={'Jobs'} />\n                <Tab eventKey={1} title={'Hosts'} />\n              </Tabs>\n              <CardBody>\n                {orgs.isLoading && <LoadingState />}\n                {orgs.error && <ApiErrorState message={orgs.error.error} />}\n                {orgs.isSuccess && orgs.data?.data.length <= 0 && <NoData />}\n                {orgs.isSuccess && orgs.data?.data.length > 0 && (\n                  <GroupedBarChart\n                    margin={{ top: 20, right: 20, bottom: 50, left: 50 }}\n                    id=\"d3-grouped-bar-chart-root\"\n                    data={orgs.data.data}\n                    legend={orgs.data.legend}\n                    history={history}\n                    colorFunc={colorFunc}\n                    yLabel={chartMapper[activeTabKey].label}\n                    onClick={chartMapper[activeTabKey].onClick(\n                      toJobExplorer,\n                      queryParams\n                    )}\n                    TooltipClass={chartMapper[activeTabKey].tooltip}\n                  />\n                )}\n              </CardBody>\n            </TopCard>\n            <CardContainer>\n              <Card>\n                <CardBody style={{ padding: 0 }}>\n                  <CardTitle style={{ padding: 0 }}>\n                    <h2 style={{ marginLeft: '20px' }}>\n                      Job Runs by Organization\n                    </h2>\n                  </CardTitle>\n                  {jobs.isLoading && <LoadingState />}\n                  {jobs.error && <ApiErrorState message={jobs.error.error} />}\n                  {jobs.isSuccess && jobs.data.length <= 0 && <NoData />}\n                  {jobs.isSuccess && jobs.data.length > 0 && (\n                    <PieChart\n                      margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                      id=\"d3-donut-1-chart-root\"\n                      data={jobs.data}\n                      colorFunc={colorFunc}\n                    />\n                  )}\n                </CardBody>\n              </Card>\n              <Card>\n                <CardBody style={{ padding: 0 }}>\n                  <CardTitle style={{ padding: 0 }}>\n                    <h2 style={{ marginLeft: '20px' }}>\n                      Usage by Organization (Tasks)\n                    </h2>\n                  </CardTitle>\n                  {tasks.isLoading && <LoadingState />}\n                  {tasks.error && <ApiErrorState message={tasks.error.error} />}\n                  {tasks.isSuccess && tasks.data.length <= 0 && <NoData />}\n                  {tasks.isSuccess && tasks.data.length > 0 && (\n                    <PieChart\n                      margin={{ top: 20, right: 20, bottom: 0, left: 20 }}\n                      id=\"d3-donut-2-chart-root\"\n                      data={tasks.data}\n                      colorFunc={colorFunc}\n                    />\n                  )}\n                </CardBody>\n              </Card>\n            </CardContainer>\n          </Main>\n        </React.Fragment>\n      )}\n    </React.Fragment>\n  );\n};\n\nOrganizationStatistics.propTypes = {\n  history: PropTypes.object,\n};\n\nexport default OrganizationStatistics;\n","var pfmulti = [\n    '#06C',\n    '#4CB140',\n    '#009596',\n    '#5752D1',\n    '#F4C145',\n    '#EC7A08',\n    '#8BC1F7',\n    '#23511E',\n    '#A2D9D9',\n    '#2A265F',\n    '#F9E0A2',\n    '#8F4700',\n    '#002F5D'\n];\nexport { pfmulti };\n","import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { Card, CardBody } from '@patternfly/react-core';\n\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport Breadcrumbs from '../../../Components/Breadcrumbs';\n\nimport useApi from '../../../Utilities/useApi';\n\nimport { readPlanOptions } from '../../../Api';\n\nimport Form from '../Shared/Form';\n\nimport { Paths } from '../../../paths';\n\nconst Add = () => {\n  const [options, setOptions] = useApi({});\n  useEffect(() => {\n    setOptions(readPlanOptions());\n  }, []);\n  const canWrite =\n    options.isSuccess &&\n    (options.data?.meta?.rbac?.perms?.write === true ||\n      options.data?.meta?.rbac?.perms?.all === true);\n  const title = 'Create new plan';\n\n  const showAdd = () => (\n    <>\n      <PageHeader>\n        <Breadcrumbs\n          items={[{ title: 'Savings Planner', navigate: '/savings-planner' }]}\n        />\n        <PageHeaderTitle title={title} />\n      </PageHeader>\n      <Main>\n        <Card>\n          <CardBody>\n            <Form title={title} options={options} />\n          </CardBody>\n        </Card>\n      </Main>\n    </>\n  );\n  if (options.isSuccess) {\n    return canWrite ? showAdd() : <Redirect to={Paths.savingsPlanner} />;\n  }\n  return null;\n};\n\nexport default Add;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { CardActions } from '@patternfly/react-core';\nimport styled from 'styled-components';\n\nconst CardActionsWrapper = styled.div`\n  margin-top: 20px;\n  --pf-c-card__actions--PaddingLeft: 0;\n`;\n\nconst CardActionsRow = ({ children }) => {\n  return (\n    <CardActionsWrapper>\n      <CardActions>{children}</CardActions>\n    </CardActionsWrapper>\n  );\n};\n\nCardActionsRow.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default CardActionsRow;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\nimport { Button, Badge, Alert, Tooltip } from '@patternfly/react-core';\nimport AlertModal from '../AlertModal';\nimport { getRelatedResourceDeleteCounts } from '../../Utilities/getRelatedResourceDeleteDetails';\nimport ErrorDetail from '../ErrorDetail';\n\nconst WarningMessage = styled(Alert)`\n  margin-top: 10px;\n`;\n\nconst Label = styled.span`\n  && {\n    margin-right: 10px;\n  }\n`;\n\nconst DeleteButton = ({\n  onConfirm,\n  modalTitle = 'Delete',\n  name = '',\n  variant = 'secondary',\n  isDisabled = false,\n  ouiaId = null,\n  deleteMessage = 'Delete?',\n  deleteDetailsRequests = [],\n  disabledTooltip = 'This item cannot be deleted',\n  children,\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [deleteMessageError, setDeleteMessageError] = useState();\n  const [deleteDetails, setDeleteDetails] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n\n  const toggleModal = async (isModalOpen) => {\n    setIsLoading(true);\n    if (deleteDetailsRequests.length > 0 && isModalOpen) {\n      const { results, error } = await getRelatedResourceDeleteCounts(\n        deleteDetailsRequests\n      );\n      if (error) {\n        setDeleteMessageError(error);\n      } else {\n        setDeleteDetails(results);\n      }\n    }\n    setIsLoading(false);\n    setIsOpen(isModalOpen);\n  };\n\n  if (deleteMessageError) {\n    return (\n      <AlertModal\n        isOpen={!!deleteMessageError}\n        variant={'error'}\n        title={'Error!'}\n        onClose={() => {\n          toggleModal(false);\n          setDeleteMessageError();\n        }}\n      >\n        <ErrorDetail error={deleteMessageError} />\n      </AlertModal>\n    );\n  }\n\n  return (\n    <>\n      {disabledTooltip ? (\n        <Tooltip content={disabledTooltip} position=\"top\">\n          <div>\n            <Button\n              spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n              variant={variant || 'secondary'}\n              aria-label={'Delete'}\n              isDisabled={isDisabled}\n              onClick={() => toggleModal(true)}\n              ouiaId={ouiaId}\n            >\n              {children || 'Delete'}\n            </Button>\n          </div>\n        </Tooltip>\n      ) : (\n        <Button\n          ouiaId={ouiaId}\n          spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n          variant={variant || 'secondary'}\n          aria-label={'Delete'}\n          isDisabled={isDisabled}\n          onClick={() => toggleModal(true)}\n        >\n          {children || 'Delete'}\n        </Button>\n      )}\n      <AlertModal\n        isOpen={isOpen}\n        title={modalTitle}\n        variant=\"danger\"\n        onClose={() => toggleModal(false)}\n        actions={[\n          <Button\n            ouiaId=\"delete-modal-confirm\"\n            key=\"delete\"\n            variant=\"danger\"\n            aria-label={'Confirm Delete'}\n            isDisabled={isDisabled}\n            onClick={() => {\n              onConfirm();\n              toggleModal(false);\n            }}\n          >\n            {'Delete'}\n          </Button>,\n          <Button\n            ouiaId=\"delete-modal-cancel\"\n            key=\"cancel\"\n            variant=\"link\"\n            aria-label={'Cancel'}\n            onClick={() => toggleModal(false)}\n          >\n            {'Cancel'}\n          </Button>,\n        ]}\n      >\n        {'Are you sure you want to delete:'}\n        <br />\n        <strong>{name}</strong>\n        {Object.values(deleteDetails).length > 0 && (\n          <WarningMessage\n            variant=\"warning\"\n            isInline\n            title={\n              <div>\n                <div aria-label={deleteMessage}>{deleteMessage}</div>\n                <br />\n                {Object.entries(deleteDetails).map(([key, value]) => (\n                  <div aria-label={`${key}: ${value}`} key={key}>\n                    <Label>{key}</Label> <Badge>{value}</Badge>\n                  </div>\n                ))}\n              </div>\n            }\n          />\n        )}\n      </AlertModal>\n    </>\n  );\n};\n\nDeleteButton.propTypes = {\n  onConfirm: PropTypes.func.isRequired,\n  modalTitle: PropTypes.string,\n  name: PropTypes.string,\n  variant: PropTypes.object,\n  isDisabled: PropTypes.bool,\n  ouiaId: PropTypes.string,\n  deleteMessage: PropTypes.string,\n  deleteDetailsRequests: PropTypes.array,\n  disabledTooltip: PropTypes.bool,\n  children: PropTypes.node,\n};\n\nexport default DeleteButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { shape, string, number, arrayOf, node, oneOfType } from 'prop-types';\nimport { Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nconst RoutedTabs = ({ tabsArray, defaultTabId }) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const getActiveTabId = (defaultTabId) => {\n    return (\n      tabsArray.find((tab) => tab.link === location.pathname)?.id ||\n      defaultTabId\n    );\n  };\n\n  const handleTabSelect = (_, eventKey) => {\n    const match = tabsArray.find((tab) => tab.id === eventKey);\n    if (match) {\n      history.push(match.link);\n    }\n  };\n\n  return (\n    <Tabs activeKey={getActiveTabId(defaultTabId)} onSelect={handleTabSelect}>\n      {tabsArray.map((tab) => (\n        <Tab\n          aria-label={typeof tab.name === 'string' ? tab.name : `${tab.id} tab`}\n          eventKey={tab.id}\n          key={tab.id}\n          link={tab.link}\n          title={<TabTitleText>{tab.name}</TabTitleText>}\n          role=\"tab\"\n        />\n      ))}\n    </Tabs>\n  );\n};\n\nRoutedTabs.propTypes = {\n  defaultTabId: PropTypes.number,\n  tabsArray: arrayOf(\n    shape({\n      id: number.isRequired,\n      link: string.isRequired,\n      name: oneOfType([string.isRequired, node.isRequired]),\n    })\n  ).isRequired,\n};\n\nRoutedTabs.defaultProps = {\n  defaultTabId: 1,\n};\n\nexport default RoutedTabs;\n","import React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\nimport { Paths } from '../../paths';\nimport { stringify } from 'query-string';\n\nimport { useHistory } from 'react-router-dom';\n\nimport { Button } from '@patternfly/react-core';\n\nimport {\n  CardBody as PFCardBody,\n  CardFooter,\n  DescriptionList,\n  DescriptionListTerm,\n  DescriptionListGroup,\n  DescriptionListDescription,\n  Divider,\n  Label,\n  TextContent,\n  List,\n  ListItem,\n} from '@patternfly/react-core';\nimport CardActionsRow from '../../Components/CardActionsRow';\nimport {\n  relatedResourceDeleteRequests,\n  getRelatedResourceDeleteCounts,\n} from '../../Utilities/getRelatedResourceDeleteDetails';\nimport { deletePlan, readPlan } from '../../Api';\nimport useRequest, { useDismissableError } from '../../Utilities/useRequest';\nimport DeleteButton from '../../Components/DeleteButton/DeleteButton';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\nimport { formatDateTime } from '../../Utilities/helpers';\nimport RoutedTabs from '../../Components/RoutedTabs';\nimport AlertModal from '../../Components/AlertModal/AlertModal';\nimport ErrorDetail from '../../Components/ErrorDetail/ErrorDetail';\n\nconst CardBody = styled(PFCardBody)`\n  min-height: 500px;\n  padding: 0;\n  padding-bottom: 20px;\n\n  &:first-child {\n    padding-top: 0;\n  }\n`;\n\nconst DetailsTab = ({ tabsArray, plans, canWrite }) => {\n  let history = useHistory();\n  const {\n    id,\n    automation_status,\n    category,\n    description,\n    frequency_period,\n    hosts,\n    manual_time,\n    modified,\n    name,\n    tasks,\n    template_details,\n    template_id,\n  } = plans[0];\n\n  const redirectToJobExplorer = (templateId) => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      quick_date_range: 'last_30_days',\n      status: ['failed', 'successful'],\n      template_id: [templateId],\n    };\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const showTemplate = (template_details) => {\n    if (!template_details.id) {\n      return;\n    }\n\n    return (\n      <a onClick={() => redirectToJobExplorer(template_details.id)}>\n        {template_details.name}\n      </a>\n    );\n  };\n\n  const labelsAndValues = {\n    Name: name || undefined,\n    'Automation Type': category || undefined,\n    Description: description || undefined,\n    'Manual Time': manual_time || undefined,\n    'Run on hosts': hosts || undefined,\n    Frequency: frequency_period || undefined,\n    Template: template_id ? showTemplate(template_details) : undefined,\n    'Automation status':\n      automation_status.status === 'successful' ? (\n        <Label variant=\"outline\" color=\"green\" icon={<CheckCircleIcon />}>\n          Running\n        </Label>\n      ) : (\n        <Label variant=\"outline\" color=\"red\" icon={<ExclamationCircleIcon />}>\n          Not Running\n        </Label>\n      ),\n    'Last updated': modified ? <em>{formatDateTime(modified)}</em> : undefined,\n  };\n\n  const { request: deletePlans, error: deleteError } = useRequest(\n    useCallback(async () => {\n      await deletePlan({ params: { id: id } });\n      history.push(`/savings-planner`);\n    }, [id, history])\n  );\n\n  const {\n    result: { isDeleteDisabled },\n    error: deleteDetailsError,\n    request: fetchDeleteDetails,\n  } = useRequest(\n    useCallback(async () => {\n      const { results: deleteDetails, error } =\n        await getRelatedResourceDeleteCounts(\n          relatedResourceDeleteRequests.savingsPlan(plans[0], readPlan)\n        );\n      if (error) {\n        throw new Error(error);\n      }\n      if (deleteDetails) {\n        return { isDeleteDisabled: true };\n      }\n      return { isDeleteDisabled: false };\n    }, [plans[0]]),\n    { isDeleteDisabled: false }\n  );\n\n  useEffect(() => {\n    fetchDeleteDetails();\n  }, [fetchDeleteDetails]);\n  const { error, dismissError } = useDismissableError(\n    deleteError || deleteDetailsError\n  );\n\n  return (\n    <>\n      {plans && (\n        <>\n          <CardBody>\n            <RoutedTabs tabsArray={tabsArray} />\n            <div style={{ padding: '1rem' }}>\n              <DescriptionList isHorizontal columnModifier={{ lg: '3Col' }}>\n                {Object.keys(labelsAndValues).map(\n                  (key, i) =>\n                    labelsAndValues[key] !== undefined && (\n                      <DescriptionListGroup key={i}>\n                        <DescriptionListTerm>{key}</DescriptionListTerm>\n                        <DescriptionListDescription>\n                          {labelsAndValues[key]}\n                        </DescriptionListDescription>\n                      </DescriptionListGroup>\n                    )\n                )}\n              </DescriptionList>\n              {tasks.length > 0 && (\n                <>\n                  <Divider style={{ padding: '1rem' }} component=\"div\" />\n                  <DescriptionListTerm>Tasks</DescriptionListTerm>\n                  <TextContent>\n                    <List component=\"ol\" type=\"1\">\n                      {tasks.map(({ id, task }) => (\n                        <ListItem key={id}>{task}</ListItem>\n                      ))}\n                    </List>\n                  </TextContent>\n                </>\n              )}\n            </div>\n          </CardBody>\n          {canWrite && (\n            <CardFooter>\n              <CardActionsRow>\n                <Button\n                  key=\"edit-plan-button\"\n                  variant=\"primary\"\n                  aria-label=\"Edit plan\"\n                  onClick={() => {\n                    history.push({\n                      pathname: `${Paths.savingsPlan}${id}/edit`,\n                    });\n                  }}\n                >\n                  Edit\n                </Button>\n                <DeleteButton\n                  key={'delete-plan-button'}\n                  name={name}\n                  modalTitle={'Delete Plan'}\n                  onConfirm={deletePlans}\n                  disabledTooltip={\n                    isDeleteDisabled && 'This plan cannot be deleted'\n                  }\n                >\n                  {'Delete'}\n                </DeleteButton>\n              </CardActionsRow>\n              {error && (\n                <AlertModal\n                  isOpen={error}\n                  onClose={dismissError}\n                  title={'Error'}\n                  variant=\"error\"\n                >\n                  <ErrorDetail error={error} />\n                </AlertModal>\n              )}\n            </CardFooter>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nDetailsTab.propTypes = {\n  plans: PropTypes.array,\n  tabsArray: PropTypes.array,\n  canWrite: PropTypes.bool.isRequired,\n};\n\nexport default DetailsTab;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle, Title } from '@patternfly/react-core';\nvar floatToStringWithCommas = function (total) {\n    return total\n        .toFixed(2)\n        .toString()\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n};\nvar TotalSavings = function (_a) {\n    var _b = _a.value, value = _b === void 0 ? 0 : _b, _c = _a.isMoney, isMoney = _c === void 0 ? true : _c;\n    return (React.createElement(Card, { isPlain: true },\n        React.createElement(CardTitle, { style: { paddingBottom: '0' } }, \"Total savings\"),\n        React.createElement(CardBody, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"4xl\", style: { color: isMoney ? '#81C46B' : '#0063CF' } }, isMoney ? \"$ \" + floatToStringWithCommas(value) : value.toFixed(0) + \" hours\"))));\n};\nTotalSavings.propTypes = {\n    value: PropTypes.number,\n    isMoney: PropTypes.bool\n};\nexport default TotalSavings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, CardBody, CardTitle } from '@patternfly/react-core';\nvar FormulaDescription = function (_a) {\n    var _b = _a.isMoney, isMoney = _b === void 0 ? true : _b;\n    return (React.createElement(Card, { isPlain: true },\n        React.createElement(CardTitle, null, \"Automation formula\"),\n        React.createElement(CardBody, null,\n            React.createElement(\"p\", null,\n                React.createElement(\"b\", null, \"Manual cost for template x\"),\n                \" =\",\n                React.createElement(\"em\", null, \"(time for a manual run on one host in hours * (sum of all hosts across all job runs) ) \" + (isMoney ? '* cost per hour' : ''))),\n            React.createElement(\"p\", null,\n                React.createElement(\"b\", null, \"Automation cost for template x\"),\n                \" =\",\n                React.createElement(\"em\", null, \"cost of automation per hour * sum of total elapsed hours for a template\")),\n            React.createElement(\"p\", null,\n                React.createElement(\"b\", null, \"Savings\"),\n                \" =\",\n                React.createElement(\"em\", null, \"Sum of (manual cost - automation cost) across all templates\")))));\n};\nFormulaDescription.propTypes = {\n    isMoney: PropTypes.bool\n};\nexport default FormulaDescription;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React, { useState } from 'react';\nimport { Card, CardActions, CardBody, CardHeader, CardTitle, Grid, GridItem, List, ListItem, ToggleGroup, ToggleGroupItem } from '@patternfly/react-core';\nimport { SquareFullIcon } from '@patternfly/react-icons';\nimport ChartRenderer, { functions, ChartKind, ChartThemeColor, ChartType, ChartTopLevelType, ApiType, } from 'react-json-chart-builder';\nimport RoutedTabs from '../../Components/RoutedTabs';\nimport TotalSavings from \"./TotalSavings\";\nimport FormulaDescription from './FormulaDescription';\n;\n;\nvar yearLabels = {\n    initial: 'Initial',\n    year1: 'Year 1',\n    year2: 'Year 2',\n    year3: 'Year 3',\n};\nvar getChartData = function (data) {\n    var statsData = Object.keys(yearLabels).map(function (year) { return ({\n        year: yearLabels[year],\n        total_costs: +data.projections.monetary_stats.total_costs[year] * -1,\n        total_benefits: +data.projections.monetary_stats.total_benefits[year],\n        cumulative_net_benefits: +data.projections.monetary_stats.cumulative_net_benefits[year],\n        total_hours_spent_risk_adjusted: +data.projections.time_stats.total_hours_spent_risk_adjusted[year] * -1,\n        total_hours_saved: +data.projections.time_stats.total_hours_saved[year],\n        cumulative_time_net_benefits: +data.projections.time_stats.cumulative_time_net_benefits[year]\n    }); });\n    return { items: statsData, type: ApiType.nonGrouped, response_type: '' };\n};\nvar constants = function (isMoney) { return ({\n    cost: {\n        key: isMoney ? 'total_costs' : 'total_hours_spent_risk_adjusted',\n        color: '#8B8D8F',\n    },\n    benefit: {\n        key: isMoney ? 'total_benefits' : 'total_hours_saved',\n        color: isMoney ? '#81C46B' : '#0063CF',\n    },\n    net: {\n        key: isMoney ? 'cumulative_net_benefits' : 'cumulative_time_net_benefits',\n        color: '#EE7A00'\n    }\n}); };\nvar StatisticsTab = function (_a) {\n    var tabsArray = _a.tabsArray, data = _a.data;\n    var _b = useState(true), isMoney = _b[0], setIsMoney = _b[1];\n    var computeTotalSavings = function (d) {\n        return isMoney\n            ? d.projections.monetary_stats.cumulative_net_benefits.year3\n            : d.projections.time_stats.cumulative_time_net_benefits.year3;\n    };\n    var barChartData = {\n        charts: [\n            {\n                id: 1000,\n                kind: ChartKind.wrapper,\n                type: ChartTopLevelType.chart,\n                parent: null,\n                props: {\n                    height: 600,\n                    domainPadding: {\n                        x: 100\n                    },\n                    padding: {\n                        bottom: 60,\n                        left: 80\n                    },\n                    themeColor: ChartThemeColor.gray\n                },\n                tooltip: {\n                    cursor: true,\n                    stickToAxis: 'x'\n                },\n                xAxis: {\n                    label: 'Time',\n                },\n                yAxis: {\n                    label: isMoney ? 'Money Saved' : 'Hours Saved',\n                    tickFormat: 'formatNumberAsK',\n                    style: {\n                        grid: { stroke: '#D2D2D2' },\n                        axisLabel: { padding: 60 }\n                    },\n                },\n            },\n            {\n                id: 1001,\n                kind: ChartKind.stack,\n                parent: 1000,\n                props: {},\n            },\n            {\n                id: 1102,\n                kind: ChartKind.simple,\n                type: ChartType.bar,\n                parent: 1001,\n                props: {\n                    x: 'year',\n                    y: constants(isMoney).benefit.key,\n                    barRatio: 0.8,\n                    barWidth: 0,\n                    style: {\n                        data: {\n                            fill: constants(isMoney).benefit.color,\n                            width: 120,\n                        },\n                    },\n                },\n                tooltip: {\n                    labelName: 'Savings',\n                },\n            },\n            {\n                id: 1101,\n                kind: ChartKind.simple,\n                type: ChartType.bar,\n                parent: 1001,\n                props: {\n                    x: 'year',\n                    y: constants(isMoney).cost.key,\n                    barRatio: 0.8,\n                    barWidth: 0,\n                    style: {\n                        data: {\n                            fill: constants(isMoney).cost.color,\n                            width: 120,\n                        },\n                    },\n                },\n                tooltip: {\n                    labelName: 'Costs',\n                },\n            },\n            {\n                id: 1002,\n                kind: ChartKind.simple,\n                type: ChartType.line,\n                parent: 1000,\n                props: {\n                    x: 'year',\n                    y: constants(isMoney).net.key,\n                    style: {\n                        data: {\n                            stroke: constants(isMoney).net.color,\n                            strokeWidth: 5\n                        },\n                    },\n                },\n                tooltip: {\n                    labelName: 'Cumulative savings over time',\n                },\n            },\n        ],\n        functions: __assign(__assign({}, functions), { fetchFnc: function () { return new Promise(function (resolve) { resolve(getChartData(data)); }); } }),\n    };\n    var renderLeft = function () { return (React.createElement(Card, { isPlain: true },\n        React.createElement(CardHeader, null,\n            React.createElement(CardActions, null,\n                React.createElement(ToggleGroup, { \"aria-label\": \"toggleButton\" },\n                    React.createElement(ToggleGroupItem, { text: 'Money', buttonId: 'money', isSelected: isMoney, onChange: function () { return setIsMoney(true); } }),\n                    React.createElement(ToggleGroupItem, { text: 'Time', buttonId: 'time', isSelected: !isMoney, onChange: function () { return setIsMoney(false); } }))),\n            React.createElement(CardTitle, null, data.name)),\n        React.createElement(CardBody, null,\n            React.createElement(ChartRenderer, { schema: barChartData.charts, functions: barChartData.functions })))); };\n    var renderRight = function () { return (React.createElement(React.Fragment, null,\n        React.createElement(TotalSavings, { value: computeTotalSavings(data), isMoney: isMoney }),\n        React.createElement(Card, { isPlain: true },\n            React.createElement(CardBody, null,\n                React.createElement(List, { isPlain: true },\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).benefit.color }) }, \"Savings from automating this plan\"),\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).cost.color }) }, \"Costs from creating, maintaining and running the automation\"),\n                    React.createElement(ListItem, { icon: React.createElement(SquareFullIcon, { color: constants(isMoney).net.color }) }, \"Cumulative savings over time\")))),\n        React.createElement(FormulaDescription, { isMoney: isMoney }))); };\n    return (React.createElement(Card, null,\n        React.createElement(RoutedTabs, { tabsArray: tabsArray }),\n        React.createElement(Grid, null,\n            React.createElement(GridItem, { span: 9 }, renderLeft()),\n            React.createElement(GridItem, { span: 3 }, renderRight()))));\n};\nexport default StatisticsTab;\n","import React, { useEffect } from 'react';\nimport { Redirect, useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport useApi from '../../../Utilities/useApi';\n\nimport { readPlanOptions } from '../../../Api';\nimport { Paths } from '../../../paths';\n\nimport Form from '../Shared/Form';\n\nconst Edit = ({ data }) => {\n  const [options, setOptions] = useApi({});\n  const { id } = useParams();\n\n  useEffect(() => {\n    setOptions(readPlanOptions());\n  }, []);\n\n  const canWrite =\n    options.isSuccess &&\n    (options.data?.meta?.rbac?.perms?.write === true ||\n      options.data?.meta?.rbac?.perms?.all === true);\n\n  const showEdit = () => (\n    <>\n      <Form title=\"Edit plan\" options={options} data={data} />\n    </>\n  );\n\n  if (options.isSuccess) {\n    return canWrite ? (\n      showEdit()\n    ) : (\n      <Redirect to={`${Paths.savingsPlanner}/${id}`} />\n    );\n  }\n  return null;\n};\n\nEdit.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default Edit;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, Route, Switch } from 'react-router-dom';\nimport { CaretLeftIcon } from '@patternfly/react-icons';\nimport { Card } from '@patternfly/react-core';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\n\nimport DetailsTab from './DetailsTab';\nimport StatisticsTab from './StatisticsTab';\nimport SavingsPlanner from './SavingsPlanner';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport { NotAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nimport Breadcrumbs from '../../Components/Breadcrumbs';\n\nimport { preflightRequest, readPlan } from '../../Api';\n\nimport useApi from '../../Utilities/useApi';\n\nimport SavingsPlanEdit from './Edit';\n\nconst SavingsPlan = () => {\n  let { id } = useParams();\n  const [preflightError, setPreFlightError] = useState(null);\n  let pageTitle = 'Details';\n  if (location.pathname.indexOf('/statistics') !== -1) {\n    pageTitle = 'Statistics';\n  } else if (location.pathname.indexOf('/edit') !== -1) {\n    pageTitle = 'Edit plan';\n  }\n  const [selectedId, setSelectedId] = useState(id);\n  const [\n    {\n      isSuccess,\n      error,\n      data: { rbac = {}, items: plans = [] },\n    },\n    setData,\n  ] = useApi({ rbac: {}, items: [] });\n  const queryParams = { id: [selectedId] };\n\n  useEffect(() => {\n    setSelectedId(id);\n    preflightRequest().catch((error) => {\n      setPreFlightError({ preflightError: error });\n    });\n    const fetchEndpoints = () => {\n      setData(readPlan({ params: queryParams }));\n    };\n\n    fetchEndpoints();\n  }, []);\n\n  const canWrite =\n    isSuccess && (rbac.perms?.write === true || rbac.perms?.all === true);\n  const tabsArray = [\n    {\n      id: 0,\n      name: (\n        <>\n          <CaretLeftIcon />\n          {'Back to Plans'}\n        </>\n      ),\n      link: `/savings-planner`,\n    },\n    { id: 1, name: 'Details', link: `/savings-planner/${selectedId}/details` },\n    {\n      id: 2,\n      name: 'Statistics',\n      link: `/savings-planner/${selectedId}/statistics`,\n    },\n  ];\n\n  const breadcrumbUrl = `/savings-planner/${selectedId}`;\n  const breadcrumbsItems = isSuccess\n    ? [\n        { title: 'Savings Planner', navigate: '/savings-planner' },\n        { title: plans[0].name, navigate: breadcrumbUrl },\n      ]\n    : [];\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n  return (\n    <>\n      {error && (\n        <>\n          <ApiErrorState message={error.error} />\n        </>\n      )}\n      {isSuccess && (\n        <>\n          <PageHeader>\n            <Breadcrumbs items={breadcrumbsItems} />\n            <PageHeaderTitle title={pageTitle} />\n          </PageHeader>\n          <Main>\n            <Card>\n              <Switch>\n                <Route path=\"/savings-planner/:id/statistics\">\n                  <StatisticsTab\n                    tabsArray={tabsArray}\n                    data={plans[0]}\n                    queryParams={queryParams}\n                  />\n                </Route>\n                <Route path=\"/savings-planner/:id/details\">\n                  <DetailsTab\n                    plans={plans}\n                    tabsArray={tabsArray}\n                    canWrite={canWrite}\n                  />\n                </Route>\n                <Route path=\"/savings-planner/:id/edit\">\n                  <SavingsPlanEdit data={plans[0]} />\n                </Route>\n                <Route path=\"/savings-planner/:id\">\n                  <DetailsTab\n                    plans={plans}\n                    tabsArray={tabsArray}\n                    canWrite={canWrite}\n                  />\n                </Route>\n                <Route exact path=\"/savings-planner\">\n                  <SavingsPlanner />\n                </Route>\n              </Switch>\n            </Card>\n          </Main>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default SavingsPlan;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Title,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  Button,\n} from '@patternfly/react-core';\nimport { AddCircleOIcon } from '@patternfly/react-icons';\nimport { useHistory } from 'react-router-dom';\n\nconst EmptyList = ({\n  label = '',\n  title = 'No items found.',\n  message = '',\n  canAdd = false,\n  path,\n}) => {\n  const history = useHistory();\n\n  return (\n    <EmptyState variant=\"full\">\n      <EmptyStateIcon icon={AddCircleOIcon} />\n      <Title size=\"lg\" headingLevel=\"h3\">\n        {title}\n      </Title>\n      <EmptyStateBody>{message}</EmptyStateBody>\n      {canAdd && (\n        <Button\n          key=\"add-item-button\"\n          variant=\"primary\"\n          aria-label={label}\n          onClick={() => {\n            history.push({\n              pathname: path,\n            });\n          }}\n        >\n          {label}\n        </Button>\n      )}\n    </EmptyState>\n  );\n};\n\nEmptyList.propTypes = {\n  canAdd: PropTypes.bool,\n  label: PropTypes.string,\n  message: PropTypes.string,\n  title: PropTypes.string,\n  path: PropTypes.string.isRequired,\n};\n\nexport default EmptyList;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { Paths } from '../../paths';\n\nimport { formatDateTime } from '../../Utilities/helpers';\n\nimport {\n  Card,\n  CardHeader,\n  CardHeaderMain,\n  CardActions,\n  CardTitle,\n  CardBody,\n  CardFooter,\n  Checkbox,\n  Dropdown,\n  DropdownItem,\n  KebabToggle,\n  Label,\n} from '@patternfly/react-core';\n\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\nimport styled from 'styled-components';\nimport { stringify } from 'query-string';\n\nimport { Link, useRouteMatch } from 'react-router-dom';\n// import useSelected from \"../../Utilities/useSelected\";\n\nconst CardLabel = styled.span`\n  margin-right: 5px;\n`;\n\nconst PlanCard = ({\n  isSuccess,\n  plan,\n  selected = [],\n  handleSelect = () => {},\n  canWrite,\n}) => {\n  const {\n    id,\n    automation_status,\n    category,\n    description,\n    frequency_period,\n    modified,\n    name,\n    template_details,\n  } = plan;\n  const [isCardKebabOpen, setIsCardKebabOpen] = useState(false);\n\n  const match = useRouteMatch();\n  let history = useHistory();\n\n  const redirectToJobExplorer = (templateId) => {\n    const { jobExplorer } = Paths;\n    const initialQueryParams = {\n      quick_date_range: 'last_30_days',\n      status: ['failed', 'successful'],\n      template_id: [templateId],\n    };\n    const search = stringify(initialQueryParams, { arrayFormat: 'bracket' });\n    history.push({\n      pathname: jobExplorer,\n      search,\n    });\n  };\n\n  const renderTemplateLink = (template) => {\n    return template && isSuccess ? (\n      <a onClick={() => redirectToJobExplorer(template.id)}>{template.name}</a>\n    ) : null;\n  };\n\n  const kebabDropDownItems = [\n    <React.Fragment key={id}>\n      <DropdownItem\n        key=\"edit\"\n        onClick={() => history.push(`${match.url}/${id}/edit`)}\n        position=\"right\"\n      >\n        Edit\n      </DropdownItem>\n      <DropdownItem\n        key=\"link\"\n        onClick={() => history.push(`${match.url}/${id}/edit#link_template`)}\n        position=\"right\"\n      >\n        Link template\n      </DropdownItem>\n    </React.Fragment>,\n  ];\n\n  return (\n    <Card isHoverable isCompact>\n      <CardHeader>\n        <CardHeaderMain>\n          <CardTitle>\n            <Link to={`${match.url}/${id}`}>{name}</Link>\n          </CardTitle>\n        </CardHeaderMain>\n        {canWrite && (\n          <CardActions>\n            <Dropdown\n              onSelect={() => {}}\n              toggle={\n                <KebabToggle\n                  onToggle={() => setIsCardKebabOpen(!isCardKebabOpen)}\n                />\n              }\n              isOpen={isCardKebabOpen}\n              isPlain\n              dropdownItems={kebabDropDownItems}\n              position={'right'}\n            />\n            <Checkbox\n              onChange={() => handleSelect(plan)}\n              isChecked={selected.some((row) => row.id === plan.id)}\n              aria-label=\"card checkbox\"\n              id=\"check-1\"\n              name=\"check1\"\n            />\n          </CardActions>\n        )}\n      </CardHeader>\n      <CardBody>\n        {description ? <p>{description}</p> : null}\n        <div>\n          <CardLabel>Frequency</CardLabel>{' '}\n          {frequency_period ? frequency_period : <em>None</em>}\n        </div>\n        <div>\n          <CardLabel>Template</CardLabel>{' '}\n          {template_details ? (\n            renderTemplateLink(template_details)\n          ) : (\n            <em>None</em>\n          )}\n        </div>\n        <div>\n          <CardLabel>Automation status</CardLabel>\n          {automation_status.status === 'successful' ? (\n            <Label variant=\"outline\" color=\"green\" icon={<CheckCircleIcon />}>\n              Running\n            </Label>\n          ) : (\n            <Label\n              variant=\"outline\"\n              color=\"red\"\n              icon={<ExclamationCircleIcon />}\n            >\n              Not Running\n            </Label>\n          )}\n        </div>\n        <div>\n          <CardLabel>Last updated</CardLabel>{' '}\n          <em>{formatDateTime(modified)}</em>\n        </div>\n      </CardBody>\n      <CardFooter>\n        <Label>{category}</Label>\n      </CardFooter>\n    </Card>\n  );\n};\n\nPlanCard.propTypes = {\n  isSuccess: PropTypes.bool.isRequired,\n  canWrite: PropTypes.bool.isRequired,\n  selected: PropTypes.array,\n  handleSelect: PropTypes.func,\n  plan: PropTypes.object,\n};\n\nexport default PlanCard;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Alert, Badge, Button, Tooltip } from '@patternfly/react-core';\nimport AlertModal from '../AlertModal';\n\nimport { getRelatedResourceDeleteCounts } from '../../Utilities/getRelatedResourceDeleteDetails';\n\nimport ErrorDetail from '../ErrorDetail';\n\nconst WarningMessage = styled(Alert)`\n  margin-top: 10px;\n`;\n\nconst Label = styled.span`\n  && {\n    margin-right: 10px;\n  }\n`;\n\nconst requiredField = (props) => {\n  const { name, username, image } = props;\n  if (!name && !username && !image) {\n    return new Error(\n      `One of 'name', 'username' or 'image' is required by ItemToDelete component.`\n    );\n  }\n  if (name) {\n    PropTypes.checkPropTypes(\n      {\n        name: PropTypes.string,\n      },\n      { name: props.name },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  if (username) {\n    PropTypes.checkPropTypes(\n      {\n        username: PropTypes.string,\n      },\n      { username: props.username },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  if (image) {\n    PropTypes.checkPropTypes(\n      {\n        image: PropTypes.string,\n      },\n      { image: props.image },\n      'prop',\n      'ItemToDelete'\n    );\n  }\n  return null;\n};\n\nconst ToolbarDeleteButton = ({\n  itemsToDelete,\n  pluralizedItemName = 'Items',\n  onDelete,\n  errorMessage = 'Error while deleting',\n  warningMessage = 'Are you sure that you want to delete this',\n  deleteDetailsRequests = [],\n  deleteMessage = 'Delete this?',\n  cannotDelete = (item) => !item,\n}) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [deleteDetails, setDeleteDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [deleteMessageError, setDeleteMessageError] = useState('');\n  const handleDelete = () => {\n    onDelete();\n    toggleModal();\n  };\n\n  const toggleModal = async (isOpen) => {\n    setIsLoading(true);\n    setDeleteDetails(null);\n    if (\n      isOpen &&\n      itemsToDelete.length === 1 &&\n      deleteDetailsRequests?.length > 0\n    ) {\n      const { results, error } = await getRelatedResourceDeleteCounts(\n        deleteDetailsRequests\n      );\n\n      if (error) {\n        setDeleteMessageError(error);\n      } else {\n        setDeleteDetails(results);\n      }\n    }\n    setIsLoading(false);\n    setIsModalOpen(isOpen);\n  };\n\n  const renderTooltip = () => {\n    const itemsUnableToDelete = itemsToDelete\n      .filter(cannotDelete)\n      .map((item) => item.name || item.username)\n      .join(', ');\n\n    if (itemsToDelete.some(cannotDelete)) {\n      return (\n        <div>\n          {errorMessage ? (\n            <>\n              <span>{errorMessage}</span>\n              <span>{`: ${itemsUnableToDelete}`}</span>\n            </>\n          ) : (\n            `You do not have permission to delete ${pluralizedItemName}: ${itemsUnableToDelete}`\n          )}\n        </div>\n      );\n    }\n    if (itemsToDelete.length) {\n      return 'Delete';\n    }\n    return 'Select a plan to delete';\n  };\n\n  const modalTitle = `Delete ${pluralizedItemName}?`;\n\n  const isDisabled =\n    itemsToDelete.length === 0 || itemsToDelete.some(cannotDelete);\n\n  const buildDeleteWarning = () => {\n    const deleteMessages = [];\n    if (warningMessage) {\n      deleteMessages.push(warningMessage);\n    }\n    if (deleteMessage) {\n      if (deleteDetails || itemsToDelete.length > 1) {\n        deleteMessages.push(deleteMessage);\n      }\n    }\n\n    return (\n      <div>\n        {deleteMessages.map((message) => (\n          <div aria-label={message} key={message}>\n            {message}\n          </div>\n        ))}\n        {deleteDetails &&\n          Object.entries(deleteDetails).map(([key, value]) => (\n            <div key={key} aria-label={`${key}: ${value}`}>\n              <Label>{key}</Label>\n              <Badge>{value}</Badge>\n            </div>\n          ))}\n      </div>\n    );\n  };\n\n  const shouldShowDeleteWarning =\n    warningMessage ||\n    (itemsToDelete.length === 1 && deleteDetails) ||\n    (itemsToDelete.length > 1 && deleteMessage);\n\n  if (deleteMessageError) {\n    return (\n      <AlertModal\n        isOpen={!!deleteMessageError}\n        title={'Error!'}\n        onClose={() => {\n          toggleModal(false);\n          setDeleteMessageError();\n        }}\n      >\n        <ErrorDetail error={deleteMessageError} />\n      </AlertModal>\n    );\n  }\n\n  return (\n    <>\n      <Tooltip content={renderTooltip()} position=\"top\">\n        <div>\n          <Button\n            variant=\"secondary\"\n            ouiaId=\"delete-button\"\n            spinnerAriaValueText={isLoading ? 'Loading' : undefined}\n            aria-label={'Delete'}\n            onClick={() => toggleModal(true)}\n            isDisabled={isDisabled}\n          >\n            {'Delete'}\n          </Button>\n        </div>\n      </Tooltip>\n\n      {isModalOpen && (\n        <AlertModal\n          variant=\"danger\"\n          title={modalTitle}\n          isOpen={isModalOpen}\n          onClose={() => toggleModal(false)}\n          actions={[\n            <Button\n              ouiaId=\"delete-modal-confirm\"\n              key=\"delete\"\n              variant=\"danger\"\n              aria-label={'confirm delete'}\n              isDisabled={Boolean(deleteDetails)}\n              onClick={handleDelete}\n            >\n              {'Delete'}\n            </Button>,\n            <Button\n              key=\"cancel\"\n              variant=\"link\"\n              aria-label={'cancel delete'}\n              onClick={() => toggleModal(false)}\n            >\n              {'Cancel'}\n            </Button>,\n          ]}\n        >\n          <div>{'This action will delete the following:'}</div>\n          {itemsToDelete.map((item) => (\n            <span key={item.id}>\n              <strong>{item.name || item.username || item.image}</strong>\n              <br />\n            </span>\n          ))}\n          {shouldShowDeleteWarning && (\n            <WarningMessage\n              variant=\"warning\"\n              isInline\n              title={buildDeleteWarning()}\n            />\n          )}\n        </AlertModal>\n      )}\n    </>\n  );\n};\n\nToolbarDeleteButton.propTypes = {\n  itemsToDelete: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: requiredField,\n      username: requiredField,\n      image: requiredField,\n    })\n  ).isRequired,\n  pluralizedItemName: PropTypes.string,\n  onDelete: PropTypes.func.isRequired,\n  errorMessage: PropTypes.string,\n  warningMessage: PropTypes.node,\n  deleteDetailsRequests: PropTypes.array,\n  cannotDelete: PropTypes.func,\n  deleteMessage: PropTypes.string,\n};\n\nexport default ToolbarDeleteButton;\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport {\n  Button,\n  Gallery,\n  PaginationVariant,\n  Grid,\n  GridItem,\n} from '@patternfly/react-core';\n\nimport {\n  deletePlan,\n  preflightRequest,\n  readPlanOptions,\n  readPlans,\n} from '../../Api';\nimport FilterableToolbar from '../../Components/Toolbar/';\nimport ApiErrorState from '../../Components/ApiErrorState';\nimport LoadingState from '../../Components/LoadingState';\nimport EmptyState from '../../Components/EmptyState';\nimport EmptyList from '../../Components/EmptyList';\nimport Pagination from '../../Components/Pagination';\nimport PlanCard from './PlanCard';\nimport { useQueryParams } from '../../Utilities/useQueryParams';\nimport useApi from '../../Utilities/useApi';\nimport { savingsPlanner } from '../../Utilities/constants';\nimport { notAuthorizedParams } from '../../Utilities/constants';\n\nimport ToolbarDeleteButton from '../../Components/Toolbar/ToolbarDeleteButton';\nimport useSelected from '../../Utilities/useSelected';\nimport { useDeleteItems } from '../../Utilities/useRequest';\nimport ErrorDetail from '../../Components/ErrorDetail';\nimport AlertModal from '../../Components/AlertModal';\n\nconst SavingsPlanner = () => {\n  const history = useHistory();\n  const { pathname } = useLocation();\n\n  const { queryParams, setFromPagination, setFromToolbar } = useQueryParams(\n    savingsPlanner.defaultParams\n  );\n  const [\n    {\n      isLoading,\n      isSuccess,\n      error,\n      data: { meta = {}, items: data = [] },\n    },\n    setData,\n  ] = useApi({ meta: {}, items: [] });\n  const [options, setOptions] = useApi({});\n  const [preflightError, setPreFlightError] = useState(null);\n\n  const combinedOptions = {\n    ...options.data,\n    name: [{ key: 'name', value: null }],\n  };\n\n  const fetchEndpoints = () => {\n    preflightRequest().catch((error) => {\n      setPreFlightError({ preflightError: error });\n    });\n    setData(readPlans({ params: queryParams }));\n    setOptions(readPlanOptions());\n  };\n\n  useEffect(() => {\n    fetchEndpoints();\n  }, [queryParams]);\n\n  const canWrite =\n    options.isSuccess &&\n    (options.data?.meta?.rbac?.perms?.write === true ||\n      options.data?.meta?.rbac?.perms?.all === true);\n\n  const { selected, isAllSelected, handleSelect, setSelected } =\n    useSelected(data);\n\n  const {\n    isLoading: deleteLoading,\n    deletionError,\n    deleteItems: deleteItems,\n    clearDeletionError,\n  } = useDeleteItems(\n    useCallback(async () => {\n      return Promise.all(\n        selected.map((plan) => deletePlan({ params: { id: plan.id } }))\n      );\n    }, [selected]),\n    {\n      qsConfig: queryParams,\n      allItemsSelected: isAllSelected,\n      fetchItems: fetchEndpoints,\n    }\n  );\n\n  const handleDelete = async () => {\n    await deleteItems();\n    setSelected([]);\n  };\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <React.Fragment>\n      <PageHeader>\n        <PageHeaderTitle title={'Savings Planner'} />\n        <FilterableToolbar\n          categories={combinedOptions}\n          filters={queryParams}\n          setFilters={setFromToolbar}\n          additionalControls={[\n            ...(canWrite\n              ? [\n                  <Button\n                    key=\"add-plan-button\"\n                    variant=\"primary\"\n                    aria-label=\"Add plan\"\n                    onClick={() => {\n                      history.push({\n                        pathname: `${pathname}/add`,\n                      });\n                    }}\n                  >\n                    Add plan\n                  </Button>,\n                ]\n              : []),\n            canWrite && (\n              <ToolbarDeleteButton\n                key=\"delete-plan-button\"\n                onDelete={handleDelete}\n                itemsToDelete={selected}\n                pluralizedItemName={'Savings plan'}\n              />\n            ),\n          ]}\n          pagination={\n            <Pagination\n              count={meta?.total_count}\n              params={{\n                limit: queryParams.limit,\n                offset: queryParams.offset,\n              }}\n              setPagination={setFromPagination}\n              isCompact\n            />\n          }\n        />\n      </PageHeader>\n      {preflightError && (\n        <Main>\n          <EmptyState {...preflightError} />\n        </Main>\n      )}\n      {error && (\n        <Main style={{ height: '100vh' }}>\n          <ApiErrorState message={error.error} />\n        </Main>\n      )}\n      {(isLoading || deleteLoading) && (\n        <Main style={{ height: '100vh' }}>\n          <LoadingState />\n        </Main>\n      )}\n      {isSuccess && data.length === 0 && (\n        <Main>\n          <EmptyList\n            label={'Add plan'}\n            title={'No plans added'}\n            message={\n              canWrite\n                ? 'No plans have been added yet. Add your first plan.'\n                : 'No plans have been added yet.'\n            }\n            canAdd={canWrite}\n            path={`${pathname}/add`}\n          />\n        </Main>\n      )}\n      {isSuccess && (\n        <Main>\n          <Grid hasGutter>\n            <GridItem span={12}>\n              <Gallery hasGutter>\n                {options.isSuccess &&\n                  data.map((datum) => (\n                    <PlanCard\n                      key={datum.id}\n                      isSuccess={options.isSuccess}\n                      selected={selected}\n                      plan={datum}\n                      handleSelect={handleSelect}\n                      canWrite={canWrite}\n                    />\n                  ))}\n              </Gallery>\n            </GridItem>\n            <GridItem span={12}>\n              <Pagination\n                count={meta?.total_count}\n                params={{\n                  limit: queryParams.limit,\n                  offset: queryParams.offset,\n                }}\n                setPagination={setFromPagination}\n                variant={PaginationVariant.bottom}\n              />\n            </GridItem>\n          </Grid>\n        </Main>\n      )}\n      {deletionError && (\n        <AlertModal\n          aria-label={'Deletion error'}\n          isOpen={deletionError}\n          onClose={clearDeletionError}\n          title={'Error'}\n          variant=\"error\"\n        >\n          {'Failed to delete one or more plans.'}\n          <ErrorDetail error={deletionError} />\n        </AlertModal>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default SavingsPlanner;\n","import { useState } from 'react';\n\n/**\n * useSelected hook provides a way to read and update a selected list\n * Param: array of list items\n * Returns: {\n *  selected: array of selected list items\n *  isAllSelected: boolean that indicates if all items are selected\n *  handleSelect: function that adds and removes items from selected list\n *  setSelected: setter function\n * }\n */\n\nexport default function useSelected(list = []) {\n  const [selected, setSelected] = useState([]);\n  const isAllSelected = selected.length > 0 && selected.length === list.length;\n\n  const handleSelect = (row) => {\n    if (selected.some((s) => s.id === row.id)) {\n      setSelected((prevState) => [...prevState.filter((i) => i.id !== row.id)]);\n    } else {\n      setSelected((prevState) => [...prevState, row]);\n    }\n  };\n  return { selected, isAllSelected, handleSelect, setSelected };\n}\n","export const actions = {\n  SET_NAME: 'SET_NAME',\n  SET_CATEGORY: 'SET_CATEGORY',\n  SET_DESCRIPTION: 'SET_DESCRIPTION',\n  SET_MANUAL_TIME: 'SET_MANUAL_TIME',\n  SET_HOSTS: 'SET_HOSTS',\n  SET_FREQUENCY_PERIOD: 'SET_FREQUENCY_PERIOD',\n  SET_TASKS: 'SET_TASKS',\n  SET_TEMPLATE_ID: 'SET_TEMPLATE_ID',\n};\n","import { useReducer } from 'react';\n\nimport { actions } from './constants';\n\nconst formatPayload = (data) => {\n  data.tasks = data.tasks.map((task, index) => ({\n    task,\n    task_order: index + 1,\n  }));\n\n  // these two are fields the api expects but we don't\n  // have form elements for in the MVP.\n  data.hourly_rate = 50;\n  data.frequency_per_period = 1;\n\n  return data;\n};\n\nconst convertTasks = (tasks = []) => {\n  if (tasks?.length) {\n    return tasks\n      .sort((a, b) => a.task_order - b.task_order)\n      .map(({ task }) => task);\n  }\n  return undefined;\n};\n\nconst usePlanData = (initial) => {\n  const formReducer = (state, { type, value }) => {\n    switch (type) {\n      /* v1 api reducers */\n      case actions.SET_NAME:\n        return {\n          ...state,\n          name: value,\n        };\n      case actions.SET_CATEGORY:\n        return {\n          ...state,\n          category: value,\n        };\n      case actions.SET_DESCRIPTION:\n        return {\n          ...state,\n          description: value,\n        };\n      case actions.SET_MANUAL_TIME:\n        return {\n          ...state,\n          manual_time: value,\n        };\n\n      case actions.SET_HOSTS:\n        return {\n          ...state,\n          hosts: value,\n        };\n      case actions.SET_FREQUENCY_PERIOD:\n        return {\n          ...state,\n          frequency_period: value,\n        };\n      case actions.SET_TASKS:\n        return {\n          ...state,\n          tasks: value,\n        };\n      case actions.SET_TEMPLATE_ID:\n        return {\n          ...state,\n          template_id: value,\n        };\n      default:\n        throw new Error(\n          `usePlanData reducer action type ${type} was not found.`\n        );\n    }\n  };\n\n  const [formData, dispatch] = useReducer(formReducer, {\n    name: initial?.name || '',\n    category: initial?.category || 'system',\n    description: initial?.description || '',\n    manual_time: initial?.manual_time || 240,\n    hosts: initial?.hosts || 1,\n    frequency_period: initial?.frequency_period || 'weekly',\n    tasks: convertTasks(initial?.tasks) || [],\n    template_id: initial?.template_id || -2,\n  });\n\n  return {\n    formData,\n    requestPayload: formatPayload({ ...formData }),\n    dispatch,\n  };\n};\n\nexport default usePlanData;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Form,\n  FormGroup,\n  Grid,\n  Select,\n  SelectOption,\n  TextInput,\n} from '@patternfly/react-core';\n\nimport { actions } from './constants';\n\nconst Details = ({ options, formData, dispatch }) => {\n  const { name, category, description, manual_time, hosts, frequency_period } =\n    formData;\n\n  const [categoryIsOpen, setCategoryIsOpen] = useState(false);\n  const [manualTimeIsOpen, setManualTimeIsOpen] = useState(false);\n  const [frequencyPeriodIsOpen, setFrequencyPeriodIsOpen] = useState(false);\n\n  return (\n    <Form>\n      {options?.data && (\n        <Grid hasGutter md={6}>\n          <FormGroup\n            label=\"What do you want to automate?\"\n            isRequired\n            fieldId=\"name-field\"\n          >\n            <TextInput\n              isRequired\n              placeholder=\"Example: Provision NGINX server\"\n              type=\"text\"\n              id=\"name-field\"\n              name=\"name\"\n              value={name}\n              onChange={(newName) =>\n                dispatch({\n                  type: actions.SET_NAME,\n                  value: newName,\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"What type of task is it?\"\n            isRequired\n            fieldId=\"category-field\"\n          >\n            <Select\n              id=\"category-field\"\n              isOpen={categoryIsOpen}\n              variant={'single'}\n              aria-label={'Plan category selector'}\n              onToggle={() => setCategoryIsOpen(!categoryIsOpen)}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_CATEGORY,\n                  value: selection,\n                });\n                setCategoryIsOpen(false);\n              }}\n              selections={category}\n            >\n              {(options.data?.category || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n          <FormGroup\n            label=\"Enter a description of your automation plan\"\n            fieldId=\"description-field\"\n          >\n            <TextInput\n              type=\"text\"\n              placeholder=\"Place description here\"\n              id=\"description-field\"\n              name=\"description\"\n              value={description}\n              onChange={(newDescription) =>\n                dispatch({\n                  type: actions.SET_DESCRIPTION,\n                  value: newDescription,\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"How long does it take to do this manually?\"\n            fieldId=\"manual-time-field\"\n          >\n            <Select\n              id=\"manual-time-field\"\n              isOpen={manualTimeIsOpen}\n              variant={'single'}\n              placeholderText=\"Select amount\"\n              aria-label={'Plan time selector'}\n              onToggle={() => setManualTimeIsOpen(!manualTimeIsOpen)}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_MANUAL_TIME,\n                  value: selection,\n                });\n                setManualTimeIsOpen(false);\n              }}\n              selections={manual_time}\n            >\n              {(options.data?.manual_time || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n          <FormGroup\n            label=\"How many hosts do you plan to run this on?\"\n            fieldId=\"hosts-field\"\n          >\n            <TextInput\n              type=\"number\"\n              placeholder=\"Enter number of hosts\"\n              id=\"hosts-field\"\n              name=\"hosts\"\n              value={hosts}\n              onChange={(newHosts) =>\n                dispatch({\n                  type: actions.SET_HOSTS,\n                  value: newHosts,\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup\n            label=\"How often do you do this?\"\n            fieldId=\"frequency-period-field\"\n          >\n            <Select\n              id=\"frequency-period-field\"\n              isOpen={frequencyPeriodIsOpen}\n              variant={'single'}\n              placeholderText=\"Select frequency period\"\n              aria-label={'Plan frequency period selector'}\n              onToggle={() => {\n                setFrequencyPeriodIsOpen(!frequencyPeriodIsOpen);\n              }}\n              onSelect={(_event, selection) => {\n                dispatch({\n                  type: actions.SET_FREQUENCY_PERIOD,\n                  value: selection,\n                });\n                setFrequencyPeriodIsOpen(false);\n              }}\n              selections={frequency_period}\n            >\n              {(options.data?.frequency_period || []).map(({ key, value }) => (\n                <SelectOption key={key} value={key}>\n                  {value}\n                </SelectOption>\n              ))}\n            </Select>\n          </FormGroup>\n        </Grid>\n      )}\n    </Form>\n  );\n};\n\nDetails.propTypes = {\n  options: PropTypes.object.isRequired,\n  formData: PropTypes.object.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Details;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  DataList,\n  DataListAction,\n  DataListItem,\n  DataListCell,\n  DataListItemRow,\n  DataListControl,\n  DataListDragButton,\n  DataListItemCells,\n  Form,\n  FormGroup,\n  Grid,\n  InputGroup,\n  TextInput,\n  Title,\n} from '@patternfly/react-core';\nimport { PlusIcon, TimesIcon } from '@patternfly/react-icons';\n\nimport { actions } from './constants';\n\nconst TaskSection = styled.div`\n  margin-top: 20px;\n`;\n\nconst TaskTitle = styled(Title)`\n  margin-bottom: 10px;\n`;\n\nconst TaskDeleteButton = styled(Button)`\n  padding: 0 16px;\n`;\n\nconst DeleteTaskActionSection = styled(DataListAction)`\n  padding: 6px 0;\n`;\n\nconst TaskRow = styled(DataListItemRow)`\n  align-items: center;\n`;\n\nconst Tasks = ({ tasks, dispatch }) => {\n  const setTasks = (val) => {\n    dispatch({ type: actions.SET_TASKS, value: val });\n  };\n\n  const [taskToAdd, setTaskToAdd] = useState('');\n\n  const [liveText, setLiveText] = useState('');\n  const [id, setId] = useState('');\n\n  const onDragStart = (newId) => {\n    setId(newId);\n    setLiveText(`Dragging started for task ${newId}.`);\n  };\n\n  const onDragMove = (oldIndex, newIndex) => {\n    setLiveText(\n      `Dragging task ${id}.  Task ${oldIndex} is now task ${newIndex}.`\n    );\n  };\n\n  const onDragCancel = () => {\n    setLiveText('Dragging cancelled. Tasks list order is unchanged.');\n  };\n\n  const onDragFinish = (newItemOrder) => {\n    setLiveText('Dragging finsihed');\n    setTasks([...newItemOrder]);\n  };\n\n  const appendTask = () => {\n    setTasks([...tasks, taskToAdd]);\n    setTaskToAdd('');\n  };\n\n  const handleTextKeyDown = (e) => {\n    if (e.key && e.key === 'Enter') {\n      e.preventDefault();\n      appendTask();\n    }\n  };\n\n  const removeTask = (task) => {\n    setTasks(tasks.filter((t) => t !== task));\n  };\n\n  return (\n    <>\n      <Form>\n        <Grid hasGutter md={6}>\n          <FormGroup\n            label=\"What tasks do you need to accomplish this plan?\"\n            fieldId=\"task-field\"\n          >\n            <InputGroup>\n              <TextInput\n                placeholder=\"Enter a description of each task\"\n                type=\"text\"\n                id=\"task-field\"\n                name=\"task\"\n                value={taskToAdd}\n                onChange={(newTaskName) => setTaskToAdd(newTaskName)}\n                onKeyDown={handleTextKeyDown}\n              />\n              <Button\n                onClick={appendTask}\n                variant=\"control\"\n                aria-label=\"Add task\"\n              >\n                <PlusIcon />\n              </Button>\n            </InputGroup>\n          </FormGroup>\n        </Grid>\n      </Form>\n      {tasks.length > 0 && (\n        <TaskSection>\n          <TaskTitle headingLevel=\"h4\" size=\"xl\">\n            Tasks\n          </TaskTitle>\n          <DataList\n            aria-label=\"Draggable list to reorder and remove tasks.\"\n            isCompact\n            onDragFinish={onDragFinish}\n            onDragStart={onDragStart}\n            onDragMove={onDragMove}\n            onDragCancel={onDragCancel}\n            itemOrder={tasks}\n          >\n            {tasks.map((task, index) => (\n              <DataListItem\n                aria-labelledby={`cell-${index + 1}`}\n                id={task}\n                key={index + 1}\n              >\n                <TaskRow>\n                  <DataListControl>\n                    <DataListDragButton\n                      aria-label=\"Reorder\"\n                      aria-labelledby={`cell-${index + 1}`}\n                      aria-describedby=\"Press space or enter to begin dragging, and use the arrow keys to navigate up or down. Press enter to confirm the drag, or any other key to cancel the drag operation.\"\n                      aria-pressed=\"false\"\n                    />\n                  </DataListControl>\n                  <DataListItemCells\n                    dataListCells={[\n                      <DataListCell key={index + 1}>\n                        <span id={`cell-${index + 1}`}>{`${\n                          index + 1\n                        }. ${task}`}</span>\n                      </DataListCell>,\n                    ]}\n                  />\n                  <DeleteTaskActionSection aria-label=\"Actions\">\n                    <TaskDeleteButton\n                      onClick={() => removeTask(task)}\n                      variant=\"plain\"\n                      aria-label=\"Delete\"\n                    >\n                      <TimesIcon />\n                    </TaskDeleteButton>\n                  </DeleteTaskActionSection>\n                </TaskRow>\n              </DataListItem>\n            ))}\n          </DataList>\n        </TaskSection>\n      )}\n      <div className=\"pf-screen-reader\" aria-live=\"assertive\">\n        {liveText}\n      </div>\n    </>\n  );\n};\n\nTasks.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Tasks;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { parse, stringify } from 'query-string';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport {\n  Button,\n  Form,\n  FormGroup,\n  PaginationVariant,\n} from '@patternfly/react-core';\nimport {\n  TableComposable,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n} from '@patternfly/react-table';\n\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nimport LoadingState from '../../../Components/LoadingState';\nimport EmptyState from '../../../Components/EmptyState';\nimport NoResults from '../../../Components/NoResults';\nimport ApiErrorState from '../../../Components/ApiErrorState';\nimport Pagination from '../../../Components/Pagination';\n\nimport { notAuthorizedParams } from '../../../Utilities/constants';\nimport { useQueryParams } from '../../../Utilities/useQueryParams';\nimport useApi from '../../../Utilities/useApi';\n\nimport {\n  preflightRequest,\n  readJobExplorer,\n  readJobExplorerOptions,\n} from '../../../Api';\n\nimport FilterableToolbar from '../../../Components/Toolbar/';\n\nimport { actions } from './constants';\n\nconst ListFooter = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst initialQueryParams = {\n  group_by: 'template',\n  limit: 10,\n  group_by_time: false,\n  offset: 0,\n};\n\nconst Templates = ({ template_id, dispatch: formDispatch }) => {\n  const { pathname, hash, search } = useLocation();\n  const history = useHistory();\n\n  const [preflightError, setPreFlightError] = useState(null);\n  const [\n    {\n      isLoading,\n      isSuccess,\n      error,\n      data: { meta = {}, items: templates = [] },\n    },\n    setData,\n  ] = useApi({ meta: {}, items: [] });\n  const [options, setOptions] = useApi({});\n\n  const {\n    queryParams,\n    setFromPagination,\n    setFromToolbar,\n    dispatch: queryParamsDispatch,\n  } = useQueryParams(initialQueryParams);\n\n  useEffect(() => {\n    insights.chrome.appNavClick({ id: 'job-explorer', secondaryNav: true });\n\n    preflightRequest().catch((error) => {\n      setPreFlightError({ preflightError: error });\n    });\n\n    const initialSearchParams = parse(search, {\n      arrayFormat: 'bracket',\n      parseBooleans: true,\n      parseNumbers: true,\n    });\n\n    queryParamsDispatch({\n      type: 'REINITIALIZE',\n      value: {\n        ...initialQueryParams,\n        ...initialSearchParams,\n      },\n    });\n  }, []);\n\n  useEffect(() => {\n    setData(readJobExplorer({ params: queryParams }));\n    setOptions(readJobExplorerOptions({ params: queryParams }));\n    history.replace({\n      pathname,\n      hash,\n      search: stringify(queryParams, { arrayFormat: 'bracket' }),\n    });\n  }, [queryParams]);\n\n  if (preflightError?.preflightError?.status === 403) {\n    return <NotAuthorized {...notAuthorizedParams} />;\n  }\n\n  return (\n    <>\n      {preflightError && <EmptyState {...preflightError} />}\n\n      {!preflightError && (\n        <Form>\n          <FormGroup\n            label=\"Link a template to this plan:\"\n            fieldId=\"template-link-field\"\n          >\n            <FilterableToolbar\n              hideQuickDateRange\n              hideSortOptions\n              categories={options.data}\n              filters={queryParams}\n              setFilters={setFromToolbar}\n              pagination={\n                <Pagination\n                  count={meta?.count}\n                  params={{\n                    limit: queryParams.limit,\n                    offset: queryParams.offset,\n                  }}\n                  setPagination={setFromPagination}\n                  isCompact\n                />\n              }\n            />\n            {error && <ApiErrorState message={error.error} />}\n            {isLoading && <LoadingState />}\n            {isSuccess && templates.length <= 0 && <NoResults />}\n            {isSuccess && templates.length > 0 && (\n              <TableComposable\n                aria-label=\"Template link table\"\n                variant=\"compact\"\n              >\n                <Thead>\n                  <Tr>\n                    <Th />\n                    <Th key=\"template-name-column-header\">Name</Th>\n                  </Tr>\n                </Thead>\n                <Tbody>\n                  {templates.map(({ id, name }) => (\n                    <Tr key={`template-detail-${id}`}>\n                      <Td\n                        key={`template-detail-${id}-radio-td`}\n                        select={{\n                          rowIndex: id,\n                          onSelect: (event, isSelected, value) =>\n                            formDispatch({\n                              type: actions.SET_TEMPLATE_ID,\n                              value,\n                            }),\n                          isSelected: template_id === id,\n                          variant: 'radio',\n                        }}\n                      />\n                      <Td>{name}</Td>\n                    </Tr>\n                  ))}\n                </Tbody>\n              </TableComposable>\n            )}\n            <ListFooter>\n              <div>\n                {template_id !== -2 && (\n                  <Button\n                    key=\"clear-selection-button\"\n                    variant=\"link\"\n                    aria-label=\"Clear selection\"\n                    onClick={() => {\n                      formDispatch({\n                        type: actions.SET_TEMPLATE_ID,\n                        value: -2,\n                      });\n                    }}\n                  >\n                    Clear selection\n                  </Button>\n                )}\n              </div>\n              <Pagination\n                count={meta?.count}\n                params={{\n                  limit: queryParams.limit,\n                  offset: queryParams.offset,\n                }}\n                setPagination={setFromPagination}\n                variant={PaginationVariant.bottom}\n              />\n            </ListFooter>\n          </FormGroup>\n        </Form>\n      )}\n    </>\n  );\n};\n\nTemplates.propTypes = {\n  template_id: PropTypes.number.isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default Templates;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory, useLocation, Redirect } from 'react-router-dom';\n\nimport { Wizard } from '@patternfly/react-core';\n\nimport { Paths } from '../../../paths';\n\nimport useApi from '../../../Utilities/useApi';\nimport usePlanData from './usePlanData';\n\nimport { createPlan, updatePlan } from '../../../Api';\n\nimport Details from './Details';\nimport Tasks from './Tasks';\nimport Templates from './Templates';\n\nconst Form = ({ title, options, data = {} }) => {\n  const history = useHistory();\n  const { hash, pathname } = useLocation();\n\n  const [startStep, setStartStep] = useState(null);\n\n  const [{ isSuccess }, setData] = useApi({ meta: {}, items: [] });\n  const { formData, requestPayload, dispatch } = usePlanData(data);\n\n  const steps = [\n    {\n      step_number: 1,\n      id: 'details',\n      name: 'Details',\n      component: (\n        <Details options={options} formData={formData} dispatch={dispatch} />\n      ),\n    },\n    {\n      step_number: 2,\n      id: 'tasks',\n      name: 'Tasks',\n      component: <Tasks tasks={formData.tasks} dispatch={dispatch} />,\n    },\n    {\n      step_number: 3,\n      id: 'link_template',\n      name: 'Link template',\n      component: (\n        <Templates template_id={formData.template_id} dispatch={dispatch} />\n      ),\n      nextButtonText: 'Save',\n    },\n  ];\n\n  useEffect(() => {\n    if (pathname.indexOf('/add') === -1 && hash) {\n      setStartStep(steps.find((step) => `#${step.id}` === hash).step_number);\n    } else {\n      history.replace({\n        hash: 'details',\n      });\n      setStartStep(1);\n    }\n  }, []);\n\n  const onStepChange = (newStep) => {\n    history.replace({\n      hash: newStep.id,\n    });\n  };\n\n  const onSave = () => {\n    data?.id\n      ? setData(\n          updatePlan({\n            id: data?.id,\n            params: requestPayload,\n          })\n        )\n      : setData(\n          createPlan({\n            params: requestPayload,\n          })\n        );\n  };\n\n  const onClose = () => {\n    history.push({\n      pathname: Paths.savingsPlanner,\n    });\n  };\n\n  return (\n    <>\n      {isSuccess && <Redirect to={Paths.savingsPlanner} />}\n      {startStep && (\n        <Wizard\n          navAriaLabel={`${title} steps`}\n          mainAriaLabel={`${title} content`}\n          steps={steps}\n          onGoToStep={onStepChange}\n          onNext={onStepChange}\n          onBack={onStepChange}\n          onSave={onSave}\n          onClose={onClose}\n          startAtStep={startStep}\n          height=\"calc(100vh - 285px)\"\n        />\n      )}\n    </>\n  );\n};\n\nForm.propTypes = {\n  title: PropTypes.string.isRequired,\n  options: PropTypes.object.isRequired,\n  data: PropTypes.object,\n};\n\nForm.defaultProps = {\n  data: {},\n};\n\nexport default Form;\n","export const jobExplorer = {\n  attributes: [\n    'id',\n    'status',\n    'job_type',\n    'started',\n    'finished',\n    'elapsed',\n    'created',\n    'cluster_name',\n    'org_name',\n    'most_failed_tasks',\n  ],\n  defaultParams: {\n    status: ['successful', 'failed'],\n    quick_date_range: 'last_30_days',\n    job_type: ['workflowjob', 'job'],\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    sort_options: 'created',\n    sort_order: 'desc',\n    only_root_workflows_and_standalone_jobs: false,\n    limit: 5,\n    offset: 0,\n  },\n};\n\nexport const roi = {\n  defaultParams: {\n    status: ['successful'],\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    quick_date_range: 'roi_last_year',\n    job_type: ['job'],\n    sort_options: 'template_productivity_score',\n    sort_order: 'desc',\n    start_date: null,\n    end_date: null,\n    limit: 25,\n    only_root_workflows_and_standalone_jobs: true,\n    attributes: [\n      'successful_hosts_total',\n      'successful_elapsed_total',\n      'total_org_count',\n      'total_cluster_count',\n    ],\n    group_by: 'template',\n    group_by_time: false,\n  },\n};\n\nexport const organizationStatistics = {\n  defaultParams: {\n    status: [],\n    org_id: [],\n    quick_date_range: 'last_30_days',\n    limit: 5,\n    offset: 0,\n    job_type: ['workflowjob', 'job'],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    start_date: null,\n    end_date: null,\n  },\n};\n\nexport const clusters = {\n  defaultParams: {\n    status: ['successful', 'failed'],\n    quick_date_range: 'last_30_days',\n    job_type: ['workflowjob', 'job'],\n    group_by_time: true,\n    org_id: [],\n    cluster_id: [],\n    template_id: [],\n    inventory_id: [],\n    only_root_workflows_and_standalone_jobs: false,\n  },\n};\n\nexport const savingsPlanner = {\n  defaultParams: {\n    template_id: [],\n    inventory_id: [],\n    automation_status: [],\n    category: [],\n    frequency_period: [],\n    name: '',\n    limit: 5,\n    offset: 0,\n    sort_options: 'modified',\n    sort_order: 'desc',\n  },\n};\n\nexport const notAuthorizedParams = {\n  title: 'RBAC Access Denied',\n  description:\n    'User does not have privileges to perform this action. Contact your organization adminstrator(s) for more information.',\n};\n","export async function getRelatedResourceDeleteCounts(requests) {\n  const results = {};\n  let error = null;\n  let hasCount = false;\n\n  try {\n    await Promise.all(\n      requests.map(async ({ request, label }) => {\n        const {\n          items: { count },\n        } = await request();\n        if (count > 0) {\n          results[label] = count;\n          hasCount = true;\n        }\n      })\n    );\n  } catch (err) {\n    error = err;\n  }\n\n  return {\n    results: hasCount && results,\n    error,\n  };\n}\n\nexport const relatedResourceDeleteRequests = {\n  savingsPlan: (selected, readRecordApi) => [\n    {\n      request: async () =>\n        readRecordApi({\n          params: { id: [selected.id] },\n        }),\n      label: 'Plan',\n    },\n  ],\n};\n","import moment from 'moment';\n\n/*\n * isNumeric - return true if input is a real number\n */\nexport function isNumeric(val) {\n  if (val === 0 || val === '0') {\n    return true;\n  }\n\n  if (parseInt(val)) {\n    return true;\n  }\n\n  if (parseFloat(val)) {\n    return true;\n  }\n\n  return false;\n}\n\nexport function trimStr(str) {\n  return str.toString().replace(/['\"]+/g, '');\n}\n\nexport function formatDateTime(dateTime) {\n  return moment(new Date(dateTime).toISOString()).format('M/D/YYYY h:mm:ssa');\n}\n\nexport function formatDate(date) {\n  return moment(date).format('YYYY-MM-DD');\n}\n\nexport function formatSeconds(seconds) {\n  return moment().startOf('day').seconds(seconds).format('H:mm:ss');\n}\n\nexport function getTotal(data) {\n  if (!data) {\n    return;\n  } else {\n    let total = 0;\n    data.forEach((datum) => {\n      total += parseInt(datum.count);\n    });\n    return total;\n  }\n}\n\nexport function formatPercentage(val) {\n  if (isNaN(val)) {\n    return;\n  }\n\n  return `${val}%`;\n}\n\nexport const capitalize = (s) => {\n  if (typeof s !== 'string') {\n    return '';\n  }\n\n  return s.charAt(0).toUpperCase() + s.slice(1);\n};\n\nexport function calculateDelta(a, b) {\n  if (!isNumeric(a) || !isNumeric(b)) {\n    return 0;\n  }\n\n  // never return less than zero ...\n  if (b - a < 0) {\n    return 0;\n  }\n\n  return b - a;\n}\n\nexport function convertMinsToMs(mins) {\n  if (!parseInt(mins)) {\n    return 0;\n  }\n\n  return mins * 60000;\n}\n\nexport function convertMsToMins(ms) {\n  if (!parseInt(ms)) {\n    return 0;\n  }\n\n  return ms / 60000;\n}\n\nexport function convertSecondsToMins(seconds) {\n  if (!parseInt(seconds)) {\n    return 0;\n  }\n\n  return seconds / 60;\n}\n\nexport function convertMinsToSeconds(mins) {\n  if (!parseInt(mins) || parseInt(mins) < 0) {\n    return 0;\n  }\n\n  return +parseInt(mins) * 60;\n}\n\nexport function convertSecondsToHours(seconds) {\n  if (!parseInt(seconds)) {\n    return 0;\n  }\n\n  return seconds / 3600;\n}\n\nexport function convertWithCommas(arr, key) {\n  const split = arr.reduce((strs, datum) => {\n    strs.push(datum[key]);\n    return strs;\n  }, []);\n  return split.join(', ');\n}\n\nexport function formatJobType(type) {\n  return type === 'job' ? 'Playbook run' : 'Workflow job';\n}\n\nexport function formatJobStatus(status) {\n  return status === 'successful' ? 'Success' : 'Failed';\n}\n\nexport function formatJobDetailsURL(baseURL, jobId) {\n  const subDirectory1 = 'job';\n  const subDirectory2 = 'details';\n  return `${baseURL}/#/${subDirectory1}/${jobId}/${subDirectory2}/`;\n}\n","import { useState, useEffect, useReducer } from 'react';\n\nconst dataFetchReducer = (state, action) => {\n  switch (action.type) {\n    case 'FETCH_INIT':\n      return {\n        ...state,\n        isLoading: true,\n        isSuccess: false,\n        error: null,\n      };\n    case 'FETCH_SUCCESS':\n      return {\n        ...state,\n        isLoading: false,\n        isSuccess: true,\n        error: null,\n        data: action.payload,\n      };\n    case 'FETCH_FAILURE':\n      return {\n        ...state,\n        isLoading: false,\n        isSuccess: false,\n        error: action.payload,\n      };\n    case 'UPDATE_DATA':\n      return {\n        ...state,\n        data: action.payload,\n      };\n    default:\n      throw new Error();\n  }\n};\n\nconst useApi = (initialData, postprocess = (d) => d) => {\n  const [request, setRequest] = useState(null);\n\n  const [state, dispatch] = useReducer(dataFetchReducer, {\n    isLoading: false,\n    isSuccess: false,\n    error: null,\n    data: initialData,\n  });\n\n  useEffect(() => {\n    // Prevent fetching nothing\n    if (!request) {\n      return;\n    }\n\n    // Initialize\n    let didCancel = false;\n    dispatch({ type: 'FETCH_INIT' });\n\n    // Fetching\n    request\n      .then((data) => {\n        if (!didCancel) {\n          dispatch({\n            type: 'FETCH_SUCCESS',\n            payload: postprocess(data),\n          });\n        }\n      })\n      .catch((e) => {\n        if (!didCancel) {\n          dispatch({ type: 'FETCH_FAILURE', payload: e });\n        }\n      });\n\n    return () => {\n      didCancel = true;\n    };\n  }, [request]);\n\n  const setData = (data) => {\n    dispatch({ type: 'UPDATE_DATA', payload: data });\n  };\n\n  return [state, setRequest, setData];\n};\n\nexport default useApi;\n","import { useReducer } from 'react';\nimport moment from 'moment';\n\nimport { formatDate } from '../Utilities/helpers';\n\nexport const useQueryParams = (initial) => {\n  const initialWithCalculatedParams = {\n    ...initial,\n    ...(initial.sort_options &&\n      initial.sort_order && {\n        sort_by: `${initial.sort_options}:${initial.sort_order}`,\n      }),\n  };\n\n  const paramsReducer = (state, { type, value }) => {\n    switch (type) {\n      /* v0 api reducers */\n      case 'SET_STARTDATE':\n        return { ...state, startDate: value };\n      case 'SET_ENDDATE':\n        return { ...state, endDate: value };\n      case 'SET_ID':\n        if (!parseInt(value)) {\n          const { id: ignored, ...rest } = state;\n          return rest;\n        }\n\n        return { ...state, id: parseInt(value) };\n      case 'SET_SEVERITY':\n        if (value.severity === '') {\n          const { severity: ignored, ...rest } = state;\n          return rest;\n        }\n\n        return { ...state, ...value };\n\n      /* v1 api reducers */\n      case 'SET_LIMIT':\n        return isNaN(value)\n          ? { ...state, limit: 5 } // Defaults back to 5\n          : { ...state, limit: parseInt(value) };\n      case 'SET_OFFSET':\n        return isNaN(value)\n          ? { ...state, offset: 0 } // Defaults back to 0\n          : { ...state, offset: parseInt(value) };\n      case 'SET_ATTRIBUTES':\n      case 'SET_JOB_TYPE':\n      case 'SET_STATUS':\n      case 'SET_ORG':\n      case 'SET_CLUSTER':\n      case 'SET_TEMPLATE':\n      case 'SET_AUTOMATION_STATUS':\n      case 'SET_CATEGORY':\n      case 'SET_FREQUENCY':\n      case 'SET_NAME':\n      case 'SET_ROOT_WORKFLOWS_AND_JOBS':\n      case 'SET_INVENTORY':\n        return { ...state, ...value };\n      case 'SET_QUICK_DATE_RANGE': {\n        let newState = { ...state };\n        if (value !== 'custom') {\n          newState = { ...newState, start_date: null, end_date: null };\n        }\n\n        newState = { ...newState, ...value };\n        return newState;\n      }\n\n      case 'SET_START_DATE':\n      case 'SET_END_DATE': {\n        let newValues = {};\n        Object.entries(value).forEach(([key, value]) => {\n          newValues[key] = formatDate(value);\n        });\n        return { ...state, ...newValues };\n      }\n\n      case 'SET_SORT_OPTIONS': {\n        return {\n          ...state,\n          sort_options: value.sort_options,\n          ...(state.sort_order && {\n            sort_by: `${value.sort_options}:${state.sort_order}`,\n          }), // Update sort by\n        };\n      }\n\n      case 'SET_SORT_ORDER': {\n        return {\n          ...state,\n          sort_order: value.sort_order,\n          ...(state.sort_options && {\n            sort_by: `${state.sort_options}:${value.sort_order}`,\n          }), // Update sort by\n        };\n      }\n\n      case 'REINITIALIZE':\n        return { ...value };\n      case 'RESET_FILTER':\n        return { ...initialWithCalculatedParams };\n      default:\n        throw new Error(`The query params reducer action (${type}) not found.`);\n    }\n  };\n\n  const [queryParams, dispatch] = useReducer(paramsReducer, {\n    ...initialWithCalculatedParams,\n  });\n\n  const actionMapper = {\n    status: 'SET_STATUS',\n    quick_date_range: 'SET_QUICK_DATE_RANGE',\n    job_type: 'SET_JOB_TYPE',\n    org_id: 'SET_ORG',\n    cluster_id: 'SET_CLUSTER',\n    template_id: 'SET_TEMPLATE',\n    sort_order: 'SET_SORT_ORDER',\n    sort_options: `SET_SORT_OPTIONS`,\n    start_date: 'SET_START_DATE',\n    end_date: 'SET_END_DATE',\n    automation_status: 'SET_AUTOMATION_STATUS',\n    category: 'SET_CATEGORY',\n    frequency_period: 'SET_FREQUENCY',\n    name: 'SET_NAME',\n    only_root_workflows_and_standalone_jobs: 'SET_ROOT_WORKFLOWS_AND_JOBS',\n    inventory_id: 'SET_INVENTORY',\n  };\n\n  return {\n    queryParams,\n    dispatch,\n    setFromToolbar: (varName, value = null) => {\n      if (!varName) {\n        dispatch({ type: 'RESET_FILTER' });\n      } else {\n        dispatch({ type: actionMapper[varName], value: { [varName]: value } });\n      }\n    },\n    setFromPagination: (offset, limit = null) => {\n      dispatch({ type: 'SET_OFFSET', value: offset });\n      if (limit) {\n        dispatch({ type: 'SET_LIMIT', value: limit });\n      }\n    },\n    /* v0 api usage after this line */\n    setSeverity: (severity) =>\n      dispatch({ type: 'SET_SEVERITY', value: { severity } }),\n    setEndDate: () => {\n      const endDate = moment().format('YYYY-MM-DD');\n      dispatch({ type: 'SET_ENDDATE', value: endDate });\n    },\n    setId: (value) => dispatch({ type: 'SET_ID', value }),\n    setStartDate: (days) => {\n      let startDate;\n      if (days === 7) {\n        startDate = moment().subtract(1, 'week').format('YYYY-MM-DD');\n      }\n\n      if (days === 14) {\n        startDate = moment().subtract(2, 'weeks').format('YYYY-MM-DD');\n      }\n\n      if (days === 31) {\n        startDate = moment().subtract(1, 'month').format('YYYY-MM-DD');\n      } else {\n        startDate = moment().subtract(days, 'days').format('YYYY-MM-DD');\n      }\n\n      dispatch({ type: 'SET_STARTDATE', value: startDate });\n    },\n    setStartDateAsString: (value) => dispatch({ type: 'SET_STARTDATE', value }),\n  };\n};\n","import { Paths } from '../paths';\nimport { stringify } from 'query-string';\n\nconst useRedirect = (history, path) => (query) => {\n  const search = stringify(query, { arrayFormat: 'bracket' });\n  history.push({\n    pathname: Paths[path],\n    search,\n  });\n};\n\nexport default useRedirect;\n","import { useEffect, useState, useCallback } from 'react';\nimport useIsMounted from './useIsMounted';\n\n/*\n * The useRequest hook accepts a request function and returns an object with\n * five values:\n *   request: a function to call to invoke the request\n *   result: the value returned from the request function (once invoked)\n *   isLoading: boolean state indicating whether the request is in active/in flight\n *   error: any caught error resulting from the request\n *   setValue: setter to explicitly set the result value\n *\n * The hook also accepts an optional second parameter which is a default\n * value to set as result before the first time the request is made.\n */\nexport default function useRequest(makeRequest, initialValue) {\n  const [result, setResult] = useState(initialValue);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const isMounted = useIsMounted();\n\n  return {\n    result,\n    error,\n    isLoading,\n    request: useCallback(\n      async (...args) => {\n        setIsLoading(true);\n        try {\n          const response = await makeRequest(...args);\n          if (isMounted.current) {\n            setResult(response);\n            setError(null);\n          }\n        } catch (err) {\n          if (isMounted.current) {\n            setError(err);\n            setResult(initialValue);\n          }\n        } finally {\n          if (isMounted.current) {\n            setIsLoading(false);\n          }\n        }\n      },\n      [makeRequest]\n    ),\n    setValue: setResult,\n  };\n}\n\n/*\n * Provides controls for \"dismissing\" an error message\n *\n * Params: an error object\n * Returns: { error, dismissError }\n *   The returned error object is the same object passed in via the paremeter,\n *   until the dismissError function is called, at which point the returned\n *   error will be set to null on the subsequent render.\n */\nexport function useDismissableError(error) {\n  const [showError, setShowError] = useState(false);\n\n  useEffect(() => {\n    if (error) {\n      setShowError(true);\n    }\n  }, [error]);\n\n  return {\n    error: showError ? error : null,\n    dismissError: () => {\n      setShowError(false);\n    },\n  };\n}\n\n/*\n * Hook to assist with deletion of items from a paginated item list. The page\n * url will be navigated back one page on a paginated list if needed to prevent\n * the UI from re-loading an empty set and displaying a \"No items found\"\n * message.\n *\n * Params: a callback function that will be invoked in order to delete items,\n *   and an object with structure { qsConfig, allItemsSelected, fetchItems }\n * Returns: { isLoading, deleteItems, deletionError, clearDeletionError }\n */\nexport function useDeleteItems(\n  makeRequest,\n  { qsConfig = null, fetchItems = null } = {}\n) {\n  const {\n    error: requestError,\n    isLoading,\n    request,\n  } = useRequest(makeRequest, null);\n  const { error, dismissError } = useDismissableError(requestError);\n  const deleteItems = async () => {\n    await request();\n    if (!qsConfig) {\n      return;\n    }\n    fetchItems();\n  };\n\n  return {\n    isLoading,\n    deleteItems,\n    deletionError: error,\n    clearDeletionError: dismissError,\n  };\n}\n","import { useEffect, useRef } from 'react';\n\nexport default function useIsMounted() {\n  const isMounted = useRef(null);\n  useEffect(() => {\n    isMounted.current = true;\n    return () => {\n      isMounted.current = false;\n    };\n  });\n  return isMounted;\n}\n","var map = {\n\t\"./af\": 42786,\n\t\"./af.js\": 42786,\n\t\"./ar\": 30867,\n\t\"./ar-dz\": 14130,\n\t\"./ar-dz.js\": 14130,\n\t\"./ar-kw\": 96135,\n\t\"./ar-kw.js\": 96135,\n\t\"./ar-ly\": 56440,\n\t\"./ar-ly.js\": 56440,\n\t\"./ar-ma\": 47702,\n\t\"./ar-ma.js\": 47702,\n\t\"./ar-sa\": 16040,\n\t\"./ar-sa.js\": 16040,\n\t\"./ar-tn\": 37100,\n\t\"./ar-tn.js\": 37100,\n\t\"./ar.js\": 30867,\n\t\"./az\": 31083,\n\t\"./az.js\": 31083,\n\t\"./be\": 9808,\n\t\"./be.js\": 9808,\n\t\"./bg\": 68338,\n\t\"./bg.js\": 68338,\n\t\"./bm\": 67438,\n\t\"./bm.js\": 67438,\n\t\"./bn\": 8905,\n\t\"./bn-bd\": 76225,\n\t\"./bn-bd.js\": 76225,\n\t\"./bn.js\": 8905,\n\t\"./bo\": 11560,\n\t\"./bo.js\": 11560,\n\t\"./br\": 1278,\n\t\"./br.js\": 1278,\n\t\"./bs\": 80622,\n\t\"./bs.js\": 80622,\n\t\"./ca\": 2468,\n\t\"./ca.js\": 2468,\n\t\"./cs\": 5822,\n\t\"./cs.js\": 5822,\n\t\"./cv\": 50877,\n\t\"./cv.js\": 50877,\n\t\"./cy\": 47373,\n\t\"./cy.js\": 47373,\n\t\"./da\": 24780,\n\t\"./da.js\": 24780,\n\t\"./de\": 59740,\n\t\"./de-at\": 60217,\n\t\"./de-at.js\": 60217,\n\t\"./de-ch\": 60894,\n\t\"./de-ch.js\": 60894,\n\t\"./de.js\": 59740,\n\t\"./dv\": 5300,\n\t\"./dv.js\": 5300,\n\t\"./el\": 50837,\n\t\"./el.js\": 50837,\n\t\"./en-au\": 78348,\n\t\"./en-au.js\": 78348,\n\t\"./en-ca\": 77925,\n\t\"./en-ca.js\": 77925,\n\t\"./en-gb\": 22243,\n\t\"./en-gb.js\": 22243,\n\t\"./en-ie\": 46436,\n\t\"./en-ie.js\": 46436,\n\t\"./en-il\": 47207,\n\t\"./en-il.js\": 47207,\n\t\"./en-in\": 44175,\n\t\"./en-in.js\": 44175,\n\t\"./en-nz\": 76319,\n\t\"./en-nz.js\": 76319,\n\t\"./en-sg\": 31662,\n\t\"./en-sg.js\": 31662,\n\t\"./eo\": 92915,\n\t\"./eo.js\": 92915,\n\t\"./es\": 55655,\n\t\"./es-do\": 55251,\n\t\"./es-do.js\": 55251,\n\t\"./es-mx\": 96112,\n\t\"./es-mx.js\": 96112,\n\t\"./es-us\": 71146,\n\t\"./es-us.js\": 71146,\n\t\"./es.js\": 55655,\n\t\"./et\": 5603,\n\t\"./et.js\": 5603,\n\t\"./eu\": 77763,\n\t\"./eu.js\": 77763,\n\t\"./fa\": 76959,\n\t\"./fa.js\": 76959,\n\t\"./fi\": 11897,\n\t\"./fi.js\": 11897,\n\t\"./fil\": 42549,\n\t\"./fil.js\": 42549,\n\t\"./fo\": 94694,\n\t\"./fo.js\": 94694,\n\t\"./fr\": 94470,\n\t\"./fr-ca\": 63049,\n\t\"./fr-ca.js\": 63049,\n\t\"./fr-ch\": 52330,\n\t\"./fr-ch.js\": 52330,\n\t\"./fr.js\": 94470,\n\t\"./fy\": 5044,\n\t\"./fy.js\": 5044,\n\t\"./ga\": 29295,\n\t\"./ga.js\": 29295,\n\t\"./gd\": 2101,\n\t\"./gd.js\": 2101,\n\t\"./gl\": 38794,\n\t\"./gl.js\": 38794,\n\t\"./gom-deva\": 27884,\n\t\"./gom-deva.js\": 27884,\n\t\"./gom-latn\": 23168,\n\t\"./gom-latn.js\": 23168,\n\t\"./gu\": 95349,\n\t\"./gu.js\": 95349,\n\t\"./he\": 24206,\n\t\"./he.js\": 24206,\n\t\"./hi\": 30094,\n\t\"./hi.js\": 30094,\n\t\"./hr\": 30316,\n\t\"./hr.js\": 30316,\n\t\"./hu\": 22138,\n\t\"./hu.js\": 22138,\n\t\"./hy-am\": 11423,\n\t\"./hy-am.js\": 11423,\n\t\"./id\": 29218,\n\t\"./id.js\": 29218,\n\t\"./is\": 90135,\n\t\"./is.js\": 90135,\n\t\"./it\": 90626,\n\t\"./it-ch\": 10150,\n\t\"./it-ch.js\": 10150,\n\t\"./it.js\": 90626,\n\t\"./ja\": 39183,\n\t\"./ja.js\": 39183,\n\t\"./jv\": 24286,\n\t\"./jv.js\": 24286,\n\t\"./ka\": 12105,\n\t\"./ka.js\": 12105,\n\t\"./kk\": 47772,\n\t\"./kk.js\": 47772,\n\t\"./km\": 18758,\n\t\"./km.js\": 18758,\n\t\"./kn\": 79282,\n\t\"./kn.js\": 79282,\n\t\"./ko\": 33730,\n\t\"./ko.js\": 33730,\n\t\"./ku\": 1408,\n\t\"./ku.js\": 1408,\n\t\"./ky\": 33291,\n\t\"./ky.js\": 33291,\n\t\"./lb\": 36841,\n\t\"./lb.js\": 36841,\n\t\"./lo\": 55466,\n\t\"./lo.js\": 55466,\n\t\"./lt\": 57010,\n\t\"./lt.js\": 57010,\n\t\"./lv\": 37595,\n\t\"./lv.js\": 37595,\n\t\"./me\": 39861,\n\t\"./me.js\": 39861,\n\t\"./mi\": 35493,\n\t\"./mi.js\": 35493,\n\t\"./mk\": 95966,\n\t\"./mk.js\": 95966,\n\t\"./ml\": 87341,\n\t\"./ml.js\": 87341,\n\t\"./mn\": 5115,\n\t\"./mn.js\": 5115,\n\t\"./mr\": 10370,\n\t\"./mr.js\": 10370,\n\t\"./ms\": 9847,\n\t\"./ms-my\": 41237,\n\t\"./ms-my.js\": 41237,\n\t\"./ms.js\": 9847,\n\t\"./mt\": 72126,\n\t\"./mt.js\": 72126,\n\t\"./my\": 56165,\n\t\"./my.js\": 56165,\n\t\"./nb\": 64924,\n\t\"./nb.js\": 64924,\n\t\"./ne\": 16744,\n\t\"./ne.js\": 16744,\n\t\"./nl\": 93901,\n\t\"./nl-be\": 59814,\n\t\"./nl-be.js\": 59814,\n\t\"./nl.js\": 93901,\n\t\"./nn\": 83877,\n\t\"./nn.js\": 83877,\n\t\"./oc-lnc\": 92135,\n\t\"./oc-lnc.js\": 92135,\n\t\"./pa-in\": 15858,\n\t\"./pa-in.js\": 15858,\n\t\"./pl\": 64495,\n\t\"./pl.js\": 64495,\n\t\"./pt\": 89520,\n\t\"./pt-br\": 57971,\n\t\"./pt-br.js\": 57971,\n\t\"./pt.js\": 89520,\n\t\"./ro\": 96459,\n\t\"./ro.js\": 96459,\n\t\"./ru\": 21793,\n\t\"./ru.js\": 21793,\n\t\"./sd\": 40950,\n\t\"./sd.js\": 40950,\n\t\"./se\": 10490,\n\t\"./se.js\": 10490,\n\t\"./si\": 90124,\n\t\"./si.js\": 90124,\n\t\"./sk\": 64249,\n\t\"./sk.js\": 64249,\n\t\"./sl\": 14985,\n\t\"./sl.js\": 14985,\n\t\"./sq\": 51104,\n\t\"./sq.js\": 51104,\n\t\"./sr\": 49131,\n\t\"./sr-cyrl\": 79915,\n\t\"./sr-cyrl.js\": 79915,\n\t\"./sr.js\": 49131,\n\t\"./ss\": 85893,\n\t\"./ss.js\": 85893,\n\t\"./sv\": 98760,\n\t\"./sv.js\": 98760,\n\t\"./sw\": 91172,\n\t\"./sw.js\": 91172,\n\t\"./ta\": 27333,\n\t\"./ta.js\": 27333,\n\t\"./te\": 23110,\n\t\"./te.js\": 23110,\n\t\"./tet\": 52095,\n\t\"./tet.js\": 52095,\n\t\"./tg\": 27321,\n\t\"./tg.js\": 27321,\n\t\"./th\": 9041,\n\t\"./th.js\": 9041,\n\t\"./tk\": 19005,\n\t\"./tk.js\": 19005,\n\t\"./tl-ph\": 75768,\n\t\"./tl-ph.js\": 75768,\n\t\"./tlh\": 89444,\n\t\"./tlh.js\": 89444,\n\t\"./tr\": 72397,\n\t\"./tr.js\": 72397,\n\t\"./tzl\": 28254,\n\t\"./tzl.js\": 28254,\n\t\"./tzm\": 51106,\n\t\"./tzm-latn\": 30699,\n\t\"./tzm-latn.js\": 30699,\n\t\"./tzm.js\": 51106,\n\t\"./ug-cn\": 9288,\n\t\"./ug-cn.js\": 9288,\n\t\"./uk\": 67691,\n\t\"./uk.js\": 67691,\n\t\"./ur\": 13795,\n\t\"./ur.js\": 13795,\n\t\"./uz\": 6791,\n\t\"./uz-latn\": 60588,\n\t\"./uz-latn.js\": 60588,\n\t\"./uz.js\": 6791,\n\t\"./vi\": 65666,\n\t\"./vi.js\": 65666,\n\t\"./x-pseudo\": 14378,\n\t\"./x-pseudo.js\": 14378,\n\t\"./yo\": 75805,\n\t\"./yo.js\": 75805,\n\t\"./zh-cn\": 83839,\n\t\"./zh-cn.js\": 83839,\n\t\"./zh-hk\": 55726,\n\t\"./zh-hk.js\": 55726,\n\t\"./zh-mo\": 99807,\n\t\"./zh-mo.js\": 99807,\n\t\"./zh-tw\": 74152,\n\t\"./zh-tw.js\": 74152\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 46700;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as PFPagination } from '@patternfly/react-core';\nvar perPageOptions = [\n    { title: '5', value: 5 },\n    { title: '10', value: 10 },\n    { title: '15', value: 15 },\n    { title: '20', value: 20 },\n    { title: '25', value: 25 },\n];\n;\nvar Pagination = function (_a) {\n    var _b = _a.count, count = _b === void 0 ? 0 : _b, params = _a.params, setPagination = _a.setPagination, props = __rest(_a, [\"count\", \"params\", \"setPagination\"]);\n    var offset = params.offset, limit = params.limit;\n    var currentPage = Math.floor(offset / limit + 1);\n    var returnOffsetVal = function (page) { return (page - 1) * limit; };\n    return (React.createElement(PFPagination, __assign({ itemCount: count, widgetId: \"aa-pagination\", perPageOptions: perPageOptions, perPage: limit, page: currentPage, onPerPageSelect: function (_event, perPage, page) {\n            setPagination(returnOffsetVal(page), perPage);\n        }, onSetPage: function (_event, page) {\n            setPagination(returnOffsetVal(page));\n        } }, props)));\n};\nPagination.propTypes = {\n    count: PropTypes.number,\n    params: PropTypes.exact({\n        offset: PropTypes.number.isRequired,\n        limit: PropTypes.number.isRequired,\n    }).isRequired,\n    setPagination: PropTypes.func.isRequired,\n};\nexport default Pagination;\n","import Pagination from './Pagination';\nexport default Pagination;\n"],"sourceRoot":""}